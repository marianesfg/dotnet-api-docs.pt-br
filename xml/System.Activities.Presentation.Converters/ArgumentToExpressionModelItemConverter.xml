<Type Name="ArgumentToExpressionModelItemConverter" FullName="System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ddd42b335302cc55a49f38edf57ce43d20e0e25b" /><Meta Name="ms.sourcegitcommit" Value="9802d4c6745a8ae514b26f144fb3969265b224ba" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="12/22/2018" /><Meta Name="ms.locfileid" Value="53750979" /></Metadata><TypeSignature Language="C#" Value="public class ArgumentToExpressionModelItemConverter : System.Windows.Data.IMultiValueConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ArgumentToExpressionModelItemConverter extends System.Object implements class System.Windows.Data.IMultiValueConverter" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class ArgumentToExpressionModelItemConverter&#xA;Implements IMultiValueConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ArgumentToExpressionModelItemConverter : System::Windows::Data::IMultiValueConverter" />
  <TypeSignature Language="F#" Value="type ArgumentToExpressionModelItemConverter = class&#xA;    interface IMultiValueConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Data.IMultiValueConverter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="242a8-101">Define o mapeamento entre os argumentos e os itens de modelo de expressão e fornece a funcionalidade para converter entre esses objetos.</span><span class="sxs-lookup"><span data-stu-id="242a8-101">Defines the mapping between arguments and expression model items and provides the functionality to convert between these objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="242a8-102">Este conversor pode ser usado para associar dados a um <xref:System.Activities.Presentation.View.ExpressionTextBox> ou outro controle do WPF.</span><span class="sxs-lookup"><span data-stu-id="242a8-102">This converter can be used to bind data to an <xref:System.Activities.Presentation.View.ExpressionTextBox> or other WPF control.</span></span> <span data-ttu-id="242a8-103">Para obter mais informações, consulte [usando um ExpressionTextBox em um editor de propriedade personalizada](https://go.microsoft.com/fwlink/?LinkID=224791).</span><span class="sxs-lookup"><span data-stu-id="242a8-103">For more information, see [Using an ExpressionTextBox in a custom property editor](https://go.microsoft.com/fwlink/?LinkID=224791).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArgumentToExpressionModelItemConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArgumentToExpressionModelItemConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="242a8-104">Inicializa uma nova instância da classe <see cref="T:System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter" />.</span><span class="sxs-lookup"><span data-stu-id="242a8-104">Initializes a new instance of the <see cref="T:System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public object Convert (object[] values, Type targetType, object parameter, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Convert(object[] values, class System.Type targetType, object parameter, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function Convert (values As Object(), targetType As Type, parameter As Object, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Convert(cli::array &lt;System::Object ^&gt; ^ values, Type ^ targetType, System::Object ^ parameter, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member Convert : obj[] * Type * obj * System.Globalization.CultureInfo -&gt; obj&#xA;override this.Convert : obj[] * Type * obj * System.Globalization.CultureInfo -&gt; obj" Usage="argumentToExpressionModelItemConverter.Convert (values, targetType, parameter, culture)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Data.IMultiValueConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="values"><span data-ttu-id="242a8-105">Uma matriz que contém o argumento a ser convertido.</span><span class="sxs-lookup"><span data-stu-id="242a8-105">An array that contains the argument to convert.</span></span> <span data-ttu-id="242a8-106">Somente o item de matriz no índice 1 é usado.</span><span class="sxs-lookup"><span data-stu-id="242a8-106">Only the array item at index 1 is used.</span></span></param>
        <param name="targetType"><span data-ttu-id="242a8-107">Não usado nesta implementação.</span><span class="sxs-lookup"><span data-stu-id="242a8-107">Not used in this implementation.</span></span></param>
        <param name="parameter"><span data-ttu-id="242a8-108">Não usado nesta implementação.</span><span class="sxs-lookup"><span data-stu-id="242a8-108">Not used in this implementation.</span></span></param>
        <param name="culture"><span data-ttu-id="242a8-109">Não usado nesta implementação.</span><span class="sxs-lookup"><span data-stu-id="242a8-109">Not used in this implementation.</span></span></param>
        <summary><span data-ttu-id="242a8-110">Converte o argumento especificado em um item de modelo da expressão.</span><span class="sxs-lookup"><span data-stu-id="242a8-110">Converts the specified argument to an expression model item.</span></span></summary>
        <returns><span data-ttu-id="242a8-111">Um objeto que contém o item de modelo da expressão.</span><span class="sxs-lookup"><span data-stu-id="242a8-111">An object that contains the expression model item.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertBack">
      <MemberSignature Language="C#" Value="public object[] ConvertBack (object value, Type[] targetTypes, object parameter, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] ConvertBack(object value, class System.Type[] targetTypes, object parameter, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertBack (value As Object, targetTypes As Type(), parameter As Object, culture As CultureInfo) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Object ^&gt; ^ ConvertBack(System::Object ^ value, cli::array &lt;Type ^&gt; ^ targetTypes, System::Object ^ parameter, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member ConvertBack : obj * Type[] * obj * System.Globalization.CultureInfo -&gt; obj[]&#xA;override this.ConvertBack : obj * Type[] * obj * System.Globalization.CultureInfo -&gt; obj[]" Usage="argumentToExpressionModelItemConverter.ConvertBack (value, targetTypes, parameter, culture)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Data.IMultiValueConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="targetTypes" Type="System.Type[]" />
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="242a8-112">O item de modelo a converter.</span><span class="sxs-lookup"><span data-stu-id="242a8-112">The model item to convert.</span></span></param>
        <param name="targetTypes"><span data-ttu-id="242a8-113">Não usado nesta implementação.</span><span class="sxs-lookup"><span data-stu-id="242a8-113">Not used in this implementation.</span></span></param>
        <param name="parameter"><span data-ttu-id="242a8-114">Não usado nesta implementação.</span><span class="sxs-lookup"><span data-stu-id="242a8-114">Not used in this implementation.</span></span></param>
        <param name="culture"><span data-ttu-id="242a8-115">Não usado nesta implementação.</span><span class="sxs-lookup"><span data-stu-id="242a8-115">Not used in this implementation.</span></span></param>
        <summary><span data-ttu-id="242a8-116">Converte o item de modelo da expressão especificado para um argumento.</span><span class="sxs-lookup"><span data-stu-id="242a8-116">Converts the specified expression model item to an argument.</span></span></summary>
        <returns><span data-ttu-id="242a8-117">Um objeto que contém o argumento.</span><span class="sxs-lookup"><span data-stu-id="242a8-117">An object that contains the argument.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>