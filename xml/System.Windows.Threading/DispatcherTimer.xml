<Type Name="DispatcherTimer" FullName="System.Windows.Threading.DispatcherTimer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0dd0e4caeeda8fb99923da39b3470b069d82c651" /><Meta Name="ms.sourcegitcommit" Value="9e3550fb2088d4faf2043f0acb29da4555519937" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="12/12/2018" /><Meta Name="ms.locfileid" Value="53291490" /></Metadata><TypeSignature Language="C#" Value="public class DispatcherTimer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DispatcherTimer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Threading.DispatcherTimer" />
  <TypeSignature Language="VB.NET" Value="Public Class DispatcherTimer" />
  <TypeSignature Language="C++ CLI" Value="public ref class DispatcherTimer" />
  <TypeSignature Language="F#" Value="type DispatcherTimer = class" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="385db-101">Um temporizador que é integrado à fila <see cref="T:System.Windows.Threading.Dispatcher" /> que é processada em um intervalo de tempo especificado e com uma prioridade especificada.</span><span class="sxs-lookup"><span data-stu-id="385db-101">A timer that is integrated into the <see cref="T:System.Windows.Threading.Dispatcher" /> queue which is processed at a specified interval of time and at a specified priority.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="385db-102">O <xref:System.Windows.Threading.DispatcherTimer> é reavaliada na parte superior de cada <xref:System.Windows.Threading.Dispatcher> loop.</span><span class="sxs-lookup"><span data-stu-id="385db-102">The <xref:System.Windows.Threading.DispatcherTimer> is reevaluated at the top of every <xref:System.Windows.Threading.Dispatcher> loop.</span></span>  
  
 <span data-ttu-id="385db-103">Temporizadores não são garantidos para ser executado exatamente quando ocorre o intervalo de tempo, mas eles são garantidos para não executar antes que ocorra o intervalo de tempo.</span><span class="sxs-lookup"><span data-stu-id="385db-103">Timers are not guaranteed to execute exactly when the time interval occurs, but they are guaranteed to not execute before the time interval occurs.</span></span>  <span data-ttu-id="385db-104">Isso ocorre porque <xref:System.Windows.Threading.DispatcherTimer> operações são colocadas no <xref:System.Windows.Threading.Dispatcher> fila, como outras operações.</span><span class="sxs-lookup"><span data-stu-id="385db-104">This is because <xref:System.Windows.Threading.DispatcherTimer> operations are placed on the <xref:System.Windows.Threading.Dispatcher> queue like other operations.</span></span>  <span data-ttu-id="385db-105">Quando o <xref:System.Windows.Threading.DispatcherTimer> operação é executada depende de outros trabalhos na fila e suas prioridades.</span><span class="sxs-lookup"><span data-stu-id="385db-105">When the <xref:System.Windows.Threading.DispatcherTimer> operation executes is dependent on the other jobs in the queue and their priorities.</span></span>  
  
 <span data-ttu-id="385db-106">Se um <xref:System.Timers.Timer?displayProperty=nameWithType> é usado em uma [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] aplicativo, vale a pena observar que o <xref:System.Timers.Timer?displayProperty=nameWithType> é executado em um thread diferente do [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] thread.</span><span class="sxs-lookup"><span data-stu-id="385db-106">If a <xref:System.Timers.Timer?displayProperty=nameWithType> is used in a [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] application, it is worth noting that the <xref:System.Timers.Timer?displayProperty=nameWithType> runs on a different thread than the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] thread.</span></span>  <span data-ttu-id="385db-107">Para acessar objetos na [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] thread, é necessário lançar a operação para o <xref:System.Windows.Threading.Dispatcher> da [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] thread usando <xref:System.Windows.Threading.Dispatcher.Invoke%2A> ou <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="385db-107">In order to access objects on the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] thread, it is necessary to post the operation onto the <xref:System.Windows.Threading.Dispatcher> of the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] thread using <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="385db-108">Motivos para usar um <xref:System.Windows.Threading.DispatcherTimer> em vez de um <xref:System.Timers.Timer?displayProperty=nameWithType> são que o <xref:System.Windows.Threading.DispatcherTimer> é executado no mesmo thread que o <xref:System.Windows.Threading.Dispatcher> e um <xref:System.Windows.Threading.DispatcherPriority> podem ser definidos na <xref:System.Windows.Threading.DispatcherTimer>.</span><span class="sxs-lookup"><span data-stu-id="385db-108">Reasons for using a <xref:System.Windows.Threading.DispatcherTimer> as opposed to a <xref:System.Timers.Timer?displayProperty=nameWithType> are that the <xref:System.Windows.Threading.DispatcherTimer> runs on the same thread as the <xref:System.Windows.Threading.Dispatcher> and a <xref:System.Windows.Threading.DispatcherPriority> can be set on the <xref:System.Windows.Threading.DispatcherTimer>.</span></span>  
  
 <span data-ttu-id="385db-109">Um <xref:System.Windows.Threading.DispatcherTimer> manterá um objeto ativo sempre que os métodos do objeto são associados para o temporizador.</span><span class="sxs-lookup"><span data-stu-id="385db-109">A <xref:System.Windows.Threading.DispatcherTimer> will keep an object alive whenever the object's methods are bound to the timer.</span></span>  
  
## Examples  
 <span data-ttu-id="385db-110">O exemplo a seguir cria uma <xref:System.Windows.Threading.DispatcherTimer> que atualiza o conteúdo de um <xref:System.Windows.Controls.Label> e chama o <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> método no <xref:System.Windows.Input.CommandManager>.</span><span class="sxs-lookup"><span data-stu-id="385db-110">The following example creates a <xref:System.Windows.Threading.DispatcherTimer> that updates the contents of a <xref:System.Windows.Controls.Label> and calls the <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> method on the <xref:System.Windows.Input.CommandManager>.</span></span>  
  
 <span data-ttu-id="385db-111">Um <xref:System.Windows.Threading.DispatcherTimer> objeto chamado `dispatcherTimer` é criado.</span><span class="sxs-lookup"><span data-stu-id="385db-111">A <xref:System.Windows.Threading.DispatcherTimer> object named `dispatcherTimer` is created.</span></span>  <span data-ttu-id="385db-112">O manipulador de eventos `dispatcherTimer_Tick` é adicionado para o <xref:System.Windows.Threading.DispatcherTimer.Tick> eventos de `dispatcherTimer`.</span><span class="sxs-lookup"><span data-stu-id="385db-112">The event handler `dispatcherTimer_Tick` is added to the <xref:System.Windows.Threading.DispatcherTimer.Tick> event of `dispatcherTimer`.</span></span>  <span data-ttu-id="385db-113">O <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> é definido como 1 segundo usando um <xref:System.Windows.Duration.TimeSpan%2A> objeto e o temporizador é iniciado.</span><span class="sxs-lookup"><span data-stu-id="385db-113">The <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> is set to 1 second using a <xref:System.Windows.Duration.TimeSpan%2A> object, and the timer is started.</span></span>  
  
 [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimerinit)]
 [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimerinit)]  
  
 <span data-ttu-id="385db-114">O <xref:System.Windows.Threading.DispatcherTimer.Tick> atualizações do manipulador de eventos uma <xref:System.Windows.Controls.Label> que exibe o atual em segundo lugar, e ele chama <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> no <xref:System.Windows.Input.CommandManager>.</span><span class="sxs-lookup"><span data-stu-id="385db-114">The <xref:System.Windows.Threading.DispatcherTimer.Tick> event handler updates a <xref:System.Windows.Controls.Label> that displays the current second, and it calls <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> on the <xref:System.Windows.Input.CommandManager>.</span></span>  
  
 [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimer](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimer)]
 [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimer](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimer)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="385db-115">Inicializa uma nova instância da classe <see cref="T:System.Windows.Threading.DispatcherTimer" />.</span><span class="sxs-lookup"><span data-stu-id="385db-115">Initializes a new instance of the <see cref="T:System.Windows.Threading.DispatcherTimer" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DispatcherTimer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherTimer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DispatcherTimer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="385db-116">Inicializa uma nova instância da classe <see cref="T:System.Windows.Threading.DispatcherTimer" />.</span><span class="sxs-lookup"><span data-stu-id="385db-116">Initializes a new instance of the <see cref="T:System.Windows.Threading.DispatcherTimer" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="385db-117"><xref:System.Windows.Threading.DispatcherTimer> é executado o <xref:System.Windows.Threading.Dispatcher> do thread atual em <xref:System.Windows.Threading.DispatcherPriority.Background> prioridade.</span><span class="sxs-lookup"><span data-stu-id="385db-117"><xref:System.Windows.Threading.DispatcherTimer> runs on the <xref:System.Windows.Threading.Dispatcher> of the current thread at <xref:System.Windows.Threading.DispatcherPriority.Background> priority.</span></span>  <span data-ttu-id="385db-118">Para especificar outro <xref:System.Windows.Threading.Dispatcher>, use o seguinte construtor: <xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="385db-118">To specify a different <xref:System.Windows.Threading.Dispatcher>, use the following constructor: <xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DispatcherTimer (System.Windows.Threading.DispatcherPriority priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Threading.DispatcherPriority priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (priority As DispatcherPriority)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DispatcherTimer(System::Windows::Threading::DispatcherPriority priority);" />
      <MemberSignature Language="F#" Value="new System.Windows.Threading.DispatcherTimer : System.Windows.Threading.DispatcherPriority -&gt; System.Windows.Threading.DispatcherTimer" Usage="new System.Windows.Threading.DispatcherTimer priority" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
      </Parameters>
      <Docs>
        <param name="priority"><span data-ttu-id="385db-119">A prioridade na qual o temporizador deve ser invocado.</span><span class="sxs-lookup"><span data-stu-id="385db-119">The priority at which to invoke the timer.</span></span></param>
        <summary><span data-ttu-id="385db-120">Inicializa uma nova instância da classe <see cref="T:System.Windows.Threading.DispatcherTimer" /> que processa eventos de temporizador na prioridade especificada.</span><span class="sxs-lookup"><span data-stu-id="385db-120">Initializes a new instance of the <see cref="T:System.Windows.Threading.DispatcherTimer" /> class which processes timer events at the specified priority.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="385db-121"><xref:System.Windows.Threading.DispatcherTimer> é executado no <xref:System.Windows.Threading.Dispatcher> do thread atual.</span><span class="sxs-lookup"><span data-stu-id="385db-121"><xref:System.Windows.Threading.DispatcherTimer> runs on the <xref:System.Windows.Threading.Dispatcher> of the current thread.</span></span>  <span data-ttu-id="385db-122">Para especificar outro <xref:System.Windows.Threading.Dispatcher>, use o seguinte construtor: <xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29>.</span><span class="sxs-lookup"><span data-stu-id="385db-122">To specify a different <xref:System.Windows.Threading.Dispatcher>, use the following constructor: <xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DispatcherTimer (System.Windows.Threading.DispatcherPriority priority, System.Windows.Threading.Dispatcher dispatcher);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Threading.DispatcherPriority priority, class System.Windows.Threading.Dispatcher dispatcher) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority,System.Windows.Threading.Dispatcher)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DispatcherTimer(System::Windows::Threading::DispatcherPriority priority, System::Windows::Threading::Dispatcher ^ dispatcher);" />
      <MemberSignature Language="F#" Value="new System.Windows.Threading.DispatcherTimer : System.Windows.Threading.DispatcherPriority * System.Windows.Threading.Dispatcher -&gt; System.Windows.Threading.DispatcherTimer" Usage="new System.Windows.Threading.DispatcherTimer (priority, dispatcher)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="dispatcher" Type="System.Windows.Threading.Dispatcher" />
      </Parameters>
      <Docs>
        <param name="priority"><span data-ttu-id="385db-123">A prioridade na qual o temporizador deve ser invocado.</span><span class="sxs-lookup"><span data-stu-id="385db-123">The priority at which to invoke the timer.</span></span></param>
        <param name="dispatcher"><span data-ttu-id="385db-124">O dispatcher ao qual o temporizador está associado.</span><span class="sxs-lookup"><span data-stu-id="385db-124">The dispatcher the timer is associated with.</span></span></param>
        <summary><span data-ttu-id="385db-125">Inicializa uma nova instância da classe <see cref="T:System.Windows.Threading.DispatcherTimer" /> executada no <see cref="T:System.Windows.Threading.Dispatcher" /> especificado na prioridade especificada.</span><span class="sxs-lookup"><span data-stu-id="385db-125">Initializes a new instance of the <see cref="T:System.Windows.Threading.DispatcherTimer" /> class which runs on the specified <see cref="T:System.Windows.Threading.Dispatcher" /> at the specified priority.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="385db-126"><paramref name="dispatcher" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="385db-126"><paramref name="dispatcher" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DispatcherTimer (TimeSpan interval, System.Windows.Threading.DispatcherPriority priority, EventHandler callback, System.Windows.Threading.Dispatcher dispatcher);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.TimeSpan interval, valuetype System.Windows.Threading.DispatcherPriority priority, class System.EventHandler callback, class System.Windows.Threading.Dispatcher dispatcher) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherTimer.#ctor(System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.EventHandler,System.Windows.Threading.Dispatcher)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DispatcherTimer(TimeSpan interval, System::Windows::Threading::DispatcherPriority priority, EventHandler ^ callback, System::Windows::Threading::Dispatcher ^ dispatcher);" />
      <MemberSignature Language="F#" Value="new System.Windows.Threading.DispatcherTimer : TimeSpan * System.Windows.Threading.DispatcherPriority * EventHandler * System.Windows.Threading.Dispatcher -&gt; System.Windows.Threading.DispatcherTimer" Usage="new System.Windows.Threading.DispatcherTimer (interval, priority, callback, dispatcher)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="interval" Type="System.TimeSpan" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="callback" Type="System.EventHandler" />
        <Parameter Name="dispatcher" Type="System.Windows.Threading.Dispatcher" />
      </Parameters>
      <Docs>
        <param name="interval"><span data-ttu-id="385db-127">O período entre os tiques.</span><span class="sxs-lookup"><span data-stu-id="385db-127">The period of time between ticks.</span></span></param>
        <param name="priority"><span data-ttu-id="385db-128">A prioridade na qual o temporizador deve ser invocado.</span><span class="sxs-lookup"><span data-stu-id="385db-128">The priority at which to invoke the timer.</span></span></param>
        <param name="callback"><span data-ttu-id="385db-129">O manipulador de eventos a ser chamado quando o evento de <see cref="E:System.Windows.Threading.DispatcherTimer.Tick" /> ocorrer.</span><span class="sxs-lookup"><span data-stu-id="385db-129">The event handler to call when the <see cref="E:System.Windows.Threading.DispatcherTimer.Tick" /> event occurs.</span></span></param>
        <param name="dispatcher"><span data-ttu-id="385db-130">O dispatcher ao qual o temporizador está associado.</span><span class="sxs-lookup"><span data-stu-id="385db-130">The dispatcher the timer is associated with.</span></span></param>
        <summary><span data-ttu-id="385db-131">Inicializa uma nova instância da classe <see cref="T:System.Windows.Threading.DispatcherTimer" /> que usa o intervalo de tempo, a prioridade, o manipulador de eventos e o <see cref="T:System.Windows.Threading.Dispatcher" /> especificados.</span><span class="sxs-lookup"><span data-stu-id="385db-131">Initializes a new instance of the <see cref="T:System.Windows.Threading.DispatcherTimer" /> class which uses the specified time interval, priority, event handler, and <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="385db-132"><paramref name="callback" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="385db-132"><paramref name="callback" /> is <see langword="null" />.</span></span>

<span data-ttu-id="385db-133">- ou -</span><span class="sxs-lookup"><span data-stu-id="385db-133">-or-</span></span>

          <span data-ttu-id="385db-134"><paramref name="dispatcher" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="385db-134"><paramref name="dispatcher" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="385db-135"><paramref name="interval" /> é menor que 0 ou maior que <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="385db-135"><paramref name="interval" /> is less than 0 or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispatcher">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.Dispatcher Dispatcher { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Threading.Dispatcher Dispatcher" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherTimer.Dispatcher" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dispatcher As Dispatcher" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Threading::Dispatcher ^ Dispatcher { System::Windows::Threading::Dispatcher ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Dispatcher : System.Windows.Threading.Dispatcher" Usage="System.Windows.Threading.DispatcherTimer.Dispatcher" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.Dispatcher</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="385db-136">Obtém o <see cref="T:System.Windows.Threading.Dispatcher" /> associado a este <see cref="T:System.Windows.Threading.DispatcherTimer" />.</span><span class="sxs-lookup"><span data-stu-id="385db-136">Gets the <see cref="T:System.Windows.Threading.Dispatcher" /> associated with this <see cref="T:System.Windows.Threading.DispatcherTimer" />.</span></span></summary>
        <value><span data-ttu-id="385db-137">O dispatcher.</span><span class="sxs-lookup"><span data-stu-id="385db-137">The dispatcher.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="385db-138">O <xref:System.Windows.Threading.DispatcherTimer.Dispatcher%2A> propriedade é determinada na criação do <xref:System.Windows.Threading.DispatcherTimer> objeto.</span><span class="sxs-lookup"><span data-stu-id="385db-138">The <xref:System.Windows.Threading.DispatcherTimer.Dispatcher%2A> property is determined at the creation of the <xref:System.Windows.Threading.DispatcherTimer> object.</span></span>  <span data-ttu-id="385db-139">O <xref:System.Windows.Threading.Dispatcher> estiver definida como atual <xref:System.Windows.Threading.Dispatcher> no momento da criação, a menos que outro <xref:System.Windows.Threading.Dispatcher> for especificado.</span><span class="sxs-lookup"><span data-stu-id="385db-139">The <xref:System.Windows.Threading.Dispatcher> property is set to the current <xref:System.Windows.Threading.Dispatcher> at the time of creation unless a different <xref:System.Windows.Threading.Dispatcher> is specified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Interval">
      <MemberSignature Language="C#" Value="public TimeSpan Interval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Interval" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherTimer.Interval" />
      <MemberSignature Language="VB.NET" Value="Public Property Interval As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan Interval { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.Interval : TimeSpan with get, set" Usage="System.Windows.Threading.DispatcherTimer.Interval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="385db-140">Obtém ou define o período entre os tiques do temporizador.</span><span class="sxs-lookup"><span data-stu-id="385db-140">Gets or sets the period of time between timer ticks.</span></span></summary>
        <value><span data-ttu-id="385db-141">O período entre os tiques.</span><span class="sxs-lookup"><span data-stu-id="385db-141">The period of time between ticks.</span></span> <span data-ttu-id="385db-142">O padrão é 00:00:00.</span><span class="sxs-lookup"><span data-stu-id="385db-142">The default is 00:00:00.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="385db-143">Temporizadores não são garantidos para ser executado exatamente quando ocorre o intervalo de tempo, mas eles são garantidos para não executar antes que ocorra o intervalo de tempo.</span><span class="sxs-lookup"><span data-stu-id="385db-143">Timers are not guaranteed to execute exactly when the time interval occurs, but they are guaranteed to not execute before the time interval occurs.</span></span>  <span data-ttu-id="385db-144">Isso ocorre porque <xref:System.Windows.Threading.DispatcherTimer> operações são colocadas no <xref:System.Windows.Threading.Dispatcher> fila, como outras operações.</span><span class="sxs-lookup"><span data-stu-id="385db-144">This is because <xref:System.Windows.Threading.DispatcherTimer> operations are placed on the <xref:System.Windows.Threading.Dispatcher> queue like other operations.</span></span>  <span data-ttu-id="385db-145">Quando o <xref:System.Windows.Threading.DispatcherTimer> operação é executada depende de outros trabalhos na fila e suas prioridades.</span><span class="sxs-lookup"><span data-stu-id="385db-145">When the <xref:System.Windows.Threading.DispatcherTimer> operation executes is dependent on the other jobs in the queue and their priorities.</span></span>  
  
## Examples  
 <span data-ttu-id="385db-146">O exemplo a seguir cria um <xref:System.Windows.Threading.DispatcherTimer>.</span><span class="sxs-lookup"><span data-stu-id="385db-146">The following example creates a <xref:System.Windows.Threading.DispatcherTimer>.</span></span>  <span data-ttu-id="385db-147">Uma nova <xref:System.Windows.Threading.DispatcherTimer> objeto chamado `dispatcherTimer` é criado.</span><span class="sxs-lookup"><span data-stu-id="385db-147">A new <xref:System.Windows.Threading.DispatcherTimer> object named `dispatcherTimer` is created.</span></span>  <span data-ttu-id="385db-148">O manipulador de eventos `dispatcherTimer_Tick` é adicionado para o <xref:System.Windows.Threading.DispatcherTimer.Tick> eventos.</span><span class="sxs-lookup"><span data-stu-id="385db-148">The event handler `dispatcherTimer_Tick` is added to the <xref:System.Windows.Threading.DispatcherTimer.Tick> event.</span></span>  <span data-ttu-id="385db-149">O <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> é definido como 1 segundo usando um <xref:System.TimeSpan> objeto.</span><span class="sxs-lookup"><span data-stu-id="385db-149">The <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> is set to 1 second using a <xref:System.TimeSpan> object.</span></span>  
  
 [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimerinit)]
 [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimerinit)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="385db-150"><paramref name="interval" /> é menor que 0 ou maior ou igual a <see cref="F:System.Int32.MaxValue" /> milissegundos.</span><span class="sxs-lookup"><span data-stu-id="385db-150"><paramref name="interval" /> is less than 0 or greater than <see cref="F:System.Int32.MaxValue" /> milliseconds.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherTimer.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : bool with get, set" Usage="System.Windows.Threading.DispatcherTimer.IsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="385db-151">Obtém ou define um valor que indica se o temporizador está em execução.</span><span class="sxs-lookup"><span data-stu-id="385db-151">Gets or sets a value that indicates whether the timer is running.</span></span></summary>
        <value><span data-ttu-id="385db-152"><see langword="true" /> se o temporizador estiver habilitado; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="385db-152"><see langword="true" /> if the timer is enabled; otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="385db-153">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="385db-153">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="385db-154"><xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> deve ser definido como `true` para o <xref:System.Windows.Threading.DispatcherTimer.Tick> evento seja acionado.</span><span class="sxs-lookup"><span data-stu-id="385db-154"><xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> must be set to `true` for the <xref:System.Windows.Threading.DispatcherTimer.Tick> event to be raised.</span></span>  
  
 <span data-ttu-id="385db-155">Chamando <xref:System.Windows.Threading.DispatcherTimer.Start%2A> define <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> para `true`.</span><span class="sxs-lookup"><span data-stu-id="385db-155">Calling <xref:System.Windows.Threading.DispatcherTimer.Start%2A> sets <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `true`.</span></span>  
  
 <span data-ttu-id="385db-156">Chamando <xref:System.Windows.Threading.DispatcherTimer.Stop%2A> define <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> para `false`.</span><span class="sxs-lookup"><span data-stu-id="385db-156">Calling <xref:System.Windows.Threading.DispatcherTimer.Stop%2A> sets <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `false`.</span></span>  
  
## Examples  
 <span data-ttu-id="385db-157">O exemplo a seguir cria um <xref:System.Windows.Threading.DispatcherTimer>.</span><span class="sxs-lookup"><span data-stu-id="385db-157">The following example creates a <xref:System.Windows.Threading.DispatcherTimer>.</span></span>  <span data-ttu-id="385db-158">Uma nova <xref:System.Windows.Threading.DispatcherTimer> objeto chamado `dispatcherTimer` é criado.</span><span class="sxs-lookup"><span data-stu-id="385db-158">A new <xref:System.Windows.Threading.DispatcherTimer> object named `dispatcherTimer` is created.</span></span>  <span data-ttu-id="385db-159">O manipulador de eventos `dispatcherTimer_Tick` é adicionado para o <xref:System.Windows.Threading.DispatcherTimer.Tick> eventos.</span><span class="sxs-lookup"><span data-stu-id="385db-159">The event handler `dispatcherTimer_Tick` is added to the <xref:System.Windows.Threading.DispatcherTimer.Tick> event.</span></span>  <span data-ttu-id="385db-160">O <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> é definido como 1 segundo usando um <xref:System.TimeSpan> objeto.</span><span class="sxs-lookup"><span data-stu-id="385db-160">The <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> is set to 1 second using a <xref:System.TimeSpan> object.</span></span>  
  
 [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimerinit)]
 [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimerinit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherTimer.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="dispatcherTimer.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="385db-161">Inicia o <see cref="T:System.Windows.Threading.DispatcherTimer" />.</span><span class="sxs-lookup"><span data-stu-id="385db-161">Starts the <see cref="T:System.Windows.Threading.DispatcherTimer" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="385db-162">Definindo <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> para `false` quando o temporizador é iniciado para o temporizador.</span><span class="sxs-lookup"><span data-stu-id="385db-162">Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `false` when the timer is started stops the timer.</span></span>  
  
 <span data-ttu-id="385db-163">Definindo <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> para `true` quando o temporizador será interrompido inicia o temporizador.</span><span class="sxs-lookup"><span data-stu-id="385db-163">Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `true` when the timer is stopped starts the timer.</span></span>  
  
 <span data-ttu-id="385db-164"><xref:System.Windows.Threading.DispatcherTimer.Start%2A> define <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> para `true`.</span><span class="sxs-lookup"><span data-stu-id="385db-164"><xref:System.Windows.Threading.DispatcherTimer.Start%2A> sets <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `true`.</span></span>  
  
 <span data-ttu-id="385db-165"><xref:System.Windows.Threading.DispatcherTimer.Start%2A> Redefine o timer de <xref:System.Windows.Threading.DispatcherTimer.Interval%2A>.</span><span class="sxs-lookup"><span data-stu-id="385db-165"><xref:System.Windows.Threading.DispatcherTimer.Start%2A> resets the timer <xref:System.Windows.Threading.DispatcherTimer.Interval%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="385db-166">O exemplo a seguir cria um <xref:System.Windows.Threading.DispatcherTimer>.</span><span class="sxs-lookup"><span data-stu-id="385db-166">The following example creates a <xref:System.Windows.Threading.DispatcherTimer>.</span></span>  <span data-ttu-id="385db-167">Uma nova <xref:System.Windows.Threading.DispatcherTimer> objeto chamado `dispatcherTimer` é criado.</span><span class="sxs-lookup"><span data-stu-id="385db-167">A new <xref:System.Windows.Threading.DispatcherTimer> object named `dispatcherTimer` is created.</span></span>  <span data-ttu-id="385db-168">O manipulador de eventos `dispatcherTimer_Tick` é adicionado para o <xref:System.Windows.Threading.DispatcherTimer.Tick> eventos.</span><span class="sxs-lookup"><span data-stu-id="385db-168">The event handler `dispatcherTimer_Tick` is added to the <xref:System.Windows.Threading.DispatcherTimer.Tick> event.</span></span>  <span data-ttu-id="385db-169">O <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> é definido como 1 segundo usando um <xref:System.Windows.Duration.TimeSpan%2A> objeto.</span><span class="sxs-lookup"><span data-stu-id="385db-169">The <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> is set to 1 second using a <xref:System.Windows.Duration.TimeSpan%2A> object.</span></span>  
  
 [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimerinit)]
 [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimerinit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherTimer.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="dispatcherTimer.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="385db-170">Interrompe o <see cref="T:System.Windows.Threading.DispatcherTimer" />.</span><span class="sxs-lookup"><span data-stu-id="385db-170">Stops the <see cref="T:System.Windows.Threading.DispatcherTimer" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="385db-171">Definindo <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> para `false` quando o temporizador é iniciado para o temporizador.</span><span class="sxs-lookup"><span data-stu-id="385db-171">Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `false` when the timer is started stops the timer.</span></span>  
  
 <span data-ttu-id="385db-172">Definindo <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> para `true` quando o temporizador será interrompido inicia o temporizador.</span><span class="sxs-lookup"><span data-stu-id="385db-172">Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `true` when the timer is stopped starts the timer.</span></span>  
  
 <span data-ttu-id="385db-173">Chamando <xref:System.Windows.Threading.DispatcherTimer.Stop%2A> define <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> para `false`.</span><span class="sxs-lookup"><span data-stu-id="385db-173">Calling <xref:System.Windows.Threading.DispatcherTimer.Stop%2A> sets <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherTimer.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Windows.Threading.DispatcherTimer.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="385db-174">Obtém ou define um objeto de dados definido pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="385db-174">Gets or sets a user-defined data object.</span></span></summary>
        <value><span data-ttu-id="385db-175">Os dados definidos pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="385db-175">The user-defined data.</span></span>  <span data-ttu-id="385db-176">O padrão é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="385db-176">The default is <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tick">
      <MemberSignature Language="C#" Value="public event EventHandler Tick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Tick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Threading.DispatcherTimer.Tick" />
      <MemberSignature Language="VB.NET" Value="Public Event Tick As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Tick;" />
      <MemberSignature Language="F#" Value="member this.Tick : EventHandler " Usage="member this.Tick : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="385db-177">Ocorre quando termina o intervalo do temporizador.</span><span class="sxs-lookup"><span data-stu-id="385db-177">Occurs when the timer interval has elapsed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="385db-178">O exemplo a seguir cria um <xref:System.Windows.Threading.DispatcherTimer.Tick> manipulador de eventos.</span><span class="sxs-lookup"><span data-stu-id="385db-178">The following example creates a <xref:System.Windows.Threading.DispatcherTimer.Tick> event handler.</span></span>  <span data-ttu-id="385db-179">As atualizações do manipulador de eventos uma <xref:System.Windows.Controls.Label> que exibe o atual em segundo lugar, e ele chama <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> sobre o <xref:System.Windows.Input.CommandManager>.</span><span class="sxs-lookup"><span data-stu-id="385db-179">The event handler updates a <xref:System.Windows.Controls.Label> that displays the current second, and it calls <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> on the <xref:System.Windows.Input.CommandManager>.</span></span>  
  
 [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimer](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimer)]
 [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimer](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimer)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>