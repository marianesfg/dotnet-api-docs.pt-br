<Type Name="DispatcherObject" FullName="System.Windows.Threading.DispatcherObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3f7ffdae057627d93275ea3627762eb66a2dfc81" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48605091" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DispatcherObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DispatcherObject extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DispatcherObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class DispatcherObject abstract" />
  <TypeSignature Language="F#" Value="type DispatcherObject = class" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="ed308-101">Representa um objeto associado a um <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ed308-101">Represents an object that is associated with a <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed308-102">Somente o thread que o <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> foi criado na podem acessar o <xref:System.Windows.Threading.DispatcherObject> diretamente.</span><span class="sxs-lookup"><span data-stu-id="ed308-102">Only the thread that the <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> was created on may access the <xref:System.Windows.Threading.DispatcherObject> directly.</span></span>  <span data-ttu-id="ed308-103">Para acessar um <xref:System.Windows.Threading.DispatcherObject> de um thread diferente do thread a <xref:System.Windows.Threading.DispatcherObject> foi criado, chame <xref:System.Windows.Threading.Dispatcher.Invoke%2A> ou <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> no <xref:System.Windows.Threading.Dispatcher> o <xref:System.Windows.Threading.DispatcherObject> está associado.</span><span class="sxs-lookup"><span data-stu-id="ed308-103">To access a <xref:System.Windows.Threading.DispatcherObject> from a thread other than the thread the <xref:System.Windows.Threading.DispatcherObject> was created on, call <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> on the <xref:System.Windows.Threading.Dispatcher> the <xref:System.Windows.Threading.DispatcherObject> is associated with.</span></span>  
  
 <span data-ttu-id="ed308-104">As subclasses <xref:System.Windows.Threading.DispatcherObject> que precisa para impor o thread de segurança pode fazer isso chamando <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> em todos os métodos públicos.</span><span class="sxs-lookup"><span data-stu-id="ed308-104">Subclasses of <xref:System.Windows.Threading.DispatcherObject> that need to enforce thread safety can do so by calling <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> on all public methods.</span></span>  <span data-ttu-id="ed308-105">Isso garante que o thread de chamada é o thread que o <xref:System.Windows.Threading.DispatcherObject> foi criado.</span><span class="sxs-lookup"><span data-stu-id="ed308-105">This guarantees the calling thread is the thread that the <xref:System.Windows.Threading.DispatcherObject> was created on.</span></span>  
  
 <span data-ttu-id="ed308-106">Um <xref:System.Windows.Threading.DispatcherObject> não pode ser instanciada independentemente; ou seja, todos os construtores são protegidos.</span><span class="sxs-lookup"><span data-stu-id="ed308-106">A <xref:System.Windows.Threading.DispatcherObject> cannot be independently instantiated; that is, all constructors are protected.</span></span>  
  
 <span data-ttu-id="ed308-107">Objetos que derivam de <xref:System.Windows.Threading.DispatcherObject> têm afinidade de thread.</span><span class="sxs-lookup"><span data-stu-id="ed308-107">Objects that derive from <xref:System.Windows.Threading.DispatcherObject> have thread affinity.</span></span>  
  
 <span data-ttu-id="ed308-108">Objetos que derivam de <xref:System.Windows.Freezable> são thread livre quando eles estão congelados.</span><span class="sxs-lookup"><span data-stu-id="ed308-108">Objects that derive from <xref:System.Windows.Freezable> are free-threaded when they are frozen.</span></span>  <span data-ttu-id="ed308-109">Para obter mais informações, consulte a [visão geral de objetos congeláveis](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ed308-109">For more information, see the [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="ed308-110">Qualquer público <see langword="static" /> desse tipo são thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ed308-110">Any public <see langword="static" /> members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="ed308-111">Não há garantia de que qualquer membro de instância seja thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ed308-111">Any instance members are not guaranteed to be thread safe.</span>
      </span>
      <span data-ttu-id="ed308-112">Esse objeto pode ser acessado somente do thread no qual ele foi criado.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ed308-112">This object can be accessed only from the thread on which it was created.</span>
      </span>
      <span data-ttu-id="ed308-113">Tentativas de acessá-lo de outros threads lançará um <see cref="T:System.InvalidOperationException" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ed308-113">Attempts to access it from other threads will throw an <see cref="T:System.InvalidOperationException" />.</span>
      </span>
      <span data-ttu-id="ed308-114">
        <see cref="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" /> ou <see cref="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" /> fornecem suporte para o marshalling de trabalho para o thread correto.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ed308-114">
          <see cref="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" /> or <see cref="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" /> provide support for marshalling work to the correct thread.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DispatcherObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DispatcherObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ed308-115">Inicializa uma nova instância da classe <see cref="T:System.Windows.Threading.DispatcherObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed308-115">Initializes a new instance of the <see cref="T:System.Windows.Threading.DispatcherObject" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckAccess">
      <MemberSignature Language="C#" Value="public bool CheckAccess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckAccess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherObject.CheckAccess" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckAccess () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckAccess();" />
      <MemberSignature Language="F#" Value="member this.CheckAccess : unit -&gt; bool" Usage="dispatcherObject.CheckAccess " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ed308-116">Determina se o thread de chamada tem acesso a este <see cref="T:System.Windows.Threading.DispatcherObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed308-116">Determines whether the calling thread has access to this <see cref="T:System.Windows.Threading.DispatcherObject" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ed308-117">
            <see langword="true" /> se o thread de chamada tiver acesso a esse objeto; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed308-117">
              <see langword="true" /> if the calling thread has access to this object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed308-118">Somente o thread a <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> foi criado na podem acessar o <xref:System.Windows.Threading.DispatcherObject>.</span><span class="sxs-lookup"><span data-stu-id="ed308-118">Only the thread the <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> was created on may access the <xref:System.Windows.Threading.DispatcherObject>.</span></span>  
  
 <span data-ttu-id="ed308-119">Qualquer thread pode verificar para ver se ele tem acesso a este <xref:System.Windows.Threading.DispatcherObject>.</span><span class="sxs-lookup"><span data-stu-id="ed308-119">Any thread can check to see whether it has access to this <xref:System.Windows.Threading.DispatcherObject>.</span></span>  
  
 <span data-ttu-id="ed308-120">A diferença entre <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> e <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> é que <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> retorna um valor booleano que especifica se o thread de chamada tem acesso a este <xref:System.Windows.Threading.DispatcherObject> e <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> lança uma exceção se o thread de chamada não tem acesso para o Isso <xref:System.Windows.Threading.DispatcherObject>.</span><span class="sxs-lookup"><span data-stu-id="ed308-120">The difference between <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> and <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> is that <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> returns a Boolean that specifies whether the calling thread has access to this <xref:System.Windows.Threading.DispatcherObject> and <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> throws an exception if the calling thread does not have access to the this <xref:System.Windows.Threading.DispatcherObject>.</span></span>  
  
 <span data-ttu-id="ed308-121">Chamar esse método é idêntico ao chamar <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> em associado <xref:System.Windows.Threading.Dispatcher> objeto.</span><span class="sxs-lookup"><span data-stu-id="ed308-121">Calling this method is identical to calling <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> on the associated <xref:System.Windows.Threading.Dispatcher> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed308-122">O exemplo a seguir usa <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> para determinar se um thread tem acesso para o thread que um <xref:System.Windows.Controls.Button> foi criado.</span><span class="sxs-lookup"><span data-stu-id="ed308-122">The following example uses <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> to determine whether a thread has access to the thread that a <xref:System.Windows.Controls.Button> was created on.</span></span>  <span data-ttu-id="ed308-123">O <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> método no <xref:System.Windows.Controls.Button> é chamado para verificar o acesso para o thread.</span><span class="sxs-lookup"><span data-stu-id="ed308-123">The <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> method on the <xref:System.Windows.Controls.Button> is called to verify access to the thread.</span></span>  <span data-ttu-id="ed308-124">Se o thread de chamada tem acesso, o <xref:System.Windows.Controls.Button> é atualizado, apenas acessando os membros do <xref:System.Windows.Controls.Button>; caso contrário, um delegado, que aceita um <xref:System.Windows.Controls.Button> como um argumento, é postada para o <xref:System.Windows.Threading.Dispatcher> do <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="ed308-124">If the calling thread has access, the <xref:System.Windows.Controls.Button> is updated by just accessing the members of the <xref:System.Windows.Controls.Button>; otherwise, a delegate, which accepts a <xref:System.Windows.Controls.Button> as an argument, is posted onto the <xref:System.Windows.Threading.Dispatcher> of the <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[DispatcherObjectAccessSample#DispatcherObjectAccessCheckAccess](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherObjectAccessSample/CSharp/Window1.xaml.cs#dispatcherobjectaccesscheckaccess)]
 [!code-vb[DispatcherObjectAccessSample#DispatcherObjectAccessCheckAccess](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherObjectAccessSample/visualbasic/window1.xaml.vb#dispatcherobjectaccesscheckaccess)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispatcher">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.Dispatcher Dispatcher { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Threading.Dispatcher Dispatcher" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dispatcher As Dispatcher" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Threading::Dispatcher ^ Dispatcher { System::Windows::Threading::Dispatcher ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Dispatcher : System.Windows.Threading.Dispatcher" Usage="System.Windows.Threading.DispatcherObject.Dispatcher" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.Dispatcher</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ed308-125">Obtém o <see cref="T:System.Windows.Threading.Dispatcher" /> ao qual este <see cref="T:System.Windows.Threading.DispatcherObject" /> está associado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed308-125">Gets the <see cref="T:System.Windows.Threading.Dispatcher" /> this <see cref="T:System.Windows.Threading.DispatcherObject" /> is associated with.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ed308-126">O dispatcher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed308-126">The dispatcher.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed308-127">Somente o thread que o <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> foi criado na podem acessar o <xref:System.Windows.Threading.DispatcherObject> diretamente.</span><span class="sxs-lookup"><span data-stu-id="ed308-127">Only the thread that the <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> was created on may access the <xref:System.Windows.Threading.DispatcherObject> directly.</span></span>  <span data-ttu-id="ed308-128">Para acessar um <xref:System.Windows.Threading.DispatcherObject> de um thread diferente do thread a <xref:System.Windows.Threading.DispatcherObject> foi criado, chame <xref:System.Windows.Threading.Dispatcher.Invoke%2A> e <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> no <xref:System.Windows.Threading.Dispatcher> o <xref:System.Windows.Threading.DispatcherObject> está associado.</span><span class="sxs-lookup"><span data-stu-id="ed308-128">To access a <xref:System.Windows.Threading.DispatcherObject> from a thread other than the thread the <xref:System.Windows.Threading.DispatcherObject> was created on, call <xref:System.Windows.Threading.Dispatcher.Invoke%2A> and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> on the <xref:System.Windows.Threading.Dispatcher> the <xref:System.Windows.Threading.DispatcherObject> is associated with.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyAccess">
      <MemberSignature Language="C#" Value="public void VerifyAccess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void VerifyAccess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherObject.VerifyAccess" />
      <MemberSignature Language="VB.NET" Value="Public Sub VerifyAccess ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void VerifyAccess();" />
      <MemberSignature Language="F#" Value="member this.VerifyAccess : unit -&gt; unit" Usage="dispatcherObject.VerifyAccess " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ed308-129">Impõe que o thread de chamada tenha acesso a este <see cref="T:System.Windows.Threading.DispatcherObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed308-129">Enforces that the calling thread has access to this <see cref="T:System.Windows.Threading.DispatcherObject" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed308-130">Somente o thread a <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> foi criado na podem acessar o <xref:System.Windows.Threading.DispatcherObject>.</span><span class="sxs-lookup"><span data-stu-id="ed308-130">Only the thread the <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> was created on may access the <xref:System.Windows.Threading.DispatcherObject>.</span></span>  
  
 <span data-ttu-id="ed308-131">Qualquer thread pode verificar para ver se ele tem acesso a este <xref:System.Windows.Threading.DispatcherObject>.</span><span class="sxs-lookup"><span data-stu-id="ed308-131">Any thread can check to see whether it has access to this <xref:System.Windows.Threading.DispatcherObject>.</span></span>  
  
 <span data-ttu-id="ed308-132">A diferença entre <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> e <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> é que <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> retorna um valor booleano que especifica se o thread de chamada tem acesso a este <xref:System.Windows.Threading.DispatcherObject> e <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> lança uma exceção se o thread de chamada não tem acesso para o Isso <xref:System.Windows.Threading.DispatcherObject>.</span><span class="sxs-lookup"><span data-stu-id="ed308-132">The difference between <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> and <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> is that <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> returns a Boolean that specifies whether the calling thread has access to this <xref:System.Windows.Threading.DispatcherObject> and <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> throws an exception if the calling thread does not have access to the this <xref:System.Windows.Threading.DispatcherObject>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed308-133">O exemplo a seguir usa <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> para determinar se um thread tem acesso para o thread que um <xref:System.Windows.Controls.Button> foi criado.</span><span class="sxs-lookup"><span data-stu-id="ed308-133">The following example uses <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> to determine whether a thread has access to the thread that a <xref:System.Windows.Controls.Button> was created on.</span></span>  <span data-ttu-id="ed308-134">Se o thread de chamada não tem acesso, um <xref:System.InvalidOperationException> é gerada.</span><span class="sxs-lookup"><span data-stu-id="ed308-134">If the calling thread does not have access, an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 [!code-csharp[DispatcherObjectAccessSample#DispatcherObjectAccessVerifyAccess](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherObjectAccessSample/CSharp/Window1.xaml.cs#dispatcherobjectaccessverifyaccess)]
 [!code-vb[DispatcherObjectAccessSample#DispatcherObjectAccessVerifyAccess](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherObjectAccessSample/visualbasic/window1.xaml.vb#dispatcherobjectaccessverifyaccess)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ed308-135">O thread de chamada não tem acesso a este <see cref="T:System.Windows.Threading.DispatcherObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ed308-135">the calling thread does not have access to this <see cref="T:System.Windows.Threading.DispatcherObject" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>