<Type Name="BaseIListConverter" FullName="System.Windows.Media.Converters.BaseIListConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0bf3e0f02a97ebba96521f0d017f50567de4fb9d" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39820395" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class BaseIListConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BaseIListConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Converters.BaseIListConverter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BaseIListConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class BaseIListConverter abstract : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type BaseIListConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="25b62-101">Define métodos usados para converter os membros da coleção <see cref="T:System.Collections.IList" /> em instâncias de <see cref="T:System.String" /> e delas.</span>
      <span class="sxs-lookup">
        <span data-stu-id="25b62-101">Defines methods used to convert <see cref="T:System.Collections.IList" /> collection members to and from instances of <see cref="T:System.String" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25b62-102">Essa classe e seus derivados destinam-se a ser usado pelas <xref:System.Windows.Markup.Primitives.MarkupWriter> para a serialização de [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="25b62-102">This class and its derivatives are intended to be used by the <xref:System.Windows.Markup.Primitives.MarkupWriter> for serialization of [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.IList" />
    <altmember cref="T:System.Windows.Markup.Primitives.MarkupWriter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BaseIListConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Converters.BaseIListConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BaseIListConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="25b62-103">Inicializa uma nova instância da classe <see cref="T:System.Windows.Media.Converters.BaseIListConverter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b62-103">Initializes a new instance of the <see cref="T:System.Windows.Media.Converters.BaseIListConverter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext td, Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext td, class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Converters.BaseIListConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (td As ITypeDescriptorContext, t As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ td, Type ^ t);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="baseIListConverter.CanConvertFrom (td, t)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="td" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="td">
          <span data-ttu-id="25b62-104">Fornece informações contextuais necessárias para conversão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b62-104">Provides contextual information required for conversion.</span>
          </span>
        </param>
        <param name="t">
          <span data-ttu-id="25b62-105">O tipo que está sendo avaliado para conversão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b62-105">Type being evaluated for conversion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25b62-106">Determina se um tipo determinado pode ser convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b62-106">Determines if a given type can be converted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="25b62-107">
            <see langword="true" /> se este tipo puder ser convertido; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b62-107">
              <see langword="true" /> if this type can be converted; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25b62-108"><xref:System.String> é o único tipo com suporte para conversão.</span><span class="sxs-lookup"><span data-stu-id="25b62-108"><xref:System.String> is the only supported type for conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Converters.BaseIListConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="baseIListConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="25b62-109">Fornece informações contextuais necessárias para conversão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b62-109">Provides contextual information required for conversion.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="25b62-110">O valor que está sendo avaliado para conversão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b62-110">Type being evaluated for conversion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25b62-111">Determina se um tipo determinado pode ser convertido em um <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b62-111">Determines if a given type can be converted to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="25b62-112">
            <see langword="true" /> se este tipo puder ser convertido; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b62-112">
              <see langword="true" /> if this type can be converted; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25b62-113"><xref:System.String> é o único tipo com suporte para conversão.</span><span class="sxs-lookup"><span data-stu-id="25b62-113"><xref:System.String> is the only supported type for conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext td, System.Globalization.CultureInfo ci, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext td, class System.Globalization.CultureInfo ci, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Converters.BaseIListConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (td As ITypeDescriptorContext, ci As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ td, System::Globalization::CultureInfo ^ ci, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj&#xA;override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="baseIListConverter.ConvertFrom (td, ci, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="td" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="ci" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="td">
          <span data-ttu-id="25b62-114">Fornece informações contextuais necessárias para conversão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b62-114">Provides contextual information required for conversion.</span>
          </span>
        </param>
        <param name="ci">
          <span data-ttu-id="25b62-115">Informações culturais a serem respeitadas durante a conversão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b62-115">Cultural information to respect during conversion.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="25b62-116">Cadeia de caracteres usada para conversão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b62-116">String used for conversion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25b62-117">Converte um <see cref="T:System.String" /> em uma instância com suporte de <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b62-117">Converts a <see cref="T:System.String" /> to a supported instance of <see cref="T:System.Collections.IList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="25b62-118">Um <see cref="T:System.Object" /> que representa o resultado da conversão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b62-118">An <see cref="T:System.Object" /> that represents the result of the conversion.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="25b62-119">Ocorrerá se o valor for <see langword="null" /> e não um <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b62-119">Occurs if value is <see langword="null" /> and not a <see cref="T:System.String" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Converters.BaseIListConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj&#xA;override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="baseIListConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="25b62-120">Fornece informações contextuais necessárias para conversão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b62-120">Provides contextual information required for conversion.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="25b62-121">Informações culturais a serem respeitadas durante a conversão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b62-121">Cultural information to respect during conversion.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="25b62-122">Objeto sendo avaliado para conversão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b62-122">Object being evaluated for conversion.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="25b62-123">Tipo de destino sendo avaliado para conversão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b62-123">Destination type being evaluated for conversion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="25b62-124">Converte uma instância com suporte de <see cref="T:System.Collections.IList" /> em um <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b62-124">Converts a supported instance of <see cref="T:System.Collections.IList" /> to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="25b62-125">A representação de cadeia de caracteres da coleção <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="25b62-125">String representation of the <see cref="T:System.Collections.IList" /> collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>