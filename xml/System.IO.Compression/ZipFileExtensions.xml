<Type Name="ZipFileExtensions" FullName="System.IO.Compression.ZipFileExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cc9c1088f45649b96e4af085879fde1dc4d8204f" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="64996855" /></Metadata><TypeSignature Language="C#" Value="public static class ZipFileExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ZipFileExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Compression.ZipFileExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ZipFileExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class ZipFileExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type ZipFileExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netstandard-1.3;netstandard-1.4;netstandard-1.6">
      <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fornece métodos de extensão para as classes <see cref="T:System.IO.Compression.ZipArchive" /> e <see cref="T:System.IO.Compression.ZipArchiveEntry" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.IO.Compression.ZipFileExtensions> classe contém apenas os métodos estáticos que estendem o <xref:System.IO.Compression.ZipArchive> e <xref:System.IO.Compression.ZipArchiveEntry> classes. Você não criar uma instância das <xref:System.IO.Compression.ZipFileExtensions> classe; em vez disso, você pode usar esses métodos de instâncias do <xref:System.IO.Compression.ZipArchive> ou <xref:System.IO.Compression.ZipArchiveEntry>.  
  
 Para usar os métodos de extensão, você deve fazer referência a `System.IO.Compression.FileSystem` assembly em seu projeto. O `System.IO.Compression.FileSystem` assembly não está disponível em [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] aplicativos. Portanto, o <xref:System.IO.Compression.ZipFileExtensions> e <xref:System.IO.Compression.ZipFile> classes (que estão na `System.IO.Compression.FileSystem` assembly) não estão disponíveis em [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] aplicativos. Na [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] aplicativos, trabalhar com arquivos compactados usando os métodos <xref:System.IO.Compression.ZipArchive>, <xref:System.IO.Compression.ZipArchiveEntry>, <xref:System.IO.Compression.DeflateStream>, e <xref:System.IO.Compression.GZipStream>.  
  
 O <xref:System.IO.Compression.ZipFileExtensions> classe contém quatro métodos que estendem <xref:System.IO.Compression.ZipArchive>:  
  
-   <xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%28System.IO.Compression.ZipArchive%2CSystem.String%2CSystem.String%29>  
  
-   <xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%28System.IO.Compression.ZipArchive%2CSystem.String%2CSystem.String%2CSystem.IO.Compression.CompressionLevel%29>  
  
-   <xref:System.IO.Compression.ZipFileExtensions.ExtractToDirectory%28System.IO.Compression.ZipArchive%2CSystem.String%29>  

-   <xref:System.IO.Compression.ZipFileExtensions.ExtractToDirectory%28System.IO.Compression.ZipArchive%2CSystem.String%2CSystem.Boolean%29>  

 O <xref:System.IO.Compression.ZipFileExtensions> classe contém dois métodos que estendem <xref:System.IO.Compression.ZipArchiveEntry>:  
  
-   <xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%29>  
  
-   <xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%2CSystem.Boolean%29>  
  
   
  
## Examples  
 O exemplo a seguir mostra como criar uma nova entrada em um arquivo zip de um arquivo existente e extraia o conteúdo do arquivo para um diretório.  
  
 [!code-csharp[System.IO.Compression.ZipArchive#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program3.cs#3)]
 [!code-vb[System.IO.Compression.ZipArchive#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program3.vb#3)]  
  
 O exemplo a seguir mostra como iterar pelo conteúdo de um arquivo zip e extraia os arquivos que têm uma extensão. txt.  
  
 [!code-csharp[System.IO.Compression.ZipArchive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateEntryFromFile">
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Arquiva um arquivo compactando-o e adicionando-o ao arquivo zip.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateEntryFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.Compression.ZipArchiveEntry CreateEntryFromFile (this System.IO.Compression.ZipArchive destination, string sourceFileName, string entryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Compression.ZipArchiveEntry CreateEntryFromFile(class System.IO.Compression.ZipArchive destination, string sourceFileName, string entryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateEntryFromFile (destination As ZipArchive, sourceFileName As String, entryName As String) As ZipArchiveEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::IO::Compression::ZipArchiveEntry ^ CreateEntryFromFile(System::IO::Compression::ZipArchive ^ destination, System::String ^ sourceFileName, System::String ^ entryName);" />
      <MemberSignature Language="F#" Value="static member CreateEntryFromFile : System.IO.Compression.ZipArchive * string * string -&gt; System.IO.Compression.ZipArchiveEntry" Usage="System.IO.Compression.ZipFileExtensions.CreateEntryFromFile (destination, sourceFileName, entryName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchiveEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Compression.ZipArchive" RefType="this" />
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="entryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="destination">O arquivo zip ao qual o arquivo será adicionado.</param>
        <param name="sourceFileName">O caminho para o arquivo a ser arquivado. Você pode especificar um caminho absoluto ou relativo. Um caminho relativo é interpretado como relativo ao diretório de trabalho atual.</param>
        <param name="entryName">O nome da entrada a ser criada no arquivo zip.</param>
        <summary>Arquiva um arquivo compactando-o e adicionando-o ao arquivo zip.</summary>
        <returns>Um wrapper para a nova entrada no arquivo zip.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A nova entrada no arquivo morto contém o conteúdo do arquivo especificado por `sourceFileName`. Se uma entrada com o nome especificado (`entryName`) já existe no arquivo morto, uma segunda entrada é criada com um nome idêntico. O <xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A> propriedade da entrada é definida como a última vez em que o arquivo no sistema de arquivos foi alterado.  
  
 Quando `ZipArchiveMode.Update` estiver presente, o limite de tamanho de uma entrada é limitado a <xref:System.Int32.MaxValue?displayProperty=nameWithType>. Esse limite é porque o modo de atualização usa um <xref:System.IO.MemoryStream> internamente para permitir que o necessário ao atualizar um arquivo morto, busca e <xref:System.IO.MemoryStream> tem um máximo igual ao tamanho de um int.  
   
  
## Examples  
 O exemplo a seguir mostra como criar uma nova entrada em um arquivo zip de um arquivo existente.  
  
 [!code-csharp[System.IO.Compression.ZipArchive#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program3.cs#3)]
 [!code-vb[System.IO.Compression.ZipArchive#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="sourceFileName" /> é <see cref="F:System.String.Empty" />, contém somente espaços em branco ou, pelo menos, um caractere inválido.  
  
- ou - 
 <paramref name="entryName" /> é <see cref="F:System.String.Empty" />.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="sourceFileName" /> ou <paramref name="entryName" /> é <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Em <paramref name="sourceFileName" />, o caminho especificado, o nome de arquivo, ou ambos excedem o tamanho máximo definido pelo sistema.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><paramref name="sourceFileName" /> é inválido (por exemplo, está em uma unidade não mapeada).</exception>
        <exception cref="T:System.IO.IOException">O arquivo especificado por <paramref name="sourceFileName" /> não pode ser aberto ou é muito grande para ser atualizado (o limite atual é [`Int32.MaxValue`](https://docs.microsoft.com/dotnet/api/system.int32.maxvalue)).</exception>
        <exception cref="T:System.UnauthorizedAccessException"><paramref name="sourceFileName" /> especifica um diretório.  
  
- ou - 
O chamador não tem a permissão necessária para acessar o arquivo especificado por <paramref name="sourceFileName" />.</exception>
        <exception cref="T:System.IO.FileNotFoundException">O arquivo especificado por <paramref name="sourceFileName" /> não foi encontrado.</exception>
        <exception cref="T:System.NotSupportedException">O parâmetro <paramref name="sourceFileName" /> está em um formato inválido.  
  
- ou - 
O arquivo zip não dá suporte à gravação.</exception>
        <exception cref="T:System.ObjectDisposedException">O arquivo zip foi descartado.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateEntryFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.Compression.ZipArchiveEntry CreateEntryFromFile (this System.IO.Compression.ZipArchive destination, string sourceFileName, string entryName, System.IO.Compression.CompressionLevel compressionLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Compression.ZipArchiveEntry CreateEntryFromFile(class System.IO.Compression.ZipArchive destination, string sourceFileName, string entryName, valuetype System.IO.Compression.CompressionLevel compressionLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive,System.String,System.String,System.IO.Compression.CompressionLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::IO::Compression::ZipArchiveEntry ^ CreateEntryFromFile(System::IO::Compression::ZipArchive ^ destination, System::String ^ sourceFileName, System::String ^ entryName, System::IO::Compression::CompressionLevel compressionLevel);" />
      <MemberSignature Language="F#" Value="static member CreateEntryFromFile : System.IO.Compression.ZipArchive * string * string * System.IO.Compression.CompressionLevel -&gt; System.IO.Compression.ZipArchiveEntry" Usage="System.IO.Compression.ZipFileExtensions.CreateEntryFromFile (destination, sourceFileName, entryName, compressionLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchiveEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Compression.ZipArchive" RefType="this" />
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="entryName" Type="System.String" />
        <Parameter Name="compressionLevel" Type="System.IO.Compression.CompressionLevel" />
      </Parameters>
      <Docs>
        <param name="destination">O arquivo zip ao qual o arquivo será adicionado.</param>
        <param name="sourceFileName">O caminho para o arquivo a ser arquivado. Você pode especificar um caminho absoluto ou relativo. Um caminho relativo é interpretado como relativo ao diretório de trabalho atual.</param>
        <param name="entryName">O nome da entrada a ser criada no arquivo zip.</param>
        <param name="compressionLevel">Um dos valores de enumeração que indica se é necessário enfatizar a eficiência de compactação ou velocidade ao criar a entrada.</param>
        <summary>Arquiva um arquivo, compactando-o usando o nível de compactação especificado e adicionando-o ao arquivo zip.</summary>
        <returns>Um wrapper para a nova entrada no arquivo zip.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A nova entrada no arquivo morto contém o conteúdo do arquivo especificado por `sourceFileName`. Se uma entrada com o nome especificado (`entryName`) já existe no arquivo morto, uma segunda entrada é criada com um nome idêntico. O <xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A> propriedade da entrada é definida como a última vez em que o arquivo no sistema de arquivos foi alterado.  
  
 Quando `ZipArchiveMode.Update` estiver presente, o limite de tamanho de uma entrada é limitado a <xref:System.Int32.MaxValue?displayProperty=nameWithType>. Esse limite é porque o modo de atualização usa um <xref:System.IO.MemoryStream> internamente para permitir que o necessário ao atualizar um arquivo morto, busca e <xref:System.IO.MemoryStream> tem um máximo igual ao tamanho de um int.  
  
## Examples  
 O exemplo a seguir mostra como criar uma nova entrada em um arquivo zip de um arquivo existente e especifique o nível de compactação.  
  
 [!code-csharp[System.IO.Compression.ZipArchive#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program4.cs#4)]
 [!code-vb[System.IO.Compression.ZipArchive#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="sourceFileName" /> é <see cref="F:System.String.Empty" />, contém somente espaços em branco ou, pelo menos, um caractere inválido.  
  
- ou - 
 <paramref name="entryName" /> é <see cref="F:System.String.Empty" />.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="sourceFileName" /> ou <paramref name="entryName" /> é <see langword="null" />.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><paramref name="sourceFileName" /> é inválido (por exemplo, está em uma unidade não mapeada).</exception>
        <exception cref="T:System.IO.PathTooLongException">Em <paramref name="sourceFileName" />, o caminho especificado, o nome de arquivo, ou ambos excedem o tamanho máximo definido pelo sistema.</exception>
        <exception cref="T:System.IO.IOException">O arquivo especificado por <paramref name="sourceFileName" /> não pode ser aberto ou é muito grande para ser atualizado (o limite atual é [`Int32.MaxValue`](https://docs.microsoft.com/dotnet/api/system.int32.maxvalue)).</exception>
        <exception cref="T:System.UnauthorizedAccessException"><paramref name="sourceFileName" /> especifica um diretório.  
  
- ou - 
O chamador não tem a permissão necessária para acessar o arquivo especificado por <paramref name="sourceFileName" />.</exception>
        <exception cref="T:System.IO.FileNotFoundException">O arquivo especificado por <paramref name="sourceFileName" /> não foi encontrado.</exception>
        <exception cref="T:System.NotSupportedException">O parâmetro <paramref name="sourceFileName" /> está em um formato inválido.  
  
- ou - 
O arquivo zip não dá suporte à gravação.</exception>
        <exception cref="T:System.ObjectDisposedException">O arquivo zip foi descartado.</exception>
      </Docs>
    </Member>
    <Member MemberName="ExtractToDirectory">
      <MemberSignature Language="C#" Value="public static void ExtractToDirectory (this System.IO.Compression.ZipArchive source, string destinationDirectoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExtractToDirectory(class System.IO.Compression.ZipArchive source, string destinationDirectoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFileExtensions.ExtractToDirectory(System.IO.Compression.ZipArchive,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ExtractToDirectory (source As ZipArchive, destinationDirectoryName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ExtractToDirectory(System::IO::Compression::ZipArchive ^ source, System::String ^ destinationDirectoryName);" />
      <MemberSignature Language="F#" Value="static member ExtractToDirectory : System.IO.Compression.ZipArchive * string -&gt; unit" Usage="System.IO.Compression.ZipFileExtensions.ExtractToDirectory (source, destinationDirectoryName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Compression.ZipArchive" RefType="this" />
        <Parameter Name="destinationDirectoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">O arquivo zip de onde extrair os arquivos.</param>
        <param name="destinationDirectoryName">O caminho para o diretório para colocar os arquivos extraídos. Você pode especificar um caminho absoluto ou relativo. Um caminho relativo é interpretado como relativo ao diretório de trabalho atual.</param>
        <summary>Extrai todos os arquivos no arquivo zip especificado para um diretório do sistema de arquivos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método cria o diretório especificado por `destinationDirectoryName`. Se o diretório de destino já existir, esse método não substituí-lo; ele gera um <xref:System.IO.IOException> exceção. O método também cria os subdiretórios que refletem a hierarquia no arquivo zip. Se ocorrer um erro durante a extração, o arquivo morto permanece parcialmente extraído. Cada arquivo extraído tem o mesmo caminho relativo para o diretório especificado por `destinationDirectoryName` como sua fonte de entrada tem para a raiz do arquivo morto.  
  
   
  
## Examples  
 O exemplo a seguir mostra como criar uma nova entrada em um arquivo zip de um arquivo existente e extraia o arquivo para um novo diretório. Em ordem ao compilador neste exemplo de código, você deve fazer referência a `System.IO.Compression` e `System.IO.Compression.FileSystem` assemblies em seu projeto.  
  
 [!code-csharp[System.IO.Compression.ZipArchive#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program3.cs#3)]
 [!code-vb[System.IO.Compression.ZipArchive#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationDirectoryName" /> é <see cref="F:System.String.Empty" />, contém somente espaços em branco ou, pelo menos, um caractere inválido.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="destinationDirectoryName" /> é <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">O caminho especificado excede o tamanho máximo definido pelo sistema.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">O caminho especificado é inválido (por exemplo, ele está em uma unidade não mapeada).</exception>
        <exception cref="T:System.IO.IOException">O diretório especificado por <paramref name="destinationDirectoryName" /> já existe.  
  
- ou - 
O nome de uma entrada no arquivo morto é <see cref="F:System.String.Empty" />, contém somente espaços em branco ou, pelo menos, um caractere inválido.  
  
- ou - 
A extração de uma entrada do arquivo criará um arquivo que está fora do diretório especificado por <paramref name="destinationDirectoryName" />. (Por exemplo, isso poderá acontecer se o nome da entrada contiver acessadores de diretório pai.) 
- ou - 
Duas ou mais entradas no arquivo tem o mesmo nome.</exception>
        <exception cref="T:System.UnauthorizedAccessException">O chamador não tem a permissão necessária para acessar o arquivo ou o diretório de destino.</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="destinationDirectoryName" /> contém um formato inválido.</exception>
        <exception cref="T:System.IO.InvalidDataException">Uma entrada de arquivo não pode ser encontrada ou está corrompida.  
  
- ou - 
Uma entrada de arquivo morto foi compactada usando um método de compactação sem suporte.</exception>
      </Docs>
    </Member>
    <Member MemberName="ExtractToDirectory">
      <MemberSignature Language="C#" Value="public static void ExtractToDirectory (this System.IO.Compression.ZipArchive source, string destinationDirectoryName, bool overwriteFiles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExtractToDirectory(class System.IO.Compression.ZipArchive source, string destinationDirectoryName, bool overwriteFiles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFileExtensions.ExtractToDirectory(System.IO.Compression.ZipArchive,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ExtractToDirectory (source As ZipArchive, destinationDirectoryName As String, overwriteFiles As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ExtractToDirectory(System::IO::Compression::ZipArchive ^ source, System::String ^ destinationDirectoryName, bool overwriteFiles);" />
      <MemberSignature Language="F#" Value="static member ExtractToDirectory : System.IO.Compression.ZipArchive * string * bool -&gt; unit" Usage="System.IO.Compression.ZipFileExtensions.ExtractToDirectory (source, destinationDirectoryName, overwriteFiles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Compression.ZipArchive" RefType="this" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="destinationDirectoryName" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="overwriteFiles" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="source">O <see cref="T:System.IO.Compression.ZipArchive" /> para extrair.</param>
        <param name="destinationDirectoryName">O caminho para o diretório de destino no sistema de arquivos. O caminho pode ser relativo ou absoluto. Um caminho relativo é interpretado como relativo ao diretório de trabalho atual.</param>
        <param name="overwriteFiles"><see langword="true" /> para indicar que os arquivos existentes devem ser substituídas; <see langword="false" /> caso contrário.</param>
        <summary>Extrai todos os arquivos no arquivo para um diretório no sistema de arquivos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks
 O diretório especificado talvez já exista. Esse método criará o diretório especificado e todos os subdiretórios se necessário.

 Se houver um erro ao extrair o arquivo morto, o arquivo permanecerá parcialmente extraído.
 
 Cada entrada será extraída, de modo que o arquivo extraído tem o mesmo caminho relativo para `destinationDirectoryName` como a entrada tem para a raiz do arquivo morto.
 
 Se um arquivo a ser arquivado tem um inválido pela última hora da modificação, a primeira data e hora representada em Formato Zip timestamp (meia-noite de 1º de janeiro de 1980) serão ser usados.
 
          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationArchiveFileName" /> é uma cadeia de caracteres de comprimento zero, contém somente espaços em branco ou contém um ou mais caracteres inválidos conforme definido pelo <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="destinationArchiveFileName" /> é <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">O caminho especificado, o nome de arquivo, ou ambos excedem o tamanho máximo definido pelo sistema.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">O caminho especificado é inválido (por exemplo, ele está em uma unidade não mapeada).</exception>
        <exception cref="T:System.IO.IOException">O nome de um <see cref="T:System.IO.Compression.ZipArchiveEntry" /> tem comprimento zero, contém somente espaços em branco ou contém um ou mais caracteres inválidos conforme definido pelo <see cref="F:System.IO.Path.InvalidPathChars" />.

- ou -

Extraindo um <see cref="T:System.IO.Compression.ZipArchiveEntry" /> teria resultado em um arquivo de destino que está fora do <paramref name="destinationArchiveFileName" /> (por exemplo, se o nome da entrada contiver acessadores de diretório pai).

- ou -

Um <see cref="T:System.IO.Compression.ZipArchiveEntry" /> tem o mesmo nome que uma entrada já extraído do mesmo arquivo.</exception>
        <exception cref="T:System.UnauthorizedAccessException">O chamador não tem a permissão necessária.</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="destinationArchiveFileName" /> está em um formato inválido.</exception>
        <exception cref="T:System.IO.InvalidDataException">Um <see cref="T:System.IO.Compression.ZipArchiveEntry" /> não foi encontrado ou foi corrompido.

- ou -

Um <see cref="T:System.IO.Compression.ZipArchiveEntry" /> foi compactada usando um método de compactação sem suporte.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExtractToFile">
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Extrai uma entrada no arquivo zip para um arquivo.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExtractToFile">
      <MemberSignature Language="C#" Value="public static void ExtractToFile (this System.IO.Compression.ZipArchiveEntry source, string destinationFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExtractToFile(class System.IO.Compression.ZipArchiveEntry source, string destinationFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFileExtensions.ExtractToFile(System.IO.Compression.ZipArchiveEntry,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ExtractToFile (source As ZipArchiveEntry, destinationFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ExtractToFile(System::IO::Compression::ZipArchiveEntry ^ source, System::String ^ destinationFileName);" />
      <MemberSignature Language="F#" Value="static member ExtractToFile : System.IO.Compression.ZipArchiveEntry * string -&gt; unit" Usage="System.IO.Compression.ZipFileExtensions.ExtractToFile (source, destinationFileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Compression.ZipArchiveEntry" RefType="this" />
        <Parameter Name="destinationFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">A entrada do arquivo zip da qual um arquivo será extraído.</param>
        <param name="destinationFileName">O caminho do arquivo a ser criado do conteúdo da entrada. Você pode especificar um caminho absoluto ou relativo. Um caminho relativo é interpretado como relativo ao diretório de trabalho atual.</param>
        <summary>Extrai uma entrada no arquivo zip para um arquivo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o arquivo de destino já existir, esse método não substituí-lo; ele gera um <xref:System.IO.IOException> exceção. Para substituir um arquivo existente, use o <xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%2CSystem.Boolean%29> sobrecarga do método.  
  
 A última hora de gravação do arquivo é definida como a última vez em que a entrada no arquivo zip foi alterada; Esse valor é armazenado no <xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A> propriedade.  
  
 Você não pode usar esse método para extrair um diretório. Use o <xref:System.IO.Compression.ZipFileExtensions.ExtractToDirectory%2A> método em vez disso.  
  
   
  
## Examples  
 O exemplo a seguir mostra como iterar pelo conteúdo de um arquivo zip e extraia os arquivos que têm uma extensão. txt.  
  
 [!code-csharp[System.IO.Compression.ZipArchive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> é uma cadeia de comprimento zero, contém somente espaços em branco ou um ou mais caracteres inválidos, conforme definido por <see cref="F:System.IO.Path.InvalidPathChars" />.  
  
- ou - 
 <paramref name="destinationFileName" /> especifica um diretório.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="destinationFileName" /> é <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">O caminho especificado, o nome de arquivo, ou ambos excedem o tamanho máximo definido pelo sistema.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">O caminho especificado é inválido (por exemplo, ele está em uma unidade não mapeada).</exception>
        <exception cref="T:System.IO.IOException"><paramref name="destinationFileName" /> já existe.  
  
- ou - 
Ocorreu um erro de E/S.  
  
- ou - 
A entrada está aberta para gravação.  
  
- ou - 
A entrada foi excluída do arquivo.</exception>
        <exception cref="T:System.UnauthorizedAccessException">O chamador não tem a permissão necessária para criar o novo arquivo.</exception>
        <exception cref="T:System.IO.InvalidDataException">A entrada está ausente do arquivo ou está corrompida e não pode ser lida.  
  
- ou - 
A entrada foi compactada usando um método de compactação sem suporte.</exception>
        <exception cref="T:System.ObjectDisposedException">O arquivo zip a que esta entrada pertence foi descartado.</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="destinationFileName" /> está em um formato inválido.  
  
- ou - 
O arquivo zip desta entrada foi aberto no modo <see cref="F:System.IO.Compression.ZipArchiveMode.Create" />, que não permite a recuperação de entradas.</exception>
      </Docs>
    </Member>
    <Member MemberName="ExtractToFile">
      <MemberSignature Language="C#" Value="public static void ExtractToFile (this System.IO.Compression.ZipArchiveEntry source, string destinationFileName, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExtractToFile(class System.IO.Compression.ZipArchiveEntry source, string destinationFileName, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFileExtensions.ExtractToFile(System.IO.Compression.ZipArchiveEntry,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ExtractToFile (source As ZipArchiveEntry, destinationFileName As String, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ExtractToFile(System::IO::Compression::ZipArchiveEntry ^ source, System::String ^ destinationFileName, bool overwrite);" />
      <MemberSignature Language="F#" Value="static member ExtractToFile : System.IO.Compression.ZipArchiveEntry * string * bool -&gt; unit" Usage="System.IO.Compression.ZipFileExtensions.ExtractToFile (source, destinationFileName, overwrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Compression.ZipArchiveEntry" RefType="this" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">A entrada do arquivo zip da qual um arquivo será extraído.</param>
        <param name="destinationFileName">O caminho do arquivo a ser criado do conteúdo da entrada. Você pode especificar um caminho absoluto ou relativo. Um caminho relativo é interpretado como relativo ao diretório de trabalho atual.</param>
        <param name="overwrite"><see langword="true" /> para substituir um arquivo existente que tem o mesmo nome do arquivo de destino; caso contrário, <see langword="false" />.</param>
        <summary>Extrai uma entrada do arquivo zip para um arquivo e, opcionalmente, substitui um arquivo existente que tem o mesmo nome.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A última hora de gravação do arquivo é definida como a última vez em que a entrada no arquivo zip foi alterada; Esse valor é armazenado no <xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A> propriedade.  
  
 Você não pode usar esse método para extrair um diretório. Use o <xref:System.IO.Compression.ZipFileExtensions.ExtractToDirectory%2A> método em vez disso.  
  
   
  
## Examples  
 O exemplo a seguir mostra como iterar pelo conteúdo de um arquivo zip e extraia os arquivos que têm uma extensão. txt. Ele substitui um arquivo existente que tem o mesmo nome na pasta de destino. Em ordem ao compilador neste exemplo de código, você deve fazer referência a `System.IO.Compression` e `System.IO.Compression.FileSystem` assemblies em seu projeto.  
  
 [!code-csharp[System.IO.Compression.ZipArchive#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program2.cs#2)]
 [!code-vb[System.IO.Compression.ZipArchive#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> é uma cadeia de comprimento zero, contém somente espaços em branco ou um ou mais caracteres inválidos, conforme definido por <see cref="F:System.IO.Path.InvalidPathChars" />.  
  
- ou - 
 <paramref name="destinationFileName" /> especifica um diretório.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="destinationFileName" /> é <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">O caminho especificado, o nome de arquivo, ou ambos excedem o tamanho máximo definido pelo sistema.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">O caminho especificado é inválido (por exemplo, ele está em uma unidade não mapeada).</exception>
        <exception cref="T:System.IO.IOException"><paramref name="destinationFileName" /> já existe e <paramref name="overwrite" /> é <see langword="false" />.  
  
- ou - 
Ocorreu um erro de E/S.  
  
- ou - 
A entrada está aberta para gravação.  
  
- ou - 
A entrada foi excluída do arquivo.</exception>
        <exception cref="T:System.UnauthorizedAccessException">O chamador não tem a permissão necessária para criar o novo arquivo.</exception>
        <exception cref="T:System.IO.InvalidDataException">A entrada está ausente do arquivo ou está corrompida e não pode ser lida.  
  
- ou - 
A entrada foi compactada usando um método de compactação sem suporte.</exception>
        <exception cref="T:System.ObjectDisposedException">O arquivo zip a que esta entrada pertence foi descartado.</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="destinationFileName" /> está em um formato inválido.  
  
- ou - 
O arquivo zip desta entrada foi aberto no modo <see cref="F:System.IO.Compression.ZipArchiveMode.Create" />, que não permite a recuperação de entradas.</exception>
      </Docs>
    </Member>
  </Members>
</Type>