<Namespace Name="System.Text">
  <Metadata><Meta Name="ms.openlocfilehash" Value="34cddae6e8018aa3245a0db0838a6b65070528ea" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="30736130" /></Metadata><Docs>
    <summary>O namespace <see cref="T:System.String" /> contém classes que representam as codificações de caracteres ASCII e Unicode; classes base abstratas para a conversão de blocos de caracteres em e de blocos de bytes; e uma classe auxiliar que manipula e formata objetos <see cref="N:System.Text" /> sem criar instâncias intermediárias de <see cref="T:System.String" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 As classes de codificação destinam-se principalmente para converter entre codificações diferentes ou páginas de código e uma codificação Unicode. <xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType> A codificação (UTF-16) é usado internamente pelo .NET Framework, e <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> codificação é geralmente usada para armazenar dados de caractere para garantir a portabilidade entre culturas e computadores.  
  
 As classes derivadas de <xref:System.Text.Encoding> permitem que você escolher uma estratégia de fallback, que determina como os caracteres que não podem ser codificados em uma sequência de bytes ou bytes, que não podem ser decodificados em caracteres, são tratados. Você pode escolher um destes procedimentos:  
  
-   Fallback de exceção. Você pode optar por gerar exceções em erros de dados usando um `throwonerror` sinalizador está disponível em alguns construtores de classe ou usando o <xref:System.Text.EncoderExceptionFallback> e <xref:System.Text.DecoderExceptionFallback> classes. Se você estiver preocupado com a integridade do fluxo de dados, lançando uma exceção é recomendado.  
  
-   Fallback de substituição. Você pode usar o <xref:System.Text.EncoderFallback> e <xref:System.Text.DecoderFallback> classes alterar silenciosamente um caractere "?" ou para o caractere de substituição Unicode (U + FFFD).  
  
-   Fallback de melhor ajuste. Essa opção é mapeado para um caractere em uma codificação para um caractere em outra codificação. Fallback de ajuste recomendada geralmente não é recomendável porque pode causar perda de dados e a confusão e é mais lento do que simples "?" substituições de caracteres. No entanto, para páginas de código ANSI, o comportamento de fallback de melhor ajuste é o padrão.  
  
 O <xref:System.Text.StringBuilder> classe foi projetada para operações que executar manipulações de extensivas em uma única cadeia de caracteres. Ao contrário do <xref:System.String> classe, o <xref:System.Text.StringBuilder> classe é mutável e fornece um melhor desempenho ao concatenar ou excluir cadeias de caracteres.  
  
 Para obter mais informações sobre <xref:System.Text?displayProperty=nameWithType>, consulte [codificação de caracteres no .NET Framework](~/docs/standard/base-types/character-encoding.md) .  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>
