<Type Name="XamlLoadPermission" FullName="System.Xaml.Permissions.XamlLoadPermission">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4eca7a3d87598bbef8c1dc98723656905b1c02f3" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53494880" /></Metadata><TypeSignature Language="C#" Value="public sealed class XamlLoadPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit XamlLoadPermission extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.Permissions.XamlLoadPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XamlLoadPermission&#xA;Inherits CodeAccessPermission&#xA;Implements IUnrestrictedPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlLoadPermission sealed : System::Security::CodeAccessPermission, System::Security::Permissions::IUnrestrictedPermission" />
  <TypeSignature Language="F#" Value="type XamlLoadPermission = class&#xA;    inherit CodeAccessPermission&#xA;    interface IUnrestrictedPermission" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Declara as permissões para o carregamento de tipos de assemblies usados por um leitor ou gravador XAML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.Permissions.XamlLoadPermission> é relevante para cenários como se os tipos internos têm permissão para carregar sob confiança parcial.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlLoadPermission (System.Collections.Generic.IEnumerable&lt;System.Xaml.Permissions.XamlAccessLevel&gt; allowedAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.Permissions.XamlAccessLevel&gt; allowedAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Collections.Generic.IEnumerable{System.Xaml.Permissions.XamlAccessLevel})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (allowedAccess As IEnumerable(Of XamlAccessLevel))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlLoadPermission(System::Collections::Generic::IEnumerable&lt;System::Xaml::Permissions::XamlAccessLevel ^&gt; ^ allowedAccess);" />
      <MemberSignature Language="F#" Value="new System.Xaml.Permissions.XamlLoadPermission : seq&lt;System.Xaml.Permissions.XamlAccessLevel&gt; -&gt; System.Xaml.Permissions.XamlLoadPermission" Usage="new System.Xaml.Permissions.XamlLoadPermission allowedAccess" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="allowedAccess" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.Permissions.XamlAccessLevel&gt;" />
      </Parameters>
      <Docs>
        <param name="allowedAccess">Um conjunto enumerável de valores <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> específicos.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> usando um conjunto enumerável de valores <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> específicos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uma chamada para esse construtor inicializa o <xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A> coleção com cada `allowedAccess` entrada como um item e define o retorno para <xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A> para `false` na instância criada.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="allowedAccess" /> é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="allowedAccess" /> continha informações inválidas, como um item nulo.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlLoadPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlLoadPermission(System::Security::Permissions::PermissionState state);" />
      <MemberSignature Language="F#" Value="new System.Xaml.Permissions.XamlLoadPermission : System.Security.Permissions.PermissionState -&gt; System.Xaml.Permissions.XamlLoadPermission" Usage="new System.Xaml.Permissions.XamlLoadPermission state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">Um valor de enumeração <see cref="T:System.Security.Permissions.PermissionState" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> usando as permissões existentes.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Permissions.PermissionState.Unrestricted> Define o retorno de <xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A> para `true` na instância criada. Qualquer chamada para esse construtor define a <xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A> coleção `null` porque ele não é relevante se permissões estão sendo relatadas em vez de <xref:System.Xaml.Permissions.XamlAccessLevel>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlLoadPermission (System.Xaml.Permissions.XamlAccessLevel allowedAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.Permissions.XamlAccessLevel allowedAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Xaml.Permissions.XamlAccessLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (allowedAccess As XamlAccessLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlLoadPermission(System::Xaml::Permissions::XamlAccessLevel ^ allowedAccess);" />
      <MemberSignature Language="F#" Value="new System.Xaml.Permissions.XamlLoadPermission : System.Xaml.Permissions.XamlAccessLevel -&gt; System.Xaml.Permissions.XamlLoadPermission" Usage="new System.Xaml.Permissions.XamlLoadPermission allowedAccess" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="allowedAccess" Type="System.Xaml.Permissions.XamlAccessLevel" />
      </Parameters>
      <Docs>
        <param name="allowedAccess">O valor <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> de definição.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> usando um único valor <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uma chamada para esse construtor inicializa o <xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A> coleção com `allowedAccess` como o único item e define o retorno para <xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A> para `false` na instância criada.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="allowedAccess" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AllowedAccess">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.Permissions.XamlAccessLevel&gt; AllowedAccess { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.Permissions.XamlAccessLevel&gt; AllowedAccess" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowedAccess As IList(Of XamlAccessLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::Permissions::XamlAccessLevel ^&gt; ^ AllowedAccess { System::Collections::Generic::IList&lt;System::Xaml::Permissions::XamlAccessLevel ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowedAccess : System.Collections.Generic.IList&lt;System.Xaml.Permissions.XamlAccessLevel&gt;" Usage="System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.Permissions.XamlAccessLevel&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a lista de todos os valores <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> que esse <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> representa.</summary>
        <value>Uma lista de somente leitura <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> valores, ou <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o atual <xref:System.Xaml.Permissions.XamlLoadPermission> é inicializado, de modo que <xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A> é `true`, <xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A> pode ser `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlLoadPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="override this.Copy : unit -&gt; System.Security.IPermission" Usage="xamlLoadPermission.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cria e retorna uma cópia idêntica da <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> atual.</summary>
        <returns>Uma cópia das <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> atuais.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Por que o contrato da interface de <xref:System.Security.IPermission> esse valor é <xref:System.Security.IPermission> na assinatura, mas pode ser convertido em <xref:System.Xaml.Permissions.XamlLoadPermission>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement elem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement elem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlLoadPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXml (elem As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ elem);" />
      <MemberSignature Language="F#" Value="override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="xamlLoadPermission.FromXml elem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elem" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="elem">A codificação XML a ser usada para reconstruir o objeto de segurança.</param>
        <summary>Reconstrói um objeto de segurança com um estado especificado de uma codificação XML.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="elem" /> é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="elem" /> não contém a codificação XML para um <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.  
  
- ou - 
O atributo de versão em <paramref name="elem" /> não é compatível.</exception>
      </Docs>
    </Member>
    <Member MemberName="Includes">
      <MemberSignature Language="C#" Value="public bool Includes (System.Xaml.Permissions.XamlAccessLevel requestedAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Includes(class System.Xaml.Permissions.XamlAccessLevel requestedAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlLoadPermission.Includes(System.Xaml.Permissions.XamlAccessLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Function Includes (requestedAccess As XamlAccessLevel) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Includes(System::Xaml::Permissions::XamlAccessLevel ^ requestedAccess);" />
      <MemberSignature Language="F#" Value="member this.Includes : System.Xaml.Permissions.XamlAccessLevel -&gt; bool" Usage="xamlLoadPermission.Includes requestedAccess" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestedAccess" Type="System.Xaml.Permissions.XamlAccessLevel" />
      </Parameters>
      <Docs>
        <param name="requestedAccess">O <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> específico a verificar.</param>
        <summary>Retorna se este <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> inclui um <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> especificado na sua lista <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" />.</summary>
        <returns><see langword="true" /> se <paramref name="requestedAccess" /> existir como um item na lista <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" /> do <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> atual. Caso contrário, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="requestedAccess" /> é nulo.</exception>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlLoadPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="xamlLoadPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">O <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> a ser cruzado com o <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> atual. Pode ser <see langword="null" />.</param>
        <summary>Cria e retorna um <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> que é a interseção do <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> atual e a permissão especificada.</summary>
        <returns>Uma nova permissão que representa a interseção da <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> atual e da <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> especificada. Essa nova permissão é <see langword="null" /> se a interseção estiver vazia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para union, intersect e a lógica de subconjunto <xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A> é verificada pela primeira vez e pode retornar um resultado com base apenas nessa verificação. Em seguida, <xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A> é verificada.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="target" /> não é <see langword="null" /> ou não é um <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlLoadPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="xamlLoadPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Uma permissão que deve ser testada quanto à relação de subconjunto. Pode ser <see langword="null" />.</param>
        <summary>Determina se a <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> atual é um subconjunto da permissão especificada.</summary>
        <returns><see langword="true" /> se a <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> atual for um subconjunto da permissão especificada; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para union, intersect e a lógica de subconjunto <xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A> é verificada pela primeira vez e pode retornar um resultado com base apenas nessa verificação. Em seguida, <xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A> é verificada.  
  
 Se `target` está `null` e atual <xref:System.Xaml.Permissions.XamlLoadPermission> tanto <xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A> `false` e possui um vazio <xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A> listar, esse método retornará `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="target" /> não é <see langword="null" /> ou não é um <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUnrestricted();" />
      <MemberSignature Language="F#" Value="abstract member IsUnrestricted : unit -&gt; bool&#xA;override this.IsUnrestricted : unit -&gt; bool" Usage="xamlLoadPermission.IsUnrestricted " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Permissions.IUnrestrictedPermission.IsUnrestricted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna se este <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> denota permissões irrestritas.</summary>
        <returns><see langword="true" /> se este <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> denotar permissões irrestritas. <see langword="false" /> se este <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> tiver restrições de nível de acesso específicas em <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" /> ou não tiver permissões.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlLoadPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="xamlLoadPermission.ToXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cria uma codificação XML deste <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> e seu estado atual.</summary>
        <returns>Uma codificação de XML deste <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />, incluindo quaisquer informações de estado.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlLoadPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (other As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ other);" />
      <MemberSignature Language="F#" Value="override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="xamlLoadPermission.Union other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="other">Um <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> a ser combinado ao <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> atual. Pode ser <see langword="null" />.</param>
        <summary>Cria uma permissão que é a união entre a <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> atual e a permissão especificada.</summary>
        <returns>Um novo <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> que representa a união do <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> atual e do <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para union, intersect e a lógica de subconjunto <xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A> é verificada pela primeira vez e pode retornar um resultado com base apenas nessa verificação. Em seguida, <xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A> é verificada.  
  
 Se `other` está `null`, atual <xref:System.Xaml.Permissions.XamlLoadPermission> é retornado.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="other" /> não é <see langword="null" /> ou não é um <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>