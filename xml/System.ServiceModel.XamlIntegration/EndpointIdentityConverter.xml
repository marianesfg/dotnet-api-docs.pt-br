<Type Name="EndpointIdentityConverter" FullName="System.ServiceModel.XamlIntegration.EndpointIdentityConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2edb31e121573d1de91e60fd84ff561958ba0f3d" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39777560" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EndpointIdentityConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EndpointIdentityConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.XamlIntegration.EndpointIdentityConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class EndpointIdentityConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class EndpointIdentityConverter : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type EndpointIdentityConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="a03b3-101">Converte uma instância <see cref="T:System.ServiceModel.EndpointIdentity" /> no tipo especificado.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a03b3-101">Converts an <see cref="T:System.ServiceModel.EndpointIdentity" /> instance to the specified type.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EndpointIdentityConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.XamlIntegration.EndpointIdentityConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EndpointIdentityConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a03b3-102">Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.XamlIntegration.EndpointIdentityConverter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a03b3-102">Initializes a new instance of the <see cref="T:System.ServiceModel.XamlIntegration.EndpointIdentityConverter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.XamlIntegration.EndpointIdentityConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="endpointIdentityConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="a03b3-103">Um contexto de descritor de tipo que fornece um contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a03b3-103">A type descriptor context that provides a format context.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="a03b3-104">O tipo para o qual você deseja converter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a03b3-104">The type you want to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a03b3-105">Obtém um valor que determina se o conversor pode converter uma instância <see cref="T:System.ServiceModel.EndpointIdentity" /> no tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a03b3-105">Gets a value that determines whether the converter can convert an <see cref="T:System.ServiceModel.EndpointIdentity" /> instance to the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a03b3-106">
            <see langword="true" /> se o conversor puder realizar a conversão solicitada; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a03b3-106">
              <see langword="true" /> if the converter can perform the conversion requested; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.XamlIntegration.EndpointIdentityConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj&#xA;override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="endpointIdentityConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="a03b3-107">Um <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que fornece um contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a03b3-107">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="a03b3-108">As informações de cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a03b3-108">The culture information.</span>
          </span>
          <span data-ttu-id="a03b3-109">Se <see langword="null" /> for passado, a cultura atual será assumida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a03b3-109">If <see langword="null" /> is passed, the current culture is assumed.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="a03b3-110">O objeto a ser convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a03b3-110">The object to convert.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="a03b3-111">O tipo para o qual o parâmetro <c>value</c> será convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a03b3-111">The type to convert the <c>value</c> parameter to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a03b3-112">Converte o objeto fornecido no tipo indicado, usando as informações de contexto e de cultura especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a03b3-112">Converts the given object to the specified type, using the specified context and culture information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a03b3-113">O valor convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a03b3-113">The converted value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>