<Type Name="Hashtable" FullName="System.Collections.Hashtable">
  <TypeSignature Language="C#" Value="public class Hashtable : ICloneable, System.Collections.IDictionary, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Hashtable extends System.Object implements class System.Collections.ICollection, class System.Collections.IDictionary, class System.Collections.IEnumerable, class System.ICloneable, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Hashtable" />
  <TypeSignature Language="VB.NET" Value="Public Class Hashtable&#xA;Implements ICloneable, IDeserializationCallback, IDictionary, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Hashtable : ICloneable, System::Collections::IDictionary, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.NonGeneric</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IDictionary</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Hashtable/HashtableDebugView))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d5132-101">Representa uma coleção de pares chave-valor organizados com base no código hash da chave.</span><span class="sxs-lookup"><span data-stu-id="d5132-101">Represents a collection of key/value pairs that are organized based on the hash code of the key.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5132-102">Cada elemento é um par chave/valor armazenado em um <xref:System.Collections.DictionaryEntry> objeto.</span><span class="sxs-lookup"><span data-stu-id="d5132-102">Each element is a key/value pair stored in a <xref:System.Collections.DictionaryEntry> object.</span></span> <span data-ttu-id="d5132-103">Uma chave não pode ser `null`, mas pode ser um valor.</span><span class="sxs-lookup"><span data-stu-id="d5132-103">A key cannot be `null`, but a value can be.</span></span>  
  
 <span data-ttu-id="d5132-104">Os objetos usados como chaves por um <xref:System.Collections.Hashtable> são necessárias para substituir o <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> método (ou o <xref:System.Collections.IHashCodeProvider> interface) e o <xref:System.Object.Equals%2A?displayProperty=nameWithType> método (ou o <xref:System.Collections.IComparer> interface).</span><span class="sxs-lookup"><span data-stu-id="d5132-104">The objects used as keys by a <xref:System.Collections.Hashtable> are required to override the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> method (or the <xref:System.Collections.IHashCodeProvider> interface) and the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method (or the <xref:System.Collections.IComparer> interface).</span></span> <span data-ttu-id="d5132-105">A implementação de métodos e interfaces deve lidar com diferenciação de maiusculas e minúsculas do mesmo modo; Caso contrário, o <xref:System.Collections.Hashtable> podem se comportar de forma incorreta.</span><span class="sxs-lookup"><span data-stu-id="d5132-105">The implementation of both methods and interfaces must handle case sensitivity the same way; otherwise, the <xref:System.Collections.Hashtable> might behave incorrectly.</span></span> <span data-ttu-id="d5132-106">Por exemplo, ao criar um <xref:System.Collections.Hashtable>, você deve usar o <xref:System.Collections.CaseInsensitiveHashCodeProvider> classe (ou qualquer maiusculas de minúsculas <xref:System.Collections.IHashCodeProvider> implementação) com o <xref:System.Collections.CaseInsensitiveComparer> classe (ou qualquer maiusculas de minúsculas <xref:System.Collections.IComparer> implementação).</span><span class="sxs-lookup"><span data-stu-id="d5132-106">For example, when creating a <xref:System.Collections.Hashtable>, you must use the <xref:System.Collections.CaseInsensitiveHashCodeProvider> class (or any case-insensitive <xref:System.Collections.IHashCodeProvider> implementation) with the <xref:System.Collections.CaseInsensitiveComparer> class (or any case-insensitive <xref:System.Collections.IComparer> implementation).</span></span>  
  
 <span data-ttu-id="d5132-107">Além disso, esses métodos devem produzir os mesmos resultados quando chamado com os mesmos parâmetros, enquanto a chave existe no <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="d5132-107">Furthermore, these methods must produce the same results when called with the same parameters while the key exists in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="d5132-108">Uma alternativa é usar um <xref:System.Collections.Hashtable> construtor com um <xref:System.Collections.IEqualityComparer> parâmetro.</span><span class="sxs-lookup"><span data-stu-id="d5132-108">An alternative is to use a <xref:System.Collections.Hashtable> constructor with an <xref:System.Collections.IEqualityComparer> parameter.</span></span> <span data-ttu-id="d5132-109">Se a igualdade de chave foram igualdade de referência simplesmente, a implementação herdada do <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> e <xref:System.Object.Equals%2A?displayProperty=nameWithType> seria suficiente.</span><span class="sxs-lookup"><span data-stu-id="d5132-109">If key equality were simply reference equality, the inherited implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> and <xref:System.Object.Equals%2A?displayProperty=nameWithType> would suffice.</span></span>  
  
 <span data-ttu-id="d5132-110">Objetos de chave devem ser imutáveis, desde que eles são usados como chaves no <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="d5132-110">Key objects must be immutable as long as they are used as keys in the <xref:System.Collections.Hashtable>.</span></span>  
  
 <span data-ttu-id="d5132-111">Quando um elemento é adicionado para o <xref:System.Collections.Hashtable>, o elemento é colocado em um recipiente com base no código hash da chave.</span><span class="sxs-lookup"><span data-stu-id="d5132-111">When an element is added to the <xref:System.Collections.Hashtable>, the element is placed into a bucket based on the hash code of the key.</span></span> <span data-ttu-id="d5132-112">Pesquisas subsequentes da chave usam o código hash da chave para pesquisar em apenas um bucket específico, reduzindo o número de comparações de chave necessários para localizar um elemento substancialmente.</span><span class="sxs-lookup"><span data-stu-id="d5132-112">Subsequent lookups of the key use the hash code of the key to search in only one particular bucket, thus substantially reducing the number of key comparisons required to find an element.</span></span>  
  
 <span data-ttu-id="d5132-113">O fator de carga de um <xref:System.Collections.Hashtable> determina a taxa máxima de elementos para buckets.</span><span class="sxs-lookup"><span data-stu-id="d5132-113">The load factor of a <xref:System.Collections.Hashtable> determines the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="d5132-114">Fatores de menor carga causam vezes mais rápido médio pesquisa às custas de maior consumo de memória.</span><span class="sxs-lookup"><span data-stu-id="d5132-114">Smaller load factors cause faster average lookup times at the cost of increased memory consumption.</span></span> <span data-ttu-id="d5132-115">O fator de carga padrão de 1.0 geralmente fornece o melhor equilíbrio entre a velocidade e tamanho.</span><span class="sxs-lookup"><span data-stu-id="d5132-115">The default load factor of 1.0 generally provides the best balance between speed and size.</span></span> <span data-ttu-id="d5132-116">Um fator de carga diferentes também pode ser especificado quando o <xref:System.Collections.Hashtable> é criado.</span><span class="sxs-lookup"><span data-stu-id="d5132-116">A different load factor can also be specified when the <xref:System.Collections.Hashtable> is created.</span></span>  
  
 <span data-ttu-id="d5132-117">Como os elementos são adicionados a um <xref:System.Collections.Hashtable>, o fator de carga real do <xref:System.Collections.Hashtable> aumenta.</span><span class="sxs-lookup"><span data-stu-id="d5132-117">As elements are added to a <xref:System.Collections.Hashtable>, the actual load factor of the <xref:System.Collections.Hashtable> increases.</span></span> <span data-ttu-id="d5132-118">Quando o fator de carga real atinge o fator de carga especificado, o número de buckets no <xref:System.Collections.Hashtable> é automaticamente aumentado para o menor número primo maior que duas vezes o número atual de <xref:System.Collections.Hashtable> buckets.</span><span class="sxs-lookup"><span data-stu-id="d5132-118">When the actual load factor reaches the specified load factor, the number of buckets in the <xref:System.Collections.Hashtable> is automatically increased to the smallest prime number that is larger than twice the current number of <xref:System.Collections.Hashtable> buckets.</span></span>  
  
 <span data-ttu-id="d5132-119">Cada objeto de chave no <xref:System.Collections.Hashtable> deve fornecer sua própria função de hash, que pode ser acessada por meio da chamada <xref:System.Collections.Hashtable.GetHash%2A>.</span><span class="sxs-lookup"><span data-stu-id="d5132-119">Each key object in the <xref:System.Collections.Hashtable> must provide its own hash function, which can be accessed by calling <xref:System.Collections.Hashtable.GetHash%2A>.</span></span> <span data-ttu-id="d5132-120">No entanto, qualquer objeto que implementa <xref:System.Collections.IHashCodeProvider> pode ser passado para um <xref:System.Collections.Hashtable> construtor e que a função de hash é usada para todos os objetos na tabela.</span><span class="sxs-lookup"><span data-stu-id="d5132-120">However, any object implementing <xref:System.Collections.IHashCodeProvider> can be passed to a <xref:System.Collections.Hashtable> constructor, and that hash function is used for all objects in the table.</span></span>  
  
 <span data-ttu-id="d5132-121">A capacidade de um <xref:System.Collections.Hashtable> é o número de elementos de <xref:System.Collections.Hashtable> pode conter.</span><span class="sxs-lookup"><span data-stu-id="d5132-121">The capacity of a <xref:System.Collections.Hashtable> is the number of elements the <xref:System.Collections.Hashtable> can hold.</span></span> <span data-ttu-id="d5132-122">Como os elementos são adicionados a um <xref:System.Collections.Hashtable>, a capacidade é aumentada automaticamente conforme necessário por meio de realocação.</span><span class="sxs-lookup"><span data-stu-id="d5132-122">As elements are added to a <xref:System.Collections.Hashtable>, the capacity is automatically increased as required through reallocation.</span></span>  
  
 <span data-ttu-id="d5132-123">Para grandes <xref:System.Collections.Hashtable> objetos, você pode aumentar a capacidade máxima para 2 bilhões de elementos em um sistema de 64 bits definindo o `enabled` atributo do elemento de configuração para `true` no ambiente de tempo de execução.</span><span class="sxs-lookup"><span data-stu-id="d5132-123">For very large <xref:System.Collections.Hashtable> objects, you can increase the maximum capacity to 2 billion elements on a 64-bit system by setting the `enabled` attribute of the  configuration element to `true` in the run-time environment.</span></span>  
  
 <span data-ttu-id="d5132-124">O `foreach` instrução de linguagem c# (`For Each` no Visual Basic) retorna um objeto do tipo dos elementos na coleção.</span><span class="sxs-lookup"><span data-stu-id="d5132-124">The `foreach` statement of the C# language (`For Each` in Visual Basic) returns an object of the type of the elements in the collection.</span></span> <span data-ttu-id="d5132-125">Desde que cada elemento do <xref:System.Collections.Hashtable> é um par chave/valor, o tipo de elemento não é o tipo de chave ou o tipo do valor.</span><span class="sxs-lookup"><span data-stu-id="d5132-125">Since each element of the <xref:System.Collections.Hashtable> is a key/value pair, the element type is not the type of the key or the type of the value.</span></span> <span data-ttu-id="d5132-126">Em vez disso, o tipo de elemento é <xref:System.Collections.DictionaryEntry>.</span><span class="sxs-lookup"><span data-stu-id="d5132-126">Instead, the element type is <xref:System.Collections.DictionaryEntry>.</span></span> <span data-ttu-id="d5132-127">Por exemplo:</span><span class="sxs-lookup"><span data-stu-id="d5132-127">For example:</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ClassExample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ClassExample/cpp/remarks.cpp#01)]
 [!code-csharp[System.Collections.Hashtable_ClassExample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ClassExample/cs/remarks.cs#01)]
 [!code-vb[System.Collections.Hashtable_ClassExample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ClassExample/vb/remarks.vb#01)]  
  
 <span data-ttu-id="d5132-128">O `foreach` instrução é um wrapper em torno de enumerador, que só permite ler, gravar não à coleção.</span><span class="sxs-lookup"><span data-stu-id="d5132-128">The `foreach` statement is a wrapper around the enumerator, which only allows reading from, not writing to, the collection.</span></span>  
  
 <span data-ttu-id="d5132-129">Como a serialização e desserialização de um enumerador para um <xref:System.Collections.Hashtable> pode fazer com que os elementos para se tornar reordenadas, não é possível continuar a enumeração sem chamar o <xref:System.Collections.IEnumerator.Reset%2A> método.</span><span class="sxs-lookup"><span data-stu-id="d5132-129">Because serializing and deserializing an enumerator for a <xref:System.Collections.Hashtable> can cause the elements to become reordered, it is not possible to continue enumeration without calling the <xref:System.Collections.IEnumerator.Reset%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d5132-130">Porque as chaves podem ser herdadas e seu comportamento é alterado, a exclusividade absoluta não pode ser garantida pelo comparações que usam o <xref:System.Type.Equals%2A> método.</span><span class="sxs-lookup"><span data-stu-id="d5132-130">Because keys can be inherited and their behavior changed, their absolute uniqueness cannot be guaranteed by comparisons using the <xref:System.Type.Equals%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5132-131">O exemplo a seguir mostra como criar, inicializar e executar várias funções para um <xref:System.Collections.Hashtable> e como imprimir suas chaves e valores.</span><span class="sxs-lookup"><span data-stu-id="d5132-131">The following example shows how to create, initialize and perform various functions to a <xref:System.Collections.Hashtable> and how to print out its keys and values.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ClassExample#00](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ClassExample/cpp/hashtable_example.cpp#00)]
 [!code-csharp[System.Collections.Hashtable_ClassExample#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ClassExample/cs/hashtable_example.cs#00)]
 [!code-vb[System.Collections.Hashtable_ClassExample#00](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ClassExample/vb/hashtable_example.vb#00)]
 [!code-powershell[System.Collections.Hashtable_ClassExample#00](~/samples/snippets/powershell/VS_Snippets_CLR_System/system.collections.hashtable.class/ps/hashtable.ps1#00)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="d5132-132"><see cref="T:System.Collections.Hashtable" /> é seguro para uso por vários threads de leitor e um thread único escrita para thread.</span><span class="sxs-lookup"><span data-stu-id="d5132-132"><see cref="T:System.Collections.Hashtable" /> is thread safe for use by multiple reader threads and a single writing thread.</span></span> <span data-ttu-id="d5132-133">É thread-safe para usar o multi-thread quando somente um dos threads executar operações de gravação (atualização), que permite leituras sem bloqueio desde que os gravadores são serializados para o <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-133">It is thread safe for multi-thread use when only one of the threads perform write (update) operations, which allows for lock-free reads provided that the writers are serialized to the <see cref="T:System.Collections.Hashtable" />.</span></span> <span data-ttu-id="d5132-134">Para dar suporte a vários gravadores todas as operações na <see cref="T:System.Collections.Hashtable" /> deve ser feito por meio do wrapper retornado pelo <see cref="M:System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)" /> método, fornecido que não há nenhum thread de leitura de <see cref="T:System.Collections.Hashtable" /> objeto.</span><span class="sxs-lookup"><span data-stu-id="d5132-134">To support multiple writers all operations on the <see cref="T:System.Collections.Hashtable" /> must be done through the wrapper returned by the <see cref="M:System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)" /> method, provided that there are no threads reading the <see cref="T:System.Collections.Hashtable" /> object.</span></span>  
  
 <span data-ttu-id="d5132-135">Enumerar através de uma coleção intrinsecamente não é um procedimento de segurança do thread.</span><span class="sxs-lookup"><span data-stu-id="d5132-135">Enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="d5132-136">Mesmo quando uma coleção está sincronizada, outros threads ainda podem modificar a coleção, o que faz o enumerador lançar uma exceção.</span><span class="sxs-lookup"><span data-stu-id="d5132-136">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="d5132-137">Para garantir thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração ou verificar as exceções resultantes das alterações feitas por outros threads.</span><span class="sxs-lookup"><span data-stu-id="d5132-137">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span></threadsafe>
    <altmember cref="T:System.Collections.IDictionary" />
    <altmember cref="T:System.Collections.IHashCodeProvider" />
    <altmember cref="M:System.Object.GetHashCode" />
    <altmember cref="M:System.Object.Equals(System.Object)" />
    <altmember cref="T:System.Collections.DictionaryEntry" />
    <altmember cref="T:System.Collections.Generic.Dictionary`2" />
    <altmember cref="T:System.Collections.IEqualityComparer" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d5132-138">Inicializa uma nova instância da classe <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-138">Initializes a new instance of the <see cref="T:System.Collections.Hashtable" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d5132-139">Inicializa uma instância nova e vazia da classe <see cref="T:System.Collections.Hashtable" /> usando a capacidade inicial, o fator de carga, o provedor de código hash e o comparador padrão.</span><span class="sxs-lookup"><span data-stu-id="d5132-139">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the default initial capacity, load factor, hash code provider, and comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5132-140">Capacidade de uma tabela de hash é usada para calcular o número ideal de buckets de tabela de hash com base no fator de carga.</span><span class="sxs-lookup"><span data-stu-id="d5132-140">A hash table's capacity is used to calculate the optimal number of hash table buckets based on the load factor.</span></span> <span data-ttu-id="d5132-141">A capacidade é aumentada automaticamente conforme necessário.</span><span class="sxs-lookup"><span data-stu-id="d5132-141">Capacity is automatically increased as required.</span></span>  
  
 <span data-ttu-id="d5132-142">O fator de carga é a taxa máxima de elementos para buckets.</span><span class="sxs-lookup"><span data-stu-id="d5132-142">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="d5132-143">Um fator de carga menor significa que a pesquisa mais rápida às custas de maior consumo de memória.</span><span class="sxs-lookup"><span data-stu-id="d5132-143">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="d5132-144">Quando o fator de carga real atinge o fator de carga especificado, o número de buckets é automaticamente aumentado para o menor número primo maior que duas vezes o número atual de recipientes.</span><span class="sxs-lookup"><span data-stu-id="d5132-144">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="d5132-145">O provedor de código hash dispensa códigos hash para chaves de <xref:System.Collections.Hashtable> objeto.</span><span class="sxs-lookup"><span data-stu-id="d5132-145">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="d5132-146">O provedor de código de hash padrão é a implementação da chave de <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d5132-146">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d5132-147">O comparador determina se duas chaves são iguais.</span><span class="sxs-lookup"><span data-stu-id="d5132-147">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="d5132-148">Todas as chaves em um <xref:System.Collections.Hashtable> devem ser exclusivos.</span><span class="sxs-lookup"><span data-stu-id="d5132-148">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="d5132-149">O comparador padrão é a implementação da chave de <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d5132-149">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d5132-150">Este construtor é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="d5132-150">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5132-151">O exemplo de código a seguir cria tabelas de hash usando diferentes <xref:System.Collections.Hashtable> construtores e demonstra as diferenças no comportamento das tabelas de hash, mesmo se cada uma contém os mesmos elementos.</span><span class="sxs-lookup"><span data-stu-id="d5132-151">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/CPP/hashtable_ctor.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/CS/hashtable_ctor.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/VB/hashtable_ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (System.Collections.IDictionary d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (d As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(System::Collections::IDictionary ^ d);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="d" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="d5132-152">O <see cref="T:System.Collections.IDictionary" /> objeto a ser copiado para um novo objeto <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-152">The <see cref="T:System.Collections.IDictionary" /> object to copy to a new <see cref="T:System.Collections.Hashtable" /> object.</span></span></param>
        <summary><span data-ttu-id="d5132-153">Inicializa uma nova instância da classe <see cref="T:System.Collections.Hashtable" /> copiando os elementos do dicionário especificado para o novo objeto <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-153">Initializes a new instance of the <see cref="T:System.Collections.Hashtable" /> class by copying the elements from the specified dictionary to the new <see cref="T:System.Collections.Hashtable" /> object.</span></span> <span data-ttu-id="d5132-154">O novo objeto <see cref="T:System.Collections.Hashtable" /> tem uma capacidade inicial igual ao número de elementos copiados e usa o fator de carga, o provedor de código hash e o comparador padrão.</span><span class="sxs-lookup"><span data-stu-id="d5132-154">The new <see cref="T:System.Collections.Hashtable" /> object has an initial capacity equal to the number of elements copied, and uses the default load factor, hash code provider, and comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5132-155">A capacidade inicial é definida como o número de elementos no dicionário de origem.</span><span class="sxs-lookup"><span data-stu-id="d5132-155">The initial capacity is set to the number of elements in the source dictionary.</span></span> <span data-ttu-id="d5132-156">A capacidade é automaticamente aumentado, conforme necessário, com base no fator de carga.</span><span class="sxs-lookup"><span data-stu-id="d5132-156">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="d5132-157">O fator de carga é a taxa máxima de elementos para buckets.</span><span class="sxs-lookup"><span data-stu-id="d5132-157">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="d5132-158">Um fator de carga menor significa que a pesquisa mais rápida às custas de maior consumo de memória.</span><span class="sxs-lookup"><span data-stu-id="d5132-158">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="d5132-159">Quando o fator de carga real atinge o fator de carga especificado, o número de buckets é automaticamente aumentado para o menor número primo maior que duas vezes o número atual de recipientes.</span><span class="sxs-lookup"><span data-stu-id="d5132-159">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="d5132-160">O provedor de código hash dispensa códigos hash para chaves de <xref:System.Collections.Hashtable> objeto.</span><span class="sxs-lookup"><span data-stu-id="d5132-160">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="d5132-161">O provedor de código de hash padrão é a implementação da chave de <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d5132-161">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d5132-162">O comparador determina se duas chaves são iguais.</span><span class="sxs-lookup"><span data-stu-id="d5132-162">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="d5132-163">Todas as chaves em um <xref:System.Collections.Hashtable> devem ser exclusivos.</span><span class="sxs-lookup"><span data-stu-id="d5132-163">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="d5132-164">O comparador padrão é a implementação da chave de <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d5132-164">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d5132-165">Os elementos da nova <xref:System.Collections.Hashtable> são classificados na mesma ordem em que o enumerador que itera por meio de <xref:System.Collections.IDictionary> objeto.</span><span class="sxs-lookup"><span data-stu-id="d5132-165">The elements of the new <xref:System.Collections.Hashtable> are sorted in the same order in which the enumerator iterates through the <xref:System.Collections.IDictionary> object.</span></span>  
  
 <span data-ttu-id="d5132-166">Este construtor é um O (`n`) operação, onde `n` é o número de elementos de `d` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="d5132-166">This constructor is an O(`n`) operation, where `n` is the number of elements in the `d` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5132-167">O exemplo de código a seguir cria tabelas de hash usando diferentes <xref:System.Collections.Hashtable> construtores e demonstra as diferenças no comportamento das tabelas de hash, mesmo se cada uma contém os mesmos elementos.</span><span class="sxs-lookup"><span data-stu-id="d5132-167">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorDictionary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionary/CPP/hashtable_ctordictionary.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorDictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionary/CS/hashtable_ctordictionary.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorDictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionary/VB/hashtable_ctordictionary.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5132-168"><paramref name="d" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-168"><paramref name="d" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (System.Collections.IEqualityComparer equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IEqualityComparer equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (equalityComparer As IEqualityComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(System::Collections::IEqualityComparer ^ equalityComparer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="equalityComparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="equalityComparer"><span data-ttu-id="d5132-169">O objeto <see cref="T:System.Collections.IEqualityComparer" /> que define o provedor de código hash e o comparador para usar com o objeto <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-169">The <see cref="T:System.Collections.IEqualityComparer" /> object that defines the hash code provider and the comparer to use with the <see cref="T:System.Collections.Hashtable" /> object.</span></span>  
  
 <span data-ttu-id="d5132-170">- ou -</span><span class="sxs-lookup"><span data-stu-id="d5132-170">-or-</span></span>  
  
 <span data-ttu-id="d5132-171"><see langword="null" /> para usar o provedor de código hash padrão e o comparador padrão.</span><span class="sxs-lookup"><span data-stu-id="d5132-171"><see langword="null" /> to use the default hash code provider and the default comparer.</span></span> <span data-ttu-id="d5132-172">O provedor de código hash padrão é a implementação de cada chave de <see cref="M:System.Object.GetHashCode" /> e o comparador padrão é a implementação de cada chave de <see cref="M:System.Object.Equals(System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-172">The default hash code provider is each key's implementation of <see cref="M:System.Object.GetHashCode" /> and the default comparer is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span></span></param>
        <summary><span data-ttu-id="d5132-173">Inicializa uma instância nova e vazia da classe <see cref="T:System.Collections.Hashtable" /> usando a capacidade inicial e o fator de carga padrão e o objeto <see cref="T:System.Collections.IEqualityComparer" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="d5132-173">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the default initial capacity and load factor, and the specified <see cref="T:System.Collections.IEqualityComparer" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5132-174">Capacidade de uma tabela de hash é usada para calcular o número ideal de buckets de tabela de hash com base no fator de carga.</span><span class="sxs-lookup"><span data-stu-id="d5132-174">A hash table's capacity is used to calculate the optimal number of hash table buckets based on the load factor.</span></span> <span data-ttu-id="d5132-175">A capacidade é aumentada automaticamente conforme necessário.</span><span class="sxs-lookup"><span data-stu-id="d5132-175">Capacity is automatically increased as required.</span></span>  
  
 <span data-ttu-id="d5132-176">O fator de carga é a taxa máxima de elementos para buckets.</span><span class="sxs-lookup"><span data-stu-id="d5132-176">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="d5132-177">Um fator de carga menor significa que a pesquisa mais rápida às custas de maior consumo de memória.</span><span class="sxs-lookup"><span data-stu-id="d5132-177">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="d5132-178">Quando o fator de carga real atinge o fator de carga especificado, o número de buckets é automaticamente aumentado para o menor número primo maior que duas vezes o número atual de recipientes.</span><span class="sxs-lookup"><span data-stu-id="d5132-178">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="d5132-179">O <xref:System.Collections.IEqualityComparer> objeto inclui o provedor de código de hash e o comparador.</span><span class="sxs-lookup"><span data-stu-id="d5132-179">The <xref:System.Collections.IEqualityComparer> object includes both the hash code provider and the comparer.</span></span> <span data-ttu-id="d5132-180">Se um <xref:System.Collections.IEqualityComparer> é usado no <xref:System.Collections.Hashtable> construtor, os objetos usados como chaves no <xref:System.Collections.Hashtable> objeto não é necessário substituir o <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> e <xref:System.Object.Equals%2A?displayProperty=nameWithType> métodos.</span><span class="sxs-lookup"><span data-stu-id="d5132-180">If an <xref:System.Collections.IEqualityComparer> is used in the <xref:System.Collections.Hashtable> constructor, the objects used as keys in the <xref:System.Collections.Hashtable> object are not required to override the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> and <xref:System.Object.Equals%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="d5132-181">O provedor de código hash dispensa códigos hash para chaves de <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="d5132-181">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="d5132-182">O provedor de código de hash padrão é a implementação da chave de <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d5132-182">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d5132-183">O comparador determina se duas chaves são iguais.</span><span class="sxs-lookup"><span data-stu-id="d5132-183">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="d5132-184">Todas as chaves em um <xref:System.Collections.Hashtable> devem ser exclusivos.</span><span class="sxs-lookup"><span data-stu-id="d5132-184">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="d5132-185">O comparador padrão é a implementação da chave de <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d5132-185">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d5132-186">O <xref:System.Collections.IEqualityComparer> permite cenários como fazer pesquisas com cadeias de caracteres de maiusculas e minúsculas.</span><span class="sxs-lookup"><span data-stu-id="d5132-186">The <xref:System.Collections.IEqualityComparer> enables scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="d5132-187">Este construtor é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="d5132-187">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5132-188">O exemplo de código a seguir cria tabelas de hash usando diferentes <xref:System.Collections.Hashtable> construtores e demonstra as diferenças no comportamento das tabelas de hash, mesmo se cada uma contém os mesmos elementos.</span><span class="sxs-lookup"><span data-stu-id="d5132-188">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/CPP/hashtable_ctor.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/CS/hashtable_ctor.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/VB/hashtable_ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(int capacity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="d5132-189">O número aproximado de elementos que o objeto <see cref="T:System.Collections.Hashtable" /> pode conter inicialmente.</span><span class="sxs-lookup"><span data-stu-id="d5132-189">The approximate number of elements that the <see cref="T:System.Collections.Hashtable" /> object can initially contain.</span></span></param>
        <summary><span data-ttu-id="d5132-190">Inicializa uma instância nova e vazia da classe <see cref="T:System.Collections.Hashtable" /> usando a capacidade inicial especificada e o fator de carga padrão, o provedor de código hash e o comparador.</span><span class="sxs-lookup"><span data-stu-id="d5132-190">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the specified initial capacity, and the default load factor, hash code provider, and comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5132-191">Especificando a capacidade inicial elimina a necessidade de executar várias operações de redimensionamento durante a adição de elementos para o <xref:System.Collections.Hashtable> objeto.</span><span class="sxs-lookup"><span data-stu-id="d5132-191">Specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="d5132-192">A capacidade é automaticamente aumentado, conforme necessário, com base no fator de carga.</span><span class="sxs-lookup"><span data-stu-id="d5132-192">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="d5132-193">O fator de carga é a taxa máxima de elementos para buckets.</span><span class="sxs-lookup"><span data-stu-id="d5132-193">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="d5132-194">Um fator de carga menor significa que a pesquisa mais rápida às custas de maior consumo de memória.</span><span class="sxs-lookup"><span data-stu-id="d5132-194">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="d5132-195">Quando o fator de carga real atinge o fator de carga especificado, o número de buckets é automaticamente aumentado para o menor número primo maior que duas vezes o número atual de recipientes.</span><span class="sxs-lookup"><span data-stu-id="d5132-195">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="d5132-196">O provedor de código hash dispensa códigos hash para chaves de <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="d5132-196">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="d5132-197">O provedor de código de hash padrão é a implementação da chave de <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d5132-197">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d5132-198">O comparador determina se duas chaves são iguais.</span><span class="sxs-lookup"><span data-stu-id="d5132-198">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="d5132-199">Todas as chaves em um <xref:System.Collections.Hashtable> devem ser exclusivos.</span><span class="sxs-lookup"><span data-stu-id="d5132-199">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="d5132-200">O comparador padrão é a implementação da chave de <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d5132-200">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d5132-201">Este construtor é um O (`n`) operação, onde `n` é `capacity`.</span><span class="sxs-lookup"><span data-stu-id="d5132-201">This constructor is an O(`n`) operation, where `n` is `capacity`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5132-202">O exemplo de código a seguir cria tabelas de hash usando diferentes <xref:System.Collections.Hashtable> construtores e demonstra as diferenças no comportamento das tabelas de hash, mesmo se cada uma contém os mesmos elementos.</span><span class="sxs-lookup"><span data-stu-id="d5132-202">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorInt/CPP/hashtable_ctorint.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorInt/CS/hashtable_ctorint.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorInt/VB/hashtable_ctorint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d5132-203"><paramref name="capacity" /> é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="d5132-203"><paramref name="capacity" /> is less than zero.</span></span></exception>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (System.Collections.IDictionary d, System.Collections.IEqualityComparer equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary d, class System.Collections.IEqualityComparer equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (d As IDictionary, equalityComparer As IEqualityComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(System::Collections::IDictionary ^ d, System::Collections::IEqualityComparer ^ equalityComparer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="d" Type="System.Collections.IDictionary" />
        <Parameter Name="equalityComparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="d5132-204">O <see cref="T:System.Collections.IDictionary" /> objeto a ser copiado para um novo objeto <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-204">The <see cref="T:System.Collections.IDictionary" /> object to copy to a new <see cref="T:System.Collections.Hashtable" /> object.</span></span></param>
        <param name="equalityComparer"><span data-ttu-id="d5132-205">O objeto <see cref="T:System.Collections.IEqualityComparer" /> que define o provedor de código hash e o comparador a serem usados com o <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-205">The <see cref="T:System.Collections.IEqualityComparer" /> object that defines the hash code provider and the comparer to use with the <see cref="T:System.Collections.Hashtable" />.</span></span>  
  
 <span data-ttu-id="d5132-206">- ou -</span><span class="sxs-lookup"><span data-stu-id="d5132-206">-or-</span></span>  
  
 <span data-ttu-id="d5132-207"><see langword="null" /> para usar o provedor de código hash padrão e o comparador padrão.</span><span class="sxs-lookup"><span data-stu-id="d5132-207"><see langword="null" /> to use the default hash code provider and the default comparer.</span></span> <span data-ttu-id="d5132-208">O provedor de código hash padrão é a implementação de cada chave de <see cref="M:System.Object.GetHashCode" /> e o comparador padrão é a implementação de cada chave de <see cref="M:System.Object.Equals(System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-208">The default hash code provider is each key's implementation of <see cref="M:System.Object.GetHashCode" /> and the default comparer is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span></span></param>
        <summary><span data-ttu-id="d5132-209">Inicializa uma nova instância da classe <see cref="T:System.Collections.Hashtable" /> copiando os elementos do dicionário especificado para um novo objeto <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-209">Initializes a new instance of the <see cref="T:System.Collections.Hashtable" /> class by copying the elements from the specified dictionary to a new <see cref="T:System.Collections.Hashtable" /> object.</span></span> <span data-ttu-id="d5132-210">O novo objeto <see cref="T:System.Collections.Hashtable" /> tem uma capacidade inicial igual ao número de elementos copiados e usa o fator de carga padrão e o objeto <see cref="T:System.Collections.IEqualityComparer" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="d5132-210">The new <see cref="T:System.Collections.Hashtable" /> object has an initial capacity equal to the number of elements copied, and uses the default load factor and the specified <see cref="T:System.Collections.IEqualityComparer" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5132-211">A capacidade inicial é definida como o número de elementos no dicionário de origem.</span><span class="sxs-lookup"><span data-stu-id="d5132-211">The initial capacity is set to the number of elements in the source dictionary.</span></span> <span data-ttu-id="d5132-212">A capacidade é automaticamente aumentado, conforme necessário, com base no fator de carga.</span><span class="sxs-lookup"><span data-stu-id="d5132-212">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="d5132-213">O fator de carga é a taxa máxima de elementos para buckets.</span><span class="sxs-lookup"><span data-stu-id="d5132-213">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="d5132-214">Um fator de carga menor significa que a pesquisa mais rápida às custas de maior consumo de memória.</span><span class="sxs-lookup"><span data-stu-id="d5132-214">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="d5132-215">Quando o fator de carga real atinge o fator de carga especificado, o número de buckets é automaticamente aumentado para o menor número primo maior que duas vezes o número atual de recipientes.</span><span class="sxs-lookup"><span data-stu-id="d5132-215">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="d5132-216">O <xref:System.Collections.IEqualityComparer> objeto inclui o provedor de código de hash e o comparador.</span><span class="sxs-lookup"><span data-stu-id="d5132-216">The <xref:System.Collections.IEqualityComparer> object includes both the hash code provider and the comparer.</span></span> <span data-ttu-id="d5132-217">Se um <xref:System.Collections.IEqualityComparer> é usado no <xref:System.Collections.Hashtable> construtor, os objetos usados como chaves no <xref:System.Collections.Hashtable> objeto não é necessário substituir o <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> e <xref:System.Object.Equals%2A?displayProperty=nameWithType> métodos.</span><span class="sxs-lookup"><span data-stu-id="d5132-217">If an <xref:System.Collections.IEqualityComparer> is used in the <xref:System.Collections.Hashtable> constructor, the objects used as keys in the <xref:System.Collections.Hashtable> object are not required to override the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> and <xref:System.Object.Equals%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="d5132-218">O provedor de código hash dispensa códigos hash para chaves de <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="d5132-218">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="d5132-219">O provedor de código de hash padrão é a implementação da chave de <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d5132-219">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d5132-220">O comparador determina se duas chaves são iguais.</span><span class="sxs-lookup"><span data-stu-id="d5132-220">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="d5132-221">Todas as chaves em um <xref:System.Collections.Hashtable> devem ser exclusivos.</span><span class="sxs-lookup"><span data-stu-id="d5132-221">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="d5132-222">O comparador padrão é a implementação da chave de <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d5132-222">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d5132-223">O <xref:System.Collections.IEqualityComparer> permite cenários como fazer pesquisas com cadeias de caracteres de maiusculas e minúsculas.</span><span class="sxs-lookup"><span data-stu-id="d5132-223">The <xref:System.Collections.IEqualityComparer> enables scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="d5132-224">Os elementos da nova <xref:System.Collections.Hashtable> são classificados na mesma ordem em que o enumerador que itera por meio de <xref:System.Collections.IDictionary> objeto.</span><span class="sxs-lookup"><span data-stu-id="d5132-224">The elements of the new <xref:System.Collections.Hashtable> are sorted in the same order in which the enumerator iterates through the <xref:System.Collections.IDictionary> object.</span></span>  
  
 <span data-ttu-id="d5132-225">Este construtor é um O (`n`) operação, onde `n` é o número de elementos de `d` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="d5132-225">This constructor is an O(`n`) operation, where `n` is the number of elements in the `d` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5132-226">O exemplo de código a seguir cria tabelas de hash usando diferentes <xref:System.Collections.Hashtable> construtores e demonstra as diferenças no comportamento das tabelas de hash, mesmo se cada uma contém os mesmos elementos.</span><span class="sxs-lookup"><span data-stu-id="d5132-226">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorDictionary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionary/CPP/hashtable_ctordictionary.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorDictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionary/CS/hashtable_ctordictionary.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorDictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionary/VB/hashtable_ctordictionary.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5132-227"><paramref name="d" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-227"><paramref name="d" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Collections.IEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (System.Collections.IDictionary d, float loadFactor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary d, float32 loadFactor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (d As IDictionary, loadFactor As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(System::Collections::IDictionary ^ d, float loadFactor);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="d" Type="System.Collections.IDictionary" />
        <Parameter Name="loadFactor" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="d5132-228">O <see cref="T:System.Collections.IDictionary" /> objeto a ser copiado para um novo objeto <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-228">The <see cref="T:System.Collections.IDictionary" /> object to copy to a new <see cref="T:System.Collections.Hashtable" /> object.</span></span></param>
        <param name="loadFactor"><span data-ttu-id="d5132-229">Um número no intervalo entre 0.1 e 1.0 é multiplicado pelo valor padrão que fornece o melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="d5132-229">A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance.</span></span> <span data-ttu-id="d5132-230">O resultado é a proporção máxima de elementos para buckets.</span><span class="sxs-lookup"><span data-stu-id="d5132-230">The result is the maximum ratio of elements to buckets.</span></span></param>
        <summary><span data-ttu-id="d5132-231">Inicializa uma nova instância da classe <see cref="T:System.Collections.Hashtable" /> copiando os elementos do dicionário especificado para o novo objeto <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-231">Initializes a new instance of the <see cref="T:System.Collections.Hashtable" /> class by copying the elements from the specified dictionary to the new <see cref="T:System.Collections.Hashtable" /> object.</span></span> <span data-ttu-id="d5132-232">O novo objeto <see cref="T:System.Collections.Hashtable" /> tem uma capacidade inicial igual ao número de elementos copiados e usa o fator de carga especificado e o provedor de código hash e o comparador padrão.</span><span class="sxs-lookup"><span data-stu-id="d5132-232">The new <see cref="T:System.Collections.Hashtable" /> object has an initial capacity equal to the number of elements copied, and uses the specified load factor, and the default hash code provider and comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5132-233">A capacidade inicial é definida como o número de elementos no dicionário de origem.</span><span class="sxs-lookup"><span data-stu-id="d5132-233">The initial capacity is set to the number of elements in the source dictionary.</span></span> <span data-ttu-id="d5132-234">A capacidade é automaticamente aumentado, conforme necessário, com base no fator de carga.</span><span class="sxs-lookup"><span data-stu-id="d5132-234">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="d5132-235">O fator de carga é a taxa máxima de elementos para buckets.</span><span class="sxs-lookup"><span data-stu-id="d5132-235">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="d5132-236">Um fator de carga menor significa que a pesquisa mais rápida às custas de maior consumo de memória.</span><span class="sxs-lookup"><span data-stu-id="d5132-236">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span> <span data-ttu-id="d5132-237">Um fator de carga de 1,0 é o melhor equilíbrio entre a velocidade e tamanho.</span><span class="sxs-lookup"><span data-stu-id="d5132-237">A load factor of 1.0 is the best balance between speed and size.</span></span>  
  
 <span data-ttu-id="d5132-238">Quando o fator de carga real atinge o fator de carga especificado, o número de buckets é automaticamente aumentado para o menor número primo maior que duas vezes o número atual de recipientes.</span><span class="sxs-lookup"><span data-stu-id="d5132-238">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="d5132-239">O provedor de código hash dispensa códigos hash para chaves de <xref:System.Collections.Hashtable> objeto.</span><span class="sxs-lookup"><span data-stu-id="d5132-239">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="d5132-240">O provedor de código de hash padrão é a implementação da chave de <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d5132-240">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d5132-241">O comparador determina se duas chaves são iguais.</span><span class="sxs-lookup"><span data-stu-id="d5132-241">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="d5132-242">Todas as chaves em um <xref:System.Collections.Hashtable> devem ser exclusivos.</span><span class="sxs-lookup"><span data-stu-id="d5132-242">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="d5132-243">O comparador padrão é a implementação da chave de <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d5132-243">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d5132-244">Os elementos da nova <xref:System.Collections.Hashtable> são classificados na mesma ordem em que o enumerador que itera por meio de <xref:System.Collections.IDictionary> objeto.</span><span class="sxs-lookup"><span data-stu-id="d5132-244">The elements of the new <xref:System.Collections.Hashtable> are sorted in the same order in which the enumerator iterates through the <xref:System.Collections.IDictionary> object.</span></span>  
  
 <span data-ttu-id="d5132-245">Este construtor é um O (`n`) operação, onde `n` é o número de elementos de `d` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="d5132-245">This constructor is an O(`n`) operation, where `n` is the number of elements in the `d` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5132-246">O exemplo de código a seguir cria tabelas de hash usando diferentes <xref:System.Collections.Hashtable> construtores e demonstra as diferenças no comportamento das tabelas de hash, mesmo se cada uma contém os mesmos elementos.</span><span class="sxs-lookup"><span data-stu-id="d5132-246">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorDictionaryFloat#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionaryFloat/CPP/hashtable_ctordictionaryfloat.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorDictionaryFloat#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionaryFloat/CS/hashtable_ctordictionaryfloat.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorDictionaryFloat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionaryFloat/VB/hashtable_ctordictionaryfloat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5132-247"><paramref name="d" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-247"><paramref name="d" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d5132-248"><paramref name="loadFactor" /> é menor que 0.1.</span><span class="sxs-lookup"><span data-stu-id="d5132-248"><paramref name="loadFactor" /> is less than 0.1.</span></span>  
  
 <span data-ttu-id="d5132-249">- ou -</span><span class="sxs-lookup"><span data-stu-id="d5132-249">-or-</span></span>  
  
 <span data-ttu-id="d5132-250"><paramref name="loadFactor" /> é maior que 1.0.</span><span class="sxs-lookup"><span data-stu-id="d5132-250"><paramref name="loadFactor" /> is greater than 1.0.</span></span></exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (System.Collections.IHashCodeProvider hcp, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IHashCodeProvider hcp, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (hcp As IHashCodeProvider, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(System::Collections::IHashCodeProvider ^ hcp, System::Collections::IComparer ^ comparer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Please use Hashtable(IEqualityComparer) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="hcp" Type="System.Collections.IHashCodeProvider" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="hcp"><span data-ttu-id="d5132-251">O objeto <see cref="T:System.Collections.IHashCodeProvider" /> que fornece os códigos hash de todas as chaves no objeto <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-251">The <see cref="T:System.Collections.IHashCodeProvider" /> object that supplies the hash codes for all keys in the <see cref="T:System.Collections.Hashtable" /> object.</span></span>  
  
 <span data-ttu-id="d5132-252">- ou -</span><span class="sxs-lookup"><span data-stu-id="d5132-252">-or-</span></span>  
  
 <span data-ttu-id="d5132-253"><see langword="null" /> para usar o provedor de código hash padrão, que é a implementação de cada chave de <see cref="M:System.Object.GetHashCode" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-253"><see langword="null" /> to use the default hash code provider, which is each key's implementation of <see cref="M:System.Object.GetHashCode" />.</span></span></param>
        <param name="comparer"><span data-ttu-id="d5132-254">O objeto <see cref="T:System.Collections.IComparer" /> a ser usado para determinar se duas chaves são iguais.</span><span class="sxs-lookup"><span data-stu-id="d5132-254">The <see cref="T:System.Collections.IComparer" /> object to use to determine whether two keys are equal.</span></span>  
  
 <span data-ttu-id="d5132-255">- ou -</span><span class="sxs-lookup"><span data-stu-id="d5132-255">-or-</span></span>  
  
 <span data-ttu-id="d5132-256"><see langword="null" /> para usar o comparador padrão, que é a implementação de cada chave de <see cref="M:System.Object.Equals(System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-256"><see langword="null" /> to use the default comparer, which is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span></span></param>
        <summary><span data-ttu-id="d5132-257">Inicializa uma instância nova e vazia da classe <see cref="T:System.Collections.Hashtable" /> usando a capacidade inicial e o fator de carga padrão, bem como o provedor de código hash e o comparador especificados.</span><span class="sxs-lookup"><span data-stu-id="d5132-257">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the default initial capacity and load factor, and the specified hash code provider and comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5132-258">Capacidade de uma tabela de hash é usada para calcular o número ideal de buckets de tabela de hash com base no fator de carga.</span><span class="sxs-lookup"><span data-stu-id="d5132-258">A hash table's capacity is used to calculate the optimal number of hash table buckets based on the load factor.</span></span> <span data-ttu-id="d5132-259">A capacidade é aumentada automaticamente conforme necessário.</span><span class="sxs-lookup"><span data-stu-id="d5132-259">Capacity is automatically increased as required.</span></span>  
  
 <span data-ttu-id="d5132-260">O fator de carga é a taxa máxima de elementos para buckets.</span><span class="sxs-lookup"><span data-stu-id="d5132-260">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="d5132-261">Um fator de carga menor significa que a pesquisa mais rápida às custas de maior consumo de memória.</span><span class="sxs-lookup"><span data-stu-id="d5132-261">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="d5132-262">Quando o fator de carga real atinge o fator de carga especificado, o número de buckets é automaticamente aumentado para o menor número primo maior que duas vezes o número atual de recipientes.</span><span class="sxs-lookup"><span data-stu-id="d5132-262">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="d5132-263">O provedor de código hash dispensa códigos hash para chaves de <xref:System.Collections.Hashtable> objeto.</span><span class="sxs-lookup"><span data-stu-id="d5132-263">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="d5132-264">O provedor de código de hash padrão é a implementação da chave de <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d5132-264">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d5132-265">O comparador determina se duas chaves são iguais.</span><span class="sxs-lookup"><span data-stu-id="d5132-265">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="d5132-266">Todas as chaves em um <xref:System.Collections.Hashtable> devem ser exclusivos.</span><span class="sxs-lookup"><span data-stu-id="d5132-266">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="d5132-267">O comparador padrão é a implementação da chave de <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d5132-267">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d5132-268">O provedor de código personalizado de hash e o comparador personalizado habilitar cenários como fazer pesquisas com cadeias de caracteres de maiusculas e minúsculas.</span><span class="sxs-lookup"><span data-stu-id="d5132-268">The custom hash code provider and the custom comparer enable scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="d5132-269">Este construtor é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="d5132-269">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5132-270">O exemplo de código a seguir cria tabelas de hash usando diferentes <xref:System.Collections.Hashtable> construtores e demonstra as diferenças no comportamento das tabelas de hash, mesmo se cada uma contém os mesmos elementos.</span><span class="sxs-lookup"><span data-stu-id="d5132-270">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/CPP/hashtable_ctor.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/CS/hashtable_ctor.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/VB/hashtable_ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IHashCodeProvider" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (int capacity, System.Collections.IEqualityComparer equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity, class System.Collections.IEqualityComparer equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Int32,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer, equalityComparer As IEqualityComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(int capacity, System::Collections::IEqualityComparer ^ equalityComparer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
        <Parameter Name="equalityComparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="d5132-271">O número aproximado de elementos que o objeto <see cref="T:System.Collections.Hashtable" /> pode conter inicialmente.</span><span class="sxs-lookup"><span data-stu-id="d5132-271">The approximate number of elements that the <see cref="T:System.Collections.Hashtable" /> object can initially contain.</span></span></param>
        <param name="equalityComparer"><span data-ttu-id="d5132-272">O objeto <see cref="T:System.Collections.IEqualityComparer" /> que define o provedor de código hash e o comparador a serem usados com o <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-272">The <see cref="T:System.Collections.IEqualityComparer" /> object that defines the hash code provider and the comparer to use with the <see cref="T:System.Collections.Hashtable" />.</span></span>  
  
 <span data-ttu-id="d5132-273">- ou -</span><span class="sxs-lookup"><span data-stu-id="d5132-273">-or-</span></span>  
  
 <span data-ttu-id="d5132-274"><see langword="null" /> para usar o provedor de código hash padrão e o comparador padrão.</span><span class="sxs-lookup"><span data-stu-id="d5132-274"><see langword="null" /> to use the default hash code provider and the default comparer.</span></span> <span data-ttu-id="d5132-275">O provedor de código hash padrão é a implementação de cada chave de <see cref="M:System.Object.GetHashCode" /> e o comparador padrão é a implementação de cada chave de <see cref="M:System.Object.Equals(System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-275">The default hash code provider is each key's implementation of <see cref="M:System.Object.GetHashCode" /> and the default comparer is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span></span></param>
        <summary><span data-ttu-id="d5132-276">Inicializa uma instância nova e vazia da classe <see cref="T:System.Collections.Hashtable" /> usando a capacidade inicial especificada e <see cref="T:System.Collections.IEqualityComparer" />, bem como o fator de carga padrão.</span><span class="sxs-lookup"><span data-stu-id="d5132-276">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the specified initial capacity and <see cref="T:System.Collections.IEqualityComparer" />, and the default load factor.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5132-277">Especificando a capacidade inicial elimina a necessidade de executar várias operações de redimensionamento durante a adição de elementos para o <xref:System.Collections.Hashtable> objeto.</span><span class="sxs-lookup"><span data-stu-id="d5132-277">Specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="d5132-278">A capacidade é automaticamente aumentado, conforme necessário, com base no fator de carga.</span><span class="sxs-lookup"><span data-stu-id="d5132-278">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="d5132-279">O fator de carga é a taxa máxima de elementos para buckets.</span><span class="sxs-lookup"><span data-stu-id="d5132-279">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="d5132-280">Um fator de carga menor significa que a pesquisa mais rápida às custas de maior consumo de memória.</span><span class="sxs-lookup"><span data-stu-id="d5132-280">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="d5132-281">Quando o fator de carga real atinge o fator de carga especificado, o número de buckets é automaticamente aumentado para o menor número primo maior que duas vezes o número atual de recipientes.</span><span class="sxs-lookup"><span data-stu-id="d5132-281">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="d5132-282">O <xref:System.Collections.IEqualityComparer> objeto inclui o provedor de código de hash e o comparador.</span><span class="sxs-lookup"><span data-stu-id="d5132-282">The <xref:System.Collections.IEqualityComparer> object includes both the hash code provider and the comparer.</span></span> <span data-ttu-id="d5132-283">Se um <xref:System.Collections.IEqualityComparer> é usado no <xref:System.Collections.Hashtable> construtor, os objetos usados como chaves no <xref:System.Collections.Hashtable> não precisa substituir o <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> e <xref:System.Object.Equals%2A?displayProperty=nameWithType> métodos.</span><span class="sxs-lookup"><span data-stu-id="d5132-283">If an <xref:System.Collections.IEqualityComparer> is used in the <xref:System.Collections.Hashtable> constructor, the objects used as keys in the <xref:System.Collections.Hashtable> are not required to override the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> and <xref:System.Object.Equals%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="d5132-284">O provedor de código hash dispensa códigos hash para chaves de <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="d5132-284">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="d5132-285">O provedor de código de hash padrão é a implementação da chave de <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d5132-285">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d5132-286">O comparador determina se duas chaves são iguais.</span><span class="sxs-lookup"><span data-stu-id="d5132-286">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="d5132-287">Todas as chaves em um <xref:System.Collections.Hashtable> devem ser exclusivos.</span><span class="sxs-lookup"><span data-stu-id="d5132-287">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="d5132-288">O comparador padrão é a implementação da chave de <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d5132-288">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d5132-289">O <xref:System.Collections.IEqualityComparer> permite cenários como fazer pesquisas com cadeias de caracteres de maiusculas e minúsculas.</span><span class="sxs-lookup"><span data-stu-id="d5132-289">The <xref:System.Collections.IEqualityComparer> enables scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="d5132-290">Este construtor é um O (`n`) operação, onde `n` é o `capacity` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="d5132-290">This constructor is an O(`n`) operation, where `n` is the `capacity` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5132-291">O exemplo de código a seguir cria tabelas de hash usando diferentes <xref:System.Collections.Hashtable> construtores e demonstra as diferenças no comportamento das tabelas de hash, mesmo se cada uma contém os mesmos elementos.</span><span class="sxs-lookup"><span data-stu-id="d5132-291">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorInt/CPP/hashtable_ctorint.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorInt/CS/hashtable_ctorint.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorInt/VB/hashtable_ctorint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d5132-292"><paramref name="capacity" /> é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="d5132-292"><paramref name="capacity" /> is less than zero.</span></span></exception>
        <altmember cref="T:System.Collections.IEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (int capacity, float loadFactor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity, float32 loadFactor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Int32,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer, loadFactor As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(int capacity, float loadFactor);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
        <Parameter Name="loadFactor" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="d5132-293">O número aproximado de elementos que o objeto <see cref="T:System.Collections.Hashtable" /> pode conter inicialmente.</span><span class="sxs-lookup"><span data-stu-id="d5132-293">The approximate number of elements that the <see cref="T:System.Collections.Hashtable" /> object can initially contain.</span></span></param>
        <param name="loadFactor"><span data-ttu-id="d5132-294">Um número no intervalo entre 0.1 e 1.0 é multiplicado pelo valor padrão que fornece o melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="d5132-294">A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance.</span></span> <span data-ttu-id="d5132-295">O resultado é a proporção máxima de elementos para buckets.</span><span class="sxs-lookup"><span data-stu-id="d5132-295">The result is the maximum ratio of elements to buckets.</span></span></param>
        <summary><span data-ttu-id="d5132-296">Inicializa uma instância nova e vazia da classe <see cref="T:System.Collections.Hashtable" /> usando a capacidade inicial e o fator de carga especificados, bem como o provedor de código hash e o comparador padrão.</span><span class="sxs-lookup"><span data-stu-id="d5132-296">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the specified initial capacity and load factor, and the default hash code provider and comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5132-297">Especificando a capacidade inicial elimina a necessidade de executar várias operações de redimensionamento durante a adição de elementos para o <xref:System.Collections.Hashtable> objeto.</span><span class="sxs-lookup"><span data-stu-id="d5132-297">Specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="d5132-298">A capacidade é automaticamente aumentado, conforme necessário, com base no fator de carga.</span><span class="sxs-lookup"><span data-stu-id="d5132-298">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="d5132-299">O fator de carga é a taxa máxima de elementos para buckets.</span><span class="sxs-lookup"><span data-stu-id="d5132-299">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="d5132-300">Um fator de carga menor significa que a pesquisa mais rápida às custas de maior consumo de memória.</span><span class="sxs-lookup"><span data-stu-id="d5132-300">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span> <span data-ttu-id="d5132-301">Um fator de carga de 1,0 é o melhor equilíbrio entre a velocidade e tamanho.</span><span class="sxs-lookup"><span data-stu-id="d5132-301">A load factor of 1.0 is the best balance between speed and size.</span></span>  
  
 <span data-ttu-id="d5132-302">Quando o fator de carga real atinge o fator de carga especificado, o número de buckets é automaticamente aumentado para o menor número primo maior que duas vezes o número atual de recipientes.</span><span class="sxs-lookup"><span data-stu-id="d5132-302">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="d5132-303">O provedor de código hash dispensa códigos hash para chaves de <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="d5132-303">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="d5132-304">O provedor de código de hash padrão é a implementação da chave de <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d5132-304">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d5132-305">O comparador determina se duas chaves são iguais.</span><span class="sxs-lookup"><span data-stu-id="d5132-305">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="d5132-306">Todas as chaves em um <xref:System.Collections.Hashtable> devem ser exclusivos.</span><span class="sxs-lookup"><span data-stu-id="d5132-306">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="d5132-307">O comparador padrão é a implementação da chave de <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d5132-307">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d5132-308">Este construtor é um O (`n`) operação, onde `n` é o `capacity` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="d5132-308">This constructor is an O(`n`) operation, where `n` is the `capacity` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5132-309">O exemplo de código a seguir cria tabelas de hash usando diferentes <xref:System.Collections.Hashtable> construtores e demonstra as diferenças no comportamento das tabelas de hash, mesmo se cada uma contém os mesmos elementos.</span><span class="sxs-lookup"><span data-stu-id="d5132-309">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorIntFloat#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorIntFloat/CPP/hashtable_ctorintfloat.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorIntFloat#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorIntFloat/CS/hashtable_ctorintfloat.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorIntFloat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorIntFloat/VB/hashtable_ctorintfloat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d5132-310"><paramref name="capacity" /> é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="d5132-310"><paramref name="capacity" /> is less than zero.</span></span>  
  
 <span data-ttu-id="d5132-311">- ou -</span><span class="sxs-lookup"><span data-stu-id="d5132-311">-or-</span></span>  
  
 <span data-ttu-id="d5132-312"><paramref name="loadFactor" /> é menor que 0.1.</span><span class="sxs-lookup"><span data-stu-id="d5132-312"><paramref name="loadFactor" /> is less than 0.1.</span></span>  
  
 <span data-ttu-id="d5132-313">- ou -</span><span class="sxs-lookup"><span data-stu-id="d5132-313">-or-</span></span>  
  
 <span data-ttu-id="d5132-314"><paramref name="loadFactor" /> é maior que 1.0.</span><span class="sxs-lookup"><span data-stu-id="d5132-314"><paramref name="loadFactor" /> is greater than 1.0.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d5132-315"><paramref name="capacity" /> está causando um estouro.</span><span class="sxs-lookup"><span data-stu-id="d5132-315"><paramref name="capacity" /> is causing an overflow.</span></span></exception>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Hashtable (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Hashtable(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="d5132-316">Um objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contém as informações necessárias para serializar o objeto <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-316">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object containing the information required to serialize the <see cref="T:System.Collections.Hashtable" /> object.</span></span></param>
        <param name="context"><span data-ttu-id="d5132-317">Um objeto <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contém a origem e o destino do fluxo serializado associado a <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-317">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object containing the source and destination of the serialized stream associated with the <see cref="T:System.Collections.Hashtable" />.</span></span></param>
        <summary><span data-ttu-id="d5132-318">Inicializa uma nova instância vazia da classe <see cref="T:System.Collections.Hashtable" /> que pode ser serializada usando os objetos <see cref="T:System.Runtime.Serialization.SerializationInfo" /> e <see cref="T:System.Runtime.Serialization.StreamingContext" /> especificados.</span><span class="sxs-lookup"><span data-stu-id="d5132-318">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class that is serializable using the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5132-319">Capacidade de uma tabela de hash é usada para calcular o número ideal de buckets de tabela de hash com base no fator de carga.</span><span class="sxs-lookup"><span data-stu-id="d5132-319">A hash table's capacity is used to calculate the optimal number of hash table buckets based on the load factor.</span></span> <span data-ttu-id="d5132-320">A capacidade é aumentada automaticamente conforme necessário.</span><span class="sxs-lookup"><span data-stu-id="d5132-320">Capacity is automatically increased as required.</span></span>  
  
 <span data-ttu-id="d5132-321">O fator de carga é a taxa máxima de elementos para buckets.</span><span class="sxs-lookup"><span data-stu-id="d5132-321">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="d5132-322">Um fator de carga menor significa que a pesquisa mais rápida às custas de maior consumo de memória.</span><span class="sxs-lookup"><span data-stu-id="d5132-322">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="d5132-323">Quando o fator de carga real atinge o fator de carga especificado, o número de buckets é automaticamente aumentado para o menor número primo maior que duas vezes o número atual de recipientes.</span><span class="sxs-lookup"><span data-stu-id="d5132-323">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="d5132-324">O provedor de código hash dispensa códigos hash para chaves de <xref:System.Collections.Hashtable> objeto.</span><span class="sxs-lookup"><span data-stu-id="d5132-324">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="d5132-325">O provedor de código de hash padrão é a implementação da chave de <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d5132-325">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d5132-326">O comparador determina se duas chaves são iguais.</span><span class="sxs-lookup"><span data-stu-id="d5132-326">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="d5132-327">Todas as chaves em um <xref:System.Collections.Hashtable> devem ser exclusivos.</span><span class="sxs-lookup"><span data-stu-id="d5132-327">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="d5132-328">O comparador padrão é a implementação da chave de <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d5132-328">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d5132-329">Este construtor é um O (`n`) operação, onde `n` é <xref:System.Collections.Hashtable.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="d5132-329">This constructor is an O(`n`) operation, where `n` is <xref:System.Collections.Hashtable.Count%2A>.</span></span>  
  
 <span data-ttu-id="d5132-330">Como a serialização e desserialização de um enumerador para um <xref:System.Collections.Hashtable> pode fazer com que os elementos para se tornar reordenadas, não é possível continuar a enumeração sem chamar o <xref:System.Collections.IEnumerator.Reset%2A> método.</span><span class="sxs-lookup"><span data-stu-id="d5132-330">Because serializing and deserializing an enumerator for a <xref:System.Collections.Hashtable> can cause the elements to become reordered, it is not possible to continue enumeration without calling the <xref:System.Collections.IEnumerator.Reset%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5132-331"><paramref name="info" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-331"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="M:System.Collections.Hashtable.OnDeserialization(System.Object)" />
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (System.Collections.IDictionary d, System.Collections.IHashCodeProvider hcp, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary d, class System.Collections.IHashCodeProvider hcp, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IHashCodeProvider,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (d As IDictionary, hcp As IHashCodeProvider, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(System::Collections::IDictionary ^ d, System::Collections::IHashCodeProvider ^ hcp, System::Collections::IComparer ^ comparer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Please use Hashtable(IDictionary, IEqualityComparer) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="d" Type="System.Collections.IDictionary" />
        <Parameter Name="hcp" Type="System.Collections.IHashCodeProvider" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="d5132-332">O <see cref="T:System.Collections.IDictionary" /> objeto a ser copiado para um novo objeto <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-332">The <see cref="T:System.Collections.IDictionary" /> object to copy to a new <see cref="T:System.Collections.Hashtable" /> object.</span></span></param>
        <param name="hcp"><span data-ttu-id="d5132-333">O objeto <see cref="T:System.Collections.IHashCodeProvider" /> que fornece os códigos hash de todas as chaves no <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-333">The <see cref="T:System.Collections.IHashCodeProvider" /> object that supplies the hash codes for all keys in the <see cref="T:System.Collections.Hashtable" />.</span></span>  
  
 <span data-ttu-id="d5132-334">- ou -</span><span class="sxs-lookup"><span data-stu-id="d5132-334">-or-</span></span>  
  
 <span data-ttu-id="d5132-335"><see langword="null" /> para usar o provedor de código hash padrão, que é a implementação de cada chave de <see cref="M:System.Object.GetHashCode" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-335"><see langword="null" /> to use the default hash code provider, which is each key's implementation of <see cref="M:System.Object.GetHashCode" />.</span></span></param>
        <param name="comparer"><span data-ttu-id="d5132-336">O objeto <see cref="T:System.Collections.IComparer" /> a ser usado para determinar se duas chaves são iguais.</span><span class="sxs-lookup"><span data-stu-id="d5132-336">The <see cref="T:System.Collections.IComparer" /> object to use to determine whether two keys are equal.</span></span>  
  
 <span data-ttu-id="d5132-337">- ou -</span><span class="sxs-lookup"><span data-stu-id="d5132-337">-or-</span></span>  
  
 <span data-ttu-id="d5132-338"><see langword="null" /> para usar o comparador padrão, que é a implementação de cada chave de <see cref="M:System.Object.Equals(System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-338"><see langword="null" /> to use the default comparer, which is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span></span></param>
        <summary><span data-ttu-id="d5132-339">Inicializa uma nova instância da classe <see cref="T:System.Collections.Hashtable" /> copiando os elementos do dicionário especificado para o novo objeto <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-339">Initializes a new instance of the <see cref="T:System.Collections.Hashtable" /> class by copying the elements from the specified dictionary to the new <see cref="T:System.Collections.Hashtable" /> object.</span></span> <span data-ttu-id="d5132-340">O novo objeto <see cref="T:System.Collections.Hashtable" /> tem uma capacidade inicial igual ao número de elementos copiados e usa o fator de carga padrão e o provedor de código hash e o comparador especificados.</span><span class="sxs-lookup"><span data-stu-id="d5132-340">The new <see cref="T:System.Collections.Hashtable" /> object has an initial capacity equal to the number of elements copied, and uses the default load factor, and the specified hash code provider and comparer.</span></span> <span data-ttu-id="d5132-341">Esta API está obsoleta.</span><span class="sxs-lookup"><span data-stu-id="d5132-341">This API is obsolete.</span></span> <span data-ttu-id="d5132-342">Para obter uma alternativa, consulte <see cref="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IEqualityComparer)" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-342">For an alternative, see <see cref="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IEqualityComparer)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5132-343">A capacidade inicial é definida como o número de elementos no dicionário de origem.</span><span class="sxs-lookup"><span data-stu-id="d5132-343">The initial capacity is set to the number of elements in the source dictionary.</span></span> <span data-ttu-id="d5132-344">A capacidade é automaticamente aumentado, conforme necessário, com base no fator de carga.</span><span class="sxs-lookup"><span data-stu-id="d5132-344">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="d5132-345">O fator de carga é a taxa máxima de elementos para buckets.</span><span class="sxs-lookup"><span data-stu-id="d5132-345">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="d5132-346">Um fator de carga menor significa que a pesquisa mais rápida às custas de maior consumo de memória.</span><span class="sxs-lookup"><span data-stu-id="d5132-346">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="d5132-347">Quando o fator de carga real atinge o fator de carga especificado, o número de buckets é automaticamente aumentado para o menor número primo maior que duas vezes o número atual de recipientes.</span><span class="sxs-lookup"><span data-stu-id="d5132-347">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="d5132-348">O provedor de código hash dispensa códigos hash para chaves de <xref:System.Collections.Hashtable> objeto.</span><span class="sxs-lookup"><span data-stu-id="d5132-348">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="d5132-349">O provedor de código de hash padrão é a implementação da chave de <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d5132-349">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d5132-350">O comparador determina se duas chaves são iguais.</span><span class="sxs-lookup"><span data-stu-id="d5132-350">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="d5132-351">Todas as chaves em um <xref:System.Collections.Hashtable> devem ser exclusivos.</span><span class="sxs-lookup"><span data-stu-id="d5132-351">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="d5132-352">O comparador padrão é a implementação da chave de <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d5132-352">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d5132-353">O provedor de código personalizado de hash e o comparador personalizado habilitar cenários como fazer pesquisas com cadeias de caracteres de maiusculas e minúsculas.</span><span class="sxs-lookup"><span data-stu-id="d5132-353">The custom hash code provider and the custom comparer enable scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="d5132-354">Os elementos da nova <xref:System.Collections.Hashtable> são classificados na mesma ordem em que o enumerador que itera por meio de <xref:System.Collections.IDictionary> objeto.</span><span class="sxs-lookup"><span data-stu-id="d5132-354">The elements of the new <xref:System.Collections.Hashtable> are sorted in the same order in which the enumerator iterates through the <xref:System.Collections.IDictionary> object.</span></span>  
  
 <span data-ttu-id="d5132-355">Este construtor é um O (`n`) operação, onde `n` é o número de elementos de `d` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="d5132-355">This constructor is an O(`n`) operation, where `n` is the number of elements in the `d` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5132-356">O exemplo de código a seguir cria tabelas de hash usando diferentes <xref:System.Collections.Hashtable> construtores e demonstra as diferenças no comportamento das tabelas de hash, mesmo se cada uma contém os mesmos elementos.</span><span class="sxs-lookup"><span data-stu-id="d5132-356">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorDictionary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionary/CPP/hashtable_ctordictionary.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorDictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionary/CS/hashtable_ctordictionary.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorDictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionary/VB/hashtable_ctordictionary.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5132-357"><paramref name="d" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-357"><paramref name="d" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Collections.IHashCodeProvider" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (System.Collections.IDictionary d, float loadFactor, System.Collections.IEqualityComparer equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary d, float32 loadFactor, class System.Collections.IEqualityComparer equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (d As IDictionary, loadFactor As Single, equalityComparer As IEqualityComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(System::Collections::IDictionary ^ d, float loadFactor, System::Collections::IEqualityComparer ^ equalityComparer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="d" Type="System.Collections.IDictionary" />
        <Parameter Name="loadFactor" Type="System.Single" />
        <Parameter Name="equalityComparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="d5132-358">O <see cref="T:System.Collections.IDictionary" /> objeto a ser copiado para um novo objeto <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-358">The <see cref="T:System.Collections.IDictionary" /> object to copy to a new <see cref="T:System.Collections.Hashtable" /> object.</span></span></param>
        <param name="loadFactor"><span data-ttu-id="d5132-359">Um número no intervalo entre 0.1 e 1.0 é multiplicado pelo valor padrão que fornece o melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="d5132-359">A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance.</span></span> <span data-ttu-id="d5132-360">O resultado é a proporção máxima de elementos para buckets.</span><span class="sxs-lookup"><span data-stu-id="d5132-360">The result is the maximum ratio of elements to buckets.</span></span></param>
        <param name="equalityComparer"><span data-ttu-id="d5132-361">O objeto <see cref="T:System.Collections.IEqualityComparer" /> que define o provedor de código hash e o comparador a serem usados com o <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-361">The <see cref="T:System.Collections.IEqualityComparer" /> object that defines the hash code provider and the comparer to use with the <see cref="T:System.Collections.Hashtable" />.</span></span>  
  
 <span data-ttu-id="d5132-362">- ou -</span><span class="sxs-lookup"><span data-stu-id="d5132-362">-or-</span></span>  
  
 <span data-ttu-id="d5132-363"><see langword="null" /> para usar o provedor de código hash padrão e o comparador padrão.</span><span class="sxs-lookup"><span data-stu-id="d5132-363"><see langword="null" /> to use the default hash code provider and the default comparer.</span></span> <span data-ttu-id="d5132-364">O provedor de código hash padrão é a implementação de cada chave de <see cref="M:System.Object.GetHashCode" /> e o comparador padrão é a implementação de cada chave de <see cref="M:System.Object.Equals(System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-364">The default hash code provider is each key's implementation of <see cref="M:System.Object.GetHashCode" /> and the default comparer is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span></span></param>
        <summary><span data-ttu-id="d5132-365">Inicializa uma nova instância da classe <see cref="T:System.Collections.Hashtable" /> copiando os elementos do dicionário especificado para o novo objeto <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-365">Initializes a new instance of the <see cref="T:System.Collections.Hashtable" /> class by copying the elements from the specified dictionary to the new <see cref="T:System.Collections.Hashtable" /> object.</span></span> <span data-ttu-id="d5132-366">O novo objeto <see cref="T:System.Collections.Hashtable" /> tem uma capacidade inicial igual ao número de elementos copiados e usa o fator de carga especificado e o objeto <see cref="T:System.Collections.IEqualityComparer" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-366">The new <see cref="T:System.Collections.Hashtable" /> object has an initial capacity equal to the number of elements copied, and uses the specified load factor and <see cref="T:System.Collections.IEqualityComparer" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5132-367">A capacidade inicial é definida como o número de elementos no dicionário de origem.</span><span class="sxs-lookup"><span data-stu-id="d5132-367">The initial capacity is set to the number of elements in the source dictionary.</span></span> <span data-ttu-id="d5132-368">A capacidade é automaticamente aumentado, conforme necessário, com base no fator de carga.</span><span class="sxs-lookup"><span data-stu-id="d5132-368">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="d5132-369">O fator de carga é a taxa máxima de elementos para buckets.</span><span class="sxs-lookup"><span data-stu-id="d5132-369">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="d5132-370">Um fator de carga menor significa que a pesquisa mais rápida às custas de maior consumo de memória.</span><span class="sxs-lookup"><span data-stu-id="d5132-370">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span> <span data-ttu-id="d5132-371">Um fator de carga de 1,0 é o melhor equilíbrio entre a velocidade e tamanho.</span><span class="sxs-lookup"><span data-stu-id="d5132-371">A load factor of 1.0 is the best balance between speed and size.</span></span>  
  
 <span data-ttu-id="d5132-372">Quando o fator de carga real atinge o fator de carga especificado, o número de buckets é automaticamente aumentado para o menor número primo maior que duas vezes o número atual de recipientes.</span><span class="sxs-lookup"><span data-stu-id="d5132-372">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="d5132-373">O <xref:System.Collections.IEqualityComparer> objeto inclui o provedor de código de hash e o comparador.</span><span class="sxs-lookup"><span data-stu-id="d5132-373">The <xref:System.Collections.IEqualityComparer> object includes both the hash code provider and the comparer.</span></span> <span data-ttu-id="d5132-374">Se um <xref:System.Collections.IEqualityComparer> é usado no <xref:System.Collections.Hashtable> construtor, os objetos usados como chaves no <xref:System.Collections.Hashtable> objeto não é necessário substituir o <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> e <xref:System.Object.Equals%2A?displayProperty=nameWithType> métodos.</span><span class="sxs-lookup"><span data-stu-id="d5132-374">If an <xref:System.Collections.IEqualityComparer> is used in the <xref:System.Collections.Hashtable> constructor, the objects used as keys in the <xref:System.Collections.Hashtable> object are not required to override the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> and <xref:System.Object.Equals%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="d5132-375">O provedor de código hash dispensa códigos hash para chaves de <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="d5132-375">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="d5132-376">O provedor de código de hash padrão é a implementação da chave de <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d5132-376">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d5132-377">O comparador determina se duas chaves são iguais.</span><span class="sxs-lookup"><span data-stu-id="d5132-377">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="d5132-378">Todas as chaves em um <xref:System.Collections.Hashtable> devem ser exclusivos.</span><span class="sxs-lookup"><span data-stu-id="d5132-378">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="d5132-379">O comparador padrão é a implementação da chave de <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d5132-379">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d5132-380">O <xref:System.Collections.IEqualityComparer> permite cenários como fazer pesquisas com cadeias de caracteres de maiusculas e minúsculas.</span><span class="sxs-lookup"><span data-stu-id="d5132-380">The <xref:System.Collections.IEqualityComparer> enables scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="d5132-381">Os elementos da nova <xref:System.Collections.Hashtable> são classificados na mesma ordem em que o enumerador que itera por meio de <xref:System.Collections.IDictionary> objeto.</span><span class="sxs-lookup"><span data-stu-id="d5132-381">The elements of the new <xref:System.Collections.Hashtable> are sorted in the same order in which the enumerator iterates through the <xref:System.Collections.IDictionary> object.</span></span>  
  
 <span data-ttu-id="d5132-382">Este construtor é um O (`n`) operação, onde `n` é o número de elementos de `d` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="d5132-382">This constructor is an O(`n`) operation, where `n` is the number of elements in the `d` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5132-383">O exemplo de código a seguir cria tabelas de hash usando diferentes <xref:System.Collections.Hashtable> construtores e demonstra as diferenças no comportamento das tabelas de hash, mesmo se cada uma contém os mesmos elementos.</span><span class="sxs-lookup"><span data-stu-id="d5132-383">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorDictionaryFloat#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionaryFloat/CPP/hashtable_ctordictionaryfloat.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorDictionaryFloat#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionaryFloat/CS/hashtable_ctordictionaryfloat.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorDictionaryFloat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionaryFloat/VB/hashtable_ctordictionaryfloat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5132-384"><paramref name="d" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-384"><paramref name="d" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d5132-385"><paramref name="loadFactor" /> é menor que 0.1.</span><span class="sxs-lookup"><span data-stu-id="d5132-385"><paramref name="loadFactor" /> is less than 0.1.</span></span>  
  
 <span data-ttu-id="d5132-386">- ou -</span><span class="sxs-lookup"><span data-stu-id="d5132-386">-or-</span></span>  
  
 <span data-ttu-id="d5132-387"><paramref name="loadFactor" /> é maior que 1.0.</span><span class="sxs-lookup"><span data-stu-id="d5132-387"><paramref name="loadFactor" /> is greater than 1.0.</span></span></exception>
        <altmember cref="T:System.Collections.IEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (int capacity, System.Collections.IHashCodeProvider hcp, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity, class System.Collections.IHashCodeProvider hcp, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer, hcp As IHashCodeProvider, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(int capacity, System::Collections::IHashCodeProvider ^ hcp, System::Collections::IComparer ^ comparer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Please use Hashtable(int, IEqualityComparer) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
        <Parameter Name="hcp" Type="System.Collections.IHashCodeProvider" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="d5132-388">O número aproximado de elementos que o objeto <see cref="T:System.Collections.Hashtable" /> pode conter inicialmente.</span><span class="sxs-lookup"><span data-stu-id="d5132-388">The approximate number of elements that the <see cref="T:System.Collections.Hashtable" /> object can initially contain.</span></span></param>
        <param name="hcp"><span data-ttu-id="d5132-389">O objeto <see cref="T:System.Collections.IHashCodeProvider" /> que fornece os códigos hash de todas as chaves no <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-389">The <see cref="T:System.Collections.IHashCodeProvider" /> object that supplies the hash codes for all keys in the <see cref="T:System.Collections.Hashtable" />.</span></span>  
  
 <span data-ttu-id="d5132-390">- ou -</span><span class="sxs-lookup"><span data-stu-id="d5132-390">-or-</span></span>  
  
 <span data-ttu-id="d5132-391"><see langword="null" /> para usar o provedor de código hash padrão, que é a implementação de cada chave de <see cref="M:System.Object.GetHashCode" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-391"><see langword="null" /> to use the default hash code provider, which is each key's implementation of <see cref="M:System.Object.GetHashCode" />.</span></span></param>
        <param name="comparer"><span data-ttu-id="d5132-392">O objeto <see cref="T:System.Collections.IComparer" /> a ser usado para determinar se duas chaves são iguais.</span><span class="sxs-lookup"><span data-stu-id="d5132-392">The <see cref="T:System.Collections.IComparer" /> object to use to determine whether two keys are equal.</span></span>  
  
 <span data-ttu-id="d5132-393">- ou -</span><span class="sxs-lookup"><span data-stu-id="d5132-393">-or-</span></span>  
  
 <span data-ttu-id="d5132-394"><see langword="null" /> para usar o comparador padrão, que é a implementação de cada chave de <see cref="M:System.Object.Equals(System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-394"><see langword="null" /> to use the default comparer, which is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span></span></param>
        <summary><span data-ttu-id="d5132-395">Inicializa uma instância nova e vazia da classe <see cref="T:System.Collections.Hashtable" /> usando a capacidade inicial especificada, o provedor de código hash, o comparador e o fator de carga padrão.</span><span class="sxs-lookup"><span data-stu-id="d5132-395">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the specified initial capacity, hash code provider, comparer, and the default load factor.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5132-396">Especificando a capacidade inicial elimina a necessidade de executar várias operações de redimensionamento durante a adição de elementos para o <xref:System.Collections.Hashtable> objeto.</span><span class="sxs-lookup"><span data-stu-id="d5132-396">Specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="d5132-397">A capacidade é automaticamente aumentado, conforme necessário, com base no fator de carga.</span><span class="sxs-lookup"><span data-stu-id="d5132-397">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="d5132-398">O fator de carga é a taxa máxima de elementos para buckets.</span><span class="sxs-lookup"><span data-stu-id="d5132-398">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="d5132-399">Um fator de carga menor significa que a pesquisa mais rápida às custas de maior consumo de memória.</span><span class="sxs-lookup"><span data-stu-id="d5132-399">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="d5132-400">Quando o fator de carga real atinge o fator de carga especificado, o número de buckets é automaticamente aumentado para o menor número primo maior que duas vezes o número atual de recipientes.</span><span class="sxs-lookup"><span data-stu-id="d5132-400">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="d5132-401">O provedor de código hash dispensa códigos hash para chaves de <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="d5132-401">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="d5132-402">O provedor de código de hash padrão é a implementação da chave de <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d5132-402">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d5132-403">O comparador determina se duas chaves são iguais.</span><span class="sxs-lookup"><span data-stu-id="d5132-403">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="d5132-404">Todas as chaves em um <xref:System.Collections.Hashtable> devem ser exclusivos.</span><span class="sxs-lookup"><span data-stu-id="d5132-404">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="d5132-405">O comparador padrão é a implementação da chave de <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d5132-405">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d5132-406">O provedor de código personalizado de hash e o comparador personalizado habilitar cenários como fazer pesquisas com cadeias de caracteres de maiusculas e minúsculas.</span><span class="sxs-lookup"><span data-stu-id="d5132-406">The custom hash code provider and the custom comparer enable scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="d5132-407">Este construtor é um O (`n`) operação, onde `n` é o `capacity` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="d5132-407">This constructor is an O(`n`) operation, where `n` is the `capacity` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5132-408">O exemplo de código a seguir cria tabelas de hash usando diferentes <xref:System.Collections.Hashtable> construtores e demonstra as diferenças no comportamento das tabelas de hash, mesmo se cada uma contém os mesmos elementos.</span><span class="sxs-lookup"><span data-stu-id="d5132-408">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorInt/CPP/hashtable_ctorint.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorInt/CS/hashtable_ctorint.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorInt/VB/hashtable_ctorint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d5132-409"><paramref name="capacity" /> é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="d5132-409"><paramref name="capacity" /> is less than zero.</span></span></exception>
        <altmember cref="T:System.Collections.IHashCodeProvider" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (int capacity, float loadFactor, System.Collections.IEqualityComparer equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity, float32 loadFactor, class System.Collections.IEqualityComparer equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Int32,System.Single,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer, loadFactor As Single, equalityComparer As IEqualityComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(int capacity, float loadFactor, System::Collections::IEqualityComparer ^ equalityComparer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
        <Parameter Name="loadFactor" Type="System.Single" />
        <Parameter Name="equalityComparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="d5132-410">O número aproximado de elementos que o objeto <see cref="T:System.Collections.Hashtable" /> pode conter inicialmente.</span><span class="sxs-lookup"><span data-stu-id="d5132-410">The approximate number of elements that the <see cref="T:System.Collections.Hashtable" /> object can initially contain.</span></span></param>
        <param name="loadFactor"><span data-ttu-id="d5132-411">Um número no intervalo entre 0.1 e 1.0 é multiplicado pelo valor padrão que fornece o melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="d5132-411">A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance.</span></span> <span data-ttu-id="d5132-412">O resultado é a proporção máxima de elementos para buckets.</span><span class="sxs-lookup"><span data-stu-id="d5132-412">The result is the maximum ratio of elements to buckets.</span></span></param>
        <param name="equalityComparer"><span data-ttu-id="d5132-413">O objeto <see cref="T:System.Collections.IEqualityComparer" /> que define o provedor de código hash e o comparador a serem usados com o <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-413">The <see cref="T:System.Collections.IEqualityComparer" /> object that defines the hash code provider and the comparer to use with the <see cref="T:System.Collections.Hashtable" />.</span></span>  
  
 <span data-ttu-id="d5132-414">- ou -</span><span class="sxs-lookup"><span data-stu-id="d5132-414">-or-</span></span>  
  
 <span data-ttu-id="d5132-415"><see langword="null" /> para usar o provedor de código hash padrão e o comparador padrão.</span><span class="sxs-lookup"><span data-stu-id="d5132-415"><see langword="null" /> to use the default hash code provider and the default comparer.</span></span> <span data-ttu-id="d5132-416">O provedor de código hash padrão é a implementação de cada chave de <see cref="M:System.Object.GetHashCode" /> e o comparador padrão é a implementação de cada chave de <see cref="M:System.Object.Equals(System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-416">The default hash code provider is each key's implementation of <see cref="M:System.Object.GetHashCode" /> and the default comparer is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span></span></param>
        <summary><span data-ttu-id="d5132-417">Inicializa uma instância nova e vazia da classe <see cref="T:System.Collections.Hashtable" /> usando a capacidade inicial especificada, o fator de carga e o objeto <see cref="T:System.Collections.IEqualityComparer" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-417">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the specified initial capacity, load factor, and <see cref="T:System.Collections.IEqualityComparer" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5132-418">Especificando a capacidade inicial elimina a necessidade de executar várias operações de redimensionamento durante a adição de elementos para o <xref:System.Collections.Hashtable> objeto.</span><span class="sxs-lookup"><span data-stu-id="d5132-418">Specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="d5132-419">A capacidade é automaticamente aumentado, conforme necessário, com base no fator de carga.</span><span class="sxs-lookup"><span data-stu-id="d5132-419">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="d5132-420">O fator de carga é a taxa máxima de elementos para buckets.</span><span class="sxs-lookup"><span data-stu-id="d5132-420">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="d5132-421">Um fator de carga menor significa que a pesquisa mais rápida às custas de maior consumo de memória.</span><span class="sxs-lookup"><span data-stu-id="d5132-421">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span> <span data-ttu-id="d5132-422">Um fator de carga de 1,0 é o melhor equilíbrio entre a velocidade e tamanho.</span><span class="sxs-lookup"><span data-stu-id="d5132-422">A load factor of 1.0 is the best balance between speed and size.</span></span>  
  
 <span data-ttu-id="d5132-423">Quando o fator de carga real atinge o fator de carga especificado, o número de buckets é automaticamente aumentado para o menor número primo maior que duas vezes o número atual de recipientes.</span><span class="sxs-lookup"><span data-stu-id="d5132-423">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="d5132-424">O <xref:System.Collections.IEqualityComparer> objeto inclui o provedor de código de hash e o comparador.</span><span class="sxs-lookup"><span data-stu-id="d5132-424">The <xref:System.Collections.IEqualityComparer> object includes both the hash code provider and the comparer.</span></span> <span data-ttu-id="d5132-425">Se um <xref:System.Collections.IEqualityComparer> é usado no <xref:System.Collections.Hashtable> construtor, os objetos usados como chaves no <xref:System.Collections.Hashtable> não precisa substituir o <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> e <xref:System.Object.Equals%2A?displayProperty=nameWithType> métodos.</span><span class="sxs-lookup"><span data-stu-id="d5132-425">If an <xref:System.Collections.IEqualityComparer> is used in the <xref:System.Collections.Hashtable> constructor, the objects used as keys in the <xref:System.Collections.Hashtable> are not required to override the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> and <xref:System.Object.Equals%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="d5132-426">O provedor de código hash dispensa códigos hash para chaves de <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="d5132-426">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="d5132-427">O provedor de código de hash padrão é a implementação da chave de <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d5132-427">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d5132-428">O comparador determina se duas chaves são iguais.</span><span class="sxs-lookup"><span data-stu-id="d5132-428">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="d5132-429">Todas as chaves em um <xref:System.Collections.Hashtable> devem ser exclusivos.</span><span class="sxs-lookup"><span data-stu-id="d5132-429">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="d5132-430">O comparador padrão é a implementação da chave de <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d5132-430">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d5132-431">O <xref:System.Collections.IEqualityComparer> permite cenários como fazer pesquisas com cadeias de caracteres de maiusculas e minúsculas.</span><span class="sxs-lookup"><span data-stu-id="d5132-431">The <xref:System.Collections.IEqualityComparer> enables scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="d5132-432">Este construtor é um O (`n`) operação, onde `n` é o `capacity` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="d5132-432">This constructor is an O(`n`) operation, where `n` is the `capacity` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5132-433">O exemplo de código a seguir cria tabelas de hash usando diferentes <xref:System.Collections.Hashtable> construtores e demonstra as diferenças no comportamento das tabelas de hash, mesmo se cada uma contém os mesmos elementos.</span><span class="sxs-lookup"><span data-stu-id="d5132-433">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorIntFloat#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorIntFloat/CPP/hashtable_ctorintfloat.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorIntFloat#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorIntFloat/CS/hashtable_ctorintfloat.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorIntFloat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorIntFloat/VB/hashtable_ctorintfloat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d5132-434"><paramref name="capacity" /> é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="d5132-434"><paramref name="capacity" /> is less than zero.</span></span>  
  
 <span data-ttu-id="d5132-435">- ou -</span><span class="sxs-lookup"><span data-stu-id="d5132-435">-or-</span></span>  
  
 <span data-ttu-id="d5132-436"><paramref name="loadFactor" /> é menor que 0.1.</span><span class="sxs-lookup"><span data-stu-id="d5132-436"><paramref name="loadFactor" /> is less than 0.1.</span></span>  
  
 <span data-ttu-id="d5132-437">- ou -</span><span class="sxs-lookup"><span data-stu-id="d5132-437">-or-</span></span>  
  
 <span data-ttu-id="d5132-438"><paramref name="loadFactor" /> é maior que 1.0.</span><span class="sxs-lookup"><span data-stu-id="d5132-438"><paramref name="loadFactor" /> is greater than 1.0.</span></span></exception>
        <altmember cref="T:System.Collections.IEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (System.Collections.IDictionary d, float loadFactor, System.Collections.IHashCodeProvider hcp, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary d, float32 loadFactor, class System.Collections.IHashCodeProvider hcp, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single,System.Collections.IHashCodeProvider,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (d As IDictionary, loadFactor As Single, hcp As IHashCodeProvider, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(System::Collections::IDictionary ^ d, float loadFactor, System::Collections::IHashCodeProvider ^ hcp, System::Collections::IComparer ^ comparer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Please use Hashtable(IDictionary, float, IEqualityComparer) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="d" Type="System.Collections.IDictionary" />
        <Parameter Name="loadFactor" Type="System.Single" />
        <Parameter Name="hcp" Type="System.Collections.IHashCodeProvider" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="d5132-439">O <see cref="T:System.Collections.IDictionary" /> objeto a ser copiado para um novo objeto <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-439">The <see cref="T:System.Collections.IDictionary" /> object to copy to a new <see cref="T:System.Collections.Hashtable" /> object.</span></span></param>
        <param name="loadFactor"><span data-ttu-id="d5132-440">Um número no intervalo entre 0.1 e 1.0 é multiplicado pelo valor padrão que fornece o melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="d5132-440">A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance.</span></span> <span data-ttu-id="d5132-441">O resultado é a proporção máxima de elementos para buckets.</span><span class="sxs-lookup"><span data-stu-id="d5132-441">The result is the maximum ratio of elements to buckets.</span></span></param>
        <param name="hcp"><span data-ttu-id="d5132-442">O objeto <see cref="T:System.Collections.IHashCodeProvider" /> que fornece os códigos hash de todas as chaves no <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-442">The <see cref="T:System.Collections.IHashCodeProvider" /> object that supplies the hash codes for all keys in the <see cref="T:System.Collections.Hashtable" />.</span></span>  
  
 <span data-ttu-id="d5132-443">- ou -</span><span class="sxs-lookup"><span data-stu-id="d5132-443">-or-</span></span>  
  
 <span data-ttu-id="d5132-444"><see langword="null" /> para usar o provedor de código hash padrão, que é a implementação de cada chave de <see cref="M:System.Object.GetHashCode" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-444"><see langword="null" /> to use the default hash code provider, which is each key's implementation of <see cref="M:System.Object.GetHashCode" />.</span></span></param>
        <param name="comparer"><span data-ttu-id="d5132-445">O objeto <see cref="T:System.Collections.IComparer" /> a ser usado para determinar se duas chaves são iguais.</span><span class="sxs-lookup"><span data-stu-id="d5132-445">The <see cref="T:System.Collections.IComparer" /> object to use to determine whether two keys are equal.</span></span>  
  
 <span data-ttu-id="d5132-446">- ou -</span><span class="sxs-lookup"><span data-stu-id="d5132-446">-or-</span></span>  
  
 <span data-ttu-id="d5132-447"><see langword="null" /> para usar o comparador padrão, que é a implementação de cada chave de <see cref="M:System.Object.Equals(System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-447"><see langword="null" /> to use the default comparer, which is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span></span></param>
        <summary><span data-ttu-id="d5132-448">Inicializa uma nova instância da classe <see cref="T:System.Collections.Hashtable" /> copiando os elementos do dicionário especificado para o novo objeto <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-448">Initializes a new instance of the <see cref="T:System.Collections.Hashtable" /> class by copying the elements from the specified dictionary to the new <see cref="T:System.Collections.Hashtable" /> object.</span></span> <span data-ttu-id="d5132-449">O novo objeto <see cref="T:System.Collections.Hashtable" /> tem uma capacidade inicial igual ao número de elementos copiados e usa o fator de carga, o provedor de código hash e o comparador especificados.</span><span class="sxs-lookup"><span data-stu-id="d5132-449">The new <see cref="T:System.Collections.Hashtable" /> object has an initial capacity equal to the number of elements copied, and uses the specified load factor, hash code provider, and comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5132-450">A capacidade inicial é definida como o número de elementos no dicionário de origem.</span><span class="sxs-lookup"><span data-stu-id="d5132-450">The initial capacity is set to the number of elements in the source dictionary.</span></span> <span data-ttu-id="d5132-451">A capacidade é automaticamente aumentado, conforme necessário, com base no fator de carga.</span><span class="sxs-lookup"><span data-stu-id="d5132-451">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="d5132-452">O fator de carga é a taxa máxima de elementos para buckets.</span><span class="sxs-lookup"><span data-stu-id="d5132-452">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="d5132-453">Um fator de carga menor significa que a pesquisa mais rápida às custas de maior consumo de memória.</span><span class="sxs-lookup"><span data-stu-id="d5132-453">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span> <span data-ttu-id="d5132-454">Um fator de carga de 1,0 é o melhor equilíbrio entre a velocidade e tamanho.</span><span class="sxs-lookup"><span data-stu-id="d5132-454">A load factor of 1.0 is the best balance between speed and size.</span></span>  
  
 <span data-ttu-id="d5132-455">Quando o fator de carga real atinge o fator de carga especificado, o número de buckets é automaticamente aumentado para o menor número primo maior que duas vezes o número atual de recipientes.</span><span class="sxs-lookup"><span data-stu-id="d5132-455">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="d5132-456">O provedor de código hash dispensa códigos hash para chaves de <xref:System.Collections.Hashtable> objeto.</span><span class="sxs-lookup"><span data-stu-id="d5132-456">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="d5132-457">O provedor de código de hash padrão é a implementação da chave de <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d5132-457">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d5132-458">O comparador determina se duas chaves são iguais.</span><span class="sxs-lookup"><span data-stu-id="d5132-458">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="d5132-459">Todas as chaves em um <xref:System.Collections.Hashtable> devem ser exclusivos.</span><span class="sxs-lookup"><span data-stu-id="d5132-459">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="d5132-460">O comparador padrão é a implementação da chave de <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d5132-460">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d5132-461">O provedor de código personalizado de hash e o comparador personalizado habilitar cenários como fazer pesquisas com cadeias de caracteres de maiusculas e minúsculas.</span><span class="sxs-lookup"><span data-stu-id="d5132-461">The custom hash code provider and the custom comparer enable scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="d5132-462">Os elementos da nova <xref:System.Collections.Hashtable> são classificados na mesma ordem em que o enumerador que itera por meio de <xref:System.Collections.IDictionary> objeto.</span><span class="sxs-lookup"><span data-stu-id="d5132-462">The elements of the new <xref:System.Collections.Hashtable> are sorted in the same order in which the enumerator iterates through the <xref:System.Collections.IDictionary> object.</span></span>  
  
 <span data-ttu-id="d5132-463">Este construtor é um O (`n`) operação, onde `n` é o número de elementos de `d` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="d5132-463">This constructor is an O(`n`) operation, where `n` is the number of elements in the `d` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5132-464">O exemplo de código a seguir cria tabelas de hash usando diferentes <xref:System.Collections.Hashtable> construtores e demonstra as diferenças no comportamento das tabelas de hash, mesmo se cada uma contém os mesmos elementos.</span><span class="sxs-lookup"><span data-stu-id="d5132-464">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorDictionaryFloat#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionaryFloat/CPP/hashtable_ctordictionaryfloat.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorDictionaryFloat#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionaryFloat/CS/hashtable_ctordictionaryfloat.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorDictionaryFloat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionaryFloat/VB/hashtable_ctordictionaryfloat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5132-465"><paramref name="d" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-465"><paramref name="d" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d5132-466"><paramref name="loadFactor" /> é menor que 0.1.</span><span class="sxs-lookup"><span data-stu-id="d5132-466"><paramref name="loadFactor" /> is less than 0.1.</span></span>  
  
 <span data-ttu-id="d5132-467">- ou -</span><span class="sxs-lookup"><span data-stu-id="d5132-467">-or-</span></span>  
  
 <span data-ttu-id="d5132-468"><paramref name="loadFactor" /> é maior que 1.0.</span><span class="sxs-lookup"><span data-stu-id="d5132-468"><paramref name="loadFactor" /> is greater than 1.0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (int capacity, float loadFactor, System.Collections.IHashCodeProvider hcp, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity, float32 loadFactor, class System.Collections.IHashCodeProvider hcp, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Int32,System.Single,System.Collections.IHashCodeProvider,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer, loadFactor As Single, hcp As IHashCodeProvider, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(int capacity, float loadFactor, System::Collections::IHashCodeProvider ^ hcp, System::Collections::IComparer ^ comparer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Please use Hashtable(int, float, IEqualityComparer) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
        <Parameter Name="loadFactor" Type="System.Single" />
        <Parameter Name="hcp" Type="System.Collections.IHashCodeProvider" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="d5132-469">O número aproximado de elementos que o objeto <see cref="T:System.Collections.Hashtable" /> pode conter inicialmente.</span><span class="sxs-lookup"><span data-stu-id="d5132-469">The approximate number of elements that the <see cref="T:System.Collections.Hashtable" /> object can initially contain.</span></span></param>
        <param name="loadFactor"><span data-ttu-id="d5132-470">Um número no intervalo entre 0.1 e 1.0 é multiplicado pelo valor padrão que fornece o melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="d5132-470">A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance.</span></span> <span data-ttu-id="d5132-471">O resultado é a proporção máxima de elementos para buckets.</span><span class="sxs-lookup"><span data-stu-id="d5132-471">The result is the maximum ratio of elements to buckets.</span></span></param>
        <param name="hcp"><span data-ttu-id="d5132-472">O objeto <see cref="T:System.Collections.IHashCodeProvider" /> que fornece os códigos hash de todas as chaves no <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-472">The <see cref="T:System.Collections.IHashCodeProvider" /> object that supplies the hash codes for all keys in the <see cref="T:System.Collections.Hashtable" />.</span></span>  
  
 <span data-ttu-id="d5132-473">- ou -</span><span class="sxs-lookup"><span data-stu-id="d5132-473">-or-</span></span>  
  
 <span data-ttu-id="d5132-474"><see langword="null" /> para usar o provedor de código hash padrão, que é a implementação de cada chave de <see cref="M:System.Object.GetHashCode" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-474"><see langword="null" /> to use the default hash code provider, which is each key's implementation of <see cref="M:System.Object.GetHashCode" />.</span></span></param>
        <param name="comparer"><span data-ttu-id="d5132-475">O objeto <see cref="T:System.Collections.IComparer" /> a ser usado para determinar se duas chaves são iguais.</span><span class="sxs-lookup"><span data-stu-id="d5132-475">The <see cref="T:System.Collections.IComparer" /> object to use to determine whether two keys are equal.</span></span>  
  
 <span data-ttu-id="d5132-476">- ou -</span><span class="sxs-lookup"><span data-stu-id="d5132-476">-or-</span></span>  
  
 <span data-ttu-id="d5132-477"><see langword="null" /> para usar o comparador padrão, que é a implementação de cada chave de <see cref="M:System.Object.Equals(System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-477"><see langword="null" /> to use the default comparer, which is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span></span></param>
        <summary><span data-ttu-id="d5132-478">Inicializa uma instância nova e vazia da classe <see cref="T:System.Collections.Hashtable" /> usando a capacidade inicial, o fator de carga, o provedor de código hash e o comparador especificados.</span><span class="sxs-lookup"><span data-stu-id="d5132-478">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the specified initial capacity, load factor, hash code provider, and comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5132-479">Especificando a capacidade inicial elimina a necessidade de executar várias operações de redimensionamento durante a adição de elementos para o <xref:System.Collections.Hashtable> objeto.</span><span class="sxs-lookup"><span data-stu-id="d5132-479">Specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="d5132-480">A capacidade é automaticamente aumentado, conforme necessário, com base no fator de carga.</span><span class="sxs-lookup"><span data-stu-id="d5132-480">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="d5132-481">O fator de carga é a taxa máxima de elementos para buckets.</span><span class="sxs-lookup"><span data-stu-id="d5132-481">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="d5132-482">Um fator de carga menor significa que a pesquisa mais rápida às custas de maior consumo de memória.</span><span class="sxs-lookup"><span data-stu-id="d5132-482">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span> <span data-ttu-id="d5132-483">Um fator de carga de 1,0 é o melhor equilíbrio entre a velocidade e tamanho.</span><span class="sxs-lookup"><span data-stu-id="d5132-483">A load factor of 1.0 is the best balance between speed and size.</span></span>  
  
 <span data-ttu-id="d5132-484">Quando o fator de carga real atinge o fator de carga especificado, o número de buckets é automaticamente aumentado para o menor número primo maior que duas vezes o número atual de recipientes.</span><span class="sxs-lookup"><span data-stu-id="d5132-484">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="d5132-485">O provedor de código hash dispensa códigos hash para chaves de <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="d5132-485">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="d5132-486">O provedor de código de hash padrão é a implementação da chave de <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d5132-486">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d5132-487">O comparador determina se duas chaves são iguais.</span><span class="sxs-lookup"><span data-stu-id="d5132-487">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="d5132-488">Todas as chaves em um <xref:System.Collections.Hashtable> devem ser exclusivos.</span><span class="sxs-lookup"><span data-stu-id="d5132-488">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="d5132-489">O comparador padrão é a implementação da chave de <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d5132-489">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d5132-490">O provedor de código personalizado de hash e o comparador personalizado habilitar cenários como fazer pesquisas com cadeias de caracteres de maiusculas e minúsculas.</span><span class="sxs-lookup"><span data-stu-id="d5132-490">The custom hash code provider and the custom comparer enable scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="d5132-491">Este construtor é um O (`n`) operação, onde `n` é o `capacity` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="d5132-491">This constructor is an O(`n`) operation, where `n` is the `capacity` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5132-492">O exemplo de código a seguir cria tabelas de hash usando diferentes <xref:System.Collections.Hashtable> construtores e demonstra as diferenças no comportamento das tabelas de hash, mesmo se cada uma contém os mesmos elementos.</span><span class="sxs-lookup"><span data-stu-id="d5132-492">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorIntFloat#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorIntFloat/CPP/hashtable_ctorintfloat.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorIntFloat#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorIntFloat/CS/hashtable_ctorintfloat.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorIntFloat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorIntFloat/VB/hashtable_ctorintfloat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d5132-493"><paramref name="capacity" /> é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="d5132-493"><paramref name="capacity" /> is less than zero.</span></span>  
  
 <span data-ttu-id="d5132-494">- ou -</span><span class="sxs-lookup"><span data-stu-id="d5132-494">-or-</span></span>  
  
 <span data-ttu-id="d5132-495"><paramref name="loadFactor" /> é menor que 0.1.</span><span class="sxs-lookup"><span data-stu-id="d5132-495"><paramref name="loadFactor" /> is less than 0.1.</span></span>  
  
 <span data-ttu-id="d5132-496">- ou -</span><span class="sxs-lookup"><span data-stu-id="d5132-496">-or-</span></span>  
  
 <span data-ttu-id="d5132-497"><paramref name="loadFactor" /> é maior que 1.0.</span><span class="sxs-lookup"><span data-stu-id="d5132-497"><paramref name="loadFactor" /> is greater than 1.0.</span></span></exception>
        <altmember cref="T:System.Collections.IHashCodeProvider" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.Add(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (key As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Object ^ key, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Add(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="d5132-498">A chave do elemento a ser adicionada.</span><span class="sxs-lookup"><span data-stu-id="d5132-498">The key of the element to add.</span></span></param>
        <param name="value"><span data-ttu-id="d5132-499">O valor do elemento a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="d5132-499">The value of the element to add.</span></span> <span data-ttu-id="d5132-500">O valor pode ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-500">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="d5132-501">Adiciona um elemento com a chave e o valor especificados ao <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-501">Adds an element with the specified key and value into the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5132-502">Uma chave não pode ser `null`, mas pode ser um valor.</span><span class="sxs-lookup"><span data-stu-id="d5132-502">A key cannot be `null`, but a value can be.</span></span>  
  
 <span data-ttu-id="d5132-503">Um objeto que não tem nenhuma correlação entre seu estado e seu valor de código de hash, normalmente, não deve ser usado como chave.</span><span class="sxs-lookup"><span data-stu-id="d5132-503">An object that has no correlation between its state and its hash code value should typically not be used as the key.</span></span> <span data-ttu-id="d5132-504">Por exemplo, objetos de cadeia de caracteres são melhores que objetos de StringBuilder para uso como chaves.</span><span class="sxs-lookup"><span data-stu-id="d5132-504">For example, String objects are better than StringBuilder objects for use as keys.</span></span>  
  
 <span data-ttu-id="d5132-505">Você também pode usar o <xref:System.Collections.Hashtable.Item%2A> propriedade para adicionar novos elementos, definindo o valor de uma chave que não existe no <xref:System.Collections.Hashtable>; por exemplo, `myCollection["myNonexistentKey"] = myValue`.</span><span class="sxs-lookup"><span data-stu-id="d5132-505">You can also use the <xref:System.Collections.Hashtable.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.Hashtable>; for example, `myCollection["myNonexistentKey"] = myValue`.</span></span> <span data-ttu-id="d5132-506">No entanto, se a chave especificada já existe no <xref:System.Collections.Hashtable>, a definição de <xref:System.Collections.Hashtable.Item%2A> propriedade substitui o valor antigo.</span><span class="sxs-lookup"><span data-stu-id="d5132-506">However, if the specified key already exists in the <xref:System.Collections.Hashtable>, setting the <xref:System.Collections.Hashtable.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="d5132-507">Em contraste, o <xref:System.Collections.Hashtable.Add%2A> método não modifica os elementos existentes.</span><span class="sxs-lookup"><span data-stu-id="d5132-507">In contrast, the <xref:System.Collections.Hashtable.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="d5132-508">Se <xref:System.Collections.Hashtable.Count%2A> é menor que a capacidade do <xref:System.Collections.Hashtable>, esse método é uma operação de (1).</span><span class="sxs-lookup"><span data-stu-id="d5132-508">If <xref:System.Collections.Hashtable.Count%2A> is less than the capacity of the <xref:System.Collections.Hashtable>, this method is an O(1) operation.</span></span> <span data-ttu-id="d5132-509">Se a capacidade precisa ser aumentado para acomodar o novo elemento, esse método se torna um O (`n`) operação, onde `n` é <xref:System.Collections.Hashtable.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="d5132-509">If the capacity needs to be increased to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.Hashtable.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5132-510">O exemplo a seguir mostra como adicionar elementos para o <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="d5132-510">The following example shows how to add elements to the <xref:System.Collections.Hashtable>.</span></span>  
  
 [!code-cpp[Classic Hashtable.Add Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hashtable.Add Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.Add Example/CS/source.cs#1)]
 [!code-vb[Classic Hashtable.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5132-511"><paramref name="key" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-511"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d5132-512">Já existe um elemento com a mesma chave no <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-512">An element with the same key already exists in the <see cref="T:System.Collections.Hashtable" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d5132-513">O <see cref="T:System.Collections.Hashtable" /> é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="d5132-513">The <see cref="T:System.Collections.Hashtable" /> is read-only.</span></span>  
  
 <span data-ttu-id="d5132-514">- ou -</span><span class="sxs-lookup"><span data-stu-id="d5132-514">-or-</span></span>  
  
 <span data-ttu-id="d5132-515">O <see cref="T:System.Collections.Hashtable" /> tem um tamanho fixo.</span><span class="sxs-lookup"><span data-stu-id="d5132-515">The <see cref="T:System.Collections.Hashtable" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.Hashtable.Remove(System.Object)" />
        <altmember cref="P:System.Collections.Hashtable.Item(System.Object)" />
        <altmember cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d5132-516">Remove todos os elementos do <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-516">Removes all elements from the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5132-517"><xref:System.Collections.Hashtable.Count%2A> é definido como zero, e referências a outros objetos de elementos da coleção também são liberadas.</span><span class="sxs-lookup"><span data-stu-id="d5132-517"><xref:System.Collections.Hashtable.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.</span></span> <span data-ttu-id="d5132-518">A capacidade permanece inalterada.</span><span class="sxs-lookup"><span data-stu-id="d5132-518">The capacity remains unchanged.</span></span>  
  
 <span data-ttu-id="d5132-519">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.Hashtable.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="d5132-519">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Hashtable.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5132-520">O exemplo a seguir mostra como limpar os valores de <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="d5132-520">The following example shows how to clear the values of the <xref:System.Collections.Hashtable>.</span></span>  
  
 [!code-cpp[Classic Hashtable.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hashtable.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic Hashtable.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d5132-521">O <see cref="T:System.Collections.Hashtable" /> é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="d5132-521">The <see cref="T:System.Collections.Hashtable" /> is read-only.</span></span></exception>
        <altmember cref="M:System.Collections.IDictionary.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d5132-522">Cria uma cópia superficial do <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-522">Creates a shallow copy of the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <returns><span data-ttu-id="d5132-523">Uma cópia superficial do <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-523">A shallow copy of the <see cref="T:System.Collections.Hashtable" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5132-524">Uma cópia superficial de uma coleção copia apenas os elementos da coleção, se eles são tipos de referência ou tipos de valor, mas não copia os objetos que se referem as referências a.</span><span class="sxs-lookup"><span data-stu-id="d5132-524">A shallow copy of a collection copies only the elements of the collection, whether they are reference types or value types, but it does not copy the objects that the references refer to.</span></span> <span data-ttu-id="d5132-525">As referências na nova coleção apontam para os mesmos objetos que as referências na coleção original apontem para.</span><span class="sxs-lookup"><span data-stu-id="d5132-525">The references in the new collection point to the same objects that the references in the original collection point to.</span></span>  
  
 <span data-ttu-id="d5132-526">Em contraste, uma cópia profunda de uma coleção copia os elementos e tudo direta ou indiretamente referenciado por elementos.</span><span class="sxs-lookup"><span data-stu-id="d5132-526">In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="d5132-527">O <xref:System.Collections.Hashtable> clone tem a mesma contagem, a mesma capacidade, o mesmo <xref:System.Collections.IHashCodeProvider> implementação e o mesmo <xref:System.Collections.IComparer> implementação original <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="d5132-527">The <xref:System.Collections.Hashtable> clone has the same count, the same capacity, the same <xref:System.Collections.IHashCodeProvider> implementation, and the same <xref:System.Collections.IComparer> implementation as the original <xref:System.Collections.Hashtable>.</span></span>  
  
 <span data-ttu-id="d5132-528">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.Hashtable.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="d5132-528">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Hashtable.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Hashtable.CopyTo(System.Array,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="comparer">
      <MemberSignature Language="C#" Value="protected System.Collections.IComparer comparer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IComparer comparer" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.comparer" />
      <MemberSignature Language="VB.NET" Value="Protected Property comparer As IComparer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::IComparer ^ comparer { System::Collections::IComparer ^ get(); void set(System::Collections::IComparer ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Please use KeyComparer properties.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5132-529">Obtém ou define o <see cref="T:System.Collections.IComparer" /> a ser usado para o <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-529">Gets or sets the <see cref="T:System.Collections.IComparer" /> to use for the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <value><span data-ttu-id="d5132-530">O <see cref="T:System.Collections.IComparer" /> a ser usado para o <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-530">The <see cref="T:System.Collections.IComparer" /> to use for the <see cref="T:System.Collections.Hashtable" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5132-531">A recuperação do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="d5132-531">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d5132-532">A propriedade é definida como um valor, mas a tabela de hash foi criada usando um <see cref="T:System.Collections.IEqualityComparer" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-532">The property is set to a value, but the hash table was created using an <see cref="T:System.Collections.IEqualityComparer" />.</span></span></exception>
        <altmember cref="T:System.Collections.IComparer" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains (key As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Object ^ key);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="d5132-533">A chave a ser localizada no <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-533">The key to locate in the <see cref="T:System.Collections.Hashtable" />.</span></span></param>
        <summary><span data-ttu-id="d5132-534">Determina se a <see cref="T:System.Collections.Hashtable" /> contém uma chave específica.</span><span class="sxs-lookup"><span data-stu-id="d5132-534">Determines whether the <see cref="T:System.Collections.Hashtable" /> contains a specific key.</span></span></summary>
        <returns>
          <span data-ttu-id="d5132-535"><see langword="true" /> se o <see cref="T:System.Collections.Hashtable" /> contiver um elemento com a chave especificada; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-535"><see langword="true" /> if the <see cref="T:System.Collections.Hashtable" /> contains an element with the specified key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5132-536"><xref:System.Collections.Hashtable.Contains%2A> implementa <xref:System.Collections.IDictionary.Contains%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d5132-536"><xref:System.Collections.Hashtable.Contains%2A> implements <xref:System.Collections.IDictionary.Contains%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d5132-537">Ele se comporta exatamente como <xref:System.Collections.Hashtable.ContainsKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="d5132-537">It behaves exactly as <xref:System.Collections.Hashtable.ContainsKey%2A>.</span></span>  
  
 <span data-ttu-id="d5132-538">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="d5132-538">This method is an O(1) operation.</span></span>  
  
 <span data-ttu-id="d5132-539">Começando pelo .NET Framework 2.0, esse método usa os métodos <xref:System.Object.Equals%2A> e <xref:System.IComparable.CompareTo%2A> do objeto da coleção em `item` para determinar se o item existe.</span><span class="sxs-lookup"><span data-stu-id="d5132-539">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="d5132-540">Em versões anteriores do .NET Framework, essa decisão era tomada usando-se os métodos <xref:System.Object.Equals%2A> e <xref:System.IComparable.CompareTo%2A> do parâmetro `item` nos objetos na coleção.</span><span class="sxs-lookup"><span data-stu-id="d5132-540">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5132-541">O exemplo a seguir mostra como determinar se o <xref:System.Collections.Hashtable> contém um elemento específico.</span><span class="sxs-lookup"><span data-stu-id="d5132-541">The following example shows how to determine whether the <xref:System.Collections.Hashtable> contains a specific element.</span></span>  
  
 [!code-cpp[Classic Hashtable.Contains Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.Contains Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hashtable.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic Hashtable.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5132-542"><paramref name="key" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-542"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Collections.Hashtable.ContainsKey(System.Object)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public virtual bool ContainsKey (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.ContainsKey(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsKey (key As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::Object ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="d5132-543">A chave a ser localizada no <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-543">The key to locate in the <see cref="T:System.Collections.Hashtable" />.</span></span></param>
        <summary><span data-ttu-id="d5132-544">Determina se a <see cref="T:System.Collections.Hashtable" /> contém uma chave específica.</span><span class="sxs-lookup"><span data-stu-id="d5132-544">Determines whether the <see cref="T:System.Collections.Hashtable" /> contains a specific key.</span></span></summary>
        <returns>
          <span data-ttu-id="d5132-545"><see langword="true" /> se o <see cref="T:System.Collections.Hashtable" /> contiver um elemento com a chave especificada; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-545"><see langword="true" /> if the <see cref="T:System.Collections.Hashtable" /> contains an element with the specified key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5132-546">Esse método se comporta exatamente como <xref:System.Collections.Hashtable.Contains%2A>.</span><span class="sxs-lookup"><span data-stu-id="d5132-546">This method behaves exactly as <xref:System.Collections.Hashtable.Contains%2A>.</span></span>  
  
 <span data-ttu-id="d5132-547">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="d5132-547">This method is an O(1) operation.</span></span>  
  
 <span data-ttu-id="d5132-548">Começando pelo .NET Framework 2.0, esse método usa os métodos <xref:System.Object.Equals%2A> e <xref:System.IComparable.CompareTo%2A> do objeto da coleção em `item` para determinar se o item existe.</span><span class="sxs-lookup"><span data-stu-id="d5132-548">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="d5132-549">Em versões anteriores do .NET Framework, essa decisão era tomada usando-se os métodos <xref:System.Object.Equals%2A> e <xref:System.IComparable.CompareTo%2A> do parâmetro `item` nos objetos na coleção.</span><span class="sxs-lookup"><span data-stu-id="d5132-549">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5132-550">O exemplo a seguir mostra como determinar se o <xref:System.Collections.Hashtable> contém um elemento específico.</span><span class="sxs-lookup"><span data-stu-id="d5132-550">The following example shows how to determine whether the <xref:System.Collections.Hashtable> contains a specific element.</span></span>  
  
 [!code-cpp[Classic Hashtable.Contains Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.Contains Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hashtable.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic Hashtable.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5132-551"><paramref name="key" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-551"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Collections.Hashtable.Contains(System.Object)" />
        <altmember cref="M:System.Collections.Hashtable.ContainsValue(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsValue">
      <MemberSignature Language="C#" Value="public virtual bool ContainsValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.ContainsValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsValue (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsValue(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d5132-552">O valor a ser localizado na <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-552">The value to locate in the <see cref="T:System.Collections.Hashtable" />.</span></span> <span data-ttu-id="d5132-553">O valor pode ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-553">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="d5132-554">Determinará se o <see cref="T:System.Collections.Hashtable" /> contiver um valor específico.</span><span class="sxs-lookup"><span data-stu-id="d5132-554">Determines whether the <see cref="T:System.Collections.Hashtable" /> contains a specific value.</span></span></summary>
        <returns>
          <span data-ttu-id="d5132-555"><see langword="true" /> se o <see cref="T:System.Collections.Hashtable" /> contiver um elemento com o <paramref name="value" /> especificado; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-555"><see langword="true" /> if the <see cref="T:System.Collections.Hashtable" /> contains an element with the specified <paramref name="value" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5132-556">Os valores dos elementos do <xref:System.Collections.Hashtable> são comparados com o valor especificado usando o <xref:System.Object.Equals%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="d5132-556">The values of the elements of the <xref:System.Collections.Hashtable> are compared to the specified value using the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="d5132-557">Este método executa uma pesquisa linear; por isso, esse método é uma operação O(`n`), em que `n` é <xref:System.Collections.Hashtable.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="d5132-557">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Hashtable.Count%2A>.</span></span>  
  
 <span data-ttu-id="d5132-558">Começando pelo .NET Framework 2.0, esse método usa os métodos <xref:System.Object.Equals%2A> e <xref:System.IComparable.CompareTo%2A> do objeto da coleção em `item` para determinar se o item existe.</span><span class="sxs-lookup"><span data-stu-id="d5132-558">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="d5132-559">Em versões anteriores do .NET Framework, essa decisão era tomada usando-se os métodos <xref:System.Object.Equals%2A> e <xref:System.IComparable.CompareTo%2A> do parâmetro `item` nos objetos na coleção.</span><span class="sxs-lookup"><span data-stu-id="d5132-559">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5132-560">O exemplo a seguir mostra como determinar se o <xref:System.Collections.Hashtable> contém um elemento específico.</span><span class="sxs-lookup"><span data-stu-id="d5132-560">The following example shows how to determine whether the <xref:System.Collections.Hashtable> contains a specific element.</span></span>  
  
 [!code-cpp[Classic Hashtable.Contains Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.Contains Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hashtable.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic Hashtable.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Hashtable.ContainsKey(System.Object)" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int arrayIndex);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="d5132-561">O <see cref="T:System.Array" /> unidimensional que é o destino dos objetos <see cref="T:System.Collections.DictionaryEntry" /> copiados de <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-561">The one-dimensional <see cref="T:System.Array" /> that is the destination of the <see cref="T:System.Collections.DictionaryEntry" /> objects copied from <see cref="T:System.Collections.Hashtable" />.</span></span> <span data-ttu-id="d5132-562">O <see cref="T:System.Array" /> deve ter indexação com base em zero.</span><span class="sxs-lookup"><span data-stu-id="d5132-562">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="d5132-563">O índice baseado em zero na <c>array</c> na qual a cópia começa.</span><span class="sxs-lookup"><span data-stu-id="d5132-563">The zero-based index in <c>array</c> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="d5132-564">Copia os elementos <see cref="T:System.Collections.Hashtable" /> para uma instância <see cref="T:System.Array" /> unidimensional no índice especificado.</span><span class="sxs-lookup"><span data-stu-id="d5132-564">Copies the <see cref="T:System.Collections.Hashtable" /> elements to a one-dimensional <see cref="T:System.Array" /> instance at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5132-565">Os elementos são copiados para o <xref:System.Array> na mesma ordem em que o enumerador que itera por meio de <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="d5132-565">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.Hashtable>.</span></span>  
  
 <span data-ttu-id="d5132-566">Para copiar somente as chaves de <xref:System.Collections.Hashtable>, use `Hashtable.Keys.CopyTo`.</span><span class="sxs-lookup"><span data-stu-id="d5132-566">To copy only the keys in the <xref:System.Collections.Hashtable>, use `Hashtable.Keys.CopyTo`.</span></span>  
  
 <span data-ttu-id="d5132-567">Para copiar somente os valores no <xref:System.Collections.Hashtable>, use `Hashtable.Values.CopyTo`.</span><span class="sxs-lookup"><span data-stu-id="d5132-567">To copy only the values in the <xref:System.Collections.Hashtable>, use `Hashtable.Values.CopyTo`.</span></span>  
  
 <span data-ttu-id="d5132-568">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.Hashtable.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="d5132-568">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Hashtable.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5132-569">O exemplo a seguir mostra como copiar a lista de chaves ou a lista de valores em uma <xref:System.Collections.Hashtable> em um unidimensional <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="d5132-569">The following example shows how to copy the list of keys or the list of values in a <xref:System.Collections.Hashtable> into a one-dimensional <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Hashtable.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hashtable.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic Hashtable.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5132-570"><paramref name="array" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-570"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d5132-571"><paramref name="arrayIndex" /> é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="d5132-571"><paramref name="arrayIndex" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d5132-572"><paramref name="array" /> é multidimensional.</span><span class="sxs-lookup"><span data-stu-id="d5132-572"><paramref name="array" /> is multidimensional.</span></span>  
  
 <span data-ttu-id="d5132-573">- ou -</span><span class="sxs-lookup"><span data-stu-id="d5132-573">-or-</span></span>  
  
 <span data-ttu-id="d5132-574">O número de elementos na origem <see cref="T:System.Collections.Hashtable" /> é maior do que o espaço disponível de <paramref name="arrayIndex" /> até o final do <paramref name="array" /> de destino.</span><span class="sxs-lookup"><span data-stu-id="d5132-574">The number of elements in the source <see cref="T:System.Collections.Hashtable" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="d5132-575">O tipo do <see cref="T:System.Collections.Hashtable" /> de origem não pode ser automaticamente convertido para o tipo de <paramref name="array" /> de destino.</span><span class="sxs-lookup"><span data-stu-id="d5132-575">The type of the source <see cref="T:System.Collections.Hashtable" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
        <altmember cref="T:System.Array" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="M:System.Collections.Hashtable.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5132-576">Obtém o número de pares chave-valor contidos no <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-576">Gets the number of key/value pairs contained in the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <value><span data-ttu-id="d5132-577">O número de pares chave-valor contidos no <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-577">The number of key/value pairs contained in the <see cref="T:System.Collections.Hashtable" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5132-578">A recuperação do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="d5132-578">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EqualityComparer">
      <MemberSignature Language="C#" Value="protected System.Collections.IEqualityComparer EqualityComparer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEqualityComparer EqualityComparer" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.EqualityComparer" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property EqualityComparer As IEqualityComparer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::IEqualityComparer ^ EqualityComparer { System::Collections::IEqualityComparer ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEqualityComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5132-579">Obtém o <see cref="T:System.Collections.IEqualityComparer" /> a ser usado para o <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-579">Gets the <see cref="T:System.Collections.IEqualityComparer" /> to use for the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <value><span data-ttu-id="d5132-580">O <see cref="T:System.Collections.IEqualityComparer" /> a ser usado para o <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-580">The <see cref="T:System.Collections.IEqualityComparer" /> to use for the <see cref="T:System.Collections.Hashtable" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5132-581">O <xref:System.Collections.IEqualityComparer> inclui o comparador e o provedor de código de hash.</span><span class="sxs-lookup"><span data-stu-id="d5132-581">The <xref:System.Collections.IEqualityComparer> includes both the comparer and the hash code provider.</span></span> <span data-ttu-id="d5132-582">Se um <xref:System.Collections.IEqualityComparer> é usado no <xref:System.Collections.Hashtable> construtor, os objetos usados como chaves no <xref:System.Collections.Hashtable> não precisa substituir o <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> e <xref:System.Object.Equals%2A?displayProperty=nameWithType> métodos.</span><span class="sxs-lookup"><span data-stu-id="d5132-582">If an <xref:System.Collections.IEqualityComparer> is used in the <xref:System.Collections.Hashtable> constructor, the objects used as keys in the <xref:System.Collections.Hashtable> are not required to override the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> and <xref:System.Object.Equals%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="d5132-583">A recuperação do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="d5132-583">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d5132-584">A propriedade é definida como um valor, mas a tabela de hash foi criada usando um <see cref="T:System.Collections.IHashCodeProvider" /> e um <see cref="T:System.Collections.IComparer" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-584">The property is set to a value, but the hash table was created using an <see cref="T:System.Collections.IHashCodeProvider" /> and an <see cref="T:System.Collections.IComparer" />.</span></span></exception>
        <altmember cref="T:System.Collections.Comparer" />
        <altmember cref="T:System.Collections.IEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d5132-585">Retorna um <see cref="T:System.Collections.IDictionaryEnumerator" /> que itera pelo <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-585">Returns an <see cref="T:System.Collections.IDictionaryEnumerator" /> that iterates through the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <returns><span data-ttu-id="d5132-586">Um <see cref="T:System.Collections.IDictionaryEnumerator" /> para o <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-586">An <see cref="T:System.Collections.IDictionaryEnumerator" /> for the <see cref="T:System.Collections.Hashtable" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5132-587">[Visual Basic, C#]</span><span class="sxs-lookup"><span data-stu-id="d5132-587">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="d5132-588">O `foreach` instrução de linguagem c# (`for each` no Visual Basic) oculta a complexidade dos enumeradores.</span><span class="sxs-lookup"><span data-stu-id="d5132-588">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="d5132-589">Portanto, o uso de `foreach` é recomendado, em vez de manipular diretamente o enumerador.</span><span class="sxs-lookup"><span data-stu-id="d5132-589">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="d5132-590">Os enumeradores podem ser usados para ler os dados na coleção, mas não podem ser usados para modificar a coleção subjacente.</span><span class="sxs-lookup"><span data-stu-id="d5132-590">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="d5132-591">Inicialmente, o enumerador é posicionado antes do primeiro elemento da coleção.</span><span class="sxs-lookup"><span data-stu-id="d5132-591">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="d5132-592"><xref:System.Collections.IEnumerator.Reset%2A> também traz o enumerador de volta para essa posição.</span><span class="sxs-lookup"><span data-stu-id="d5132-592"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="d5132-593">Nesta posição, <xref:System.Collections.IEnumerator.Current%2A> está indefinido.</span><span class="sxs-lookup"><span data-stu-id="d5132-593">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="d5132-594">Por isso, você deve chamar <xref:System.Collections.IEnumerator.MoveNext%2A> para avançar o enumerador até o primeiro elemento da coleção antes de ler o valor de <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="d5132-594">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="d5132-595"><xref:System.Collections.IEnumerator.Current%2A> retorna o mesmo objeto até <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> ser chamado.</span><span class="sxs-lookup"><span data-stu-id="d5132-595"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="d5132-596"><xref:System.Collections.IEnumerator.MoveNext%2A> define <xref:System.Collections.IEnumerator.Current%2A> como o próximo elemento.</span><span class="sxs-lookup"><span data-stu-id="d5132-596"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="d5132-597">Caso <xref:System.Collections.IEnumerator.MoveNext%2A> passe o final da coleção, o enumerador é posicionado após o último elemento na coleção e <xref:System.Collections.IEnumerator.MoveNext%2A> retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="d5132-597">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="d5132-598">Quando o enumerador está nessa posição, as chamadas subsequentes para <xref:System.Collections.IEnumerator.MoveNext%2A> também retornam `false`.</span><span class="sxs-lookup"><span data-stu-id="d5132-598">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="d5132-599">Caso a última chamada para <xref:System.Collections.IEnumerator.MoveNext%2A> tenha retornado `false`, <xref:System.Collections.IEnumerator.Current%2A> está indefinido.</span><span class="sxs-lookup"><span data-stu-id="d5132-599">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="d5132-600">Para definir <xref:System.Collections.IEnumerator.Current%2A> como o primeiro elemento da coleção novamente, é possível chamar <xref:System.Collections.IEnumerator.Reset%2A> seguido de <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="d5132-600">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="d5132-601">Um enumerador permanece válido desde que a coleção continue inalterada.</span><span class="sxs-lookup"><span data-stu-id="d5132-601">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="d5132-602">Se forem feitas alterações na coleção, como adicionar, modificar ou excluir elementos, o enumerador será invalidado de maneira irrevogável e seu comportamento permanecerá indefinido.</span><span class="sxs-lookup"><span data-stu-id="d5132-602">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="d5132-603">O enumerador não tem acesso exclusivo à coleção; Portanto, enumerando através de uma coleção intrinsecamente não é um procedimento de segurança do thread.</span><span class="sxs-lookup"><span data-stu-id="d5132-603">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</span></span>  <span data-ttu-id="d5132-604">Para garantir acesso thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração.</span><span class="sxs-lookup"><span data-stu-id="d5132-604">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="d5132-605">Para permitir que a coleção a ser acessado por vários threads para leitura e gravação, você deve implementar sua sincronização.</span><span class="sxs-lookup"><span data-stu-id="d5132-605">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="d5132-606">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="d5132-606">This method is an O(1) operation.</span></span>  
  
 <span data-ttu-id="d5132-607">Como a serialização e desserialização de um enumerador para um <xref:System.Collections.Hashtable> pode fazer com que os elementos para se tornar reordenadas, não é possível continuar a enumeração sem chamar o <xref:System.Collections.IEnumerator.Reset%2A> método.</span><span class="sxs-lookup"><span data-stu-id="d5132-607">Because serializing and deserializing an enumerator for a <xref:System.Collections.Hashtable> can cause the elements to become reordered, it is not possible to continue enumeration without calling the <xref:System.Collections.IEnumerator.Reset%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5132-608">O exemplo a seguir compara o uso de <xref:System.Collections.Hashtable.GetEnumerator%2A> e `foreach` para enumerar o conteúdo de um <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="d5132-608">The following example compares the use of <xref:System.Collections.Hashtable.GetEnumerator%2A> and `foreach` to enumerate the contents of a <xref:System.Collections.Hashtable>.</span></span>  
  
 [!code-cpp[Classic Hashtable Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic Hashtable Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable Example/CS/source2.cs#2)]
 [!code-vb[Classic Hashtable Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable Example/VB/source2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetHash">
      <MemberSignature Language="C#" Value="protected virtual int GetHash (object key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 GetHash(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.GetHash(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetHash (key As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int GetHash(System::Object ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="d5132-609">O <see cref="T:System.Object" /> para o qual um código hash deve ser retornado.</span><span class="sxs-lookup"><span data-stu-id="d5132-609">The <see cref="T:System.Object" /> for which a hash code is to be returned.</span></span></param>
        <summary><span data-ttu-id="d5132-610">Retorna o código hash da chave especificada.</span><span class="sxs-lookup"><span data-stu-id="d5132-610">Returns the hash code for the specified key.</span></span></summary>
        <returns><span data-ttu-id="d5132-611">O código hash para <paramref name="key" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-611">The hash code for <paramref name="key" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5132-612">Se a tabela de hash foi criada com um determinado <xref:System.Collections.IHashCodeProvider> implementação, esse método usa esse provedor de código hash; caso contrário, ele usa o <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> implementação de `key`.</span><span class="sxs-lookup"><span data-stu-id="d5132-612">If the hash table was created with a specific <xref:System.Collections.IHashCodeProvider> implementation, this method uses that hash code provider; otherwise, it uses the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> implementation of `key`.</span></span>  
  
 <span data-ttu-id="d5132-613">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="d5132-613">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="d5132-614"><paramref name="key" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-614"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Collections.IHashCodeProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="d5132-615">Um objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contém as informações necessárias para serializar o <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-615">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object containing the information required to serialize the <see cref="T:System.Collections.Hashtable" />.</span></span></param>
        <param name="context"><span data-ttu-id="d5132-616">Um objeto <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contém a origem e o destino do fluxo serializado associado a <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-616">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object containing the source and destination of the serialized stream associated with the <see cref="T:System.Collections.Hashtable" />.</span></span></param>
        <summary><span data-ttu-id="d5132-617">Implementa a interface <see cref="T:System.Runtime.Serialization.ISerializable" /> e retorna os dados necessários para serializar o <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-617">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and returns the data needed to serialize the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5132-618">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.Hashtable.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="d5132-618">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Hashtable.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5132-619"><paramref name="info" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-619"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d5132-620">A coleção foi modificada.</span><span class="sxs-lookup"><span data-stu-id="d5132-620">The collection was modified.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="d5132-621">requer confiança total para o chamador imediato.</span><span class="sxs-lookup"><span data-stu-id="d5132-621">requires full trust for the immediate caller.</span></span> <span data-ttu-id="d5132-622">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</span><span class="sxs-lookup"><span data-stu-id="d5132-622">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="M:System.Collections.Hashtable.OnDeserialization(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="hcp">
      <MemberSignature Language="C#" Value="protected System.Collections.IHashCodeProvider hcp { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IHashCodeProvider hcp" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.hcp" />
      <MemberSignature Language="VB.NET" Value="Protected Property hcp As IHashCodeProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::IHashCodeProvider ^ hcp { System::Collections::IHashCodeProvider ^ get(); void set(System::Collections::IHashCodeProvider ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Please use EqualityComparer property.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IHashCodeProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5132-623">Obtém ou define o objeto que pode dispensar códigos hash.</span><span class="sxs-lookup"><span data-stu-id="d5132-623">Gets or sets the object that can dispense hash codes.</span></span></summary>
        <value><span data-ttu-id="d5132-624">O objeto que pode dispensador códigos hash.</span><span class="sxs-lookup"><span data-stu-id="d5132-624">The object that can dispense hash codes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5132-625">A recuperação do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="d5132-625">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d5132-626">A propriedade é definida como um valor, mas a tabela de hash foi criada usando um <see cref="T:System.Collections.IEqualityComparer" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-626">The property is set to a value, but the hash table was created using an <see cref="T:System.Collections.IEqualityComparer" />.</span></span></exception>
        <altmember cref="T:System.Collections.IHashCodeProvider" />
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="public virtual bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5132-627">Obtém um valor que indica se o <see cref="T:System.Collections.Hashtable" /> tem um tamanho fixo.</span><span class="sxs-lookup"><span data-stu-id="d5132-627">Gets a value indicating whether the <see cref="T:System.Collections.Hashtable" /> has a fixed size.</span></span></summary>
        <value>
          <span data-ttu-id="d5132-628"><see langword="true" /> se o <see cref="T:System.Collections.Hashtable" /> tiver um valor fixo; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-628"><see langword="true" /> if the <see cref="T:System.Collections.Hashtable" /> has a fixed size; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="d5132-629">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-629">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5132-630">Uma coleção com um tamanho fixo não permite a adição ou a remoção de elementos após a coleção ser criada, mas permite a modificação de elementos existentes.</span><span class="sxs-lookup"><span data-stu-id="d5132-630">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</span></span>  
  
 <span data-ttu-id="d5132-631">Uma coleção com um tamanho fixo é simplesmente uma coleção com um wrapper que impede a adição e a remoção de elementos; por isso, caso as alterações sejam feitas na coleção subjacente, inclusive a adição ou a remoção de elementos, a coleção de tamanho fixo reflete essas alterações.</span><span class="sxs-lookup"><span data-stu-id="d5132-631">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="d5132-632">A recuperação do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="d5132-632">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5132-633">Obtém um valor que indica se o <see cref="T:System.Collections.Hashtable" /> é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="d5132-633">Gets a value indicating whether the <see cref="T:System.Collections.Hashtable" /> is read-only.</span></span></summary>
        <value>
          <span data-ttu-id="d5132-634"><see langword="true" /> se o <see cref="T:System.Collections.Hashtable" /> for somente leitura; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-634"><see langword="true" /> if the <see cref="T:System.Collections.Hashtable" /> is read-only; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="d5132-635">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-635">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5132-636">Uma coleção que seja somente leitura não permite a adição, a remoção ou a modificação de elementos após a coleção ser criada.</span><span class="sxs-lookup"><span data-stu-id="d5132-636">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="d5132-637">Uma coleção somente leitura é apenas uma coleção com um wrapper que impede a modificação da coleção; por isso, caso as alterações sejam feitas na coleção subjacente, a coleção somente leitura reflete as alterações.</span><span class="sxs-lookup"><span data-stu-id="d5132-637">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="d5132-638">A recuperação do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="d5132-638">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5132-639">Obtém um valor que indica se o acesso à <see cref="T:System.Collections.Hashtable" /> é sincronizado (thread-safe).</span><span class="sxs-lookup"><span data-stu-id="d5132-639">Gets a value indicating whether access to the <see cref="T:System.Collections.Hashtable" /> is synchronized (thread safe).</span></span></summary>
        <value>
          <span data-ttu-id="d5132-640"><see langword="true" /> caso o acesso ao <see cref="T:System.Collections.Hashtable" /> seja sincronizado (thread-safe); do contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-640"><see langword="true" /> if access to the <see cref="T:System.Collections.Hashtable" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span></span> <span data-ttu-id="d5132-641">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-641">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5132-642">Um <xref:System.Collections.Hashtable> pode dar suporte a um gravador e a vários leitores simultaneamente.</span><span class="sxs-lookup"><span data-stu-id="d5132-642">A <xref:System.Collections.Hashtable> can support one writer and multiple readers concurrently.</span></span> <span data-ttu-id="d5132-643">Para dar suporte a vários autores, todas as operações devem ser feitas por meio de wrapper retornado pelo <xref:System.Collections.Hashtable.Synchronized%2A> método.</span><span class="sxs-lookup"><span data-stu-id="d5132-643">To support multiple writers, all operations must be done through the wrapper returned by the <xref:System.Collections.Hashtable.Synchronized%2A> method.</span></span>  
  
 <span data-ttu-id="d5132-644">Enumerar através de uma coleção intrinsecamente não é um procedimento de segurança do thread.</span><span class="sxs-lookup"><span data-stu-id="d5132-644">Enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="d5132-645">Mesmo quando uma coleção está sincronizada, outros threads ainda podem modificar a coleção, o que faz o enumerador lançar uma exceção.</span><span class="sxs-lookup"><span data-stu-id="d5132-645">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="d5132-646">Para garantir thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração ou verificar as exceções resultantes das alterações feitas por outros threads.</span><span class="sxs-lookup"><span data-stu-id="d5132-646">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="d5132-647">O exemplo de código a seguir mostra como bloquear a coleção usando o <xref:System.Collections.Hashtable.SyncRoot%2A> durante toda a enumeração:</span><span class="sxs-lookup"><span data-stu-id="d5132-647">The following code example shows how to lock the collection using the <xref:System.Collections.Hashtable.SyncRoot%2A> during the entire enumeration:</span></span>  
  
 [!code-cpp[Classic Hashtable.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CPP/remarks.cpp#2)]
 [!code-csharp[Classic Hashtable.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CS/remarks.cs#2)]
 [!code-vb[Classic Hashtable.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/VB/remarks.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="d5132-648">O exemplo a seguir mostra como sincronizar um <xref:System.Collections.Hashtable>, determinar se um <xref:System.Collections.Hashtable> está sincronizado e usar um sincronizado <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="d5132-648">The following example shows how to synchronize a <xref:System.Collections.Hashtable>, determine if a <xref:System.Collections.Hashtable> is synchronized, and use a synchronized <xref:System.Collections.Hashtable>.</span></span>  
  
 [!code-cpp[Classic Hashtable.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hashtable.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic Hashtable.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)" />
        <altmember cref="P:System.Collections.Hashtable.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual object this[object key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(object)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(key As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::Object ^] { System::Object ^ get(System::Object ^ key); void set(System::Object ^ key, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Item(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="d5132-649">A chave cujo valor será obtido ou definido.</span><span class="sxs-lookup"><span data-stu-id="d5132-649">The key whose value to get or set.</span></span></param>
        <summary><span data-ttu-id="d5132-650">Obtém ou define o valor associado à chave especificada.</span><span class="sxs-lookup"><span data-stu-id="d5132-650">Gets or sets the value associated with the specified key.</span></span></summary>
        <value><span data-ttu-id="d5132-651">O valor associado à chave especificada.</span><span class="sxs-lookup"><span data-stu-id="d5132-651">The value associated with the specified key.</span></span> <span data-ttu-id="d5132-652">Se a chave especificada não for encontrada, tentar obtê-la retornará <see langword="null" /> e tentar de defini-la criará um novo elemento usando a chave especificada.</span><span class="sxs-lookup"><span data-stu-id="d5132-652">If the specified key is not found, attempting to get it returns <see langword="null" />, and attempting to set it creates a new element using the specified key.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5132-653">Esta propriedade fornece a capacidade de acessar um elemento específico na coleção usando a seguinte sintaxe: `myCollection[key]`.</span><span class="sxs-lookup"><span data-stu-id="d5132-653">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[key]`.</span></span>  
  
 <span data-ttu-id="d5132-654">Você também pode usar o <xref:System.Collections.Hashtable.Item%2A> propriedade para adicionar novos elementos, definindo o valor de uma chave que não existe no <xref:System.Collections.Hashtable>; por exemplo, `myCollection["myNonexistentKey"] = myValue`.</span><span class="sxs-lookup"><span data-stu-id="d5132-654">You can also use the <xref:System.Collections.Hashtable.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.Hashtable>; for example, `myCollection["myNonexistentKey"] = myValue`.</span></span> <span data-ttu-id="d5132-655">No entanto, se a chave especificada já existe no <xref:System.Collections.Hashtable>, a definição de <xref:System.Collections.Hashtable.Item%2A> propriedade substitui o valor antigo.</span><span class="sxs-lookup"><span data-stu-id="d5132-655">However, if the specified key already exists in the <xref:System.Collections.Hashtable>, setting the <xref:System.Collections.Hashtable.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="d5132-656">Em contraste, o <xref:System.Collections.Hashtable.Add%2A> método não modifica os elementos existentes.</span><span class="sxs-lookup"><span data-stu-id="d5132-656">In contrast, the <xref:System.Collections.Hashtable.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="d5132-657">Uma chave não pode ser `null`, mas pode ser um valor.</span><span class="sxs-lookup"><span data-stu-id="d5132-657">A key cannot be `null`, but a value can be.</span></span> <span data-ttu-id="d5132-658">Para distinguir entre `null` que é retornado porque a chave especificada não foi encontrada e `null` que é retornado porque o valor da chave especificada é `null`, use o <xref:System.Collections.Hashtable.Contains%2A> método ou o <xref:System.Collections.Hashtable.ContainsKey%2A> método para determinar se a chave existe na lista.</span><span class="sxs-lookup"><span data-stu-id="d5132-658">To distinguish between `null` that is returned because the specified key is not found and `null` that is returned because the value of the specified key is `null`, use the <xref:System.Collections.Hashtable.Contains%2A> method or the <xref:System.Collections.Hashtable.ContainsKey%2A> method to determine if the key exists in the list.</span></span>  
  
 <span data-ttu-id="d5132-659">Recuperar o valor dessa propriedade é uma operação de (1); definindo a propriedade também é uma operação de (1).</span><span class="sxs-lookup"><span data-stu-id="d5132-659">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
 <span data-ttu-id="d5132-660">A linguagem c# usa a palavra-chave para definir os indexadores em vez de implementar o <xref:System.Collections.IList.Item%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="d5132-660">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.IList.Item%2A> property.</span></span> <span data-ttu-id="d5132-661">Visual Basic implementa <xref:System.Collections.Hashtable.Item%2A> como uma propriedade padrão, que fornece a mesma funcionalidade de indexação.</span><span class="sxs-lookup"><span data-stu-id="d5132-661">Visual Basic implements <xref:System.Collections.Hashtable.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5132-662"><paramref name="key" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-662"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d5132-663">A propriedade é definida e o <see cref="T:System.Collections.Hashtable" /> é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="d5132-663">The property is set and the <see cref="T:System.Collections.Hashtable" /> is read-only.</span></span>  
  
 <span data-ttu-id="d5132-664">- ou -</span><span class="sxs-lookup"><span data-stu-id="d5132-664">-or-</span></span>  
  
 <span data-ttu-id="d5132-665">A propriedade é definida, <paramref name="key" /> não existe na coleção e o <see cref="T:System.Collections.Hashtable" /> tem um tamanho fixo.</span><span class="sxs-lookup"><span data-stu-id="d5132-665">The property is set, <paramref name="key" /> does not exist in the collection, and the <see cref="T:System.Collections.Hashtable" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.Hashtable.Add(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="KeyEquals">
      <MemberSignature Language="C#" Value="protected virtual bool KeyEquals (object item, object key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool KeyEquals(object item, object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.KeyEquals(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function KeyEquals (item As Object, key As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool KeyEquals(System::Object ^ item, System::Object ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="d5132-666">O <see cref="T:System.Object" /> a ser comparado com a <c>chave</c>.</span><span class="sxs-lookup"><span data-stu-id="d5132-666">The <see cref="T:System.Object" /> to compare with <c>key</c>.</span></span></param>
        <param name="key"><span data-ttu-id="d5132-667">A chave no <see cref="T:System.Collections.Hashtable" /> a ser comparada com o <c>item</c>.</span><span class="sxs-lookup"><span data-stu-id="d5132-667">The key in the <see cref="T:System.Collections.Hashtable" /> to compare with <c>item</c>.</span></span></param>
        <summary><span data-ttu-id="d5132-668">Compara um <see cref="T:System.Object" /> específico com uma chave específica no <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-668">Compares a specific <see cref="T:System.Object" /> with a specific key in the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <returns>
          <span data-ttu-id="d5132-669"><see langword="true" /> se <paramref name="item" /> e <paramref name="key" /> forem iguais; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-669"><see langword="true" /> if <paramref name="item" /> and <paramref name="key" /> are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5132-670">Se a tabela de hash foi criada com um determinado <xref:System.Collections.IComparer> implementação, esse método usa desse comparador; o que é, <xref:System.Collections.IComparer.Compare%2A> (`item`, `key`).</span><span class="sxs-lookup"><span data-stu-id="d5132-670">If the hash table was created with a specific <xref:System.Collections.IComparer> implementation, this method uses that comparer; that is, <xref:System.Collections.IComparer.Compare%2A> (`item`, `key`).</span></span> <span data-ttu-id="d5132-671">Caso contrário, ele usa `item.Equals(key)`.</span><span class="sxs-lookup"><span data-stu-id="d5132-671">Otherwise, it uses `item.Equals(key)`.</span></span>  
  
 <span data-ttu-id="d5132-672">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="d5132-672">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5132-673"><paramref name="item" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-673"><paramref name="item" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="d5132-674">- ou -</span><span class="sxs-lookup"><span data-stu-id="d5132-674">-or-</span></span>  
  
 <span data-ttu-id="d5132-675"><paramref name="key" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-675"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Object" />
        <altmember cref="M:System.Collections.IComparer.Compare(System.Object,System.Object)" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.Keys" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Keys As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ Keys { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5132-676">Obtém uma <see cref="T:System.Collections.ICollection" /> que contém as chaves na <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-676">Gets an <see cref="T:System.Collections.ICollection" /> containing the keys in the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <value><span data-ttu-id="d5132-677">Uma <see cref="T:System.Collections.ICollection" /> que contém as chaves na <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-677">An <see cref="T:System.Collections.ICollection" /> containing the keys in the <see cref="T:System.Collections.Hashtable" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5132-678">A ordem das chaves no <xref:System.Collections.ICollection> não for especificado, mas é a mesma ordem que os valores associados a <xref:System.Collections.ICollection> retornado pelo <xref:System.Collections.Hashtable.Values%2A> método.</span><span class="sxs-lookup"><span data-stu-id="d5132-678">The order of the keys in the <xref:System.Collections.ICollection> is unspecified, but it is the same order as the associated values in the <xref:System.Collections.ICollection> returned by the <xref:System.Collections.Hashtable.Values%2A> method.</span></span>  
  
 <span data-ttu-id="d5132-679">Retornado <xref:System.Collections.ICollection> não é uma cópia estática; em vez disso, o <xref:System.Collections.ICollection> refere-se novamente para as chaves no original <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="d5132-679">The returned <xref:System.Collections.ICollection> is not a static copy; instead, the <xref:System.Collections.ICollection> refers back to the keys in the original <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="d5132-680">Portanto, as alterações para o <xref:System.Collections.Hashtable> continuar sejam refletidas no <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="d5132-680">Therefore, changes to the <xref:System.Collections.Hashtable> continue to be reflected in the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="d5132-681">A recuperação do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="d5132-681">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.Hashtable.Values" />
      </Docs>
    </Member>
    <Member MemberName="OnDeserialization">
      <MemberSignature Language="C#" Value="public virtual void OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnDeserialization (sender As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnDeserialization(System::Object ^ sender);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="d5132-682">A fonte do evento de desserialização.</span><span class="sxs-lookup"><span data-stu-id="d5132-682">The source of the deserialization event.</span></span></param>
        <summary><span data-ttu-id="d5132-683">Implementa a interface <see cref="T:System.Runtime.Serialization.ISerializable" /> e gera o evento de desserialização quando a desserialização for concluída.</span><span class="sxs-lookup"><span data-stu-id="d5132-683">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and raises the deserialization event when the deserialization is complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5132-684">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.Hashtable.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="d5132-684">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Hashtable.Count%2A>.</span></span>  
  
 <span data-ttu-id="d5132-685">Como a serialização e desserialização de um enumerador para um <xref:System.Collections.Hashtable> pode fazer com que os elementos para se tornar reordenadas, não é possível continuar a enumeração sem chamar o <xref:System.Collections.IEnumerator.Reset%2A> método.</span><span class="sxs-lookup"><span data-stu-id="d5132-685">Because serializing and deserializing an enumerator for a <xref:System.Collections.Hashtable> can cause the elements to become reordered, it is not possible to continue enumeration without calling the <xref:System.Collections.IEnumerator.Reset%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="d5132-686">O objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> associado ao <see cref="T:System.Collections.Hashtable" /> atual é inválido.</span><span class="sxs-lookup"><span data-stu-id="d5132-686">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object associated with the current <see cref="T:System.Collections.Hashtable" /> is invalid.</span></span></exception>
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
        <altmember cref="M:System.Collections.Hashtable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (key As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Object ^ key);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="d5132-687">A chave do elemento a ser removido.</span><span class="sxs-lookup"><span data-stu-id="d5132-687">The key of the element to remove.</span></span></param>
        <summary><span data-ttu-id="d5132-688">Remove o elemento com a chave especificada do <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-688">Removes the element with the specified key from the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5132-689">Se o <xref:System.Collections.Hashtable> não contém um elemento com a chave especificada, o <xref:System.Collections.Hashtable> permanece inalterado.</span><span class="sxs-lookup"><span data-stu-id="d5132-689">If the <xref:System.Collections.Hashtable> does not contain an element with the specified key, the <xref:System.Collections.Hashtable> remains unchanged.</span></span> <span data-ttu-id="d5132-690">Nenhuma exceção é lançada.</span><span class="sxs-lookup"><span data-stu-id="d5132-690">No exception is thrown.</span></span>  
  
 <span data-ttu-id="d5132-691">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="d5132-691">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5132-692">O exemplo a seguir mostra como remover elementos do <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="d5132-692">The following example shows how to remove elements from the <xref:System.Collections.Hashtable>.</span></span>  
  
 [!code-cpp[Classic Hashtable.Remove Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.Remove Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hashtable.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic Hashtable.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5132-693"><paramref name="key" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-693"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d5132-694">O <see cref="T:System.Collections.Hashtable" /> é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="d5132-694">The <see cref="T:System.Collections.Hashtable" /> is read-only.</span></span>  
  
 <span data-ttu-id="d5132-695">- ou -</span><span class="sxs-lookup"><span data-stu-id="d5132-695">-or-</span></span>  
  
 <span data-ttu-id="d5132-696">O <see cref="T:System.Collections.Hashtable" /> tem um tamanho fixo.</span><span class="sxs-lookup"><span data-stu-id="d5132-696">The <see cref="T:System.Collections.Hashtable" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.Hashtable.Add(System.Object,System.Object)" />
        <altmember cref="M:System.Collections.IDictionary.Remove(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.Collections.Hashtable Synchronized (System.Collections.Hashtable table);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Hashtable Synchronized(class System.Collections.Hashtable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Synchronized (table As Hashtable) As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Hashtable ^ Synchronized(System::Collections::Hashtable ^ table);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Collections.Hashtable" />
      </Parameters>
      <Docs>
        <param name="table"><span data-ttu-id="d5132-697">O <see cref="T:System.Collections.Hashtable" /> a ser sincronizado.</span><span class="sxs-lookup"><span data-stu-id="d5132-697">The <see cref="T:System.Collections.Hashtable" /> to synchronize.</span></span></param>
        <summary><span data-ttu-id="d5132-698">Retorna um wrapper sincronizado (thread-safe) para o <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-698">Returns a synchronized (thread-safe) wrapper for the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <returns><span data-ttu-id="d5132-699">Um wrapper sincronizado (thread-safe) para o <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-699">A synchronized (thread-safe) wrapper for the <see cref="T:System.Collections.Hashtable" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5132-700">O <xref:System.Collections.Hashtable.Synchronized%2A> método é thread-safe para vários leitores e gravadores.</span><span class="sxs-lookup"><span data-stu-id="d5132-700">The <xref:System.Collections.Hashtable.Synchronized%2A> method is thread safe for multiple readers and writers.</span></span> <span data-ttu-id="d5132-701">Além disso, o wrapper sincronizado garante que exista apenas um gravador de gravar em um momento.</span><span class="sxs-lookup"><span data-stu-id="d5132-701">Furthermore, the synchronized wrapper ensures that there is only one writer writing at a time.</span></span>  
  
 <span data-ttu-id="d5132-702">A enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="d5132-702">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="d5132-703">Mesmo quando uma coleção está sincronizada, outros threads ainda podem modificar a coleção, o que faz o enumerador lançar uma exceção.</span><span class="sxs-lookup"><span data-stu-id="d5132-703">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="d5132-704">Para garantir thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração ou verificar as exceções resultantes das alterações feitas por outros threads.</span><span class="sxs-lookup"><span data-stu-id="d5132-704">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="d5132-705">O exemplo de código a seguir mostra como bloquear a coleção usando o <xref:System.Collections.Hashtable.SyncRoot%2A> durante toda a enumeração:</span><span class="sxs-lookup"><span data-stu-id="d5132-705">The following code example shows how to lock the collection using the <xref:System.Collections.Hashtable.SyncRoot%2A> during the entire enumeration:</span></span>  
  
 [!code-cpp[Classic Hashtable.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CPP/remarks.cpp#2)]
 [!code-csharp[Classic Hashtable.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CS/remarks.cs#2)]
 [!code-vb[Classic Hashtable.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/VB/remarks.vb#2)]  
  
 <span data-ttu-id="d5132-706">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="d5132-706">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5132-707">O exemplo a seguir mostra como sincronizar um <xref:System.Collections.Hashtable>, determinar se um <xref:System.Collections.Hashtable> está sincronizado e usar um sincronizado <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="d5132-707">The following example shows how to synchronize a <xref:System.Collections.Hashtable>, determine if a <xref:System.Collections.Hashtable> is synchronized, and use a synchronized <xref:System.Collections.Hashtable>.</span></span>  
  
 [!code-cpp[Classic Hashtable.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hashtable.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic Hashtable.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5132-708"><paramref name="table" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-708"><paramref name="table" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Collections.Hashtable.IsSynchronized" />
        <altmember cref="P:System.Collections.Hashtable.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5132-709">Obtém um objeto que pode ser usado para sincronizar o acesso ao <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-709">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <value><span data-ttu-id="d5132-710">Um objeto que pode ser usado para sincronizar o acesso ao <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-710">An object that can be used to synchronize access to the <see cref="T:System.Collections.Hashtable" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5132-711">Para criar uma versão sincronizada do <xref:System.Collections.Hashtable>, use o <xref:System.Collections.Hashtable.Synchronized%2A> método.</span><span class="sxs-lookup"><span data-stu-id="d5132-711">To create a synchronized version of the <xref:System.Collections.Hashtable>, use the <xref:System.Collections.Hashtable.Synchronized%2A> method.</span></span> <span data-ttu-id="d5132-712">No entanto, as classes derivadas podem fornecer sua própria versão sincronizada de <xref:System.Collections.Hashtable> usando o <xref:System.Collections.Hashtable.SyncRoot%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="d5132-712">However, derived classes can provide their own synchronized version of the <xref:System.Collections.Hashtable> using the <xref:System.Collections.Hashtable.SyncRoot%2A> property.</span></span> <span data-ttu-id="d5132-713">O código de sincronização necessário realizar operações no <xref:System.Collections.Hashtable.SyncRoot%2A> do <xref:System.Collections.Hashtable>, não diretamente no <xref:System.Collections.Hashtable> .</span><span class="sxs-lookup"><span data-stu-id="d5132-713">The synchronizing code must perform operations on the <xref:System.Collections.Hashtable.SyncRoot%2A> of the <xref:System.Collections.Hashtable>, not directly on the <xref:System.Collections.Hashtable> .</span></span> <span data-ttu-id="d5132-714">Isso garante a operação apropriada das coleções que são derivadas de outros objetos.</span><span class="sxs-lookup"><span data-stu-id="d5132-714">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="d5132-715">Especificamente, ele mantém uma sincronização adequada com outros threads que podem ser simultaneamente modificando o <xref:System.Collections.Hashtable> objeto.</span><span class="sxs-lookup"><span data-stu-id="d5132-715">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.Hashtable> object.</span></span>  
  
 <span data-ttu-id="d5132-716">Enumerar através de uma coleção intrinsecamente não é um procedimento de segurança do thread.</span><span class="sxs-lookup"><span data-stu-id="d5132-716">Enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="d5132-717">Mesmo quando uma coleção está sincronizada, outros threads ainda podem modificar a coleção, o que faz o enumerador lançar uma exceção.</span><span class="sxs-lookup"><span data-stu-id="d5132-717">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="d5132-718">Para garantir thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração ou verificar as exceções resultantes das alterações feitas por outros threads.</span><span class="sxs-lookup"><span data-stu-id="d5132-718">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="d5132-719">O exemplo de código a seguir mostra como bloquear a coleção usando o <xref:System.Collections.Hashtable.SyncRoot%2A> durante toda a enumeração:</span><span class="sxs-lookup"><span data-stu-id="d5132-719">The following code example shows how to lock the collection using the <xref:System.Collections.Hashtable.SyncRoot%2A> during the entire enumeration:</span></span>  
  
 [!code-cpp[Classic Hashtable.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CPP/remarks.cpp#2)]
 [!code-csharp[Classic Hashtable.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CS/remarks.cs#2)]
 [!code-vb[Classic Hashtable.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/VB/remarks.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Hashtable.IsSynchronized" />
        <altmember cref="M:System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d5132-720">Retorna um enumerador que itera em uma coleção.</span><span class="sxs-lookup"><span data-stu-id="d5132-720">Returns an enumerator that iterates through a collection.</span></span></summary>
        <returns><span data-ttu-id="d5132-721">Um <see cref="T:System.Collections.IEnumerator" /> que pode ser usado para iterar pela coleção.</span><span class="sxs-lookup"><span data-stu-id="d5132-721">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5132-722">[Visual Basic, C#]</span><span class="sxs-lookup"><span data-stu-id="d5132-722">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="d5132-723">O `foreach` instrução de linguagem c# (`for each` no Visual Basic) oculta a complexidade dos enumeradores.</span><span class="sxs-lookup"><span data-stu-id="d5132-723">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="d5132-724">Portanto, o uso de `foreach` é recomendado, em vez de manipular diretamente o enumerador.</span><span class="sxs-lookup"><span data-stu-id="d5132-724">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="d5132-725">Os enumeradores podem ser usados para ler os dados na coleção, mas não podem ser usados para modificar a coleção subjacente.</span><span class="sxs-lookup"><span data-stu-id="d5132-725">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="d5132-726">Inicialmente, o enumerador é posicionado antes do primeiro elemento da coleção.</span><span class="sxs-lookup"><span data-stu-id="d5132-726">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="d5132-727"><xref:System.Collections.IEnumerator.Reset%2A> também traz o enumerador de volta para essa posição.</span><span class="sxs-lookup"><span data-stu-id="d5132-727"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="d5132-728">AT isso posicionar, chamando <xref:System.Collections.IEnumerator.Current%2A> lança uma exceção.</span><span class="sxs-lookup"><span data-stu-id="d5132-728">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="d5132-729">Por isso, você deve chamar <xref:System.Collections.IEnumerator.MoveNext%2A> para avançar o enumerador até o primeiro elemento da coleção antes de ler o valor de <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="d5132-729">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="d5132-730"><xref:System.Collections.IEnumerator.Current%2A> retorna o mesmo objeto até <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> ser chamado.</span><span class="sxs-lookup"><span data-stu-id="d5132-730"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="d5132-731"><xref:System.Collections.IEnumerator.MoveNext%2A> define <xref:System.Collections.IEnumerator.Current%2A> como o próximo elemento.</span><span class="sxs-lookup"><span data-stu-id="d5132-731"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="d5132-732">Caso <xref:System.Collections.IEnumerator.MoveNext%2A> passe o final da coleção, o enumerador é posicionado após o último elemento na coleção e <xref:System.Collections.IEnumerator.MoveNext%2A> retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="d5132-732">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="d5132-733">Quando o enumerador está nessa posição, as chamadas subsequentes para <xref:System.Collections.IEnumerator.MoveNext%2A> também retornam `false`.</span><span class="sxs-lookup"><span data-stu-id="d5132-733">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="d5132-734">Se a última chamada <xref:System.Collections.IEnumerator.MoveNext%2A> retornou `false`, chamar <xref:System.Collections.IEnumerator.Current%2A> lança uma exceção.</span><span class="sxs-lookup"><span data-stu-id="d5132-734">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="d5132-735">Para definir <xref:System.Collections.IEnumerator.Current%2A> como o primeiro elemento da coleção novamente, é possível chamar <xref:System.Collections.IEnumerator.Reset%2A> seguido de <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="d5132-735">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="d5132-736">Um enumerador permanece válido desde que a coleção continue inalterada.</span><span class="sxs-lookup"><span data-stu-id="d5132-736">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="d5132-737">Se forem feitas alterações na coleção, como adicionar, modificar, ou excluir elementos, o enumerador pode ser invalidado e a próxima chamada para <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> lança um <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="d5132-737">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator can be invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="d5132-738">Se a coleção é modificada entre <xref:System.Collections.IEnumerator.MoveNext%2A> e <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> retorna o elemento que está definido como, mesmo se o enumerador já é invalidado.</span><span class="sxs-lookup"><span data-stu-id="d5132-738">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="d5132-739">O enumerador não tem acesso exclusivo à coleção; Portanto, enumerando através de uma coleção intrinsecamente não é um procedimento de segurança do thread.</span><span class="sxs-lookup"><span data-stu-id="d5132-739">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="d5132-740">Mesmo quando uma coleção está sincronizada, outros threads ainda podem modificar a coleção, o que faz o enumerador lançar uma exceção.</span><span class="sxs-lookup"><span data-stu-id="d5132-740">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="d5132-741">Para garantir thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração ou verificar as exceções resultantes das alterações feitas por outros threads.</span><span class="sxs-lookup"><span data-stu-id="d5132-741">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="d5132-742">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="d5132-742">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.Values" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Values As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ Values { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5132-743">Obtém um <see cref="T:System.Collections.ICollection" /> que contém os valores no <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-743">Gets an <see cref="T:System.Collections.ICollection" /> containing the values in the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <value><span data-ttu-id="d5132-744">Um <see cref="T:System.Collections.ICollection" /> que contém os valores de <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="d5132-744">An <see cref="T:System.Collections.ICollection" /> containing the values in the <see cref="T:System.Collections.Hashtable" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5132-745">A ordem dos valores no <xref:System.Collections.ICollection> não for especificado, mas é a mesma ordem que as chaves associadas no <xref:System.Collections.ICollection> retornado pelo <xref:System.Collections.Hashtable.Keys%2A> método.</span><span class="sxs-lookup"><span data-stu-id="d5132-745">The order of the values in the <xref:System.Collections.ICollection> is unspecified, but it is the same order as the associated keys in the <xref:System.Collections.ICollection> returned by the <xref:System.Collections.Hashtable.Keys%2A> method.</span></span>  
  
 <span data-ttu-id="d5132-746">Retornado <xref:System.Collections.ICollection> não é uma cópia estática; em vez disso, o <xref:System.Collections.ICollection> refere-se novamente para os valores originais <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="d5132-746">The returned <xref:System.Collections.ICollection> is not a static copy; instead, the <xref:System.Collections.ICollection> refers back to the values in the original <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="d5132-747">Portanto, as alterações para o <xref:System.Collections.Hashtable> continuar sejam refletidas no <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="d5132-747">Therefore, changes to the <xref:System.Collections.Hashtable> continue to be reflected in the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="d5132-748">A recuperação do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="d5132-748">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.Hashtable.Keys" />
      </Docs>
    </Member>
  </Members>
</Type>