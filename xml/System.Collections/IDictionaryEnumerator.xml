<Type Name="IDictionaryEnumerator" FullName="System.Collections.IDictionaryEnumerator">
  <TypeSignature Language="C#" Value="public interface IDictionaryEnumerator : System.Collections.IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDictionaryEnumerator implements class System.Collections.IEnumerator" />
  <TypeSignature Language="DocId" Value="T:System.Collections.IDictionaryEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDictionaryEnumerator&#xA;Implements IEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDictionaryEnumerator : System::Collections::IEnumerator" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c4138-101">Enumera os elementos de um dicionário não genérico.</span><span class="sxs-lookup"><span data-stu-id="c4138-101">Enumerates the elements of a nongeneric dictionary.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4138-102">[Visual Basic, C#]</span><span class="sxs-lookup"><span data-stu-id="c4138-102">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="c4138-103">O `foreach` instrução de linguagem c# (`for each` no Visual Basic) oculta a complexidade dos enumeradores.</span><span class="sxs-lookup"><span data-stu-id="c4138-103">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="c4138-104">Portanto, usando `foreach` é recomendado em vez de manipulação direta do enumerador.</span><span class="sxs-lookup"><span data-stu-id="c4138-104">Therefore, using `foreach` is recommended instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="c4138-105">Os enumeradores podem ser usados para ler os dados na coleção, mas não podem ser usados para modificar a coleção subjacente.</span><span class="sxs-lookup"><span data-stu-id="c4138-105">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="c4138-106">Inicialmente, o enumerador é posicionado antes do primeiro elemento da coleção.</span><span class="sxs-lookup"><span data-stu-id="c4138-106">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="c4138-107">O método <xref:System.Collections.IEnumerator.Reset%2A> também retorna o enumerador a essa posição.</span><span class="sxs-lookup"><span data-stu-id="c4138-107">The <xref:System.Collections.IEnumerator.Reset%2A> method also brings the enumerator back to this position.</span></span> <span data-ttu-id="c4138-108">AT isso posicionar, chamando o <xref:System.Collections.IEnumerator.Current%2A> propriedade gera uma exceção.</span><span class="sxs-lookup"><span data-stu-id="c4138-108">At this position, calling the <xref:System.Collections.IEnumerator.Current%2A> property throws an exception.</span></span> <span data-ttu-id="c4138-109">Por isso, você deve chamar o método <xref:System.Collections.IEnumerator.MoveNext%2A> para avançar o enumerador até o primeiro elemento da coleção antes de ler o valor de <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="c4138-109">Therefore, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="c4138-110"><xref:System.Collections.IEnumerator.Current%2A> retorna o mesmo objeto até <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> ser chamado.</span><span class="sxs-lookup"><span data-stu-id="c4138-110"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="c4138-111"><xref:System.Collections.IEnumerator.MoveNext%2A> define <xref:System.Collections.IEnumerator.Current%2A> como o próximo elemento.</span><span class="sxs-lookup"><span data-stu-id="c4138-111"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="c4138-112">Caso <xref:System.Collections.IEnumerator.MoveNext%2A> passe o final da coleção, o enumerador é posicionado após o último elemento na coleção e <xref:System.Collections.IEnumerator.MoveNext%2A> retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="c4138-112">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="c4138-113">Quando o enumerador está nessa posição, as chamadas subsequentes para <xref:System.Collections.IEnumerator.MoveNext%2A> também retornam `false`.</span><span class="sxs-lookup"><span data-stu-id="c4138-113">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="c4138-114">Se a última chamada <xref:System.Collections.IEnumerator.MoveNext%2A> retornou `false`, chamar <xref:System.Collections.IEnumerator.Current%2A> lança uma exceção.</span><span class="sxs-lookup"><span data-stu-id="c4138-114">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="c4138-115">Para definir <xref:System.Collections.IEnumerator.Current%2A> como o primeiro elemento da coleção novamente, é possível chamar <xref:System.Collections.IEnumerator.Reset%2A> seguido de <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="c4138-115">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="c4138-116">Um enumerador permanece válido desde que a coleção continue inalterada.</span><span class="sxs-lookup"><span data-stu-id="c4138-116">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="c4138-117">Se forem feitas alterações na coleção, como adicionar, modificar, ou excluir elementos, o enumerador é invalidado invalidado e a próxima chamada para <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> lança um <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="c4138-117">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="c4138-118">Se a coleção é modificada entre <xref:System.Collections.IEnumerator.MoveNext%2A> e <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> retorna o elemento que está definido como, mesmo se o enumerador já é invalidado.</span><span class="sxs-lookup"><span data-stu-id="c4138-118">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="c4138-119">O enumerador não tem acesso exclusivo à coleção; por isso, a enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="c4138-119">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="c4138-120">Mesmo quando uma coleção está sincronizada, outros threads ainda podem modificar a coleção, o que faz o enumerador lançar uma exceção.</span><span class="sxs-lookup"><span data-stu-id="c4138-120">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="c4138-121">Para garantir thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração ou verificar as exceções resultantes das alterações feitas por outros threads.</span><span class="sxs-lookup"><span data-stu-id="c4138-121">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4138-122">Este exemplo de código mostra como definir um enumerador de dicionário que implementa o <xref:System.Collections.IDictionaryEnumerator> interface.</span><span class="sxs-lookup"><span data-stu-id="c4138-122">This code example shows how to define a dictionary enumerator that implements the <xref:System.Collections.IDictionaryEnumerator> interface.</span></span>  
  
 [!code-cpp[Dictionary#1](~/samples/snippets/cpp/VS_Snippets_CLR/Dictionary/cpp/Dictionary.cpp#1)]
 [!code-csharp[Dictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR/Dictionary/CS/Dictionary.cs#1)]
 [!code-vb[Dictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dictionary/VB/Dictionary.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="c4138-123">O <see cref="P:System.Collections.IEnumerator.Current" /> propriedade é herdada do <see cref="T:System.Collections.IEnumerator" /> retorna um <see cref="T:System.Object" /> que é um processador <see cref="T:System.Collections.DictionaryEntry" />, de forma semelhante para o valor de retorno a <see cref="P:System.Collections.IDictionaryEnumerator.Entry" /> propriedade.</span><span class="sxs-lookup"><span data-stu-id="c4138-123">The <see cref="P:System.Collections.IEnumerator.Current" /> property that is inherited from <see cref="T:System.Collections.IEnumerator" /> returns an <see cref="T:System.Object" /> that is a boxed <see cref="T:System.Collections.DictionaryEntry" />, similar to the return value of the <see cref="P:System.Collections.IDictionaryEnumerator.Entry" /> property.</span></span></para>
    </block>
    <altmember cref="T:System.Collections.IDictionary" />
    <altmember cref="T:System.Collections.IEnumerator" />
    <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
  </Docs>
  <Members>
    <Member MemberName="Entry">
      <MemberSignature Language="C#" Value="public System.Collections.DictionaryEntry Entry { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Collections.DictionaryEntry Entry" />
      <MemberSignature Language="DocId" Value="P:System.Collections.IDictionaryEnumerator.Entry" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Entry As DictionaryEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::DictionaryEntry Entry { System::Collections::DictionaryEntry get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.DictionaryEntry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4138-124">Obtém a chave e o valor da entrada do dicionário atual.</span><span class="sxs-lookup"><span data-stu-id="c4138-124">Gets both the key and the value of the current dictionary entry.</span></span></summary>
        <value><span data-ttu-id="c4138-125">Um <see cref="T:System.Collections.DictionaryEntry" /> que contém a chave e o valor da entrada do dicionário atual.</span><span class="sxs-lookup"><span data-stu-id="c4138-125">A <see cref="T:System.Collections.DictionaryEntry" /> containing both the key and the value of the current dictionary entry.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4138-126">Após a criação de um enumerador ou depois do <xref:System.Collections.IEnumerator.Reset%2A> método é chamado, o <xref:System.Collections.IEnumerator.MoveNext%2A> método deve ser chamado para avançar o enumerador para o primeiro elemento da coleção antes de ler o valor da <xref:System.Collections.IDictionaryEnumerator.Entry%2A> propriedade; caso contrário, <xref:System.Collections.IDictionaryEnumerator.Entry%2A> é indefinido.</span><span class="sxs-lookup"><span data-stu-id="c4138-126">After an enumerator is created or after the <xref:System.Collections.IEnumerator.Reset%2A> method is called, the <xref:System.Collections.IEnumerator.MoveNext%2A> method must be called to advance the enumerator to the first element of the collection before reading the value of the <xref:System.Collections.IDictionaryEnumerator.Entry%2A> property; otherwise, <xref:System.Collections.IDictionaryEnumerator.Entry%2A> is undefined.</span></span>  
  
 <span data-ttu-id="c4138-127"><xref:System.Collections.IDictionaryEnumerator.Entry%2A> também gera uma exceção se a última chamada <xref:System.Collections.IEnumerator.MoveNext%2A> retornou `false`, que indica o final da coleção.</span><span class="sxs-lookup"><span data-stu-id="c4138-127"><xref:System.Collections.IDictionaryEnumerator.Entry%2A> also throws an exception if the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, which indicates the end of the collection.</span></span>  
  
 <span data-ttu-id="c4138-128"><xref:System.Collections.IDictionaryEnumerator.Entry%2A> não move a posição do enumerador e chamadas consecutivas para <xref:System.Collections.IDictionaryEnumerator.Entry%2A> retornar o mesmo objeto até que o <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> é chamado.</span><span class="sxs-lookup"><span data-stu-id="c4138-128"><xref:System.Collections.IDictionaryEnumerator.Entry%2A> does not move the position of the enumerator, and consecutive calls to <xref:System.Collections.IDictionaryEnumerator.Entry%2A> return the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c4138-129">O <see cref="T:System.Collections.IDictionaryEnumerator" /> é posicionado antes da primeira entrada do dicionário ou após a última entrada.</span><span class="sxs-lookup"><span data-stu-id="c4138-129">The <see cref="T:System.Collections.IDictionaryEnumerator" /> is positioned before the first entry of the dictionary or after the last entry.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="c4138-130">O <see cref="P:System.Collections.IEnumerator.Current" /> propriedade é herdada do <see cref="T:System.Collections.IEnumerator" /> retorna um <see cref="T:System.Object" /> que é um processador <see cref="T:System.Collections.DictionaryEntry" />, de forma semelhante para o valor de retorno a <see cref="P:System.Collections.IDictionaryEnumerator.Entry" /> propriedade.</span><span class="sxs-lookup"><span data-stu-id="c4138-130">The <see cref="P:System.Collections.IEnumerator.Current" /> property that is inherited from <see cref="T:System.Collections.IEnumerator" /> returns an <see cref="T:System.Object" /> that is a boxed <see cref="T:System.Collections.DictionaryEntry" />, similar to the return value of the <see cref="P:System.Collections.IDictionaryEnumerator.Entry" /> property.</span></span></para>
        </block>
        <altmember cref="M:System.Collections.IEnumerator.Reset" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
        <altmember cref="P:System.Collections.IDictionaryEnumerator.Key" />
        <altmember cref="P:System.Collections.IDictionaryEnumerator.Value" />
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public object Key { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Key" />
      <MemberSignature Language="DocId" Value="P:System.Collections.IDictionaryEnumerator.Key" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Key As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Key { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4138-131">Obtém a chave da entrada do dicionário atual.</span><span class="sxs-lookup"><span data-stu-id="c4138-131">Gets the key of the current dictionary entry.</span></span></summary>
        <value><span data-ttu-id="c4138-132">A chave do elemento atual da enumeração.</span><span class="sxs-lookup"><span data-stu-id="c4138-132">The key of the current element of the enumeration.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4138-133">Após a criação de um enumerador ou depois do <xref:System.Collections.IEnumerator.Reset%2A> método é chamado, o <xref:System.Collections.IEnumerator.MoveNext%2A> método deve ser chamado para avançar o enumerador para o primeiro elemento da coleção antes de ler o valor da <xref:System.Collections.IDictionaryEnumerator.Key%2A> propriedade; caso contrário, <xref:System.Collections.IDictionaryEnumerator.Key%2A> é indefinido.</span><span class="sxs-lookup"><span data-stu-id="c4138-133">After an enumerator is created or after the <xref:System.Collections.IEnumerator.Reset%2A> method is called, the <xref:System.Collections.IEnumerator.MoveNext%2A> method must be called to advance the enumerator to the first element of the collection before reading the value of the <xref:System.Collections.IDictionaryEnumerator.Key%2A> property; otherwise, <xref:System.Collections.IDictionaryEnumerator.Key%2A> is undefined.</span></span>  
  
 <span data-ttu-id="c4138-134"><xref:System.Collections.IDictionaryEnumerator.Key%2A> também gera uma exceção se a última chamada <xref:System.Collections.IEnumerator.MoveNext%2A> retornou `false`, que indica o final da coleção.</span><span class="sxs-lookup"><span data-stu-id="c4138-134"><xref:System.Collections.IDictionaryEnumerator.Key%2A> also throws an exception if the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, which indicates the end of the collection.</span></span>  
  
 <span data-ttu-id="c4138-135"><xref:System.Collections.IDictionaryEnumerator.Key%2A> não move a posição do enumerador e chamadas consecutivas para <xref:System.Collections.IDictionaryEnumerator.Key%2A> retornar o mesmo objeto até que o <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> é chamado.</span><span class="sxs-lookup"><span data-stu-id="c4138-135"><xref:System.Collections.IDictionaryEnumerator.Key%2A> does not move the position of the enumerator, and consecutive calls to <xref:System.Collections.IDictionaryEnumerator.Key%2A> return the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c4138-136">O <see cref="T:System.Collections.IDictionaryEnumerator" /> é posicionado antes da primeira entrada do dicionário ou após a última entrada.</span><span class="sxs-lookup"><span data-stu-id="c4138-136">The <see cref="T:System.Collections.IDictionaryEnumerator" /> is positioned before the first entry of the dictionary or after the last entry.</span></span></exception>
        <altmember cref="M:System.Collections.IEnumerator.Reset" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
        <altmember cref="P:System.Collections.IDictionaryEnumerator.Value" />
        <altmember cref="P:System.Collections.IDictionaryEnumerator.Entry" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Collections.IDictionaryEnumerator.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4138-137">Obtém o valor da entrada do dicionário atual.</span><span class="sxs-lookup"><span data-stu-id="c4138-137">Gets the value of the current dictionary entry.</span></span></summary>
        <value><span data-ttu-id="c4138-138">O valor do elemento atual da enumeração.</span><span class="sxs-lookup"><span data-stu-id="c4138-138">The value of the current element of the enumeration.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4138-139">Após a criação de um enumerador ou depois do <xref:System.Collections.IEnumerator.Reset%2A> método é chamado, o <xref:System.Collections.IEnumerator.MoveNext%2A> método deve ser chamado para avançar o enumerador para o primeiro elemento da coleção antes de ler o valor da <xref:System.Collections.IDictionaryEnumerator.Value%2A> propriedade; caso contrário, <xref:System.Collections.IDictionaryEnumerator.Value%2A> é indefinido.</span><span class="sxs-lookup"><span data-stu-id="c4138-139">After an enumerator is created or after the <xref:System.Collections.IEnumerator.Reset%2A> method is called, the <xref:System.Collections.IEnumerator.MoveNext%2A> method must be called to advance the enumerator to the first element of the collection before reading the value of the <xref:System.Collections.IDictionaryEnumerator.Value%2A> property; otherwise, <xref:System.Collections.IDictionaryEnumerator.Value%2A> is undefined.</span></span>  
  
 <span data-ttu-id="c4138-140"><xref:System.Collections.IDictionaryEnumerator.Value%2A> também gera uma exceção se a última chamada <xref:System.Collections.IEnumerator.MoveNext%2A> retornou `false`, que indica o final da coleção.</span><span class="sxs-lookup"><span data-stu-id="c4138-140"><xref:System.Collections.IDictionaryEnumerator.Value%2A> also throws an exception if the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, which indicates the end of the collection.</span></span>  
  
 <span data-ttu-id="c4138-141"><xref:System.Collections.IDictionaryEnumerator.Value%2A> não move a posição do enumerador e chamadas consecutivas para <xref:System.Collections.IDictionaryEnumerator.Value%2A> retornar o mesmo objeto até que o <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> é chamado.</span><span class="sxs-lookup"><span data-stu-id="c4138-141"><xref:System.Collections.IDictionaryEnumerator.Value%2A> does not move the position of the enumerator, and consecutive calls to <xref:System.Collections.IDictionaryEnumerator.Value%2A> return the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c4138-142">O <see cref="T:System.Collections.IDictionaryEnumerator" /> é posicionado antes da primeira entrada do dicionário ou após a última entrada.</span><span class="sxs-lookup"><span data-stu-id="c4138-142">The <see cref="T:System.Collections.IDictionaryEnumerator" /> is positioned before the first entry of the dictionary or after the last entry.</span></span></exception>
        <altmember cref="M:System.Collections.IEnumerator.Reset" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
        <altmember cref="P:System.Collections.IDictionaryEnumerator.Key" />
        <altmember cref="P:System.Collections.IDictionaryEnumerator.Entry" />
      </Docs>
    </Member>
  </Members>
</Type>