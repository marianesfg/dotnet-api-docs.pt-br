<Type Name="SortedList" FullName="System.Collections.SortedList">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d3124b7bda8739a20a75d51b771ab675fd3a27c3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SortedList : ICloneable, System.Collections.IDictionary" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SortedList extends System.Object implements class System.Collections.ICollection, class System.Collections.IDictionary, class System.Collections.IEnumerable, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.SortedList" />
  <TypeSignature Language="VB.NET" Value="Public Class SortedList&#xA;Implements ICloneable, IDictionary" />
  <TypeSignature Language="C++ CLI" Value="public ref class SortedList : ICloneable, System::Collections::IDictionary" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.NonGeneric</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IDictionary</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.SortedList/SortedListDebugView))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="68b9c-101">Representa uma coleção de pares chave/valor que são classificados pelas chaves e são acessíveis por chave e por índice.</span>
      <span class="sxs-lookup">
        <span data-stu-id="68b9c-101">Represents a collection of key/value pairs that are sorted by the keys and are accessible by key and by index.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b9c-102">Para obter a versão genérica dessa coleção, consulte <xref:System.Collections.Generic.SortedList%602?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="68b9c-102">For the generic version of this collection, see <xref:System.Collections.Generic.SortedList%602?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="68b9c-103">Um <xref:System.Collections.SortedList> elemento pode ser acessado por sua chave, como um elemento em qualquer <xref:System.Collections.IDictionary> implementação, ou por seu índice, como um elemento em qualquer <xref:System.Collections.IList> implementação.</span><span class="sxs-lookup"><span data-stu-id="68b9c-103">A <xref:System.Collections.SortedList> element can be accessed by its key, like an element in any <xref:System.Collections.IDictionary> implementation, or by its index, like an element in any <xref:System.Collections.IList> implementation.</span></span>  
  
 <span data-ttu-id="68b9c-104">Um <xref:System.Collections.SortedList> objeto internamente mantém duas matrizes para armazenar os elementos da lista; ou seja, uma matriz para as chaves e outra matriz de valores associados.</span><span class="sxs-lookup"><span data-stu-id="68b9c-104">A <xref:System.Collections.SortedList> object internally maintains two arrays to store the elements of the list; that is, one array for the keys and another array for the associated values.</span></span> <span data-ttu-id="68b9c-105">Cada elemento é um par chave/valor que pode ser acessado como uma <xref:System.Collections.DictionaryEntry> objeto.</span><span class="sxs-lookup"><span data-stu-id="68b9c-105">Each element is a key/value pair that can be accessed as a <xref:System.Collections.DictionaryEntry> object.</span></span> <span data-ttu-id="68b9c-106">Uma chave não pode ser `null`, mas pode ser um valor.</span><span class="sxs-lookup"><span data-stu-id="68b9c-106">A key cannot be `null`, but a value can be.</span></span>  
  
 <span data-ttu-id="68b9c-107">A capacidade de um <xref:System.Collections.SortedList> objeto é o número de elementos de <xref:System.Collections.SortedList> pode conter.</span><span class="sxs-lookup"><span data-stu-id="68b9c-107">The capacity of a <xref:System.Collections.SortedList> object is the number of elements the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="68b9c-108">Como os elementos são adicionados a um <xref:System.Collections.SortedList>, a capacidade é aumentada automaticamente conforme necessário por meio de realocação.</span><span class="sxs-lookup"><span data-stu-id="68b9c-108">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required through reallocation.</span></span> <span data-ttu-id="68b9c-109">A capacidade pode ser diminuída chamando <xref:System.Collections.SortedList.TrimToSize%2A> ou definindo o <xref:System.Collections.SortedList.Capacity%2A> propriedade explicitamente.</span><span class="sxs-lookup"><span data-stu-id="68b9c-109">The capacity can be decreased by calling <xref:System.Collections.SortedList.TrimToSize%2A> or by setting the <xref:System.Collections.SortedList.Capacity%2A> property explicitly.</span></span>  
  
 <span data-ttu-id="68b9c-110">Para grandes <xref:System.Collections.SortedList> objetos, você pode aumentar a capacidade máxima para 2 bilhões de elementos em um sistema de 64 bits definindo o `enabled` atributo do elemento de configuração para `true` no ambiente de tempo de execução.</span><span class="sxs-lookup"><span data-stu-id="68b9c-110">For very large <xref:System.Collections.SortedList> objects, you can increase the maximum capacity to 2 billion elements on a 64-bit system by setting the `enabled` attribute of the  configuration element to `true` in the run-time environment.</span></span>  
  
 <span data-ttu-id="68b9c-111">Os elementos de um <xref:System.Collections.SortedList> objeto são classificados pelas chaves de um acordo com um determinado <xref:System.Collections.IComparer> implementação especificado quando o <xref:System.Collections.SortedList> é criado ou acordo para o <xref:System.IComparable> as próprias chaves a implementação.</span><span class="sxs-lookup"><span data-stu-id="68b9c-111">The elements of a <xref:System.Collections.SortedList> object are sorted by the keys either according to a specific <xref:System.Collections.IComparer> implementation specified when the <xref:System.Collections.SortedList> is created or according to the <xref:System.IComparable> implementation provided by the keys themselves.</span></span> <span data-ttu-id="68b9c-112">Em ambos os casos, um <xref:System.Collections.SortedList> não permitem chaves duplicadas.</span><span class="sxs-lookup"><span data-stu-id="68b9c-112">In either case, a <xref:System.Collections.SortedList> does not allow duplicate keys.</span></span>  
  
 <span data-ttu-id="68b9c-113">A sequência de índice é baseada na sequência de classificação.</span><span class="sxs-lookup"><span data-stu-id="68b9c-113">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="68b9c-114">Quando um elemento é adicionado, ele será inserido na <xref:System.Collections.SortedList> na classificação correta ordem e a indexação é ajustada de acordo.</span><span class="sxs-lookup"><span data-stu-id="68b9c-114">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="68b9c-115">Quando um elemento for removido, a indexação também se ajusta.</span><span class="sxs-lookup"><span data-stu-id="68b9c-115">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="68b9c-116">Portanto, o índice de um par chave/valor específico pode alterar como os elementos são adicionados ou removidos do <xref:System.Collections.SortedList> objeto.</span><span class="sxs-lookup"><span data-stu-id="68b9c-116">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="68b9c-117">Operações em um <xref:System.Collections.SortedList> objeto tendem a ser mais lento do que operações em um <xref:System.Collections.Hashtable> objeto devido a classificação.</span><span class="sxs-lookup"><span data-stu-id="68b9c-117">Operations on a <xref:System.Collections.SortedList> object tend to be slower than operations on a <xref:System.Collections.Hashtable> object because of the sorting.</span></span> <span data-ttu-id="68b9c-118">No entanto, o <xref:System.Collections.SortedList> oferece mais flexibilidade ao permitir o acesso aos valores por meio das chaves associadas ou os índices.</span><span class="sxs-lookup"><span data-stu-id="68b9c-118">However, the <xref:System.Collections.SortedList> offers more flexibility by allowing access to the values either through the associated keys or through the indexes.</span></span>  
  
 <span data-ttu-id="68b9c-119">Elementos nesta coleção podem ser acessados usando um índice de inteiro.</span><span class="sxs-lookup"><span data-stu-id="68b9c-119">Elements in this collection can be accessed using an integer index.</span></span>  <span data-ttu-id="68b9c-120">Índices nesta coleção são baseadas em zero.</span><span class="sxs-lookup"><span data-stu-id="68b9c-120">Indexes in this collection are zero-based.</span></span>  
  
 <span data-ttu-id="68b9c-121">O `foreach` instrução de linguagem c# (`for each` no Visual Basic) retorna um objeto do tipo dos elementos na coleção.</span><span class="sxs-lookup"><span data-stu-id="68b9c-121">The `foreach` statement of the C# language (`for each` in Visual Basic) returns an object of the type of the elements in the collection.</span></span> <span data-ttu-id="68b9c-122">Desde que cada elemento do <xref:System.Collections.SortedList> objeto é um par chave/valor, o tipo de elemento não é o tipo de chave ou o tipo do valor.</span><span class="sxs-lookup"><span data-stu-id="68b9c-122">Since each element of the <xref:System.Collections.SortedList> object is a key/value pair, the element type is not the type of the key or the type of the value.</span></span> <span data-ttu-id="68b9c-123">Em vez disso, o tipo de elemento é <xref:System.Collections.DictionaryEntry>.</span><span class="sxs-lookup"><span data-stu-id="68b9c-123">Rather, the element type is <xref:System.Collections.DictionaryEntry>.</span></span> <span data-ttu-id="68b9c-124">Por exemplo:</span><span class="sxs-lookup"><span data-stu-id="68b9c-124">For example:</span></span>  
  
 [!code-cpp[Classic SortedList Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList Example/CPP/remarks.cpp#2)]
 [!code-csharp[Classic SortedList Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList Example/CS/remarks.cs#2)]
 [!code-vb[Classic SortedList Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList Example/VB/remarks.vb#2)]  
  
 <span data-ttu-id="68b9c-125">O `foreach` instrução é um wrapper em torno de enumerador, que permite que somente leitura de não gravar à coleção.</span><span class="sxs-lookup"><span data-stu-id="68b9c-125">The `foreach` statement is a wrapper around the enumerator, which allows only reading from, not writing to, the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68b9c-126">O exemplo de código a seguir mostra como criar e inicializar uma <xref:System.Collections.SortedList> objeto e como imprimir suas chaves e valores.</span><span class="sxs-lookup"><span data-stu-id="68b9c-126">The following code example shows how to create and initialize a <xref:System.Collections.SortedList> object and how to print out its keys and values.</span></span>  
  
 [!code-cpp[Classic SortedList Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="68b9c-127">Os membros estáticos públicos (<see langword="Shared" /> no Visual Basic) desse são thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="68b9c-127">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="68b9c-128">Não há garantia de que qualquer membro de instância seja thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="68b9c-128">Any instance members are not guaranteed to be thread safe.</span>
      </span>
      <span data-ttu-id="68b9c-129">Um <see cref="T:System.Collections.SortedList" /> objeto pode dar suporte a vários leitores simultaneamente, desde que a coleção não é modificada.</span>
      <span class="sxs-lookup">
        <span data-stu-id="68b9c-129">A <see cref="T:System.Collections.SortedList" /> object can support multiple readers concurrently, as long as the collection is not modified.</span>
      </span>
      <span data-ttu-id="68b9c-130">Para garantir a segurança de thread do <see cref="T:System.Collections.SortedList" />, todas as operações devem ser feitas por meio do wrapper retornado pelo <see cref="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)" /> método.</span>
      <span class="sxs-lookup">
        <span data-stu-id="68b9c-130">To guarantee the thread safety of the <see cref="T:System.Collections.SortedList" />, all operations must be done through the wrapper returned by the <see cref="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)" /> method.</span>
      </span>
      <span data-ttu-id="68b9c-131">A enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span>
      <span class="sxs-lookup">
        <span data-stu-id="68b9c-131">Enumerating through a collection is intrinsically not a thread-safe procedure.</span>
      </span>
      <span data-ttu-id="68b9c-132">Mesmo quando uma coleção está sincronizada, outros threads ainda podem modificar a coleção, o que faz o enumerador lançar uma exceção.</span>
      <span class="sxs-lookup">
        <span data-stu-id="68b9c-132">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span>
      </span>
      <span data-ttu-id="68b9c-133">Para garantir thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração ou verificar as exceções resultantes das alterações feitas por outros threads.</span>
      <span class="sxs-lookup">
        <span data-stu-id="68b9c-133">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.IComparable" />
    <altmember cref="T:System.Collections.IComparer" />
    <altmember cref="T:System.Collections.IDictionary" />
    <altmember cref="T:System.Collections.Hashtable" />
    <altmember cref="T:System.Collections.Generic.SortedList`2" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="68b9c-134">Inicializa uma nova instância da classe <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-134">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="68b9c-135">Inicializa uma nova instância da classe <see cref="T:System.Collections.SortedList" /> que está vazia, tem a capacidade inicial padrão e é classificada de acordo com a interface <see cref="T:System.IComparable" /> implementada por cada chave adicionada ao objeto <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-135">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class that is empty, has the default initial capacity, and is sorted according to the <see cref="T:System.IComparable" /> interface implemented by each key added to the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b9c-136">Cada chave deve implementar o <xref:System.IComparable> interface devem ser capazes de comparações com todas as outras chaves no <xref:System.Collections.SortedList> objeto.</span><span class="sxs-lookup"><span data-stu-id="68b9c-136">Each key must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key in the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="68b9c-137">Os elementos são classificados de acordo com o <xref:System.IComparable> implementação de cada chave adicionada para o <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="68b9c-137">The elements are sorted according to the <xref:System.IComparable> implementation of each key added to the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="68b9c-138">A capacidade de um <xref:System.Collections.SortedList> objeto é o número de elementos que o <xref:System.Collections.SortedList> pode conter.</span><span class="sxs-lookup"><span data-stu-id="68b9c-138">The capacity of a <xref:System.Collections.SortedList> object is the number of elements that the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="68b9c-139">Como os elementos são adicionados a um <xref:System.Collections.SortedList>, a capacidade é aumentada automaticamente conforme necessário ao realocar a matriz interna.</span><span class="sxs-lookup"><span data-stu-id="68b9c-139">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="68b9c-140">Se o tamanho da coleção pode ser estimado, especificando a capacidade inicial elimina a necessidade de executar um número de operações de redimensionamento durante a adição de elementos para o <xref:System.Collections.SortedList> objeto.</span><span class="sxs-lookup"><span data-stu-id="68b9c-140">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="68b9c-141">Este construtor é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="68b9c-141">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68b9c-142">O exemplo de código a seguir cria coleções usando diferentes <xref:System.Collections.SortedList> construtores e demonstra as diferenças no comportamento das coleções.</span><span class="sxs-lookup"><span data-stu-id="68b9c-142">The following code example creates collections using different <xref:System.Collections.SortedList> constructors and demonstrates the differences in the behavior of the collections.</span></span>  
  
 [!code-cpp[System.Collections.SortedList_ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.SortedList_ctor/CPP/sortedlist_ctor.cpp#1)]
 [!code-csharp[System.Collections.SortedList_ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.SortedList_ctor/CS/sortedlist_ctor.cs#1)]
 [!code-vb[System.Collections.SortedList_ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.SortedList_ctor/VB/sortedlist_ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IComparable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList (System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList(System::Collections::IComparer ^ comparer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="68b9c-143">A implementação de <see cref="T:System.Collections.IComparer" /> a ser usada ao comparar chaves.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-143">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing keys.</span>
          </span>
          <span data-ttu-id="68b9c-144">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-144">-or-</span>
          </span>
          <span data-ttu-id="68b9c-145">
            <see langword="null" /> para usar a implementação de <see cref="T:System.IComparable" /> de cada chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-145">
              <see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68b9c-146">Inicializa uma nova instância da classe <see cref="T:System.Collections.SortedList" /> que está vazia, tem a capacidade inicial padrão e é classificada de acordo com a interface <see cref="T:System.Collections.IComparer" /> especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-146">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class that is empty, has the default initial capacity, and is sorted according to the specified <see cref="T:System.Collections.IComparer" /> interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b9c-147">Os elementos são classificados de acordo com a especificada <xref:System.Collections.IComparer> implementação.</span><span class="sxs-lookup"><span data-stu-id="68b9c-147">The elements are sorted according to the specified <xref:System.Collections.IComparer> implementation.</span></span> <span data-ttu-id="68b9c-148">Se o `comparer` parâmetro é `null`, o <xref:System.IComparable> implementação de cada chave é usada; portanto, cada chave deve implementar o <xref:System.IComparable> interface devem ser capazes de comparações com todas as outras chaves no <xref:System.Collections.SortedList> objeto.</span><span class="sxs-lookup"><span data-stu-id="68b9c-148">If the `comparer` parameter is `null`, the <xref:System.IComparable> implementation of each key is used; therefore, each key must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key in the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="68b9c-149">A capacidade de um <xref:System.Collections.SortedList> objeto é o número de elementos que o <xref:System.Collections.SortedList> pode conter.</span><span class="sxs-lookup"><span data-stu-id="68b9c-149">The capacity of a <xref:System.Collections.SortedList> object is the number of elements that the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="68b9c-150">Como os elementos são adicionados a um <xref:System.Collections.SortedList>, a capacidade é aumentada automaticamente conforme necessário ao realocar a matriz interna.</span><span class="sxs-lookup"><span data-stu-id="68b9c-150">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="68b9c-151">Se o tamanho da coleção pode ser estimado, especificando a capacidade inicial elimina a necessidade de executar um número de operações de redimensionamento durante a adição de elementos para o <xref:System.Collections.SortedList> objeto.</span><span class="sxs-lookup"><span data-stu-id="68b9c-151">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="68b9c-152">Este construtor é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="68b9c-152">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68b9c-153">O exemplo de código a seguir cria coleções usando diferentes <xref:System.Collections.SortedList> construtores e demonstra as diferenças no comportamento das coleções.</span><span class="sxs-lookup"><span data-stu-id="68b9c-153">The following code example creates collections using different <xref:System.Collections.SortedList> constructors and demonstrates the differences in the behavior of the collections.</span></span>  
  
 [!code-cpp[System.Collections.SortedList_ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.SortedList_ctor/CPP/sortedlist_ctor.cpp#1)]
 [!code-csharp[System.Collections.SortedList_ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.SortedList_ctor/CS/sortedlist_ctor.cs#1)]
 [!code-vb[System.Collections.SortedList_ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.SortedList_ctor/VB/sortedlist_ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList (System.Collections.IDictionary d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (d As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList(System::Collections::IDictionary ^ d);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="d" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="68b9c-154">A implementação de <see cref="T:System.Collections.IDictionary" /> para copiar para um novo objeto <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-154">The <see cref="T:System.Collections.IDictionary" /> implementation to copy to a new <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68b9c-155">Inicializa uma nova instância da classe <see cref="T:System.Collections.SortedList" /> que contém elementos copiados do dicionário especificado, tem a mesma capacidade inicial que o número de elementos copiados e é classificada segundo a interface <see cref="T:System.IComparable" /> implementada por cada chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-155">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class that contains elements copied from the specified dictionary, has the same initial capacity as the number of elements copied, and is sorted according to the <see cref="T:System.IComparable" /> interface implemented by each key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b9c-156">Cada chave deve implementar o <xref:System.IComparable> interface devem ser capazes de comparações com todas as outras chaves no <xref:System.Collections.SortedList> objeto.</span><span class="sxs-lookup"><span data-stu-id="68b9c-156">Each key must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key in the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="68b9c-157">Os elementos são classificados de acordo com o <xref:System.IComparable> implementação de cada chave adicionada para o <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="68b9c-157">The elements are sorted according to the <xref:System.IComparable> implementation of each key added to the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="68b9c-158">Um <xref:System.Collections.Hashtable> objeto é um exemplo de um <xref:System.Collections.IDictionary> implementação que pode ser passada para o construtor.</span><span class="sxs-lookup"><span data-stu-id="68b9c-158">A <xref:System.Collections.Hashtable> object is an example of an <xref:System.Collections.IDictionary> implementation that can be passed to this constructor.</span></span> <span data-ttu-id="68b9c-159">O novo <xref:System.Collections.SortedList> objeto contém uma cópia das chaves e valores armazenados no <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="68b9c-159">The new <xref:System.Collections.SortedList> object contains a copy of the keys and values stored in the <xref:System.Collections.Hashtable>.</span></span>  
  
 <span data-ttu-id="68b9c-160">A capacidade de um <xref:System.Collections.SortedList> objeto é o número de elementos que o <xref:System.Collections.SortedList> pode conter.</span><span class="sxs-lookup"><span data-stu-id="68b9c-160">The capacity of a <xref:System.Collections.SortedList> object is the number of elements that the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="68b9c-161">Como os elementos são adicionados a um <xref:System.Collections.SortedList>, a capacidade é aumentada automaticamente conforme necessário ao realocar a matriz interna.</span><span class="sxs-lookup"><span data-stu-id="68b9c-161">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="68b9c-162">Se o tamanho da coleção pode ser estimado, especificando a capacidade inicial elimina a necessidade de executar um número de operações de redimensionamento durante a adição de elementos para o <xref:System.Collections.SortedList> objeto.</span><span class="sxs-lookup"><span data-stu-id="68b9c-162">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="68b9c-163">Este construtor é um O (`n`) operação, onde `n` é o número de elementos em `d`.</span><span class="sxs-lookup"><span data-stu-id="68b9c-163">This constructor is an O(`n`) operation, where `n` is the number of elements in `d`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68b9c-164">O exemplo de código a seguir cria coleções usando diferentes <xref:System.Collections.SortedList> construtores e demonstra as diferenças no comportamento das coleções.</span><span class="sxs-lookup"><span data-stu-id="68b9c-164">The following code example creates collections using different <xref:System.Collections.SortedList> constructors and demonstrates the differences in the behavior of the collections.</span></span>  
  
 [!code-cpp[System.Collections.SortedList_ctorDictionary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorDictionary/CPP/sortedlist_ctordictionary.cpp#1)]
 [!code-csharp[System.Collections.SortedList_ctorDictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorDictionary/CS/sortedlist_ctordictionary.cs#1)]
 [!code-vb[System.Collections.SortedList_ctorDictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.SortedList_ctorDictionary/VB/sortedlist_ctordictionary.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="68b9c-165">
            <paramref name="d" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-165">
              <paramref name="d" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="68b9c-166">Um ou mais elementos em <paramref name="d" /> não implementam a interface <see cref="T:System.IComparable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-166">One or more elements in <paramref name="d" /> do not implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList (int initialCapacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialCapacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialCapacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList(int initialCapacity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="initialCapacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="initialCapacity">
          <span data-ttu-id="68b9c-167">O número inicial de elementos que o objeto <see cref="T:System.Collections.SortedList" /> pode conter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-167">The initial number of elements that the <see cref="T:System.Collections.SortedList" /> object can contain.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68b9c-168">Inicializa uma nova instância da classe <see cref="T:System.Collections.SortedList" /> que está vazia, tem a capacidade inicial especificada e é classificada de acordo com a interface <see cref="T:System.IComparable" /> implementada por cada chave adicionada ao objeto <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-168">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class that is empty, has the specified initial capacity, and is sorted according to the <see cref="T:System.IComparable" /> interface implemented by each key added to the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b9c-169">Cada chave deve implementar o <xref:System.IComparable> interface devem ser capazes de comparações com todas as outras chaves no <xref:System.Collections.SortedList> objeto.</span><span class="sxs-lookup"><span data-stu-id="68b9c-169">Each key must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key in the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="68b9c-170">Os elementos são classificados de acordo com o <xref:System.IComparable> implementação de cada chave adicionada para o <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="68b9c-170">The elements are sorted according to the <xref:System.IComparable> implementation of each key added to the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="68b9c-171">A capacidade de um <xref:System.Collections.SortedList> objeto é o número de elementos que o <xref:System.Collections.SortedList> pode conter.</span><span class="sxs-lookup"><span data-stu-id="68b9c-171">The capacity of a <xref:System.Collections.SortedList> object is the number of elements that the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="68b9c-172">Como os elementos são adicionados a um <xref:System.Collections.SortedList>, a capacidade é aumentada automaticamente conforme necessário ao realocar a matriz interna.</span><span class="sxs-lookup"><span data-stu-id="68b9c-172">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="68b9c-173">Se o tamanho da coleção pode ser estimado, especificando a capacidade inicial elimina a necessidade de executar um número de operações de redimensionamento durante a adição de elementos para o <xref:System.Collections.SortedList> objeto.</span><span class="sxs-lookup"><span data-stu-id="68b9c-173">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="68b9c-174">Este construtor é um O (`n`) operação, onde `n` é `initialCapacity`.</span><span class="sxs-lookup"><span data-stu-id="68b9c-174">This constructor is an O(`n`) operation, where `n` is `initialCapacity`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68b9c-175">O exemplo de código a seguir cria coleções usando diferentes <xref:System.Collections.SortedList> construtores e demonstra as diferenças no comportamento das coleções.</span><span class="sxs-lookup"><span data-stu-id="68b9c-175">The following code example creates collections using different <xref:System.Collections.SortedList> constructors and demonstrates the differences in the behavior of the collections.</span></span>  
  
 [!code-cpp[System.Collections.SortedList_ctorInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorInt/CPP/sortedlist_ctorint.cpp#1)]
 [!code-csharp[System.Collections.SortedList_ctorInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorInt/CS/sortedlist_ctorint.cs#1)]
 [!code-vb[System.Collections.SortedList_ctorInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.SortedList_ctorInt/VB/sortedlist_ctorint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="68b9c-176">
            <paramref name="initialCapacity" /> é menor que zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-176">
              <paramref name="initialCapacity" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="68b9c-177">Não há memória suficiente disponível para criar um objeto <see cref="T:System.Collections.SortedList" /> com o <paramref name="initialCapacity" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-177">There is not enough available memory to create a <see cref="T:System.Collections.SortedList" /> object with the specified <paramref name="initialCapacity" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList (System.Collections.IComparer comparer, int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IComparer comparer, int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (comparer As IComparer, capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList(System::Collections::IComparer ^ comparer, int capacity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="68b9c-178">A implementação de <see cref="T:System.Collections.IComparer" /> a ser usada ao comparar chaves.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-178">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing keys.</span>
          </span>
          <span data-ttu-id="68b9c-179">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-179">-or-</span>
          </span>
          <span data-ttu-id="68b9c-180">
            <see langword="null" /> para usar a implementação de <see cref="T:System.IComparable" /> de cada chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-180">
              <see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each key.</span>
          </span>
        </param>
        <param name="capacity">
          <span data-ttu-id="68b9c-181">O número inicial de elementos que o objeto <see cref="T:System.Collections.SortedList" /> pode conter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-181">The initial number of elements that the <see cref="T:System.Collections.SortedList" /> object can contain.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68b9c-182">Inicializa uma nova instância da classe <see cref="T:System.Collections.SortedList" /> que está vazia, tem a capacidade inicial especificada e é classificada de acordo com a interface <see cref="T:System.Collections.IComparer" /> especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-182">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class that is empty, has the specified initial capacity, and is sorted according to the specified <see cref="T:System.Collections.IComparer" /> interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b9c-183">Os elementos são classificados de acordo com a especificada <xref:System.Collections.IComparer> implementação.</span><span class="sxs-lookup"><span data-stu-id="68b9c-183">The elements are sorted according to the specified <xref:System.Collections.IComparer> implementation.</span></span> <span data-ttu-id="68b9c-184">Se o `comparer` parâmetro é `null`, o <xref:System.IComparable> implementação de cada chave é usada; portanto, cada chave deve implementar o <xref:System.IComparable> interface devem ser capazes de comparações com todas as outras chaves no <xref:System.Collections.SortedList> objeto.</span><span class="sxs-lookup"><span data-stu-id="68b9c-184">If the `comparer` parameter is `null`, the <xref:System.IComparable> implementation of each key is used; therefore, each key must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key in the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="68b9c-185">A capacidade de um <xref:System.Collections.SortedList> objeto é o número de elementos que o <xref:System.Collections.SortedList> pode conter.</span><span class="sxs-lookup"><span data-stu-id="68b9c-185">The capacity of a <xref:System.Collections.SortedList> object is the number of elements that the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="68b9c-186">Como os elementos são adicionados a um <xref:System.Collections.SortedList>, a capacidade é aumentada automaticamente conforme necessário ao realocar a matriz interna.</span><span class="sxs-lookup"><span data-stu-id="68b9c-186">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="68b9c-187">Se o tamanho da coleção pode ser estimado, especificando a capacidade inicial elimina a necessidade de executar um número de operações de redimensionamento durante a adição de elementos para o <xref:System.Collections.SortedList> objeto.</span><span class="sxs-lookup"><span data-stu-id="68b9c-187">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="68b9c-188">Este construtor é um O (`n`) operação, onde `n` é `capacity`.</span><span class="sxs-lookup"><span data-stu-id="68b9c-188">This constructor is an O(`n`) operation, where `n` is `capacity`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68b9c-189">O exemplo de código a seguir cria coleções usando diferentes <xref:System.Collections.SortedList> construtores e demonstra as diferenças no comportamento das coleções.</span><span class="sxs-lookup"><span data-stu-id="68b9c-189">The following code example creates collections using different <xref:System.Collections.SortedList> constructors and demonstrates the differences in the behavior of the collections.</span></span>  
  
 [!code-cpp[System.Collections.SortedList_ctorInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorInt/CPP/sortedlist_ctorint.cpp#1)]
 [!code-csharp[System.Collections.SortedList_ctorInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorInt/CS/sortedlist_ctorint.cs#1)]
 [!code-vb[System.Collections.SortedList_ctorInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.SortedList_ctorInt/VB/sortedlist_ctorint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="68b9c-190">
            <paramref name="capacity" /> é menor que zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-190">
              <paramref name="capacity" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="68b9c-191">Não há memória suficiente disponível para criar um objeto <see cref="T:System.Collections.SortedList" /> com o <paramref name="capacity" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-191">There is not enough available memory to create a <see cref="T:System.Collections.SortedList" /> object with the specified <paramref name="capacity" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList (System.Collections.IDictionary d, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary d, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (d As IDictionary, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList(System::Collections::IDictionary ^ d, System::Collections::IComparer ^ comparer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="d" Type="System.Collections.IDictionary" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="68b9c-192">A implementação de <see cref="T:System.Collections.IDictionary" /> para copiar para um novo objeto <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-192">The <see cref="T:System.Collections.IDictionary" /> implementation to copy to a new <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="68b9c-193">A implementação de <see cref="T:System.Collections.IComparer" /> a ser usada ao comparar chaves.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-193">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing keys.</span>
          </span>
          <span data-ttu-id="68b9c-194">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-194">-or-</span>
          </span>
          <span data-ttu-id="68b9c-195">
            <see langword="null" /> para usar a implementação de <see cref="T:System.IComparable" /> de cada chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-195">
              <see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68b9c-196">Inicializa uma nova instância da classe <see cref="T:System.Collections.SortedList" /> que contém elementos copiados do dicionário especificado, tem a mesma capacidade inicial que o número de elementos copiados e é classificada segundo a interface <see cref="T:System.Collections.IComparer" /> especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-196">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class that contains elements copied from the specified dictionary, has the same initial capacity as the number of elements copied, and is sorted according to the specified <see cref="T:System.Collections.IComparer" /> interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b9c-197">Os elementos são classificados de acordo com a especificada <xref:System.Collections.IComparer> implementação.</span><span class="sxs-lookup"><span data-stu-id="68b9c-197">The elements are sorted according to the specified <xref:System.Collections.IComparer> implementation.</span></span> <span data-ttu-id="68b9c-198">Se o `comparer` parâmetro é `null`, o <xref:System.IComparable> implementação de cada chave é usada; portanto, cada chave deve implementar o <xref:System.IComparable> interface devem ser capazes de comparações com todas as outras chaves no <xref:System.Collections.SortedList> objeto.</span><span class="sxs-lookup"><span data-stu-id="68b9c-198">If the `comparer` parameter is `null`, the <xref:System.IComparable> implementation of each key is used; therefore, each key must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key in the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="68b9c-199">Um <xref:System.Collections.Hashtable> objeto é um exemplo de um <xref:System.Collections.IDictionary> implementação que pode ser passada para o construtor.</span><span class="sxs-lookup"><span data-stu-id="68b9c-199">A <xref:System.Collections.Hashtable> object is an example of an <xref:System.Collections.IDictionary> implementation that can be passed to this constructor.</span></span> <span data-ttu-id="68b9c-200">O novo <xref:System.Collections.SortedList> objeto contém uma cópia das chaves e valores armazenados no <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="68b9c-200">The new <xref:System.Collections.SortedList> object contains a copy of the keys and values stored in the <xref:System.Collections.Hashtable>.</span></span>  
  
 <span data-ttu-id="68b9c-201">A capacidade de um <xref:System.Collections.SortedList> objeto é o número de elementos que o <xref:System.Collections.SortedList> pode conter.</span><span class="sxs-lookup"><span data-stu-id="68b9c-201">The capacity of a <xref:System.Collections.SortedList> object is the number of elements that the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="68b9c-202">Como os elementos são adicionados a um <xref:System.Collections.SortedList>, a capacidade é aumentada automaticamente conforme necessário ao realocar a matriz interna.</span><span class="sxs-lookup"><span data-stu-id="68b9c-202">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="68b9c-203">Se o tamanho da coleção pode ser estimado, especificando a capacidade inicial elimina a necessidade de executar um número de operações de redimensionamento durante a adição de elementos para o <xref:System.Collections.SortedList> objeto.</span><span class="sxs-lookup"><span data-stu-id="68b9c-203">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="68b9c-204">Este construtor é um O (`n`) operação, onde `n` é o número de elementos em `d`.</span><span class="sxs-lookup"><span data-stu-id="68b9c-204">This constructor is an O(`n`) operation, where `n` is the number of elements in `d`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68b9c-205">O exemplo de código a seguir cria coleções usando diferentes <xref:System.Collections.SortedList> construtores e demonstra as diferenças no comportamento das coleções.</span><span class="sxs-lookup"><span data-stu-id="68b9c-205">The following code example creates collections using different <xref:System.Collections.SortedList> constructors and demonstrates the differences in the behavior of the collections.</span></span>  
  
 [!code-cpp[System.Collections.SortedList_ctorDictionary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorDictionary/CPP/sortedlist_ctordictionary.cpp#1)]
 [!code-csharp[System.Collections.SortedList_ctorDictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorDictionary/CS/sortedlist_ctordictionary.cs#1)]
 [!code-vb[System.Collections.SortedList_ctorDictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.SortedList_ctorDictionary/VB/sortedlist_ctordictionary.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="68b9c-206">
            <paramref name="d" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-206">
              <paramref name="d" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="68b9c-207">
            <paramref name="comparer" /> é <see langword="null" />, e um ou mais elementos em <paramref name="d" /> não implementam a interface <see cref="T:System.IComparable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-207">
              <paramref name="comparer" /> is <see langword="null" />, and one or more elements in <paramref name="d" /> do not implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.Add(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (key As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Object ^ key, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Add(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="68b9c-208">A chave do elemento a ser adicionada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-208">The key of the element to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="68b9c-209">O valor do elemento a ser adicionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-209">The value of the element to add.</span>
          </span>
          <span data-ttu-id="68b9c-210">O valor pode ser <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-210">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68b9c-211">Adiciona um elemento com a chave e o valor especificados a um objeto <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-211">Adds an element with the specified key and value to a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b9c-212">O ponto de inserção é determinado com base no comparador selecionado, ou explicitamente por padrão, quando o <xref:System.Collections.SortedList> objeto foi criado.</span><span class="sxs-lookup"><span data-stu-id="68b9c-212">The insertion point is determined based on the comparer selected, either explicitly or by default, when the <xref:System.Collections.SortedList> object was created.</span></span>  
  
 <span data-ttu-id="68b9c-213">Se <xref:System.Collections.SortedList.Count%2A> já for igual a <xref:System.Collections.SortedList.Capacity%2A>, a capacidade do <xref:System.Collections.SortedList> objeto é aumentado, automaticamente realocando a matriz interna e os elementos existentes são copiados para a nova matriz antes de adicionar o novo elemento.</span><span class="sxs-lookup"><span data-stu-id="68b9c-213">If <xref:System.Collections.SortedList.Count%2A> already equals <xref:System.Collections.SortedList.Capacity%2A>, the capacity of the <xref:System.Collections.SortedList> object is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="68b9c-214">Você também pode usar o <xref:System.Collections.SortedList.Item%2A> propriedade para adicionar novos elementos, definindo o valor de uma chave que não existe no <xref:System.Collections.SortedList> objeto (por exemplo, `myCollection["myNonexistentKey"] = myValue`).</span><span class="sxs-lookup"><span data-stu-id="68b9c-214">You can also use the <xref:System.Collections.SortedList.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.SortedList> object (for example, `myCollection["myNonexistentKey"] = myValue`).</span></span> <span data-ttu-id="68b9c-215">No entanto, se a chave especificada já existe no <xref:System.Collections.SortedList>, a definição de <xref:System.Collections.SortedList.Item%2A> propriedade substitui o valor antigo.</span><span class="sxs-lookup"><span data-stu-id="68b9c-215">However, if the specified key already exists in the <xref:System.Collections.SortedList>, setting the <xref:System.Collections.SortedList.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="68b9c-216">Em contraste, o <xref:System.Collections.SortedList.Add%2A> método não modifica os elementos existentes.</span><span class="sxs-lookup"><span data-stu-id="68b9c-216">In contrast, the <xref:System.Collections.SortedList.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="68b9c-217">Os elementos de um <xref:System.Collections.SortedList> objeto são classificados pelas chaves de um acordo com um determinado <xref:System.Collections.IComparer> implementação especificado quando o <xref:System.Collections.SortedList> é criado ou acordo para o <xref:System.IComparable> as próprias chaves a implementação.</span><span class="sxs-lookup"><span data-stu-id="68b9c-217">The elements of a <xref:System.Collections.SortedList> object are sorted by the keys either according to a specific <xref:System.Collections.IComparer> implementation specified when the <xref:System.Collections.SortedList> is created or according to the <xref:System.IComparable> implementation provided by the keys themselves.</span></span>  
  
 <span data-ttu-id="68b9c-218">Uma chave não pode ser `null`, mas pode ser um valor.</span><span class="sxs-lookup"><span data-stu-id="68b9c-218">A key cannot be `null`, but a value can be.</span></span>  
  
 <span data-ttu-id="68b9c-219">Esse método é um O (`n`) a operação de dados classificados, onde `n` é <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="68b9c-219">This method is an O(`n`) operation for unsorted data, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span> <span data-ttu-id="68b9c-220">É um O (log `n`) se o novo elemento é adicionado ao final da lista de operação.</span><span class="sxs-lookup"><span data-stu-id="68b9c-220">It is an O(log `n`) operation if the new element is added at the end of the list.</span></span> <span data-ttu-id="68b9c-221">Se a inserção faz com que um redimensionamento, a operação é O (`n`).</span><span class="sxs-lookup"><span data-stu-id="68b9c-221">If insertion causes a resize, the operation is O(`n`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68b9c-222">O exemplo de código a seguir mostra como adicionar elementos a uma <xref:System.Collections.SortedList> objeto.</span><span class="sxs-lookup"><span data-stu-id="68b9c-222">The following code example shows how to add elements to a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.Add Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.Add Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.Add Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="68b9c-223">
            <paramref name="key" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-223">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="68b9c-224">Já existe um elemento com o <paramref name="key" /> especificado no objeto <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-224">An element with the specified <paramref name="key" /> already exists in the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
          <span data-ttu-id="68b9c-225">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-225">-or-</span>
          </span>
          <span data-ttu-id="68b9c-226">O <see cref="T:System.Collections.SortedList" /> está definido para usar a interface <see cref="T:System.IComparable" /> e <paramref name="key" /> não implementa a interface <see cref="T:System.IComparable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-226">The <see cref="T:System.Collections.SortedList" /> is set to use the <see cref="T:System.IComparable" /> interface, and <paramref name="key" /> does not implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="68b9c-227">O <see cref="T:System.Collections.SortedList" /> é somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-227">The <see cref="T:System.Collections.SortedList" /> is read-only.</span>
          </span>
          <span data-ttu-id="68b9c-228">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-228">-or-</span>
          </span>
          <span data-ttu-id="68b9c-229">O <see cref="T:System.Collections.SortedList" /> tem um tamanho fixo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-229">The <see cref="T:System.Collections.SortedList" /> has a fixed size.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="68b9c-230">Não há memória suficiente disponível para adicionar o elemento ao <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-230">There is not enough available memory to add the element to the <see cref="T:System.Collections.SortedList" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="68b9c-231">O comparador gera uma exceção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-231">The comparer throws an exception.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.SortedList.Item(System.Object)" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName="Capacity">
      <MemberSignature Language="C#" Value="public virtual int Capacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Capacity" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.Capacity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Capacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Capacity { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="68b9c-232">Obtém ou define a capacidade de um objeto <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-232">Gets or sets the capacity of a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="68b9c-233">O número de elementos que o objeto <see cref="T:System.Collections.SortedList" /> pode conter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-233">The number of elements that the <see cref="T:System.Collections.SortedList" /> object can contain.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b9c-234"><xref:System.Collections.SortedList.Capacity%2A> é o número de elementos que o <xref:System.Collections.SortedList> objeto pode armazenar.</span><span class="sxs-lookup"><span data-stu-id="68b9c-234"><xref:System.Collections.SortedList.Capacity%2A> is the number of elements that the <xref:System.Collections.SortedList> object can store.</span></span> <span data-ttu-id="68b9c-235"><xref:System.Collections.SortedList.Count%2A> é o número de elementos que estão realmente no <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="68b9c-235"><xref:System.Collections.SortedList.Count%2A> is the number of elements that are actually in the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="68b9c-236"><xref:System.Collections.SortedList.Capacity%2A> sempre é maior que ou igual a <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="68b9c-236"><xref:System.Collections.SortedList.Capacity%2A> is always greater than or equal to <xref:System.Collections.SortedList.Count%2A>.</span></span> <span data-ttu-id="68b9c-237">Se <xref:System.Collections.SortedList.Count%2A> excede <xref:System.Collections.SortedList.Capacity%2A> durante a adição de elementos, a capacidade é aumentada automaticamente realocando a matriz interna antes de copiar os elementos antigos e adição de novos elementos.</span><span class="sxs-lookup"><span data-stu-id="68b9c-237">If <xref:System.Collections.SortedList.Count%2A> exceeds <xref:System.Collections.SortedList.Capacity%2A> while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="68b9c-238">A capacidade pode ser diminuída chamando <xref:System.Collections.SortedList.TrimToSize%2A> ou definindo o <xref:System.Collections.SortedList.Capacity%2A> propriedade explicitamente.</span><span class="sxs-lookup"><span data-stu-id="68b9c-238">The capacity can be decreased by calling <xref:System.Collections.SortedList.TrimToSize%2A> or by setting the <xref:System.Collections.SortedList.Capacity%2A> property explicitly.</span></span> <span data-ttu-id="68b9c-239">Quando o valor de <xref:System.Collections.SortedList.Capacity%2A> é definido explicitamente, a matriz interna também seja realocada para acomodar a capacidade especificada.</span><span class="sxs-lookup"><span data-stu-id="68b9c-239">When the value of <xref:System.Collections.SortedList.Capacity%2A> is set explicitly, the internal array is also reallocated to accommodate the specified capacity.</span></span>  
  
 <span data-ttu-id="68b9c-240">Recuperar o valor dessa propriedade é uma operação de (1); configuração da propriedade é um O (`n`) operação, onde `n` é a nova capacidade.</span><span class="sxs-lookup"><span data-stu-id="68b9c-240">Retrieving the value of this property is an O(1) operation; setting the property is an O(`n`) operation, where `n` is the new capacity.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="68b9c-241">O valor atribuído é menor que o número atual de elementos no objeto <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-241">The value assigned is less than the current number of elements in the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="68b9c-242">Não há memória suficiente disponível no sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-242">There is not enough memory available on the system.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.SortedList.TrimToSize" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="68b9c-243">Remove todos os elementos de um objeto <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-243">Removes all elements from a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b9c-244"><xref:System.Collections.SortedList.Count%2A> é definido como zero e referências a outros objetos de elementos da coleção também são liberadas.</span><span class="sxs-lookup"><span data-stu-id="68b9c-244"><xref:System.Collections.SortedList.Count%2A> is set to zero and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="68b9c-245"><xref:System.Collections.SortedList.Capacity%2A> permanece inalterado.</span><span class="sxs-lookup"><span data-stu-id="68b9c-245"><xref:System.Collections.SortedList.Capacity%2A> remains unchanged.</span></span> <span data-ttu-id="68b9c-246">Para redefinir a capacidade do <xref:System.Collections.SortedList> de objeto, chame <xref:System.Collections.SortedList.TrimToSize%2A> ou defina o <xref:System.Collections.SortedList.Capacity%2A> propriedade diretamente.</span><span class="sxs-lookup"><span data-stu-id="68b9c-246">To reset the capacity of the <xref:System.Collections.SortedList> object, call <xref:System.Collections.SortedList.TrimToSize%2A> or set the <xref:System.Collections.SortedList.Capacity%2A> property directly.</span></span> <span data-ttu-id="68b9c-247">Cortar vazio <xref:System.Collections.SortedList> define a capacidade do <xref:System.Collections.SortedList> à capacidade padrão.</span><span class="sxs-lookup"><span data-stu-id="68b9c-247">Trimming an empty <xref:System.Collections.SortedList> sets the capacity of the <xref:System.Collections.SortedList> to the default capacity.</span></span>  
  
 <span data-ttu-id="68b9c-248">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="68b9c-248">This method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68b9c-249">O exemplo de código a seguir mostra como cortar as partes não utilizadas de um <xref:System.Collections.SortedList> objeto e como limpar os valores a <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="68b9c-249">The following code example shows how to trim the unused portions of a <xref:System.Collections.SortedList> object and how to clear the values of the <xref:System.Collections.SortedList>.</span></span>  
  
 [!code-cpp[Classic SortedList.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="68b9c-250">O objeto <see cref="T:System.Collections.SortedList" /> é somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-250">The <see cref="T:System.Collections.SortedList" /> object is read-only.</span>
          </span>
          <span data-ttu-id="68b9c-251">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-251">-or-</span>
          </span>
          <span data-ttu-id="68b9c-252">O <see cref="T:System.Collections.SortedList" /> tem um tamanho fixo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-252">The <see cref="T:System.Collections.SortedList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.SortedList.TrimToSize" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
        <altmember cref="P:System.Collections.SortedList.Count" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="68b9c-253">Cria uma cópia superficial de um objeto <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-253">Creates a shallow copy of a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="68b9c-254">Uma cópia superficial do objeto <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-254">A shallow copy of the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b9c-255">Uma cópia superficial de uma coleção copia apenas os elementos da coleção, se eles são tipos de referência ou valor de tipos, mas não copiar os objetos que se referem as referências a.</span><span class="sxs-lookup"><span data-stu-id="68b9c-255">A shallow copy of a collection copies only the elements of the collection, whether they are reference types or value types, but does not copy the objects that the references refer to.</span></span> <span data-ttu-id="68b9c-256">As referências na nova coleção apontam para os mesmos objetos que as referências na coleção original apontem para.</span><span class="sxs-lookup"><span data-stu-id="68b9c-256">The references in the new collection point to the same objects that the references in the original collection point to.</span></span>  
  
 <span data-ttu-id="68b9c-257">Em contraste, uma cópia profunda de uma coleção copia os elementos e tudo direta ou indiretamente referenciado por elementos.</span><span class="sxs-lookup"><span data-stu-id="68b9c-257">In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="68b9c-258">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="68b9c-258">This method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains (key As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Object ^ key);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="68b9c-259">A chave a ser localizada no objeto <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-259">The key to locate in the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68b9c-260">Determina se um objeto <see cref="T:System.Collections.SortedList" /> contém uma chave específica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-260">Determines whether a <see cref="T:System.Collections.SortedList" /> object contains a specific key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="68b9c-261">
            <see langword="true" /> se o objeto <see cref="T:System.Collections.SortedList" /> contiver um elemento com o <paramref name="key" /> especificado, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-261">
              <see langword="true" /> if the <see cref="T:System.Collections.SortedList" /> object contains an element with the specified <paramref name="key" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b9c-262">Os elementos de um <xref:System.Collections.SortedList> objeto são classificados pelas chaves de um acordo com um determinado <xref:System.Collections.IComparer> implementação especificado quando o <xref:System.Collections.SortedList> é criado ou acordo para o <xref:System.IComparable> as próprias chaves a implementação.</span><span class="sxs-lookup"><span data-stu-id="68b9c-262">The elements of a <xref:System.Collections.SortedList> object are sorted by the keys either according to a specific <xref:System.Collections.IComparer> implementation specified when the <xref:System.Collections.SortedList> is created or according to the <xref:System.IComparable> implementation provided by the keys themselves.</span></span>  
  
 <span data-ttu-id="68b9c-263"><xref:System.Collections.SortedList.Contains%2A> implementa <xref:System.Collections.IDictionary.Contains%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="68b9c-263"><xref:System.Collections.SortedList.Contains%2A> implements <xref:System.Collections.IDictionary.Contains%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="68b9c-264">Ele se comporta exatamente como <xref:System.Collections.SortedList.ContainsKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="68b9c-264">It behaves exactly as <xref:System.Collections.SortedList.ContainsKey%2A>.</span></span>  
  
 <span data-ttu-id="68b9c-265">Esse método usa um algoritmo de pesquisa binário; Portanto, esse método é um O (log `n`) operação, onde `n` é <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="68b9c-265">This method uses a binary search algorithm; therefore, this method is an O(log `n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
 <span data-ttu-id="68b9c-266">Começando pelo .NET Framework 2.0, esse método usa os métodos <xref:System.Object.Equals%2A> e <xref:System.IComparable.CompareTo%2A> do objeto da coleção em `item` para determinar se o item existe.</span><span class="sxs-lookup"><span data-stu-id="68b9c-266">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="68b9c-267">Em versões anteriores do .NET Framework, essa decisão era tomada usando-se os métodos <xref:System.Object.Equals%2A> e <xref:System.IComparable.CompareTo%2A> do parâmetro `item` nos objetos na coleção.</span><span class="sxs-lookup"><span data-stu-id="68b9c-267">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68b9c-268">O exemplo de código a seguir mostra como determinar se um <xref:System.Collections.SortedList> objeto contém um elemento específico.</span><span class="sxs-lookup"><span data-stu-id="68b9c-268">The following code example shows how to determine whether a <xref:System.Collections.SortedList> object contains a specific element.</span></span>  
  
 [!code-cpp[Classic SortedList.Contains Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="68b9c-269">
            <paramref name="key" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-269">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="68b9c-270">O comparador gera uma exceção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-270">The comparer throws an exception.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.SortedList.ContainsKey(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfKey(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public virtual bool ContainsKey (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.ContainsKey(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsKey (key As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::Object ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="68b9c-271">A chave a ser localizada no objeto <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-271">The key to locate in the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68b9c-272">Determina se um objeto <see cref="T:System.Collections.SortedList" /> contém uma chave específica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-272">Determines whether a <see cref="T:System.Collections.SortedList" /> object contains a specific key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="68b9c-273">
            <see langword="true" /> se o objeto <see cref="T:System.Collections.SortedList" /> contiver um elemento com o <paramref name="key" /> especificado, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-273">
              <see langword="true" /> if the <see cref="T:System.Collections.SortedList" /> object contains an element with the specified <paramref name="key" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b9c-274">Os elementos de um <xref:System.Collections.SortedList> objeto são classificados pelas chaves de um acordo com um determinado <xref:System.Collections.IComparer> implementação especificado quando o <xref:System.Collections.SortedList> é criado ou acordo para o <xref:System.IComparable> as próprias chaves a implementação.</span><span class="sxs-lookup"><span data-stu-id="68b9c-274">The elements of a <xref:System.Collections.SortedList> object are sorted by the keys either according to a specific <xref:System.Collections.IComparer> implementation specified when the <xref:System.Collections.SortedList> is created or according to the <xref:System.IComparable> implementation provided by the keys themselves.</span></span>  
  
 <span data-ttu-id="68b9c-275">Esse método se comporta exatamente como o <xref:System.Collections.SortedList.Contains%2A> método.</span><span class="sxs-lookup"><span data-stu-id="68b9c-275">This method behaves exactly as the <xref:System.Collections.SortedList.Contains%2A> method.</span></span>  
  
 <span data-ttu-id="68b9c-276">Esse método usa um algoritmo de pesquisa binário; Portanto, esse método é um O (log `n`) operação, onde `n` é <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="68b9c-276">This method uses a binary search algorithm; therefore, this method is an O(log `n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
 <span data-ttu-id="68b9c-277">Começando pelo .NET Framework 2.0, esse método usa os métodos <xref:System.Object.Equals%2A> e <xref:System.IComparable.CompareTo%2A> do objeto da coleção em `item` para determinar se o item existe.</span><span class="sxs-lookup"><span data-stu-id="68b9c-277">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="68b9c-278">Em versões anteriores do .NET Framework, essa decisão era tomada usando-se os métodos <xref:System.Object.Equals%2A> e <xref:System.IComparable.CompareTo%2A> do parâmetro `item` nos objetos na coleção.</span><span class="sxs-lookup"><span data-stu-id="68b9c-278">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68b9c-279">O exemplo de código a seguir mostra como determinar se um <xref:System.Collections.SortedList> objeto contém um elemento específico.</span><span class="sxs-lookup"><span data-stu-id="68b9c-279">The following code example shows how to determine whether a <xref:System.Collections.SortedList> object contains a specific element.</span></span>  
  
 [!code-cpp[Classic SortedList.Contains Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="68b9c-280">
            <paramref name="key" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-280">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="68b9c-281">O comparador gera uma exceção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-281">The comparer throws an exception.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.SortedList.Contains(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.ContainsValue(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfKey(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsValue">
      <MemberSignature Language="C#" Value="public virtual bool ContainsValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.ContainsValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsValue (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsValue(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="68b9c-282">O valor a ser localizado no objeto <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-282">The value to locate in the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
          <span data-ttu-id="68b9c-283">O valor pode ser <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-283">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68b9c-284">Determina se um objeto <see cref="T:System.Collections.SortedList" /> contém um valor específico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-284">Determines whether a <see cref="T:System.Collections.SortedList" /> object contains a specific value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="68b9c-285">
            <see langword="true" /> se o objeto <see cref="T:System.Collections.SortedList" /> contiver um elemento com o <paramref name="value" /> especificado, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-285">
              <see langword="true" /> if the <see cref="T:System.Collections.SortedList" /> object contains an element with the specified <paramref name="value" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b9c-286">Os valores dos elementos do <xref:System.Collections.SortedList> objeto são comparados com o valor especificado usando o <xref:System.Object.Equals%2A> método.</span><span class="sxs-lookup"><span data-stu-id="68b9c-286">The values of the elements of the <xref:System.Collections.SortedList> object are compared to the specified value using the <xref:System.Object.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="68b9c-287">Esse método executa uma pesquisa linear; Portanto, o tempo médio de execução é proporcional ao <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="68b9c-287">This method performs a linear search; therefore, the average execution time is proportional to <xref:System.Collections.SortedList.Count%2A>.</span></span> <span data-ttu-id="68b9c-288">Ou seja, esse método é um O (`n`) operação, onde `n` é <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="68b9c-288">That is, this method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
 <span data-ttu-id="68b9c-289">Começando pelo .NET Framework 2.0, esse método usa os métodos <xref:System.Object.Equals%2A> e <xref:System.IComparable.CompareTo%2A> do objeto da coleção em `item` para determinar se o item existe.</span><span class="sxs-lookup"><span data-stu-id="68b9c-289">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="68b9c-290">Em versões anteriores do .NET Framework, essa decisão era tomada usando-se os métodos <xref:System.Object.Equals%2A> e <xref:System.IComparable.CompareTo%2A> do parâmetro `item` nos objetos na coleção.</span><span class="sxs-lookup"><span data-stu-id="68b9c-290">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68b9c-291">O exemplo de código a seguir mostra como determinar se um <xref:System.Collections.SortedList> objeto contém um elemento específico.</span><span class="sxs-lookup"><span data-stu-id="68b9c-291">The following code example shows how to determine whether a <xref:System.Collections.SortedList> object contains a specific element.</span></span>  
  
 [!code-cpp[Classic SortedList.Contains Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.SortedList.ContainsKey(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfValue(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int arrayIndex);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="68b9c-292">O <see cref="T:System.Array" /> unidimensional que é o destino dos objetos <see cref="T:System.Collections.DictionaryEntry" /> copiados de <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-292">The one-dimensional <see cref="T:System.Array" /> object that is the destination of the <see cref="T:System.Collections.DictionaryEntry" /> objects copied from <see cref="T:System.Collections.SortedList" />.</span>
          </span>
          <span data-ttu-id="68b9c-293">O <see cref="T:System.Array" /> deve ter indexação com base em zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-293">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="arrayIndex">
          <span data-ttu-id="68b9c-294">O índice baseado em zero na <c>array</c> na qual a cópia começa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-294">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68b9c-295">Copia <see cref="T:System.Collections.SortedList" /> elementos para um objeto <see cref="T:System.Array" /> unidimensional, iniciando no índice especificado na matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-295">Copies <see cref="T:System.Collections.SortedList" /> elements to a one-dimensional <see cref="T:System.Array" /> object, starting at the specified index in the array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b9c-296">Os pares chave/valor são copiados para o <xref:System.Array> objeto na mesma ordem em que o enumerador que itera por meio de <xref:System.Collections.SortedList> objeto.</span><span class="sxs-lookup"><span data-stu-id="68b9c-296">The key/value pairs are copied to the <xref:System.Array> object in the same order in which the enumerator iterates through the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="68b9c-297">Para copiar somente as chaves de <xref:System.Collections.SortedList>, use `SortedList.Keys.CopyTo`.</span><span class="sxs-lookup"><span data-stu-id="68b9c-297">To copy only the keys in the <xref:System.Collections.SortedList>, use `SortedList.Keys.CopyTo`.</span></span>  
  
 <span data-ttu-id="68b9c-298">Para copiar somente os valores no <xref:System.Collections.SortedList>, use `SortedList.Values.CopyTo`.</span><span class="sxs-lookup"><span data-stu-id="68b9c-298">To copy only the values in the <xref:System.Collections.SortedList>, use `SortedList.Values.CopyTo`.</span></span>  
  
 <span data-ttu-id="68b9c-299">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="68b9c-299">This method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68b9c-300">O exemplo de código a seguir mostra como copiar os valores em uma <xref:System.Collections.SortedList> objeto em um unidimensional <xref:System.Array> objeto.</span><span class="sxs-lookup"><span data-stu-id="68b9c-300">The following code example shows how to copy the values in a <xref:System.Collections.SortedList> object into a one-dimensional <xref:System.Array> object.</span></span>  
  
 [!code-cpp[Classic SortedList.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="68b9c-301">
            <paramref name="array" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-301">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="68b9c-302">
            <paramref name="arrayIndex" /> é menor que zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-302">
              <paramref name="arrayIndex" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="68b9c-303">
            <paramref name="array" /> é multidimensional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-303">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="68b9c-304">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-304">-or-</span>
          </span>
          <span data-ttu-id="68b9c-305">O número de elementos no objeto de origem <see cref="T:System.Collections.SortedList" /> é maior do que o espaço disponível de <paramref name="arrayIndex" /> até o final do <paramref name="array" /> de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-305">The number of elements in the source <see cref="T:System.Collections.SortedList" /> object is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="68b9c-306">O tipo do <see cref="T:System.Collections.SortedList" /> de origem não pode ser automaticamente convertido para o tipo de <paramref name="array" /> de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-306">The type of the source <see cref="T:System.Collections.SortedList" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Array" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="M:System.Collections.SortedList.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="68b9c-307">Obtém o número de elementos contidos em um objeto <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-307">Gets the number of elements contained in a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="68b9c-308">O número de elementos contidos no objeto <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-308">The number of elements contained in the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b9c-309">Cada elemento é um par chave/valor que pode ser acessado como uma <xref:System.Collections.DictionaryEntry> objeto.</span><span class="sxs-lookup"><span data-stu-id="68b9c-309">Each element is a key/value pair that can be accessed as a <xref:System.Collections.DictionaryEntry> object.</span></span>  
  
 <span data-ttu-id="68b9c-310"><xref:System.Collections.SortedList.Capacity%2A> é o número de elementos que o <xref:System.Collections.SortedList> objeto pode armazenar.</span><span class="sxs-lookup"><span data-stu-id="68b9c-310"><xref:System.Collections.SortedList.Capacity%2A> is the number of elements that the <xref:System.Collections.SortedList> object can store.</span></span> <span data-ttu-id="68b9c-311"><xref:System.Collections.SortedList.Count%2A> é o número de elementos que estão realmente no <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="68b9c-311"><xref:System.Collections.SortedList.Count%2A> is the number of elements that are actually in the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="68b9c-312"><xref:System.Collections.SortedList.Capacity%2A> sempre é maior que ou igual a <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="68b9c-312"><xref:System.Collections.SortedList.Capacity%2A> is always greater than or equal to <xref:System.Collections.SortedList.Count%2A>.</span></span> <span data-ttu-id="68b9c-313">Se <xref:System.Collections.SortedList.Count%2A> excede <xref:System.Collections.SortedList.Capacity%2A> durante a adição de elementos, a capacidade é aumentada automaticamente realocando a matriz interna antes de copiar os elementos antigos e adição de novos elementos.</span><span class="sxs-lookup"><span data-stu-id="68b9c-313">If <xref:System.Collections.SortedList.Count%2A> exceeds <xref:System.Collections.SortedList.Capacity%2A> while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="68b9c-314">A recuperação do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="68b9c-314">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.SortedList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName="GetByIndex">
      <MemberSignature Language="C#" Value="public virtual object GetByIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetByIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.GetByIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetByIndex (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetByIndex(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="68b9c-315">O índice baseado em zero do valor a ser obtido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-315">The zero-based index of the value to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68b9c-316">Obtém o valor no índice especificado de um objeto <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-316">Gets the value at the specified index of a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="68b9c-317">O valor no índice especificado do objeto <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-317">The value at the specified index of the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b9c-318">A sequência de índice é baseada na sequência de classificação.</span><span class="sxs-lookup"><span data-stu-id="68b9c-318">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="68b9c-319">Quando um elemento é adicionado, ele será inserido na <xref:System.Collections.SortedList> na classificação correta ordem e a indexação é ajustada de acordo.</span><span class="sxs-lookup"><span data-stu-id="68b9c-319">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="68b9c-320">Quando um elemento for removido, a indexação também se ajusta.</span><span class="sxs-lookup"><span data-stu-id="68b9c-320">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="68b9c-321">Portanto, o índice de um par chave/valor específico pode alterar como os elementos são adicionados ou removidos do <xref:System.Collections.SortedList> objeto.</span><span class="sxs-lookup"><span data-stu-id="68b9c-321">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="68b9c-322">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="68b9c-322">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68b9c-323">O exemplo de código a seguir mostra como obter uma ou todas as chaves ou valores em uma <xref:System.Collections.SortedList> objeto.</span><span class="sxs-lookup"><span data-stu-id="68b9c-323">The following code example shows how to get one or all the keys or values in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.GetByIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="68b9c-324">
            <paramref name="index" /> está fora do intervalo de índices válidos para o objeto <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-324">
              <paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.SortedList.IndexOfKey(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfValue(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="68b9c-325">Retorna um objeto <see cref="T:System.Collections.IDictionaryEnumerator" /> que itera por um objeto <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-325">Returns an <see cref="T:System.Collections.IDictionaryEnumerator" /> object that iterates through a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="68b9c-326">Um objeto <see cref="T:System.Collections.IDictionaryEnumerator" /> para o objeto <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-326">An <see cref="T:System.Collections.IDictionaryEnumerator" /> object for the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b9c-327">O `foreach` instrução de linguagem c# (`for each` no Visual Basic) oculta a complexidade dos enumeradores.</span><span class="sxs-lookup"><span data-stu-id="68b9c-327">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="68b9c-328">Portanto, o uso de `foreach` é recomendado, em vez de manipular diretamente o enumerador.</span><span class="sxs-lookup"><span data-stu-id="68b9c-328">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="68b9c-329">Os enumeradores podem ser usados para ler os dados na coleção, mas não podem ser usados para modificar a coleção subjacente.</span><span class="sxs-lookup"><span data-stu-id="68b9c-329">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="68b9c-330">Inicialmente, o enumerador é posicionado antes do primeiro elemento da coleção.</span><span class="sxs-lookup"><span data-stu-id="68b9c-330">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="68b9c-331"><xref:System.Collections.IEnumerator.Reset%2A> também traz o enumerador de volta para essa posição.</span><span class="sxs-lookup"><span data-stu-id="68b9c-331"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="68b9c-332">Nesta posição, <xref:System.Collections.IEnumerator.Current%2A> está indefinido.</span><span class="sxs-lookup"><span data-stu-id="68b9c-332">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="68b9c-333">Por isso, você deve chamar <xref:System.Collections.IEnumerator.MoveNext%2A> para avançar o enumerador até o primeiro elemento da coleção antes de ler o valor de <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="68b9c-333">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="68b9c-334"><xref:System.Collections.IEnumerator.Current%2A> retorna o mesmo objeto até <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> ser chamado.</span><span class="sxs-lookup"><span data-stu-id="68b9c-334"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="68b9c-335"><xref:System.Collections.IEnumerator.MoveNext%2A> define <xref:System.Collections.IEnumerator.Current%2A> como o próximo elemento.</span><span class="sxs-lookup"><span data-stu-id="68b9c-335"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="68b9c-336">Caso <xref:System.Collections.IEnumerator.MoveNext%2A> passe o final da coleção, o enumerador é posicionado após o último elemento na coleção e <xref:System.Collections.IEnumerator.MoveNext%2A> retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="68b9c-336">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="68b9c-337">Quando o enumerador está nessa posição, as chamadas subsequentes para <xref:System.Collections.IEnumerator.MoveNext%2A> também retornam `false`.</span><span class="sxs-lookup"><span data-stu-id="68b9c-337">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="68b9c-338">Caso a última chamada para <xref:System.Collections.IEnumerator.MoveNext%2A> tenha retornado `false`, <xref:System.Collections.IEnumerator.Current%2A> está indefinido.</span><span class="sxs-lookup"><span data-stu-id="68b9c-338">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="68b9c-339">Para definir <xref:System.Collections.IEnumerator.Current%2A> como o primeiro elemento da coleção novamente, é possível chamar <xref:System.Collections.IEnumerator.Reset%2A> seguido de <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="68b9c-339">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="68b9c-340">Um enumerador permanece válido desde que a coleção continue inalterada.</span><span class="sxs-lookup"><span data-stu-id="68b9c-340">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="68b9c-341">Se forem feitas alterações na coleção, como adicionar, modificar ou excluir elementos, o enumerador será invalidado de maneira irrevogável e seu comportamento permanecerá indefinido.</span><span class="sxs-lookup"><span data-stu-id="68b9c-341">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="68b9c-342">O enumerador não tem acesso exclusivo à coleção; por isso, a enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="68b9c-342">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="68b9c-343">Para garantir acesso thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração.</span><span class="sxs-lookup"><span data-stu-id="68b9c-343">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="68b9c-344">Para permitir que a coleção a ser acessado por vários threads para leitura e gravação, você deve implementar sua sincronização.</span><span class="sxs-lookup"><span data-stu-id="68b9c-344">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="68b9c-345">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="68b9c-345">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetKey">
      <MemberSignature Language="C#" Value="public virtual object GetKey (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetKey(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.GetKey(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKey (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetKey(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="68b9c-346">O índice de base zero da chave a ser obtida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-346">The zero-based index of the key to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68b9c-347">Obtém a chave no índice especificado de um objeto <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-347">Gets the key at the specified index of a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="68b9c-348">A chave no índice especificado do objeto <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-348">The key at the specified index of the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b9c-349">A sequência de índice é baseada na sequência de classificação.</span><span class="sxs-lookup"><span data-stu-id="68b9c-349">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="68b9c-350">Quando um elemento é adicionado, ele será inserido na <xref:System.Collections.SortedList> na classificação correta ordem e a indexação é ajustada de acordo.</span><span class="sxs-lookup"><span data-stu-id="68b9c-350">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="68b9c-351">Quando um elemento for removido, a indexação também se ajusta.</span><span class="sxs-lookup"><span data-stu-id="68b9c-351">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="68b9c-352">Portanto, o índice de um par chave/valor específico pode alterar como os elementos são adicionados ou removidos do <xref:System.Collections.SortedList> objeto.</span><span class="sxs-lookup"><span data-stu-id="68b9c-352">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="68b9c-353">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="68b9c-353">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68b9c-354">O exemplo de código a seguir mostra como obter uma ou todas as chaves ou valores em uma <xref:System.Collections.SortedList> objeto.</span><span class="sxs-lookup"><span data-stu-id="68b9c-354">The following code example shows how to get one or all the keys or values in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.GetByIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="68b9c-355">
            <paramref name="index" /> está fora do intervalo de índices válidos para o objeto <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-355">
              <paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetKeyList">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IList GetKeyList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IList GetKeyList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.GetKeyList" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKeyList () As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IList ^ GetKeyList();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="68b9c-356">Obtém as chaves em um objeto <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-356">Gets the keys in a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="68b9c-357">Um objeto <see cref="T:System.Collections.IList" /> que contém as chaves no objeto <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-357">An <see cref="T:System.Collections.IList" /> object containing the keys in the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b9c-358">Retornado <xref:System.Collections.IList> objeto é uma exibição somente leitura das chaves do <xref:System.Collections.SortedList> objeto.</span><span class="sxs-lookup"><span data-stu-id="68b9c-358">The returned <xref:System.Collections.IList> object is a read-only view of the keys of the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="68b9c-359">As modificações feitas subjacente <xref:System.Collections.SortedList> são imediatamente refletidos no <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="68b9c-359">Modifications made to the underlying <xref:System.Collections.SortedList> are immediately reflected in the <xref:System.Collections.IList>.</span></span>  
  
 <span data-ttu-id="68b9c-360">Os elementos de retornado <xref:System.Collections.IList> são classificados na mesma ordem que as chaves dos <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="68b9c-360">The elements of the returned <xref:System.Collections.IList> are sorted in the same order as the keys of the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="68b9c-361">Esse método é semelhante do <xref:System.Collections.SortedList.Keys%2A> propriedade, mas retorna um <xref:System.Collections.IList> do objeto, em vez de um <xref:System.Collections.ICollection> objeto.</span><span class="sxs-lookup"><span data-stu-id="68b9c-361">This method is similar to the <xref:System.Collections.SortedList.Keys%2A> property, but returns an <xref:System.Collections.IList> object instead of an <xref:System.Collections.ICollection> object.</span></span>  
  
 <span data-ttu-id="68b9c-362">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="68b9c-362">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68b9c-363">O exemplo de código a seguir mostra como obter uma ou todas as chaves ou valores em uma <xref:System.Collections.SortedList> objeto.</span><span class="sxs-lookup"><span data-stu-id="68b9c-363">The following code example shows how to get one or all the keys or values in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.GetByIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.SortedList.GetValueList" />
        <altmember cref="P:System.Collections.SortedList.Keys" />
      </Docs>
    </Member>
    <Member MemberName="GetValueList">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IList GetValueList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IList GetValueList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.GetValueList" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValueList () As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IList ^ GetValueList();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="68b9c-364">Obtém os valores em um objeto <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-364">Gets the values in a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="68b9c-365">Um objeto <see cref="T:System.Collections.IList" /> que contém os valores no objeto <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-365">An <see cref="T:System.Collections.IList" /> object containing the values in the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b9c-366">Retornado <xref:System.Collections.IList> objeto é uma exibição somente leitura dos valores da <xref:System.Collections.SortedList> objeto.</span><span class="sxs-lookup"><span data-stu-id="68b9c-366">The returned <xref:System.Collections.IList> object is a read-only view of the values of the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="68b9c-367">As modificações feitas subjacente <xref:System.Collections.SortedList> são imediatamente refletidos no <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="68b9c-367">Modifications made to the underlying <xref:System.Collections.SortedList> are immediately reflected in the <xref:System.Collections.IList>.</span></span>  
  
 <span data-ttu-id="68b9c-368">Os elementos de retornado <xref:System.Collections.IList> são classificados na mesma ordem que os valores de <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="68b9c-368">The elements of the returned <xref:System.Collections.IList> are sorted in the same order as the values of the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="68b9c-369">Esse método é semelhante do <xref:System.Collections.SortedList.Values%2A> propriedade, mas retorna um <xref:System.Collections.IList> do objeto, em vez de um <xref:System.Collections.ICollection> objeto.</span><span class="sxs-lookup"><span data-stu-id="68b9c-369">This method is similar to the <xref:System.Collections.SortedList.Values%2A> property, but returns an <xref:System.Collections.IList> object instead of an <xref:System.Collections.ICollection> object.</span></span>  
  
 <span data-ttu-id="68b9c-370">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="68b9c-370">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68b9c-371">O exemplo de código a seguir mostra como obter uma ou todas as chaves ou valores em uma <xref:System.Collections.SortedList> objeto.</span><span class="sxs-lookup"><span data-stu-id="68b9c-371">The following code example shows how to get one or all the keys or values in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.GetByIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.SortedList.GetKeyList" />
        <altmember cref="P:System.Collections.SortedList.Values" />
      </Docs>
    </Member>
    <Member MemberName="IndexOfKey">
      <MemberSignature Language="C#" Value="public virtual int IndexOfKey (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOfKey(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.IndexOfKey(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOfKey (key As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOfKey(System::Object ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="68b9c-372">A chave a ser localizada no objeto <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-372">The key to locate in the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68b9c-373">Retorna o índice baseado em zero da chave especificada em um objeto <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-373">Returns the zero-based index of the specified key in a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="68b9c-374">O índice baseado em zero do parâmetro <paramref name="key" />, se <paramref name="key" /> for encontrado no objeto <see cref="T:System.Collections.SortedList" />; caso contrário, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-374">The zero-based index of the <paramref name="key" /> parameter, if <paramref name="key" /> is found in the <see cref="T:System.Collections.SortedList" /> object; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b9c-375">Os elementos de um <xref:System.Collections.SortedList> objeto são classificados pelas chaves de um acordo com um determinado <xref:System.Collections.IComparer> implementação especificado quando o <xref:System.Collections.SortedList> é criado ou acordo para o <xref:System.IComparable> as próprias chaves a implementação.</span><span class="sxs-lookup"><span data-stu-id="68b9c-375">The elements of a <xref:System.Collections.SortedList> object are sorted by the keys either according to a specific <xref:System.Collections.IComparer> implementation specified when the <xref:System.Collections.SortedList> is created, or according to the <xref:System.IComparable> implementation provided by the keys themselves.</span></span>  
  
 <span data-ttu-id="68b9c-376">A sequência de índice é baseada na sequência de classificação.</span><span class="sxs-lookup"><span data-stu-id="68b9c-376">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="68b9c-377">Quando um elemento é adicionado, ele será inserido na <xref:System.Collections.SortedList> na classificação correta ordem e a indexação é ajustada de acordo.</span><span class="sxs-lookup"><span data-stu-id="68b9c-377">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="68b9c-378">Quando um elemento for removido, a indexação também se ajusta.</span><span class="sxs-lookup"><span data-stu-id="68b9c-378">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="68b9c-379">Portanto, o índice de um par chave/valor específico pode alterar como os elementos são adicionados ou removidos do <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="68b9c-379">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="68b9c-380">Esse método usa um algoritmo de pesquisa binário; Portanto, esse método é um O (log `n`) operação, onde `n` é <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="68b9c-380">This method uses a binary search algorithm; therefore, this method is an O(log `n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
 <span data-ttu-id="68b9c-381">Começando pelo .NET Framework 2.0, esse método usa os métodos <xref:System.Object.Equals%2A> e <xref:System.IComparable.CompareTo%2A> do objeto da coleção em `item` para determinar se o item existe.</span><span class="sxs-lookup"><span data-stu-id="68b9c-381">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="68b9c-382">Em versões anteriores do .NET Framework, essa decisão era tomada usando-se os métodos <xref:System.Object.Equals%2A> e <xref:System.IComparable.CompareTo%2A> do parâmetro `item` nos objetos na coleção.</span><span class="sxs-lookup"><span data-stu-id="68b9c-382">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68b9c-383">O exemplo de código a seguir mostra como determinar o índice de uma chave ou um valor em uma <xref:System.Collections.SortedList> objeto.</span><span class="sxs-lookup"><span data-stu-id="68b9c-383">The following code example shows how to determine the index of a key or a value in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.IndexOfKey Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IndexOfKey Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.IndexOfKey Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IndexOfKey Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.IndexOfKey Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IndexOfKey Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="68b9c-384">
            <paramref name="key" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-384">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="68b9c-385">O comparador gera uma exceção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-385">The comparer throws an exception.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.SortedList.ContainsKey(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfValue(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOfValue">
      <MemberSignature Language="C#" Value="public virtual int IndexOfValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOfValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.IndexOfValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOfValue (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOfValue(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="68b9c-386">O valor a ser localizado no objeto <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-386">The value to locate in the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
          <span data-ttu-id="68b9c-387">O valor pode ser <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-387">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68b9c-388">Retorna o índice baseado em zero da primeira ocorrência do valor especificado em um objeto <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-388">Returns the zero-based index of the first occurrence of the specified value in a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="68b9c-389">O índice baseado em zero da primeira ocorrência do parâmetro <paramref name="value" />, se <paramref name="value" /> for encontrado no objeto <see cref="T:System.Collections.SortedList" />; caso contrário, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-389">The zero-based index of the first occurrence of the <paramref name="value" /> parameter, if <paramref name="value" /> is found in the <see cref="T:System.Collections.SortedList" /> object; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b9c-390">A sequência de índice é baseada na sequência de classificação.</span><span class="sxs-lookup"><span data-stu-id="68b9c-390">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="68b9c-391">Quando um elemento é adicionado, ele será inserido na <xref:System.Collections.SortedList> na classificação correta ordem e a indexação é ajustada de acordo.</span><span class="sxs-lookup"><span data-stu-id="68b9c-391">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="68b9c-392">Quando um elemento for removido, a indexação também se ajusta.</span><span class="sxs-lookup"><span data-stu-id="68b9c-392">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="68b9c-393">Portanto, o índice de um par chave/valor específico pode alterar como os elementos são adicionados ou removidos do <xref:System.Collections.SortedList> objeto.</span><span class="sxs-lookup"><span data-stu-id="68b9c-393">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="68b9c-394">Os valores dos elementos do <xref:System.Collections.SortedList> são comparados com o valor especificado usando o <xref:System.Object.Equals%2A> método.</span><span class="sxs-lookup"><span data-stu-id="68b9c-394">The values of the elements of the <xref:System.Collections.SortedList> are compared to the specified value using the <xref:System.Object.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="68b9c-395">Esse método usa uma pesquisa linear; Portanto, esse método é um O (`n`) operação, onde `n` é <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="68b9c-395">This method uses a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
 <span data-ttu-id="68b9c-396">Começando pelo .NET Framework 2.0, esse método usa os métodos <xref:System.Object.Equals%2A> e <xref:System.IComparable.CompareTo%2A> do objeto da coleção em `item` para determinar se o item existe.</span><span class="sxs-lookup"><span data-stu-id="68b9c-396">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="68b9c-397">Em versões anteriores do .NET Framework, essa decisão era tomada usando-se os métodos <xref:System.Object.Equals%2A> e <xref:System.IComparable.CompareTo%2A> do parâmetro `item` nos objetos na coleção.</span><span class="sxs-lookup"><span data-stu-id="68b9c-397">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68b9c-398">O exemplo de código a seguir mostra como determinar o índice de uma chave ou um valor em uma <xref:System.Collections.SortedList> objeto.</span><span class="sxs-lookup"><span data-stu-id="68b9c-398">The following code example shows how to determine the index of a key or a value in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.IndexOfKey Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IndexOfKey Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.IndexOfKey Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IndexOfKey Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.IndexOfKey Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IndexOfKey Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.SortedList.ContainsValue(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfKey(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="public virtual bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="68b9c-399">Obtém um valor que indica se o objeto <see cref="T:System.Collections.SortedList" /> tem um tamanho fixo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-399">Gets a value indicating whether a <see cref="T:System.Collections.SortedList" /> object has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="68b9c-400">
            <see langword="true" /> Se o <see cref="T:System.Collections.SortedList" /> objeto tem um fixa tamanho; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-400">
              <see langword="true" /> if the <see cref="T:System.Collections.SortedList" /> object has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="68b9c-401">O padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-401">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b9c-402">Uma coleção com um tamanho fixo não permite a adição ou remoção de elementos após a coleção é criada, mas permitir a modificação de elementos existentes.</span><span class="sxs-lookup"><span data-stu-id="68b9c-402">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but does allow the modification of existing elements.</span></span>  
  
 <span data-ttu-id="68b9c-403">Uma coleção com um tamanho fixo é simplesmente uma coleção com um wrapper que impede a adição e a remoção de elementos; por isso, caso as alterações sejam feitas na coleção subjacente, inclusive a adição ou a remoção de elementos, a coleção de tamanho fixo reflete essas alterações.</span><span class="sxs-lookup"><span data-stu-id="68b9c-403">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="68b9c-404">A recuperação do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="68b9c-404">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="68b9c-405">Obtém um valor que indica se um objeto <see cref="T:System.Collections.SortedList" /> é somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-405">Gets a value indicating whether a <see cref="T:System.Collections.SortedList" /> object is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="68b9c-406">
            <see langword="true" /> se o objeto <see cref="T:System.Collections.SortedList" /> for somente leitura; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-406">
              <see langword="true" /> if the <see cref="T:System.Collections.SortedList" /> object is read-only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="68b9c-407">O padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-407">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b9c-408">Uma coleção que seja somente leitura não permite a adição, a remoção ou a modificação de elementos após a coleção ser criada.</span><span class="sxs-lookup"><span data-stu-id="68b9c-408">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="68b9c-409">Uma coleção somente leitura é apenas uma coleção com um wrapper que impede a modificação da coleção; por isso, caso as alterações sejam feitas na coleção subjacente, a coleção somente leitura reflete as alterações.</span><span class="sxs-lookup"><span data-stu-id="68b9c-409">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="68b9c-410">A recuperação do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="68b9c-410">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="68b9c-411">Obtém um valor que indica se o acesso a um objeto <see cref="T:System.Collections.SortedList" /> é sincronizado (thread-safe).</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-411">Gets a value indicating whether access to a <see cref="T:System.Collections.SortedList" /> object is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="68b9c-412">
            <see langword="true" /> Se acessar para o <see cref="T:System.Collections.SortedList" /> objeto for sincronizado (thread-safe); caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-412">
              <see langword="true" /> if access to the <see cref="T:System.Collections.SortedList" /> object is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="68b9c-413">O padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-413">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b9c-414">Para garantir a segurança de thread de um <xref:System.Collections.SortedList> do objeto, todas as operações devem ser feitas por meio do wrapper retornado pelo <xref:System.Collections.SortedList.Synchronized%2A> método.</span><span class="sxs-lookup"><span data-stu-id="68b9c-414">To guarantee the thread safety of a <xref:System.Collections.SortedList> object, all operations must be done through the wrapper returned by the <xref:System.Collections.SortedList.Synchronized%2A> method.</span></span>  
  
 <span data-ttu-id="68b9c-415">A enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="68b9c-415">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="68b9c-416">Mesmo quando uma coleção está sincronizada, outros threads ainda podem modificar a coleção, o que faz o enumerador lançar uma exceção.</span><span class="sxs-lookup"><span data-stu-id="68b9c-416">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="68b9c-417">Para garantir thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração ou verificar as exceções resultantes das alterações feitas por outros threads.</span><span class="sxs-lookup"><span data-stu-id="68b9c-417">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68b9c-418">O exemplo de código a seguir mostra como bloquear uma coleção usando o <xref:System.Collections.SortedList.SyncRoot%2A> propriedade durante toda a enumeração.</span><span class="sxs-lookup"><span data-stu-id="68b9c-418">The following code example shows how to lock a collection using the <xref:System.Collections.SortedList.SyncRoot%2A> property during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="68b9c-419">A recuperação do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="68b9c-419">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 <span data-ttu-id="68b9c-420">O exemplo de código a seguir mostra como sincronizar um <xref:System.Collections.SortedList> de objeto, determinar se um <xref:System.Collections.SortedList> está sincronizado e usar um sincronizado <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="68b9c-420">The following code example shows how to synchronize a <xref:System.Collections.SortedList> object, determine whether a <xref:System.Collections.SortedList> is synchronized, and use a synchronized <xref:System.Collections.SortedList>.</span></span>  
  
 [!code-cpp[Classic SortedList.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.SortedList.SyncRoot" />
        <altmember cref="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual object this[object key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(object)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(key As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::Object ^] { System::Object ^ get(System::Object ^ key); void set(System::Object ^ key, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Item(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="68b9c-421">A chave associada com o valor a ser obtido ou definido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-421">The key associated with the value to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68b9c-422">Obtém e define o valor associado com uma chave específica em um objeto <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-422">Gets and sets the value associated with a specific key in a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="68b9c-423">O valor associado ao parâmetro <paramref name="key" /> no objeto <see cref="T:System.Collections.SortedList" /> se <paramref name="key" /> for localizado; caso contrário, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-423">The value associated with the <paramref name="key" /> parameter in the <see cref="T:System.Collections.SortedList" /> object, if <paramref name="key" /> is found; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b9c-424">Você pode usar o <xref:System.Collections.SortedList.Item%2A> propriedade para acessar um elemento específico em uma coleção, especificando a seguinte sintaxe: `myCollection[key]`.</span><span class="sxs-lookup"><span data-stu-id="68b9c-424">You can use the <xref:System.Collections.SortedList.Item%2A> property to access a specific element in a collection by specifying the following syntax: `myCollection[key]`.</span></span>  
  
 <span data-ttu-id="68b9c-425">Você também pode usar essa propriedade para adicionar novos elementos, definindo o valor de uma chave que não existe no <xref:System.Collections.SortedList> objeto (por exemplo, `myCollection["myNonexistentKey"] = myValue)`.</span><span class="sxs-lookup"><span data-stu-id="68b9c-425">You can also use this property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.SortedList> object (for example, `myCollection["myNonexistentKey"] = myValue)`.</span></span> <span data-ttu-id="68b9c-426">No entanto, se a chave especificada já existe no <xref:System.Collections.SortedList>, a definição de <xref:System.Collections.SortedList.Item%2A> propriedade substitui o valor antigo.</span><span class="sxs-lookup"><span data-stu-id="68b9c-426">However, if the specified key already exists in the <xref:System.Collections.SortedList>, setting the <xref:System.Collections.SortedList.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="68b9c-427">Em contraste, o <xref:System.Collections.SortedList.Add%2A> método não modifica os elementos existentes.</span><span class="sxs-lookup"><span data-stu-id="68b9c-427">In contrast, the <xref:System.Collections.SortedList.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="68b9c-428">Uma chave não pode ser `null`, mas pode ser um valor.</span><span class="sxs-lookup"><span data-stu-id="68b9c-428">A key cannot be `null`, but a value can be.</span></span> <span data-ttu-id="68b9c-429">Para distinguir entre `null` que é retornado porque a chave especificada não foi encontrada e `null` que é retornado porque o valor da chave especificada é `null`, use o <xref:System.Collections.SortedList.Contains%2A> método ou o <xref:System.Collections.SortedList.ContainsKey%2A> método para determinar se a chave existe na lista.</span><span class="sxs-lookup"><span data-stu-id="68b9c-429">To distinguish between `null` that is returned because the specified key is not found and `null` that is returned because the value of the specified key is `null`, use the <xref:System.Collections.SortedList.Contains%2A> method or the <xref:System.Collections.SortedList.ContainsKey%2A> method to determine if the key exists in the list.</span></span>  
  
 <span data-ttu-id="68b9c-430">Os elementos de um <xref:System.Collections.SortedList> são classificados pelas chaves de um acordo com um determinado <xref:System.Collections.IComparer> implementação especificado quando o <xref:System.Collections.SortedList> é criado ou acordo para o <xref:System.IComparable> as próprias chaves a implementação.</span><span class="sxs-lookup"><span data-stu-id="68b9c-430">The elements of a <xref:System.Collections.SortedList> are sorted by the keys either according to a specific <xref:System.Collections.IComparer> implementation specified when the <xref:System.Collections.SortedList> is created or according to the <xref:System.IComparable> implementation provided by the keys themselves.</span></span>  
  
 <span data-ttu-id="68b9c-431">A linguagem c# usa a palavra-chave para definir os indexadores em vez de implementar o <xref:System.Collections.SortedList.Keys%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="68b9c-431">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.SortedList.Keys%2A> property.</span></span> <span data-ttu-id="68b9c-432">Visual Basic implementa <xref:System.Collections.SortedList.Item%2A> como uma propriedade padrão, que fornece a mesma funcionalidade de indexação.</span><span class="sxs-lookup"><span data-stu-id="68b9c-432">Visual Basic implements <xref:System.Collections.SortedList.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="68b9c-433">Recuperar o valor dessa propriedade é um O (log `n`) operação, onde `n` é <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="68b9c-433">Retrieving the value of this property is an O(log `n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span> <span data-ttu-id="68b9c-434">Configuração da propriedade é um O (log `n`) operação se a chave já está no <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="68b9c-434">Setting the property is an O(log `n`) operation if the key is already in the <xref:System.Collections.SortedList>.</span></span> <span data-ttu-id="68b9c-435">Se a chave não estiver na lista, a configuração da propriedade é um O (`n`) a operação de dados classificados e O (log `n`) se o novo elemento é adicionado ao final da lista.</span><span class="sxs-lookup"><span data-stu-id="68b9c-435">If the key is not in the list, setting the property is an O(`n`) operation for unsorted data, or O(log `n`) if the new element is added at the end of the list.</span></span> <span data-ttu-id="68b9c-436">Se a inserção faz com que um redimensionamento, a operação é O (`n`).</span><span class="sxs-lookup"><span data-stu-id="68b9c-436">If insertion causes a resize, the operation is O(`n`).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="68b9c-437">
            <paramref name="key" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-437">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="68b9c-438">A propriedade é definida e o objeto <see cref="T:System.Collections.SortedList" /> é somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-438">The property is set and the <see cref="T:System.Collections.SortedList" /> object is read-only.</span>
          </span>
          <span data-ttu-id="68b9c-439">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-439">-or-</span>
          </span>
          <span data-ttu-id="68b9c-440">A propriedade é definida, <paramref name="key" /> não existe na coleção e o <see cref="T:System.Collections.SortedList" /> tem um tamanho fixo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-440">The property is set, <paramref name="key" /> does not exist in the collection, and the <see cref="T:System.Collections.SortedList" /> has a fixed size.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="68b9c-441">Não há memória suficiente disponível para adicionar o elemento ao <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-441">There is not enough available memory to add the element to the <see cref="T:System.Collections.SortedList" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="68b9c-442">O comparador gera uma exceção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-442">The comparer throws an exception.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.SortedList.Add(System.Object,System.Object)" />
        <altmember cref="M:System.Collections.SortedList.Contains(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.ContainsKey(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.Keys" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Keys As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ Keys { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="68b9c-443">Obtém as chaves em um objeto <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-443">Gets the keys in a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="68b9c-444">Um objeto <see cref="T:System.Collections.ICollection" /> que contém as chaves no objeto <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-444">An <see cref="T:System.Collections.ICollection" /> object containing the keys in the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b9c-445">O <xref:System.Collections.ICollection> objeto é uma exibição somente leitura das chaves do <xref:System.Collections.SortedList> objeto.</span><span class="sxs-lookup"><span data-stu-id="68b9c-445">The <xref:System.Collections.ICollection> object is a read-only view of the keys of the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="68b9c-446">As modificações feitas subjacente <xref:System.Collections.SortedList> são imediatamente refletidos no <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="68b9c-446">Modifications made to the underlying <xref:System.Collections.SortedList> are immediately reflected in the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="68b9c-447">Os elementos do <xref:System.Collections.ICollection> são classificados na mesma ordem que as chaves dos <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="68b9c-447">The elements of the <xref:System.Collections.ICollection> are sorted in the same order as the keys of the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="68b9c-448">Esta propriedade é semelhante de <xref:System.Collections.SortedList.GetKeyList%2A> método, mas retorna um <xref:System.Collections.ICollection> do objeto, em vez de um <xref:System.Collections.IList> objeto.</span><span class="sxs-lookup"><span data-stu-id="68b9c-448">This property is similar to the <xref:System.Collections.SortedList.GetKeyList%2A> method, but returns an <xref:System.Collections.ICollection> object instead of an <xref:System.Collections.IList> object.</span></span>  
  
 <span data-ttu-id="68b9c-449">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="68b9c-449">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.SortedList.Values" />
        <altmember cref="M:System.Collections.SortedList.GetKeyList" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (key As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Object ^ key);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="68b9c-450">A chave do elemento a ser removido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-450">The key of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68b9c-451">Remove o elemento com a chave especificada de um objeto <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-451">Removes the element with the specified key from a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b9c-452">Se o <xref:System.Collections.SortedList> objeto não contém um elemento com a chave especificada, o <xref:System.Collections.SortedList> permanece inalterado.</span><span class="sxs-lookup"><span data-stu-id="68b9c-452">If the <xref:System.Collections.SortedList> object does not contain an element with the specified key, the <xref:System.Collections.SortedList> remains unchanged.</span></span> <span data-ttu-id="68b9c-453">Nenhuma exceção é lançada.</span><span class="sxs-lookup"><span data-stu-id="68b9c-453">No exception is thrown.</span></span>  
  
 <span data-ttu-id="68b9c-454">Em coleções de elementos contíguos, como listas, os elementos que seguem o elemento removido sobem para ocupar o ponto vazio.</span><span class="sxs-lookup"><span data-stu-id="68b9c-454">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="68b9c-455">Caso a coleção seja indexada, os índices dos elementos que são movidos também são atualizados.</span><span class="sxs-lookup"><span data-stu-id="68b9c-455">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="68b9c-456">Este comportamento não se aplica às coleções em que elementos sejam agrupados conceitualmente em buckets, como uma tabela de hash.</span><span class="sxs-lookup"><span data-stu-id="68b9c-456">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="68b9c-457">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="68b9c-457">This method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68b9c-458">O exemplo de código a seguir mostra como remover elementos de uma <xref:System.Collections.SortedList> objeto.</span><span class="sxs-lookup"><span data-stu-id="68b9c-458">The following code example shows how to remove elements from a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.RemoveAt Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.RemoveAt Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.RemoveAt Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.RemoveAt Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.RemoveAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.RemoveAt Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="68b9c-459">
            <paramref name="key" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-459">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="68b9c-460">O objeto <see cref="T:System.Collections.SortedList" /> é somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-460">The <see cref="T:System.Collections.SortedList" /> object is read-only.</span>
          </span>
          <span data-ttu-id="68b9c-461">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-461">-or-</span>
          </span>
          <span data-ttu-id="68b9c-462">O <see cref="T:System.Collections.SortedList" /> tem um tamanho fixo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-462">The <see cref="T:System.Collections.SortedList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.SortedList.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="68b9c-463">O índice de base zero do elemento a ser removido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-463">The zero-based index of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68b9c-464">Remove o elemento no índice especificado de um objeto <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-464">Removes the element at the specified index of a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b9c-465">A sequência de índice é baseada na sequência de classificação.</span><span class="sxs-lookup"><span data-stu-id="68b9c-465">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="68b9c-466">Quando um elemento é adicionado, ele será inserido na <xref:System.Collections.SortedList> na classificação correta ordem e a indexação é ajustada de acordo.</span><span class="sxs-lookup"><span data-stu-id="68b9c-466">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="68b9c-467">Quando um elemento for removido, a indexação também se ajusta.</span><span class="sxs-lookup"><span data-stu-id="68b9c-467">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="68b9c-468">Portanto, o índice de um par chave/valor específico pode alterar como os elementos são adicionados ou removidos do <xref:System.Collections.SortedList> objeto.</span><span class="sxs-lookup"><span data-stu-id="68b9c-468">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="68b9c-469">Em coleções de elementos contíguos, como listas, os elementos que seguem o elemento removido sobem para ocupar o ponto vazio.</span><span class="sxs-lookup"><span data-stu-id="68b9c-469">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="68b9c-470">Caso a coleção seja indexada, os índices dos elementos que são movidos também são atualizados.</span><span class="sxs-lookup"><span data-stu-id="68b9c-470">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="68b9c-471">Este comportamento não se aplica às coleções em que elementos sejam agrupados conceitualmente em buckets, como uma tabela de hash.</span><span class="sxs-lookup"><span data-stu-id="68b9c-471">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="68b9c-472">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="68b9c-472">This method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68b9c-473">O exemplo de código a seguir mostra como remover elementos de uma <xref:System.Collections.SortedList> objeto.</span><span class="sxs-lookup"><span data-stu-id="68b9c-473">The following code example shows how to remove elements from a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.RemoveAt Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.RemoveAt Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.RemoveAt Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.RemoveAt Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.RemoveAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.RemoveAt Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="68b9c-474">
            <paramref name="index" /> está fora do intervalo de índices válidos para o objeto <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-474">
              <paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="68b9c-475">O <see cref="T:System.Collections.SortedList" /> é somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-475">The <see cref="T:System.Collections.SortedList" /> is read-only.</span>
          </span>
          <span data-ttu-id="68b9c-476">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-476">-or-</span>
          </span>
          <span data-ttu-id="68b9c-477">O <see cref="T:System.Collections.SortedList" /> tem um tamanho fixo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-477">The <see cref="T:System.Collections.SortedList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.SortedList.Remove(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="SetByIndex">
      <MemberSignature Language="C#" Value="public virtual void SetByIndex (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetByIndex(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetByIndex (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetByIndex(int index, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="68b9c-478">O índice baseado em zero no qual salvar <c>value</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-478">The zero-based index at which to save <c>value</c>.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="68b9c-479">O <see cref="T:System.Object" /> a salvar no objeto <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-479">The <see cref="T:System.Object" /> to save into the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
          <span data-ttu-id="68b9c-480">O valor pode ser <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-480">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68b9c-481">Substitui o valor em um índice específico em um objeto <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-481">Replaces the value at a specific index in a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b9c-482">A sequência de índice é baseada na sequência de classificação.</span><span class="sxs-lookup"><span data-stu-id="68b9c-482">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="68b9c-483">Quando um elemento é adicionado, ele será inserido na <xref:System.Collections.SortedList> na classificação correta ordem e a indexação é ajustada de acordo.</span><span class="sxs-lookup"><span data-stu-id="68b9c-483">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="68b9c-484">Quando um elemento for removido, a indexação também se ajusta.</span><span class="sxs-lookup"><span data-stu-id="68b9c-484">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="68b9c-485">Portanto, o índice de um par chave/valor específico pode alterar como os elementos são adicionados ou removidos do <xref:System.Collections.SortedList> objeto.</span><span class="sxs-lookup"><span data-stu-id="68b9c-485">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="68b9c-486">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="68b9c-486">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68b9c-487">O exemplo de código a seguir mostra como substituir o valor de um elemento existente em um <xref:System.Collections.SortedList> objeto.</span><span class="sxs-lookup"><span data-stu-id="68b9c-487">The following code example shows how to replace the value of an existing element in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.SetByIndex Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.SetByIndex Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.SetByIndex Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.SetByIndex Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.SetByIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.SetByIndex Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="68b9c-488">
            <paramref name="index" /> está fora do intervalo de índices válidos para o objeto <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-488">
              <paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.SortedList.IndexOfKey(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfValue(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.Collections.SortedList Synchronized (System.Collections.SortedList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.SortedList Synchronized(class System.Collections.SortedList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Synchronized (list As SortedList) As SortedList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::SortedList ^ Synchronized(System::Collections::SortedList ^ list);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.SortedList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.SortedList" />
      </Parameters>
      <Docs>
        <param name="list">
          <span data-ttu-id="68b9c-489">O objeto <see cref="T:System.Collections.SortedList" /> a ser sincronizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-489">The <see cref="T:System.Collections.SortedList" /> object to synchronize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68b9c-490">Retorna o wrapper sincronizado (thread-safe) para um objeto <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-490">Returns a synchronized (thread-safe) wrapper for a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="68b9c-491">Um wrapper sincronizado (thread-safe) para o objeto <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-491">A synchronized (thread-safe) wrapper for the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b9c-492">Para garantir a segurança de thread de um <xref:System.Collections.SortedList> do objeto, todas as operações devem ser feitas por meio de apenas esse wrapper.</span><span class="sxs-lookup"><span data-stu-id="68b9c-492">To guarantee the thread safety of a <xref:System.Collections.SortedList> object, all operations must be done through this wrapper only.</span></span>  
  
 <span data-ttu-id="68b9c-493">A enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="68b9c-493">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="68b9c-494">Mesmo quando uma coleção está sincronizada, outros threads ainda podem modificar a coleção, o que faz o enumerador lançar uma exceção.</span><span class="sxs-lookup"><span data-stu-id="68b9c-494">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="68b9c-495">Para garantir thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração ou verificar as exceções resultantes das alterações feitas por outros threads.</span><span class="sxs-lookup"><span data-stu-id="68b9c-495">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68b9c-496">O exemplo de código a seguir mostra como bloquear a coleção usando o <xref:System.Collections.SortedList.SyncRoot%2A> propriedade durante toda a enumeração.</span><span class="sxs-lookup"><span data-stu-id="68b9c-496">The following code example shows how to lock the collection using the <xref:System.Collections.SortedList.SyncRoot%2A> property during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="68b9c-497">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="68b9c-497">This method is an O(1) operation.</span></span>  
  
 <span data-ttu-id="68b9c-498">O exemplo de código a seguir mostra como sincronizar um <xref:System.Collections.SortedList> de objeto, determinar se um <xref:System.Collections.SortedList> está sincronizado e usar um sincronizado <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="68b9c-498">The following code example shows how to synchronize a <xref:System.Collections.SortedList> object, determine whether a <xref:System.Collections.SortedList> is synchronized, and use a synchronized <xref:System.Collections.SortedList>.</span></span>  
  
 [!code-cpp[Classic SortedList.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="68b9c-499">
            <paramref name="list" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-499">
              <paramref name="list" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.SortedList.IsSynchronized" />
        <altmember cref="P:System.Collections.SortedList.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="68b9c-500">Obtém um objeto que pode ser usado para sincronizar o acesso a um objeto <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-500">Gets an object that can be used to synchronize access to a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="68b9c-501">Um objeto que pode ser usado para sincronizar o acesso a <see cref="T:System.Collections.SortedList" /> objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-501">An object that can be used to synchronize access to the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b9c-502">Para criar uma versão sincronizada do <xref:System.Collections.SortedList> de objeto, use o <xref:System.Collections.SortedList.Synchronized%2A> método.</span><span class="sxs-lookup"><span data-stu-id="68b9c-502">To create a synchronized version of the <xref:System.Collections.SortedList> object, use the <xref:System.Collections.SortedList.Synchronized%2A> method.</span></span> <span data-ttu-id="68b9c-503">No entanto, as classes derivadas podem fornecer sua própria versão sincronizada de <xref:System.Collections.SortedList> usando o <xref:System.Collections.SortedList.SyncRoot%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="68b9c-503">However, derived classes can provide their own synchronized version of the <xref:System.Collections.SortedList> using the <xref:System.Collections.SortedList.SyncRoot%2A> property.</span></span> <span data-ttu-id="68b9c-504">O código de sincronização necessário realizar operações no <xref:System.Collections.SortedList.SyncRoot%2A> do <xref:System.Collections.SortedList>, não diretamente no <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="68b9c-504">The synchronizing code must perform operations on the <xref:System.Collections.SortedList.SyncRoot%2A> of the <xref:System.Collections.SortedList>, not directly on the <xref:System.Collections.SortedList>.</span></span> <span data-ttu-id="68b9c-505">Isso garante a operação apropriada das coleções que são derivadas de outros objetos.</span><span class="sxs-lookup"><span data-stu-id="68b9c-505">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="68b9c-506">Especificamente, ele mantém uma sincronização adequada com outros threads que podem ser simultaneamente modificando o <xref:System.Collections.SortedList> objeto.</span><span class="sxs-lookup"><span data-stu-id="68b9c-506">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="68b9c-507">A enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="68b9c-507">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="68b9c-508">Mesmo quando uma coleção está sincronizada, outros threads ainda podem modificar a coleção, o que faz o enumerador lançar uma exceção.</span><span class="sxs-lookup"><span data-stu-id="68b9c-508">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="68b9c-509">Para garantir thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração ou verificar as exceções resultantes das alterações feitas por outros threads.</span><span class="sxs-lookup"><span data-stu-id="68b9c-509">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68b9c-510">O exemplo de código a seguir mostra como bloquear a coleção usando o <xref:System.Collections.SortedList.SyncRoot%2A> propriedade durante toda a enumeração.</span><span class="sxs-lookup"><span data-stu-id="68b9c-510">The following code example shows how to lock the collection using the <xref:System.Collections.SortedList.SyncRoot%2A> property during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="68b9c-511">A recuperação do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="68b9c-511">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.SortedList.IsSynchronized" />
        <altmember cref="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="68b9c-512">Retorna um <see cref="T:System.Collections.IEnumerator" /> que itera pelo <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-512">Returns an <see cref="T:System.Collections.IEnumerator" /> that iterates through the <see cref="T:System.Collections.SortedList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="68b9c-513">Um <see cref="T:System.Collections.IEnumerator" /> para o <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-513">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Collections.SortedList" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b9c-514">[Visual Basic, C#]</span><span class="sxs-lookup"><span data-stu-id="68b9c-514">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="68b9c-515">O `foreach` instrução de linguagem c# (`for each` no Visual Basic) oculta a complexidade dos enumeradores.</span><span class="sxs-lookup"><span data-stu-id="68b9c-515">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="68b9c-516">Portanto, o uso de `foreach` é recomendado, em vez de manipular diretamente o enumerador.</span><span class="sxs-lookup"><span data-stu-id="68b9c-516">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="68b9c-517">Os enumeradores podem ser usados para ler os dados na coleção, mas não podem ser usados para modificar a coleção subjacente.</span><span class="sxs-lookup"><span data-stu-id="68b9c-517">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="68b9c-518">Inicialmente, o enumerador é posicionado antes do primeiro elemento da coleção.</span><span class="sxs-lookup"><span data-stu-id="68b9c-518">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="68b9c-519"><xref:System.Collections.IEnumerator.Reset%2A> também traz o enumerador de volta para essa posição.</span><span class="sxs-lookup"><span data-stu-id="68b9c-519"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="68b9c-520">AT isso posicionar, chamando <xref:System.Collections.IEnumerator.Current%2A> lança uma exceção.</span><span class="sxs-lookup"><span data-stu-id="68b9c-520">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="68b9c-521">Por isso, você deve chamar <xref:System.Collections.IEnumerator.MoveNext%2A> para avançar o enumerador até o primeiro elemento da coleção antes de ler o valor de <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="68b9c-521">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="68b9c-522"><xref:System.Collections.IEnumerator.Current%2A> retorna o mesmo objeto até <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> ser chamado.</span><span class="sxs-lookup"><span data-stu-id="68b9c-522"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="68b9c-523"><xref:System.Collections.IEnumerator.MoveNext%2A> define <xref:System.Collections.IEnumerator.Current%2A> como o próximo elemento.</span><span class="sxs-lookup"><span data-stu-id="68b9c-523"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="68b9c-524">Caso <xref:System.Collections.IEnumerator.MoveNext%2A> passe o final da coleção, o enumerador é posicionado após o último elemento na coleção e <xref:System.Collections.IEnumerator.MoveNext%2A> retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="68b9c-524">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="68b9c-525">Quando o enumerador está nessa posição, as chamadas subsequentes para <xref:System.Collections.IEnumerator.MoveNext%2A> também retornam `false`.</span><span class="sxs-lookup"><span data-stu-id="68b9c-525">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="68b9c-526">Se a última chamada <xref:System.Collections.IEnumerator.MoveNext%2A> retornou `false`, chamar <xref:System.Collections.IEnumerator.Current%2A> lança uma exceção.</span><span class="sxs-lookup"><span data-stu-id="68b9c-526">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="68b9c-527">Para definir <xref:System.Collections.IEnumerator.Current%2A> como o primeiro elemento da coleção novamente, é possível chamar <xref:System.Collections.IEnumerator.Reset%2A> seguido de <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="68b9c-527">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="68b9c-528">Um enumerador permanece válido desde que a coleção continue inalterada.</span><span class="sxs-lookup"><span data-stu-id="68b9c-528">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="68b9c-529">Se forem feitas alterações na coleção, como adicionar, modificar, ou excluir elementos, o enumerador é invalidado invalidado e a próxima chamada para <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> lança um <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="68b9c-529">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="68b9c-530">Se a coleção é modificada entre <xref:System.Collections.IEnumerator.MoveNext%2A> e <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> retorna o elemento que está definido como, mesmo se o enumerador já é invalidado.</span><span class="sxs-lookup"><span data-stu-id="68b9c-530">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="68b9c-531">O enumerador não tem acesso exclusivo à coleção; por isso, a enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="68b9c-531">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="68b9c-532">Mesmo quando uma coleção está sincronizada, outros threads ainda podem modificar a coleção, o que faz o enumerador lançar uma exceção.</span><span class="sxs-lookup"><span data-stu-id="68b9c-532">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="68b9c-533">Para garantir thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração ou verificar as exceções resultantes das alterações feitas por outros threads.</span><span class="sxs-lookup"><span data-stu-id="68b9c-533">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="68b9c-534">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="68b9c-534">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="TrimToSize">
      <MemberSignature Language="C#" Value="public virtual void TrimToSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TrimToSize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.TrimToSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TrimToSize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TrimToSize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="68b9c-535">Define a capacidade para o número real de elementos em um objeto <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-535">Sets the capacity to the actual number of elements in a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b9c-536">Esse método pode ser usado para minimizar a memória da coleção sobrecarga se nenhum elemento novo será adicionado à coleção.</span><span class="sxs-lookup"><span data-stu-id="68b9c-536">This method can be used to minimize a collection's memory overhead if no new elements will be added to the collection.</span></span>  
  
 <span data-ttu-id="68b9c-537">Para redefinir um <xref:System.Collections.SortedList> objeto para o estado inicial, a chamada a <xref:System.Collections.SortedList.Clear%2A> método antes de chamar <xref:System.Collections.SortedList.TrimToSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="68b9c-537">To reset a <xref:System.Collections.SortedList> object to its initial state, call the <xref:System.Collections.SortedList.Clear%2A> method before calling <xref:System.Collections.SortedList.TrimToSize%2A>.</span></span> <span data-ttu-id="68b9c-538">Cortar vazio <xref:System.Collections.SortedList> define a capacidade do <xref:System.Collections.SortedList> à capacidade padrão.</span><span class="sxs-lookup"><span data-stu-id="68b9c-538">Trimming an empty <xref:System.Collections.SortedList> sets the capacity of the <xref:System.Collections.SortedList> to the default capacity.</span></span>  
  
 <span data-ttu-id="68b9c-539">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="68b9c-539">This method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68b9c-540">O exemplo de código a seguir mostra como cortar as partes não utilizadas de um <xref:System.Collections.SortedList> objeto e como limpar seus valores.</span><span class="sxs-lookup"><span data-stu-id="68b9c-540">The following code example shows how to trim the unused portions of a <xref:System.Collections.SortedList> object and how to clear its values.</span></span>  
  
 [!code-cpp[Classic SortedList.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="68b9c-541">O objeto <see cref="T:System.Collections.SortedList" /> é somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-541">The <see cref="T:System.Collections.SortedList" /> object is read-only.</span>
          </span>
          <span data-ttu-id="68b9c-542">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-542">-or-</span>
          </span>
          <span data-ttu-id="68b9c-543">O <see cref="T:System.Collections.SortedList" /> tem um tamanho fixo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-543">The <see cref="T:System.Collections.SortedList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.SortedList.Clear" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
        <altmember cref="P:System.Collections.SortedList.Count" />
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.Values" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Values As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ Values { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="68b9c-544">Obtém os valores em um objeto <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-544">Gets the values in a <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="68b9c-545">Um objeto <see cref="T:System.Collections.ICollection" /> que contém os valores no objeto <see cref="T:System.Collections.SortedList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="68b9c-545">An <see cref="T:System.Collections.ICollection" /> object containing the values in the <see cref="T:System.Collections.SortedList" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b9c-546">O <xref:System.Collections.ICollection> objeto é uma exibição somente leitura dos valores da <xref:System.Collections.SortedList> objeto.</span><span class="sxs-lookup"><span data-stu-id="68b9c-546">The <xref:System.Collections.ICollection> object is a read-only view of the values of the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="68b9c-547">As modificações feitas subjacente <xref:System.Collections.SortedList> são imediatamente refletidos no <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="68b9c-547">Modifications made to the underlying <xref:System.Collections.SortedList> are immediately reflected in the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="68b9c-548">Os elementos do <xref:System.Collections.ICollection> são classificados na mesma ordem que os valores da <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="68b9c-548">The elements of the <xref:System.Collections.ICollection> are sorted in the same order as the values of the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="68b9c-549">Esta propriedade é semelhante de <xref:System.Collections.SortedList.GetValueList%2A> método, mas retorna um <xref:System.Collections.ICollection> do objeto, em vez de um <xref:System.Collections.IList> objeto.</span><span class="sxs-lookup"><span data-stu-id="68b9c-549">This property is similar to the <xref:System.Collections.SortedList.GetValueList%2A> method, but returns an <xref:System.Collections.ICollection> object instead of an <xref:System.Collections.IList> object.</span></span>  
  
 <span data-ttu-id="68b9c-550">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="68b9c-550">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.SortedList.Keys" />
        <altmember cref="M:System.Collections.SortedList.GetValueList" />
      </Docs>
    </Member>
  </Members>
</Type>