<Type Name="ArrayList" FullName="System.Collections.ArrayList">
  <Metadata><Meta Name="ms.openlocfilehash" Value="928d8d72e6df9a907d147f3aa2f7dda7c3b3cfe9" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58726481" /></Metadata><TypeSignature Language="C#" Value="public class ArrayList : ICloneable, System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ArrayList extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.ArrayList" />
  <TypeSignature Language="VB.NET" Value="Public Class ArrayList&#xA;Implements ICloneable, IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class ArrayList : ICloneable, System::Collections::IList" />
  <TypeSignature Language="F#" Value="type ArrayList = class&#xA;    interface IList&#xA;    interface ICloneable&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.NonGeneric</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.ArrayList/ArrayListDebugView))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="38241-101">Implementa a interface <see cref="T:System.Collections.IList" /> usando uma matriz cujo tamanho é aumentado dinamicamente conforme necessário.</span><span class="sxs-lookup"><span data-stu-id="38241-101">Implements the <see cref="T:System.Collections.IList" /> interface using an array whose size is dynamically increased as required.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

> [!IMPORTANT]
>  <span data-ttu-id="38241-102">Não é recomendável que você use o `ArrayList` classe para novo desenvolvimento.</span><span class="sxs-lookup"><span data-stu-id="38241-102">We don't recommend that you use the `ArrayList` class for new development.</span></span> <span data-ttu-id="38241-103">Em vez disso, é recomendável que você use o genérico <xref:System.Collections.Generic.List%601> classe.</span><span class="sxs-lookup"><span data-stu-id="38241-103">Instead, we recommend that you use the generic <xref:System.Collections.Generic.List%601> class.</span></span>
> <span data-ttu-id="38241-104">O <xref:System.Collections.ArrayList> classe é projetada para manter coleções heterogêneas de objetos.</span><span class="sxs-lookup"><span data-stu-id="38241-104">The <xref:System.Collections.ArrayList> class is designed to hold heterogeneous collections of objects.</span></span> <span data-ttu-id="38241-105">No entanto, ele sempre oferece o melhor desempenho.</span><span class="sxs-lookup"><span data-stu-id="38241-105">However, it does not always offer the best performance.</span></span> <span data-ttu-id="38241-106">Em vez disso, recomendamos o seguinte:</span><span class="sxs-lookup"><span data-stu-id="38241-106">Instead, we recommend the following:</span></span>  
> - <span data-ttu-id="38241-107">Para uma coleção heterogênea de objetos, use o `List<Object>` (em C#) ou `List(Of Object)` (no Visual Basic) de tipo.</span><span class="sxs-lookup"><span data-stu-id="38241-107">For a heterogeneous collection of objects, use the `List<Object>` (in C#) or `List(Of Object)` (in Visual Basic) type.</span></span>  
> - <span data-ttu-id="38241-108">Para uma coleção homogênea de objetos, use o <xref:System.Collections.Generic.List%601> classe.</span><span class="sxs-lookup"><span data-stu-id="38241-108">For a homogeneous collection of objects, use the <xref:System.Collections.Generic.List%601> class.</span></span>  
> <span data-ttu-id="38241-109">Ver [considerações sobre desempenho](xref:System.Collections.Generic.List%601#performance-considerations) no <xref:System.Collections.Generic.List%601> tópico de referência para uma discussão sobre o desempenho relativo de uma dessas classes.</span><span class="sxs-lookup"><span data-stu-id="38241-109">See [Performance Considerations](xref:System.Collections.Generic.List%601#performance-considerations) in the <xref:System.Collections.Generic.List%601> reference topic for a discussion of the relative performance of these classes.</span></span>  <span data-ttu-id="38241-110">Ver [coleções não genéricas não devem ser usadas](https://github.com/dotnet/platform-compat/blob/master/docs/DE0006.md) no GitHub para obter informações gerais sobre o uso de genéricos em vez de tipos de coleção não genérica.</span><span class="sxs-lookup"><span data-stu-id="38241-110">See [Non-generic collections shouldn't be used](https://github.com/dotnet/platform-compat/blob/master/docs/DE0006.md) on GitHub for general information on the use of generic instead of non-generic collection types.</span></span> 
  
 <span data-ttu-id="38241-111">O <xref:System.Collections.ArrayList> não é garantida a serem classificados.</span><span class="sxs-lookup"><span data-stu-id="38241-111">The <xref:System.Collections.ArrayList> is not guaranteed to be sorted.</span></span>  <span data-ttu-id="38241-112">Você deve classificar as <xref:System.Collections.ArrayList> chamando seus <xref:System.Collections.ArrayList.Sort%2A> método antes de executar operações (como <xref:System.Collections.ArrayList.BinarySearch%2A>) que exigem o <xref:System.Collections.ArrayList> a serem classificados.</span><span class="sxs-lookup"><span data-stu-id="38241-112">You must sort the <xref:System.Collections.ArrayList> by calling its <xref:System.Collections.ArrayList.Sort%2A> method prior to performing operations (such as <xref:System.Collections.ArrayList.BinarySearch%2A>) that require the <xref:System.Collections.ArrayList> to be sorted.</span></span> <span data-ttu-id="38241-113">Para manter uma coleção que é classificada automaticamente conforme novos elementos são adicionados, você pode usar o <xref:System.Collections.Generic.SortedSet%601> classe.</span><span class="sxs-lookup"><span data-stu-id="38241-113">To maintain a collection that is automatically sorted as new elements are added, you can use the <xref:System.Collections.Generic.SortedSet%601> class.</span></span>  
  
 <span data-ttu-id="38241-114">A capacidade de um <xref:System.Collections.ArrayList> é o número de elementos a <xref:System.Collections.ArrayList> pode conter.</span><span class="sxs-lookup"><span data-stu-id="38241-114">The capacity of an <xref:System.Collections.ArrayList> is the number of elements the <xref:System.Collections.ArrayList> can hold.</span></span> <span data-ttu-id="38241-115">Como os elementos são adicionados a um <xref:System.Collections.ArrayList>, a capacidade é aumentada automaticamente conforme necessário por meio de realocação.</span><span class="sxs-lookup"><span data-stu-id="38241-115">As elements are added to an <xref:System.Collections.ArrayList>, the capacity is automatically increased as required through reallocation.</span></span> <span data-ttu-id="38241-116">A capacidade pode ser diminuída chamando <xref:System.Collections.ArrayList.TrimToSize%2A> ou definindo o <xref:System.Collections.ArrayList.Capacity%2A> propriedade explicitamente.</span><span class="sxs-lookup"><span data-stu-id="38241-116">The capacity can be decreased by calling <xref:System.Collections.ArrayList.TrimToSize%2A> or by setting the <xref:System.Collections.ArrayList.Capacity%2A> property explicitly.</span></span>  
  
 <span data-ttu-id="38241-117">**Somente .NET framework:** Para muito grandes <xref:System.Collections.ArrayList> objetos, você pode aumentar a capacidade máxima para 2 bilhões de elementos em um sistema de 64 bits, definindo o `enabled` atributo da [ `<gcAllowVeryLargeObjects>` ](~/docs/framework/configure-apps/file-schema/runtime/gcallowverylargeobjects-element.md) elemento de configuração para `true` no ambiente de tempo de execução.</span><span class="sxs-lookup"><span data-stu-id="38241-117">**.NET Framework only:** For very large <xref:System.Collections.ArrayList> objects, you can increase the maximum capacity to 2 billion elements on a 64-bit system by setting the `enabled` attribute of the [`<gcAllowVeryLargeObjects>`](~/docs/framework/configure-apps/file-schema/runtime/gcallowverylargeobjects-element.md) configuration element to `true` in the run-time environment.</span></span>  
  
 <span data-ttu-id="38241-118">Elementos nesta coleção podem ser acessados usando um índice de inteiro.</span><span class="sxs-lookup"><span data-stu-id="38241-118">Elements in this collection can be accessed using an integer index.</span></span>  <span data-ttu-id="38241-119">Nesta coleção, os índices são baseados em zero.</span><span class="sxs-lookup"><span data-stu-id="38241-119">Indexes in this collection are zero-based.</span></span>  
  
 <span data-ttu-id="38241-120">O <xref:System.Collections.ArrayList> coleção aceita `null` como um valor válido.</span><span class="sxs-lookup"><span data-stu-id="38241-120">The <xref:System.Collections.ArrayList> collection accepts `null` as a valid value.</span></span> <span data-ttu-id="38241-121">Ele também permite que elementos duplicados.</span><span class="sxs-lookup"><span data-stu-id="38241-121">It also allows duplicate elements.</span></span>  
  
 <span data-ttu-id="38241-122">Usando matrizes multidimensionais como elementos em um <xref:System.Collections.ArrayList> não há suporte para a coleção.</span><span class="sxs-lookup"><span data-stu-id="38241-122">Using multidimensional arrays as elements in an <xref:System.Collections.ArrayList> collection is not supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38241-123">O exemplo a seguir mostra como criar e inicializar um <xref:System.Collections.ArrayList> e como exibir seus valores.</span><span class="sxs-lookup"><span data-stu-id="38241-123">The following example shows how to create and initialize an <xref:System.Collections.ArrayList> and how to display its values.</span></span>  
  
 [!code-cpp[Classic ArrayList Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="38241-124">Os membros estáticos públicos (<see langword="Shared" /> no Visual Basic) desse são thread-safe.</span><span class="sxs-lookup"><span data-stu-id="38241-124">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span></span> <span data-ttu-id="38241-125">Não há garantia de que qualquer membro de instância seja thread-safe.</span><span class="sxs-lookup"><span data-stu-id="38241-125">Any instance members are not guaranteed to be thread safe.</span></span>  
  
<span data-ttu-id="38241-126">Um <see cref="T:System.Collections.ArrayList" /> pode dar suporte a vários leitores simultaneamente, desde que a coleção não será modificada.</span><span class="sxs-lookup"><span data-stu-id="38241-126">An <see cref="T:System.Collections.ArrayList" /> can support multiple readers concurrently, as long as the collection is not modified.</span></span> <span data-ttu-id="38241-127">Para garantir a segurança do thread do <see cref="T:System.Collections.ArrayList" />, todas as operações devem ser feitas por meio de wrapper retornado pelo <see cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)" /> método.</span><span class="sxs-lookup"><span data-stu-id="38241-127">To guarantee the thread safety of the <see cref="T:System.Collections.ArrayList" />, all operations must be done through the wrapper returned by the <see cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)" /> method.</span></span>  
  
<span data-ttu-id="38241-128">A enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="38241-128">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="38241-129">Mesmo quando uma coleção está sincronizada, outros threads ainda podem modificar a coleção, o que faz o enumerador lançar uma exceção.</span><span class="sxs-lookup"><span data-stu-id="38241-129">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="38241-130">Para garantir thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração ou verificar as exceções resultantes das alterações feitas por outros threads.</span><span class="sxs-lookup"><span data-stu-id="38241-130">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span></threadsafe>
    <altmember cref="T:System.Collections.IList" />
    <altmember cref="T:System.Collections.Generic.List`1" />
    <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="38241-131">Executando operações de cadeia de caracteres que não levam em conta a cultura em coleções</span><span class="sxs-lookup"><span data-stu-id="38241-131">Performing Culture-Insensitive String Operations in Collections</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="38241-132">Inicializa uma nova instância da classe <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-132">Initializes a new instance of the <see cref="T:System.Collections.ArrayList" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArrayList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArrayList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="38241-133">Inicializa uma nova instância da classe <see cref="T:System.Collections.ArrayList" /> que está vazia e tem a capacidade inicial padrão.</span><span class="sxs-lookup"><span data-stu-id="38241-133">Initializes a new instance of the <see cref="T:System.Collections.ArrayList" /> class that is empty and has the default initial capacity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38241-134">A capacidade de um <xref:System.Collections.ArrayList> é o número de elementos que o <xref:System.Collections.ArrayList> pode conter.</span><span class="sxs-lookup"><span data-stu-id="38241-134">The capacity of an <xref:System.Collections.ArrayList> is the number of elements that the <xref:System.Collections.ArrayList> can hold.</span></span> <span data-ttu-id="38241-135">Como os elementos são adicionados a um <xref:System.Collections.ArrayList>, a capacidade é aumentada automaticamente conforme necessário, realocando a matriz interna.</span><span class="sxs-lookup"><span data-stu-id="38241-135">As elements are added to an <xref:System.Collections.ArrayList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="38241-136">Se o tamanho da coleção pode ser estimado, especificando a capacidade inicial elimina a necessidade de executar um número de operações de redimensionamento durante a adição de elementos para o <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="38241-136">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="38241-137">Este construtor é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="38241-137">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArrayList (System.Collections.ICollection c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.ICollection c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (c As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArrayList(System::Collections::ICollection ^ c);" />
      <MemberSignature Language="F#" Value="new System.Collections.ArrayList : System.Collections.ICollection -&gt; System.Collections.ArrayList" Usage="new System.Collections.ArrayList c" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="c" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="38241-138">O <see cref="T:System.Collections.ICollection" /> cujos elementos são copiados para a nova lista.</span><span class="sxs-lookup"><span data-stu-id="38241-138">The <see cref="T:System.Collections.ICollection" /> whose elements are copied to the new list.</span></span></param>
        <summary><span data-ttu-id="38241-139">Inicializa uma nova instância da classe <see cref="T:System.Collections.ArrayList" />, que contém os elementos copiados da coleção especificada e tem a mesma capacidade inicial que o número de elementos copiados.</span><span class="sxs-lookup"><span data-stu-id="38241-139">Initializes a new instance of the <see cref="T:System.Collections.ArrayList" /> class that contains elements copied from the specified collection and that has the same initial capacity as the number of elements copied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38241-140">A capacidade de um <xref:System.Collections.ArrayList> é o número de elementos que o <xref:System.Collections.ArrayList> pode conter.</span><span class="sxs-lookup"><span data-stu-id="38241-140">The capacity of an <xref:System.Collections.ArrayList> is the number of elements that the <xref:System.Collections.ArrayList> can hold.</span></span> <span data-ttu-id="38241-141">Como os elementos são adicionados a um <xref:System.Collections.ArrayList>, a capacidade é aumentada automaticamente conforme necessário, realocando a matriz interna.</span><span class="sxs-lookup"><span data-stu-id="38241-141">As elements are added to an <xref:System.Collections.ArrayList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="38241-142">Se o tamanho da coleção pode ser estimado, especificando a capacidade inicial elimina a necessidade de executar um número de operações de redimensionamento durante a adição de elementos para o <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="38241-142">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="38241-143">Os elementos são copiados para o <xref:System.Collections.ArrayList> na mesma ordem que são lidas, o <xref:System.Collections.IEnumerator> da <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="38241-143">The elements are copied onto the <xref:System.Collections.ArrayList> in the same order they are read by the <xref:System.Collections.IEnumerator> of the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="38241-144">Este construtor é um O (`n`) a operação, onde `n` é o número de elementos em `c`.</span><span class="sxs-lookup"><span data-stu-id="38241-144">This constructor is an O(`n`) operation, where `n` is the number of elements in `c`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="38241-145"><paramref name="c" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="38241-145"><paramref name="c" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArrayList (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArrayList(int capacity);" />
      <MemberSignature Language="F#" Value="new System.Collections.ArrayList : int -&gt; System.Collections.ArrayList" Usage="new System.Collections.ArrayList capacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="38241-146">O número de elementos que a nova lista pode armazenar inicialmente.</span><span class="sxs-lookup"><span data-stu-id="38241-146">The number of elements that the new list can initially store.</span></span></param>
        <summary><span data-ttu-id="38241-147">Inicializa uma nova instância da classe <see cref="T:System.Collections.ArrayList" /> que está vazia e tem a capacidade inicial especificada.</span><span class="sxs-lookup"><span data-stu-id="38241-147">Initializes a new instance of the <see cref="T:System.Collections.ArrayList" /> class that is empty and has the specified initial capacity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38241-148">A capacidade de um <xref:System.Collections.ArrayList> é o número de elementos que o <xref:System.Collections.ArrayList> pode conter.</span><span class="sxs-lookup"><span data-stu-id="38241-148">The capacity of an <xref:System.Collections.ArrayList> is the number of elements that the <xref:System.Collections.ArrayList> can hold.</span></span> <span data-ttu-id="38241-149">Como os elementos são adicionados a um <xref:System.Collections.ArrayList>, a capacidade é aumentada automaticamente conforme necessário, realocando a matriz interna.</span><span class="sxs-lookup"><span data-stu-id="38241-149">As elements are added to an <xref:System.Collections.ArrayList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="38241-150">Se o tamanho da coleção pode ser estimado, especificando a capacidade inicial elimina a necessidade de executar um número de operações de redimensionamento durante a adição de elementos para o <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="38241-150">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="38241-151">Este construtor é um O (`n`) a operação, onde `n` é `capacity`.</span><span class="sxs-lookup"><span data-stu-id="38241-151">This constructor is an O(`n`) operation, where `n` is `capacity`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="38241-152"><paramref name="capacity" /> é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="38241-152"><paramref name="capacity" /> is less than zero.</span></span></exception>
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName="Adapter">
      <MemberSignature Language="C#" Value="public static System.Collections.ArrayList Adapter (System.Collections.IList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ArrayList Adapter(class System.Collections.IList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Adapter(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Adapter (list As IList) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ArrayList ^ Adapter(System::Collections::IList ^ list);" />
      <MemberSignature Language="F#" Value="static member Adapter : System.Collections.IList -&gt; System.Collections.ArrayList" Usage="System.Collections.ArrayList.Adapter list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="list"><span data-ttu-id="38241-153">O <see cref="T:System.Collections.IList" /> a ser encapsulado.</span><span class="sxs-lookup"><span data-stu-id="38241-153">The <see cref="T:System.Collections.IList" /> to wrap.</span></span></param>
        <summary><span data-ttu-id="38241-154">Cria um wrapper <see cref="T:System.Collections.ArrayList" /> para um determinado <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-154">Creates an <see cref="T:System.Collections.ArrayList" /> wrapper for a specific <see cref="T:System.Collections.IList" />.</span></span></summary>
        <returns><span data-ttu-id="38241-155">O wrapper <see cref="T:System.Collections.ArrayList" /> ao redor de <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-155">The <see cref="T:System.Collections.ArrayList" /> wrapper around the <see cref="T:System.Collections.IList" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38241-156"><xref:System.Collections.ArrayList.Adapter%2A> não copia o conteúdo de <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="38241-156"><xref:System.Collections.ArrayList.Adapter%2A> does not copy the contents of <xref:System.Collections.IList>.</span></span> <span data-ttu-id="38241-157">Em vez disso, ele apenas cria um <xref:System.Collections.ArrayList> wrapper em torno <xref:System.Collections.IList>; portanto, é alterado para o <xref:System.Collections.IList> também afetam o <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="38241-157">Instead, it only creates an <xref:System.Collections.ArrayList> wrapper around <xref:System.Collections.IList>; therefore, changes to the <xref:System.Collections.IList> also affect the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="38241-158">O <xref:System.Collections.ArrayList> classe fornece genérico <xref:System.Collections.ArrayList.Reverse%2A>, <xref:System.Collections.ArrayList.BinarySearch%2A> e <xref:System.Collections.ArrayList.Sort%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="38241-158">The <xref:System.Collections.ArrayList> class provides generic <xref:System.Collections.ArrayList.Reverse%2A>, <xref:System.Collections.ArrayList.BinarySearch%2A> and <xref:System.Collections.ArrayList.Sort%2A> methods.</span></span> <span data-ttu-id="38241-159">Esse wrapper pode ser um meio para usar esses métodos no <xref:System.Collections.IList>; no entanto, executar essas operações genéricas por meio do wrapper pode ser menos eficiente do que as operações aplicadas diretamente a <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="38241-159">This wrapper can be a means to use those methods on <xref:System.Collections.IList>; however, performing these generic operations through the wrapper might be less efficient than operations applied directly on the <xref:System.Collections.IList>.</span></span>  
  
 <span data-ttu-id="38241-160">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="38241-160">This method is an O(1) operation.</span></span>  
  
## <a name="version-compatibility"></a><span data-ttu-id="38241-161">Compatibilidade de versões</span><span class="sxs-lookup"><span data-stu-id="38241-161">Version Compatibility</span></span>  
 <span data-ttu-id="38241-162">No .NET Framework versão 1.0 e 1.1, chamando o <xref:System.Collections.ArrayList.GetEnumerator%28System.Int32%2CSystem.Int32%29> sobrecarga de método no <xref:System.Collections.ArrayList> wrapper retornou um enumerador que tratado o segundo argumento como um limite superior em vez de uma contagem.</span><span class="sxs-lookup"><span data-stu-id="38241-162">In the .NET Framework version 1.0 and 1.1, calling the <xref:System.Collections.ArrayList.GetEnumerator%28System.Int32%2CSystem.Int32%29> method overload on the <xref:System.Collections.ArrayList> wrapper returned an enumerator that treated the second argument as an upper bound rather than as a count.</span></span> <span data-ttu-id="38241-163">No [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] corretamente, o segundo argumento é tratado como uma contagem.</span><span class="sxs-lookup"><span data-stu-id="38241-163">In the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] the second argument is correctly treated as a count.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="38241-164"><paramref name="list" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="38241-164"><paramref name="list" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)" />
        <altmember cref="M:System.Collections.ArrayList.Reverse" />
        <altmember cref="M:System.Collections.ArrayList.Sort" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual int Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Add(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : obj -&gt; int&#xA;override this.Add : obj -&gt; int" Usage="arrayList.Add value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="38241-165">O objeto <see cref="T:System.Object" /> a ser adicionado ao final do <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-165">The <see cref="T:System.Object" /> to be added to the end of the <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="38241-166">O valor pode ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="38241-166">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="38241-167">Adiciona um objeto ao final do <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-167">Adds an object to the end of the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <returns><span data-ttu-id="38241-168">O índice <see cref="T:System.Collections.ArrayList" /> ao qual o <paramref name="value" /> foi adicionado.</span><span class="sxs-lookup"><span data-stu-id="38241-168">The <see cref="T:System.Collections.ArrayList" /> index at which the <paramref name="value" /> has been added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38241-169"><xref:System.Collections.ArrayList> aceita `null` como um valor válido e permite elementos duplicados.</span><span class="sxs-lookup"><span data-stu-id="38241-169"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="38241-170">Se <xref:System.Collections.ArrayList.Count%2A> já for igual a <xref:System.Collections.ArrayList.Capacity%2A>, a capacidade do <xref:System.Collections.ArrayList> é aumentado, automaticamente realocando a matriz interna, e os elementos existentes são copiados para a nova matriz antes do novo elemento é adicionado.</span><span class="sxs-lookup"><span data-stu-id="38241-170">If <xref:System.Collections.ArrayList.Count%2A> already equals <xref:System.Collections.ArrayList.Capacity%2A>, the capacity of the <xref:System.Collections.ArrayList> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="38241-171">Se <xref:System.Collections.ArrayList.Count%2A> é menor que <xref:System.Collections.ArrayList.Capacity%2A>, esse método é uma operação de (1).</span><span class="sxs-lookup"><span data-stu-id="38241-171">If <xref:System.Collections.ArrayList.Count%2A> is less than <xref:System.Collections.ArrayList.Capacity%2A>, this method is an O(1) operation.</span></span> <span data-ttu-id="38241-172">Se a capacidade precisar ser aumentada para acomodar o novo elemento, esse método se torna um O (`n`) a operação, onde `n` é <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="38241-172">If the capacity needs to be increased to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38241-173">O exemplo de código a seguir mostra como adicionar elementos a serem o <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="38241-173">The following code example shows how to add elements to the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Add Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Add Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Add Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="38241-174">O <see cref="T:System.Collections.ArrayList" /> é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="38241-174">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span>  
  
<span data-ttu-id="38241-175">- ou -</span><span class="sxs-lookup"><span data-stu-id="38241-175">-or-</span></span> 
<span data-ttu-id="38241-176">O <see cref="T:System.Collections.ArrayList" /> tem um tamanho fixo.</span><span class="sxs-lookup"><span data-stu-id="38241-176">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Remove(System.Object)" />
        <altmember cref="P:System.Collections.ArrayList.Count" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public virtual void AddRange (System.Collections.ICollection c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRange(class System.Collections.ICollection c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddRange (c As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddRange(System::Collections::ICollection ^ c);" />
      <MemberSignature Language="F#" Value="abstract member AddRange : System.Collections.ICollection -&gt; unit&#xA;override this.AddRange : System.Collections.ICollection -&gt; unit" Usage="arrayList.AddRange c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="38241-177">O <see cref="T:System.Collections.ICollection" /> cujos elementos devem ser adicionados ao final do <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-177">The <see cref="T:System.Collections.ICollection" /> whose elements should be added to the end of the <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="38241-178">A coleção em si não pode ser <see langword="null" />, mas pode conter elementos que são <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="38241-178">The collection itself cannot be <see langword="null" />, but it can contain elements that are <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="38241-179">Adiciona os elementos de um <see cref="T:System.Collections.ICollection" /> ao final do <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-179">Adds the elements of an <see cref="T:System.Collections.ICollection" /> to the end of the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38241-180"><xref:System.Collections.ArrayList> aceita `null` como um valor válido e permite elementos duplicados.</span><span class="sxs-lookup"><span data-stu-id="38241-180"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="38241-181">A ordem dos elementos na <xref:System.Collections.ICollection> é preservado no <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="38241-181">The order of the elements in the <xref:System.Collections.ICollection> is preserved in the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="38241-182">Se o novo <xref:System.Collections.ArrayList.Count%2A> (atual <xref:System.Collections.ArrayList.Count%2A> mais o tamanho da coleção) será maior que <xref:System.Collections.ArrayList.Capacity%2A>, a capacidade do <xref:System.Collections.ArrayList> é aumentado, automaticamente realocando a matriz interna para acomodar os novos elementos e o os elementos existentes são copiados para a nova matriz antes dos novos elementos adicionados.</span><span class="sxs-lookup"><span data-stu-id="38241-182">If the new <xref:System.Collections.ArrayList.Count%2A> (the current <xref:System.Collections.ArrayList.Count%2A> plus the size of the collection) will be greater than <xref:System.Collections.ArrayList.Capacity%2A>, the capacity of the <xref:System.Collections.ArrayList> is increased by automatically reallocating the internal array to accommodate the new elements, and the existing elements are copied to the new array before the new elements are added.</span></span>  
  
 <span data-ttu-id="38241-183">Se o <xref:System.Collections.ArrayList> pode acomodar os novos elementos sem aumentar os <xref:System.Collections.ArrayList.Capacity%2A>, esse método é um O (`n`) operação, onde `n` é o número de elementos a serem adicionados.</span><span class="sxs-lookup"><span data-stu-id="38241-183">If the <xref:System.Collections.ArrayList> can accommodate the new elements without increasing the <xref:System.Collections.ArrayList.Capacity%2A>, this method is an O(`n`) operation, where `n` is the number of elements to be added.</span></span> <span data-ttu-id="38241-184">Se a capacidade precisar ser aumentada para acomodar os novos elementos, esse método se torna um O (`n` + `m`) a operação, onde `n` é o número de elementos a serem adicionados e `m` é <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="38241-184">If the capacity needs to be increased to accommodate the new elements, this method becomes an O(`n` + `m`) operation, where `n` is the number of elements to be added and `m` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38241-185">O exemplo de código a seguir mostra como adicionar elementos a serem o <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="38241-185">The following code example shows how to add elements to the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Add Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Add Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Add Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="38241-186"><paramref name="c" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="38241-186"><paramref name="c" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="38241-187">O <see cref="T:System.Collections.ArrayList" /> é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="38241-187">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span>  
  
<span data-ttu-id="38241-188">- ou -</span><span class="sxs-lookup"><span data-stu-id="38241-188">-or-</span></span> 
<span data-ttu-id="38241-189">O <see cref="T:System.Collections.ArrayList" /> tem um tamanho fixo.</span><span class="sxs-lookup"><span data-stu-id="38241-189">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span></span></exception>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
        <altmember cref="P:System.Collections.ArrayList.Count" />
        <altmember cref="M:System.Collections.ArrayList.Add(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="BinarySearch">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="38241-190">Usa um algoritmo de pesquisa binária para localizar um elemento específico no <see cref="T:System.Collections.ArrayList" /> classificado ou parte dele.</span><span class="sxs-lookup"><span data-stu-id="38241-190">Uses a binary search algorithm to locate a specific element in the sorted <see cref="T:System.Collections.ArrayList" /> or a portion of it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public virtual int BinarySearch (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 BinarySearch(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.BinarySearch(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BinarySearch (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int BinarySearch(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member BinarySearch : obj -&gt; int&#xA;override this.BinarySearch : obj -&gt; int" Usage="arrayList.BinarySearch value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="38241-191">O <see cref="T:System.Object" /> a ser localizado.</span><span class="sxs-lookup"><span data-stu-id="38241-191">The <see cref="T:System.Object" /> to locate.</span></span> <span data-ttu-id="38241-192">O valor pode ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="38241-192">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="38241-193">Pesquisa todo o <see cref="T:System.Collections.ArrayList" /> classificado para um elemento usando o comparador padrão e retorna o índice baseado em zero do elemento.</span><span class="sxs-lookup"><span data-stu-id="38241-193">Searches the entire sorted <see cref="T:System.Collections.ArrayList" /> for an element using the default comparer and returns the zero-based index of the element.</span></span></summary>
        <returns><span data-ttu-id="38241-194">O índice baseado em zero da <paramref name="value" /> no <see cref="T:System.Collections.ArrayList" /> classificado se <paramref name="value" /> for encontrado; caso contrário, um número negativo, que é o complemento bit a bit do índice do próximo elemento maior que <paramref name="value" /> ou, se não houver nenhum elemento maior, o complemento bit a bit de <see cref="P:System.Collections.ArrayList.Count" />.</span><span class="sxs-lookup"><span data-stu-id="38241-194">The zero-based index of <paramref name="value" /> in the sorted <see cref="T:System.Collections.ArrayList" />, if <paramref name="value" /> is found; otherwise, a negative number, which is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.ArrayList.Count" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38241-195">O `value` parâmetro e cada elemento do <xref:System.Collections.ArrayList> deve implementar o <xref:System.IComparable> interface, que é usado para comparações.</span><span class="sxs-lookup"><span data-stu-id="38241-195">The `value` parameter and each element of the <xref:System.Collections.ArrayList> must implement the <xref:System.IComparable> interface, which is used for comparisons.</span></span> <span data-ttu-id="38241-196">Os elementos do <xref:System.Collections.ArrayList> já devem ser classificados em aumentar o valor de acordo com a ordem de classificação definida pelo <xref:System.IComparable> implementação; caso contrário, o resultado pode estar incorreto.</span><span class="sxs-lookup"><span data-stu-id="38241-196">The elements of the <xref:System.Collections.ArrayList> must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable> implementation; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="38241-197">Comparando `null` com qualquer tipo é permitida e não gera uma exceção ao usar <xref:System.IComparable>.</span><span class="sxs-lookup"><span data-stu-id="38241-197">Comparing `null` with any type is allowed and does not generate an exception when using <xref:System.IComparable>.</span></span> <span data-ttu-id="38241-198">Durante a classificação, `null` é considerado menor que qualquer outro objeto.</span><span class="sxs-lookup"><span data-stu-id="38241-198">When sorting, `null` is considered to be less than any other object.</span></span>  
  
 <span data-ttu-id="38241-199">Se o <xref:System.Collections.ArrayList> contém mais de um elemento com o mesmo valor, o método retornará somente uma das ocorrências e pode retornar qualquer uma das ocorrências, não necessariamente o primeiro deles.</span><span class="sxs-lookup"><span data-stu-id="38241-199">If the <xref:System.Collections.ArrayList> contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</span></span>  
  
 <span data-ttu-id="38241-200">Caso o <xref:System.Collections.ArrayList> não contenha o valor especificado, o método retorna um inteiro negativo.</span><span class="sxs-lookup"><span data-stu-id="38241-200">If the <xref:System.Collections.ArrayList> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="38241-201">Você pode aplicar a operação de complemento bit a bit (~) para esse número inteiro negativo para obter o índice do primeiro elemento maior que o valor de pesquisa.</span><span class="sxs-lookup"><span data-stu-id="38241-201">You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</span></span> <span data-ttu-id="38241-202">Ao inserir o valor para o <xref:System.Collections.ArrayList>, esse índice deve ser usado como o ponto de inserção para manter a ordem de classificação.</span><span class="sxs-lookup"><span data-stu-id="38241-202">When inserting the value into the <xref:System.Collections.ArrayList>, this index should be used as the insertion point to maintain the sort order.</span></span>  
  
 <span data-ttu-id="38241-203">Este método é uma operação O(log `n`), em que `n` é <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="38241-203">This method is an O(log `n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38241-204">O exemplo de código a seguir mostra como usar <xref:System.Collections.ArrayList.BinarySearch%2A> para localizar um objeto específico no <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="38241-204">The following code example shows how to use <xref:System.Collections.ArrayList.BinarySearch%2A> to locate a specific object in the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.BinarySearch1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.BinarySearch1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.BinarySearch1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.BinarySearch1 Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.BinarySearch1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.BinarySearch1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="38241-205">Nem <paramref name="value" /> nem os elementos de <see cref="T:System.Collections.ArrayList" /> implementam a interface <see cref="T:System.IComparable" />.</span><span class="sxs-lookup"><span data-stu-id="38241-205">Neither <paramref name="value" /> nor the elements of <see cref="T:System.Collections.ArrayList" /> implement the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="38241-206"><paramref name="value" /> não é do mesmo tipo que os elementos do <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-206"><paramref name="value" /> is not of the same type as the elements of the <see cref="T:System.Collections.ArrayList" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="38241-207">Executando operações de cadeia de caracteres que não levam em conta a cultura em coleções</span><span class="sxs-lookup"><span data-stu-id="38241-207">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public virtual int BinarySearch (object value, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 BinarySearch(object value, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.BinarySearch(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BinarySearch (value As Object, comparer As IComparer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int BinarySearch(System::Object ^ value, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member BinarySearch : obj * System.Collections.IComparer -&gt; int&#xA;override this.BinarySearch : obj * System.Collections.IComparer -&gt; int" Usage="arrayList.BinarySearch (value, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="38241-208">O <see cref="T:System.Object" /> a ser localizado.</span><span class="sxs-lookup"><span data-stu-id="38241-208">The <see cref="T:System.Object" /> to locate.</span></span> <span data-ttu-id="38241-209">O valor pode ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="38241-209">The value can be <see langword="null" />.</span></span></param>
        <param name="comparer"><span data-ttu-id="38241-210">A implementação de <see cref="T:System.Collections.IComparer" /> a ser usada durante a comparação de elementos.</span><span class="sxs-lookup"><span data-stu-id="38241-210">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span></span>  
  
<span data-ttu-id="38241-211">- ou -</span><span class="sxs-lookup"><span data-stu-id="38241-211">-or-</span></span> 
 <span data-ttu-id="38241-212"><see langword="null" /> para usar o comparador padrão que é a implementação <see cref="T:System.IComparable" /> de cada elemento.</span><span class="sxs-lookup"><span data-stu-id="38241-212"><see langword="null" /> to use the default comparer that is the <see cref="T:System.IComparable" /> implementation of each element.</span></span></param>
        <summary><span data-ttu-id="38241-213">Pesquisa um elemento em todo o <see cref="T:System.Collections.ArrayList" /> classificado usando o comparador especificado e retorna o índice baseado em zero do elemento.</span><span class="sxs-lookup"><span data-stu-id="38241-213">Searches the entire sorted <see cref="T:System.Collections.ArrayList" /> for an element using the specified comparer and returns the zero-based index of the element.</span></span></summary>
        <returns><span data-ttu-id="38241-214">O índice baseado em zero da <paramref name="value" /> no <see cref="T:System.Collections.ArrayList" /> classificado se <paramref name="value" /> for encontrado; caso contrário, um número negativo, que é o complemento bit a bit do índice do próximo elemento maior que <paramref name="value" /> ou, se não houver nenhum elemento maior, o complemento bit a bit de <see cref="P:System.Collections.ArrayList.Count" />.</span><span class="sxs-lookup"><span data-stu-id="38241-214">The zero-based index of <paramref name="value" /> in the sorted <see cref="T:System.Collections.ArrayList" />, if <paramref name="value" /> is found; otherwise, a negative number, which is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.ArrayList.Count" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38241-215">A comparação personaliza como os elementos são comparados.</span><span class="sxs-lookup"><span data-stu-id="38241-215">The comparer customizes how the elements are compared.</span></span> <span data-ttu-id="38241-216">Por exemplo, você pode usar um <xref:System.Collections.CaseInsensitiveComparer> instância como o comparador para executar pesquisas de cadeia de caracteres diferencia maiusculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="38241-216">For example, you can use a <xref:System.Collections.CaseInsensitiveComparer> instance as the comparer to perform case-insensitive string searches.</span></span>  
  
 <span data-ttu-id="38241-217">Se `comparer` for fornecido, os elementos do <xref:System.Collections.ArrayList> são comparados com o valor especificado usando especificado <xref:System.Collections.IComparer> implementação.</span><span class="sxs-lookup"><span data-stu-id="38241-217">If `comparer` is provided, the elements of the <xref:System.Collections.ArrayList> are compared to the specified value using the specified <xref:System.Collections.IComparer> implementation.</span></span> <span data-ttu-id="38241-218">Os elementos do <xref:System.Collections.ArrayList> já devem ser classificados em aumentar o valor de acordo com a ordem de classificação definida pelo `comparer`; caso contrário, o resultado pode estar incorreto.</span><span class="sxs-lookup"><span data-stu-id="38241-218">The elements of the <xref:System.Collections.ArrayList> must already be sorted in increasing value according to the sort order defined by `comparer`; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="38241-219">Caso `comparer` seja `null`, a comparação é feita usando-se a implementação de <xref:System.IComparable> fornecida pelo próprio elemento ou pelo valor especificado.</span><span class="sxs-lookup"><span data-stu-id="38241-219">If `comparer` is `null`, the comparison is done using the <xref:System.IComparable> implementation provided by the element itself or by the specified value.</span></span> <span data-ttu-id="38241-220">Os elementos do <xref:System.Collections.ArrayList> já devem ser classificados em aumentar o valor de acordo com a ordem de classificação definida pelo <xref:System.IComparable> implementação; caso contrário, o resultado pode estar incorreto.</span><span class="sxs-lookup"><span data-stu-id="38241-220">The elements of the <xref:System.Collections.ArrayList> must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable> implementation; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="38241-221">Comparando `null` com qualquer tipo é permitida e não gera uma exceção ao usar <xref:System.IComparable>.</span><span class="sxs-lookup"><span data-stu-id="38241-221">Comparing `null` with any type is allowed and does not generate an exception when using <xref:System.IComparable>.</span></span> <span data-ttu-id="38241-222">Durante a classificação, `null` é considerado menor que qualquer outro objeto.</span><span class="sxs-lookup"><span data-stu-id="38241-222">When sorting, `null` is considered to be less than any other object.</span></span>  
  
 <span data-ttu-id="38241-223">Se o <xref:System.Collections.ArrayList> contém mais de um elemento com o mesmo valor, o método retornará somente uma das ocorrências e pode retornar qualquer uma das ocorrências, não necessariamente o primeiro deles.</span><span class="sxs-lookup"><span data-stu-id="38241-223">If the <xref:System.Collections.ArrayList> contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</span></span>  
  
 <span data-ttu-id="38241-224">Caso o <xref:System.Collections.ArrayList> não contenha o valor especificado, o método retorna um inteiro negativo.</span><span class="sxs-lookup"><span data-stu-id="38241-224">If the <xref:System.Collections.ArrayList> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="38241-225">Você pode aplicar a operação de complemento bit a bit (~) para esse número inteiro negativo para obter o índice do primeiro elemento maior que o valor de pesquisa.</span><span class="sxs-lookup"><span data-stu-id="38241-225">You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</span></span> <span data-ttu-id="38241-226">Ao inserir o valor para o <xref:System.Collections.ArrayList>, esse índice deve ser usado como o ponto de inserção para manter a ordem de classificação.</span><span class="sxs-lookup"><span data-stu-id="38241-226">When inserting the value into the <xref:System.Collections.ArrayList>, this index should be used as the insertion point to maintain the sort order.</span></span>  
  
 <span data-ttu-id="38241-227">Este método é uma operação O(log `n`), em que `n` é <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="38241-227">This method is an O(log `n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38241-228">O exemplo a seguir cria um <xref:System.Collections.ArrayList> de animais coloridas.</span><span class="sxs-lookup"><span data-stu-id="38241-228">The following example creates an <xref:System.Collections.ArrayList> of colored animals.</span></span> <span data-ttu-id="38241-229">Fornecido <xref:System.Collections.IComparer> executa a comparação de cadeia de caracteres para a pesquisa binária.</span><span class="sxs-lookup"><span data-stu-id="38241-229">The provided <xref:System.Collections.IComparer> performs the string comparison for the binary search.</span></span> <span data-ttu-id="38241-230">Os resultados de uma pesquisa interativa e uma pesquisa binária são exibidos.</span><span class="sxs-lookup"><span data-stu-id="38241-230">The results of both an iterative search and a binary search are displayed.</span></span>  
  
 [!code-cpp[Classic ArrayList.BinarySearch1 Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.BinarySearch1 Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic ArrayList.BinarySearch1 Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.BinarySearch1 Example/CS/source2.cs#2)]
 [!code-vb[Classic ArrayList.BinarySearch1 Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.BinarySearch1 Example/VB/source2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="38241-231"><paramref name="comparer" /> é <see langword="null" /> e nem <paramref name="value" /> ou os elementos de <see cref="T:System.Collections.ArrayList" /> implementam a interface <see cref="T:System.IComparable" />.</span><span class="sxs-lookup"><span data-stu-id="38241-231"><paramref name="comparer" /> is <see langword="null" /> and neither <paramref name="value" /> nor the elements of <see cref="T:System.Collections.ArrayList" /> implement the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="38241-232"><paramref name="comparer" /> é <see langword="null" /> e <paramref name="value" /> não é do mesmo tipo que os elementos de <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-232"><paramref name="comparer" /> is <see langword="null" /> and <paramref name="value" /> is not of the same type as the elements of the <see cref="T:System.Collections.ArrayList" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="38241-233">Executando operações de cadeia de caracteres que não levam em conta a cultura em coleções</span><span class="sxs-lookup"><span data-stu-id="38241-233">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public virtual int BinarySearch (int index, int count, object value, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 BinarySearch(int32 index, int32 count, object value, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BinarySearch (index As Integer, count As Integer, value As Object, comparer As IComparer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int BinarySearch(int index, int count, System::Object ^ value, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member BinarySearch : int * int * obj * System.Collections.IComparer -&gt; int&#xA;override this.BinarySearch : int * int * obj * System.Collections.IComparer -&gt; int" Usage="arrayList.BinarySearch (index, count, value, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="38241-234">O índice baseado em zero inicial do intervalo a ser pesquisado.</span><span class="sxs-lookup"><span data-stu-id="38241-234">The zero-based starting index of the range to search.</span></span></param>
        <param name="count"><span data-ttu-id="38241-235">O tamanho do intervalo a ser procurado.</span><span class="sxs-lookup"><span data-stu-id="38241-235">The length of the range to search.</span></span></param>
        <param name="value"><span data-ttu-id="38241-236">O <see cref="T:System.Object" /> a ser localizado.</span><span class="sxs-lookup"><span data-stu-id="38241-236">The <see cref="T:System.Object" /> to locate.</span></span> <span data-ttu-id="38241-237">O valor pode ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="38241-237">The value can be <see langword="null" />.</span></span></param>
        <param name="comparer"><span data-ttu-id="38241-238">A implementação de <see cref="T:System.Collections.IComparer" /> a ser usada durante a comparação de elementos.</span><span class="sxs-lookup"><span data-stu-id="38241-238">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span></span>  
  
<span data-ttu-id="38241-239">- ou -</span><span class="sxs-lookup"><span data-stu-id="38241-239">-or-</span></span> 
 <span data-ttu-id="38241-240"><see langword="null" /> para usar o comparador padrão que é a implementação <see cref="T:System.IComparable" /> de cada elemento.</span><span class="sxs-lookup"><span data-stu-id="38241-240"><see langword="null" /> to use the default comparer that is the <see cref="T:System.IComparable" /> implementation of each element.</span></span></param>
        <summary><span data-ttu-id="38241-241">Pesquisa um intervalo de elementos no <see cref="T:System.Collections.ArrayList" /> classificado para encontrar um elemento que usa o comparador especificado e retorna o índice baseado em zero do elemento.</span><span class="sxs-lookup"><span data-stu-id="38241-241">Searches a range of elements in the sorted <see cref="T:System.Collections.ArrayList" /> for an element using the specified comparer and returns the zero-based index of the element.</span></span></summary>
        <returns><span data-ttu-id="38241-242">O índice baseado em zero da <paramref name="value" /> no <see cref="T:System.Collections.ArrayList" /> classificado se <paramref name="value" /> for encontrado; caso contrário, um número negativo, que é o complemento bit a bit do índice do próximo elemento maior que <paramref name="value" /> ou, se não houver nenhum elemento maior, o complemento bit a bit de <see cref="P:System.Collections.ArrayList.Count" />.</span><span class="sxs-lookup"><span data-stu-id="38241-242">The zero-based index of <paramref name="value" /> in the sorted <see cref="T:System.Collections.ArrayList" />, if <paramref name="value" /> is found; otherwise, a negative number, which is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.ArrayList.Count" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38241-243">A comparação personaliza como os elementos são comparados.</span><span class="sxs-lookup"><span data-stu-id="38241-243">The comparer customizes how the elements are compared.</span></span> <span data-ttu-id="38241-244">Por exemplo, você pode usar um <xref:System.Collections.CaseInsensitiveComparer> instância como o comparador para executar pesquisas de cadeia de caracteres diferencia maiusculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="38241-244">For example, you can use a <xref:System.Collections.CaseInsensitiveComparer> instance as the comparer to perform case-insensitive string searches.</span></span>  
  
 <span data-ttu-id="38241-245">Se `comparer` for fornecido, os elementos do <xref:System.Collections.ArrayList> são comparados com o valor especificado usando especificado <xref:System.Collections.IComparer> implementação.</span><span class="sxs-lookup"><span data-stu-id="38241-245">If `comparer` is provided, the elements of the <xref:System.Collections.ArrayList> are compared to the specified value using the specified <xref:System.Collections.IComparer> implementation.</span></span> <span data-ttu-id="38241-246">Os elementos do <xref:System.Collections.ArrayList> já devem ser classificados em aumentar o valor de acordo com a ordem de classificação definida pelo `comparer`; caso contrário, o resultado pode estar incorreto.</span><span class="sxs-lookup"><span data-stu-id="38241-246">The elements of the <xref:System.Collections.ArrayList> must already be sorted in increasing value according to the sort order defined by `comparer`; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="38241-247">Caso `comparer` seja `null`, a comparação é feita usando-se a implementação de <xref:System.IComparable> fornecida pelo próprio elemento ou pelo valor especificado.</span><span class="sxs-lookup"><span data-stu-id="38241-247">If `comparer` is `null`, the comparison is done using the <xref:System.IComparable> implementation provided by the element itself or by the specified value.</span></span> <span data-ttu-id="38241-248">Os elementos do <xref:System.Collections.ArrayList> já devem ser classificados em aumentar o valor de acordo com a ordem de classificação definida pelo <xref:System.IComparable> implementação; caso contrário, o resultado pode estar incorreto.</span><span class="sxs-lookup"><span data-stu-id="38241-248">The elements of the <xref:System.Collections.ArrayList> must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable> implementation; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="38241-249">Comparando `null` com qualquer tipo é permitida e não gera uma exceção ao usar <xref:System.IComparable>.</span><span class="sxs-lookup"><span data-stu-id="38241-249">Comparing `null` with any type is allowed and does not generate an exception when using <xref:System.IComparable>.</span></span> <span data-ttu-id="38241-250">Durante a classificação, `null` é considerado menor que qualquer outro objeto.</span><span class="sxs-lookup"><span data-stu-id="38241-250">When sorting, `null` is considered to be less than any other object.</span></span>  
  
 <span data-ttu-id="38241-251">Se o <xref:System.Collections.ArrayList> contém mais de um elemento com o mesmo valor, o método retornará somente uma das ocorrências e pode retornar qualquer uma das ocorrências, não necessariamente o primeiro deles.</span><span class="sxs-lookup"><span data-stu-id="38241-251">If the <xref:System.Collections.ArrayList> contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</span></span>  
  
 <span data-ttu-id="38241-252">Caso o <xref:System.Collections.ArrayList> não contenha o valor especificado, o método retorna um inteiro negativo.</span><span class="sxs-lookup"><span data-stu-id="38241-252">If the <xref:System.Collections.ArrayList> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="38241-253">Você pode aplicar a operação de complemento bit a bit (~) para esse número inteiro negativo para obter o índice do primeiro elemento maior que o valor de pesquisa.</span><span class="sxs-lookup"><span data-stu-id="38241-253">You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</span></span> <span data-ttu-id="38241-254">Ao inserir o valor para o <xref:System.Collections.ArrayList>, esse índice deve ser usado como o ponto de inserção para manter a ordem de classificação.</span><span class="sxs-lookup"><span data-stu-id="38241-254">When inserting the value into the <xref:System.Collections.ArrayList>, this index should be used as the insertion point to maintain the sort order.</span></span>  
  
 <span data-ttu-id="38241-255">Este método é uma operação O(log `n`), em que `n` é `count`.</span><span class="sxs-lookup"><span data-stu-id="38241-255">This method is an O(log `n`) operation, where `n` is `count`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="38241-256"><paramref name="index" /> e <paramref name="count" /> não denotam um intervalo válido em <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-256"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in the <see cref="T:System.Collections.ArrayList" />.</span></span>  
  
<span data-ttu-id="38241-257">- ou -</span><span class="sxs-lookup"><span data-stu-id="38241-257">-or-</span></span> 
 <span data-ttu-id="38241-258"><paramref name="comparer" /> é <see langword="null" /> e nem <paramref name="value" /> ou os elementos de <see cref="T:System.Collections.ArrayList" /> implementam a interface <see cref="T:System.IComparable" />.</span><span class="sxs-lookup"><span data-stu-id="38241-258"><paramref name="comparer" /> is <see langword="null" /> and neither <paramref name="value" /> nor the elements of <see cref="T:System.Collections.ArrayList" /> implement the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="38241-259"><paramref name="comparer" /> é <see langword="null" /> e <paramref name="value" /> não é do mesmo tipo que os elementos de <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-259"><paramref name="comparer" /> is <see langword="null" /> and <paramref name="value" /> is not of the same type as the elements of the <see cref="T:System.Collections.ArrayList" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="38241-260"><paramref name="index" /> é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="38241-260"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="38241-261">- ou -</span><span class="sxs-lookup"><span data-stu-id="38241-261">-or-</span></span> 
 <span data-ttu-id="38241-262"><paramref name="count" /> é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="38241-262"><paramref name="count" /> is less than zero.</span></span></exception>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="38241-263">Executando operações de cadeia de caracteres que não levam em conta a cultura em coleções</span><span class="sxs-lookup"><span data-stu-id="38241-263">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Capacity">
      <MemberSignature Language="C#" Value="public virtual int Capacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Capacity" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.Capacity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Capacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Capacity { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Capacity : int with get, set" Usage="System.Collections.ArrayList.Capacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38241-264">Obtém ou define o número de elementos que o <see cref="T:System.Collections.ArrayList" /> pode conter.</span><span class="sxs-lookup"><span data-stu-id="38241-264">Gets or sets the number of elements that the <see cref="T:System.Collections.ArrayList" /> can contain.</span></span></summary>
        <value><span data-ttu-id="38241-265">O número de elementos que o <see cref="T:System.Collections.ArrayList" /> pode conter.</span><span class="sxs-lookup"><span data-stu-id="38241-265">The number of elements that the <see cref="T:System.Collections.ArrayList" /> can contain.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38241-266"><xref:System.Collections.ArrayList.Capacity%2A> é o número de elementos que o <xref:System.Collections.ArrayList> pode armazenar.</span><span class="sxs-lookup"><span data-stu-id="38241-266"><xref:System.Collections.ArrayList.Capacity%2A> is the number of elements that the <xref:System.Collections.ArrayList> can store.</span></span> <span data-ttu-id="38241-267"><xref:System.Collections.ArrayList.Count%2A> é o número de elementos que estão realmente no <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="38241-267"><xref:System.Collections.ArrayList.Count%2A> is the number of elements that are actually in the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="38241-268"><xref:System.Collections.ArrayList.Capacity%2A> é sempre maior que ou igual a <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="38241-268"><xref:System.Collections.ArrayList.Capacity%2A> is always greater than or equal to <xref:System.Collections.ArrayList.Count%2A>.</span></span> <span data-ttu-id="38241-269">Se <xref:System.Collections.ArrayList.Count%2A> excede <xref:System.Collections.ArrayList.Capacity%2A> durante a adição de elementos, a capacidade é aumentada automaticamente, realocando a matriz interna antes de copiar os elementos antigos e adição de novos elementos.</span><span class="sxs-lookup"><span data-stu-id="38241-269">If <xref:System.Collections.ArrayList.Count%2A> exceeds <xref:System.Collections.ArrayList.Capacity%2A> while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="38241-270">A capacidade pode ser diminuída chamando <xref:System.Collections.ArrayList.TrimToSize%2A> ou definindo o <xref:System.Collections.ArrayList.Capacity%2A> propriedade explicitamente.</span><span class="sxs-lookup"><span data-stu-id="38241-270">The capacity can be decreased by calling <xref:System.Collections.ArrayList.TrimToSize%2A> or by setting the <xref:System.Collections.ArrayList.Capacity%2A> property explicitly.</span></span> <span data-ttu-id="38241-271">Quando o valor de <xref:System.Collections.ArrayList.Capacity%2A> for definido explicitamente, a matriz interna é também realocada para acomodar a capacidade especificada.</span><span class="sxs-lookup"><span data-stu-id="38241-271">When the value of <xref:System.Collections.ArrayList.Capacity%2A> is set explicitly, the internal array is also reallocated to accommodate the specified capacity.</span></span>  
  
 <span data-ttu-id="38241-272">Recuperando o valor dessa propriedade é uma operação de (1); configuração da propriedade é um O (`n`) a operação, onde `n` é a nova capacidade.</span><span class="sxs-lookup"><span data-stu-id="38241-272">Retrieving the value of this property is an O(1) operation; setting the property is an O(`n`) operation, where `n` is the new capacity.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="38241-273"><see cref="P:System.Collections.ArrayList.Capacity" /> é definido como um valor menor que <see cref="P:System.Collections.ArrayList.Count" />.</span><span class="sxs-lookup"><span data-stu-id="38241-273"><see cref="P:System.Collections.ArrayList.Capacity" /> is set to a value that is less than <see cref="P:System.Collections.ArrayList.Count" />.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="38241-274">Não há memória suficiente disponível no sistema.</span><span class="sxs-lookup"><span data-stu-id="38241-274">There is not enough memory available on the system.</span></span></exception>
        <altmember cref="P:System.Collections.ArrayList.Count" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="arrayList.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="38241-275">Remove todos os elementos do <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-275">Removes all elements from the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38241-276"><xref:System.Collections.ArrayList.Count%2A> é definido como zero e referências a outros objetos de elementos da coleção também são liberadas.</span><span class="sxs-lookup"><span data-stu-id="38241-276"><xref:System.Collections.ArrayList.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="38241-277"><xref:System.Collections.ArrayList.Capacity%2A> permanece inalterado.</span><span class="sxs-lookup"><span data-stu-id="38241-277"><xref:System.Collections.ArrayList.Capacity%2A> remains unchanged.</span></span>  <span data-ttu-id="38241-278">Para redefinir a capacidade do <xref:System.Collections.ArrayList>, chame <xref:System.Collections.ArrayList.TrimToSize%2A> ou defina o <xref:System.Collections.ArrayList.Capacity%2A> propriedade diretamente.</span><span class="sxs-lookup"><span data-stu-id="38241-278">To reset the capacity of the <xref:System.Collections.ArrayList>, call <xref:System.Collections.ArrayList.TrimToSize%2A> or set the <xref:System.Collections.ArrayList.Capacity%2A> property directly.</span></span> <span data-ttu-id="38241-279">Cortar um vazio <xref:System.Collections.ArrayList> define a capacidade do <xref:System.Collections.ArrayList> para a capacidade padrão.</span><span class="sxs-lookup"><span data-stu-id="38241-279">Trimming an empty <xref:System.Collections.ArrayList> sets the capacity of the <xref:System.Collections.ArrayList> to the default capacity.</span></span>  
  
 <span data-ttu-id="38241-280">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="38241-280">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38241-281">O exemplo de código a seguir mostra como cortar as partes não usadas do <xref:System.Collections.ArrayList> e como limpar os valores da <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="38241-281">The following code example shows how to trim the unused portions of the <xref:System.Collections.ArrayList> and how to clear the values of the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="38241-282">O <see cref="T:System.Collections.ArrayList" /> é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="38241-282">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span>  
  
<span data-ttu-id="38241-283">- ou -</span><span class="sxs-lookup"><span data-stu-id="38241-283">-or-</span></span> 
<span data-ttu-id="38241-284">O <see cref="T:System.Collections.ArrayList" /> tem um tamanho fixo.</span><span class="sxs-lookup"><span data-stu-id="38241-284">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.TrimToSize" />
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
        <altmember cref="P:System.Collections.ArrayList.Count" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="arrayList.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="38241-285">Cria uma cópia superficial do <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-285">Creates a shallow copy of the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <returns><span data-ttu-id="38241-286">Uma cópia superficial do <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-286">A shallow copy of the <see cref="T:System.Collections.ArrayList" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38241-287">Uma cópia superficial de uma coleção copia apenas os elementos da coleção, se eles são tipos de referência ou tipos de valor, mas não copia os objetos que referenciam as referências.</span><span class="sxs-lookup"><span data-stu-id="38241-287">A shallow copy of a collection copies only the elements of the collection, whether they are reference types or value types, but it does not copy the objects that the references refer to.</span></span> <span data-ttu-id="38241-288">As referências na nova coleção apontam para os mesmos objetos que as referências na coleção original apontem para.</span><span class="sxs-lookup"><span data-stu-id="38241-288">The references in the new collection point to the same objects that the references in the original collection point to.</span></span>  
  
 <span data-ttu-id="38241-289">Em contraste, uma cópia em profundidade de uma coleção copia os elementos e tudo direta ou indiretamente referenciado pelos elementos.</span><span class="sxs-lookup"><span data-stu-id="38241-289">In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="38241-290">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="38241-290">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains (item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Contains : obj -&gt; bool&#xA;override this.Contains : obj -&gt; bool" Usage="arrayList.Contains item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="38241-291">O <see cref="T:System.Object" /> a ser localizado no <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-291">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="38241-292">O valor pode ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="38241-292">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="38241-293">Determina se um elemento está no <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-293">Determines whether an element is in the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <returns><span data-ttu-id="38241-294"><see langword="true" /> se <paramref name="item" /> for encontrado no <see cref="T:System.Collections.ArrayList" />; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="38241-294"><see langword="true" /> if <paramref name="item" /> is found in the <see cref="T:System.Collections.ArrayList" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38241-295">Este método executa uma pesquisa linear; por isso, esse método é uma operação O(`n`), em que `n` é <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="38241-295">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
 <span data-ttu-id="38241-296">Este método determina a igualdade chamando <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="38241-296">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="38241-297">Começando com o .NET Framework 2.0, esse método usa o objeto da coleção <xref:System.Object.Equals%2A> e <xref:System.IComparable.CompareTo%2A> métodos em `item` para determinar se o item existe.</span><span class="sxs-lookup"><span data-stu-id="38241-297">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="38241-298">Em versões anteriores do .NET Framework, essa decisão era tomada usando-se os métodos <xref:System.Object.Equals%2A> e <xref:System.IComparable.CompareTo%2A> do parâmetro `item` nos objetos na coleção.</span><span class="sxs-lookup"><span data-stu-id="38241-298">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ArrayList.IndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.LastIndexOf(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="38241-299">Executando operações de cadeia de caracteres que não levam em conta a cultura em coleções</span><span class="sxs-lookup"><span data-stu-id="38241-299">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="38241-300">Copia o <see cref="T:System.Collections.ArrayList" />, ou parte dele, para uma matriz unidimensional.</span><span class="sxs-lookup"><span data-stu-id="38241-300">Copies the <see cref="T:System.Collections.ArrayList" /> or a portion of it to a one-dimensional array.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.CopyTo(System.Array)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array -&gt; unit&#xA;override this.CopyTo : Array -&gt; unit" Usage="arrayList.CopyTo array" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="38241-301">O <see cref="T:System.Array" /> unidimensional que é o destino dos elementos copiados de <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-301">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="38241-302">O <see cref="T:System.Array" /> deve ter indexação com base em zero.</span><span class="sxs-lookup"><span data-stu-id="38241-302">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <summary><span data-ttu-id="38241-303">Copia todo o <see cref="T:System.Collections.ArrayList" /> para um <see cref="T:System.Array" /> unidimensional compatível, a partir do início da matriz de destino.</span><span class="sxs-lookup"><span data-stu-id="38241-303">Copies the entire <see cref="T:System.Collections.ArrayList" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the beginning of the target array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38241-304">A matriz especificada deve ser de um tipo compatível.</span><span class="sxs-lookup"><span data-stu-id="38241-304">The specified array must be of a compatible type.</span></span>  
  
 <span data-ttu-id="38241-305">Este método usa <xref:System.Array.Copy%2A?displayProperty=nameWithType> para copiar os elementos.</span><span class="sxs-lookup"><span data-stu-id="38241-305">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="38241-306">Os elementos são copiados para o <xref:System.Array> na mesma ordem em que o enumerador que itera por meio de <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="38241-306">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="38241-307">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="38241-307">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38241-308">O exemplo de código a seguir mostra como copiar um <xref:System.Collections.ArrayList> em um unidimensional <xref:System.Array?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="38241-308">The following code example shows how to copy an <xref:System.Collections.ArrayList> into a one-dimensional <xref:System.Array?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[Classic ArrayList.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="38241-309"><paramref name="array" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="38241-309"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="38241-310"><paramref name="array" /> é multidimensional.</span><span class="sxs-lookup"><span data-stu-id="38241-310"><paramref name="array" /> is multidimensional.</span></span>  
  
<span data-ttu-id="38241-311">- ou -</span><span class="sxs-lookup"><span data-stu-id="38241-311">-or-</span></span> 
<span data-ttu-id="38241-312">O número de elementos no <see cref="T:System.Collections.ArrayList" /> de origem é maior que o número de elementos que o <paramref name="array" /> de destino pode conter.</span><span class="sxs-lookup"><span data-stu-id="38241-312">The number of elements in the source <see cref="T:System.Collections.ArrayList" /> is greater than the number of elements that the destination <paramref name="array" /> can contain.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="38241-313">O tipo do <see cref="T:System.Collections.ArrayList" /> de origem não pode ser automaticamente convertido para o tipo de <paramref name="array" /> de destino.</span><span class="sxs-lookup"><span data-stu-id="38241-313">The type of the source <see cref="T:System.Collections.ArrayList" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="arrayList.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="38241-314">O <see cref="T:System.Array" /> unidimensional que é o destino dos elementos copiados de <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-314">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="38241-315">O <see cref="T:System.Array" /> deve ter indexação com base em zero.</span><span class="sxs-lookup"><span data-stu-id="38241-315">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="38241-316">O índice com base em zero em <paramref name="array" /> no qual a cópia começa.</span><span class="sxs-lookup"><span data-stu-id="38241-316">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="38241-317">Copia todo o <see cref="T:System.Collections.ArrayList" /> em um <see cref="T:System.Array" /> unidimensional compatível, começando no índice especificado da matriz de destino.</span><span class="sxs-lookup"><span data-stu-id="38241-317">Copies the entire <see cref="T:System.Collections.ArrayList" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38241-318">A matriz especificada deve ser de um tipo compatível.</span><span class="sxs-lookup"><span data-stu-id="38241-318">The specified array must be of a compatible type.</span></span>  
  
 <span data-ttu-id="38241-319">Este método usa <xref:System.Array.Copy%2A?displayProperty=nameWithType> para copiar os elementos.</span><span class="sxs-lookup"><span data-stu-id="38241-319">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="38241-320">Os elementos são copiados para o <xref:System.Array> na mesma ordem em que o enumerador que itera por meio de <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="38241-320">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="38241-321">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="38241-321">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38241-322">O exemplo de código a seguir mostra como copiar um <xref:System.Collections.ArrayList> em um unidimensional <xref:System.Array?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="38241-322">The following code example shows how to copy an <xref:System.Collections.ArrayList> into a one-dimensional <xref:System.Array?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[Classic ArrayList.CopyTo1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.CopyTo1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo1 Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.CopyTo1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="38241-323"><paramref name="array" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="38241-323"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="38241-324"><paramref name="arrayIndex" /> é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="38241-324"><paramref name="arrayIndex" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="38241-325"><paramref name="array" /> é multidimensional.</span><span class="sxs-lookup"><span data-stu-id="38241-325"><paramref name="array" /> is multidimensional.</span></span>  
  
<span data-ttu-id="38241-326">- ou -</span><span class="sxs-lookup"><span data-stu-id="38241-326">-or-</span></span> 
<span data-ttu-id="38241-327">O número de elementos na origem <see cref="T:System.Collections.ArrayList" /> é maior do que o espaço disponível de <paramref name="arrayIndex" /> até o final do <paramref name="array" /> de destino.</span><span class="sxs-lookup"><span data-stu-id="38241-327">The number of elements in the source <see cref="T:System.Collections.ArrayList" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="38241-328">O tipo do <see cref="T:System.Collections.ArrayList" /> de origem não pode ser automaticamente convertido para o tipo de <paramref name="array" /> de destino.</span><span class="sxs-lookup"><span data-stu-id="38241-328">The type of the source <see cref="T:System.Collections.ArrayList" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (int index, Array array, int arrayIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(int32 index, class System.Array array, int32 arrayIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.CopyTo(System.Int32,System.Array,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(int index, Array ^ array, int arrayIndex, int count);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : int * Array * int * int -&gt; unit&#xA;override this.CopyTo : int * Array * int * int -&gt; unit" Usage="arrayList.CopyTo (index, array, arrayIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="38241-329">O índice baseado em zero no <see cref="T:System.Collections.ArrayList" /> de origem em que a cópia começa.</span><span class="sxs-lookup"><span data-stu-id="38241-329">The zero-based index in the source <see cref="T:System.Collections.ArrayList" /> at which copying begins.</span></span></param>
        <param name="array"><span data-ttu-id="38241-330">O <see cref="T:System.Array" /> unidimensional que é o destino dos elementos copiados de <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-330">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="38241-331">O <see cref="T:System.Array" /> deve ter indexação com base em zero.</span><span class="sxs-lookup"><span data-stu-id="38241-331">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="38241-332">O índice com base em zero em <paramref name="array" /> no qual a cópia começa.</span><span class="sxs-lookup"><span data-stu-id="38241-332">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <param name="count"><span data-ttu-id="38241-333">O número de elementos a serem copiados.</span><span class="sxs-lookup"><span data-stu-id="38241-333">The number of elements to copy.</span></span></param>
        <summary><span data-ttu-id="38241-334">Copia um intervalo de elementos do <see cref="T:System.Collections.ArrayList" /> para um <see cref="T:System.Array" /> unidimensional compatível, começando pelo índice especificado da matriz de destino.</span><span class="sxs-lookup"><span data-stu-id="38241-334">Copies a range of elements from the <see cref="T:System.Collections.ArrayList" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38241-335">A matriz especificada deve ser de um tipo compatível.</span><span class="sxs-lookup"><span data-stu-id="38241-335">The specified array must be of a compatible type.</span></span>  
  
 <span data-ttu-id="38241-336">Este método usa <xref:System.Array.Copy%2A?displayProperty=nameWithType> para copiar os elementos.</span><span class="sxs-lookup"><span data-stu-id="38241-336">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="38241-337">Os elementos são copiados para o <xref:System.Array> na mesma ordem em que o enumerador que itera por meio de <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="38241-337">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="38241-338">Este método é uma operação O(`n`), em que `n` é `count`.</span><span class="sxs-lookup"><span data-stu-id="38241-338">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38241-339">O exemplo de código a seguir mostra como copiar um <xref:System.Collections.ArrayList> em um unidimensional <xref:System.Array?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="38241-339">The following code example shows how to copy an <xref:System.Collections.ArrayList> into a one-dimensional <xref:System.Array?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[Classic ArrayList.CopyTo1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.CopyTo1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo1 Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.CopyTo1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="38241-340"><paramref name="array" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="38241-340"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="38241-341"><paramref name="index" /> é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="38241-341"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="38241-342">- ou -</span><span class="sxs-lookup"><span data-stu-id="38241-342">-or-</span></span> 
 <span data-ttu-id="38241-343"><paramref name="arrayIndex" /> é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="38241-343"><paramref name="arrayIndex" /> is less than zero.</span></span>  
  
<span data-ttu-id="38241-344">- ou -</span><span class="sxs-lookup"><span data-stu-id="38241-344">-or-</span></span> 
 <span data-ttu-id="38241-345"><paramref name="count" /> é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="38241-345"><paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="38241-346"><paramref name="array" /> é multidimensional.</span><span class="sxs-lookup"><span data-stu-id="38241-346"><paramref name="array" /> is multidimensional.</span></span>  
  
<span data-ttu-id="38241-347">- ou -</span><span class="sxs-lookup"><span data-stu-id="38241-347">-or-</span></span> 
 <span data-ttu-id="38241-348"><paramref name="index" /> é igual a ou maior que o <see cref="P:System.Collections.ArrayList.Count" /> do <see cref="T:System.Collections.ArrayList" /> de origem.</span><span class="sxs-lookup"><span data-stu-id="38241-348"><paramref name="index" /> is equal to or greater than the <see cref="P:System.Collections.ArrayList.Count" /> of the source <see cref="T:System.Collections.ArrayList" />.</span></span>  
  
<span data-ttu-id="38241-349">- ou -</span><span class="sxs-lookup"><span data-stu-id="38241-349">-or-</span></span> 
<span data-ttu-id="38241-350">O número de elementos de <paramref name="index" /> até o final do <see cref="T:System.Collections.ArrayList" /> de origem é maior que o espaço disponível do <paramref name="arrayIndex" /> até o final do <paramref name="array" /> de destino.</span><span class="sxs-lookup"><span data-stu-id="38241-350">The number of elements from <paramref name="index" /> to the end of the source <see cref="T:System.Collections.ArrayList" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="38241-351">O tipo do <see cref="T:System.Collections.ArrayList" /> de origem não pode ser automaticamente convertido para o tipo de <paramref name="array" /> de destino.</span><span class="sxs-lookup"><span data-stu-id="38241-351">The type of the source <see cref="T:System.Collections.ArrayList" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.ArrayList.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38241-352">Obtém o número de elementos realmente contidos no <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-352">Gets the number of elements actually contained in the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <value><span data-ttu-id="38241-353">O número de elementos realmente contidos no <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-353">The number of elements actually contained in the <see cref="T:System.Collections.ArrayList" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38241-354"><xref:System.Collections.ArrayList.Capacity%2A> é o número de elementos que o <xref:System.Collections.ArrayList> pode armazenar.</span><span class="sxs-lookup"><span data-stu-id="38241-354"><xref:System.Collections.ArrayList.Capacity%2A> is the number of elements that the <xref:System.Collections.ArrayList> can store.</span></span> <span data-ttu-id="38241-355"><xref:System.Collections.ArrayList.Count%2A> é o número de elementos que estão realmente no <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="38241-355"><xref:System.Collections.ArrayList.Count%2A> is the number of elements that are actually in the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="38241-356"><xref:System.Collections.ArrayList.Capacity%2A> é sempre maior que ou igual a <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="38241-356"><xref:System.Collections.ArrayList.Capacity%2A> is always greater than or equal to <xref:System.Collections.ArrayList.Count%2A>.</span></span> <span data-ttu-id="38241-357">Se <xref:System.Collections.ArrayList.Count%2A> excede <xref:System.Collections.ArrayList.Capacity%2A> durante a adição de elementos, a capacidade é aumentada automaticamente, realocando a matriz interna antes de copiar os elementos antigos e adição de novos elementos.</span><span class="sxs-lookup"><span data-stu-id="38241-357">If <xref:System.Collections.ArrayList.Count%2A> exceeds <xref:System.Collections.ArrayList.Capacity%2A> while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="38241-358">A recuperação do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="38241-358">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FixedSize">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="38241-359">Retorna um wrapper de lista com um tamanho fixo, em que os elementos podem ser modificados, mas não adicionados nem removidos.</span><span class="sxs-lookup"><span data-stu-id="38241-359">Returns a list wrapper with a fixed size, where elements are allowed to be modified, but not added or removed.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FixedSize">
      <MemberSignature Language="C#" Value="public static System.Collections.ArrayList FixedSize (System.Collections.ArrayList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ArrayList FixedSize(class System.Collections.ArrayList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.FixedSize(System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FixedSize (list As ArrayList) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ArrayList ^ FixedSize(System::Collections::ArrayList ^ list);" />
      <MemberSignature Language="F#" Value="static member FixedSize : System.Collections.ArrayList -&gt; System.Collections.ArrayList" Usage="System.Collections.ArrayList.FixedSize list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="list"><span data-ttu-id="38241-360">O <see cref="T:System.Collections.ArrayList" /> a ser encapsulado.</span><span class="sxs-lookup"><span data-stu-id="38241-360">The <see cref="T:System.Collections.ArrayList" /> to wrap.</span></span></param>
        <summary><span data-ttu-id="38241-361">Retorna um wrapper <see cref="T:System.Collections.ArrayList" /> com um tamanho fixo.</span><span class="sxs-lookup"><span data-stu-id="38241-361">Returns an <see cref="T:System.Collections.ArrayList" /> wrapper with a fixed size.</span></span></summary>
        <returns><span data-ttu-id="38241-362">Um wrapper <see cref="T:System.Collections.ArrayList" /> com um tamanho fixo.</span><span class="sxs-lookup"><span data-stu-id="38241-362">An <see cref="T:System.Collections.ArrayList" /> wrapper with a fixed size.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38241-363">Esse wrapper pode ser usado para impedir adições e exclusões de original <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="38241-363">This wrapper can be used to prevent additions to and deletions from the original <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="38241-364">Os elementos ainda podem ser modificados ou substituídos.</span><span class="sxs-lookup"><span data-stu-id="38241-364">The elements can still be modified or replaced.</span></span>  
  
 <span data-ttu-id="38241-365">Uma coleção com um tamanho fixo é simplesmente uma coleção com um wrapper que impede a adição e a remoção de elementos; por isso, caso as alterações sejam feitas na coleção subjacente, inclusive a adição ou a remoção de elementos, a coleção de tamanho fixo reflete essas alterações.</span><span class="sxs-lookup"><span data-stu-id="38241-365">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="38241-366">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="38241-366">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38241-367">O exemplo de código a seguir mostra como criar um wrapper de tamanho fixo em torno um <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="38241-367">The following code example shows how to create a fixed-size wrapper around an <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsFixedSize Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsFixedSize Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IsFixedSize Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsFixedSize Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IsFixedSize Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsFixedSize Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="38241-368"><paramref name="list" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="38241-368"><paramref name="list" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FixedSize">
      <MemberSignature Language="C#" Value="public static System.Collections.IList FixedSize (System.Collections.IList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IList FixedSize(class System.Collections.IList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.FixedSize(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FixedSize (list As IList) As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IList ^ FixedSize(System::Collections::IList ^ list);" />
      <MemberSignature Language="F#" Value="static member FixedSize : System.Collections.IList -&gt; System.Collections.IList" Usage="System.Collections.ArrayList.FixedSize list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="list"><span data-ttu-id="38241-369">O <see cref="T:System.Collections.IList" /> a ser encapsulado.</span><span class="sxs-lookup"><span data-stu-id="38241-369">The <see cref="T:System.Collections.IList" /> to wrap.</span></span></param>
        <summary><span data-ttu-id="38241-370">Retorna um wrapper <see cref="T:System.Collections.IList" /> com um tamanho fixo.</span><span class="sxs-lookup"><span data-stu-id="38241-370">Returns an <see cref="T:System.Collections.IList" /> wrapper with a fixed size.</span></span></summary>
        <returns><span data-ttu-id="38241-371">Um wrapper <see cref="T:System.Collections.IList" /> com um tamanho fixo.</span><span class="sxs-lookup"><span data-stu-id="38241-371">An <see cref="T:System.Collections.IList" /> wrapper with a fixed size.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38241-372">Esse wrapper pode ser usado para impedir adições e exclusões de original <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="38241-372">This wrapper can be used to prevent additions to and deletions from the original <xref:System.Collections.IList>.</span></span> <span data-ttu-id="38241-373">Os elementos ainda podem ser modificados ou substituídos.</span><span class="sxs-lookup"><span data-stu-id="38241-373">The elements can still be modified or replaced.</span></span>  
  
 <span data-ttu-id="38241-374">Uma coleção com um tamanho fixo é simplesmente uma coleção com um wrapper que impede a adição e a remoção de elementos; por isso, caso as alterações sejam feitas na coleção subjacente, inclusive a adição ou a remoção de elementos, a coleção de tamanho fixo reflete essas alterações.</span><span class="sxs-lookup"><span data-stu-id="38241-374">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="38241-375">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="38241-375">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="38241-376"><paramref name="list" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="38241-376"><paramref name="list" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEnumerator">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="38241-377">Retorna um enumerador que itera por meio de <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-377">Returns an enumerator that iterates through the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="arrayList.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="38241-378">Retorna um enumerador para todo o <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-378">Returns an enumerator for the entire <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <returns><span data-ttu-id="38241-379">Um <see cref="T:System.Collections.IEnumerator" /> para todo o <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-379">An <see cref="T:System.Collections.IEnumerator" /> for the entire <see cref="T:System.Collections.ArrayList" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38241-380">O `foreach` instrução da linguagem C# (`for each` no Visual Basic) oculta a complexidade dos enumeradores.</span><span class="sxs-lookup"><span data-stu-id="38241-380">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="38241-381">Portanto, o uso de `foreach` é recomendado, em vez de manipular diretamente o enumerador.</span><span class="sxs-lookup"><span data-stu-id="38241-381">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="38241-382">Os enumeradores podem ser usados para ler os dados na coleção, mas não podem ser usados para modificar a coleção subjacente.</span><span class="sxs-lookup"><span data-stu-id="38241-382">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="38241-383">Inicialmente, o enumerador é posicionado antes do primeiro elemento da coleção.</span><span class="sxs-lookup"><span data-stu-id="38241-383">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="38241-384"><xref:System.Collections.IEnumerator.Reset%2A> também traz o enumerador de volta para essa posição.</span><span class="sxs-lookup"><span data-stu-id="38241-384"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="38241-385">Nesta posição, <xref:System.Collections.IEnumerator.Current%2A> está indefinido.</span><span class="sxs-lookup"><span data-stu-id="38241-385">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="38241-386">Por isso, você deve chamar <xref:System.Collections.IEnumerator.MoveNext%2A> para avançar o enumerador até o primeiro elemento da coleção antes de ler o valor de <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="38241-386">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="38241-387"><xref:System.Collections.IEnumerator.Current%2A> retorna o mesmo objeto até <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> ser chamado.</span><span class="sxs-lookup"><span data-stu-id="38241-387"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="38241-388"><xref:System.Collections.IEnumerator.MoveNext%2A> define <xref:System.Collections.IEnumerator.Current%2A> como o próximo elemento.</span><span class="sxs-lookup"><span data-stu-id="38241-388"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="38241-389">Caso <xref:System.Collections.IEnumerator.MoveNext%2A> passe o final da coleção, o enumerador é posicionado após o último elemento na coleção e <xref:System.Collections.IEnumerator.MoveNext%2A> retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="38241-389">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="38241-390">Quando o enumerador está nessa posição, as chamadas subsequentes para <xref:System.Collections.IEnumerator.MoveNext%2A> também retornam `false`.</span><span class="sxs-lookup"><span data-stu-id="38241-390">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="38241-391">Caso a última chamada para <xref:System.Collections.IEnumerator.MoveNext%2A> tenha retornado `false`, <xref:System.Collections.IEnumerator.Current%2A> está indefinido.</span><span class="sxs-lookup"><span data-stu-id="38241-391">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="38241-392">Para definir <xref:System.Collections.IEnumerator.Current%2A> como o primeiro elemento da coleção novamente, é possível chamar <xref:System.Collections.IEnumerator.Reset%2A> seguido de <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="38241-392">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="38241-393">Um enumerador permanece válido desde que a coleção continue inalterada.</span><span class="sxs-lookup"><span data-stu-id="38241-393">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="38241-394">Se forem feitas alterações na coleção, como adicionar, modificar ou excluir elementos, o enumerador será invalidado de maneira irrevogável e seu comportamento permanecerá indefinido.</span><span class="sxs-lookup"><span data-stu-id="38241-394">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="38241-395">O enumerador não tem acesso exclusivo à coleção; por isso, a enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="38241-395">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="38241-396">Para garantir acesso thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração.</span><span class="sxs-lookup"><span data-stu-id="38241-396">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="38241-397">Para permitir que a coleção seja acessada por vários threads para leitura e gravação, você deve implementar sua própria sincronização.</span><span class="sxs-lookup"><span data-stu-id="38241-397">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="38241-398">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="38241-398">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38241-399">O exemplo a seguir obtém o enumerador para um <xref:System.Collections.ArrayList>e o enumerador para um intervalo de elementos no <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="38241-399">The following example gets the enumerator for an <xref:System.Collections.ArrayList>, and the enumerator for a range of elements in the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-csharp[Collections.ArrayList.GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_CLR/collections.arraylist.getenumerator/cs/program.cs#1)]
 [!code-vb[Collections.ArrayList.GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/collections.arraylist.getenumerator/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.GetEnumerator(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator (index As Integer, count As Integer) As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator(int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : int * int -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : int * int -&gt; System.Collections.IEnumerator" Usage="arrayList.GetEnumerator (index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="38241-400">O índice inicial baseado em zero da seção <see cref="T:System.Collections.ArrayList" /> que o enumerador deve consultar.</span><span class="sxs-lookup"><span data-stu-id="38241-400">The zero-based starting index of the <see cref="T:System.Collections.ArrayList" /> section that the enumerator should refer to.</span></span></param>
        <param name="count"><span data-ttu-id="38241-401">O número de elementos na seção <see cref="T:System.Collections.ArrayList" /> que o enumerador deve consultar.</span><span class="sxs-lookup"><span data-stu-id="38241-401">The number of elements in the <see cref="T:System.Collections.ArrayList" /> section that the enumerator should refer to.</span></span></param>
        <summary><span data-ttu-id="38241-402">Retorna um enumerador para um intervalo de elementos no <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-402">Returns an enumerator for a range of elements in the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <returns><span data-ttu-id="38241-403">Um <see cref="T:System.Collections.IEnumerator" /> para o intervalo especificado de elementos no <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-403">An <see cref="T:System.Collections.IEnumerator" /> for the specified range of elements in the <see cref="T:System.Collections.ArrayList" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38241-404">O `foreach` instrução da linguagem C# (`for each` no Visual C++, `For Each` Visual Basic) oculta a complexidade dos enumeradores.</span><span class="sxs-lookup"><span data-stu-id="38241-404">The `foreach` statement of the C# language (`for each` in Visual C++, `For Each` Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="38241-405">Portanto, o uso de `foreach` é recomendado, em vez de manipular diretamente o enumerador.</span><span class="sxs-lookup"><span data-stu-id="38241-405">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="38241-406">Os enumeradores podem ser usados para ler os dados na coleção, mas não podem ser usados para modificar a coleção subjacente.</span><span class="sxs-lookup"><span data-stu-id="38241-406">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="38241-407">Inicialmente, o enumerador é posicionado antes do primeiro elemento da coleção.</span><span class="sxs-lookup"><span data-stu-id="38241-407">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="38241-408"><xref:System.Collections.IEnumerator.Reset%2A> também traz o enumerador de volta para essa posição.</span><span class="sxs-lookup"><span data-stu-id="38241-408"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="38241-409">Nesta posição, <xref:System.Collections.IEnumerator.Current%2A> está indefinido.</span><span class="sxs-lookup"><span data-stu-id="38241-409">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="38241-410">Por isso, você deve chamar <xref:System.Collections.IEnumerator.MoveNext%2A> para avançar o enumerador até o primeiro elemento da coleção antes de ler o valor de <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="38241-410">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="38241-411"><xref:System.Collections.IEnumerator.Current%2A> retorna o mesmo objeto até <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> ser chamado.</span><span class="sxs-lookup"><span data-stu-id="38241-411"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="38241-412"><xref:System.Collections.IEnumerator.MoveNext%2A> define <xref:System.Collections.IEnumerator.Current%2A> como o próximo elemento.</span><span class="sxs-lookup"><span data-stu-id="38241-412"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="38241-413">Caso <xref:System.Collections.IEnumerator.MoveNext%2A> passe o final da coleção, o enumerador é posicionado após o último elemento na coleção e <xref:System.Collections.IEnumerator.MoveNext%2A> retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="38241-413">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="38241-414">Quando o enumerador está nessa posição, as chamadas subsequentes para <xref:System.Collections.IEnumerator.MoveNext%2A> também retornam `false`.</span><span class="sxs-lookup"><span data-stu-id="38241-414">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="38241-415">Caso a última chamada para <xref:System.Collections.IEnumerator.MoveNext%2A> tenha retornado `false`, <xref:System.Collections.IEnumerator.Current%2A> está indefinido.</span><span class="sxs-lookup"><span data-stu-id="38241-415">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="38241-416">Para definir <xref:System.Collections.IEnumerator.Current%2A> como o primeiro elemento da coleção novamente, é possível chamar <xref:System.Collections.IEnumerator.Reset%2A> seguido de <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="38241-416">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="38241-417">Um enumerador permanece válido desde que a coleção continue inalterada.</span><span class="sxs-lookup"><span data-stu-id="38241-417">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="38241-418">Se forem feitas alterações na coleção, como adicionar, modificar ou excluir elementos, o enumerador será invalidado de maneira irrevogável e seu comportamento permanecerá indefinido.</span><span class="sxs-lookup"><span data-stu-id="38241-418">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="38241-419">O enumerador não tem acesso exclusivo à coleção; por isso, a enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="38241-419">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="38241-420">Para garantir acesso thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração.</span><span class="sxs-lookup"><span data-stu-id="38241-420">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="38241-421">Para permitir que a coleção seja acessada por vários threads para leitura e gravação, você deve implementar sua própria sincronização.</span><span class="sxs-lookup"><span data-stu-id="38241-421">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="38241-422">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="38241-422">This method is an O(1) operation.</span></span>  
  
## <a name="version-compatibility"></a><span data-ttu-id="38241-423">Compatibilidade de versões</span><span class="sxs-lookup"><span data-stu-id="38241-423">Version Compatibility</span></span>  
 <span data-ttu-id="38241-424">Nas versões do .NET Framework 1.0 e 1.1, o enumerador para um <xref:System.Collections.ArrayList> wrapper retornado pelo <xref:System.Collections.ArrayList.Adapter%2A> método tratado o segundo argumento como um limite superior em vez de uma contagem.</span><span class="sxs-lookup"><span data-stu-id="38241-424">In the .NET Framework versions 1.0 and 1.1, the enumerator for an <xref:System.Collections.ArrayList> wrapper returned by the <xref:System.Collections.ArrayList.Adapter%2A> method treated the second argument as an upper bound rather than as a count.</span></span> <span data-ttu-id="38241-425">No [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] corretamente, o segundo argumento é tratado como uma contagem.</span><span class="sxs-lookup"><span data-stu-id="38241-425">In the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] the second argument is correctly treated as a count.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38241-426">O exemplo a seguir obtém o enumerador para um <xref:System.Collections.ArrayList>e o enumerador para um intervalo de elementos no <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="38241-426">The following example gets the enumerator for an <xref:System.Collections.ArrayList>, and the enumerator for a range of elements in the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-csharp[Collections.ArrayList.GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_CLR/collections.arraylist.getenumerator/cs/program.cs#1)]
 [!code-vb[Collections.ArrayList.GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/collections.arraylist.getenumerator/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="38241-427"><paramref name="index" /> é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="38241-427"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="38241-428">- ou -</span><span class="sxs-lookup"><span data-stu-id="38241-428">-or-</span></span> 
 <span data-ttu-id="38241-429"><paramref name="count" /> é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="38241-429"><paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="38241-430"><paramref name="index" /> e <paramref name="count" /> não especificam um intervalo válido no <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-430"><paramref name="index" /> and <paramref name="count" /> do not specify a valid range in the <see cref="T:System.Collections.ArrayList" />.</span></span></exception>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetRange">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ArrayList GetRange (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ArrayList GetRange(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRange (index As Integer, count As Integer) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::ArrayList ^ GetRange(int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member GetRange : int * int -&gt; System.Collections.ArrayList&#xA;override this.GetRange : int * int -&gt; System.Collections.ArrayList" Usage="arrayList.GetRange (index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="38241-431">O índice <see cref="T:System.Collections.ArrayList" /> baseado em zero no qual é iniciado o intervalo.</span><span class="sxs-lookup"><span data-stu-id="38241-431">The zero-based <see cref="T:System.Collections.ArrayList" /> index at which the range starts.</span></span></param>
        <param name="count"><span data-ttu-id="38241-432">O número de elementos no intervalo.</span><span class="sxs-lookup"><span data-stu-id="38241-432">The number of elements in the range.</span></span></param>
        <summary><span data-ttu-id="38241-433">Retorna um <see cref="T:System.Collections.ArrayList" /> que representa um subconjunto dos elementos na origem <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-433">Returns an <see cref="T:System.Collections.ArrayList" /> which represents a subset of the elements in the source <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <returns><span data-ttu-id="38241-434">Um <see cref="T:System.Collections.ArrayList" /> que representa um subconjunto dos elementos na origem <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-434">An <see cref="T:System.Collections.ArrayList" /> which represents a subset of the elements in the source <see cref="T:System.Collections.ArrayList" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38241-435">Esse método não cria cópias dos elementos.</span><span class="sxs-lookup"><span data-stu-id="38241-435">This method does not create copies of the elements.</span></span> <span data-ttu-id="38241-436">O novo <xref:System.Collections.ArrayList> é apenas uma janela de exibição na fonte de <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="38241-436">The new <xref:System.Collections.ArrayList> is only a view window into the source <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="38241-437">No entanto, todas as alterações subsequentes para a fonte <xref:System.Collections.ArrayList> deve ser feita por essa janela de exibição <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="38241-437">However, all subsequent changes to the source <xref:System.Collections.ArrayList> must be done through this view window <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="38241-438">Se forem feitas alterações diretamente para a fonte <xref:System.Collections.ArrayList>, a janela de exibição <xref:System.Collections.ArrayList> é invalidado e quaisquer operações sobre ela retornará um <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="38241-438">If changes are made directly to the source <xref:System.Collections.ArrayList>, the view window <xref:System.Collections.ArrayList> is invalidated and any operations on it will return an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="38241-439">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="38241-439">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38241-440">O exemplo de código a seguir mostra como definir e obter um intervalo de elementos no <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="38241-440">The following code example shows how to set and get a range of elements in the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.SetRange Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.SetRange Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.SetRange Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.SetRange Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.SetRange Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.SetRange Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="38241-441"><paramref name="index" /> é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="38241-441"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="38241-442">- ou -</span><span class="sxs-lookup"><span data-stu-id="38241-442">-or-</span></span> 
 <span data-ttu-id="38241-443"><paramref name="count" /> é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="38241-443"><paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="38241-444"><paramref name="index" /> e <paramref name="count" /> não denotam um intervalo válido de elementos no <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-444"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range of elements in the <see cref="T:System.Collections.ArrayList" />.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="38241-445">Retorna o índice baseado em zero da primeira ocorrência de um valor no <see cref="T:System.Collections.ArrayList" /> ou em uma parte dele.</span><span class="sxs-lookup"><span data-stu-id="38241-445">Returns the zero-based index of the first occurrence of a value in the <see cref="T:System.Collections.ArrayList" /> or in a portion of it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : obj -&gt; int&#xA;override this.IndexOf : obj -&gt; int" Usage="arrayList.IndexOf value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="38241-446">O <see cref="T:System.Object" /> a ser localizado no <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-446">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="38241-447">O valor pode ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="38241-447">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="38241-448">Pesquisa o <see cref="T:System.Object" /> especificado e retorna o índice de base zero da primeira ocorrência dentro de todo o <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-448">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <returns><span data-ttu-id="38241-449">O índice baseado em zero da primeira ocorrência de <paramref name="value" /> em todo o <see cref="T:System.Collections.ArrayList" />, se encontrado; caso contrário, -1.</span><span class="sxs-lookup"><span data-stu-id="38241-449">The zero-based index of the first occurrence of <paramref name="value" /> within the entire <see cref="T:System.Collections.ArrayList" />, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38241-450">O <xref:System.Collections.ArrayList> é pesquisado para frente, começando no primeiro elemento e termina no último elemento.</span><span class="sxs-lookup"><span data-stu-id="38241-450">The <xref:System.Collections.ArrayList> is searched forward starting at the first element and ending at the last element.</span></span>  
  
 <span data-ttu-id="38241-451">Este método executa uma pesquisa linear; por isso, esse método é uma operação O(`n`), em que `n` é <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="38241-451">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
 <span data-ttu-id="38241-452">Este método determina a igualdade chamando <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="38241-452">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="38241-453">Começando com o .NET Framework 2.0, esse método usa o objeto da coleção <xref:System.Object.Equals%2A> e <xref:System.IComparable.CompareTo%2A> métodos em `item` para determinar se o item existe.</span><span class="sxs-lookup"><span data-stu-id="38241-453">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="38241-454">Em versões anteriores do .NET Framework, essa decisão era tomada usando-se os métodos <xref:System.Object.Equals%2A> e <xref:System.IComparable.CompareTo%2A> do parâmetro `item` nos objetos na coleção.</span><span class="sxs-lookup"><span data-stu-id="38241-454">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38241-455">O exemplo de código a seguir mostra como determinar o índice da primeira ocorrência de um elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="38241-455">The following code example shows how to determine the index of the first occurrence of a specified element.</span></span>  
  
 [!code-cpp[Classic ArrayList.IndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ArrayList.LastIndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Contains(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="38241-456">Executando operações de cadeia de caracteres que não levam em conta a cultura em coleções</span><span class="sxs-lookup"><span data-stu-id="38241-456">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (object value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(object value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (value As Object, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Object ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : obj * int -&gt; int&#xA;override this.IndexOf : obj * int -&gt; int" Usage="arrayList.IndexOf (value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="38241-457">O <see cref="T:System.Object" /> a ser localizado no <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-457">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="38241-458">O valor pode ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="38241-458">The value can be <see langword="null" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="38241-459">O índice inicial com base em zero da pesquisa.</span><span class="sxs-lookup"><span data-stu-id="38241-459">The zero-based starting index of the search.</span></span> <span data-ttu-id="38241-460">0 (zero) é válido em uma lista vazia.</span><span class="sxs-lookup"><span data-stu-id="38241-460">0 (zero) is valid in an empty list.</span></span></param>
        <summary><span data-ttu-id="38241-461">Pesquisa o <see cref="T:System.Object" /> especificado e retorna o índice baseado em zero da primeira ocorrência dentro do intervalo de elementos no <see cref="T:System.Collections.ArrayList" /> que se estende do índice especificado ao último elemento.</span><span class="sxs-lookup"><span data-stu-id="38241-461">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that extends from the specified index to the last element.</span></span></summary>
        <returns><span data-ttu-id="38241-462">O índice baseado em zero da primeira ocorrência de <paramref name="value" /> dentro do intervalo de elementos no <see cref="T:System.Collections.ArrayList" /> que se estende do <paramref name="startIndex" /> ao último elemento, se for encontrado; caso contrário, -1.</span><span class="sxs-lookup"><span data-stu-id="38241-462">The zero-based index of the first occurrence of <paramref name="value" /> within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that extends from <paramref name="startIndex" /> to the last element, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38241-463">O <xref:System.Collections.ArrayList> é pesquisado para frente, começando em `startIndex` e terminando no último elemento.</span><span class="sxs-lookup"><span data-stu-id="38241-463">The <xref:System.Collections.ArrayList> is searched forward starting at `startIndex` and ending at the last element.</span></span>  
  
 <span data-ttu-id="38241-464">Esse método executa uma pesquisa linear. Portanto, esse método é um O (`n`) a operação, onde `n` é o número de elementos da `startIndex` ao final do <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="38241-464">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is the number of elements from `startIndex` to the end of the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="38241-465">Este método determina a igualdade chamando <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="38241-465">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="38241-466">Começando com o .NET Framework 2.0, esse método usa o objeto da coleção <xref:System.Object.Equals%2A> e <xref:System.IComparable.CompareTo%2A> métodos em `item` para determinar se o item existe.</span><span class="sxs-lookup"><span data-stu-id="38241-466">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="38241-467">Em versões anteriores do .NET Framework, essa decisão era tomada usando-se os métodos <xref:System.Object.Equals%2A> e <xref:System.IComparable.CompareTo%2A> do parâmetro `item` nos objetos na coleção.</span><span class="sxs-lookup"><span data-stu-id="38241-467">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38241-468">O exemplo de código a seguir mostra como determinar o índice da primeira ocorrência de um elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="38241-468">The following code example shows how to determine the index of the first occurrence of a specified element.</span></span>  
  
 [!code-cpp[Classic ArrayList.IndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="38241-469"><paramref name="startIndex" /> está fora do intervalo de índices válidos para o <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-469"><paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.ArrayList" />.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.LastIndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Contains(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="38241-470">Executando operações de cadeia de caracteres que não levam em conta a cultura em coleções</span><span class="sxs-lookup"><span data-stu-id="38241-470">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (object value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(object value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (value As Object, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Object ^ value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : obj * int * int -&gt; int&#xA;override this.IndexOf : obj * int * int -&gt; int" Usage="arrayList.IndexOf (value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="38241-471">O <see cref="T:System.Object" /> a ser localizado no <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-471">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="38241-472">O valor pode ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="38241-472">The value can be <see langword="null" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="38241-473">O índice inicial com base em zero da pesquisa.</span><span class="sxs-lookup"><span data-stu-id="38241-473">The zero-based starting index of the search.</span></span> <span data-ttu-id="38241-474">0 (zero) é válido em uma lista vazia.</span><span class="sxs-lookup"><span data-stu-id="38241-474">0 (zero) is valid in an empty list.</span></span></param>
        <param name="count"><span data-ttu-id="38241-475">O número de elementos na seção a ser pesquisada.</span><span class="sxs-lookup"><span data-stu-id="38241-475">The number of elements in the section to search.</span></span></param>
        <summary><span data-ttu-id="38241-476">Pesquisa o <see cref="T:System.Object" /> especificado e retorna o índice baseado em zero da primeira ocorrência dentro de um intervalo de elementos no <see cref="T:System.Collections.ArrayList" /> que começa no índice especificado e contém o número de elementos especificado.</span><span class="sxs-lookup"><span data-stu-id="38241-476">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that starts at the specified index and contains the specified number of elements.</span></span></summary>
        <returns><span data-ttu-id="38241-477">O índice baseado em zero da primeira ocorrência de <paramref name="value" /> dentro do intervalo de elementos no <see cref="T:System.Collections.ArrayList" /> que começa em <paramref name="startIndex" /> e contém o número de elementos <paramref name="count" />, se encontrado; caso contrário, -1.</span><span class="sxs-lookup"><span data-stu-id="38241-477">The zero-based index of the first occurrence of <paramref name="value" /> within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that starts at <paramref name="startIndex" /> and contains <paramref name="count" /> number of elements, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38241-478">O <xref:System.Collections.ArrayList> é pesquisado para frente, começando em `startIndex` e termina em `startIndex` plus `count` menos 1, se `count` for maior que 0.</span><span class="sxs-lookup"><span data-stu-id="38241-478">The <xref:System.Collections.ArrayList> is searched forward starting at `startIndex` and ending at `startIndex` plus `count` minus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="38241-479">Este método executa uma pesquisa linear; por isso, esse método é uma operação O(`n`), em que `n` é `count`.</span><span class="sxs-lookup"><span data-stu-id="38241-479">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
 <span data-ttu-id="38241-480">Este método determina a igualdade chamando <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="38241-480">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="38241-481">Começando com o .NET Framework 2.0, esse método usa o objeto da coleção <xref:System.Object.Equals%2A> e <xref:System.IComparable.CompareTo%2A> métodos em `item` para determinar se o item existe.</span><span class="sxs-lookup"><span data-stu-id="38241-481">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="38241-482">Em versões anteriores do .NET Framework, essa decisão era tomada usando-se os métodos <xref:System.Object.Equals%2A> e <xref:System.IComparable.CompareTo%2A> do parâmetro `item` nos objetos na coleção.</span><span class="sxs-lookup"><span data-stu-id="38241-482">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38241-483">O exemplo de código a seguir mostra como determinar o índice da primeira ocorrência de um elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="38241-483">The following code example shows how to determine the index of the first occurrence of a specified element.</span></span>  
  
 [!code-cpp[Classic ArrayList.IndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="38241-484"><paramref name="startIndex" /> está fora do intervalo de índices válidos para o <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-484"><paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.ArrayList" />.</span></span>  
  
<span data-ttu-id="38241-485">- ou -</span><span class="sxs-lookup"><span data-stu-id="38241-485">-or-</span></span> 
 <span data-ttu-id="38241-486"><paramref name="count" /> é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="38241-486"><paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="38241-487">- ou -</span><span class="sxs-lookup"><span data-stu-id="38241-487">-or-</span></span> 
 <span data-ttu-id="38241-488"><paramref name="startIndex" /> e <paramref name="count" /> não especificam uma seção válida no <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-488"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in the <see cref="T:System.Collections.ArrayList" />.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.LastIndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Contains(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="38241-489">Executando operações de cadeia de caracteres que não levam em conta a cultura em coleções</span><span class="sxs-lookup"><span data-stu-id="38241-489">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual void Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Insert (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * obj -&gt; unit&#xA;override this.Insert : int * obj -&gt; unit" Usage="arrayList.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="38241-490">O índice de base zero no qual o <paramref name="value" /> deve ser inserido.</span><span class="sxs-lookup"><span data-stu-id="38241-490">The zero-based index at which <paramref name="value" /> should be inserted.</span></span></param>
        <param name="value"><span data-ttu-id="38241-491">O <see cref="T:System.Object" /> a ser inserido.</span><span class="sxs-lookup"><span data-stu-id="38241-491">The <see cref="T:System.Object" /> to insert.</span></span> <span data-ttu-id="38241-492">O valor pode ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="38241-492">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="38241-493">Insere um elemento no <see cref="T:System.Collections.ArrayList" />, no índice especificado.</span><span class="sxs-lookup"><span data-stu-id="38241-493">Inserts an element into the <see cref="T:System.Collections.ArrayList" /> at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38241-494"><xref:System.Collections.ArrayList> aceita `null` como um valor válido e permite elementos duplicados.</span><span class="sxs-lookup"><span data-stu-id="38241-494"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="38241-495">Se <xref:System.Collections.ArrayList.Count%2A> já for igual a <xref:System.Collections.ArrayList.Capacity%2A>, a capacidade do <xref:System.Collections.ArrayList> é aumentado, automaticamente realocando a matriz interna, e os elementos existentes são copiados para a nova matriz antes do novo elemento é adicionado.</span><span class="sxs-lookup"><span data-stu-id="38241-495">If <xref:System.Collections.ArrayList.Count%2A> already equals <xref:System.Collections.ArrayList.Capacity%2A>, the capacity of the <xref:System.Collections.ArrayList> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="38241-496">Se `index` é igual a <xref:System.Collections.ArrayList.Count%2A>, `value` é adicionado ao final da <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="38241-496">If `index` is equal to <xref:System.Collections.ArrayList.Count%2A>, `value` is added to the end of <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="38241-497">Em coleções de elementos contíguos, como listas, os elementos que seguem o ponto de inserção descem para acomodar o novo elemento.</span><span class="sxs-lookup"><span data-stu-id="38241-497">In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</span></span> <span data-ttu-id="38241-498">Caso a coleção seja indexada, os índices dos elementos que são movidos também são atualizados.</span><span class="sxs-lookup"><span data-stu-id="38241-498">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="38241-499">Este comportamento não se aplica às coleções em que elementos sejam agrupados conceitualmente em buckets, como uma tabela de hash.</span><span class="sxs-lookup"><span data-stu-id="38241-499">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="38241-500">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="38241-500">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38241-501">O exemplo de código a seguir mostra como inserir elementos no <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="38241-501">The following code example shows how to insert elements into the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Insert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Insert Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Insert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Insert Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Insert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Insert Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="38241-502"><paramref name="index" /> é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="38241-502"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="38241-503">- ou -</span><span class="sxs-lookup"><span data-stu-id="38241-503">-or-</span></span> 
 <span data-ttu-id="38241-504"><paramref name="index" /> é maior que <see cref="P:System.Collections.ArrayList.Count" />.</span><span class="sxs-lookup"><span data-stu-id="38241-504"><paramref name="index" /> is greater than <see cref="P:System.Collections.ArrayList.Count" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="38241-505">O <see cref="T:System.Collections.ArrayList" /> é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="38241-505">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span>  
  
<span data-ttu-id="38241-506">- ou -</span><span class="sxs-lookup"><span data-stu-id="38241-506">-or-</span></span> 
<span data-ttu-id="38241-507">O <see cref="T:System.Collections.ArrayList" /> tem um tamanho fixo.</span><span class="sxs-lookup"><span data-stu-id="38241-507">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.Add(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Remove(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="InsertRange">
      <MemberSignature Language="C#" Value="public virtual void InsertRange (int index, System.Collections.ICollection c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertRange(int32 index, class System.Collections.ICollection c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InsertRange (index As Integer, c As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InsertRange(int index, System::Collections::ICollection ^ c);" />
      <MemberSignature Language="F#" Value="abstract member InsertRange : int * System.Collections.ICollection -&gt; unit&#xA;override this.InsertRange : int * System.Collections.ICollection -&gt; unit" Usage="arrayList.InsertRange (index, c)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="c" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="38241-508">O índice baseado em zero no qual os novos elementos devem ser inseridos.</span><span class="sxs-lookup"><span data-stu-id="38241-508">The zero-based index at which the new elements should be inserted.</span></span></param>
        <param name="c"><span data-ttu-id="38241-509">O <see cref="T:System.Collections.ICollection" /> cujos elementos devem ser inseridos no <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-509">The <see cref="T:System.Collections.ICollection" /> whose elements should be inserted into the <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="38241-510">A coleção em si não pode ser <see langword="null" />, mas pode conter elementos que são <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="38241-510">The collection itself cannot be <see langword="null" />, but it can contain elements that are <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="38241-511">Insere os elementos de uma coleção no <see cref="T:System.Collections.ArrayList" /> no índice especificado.</span><span class="sxs-lookup"><span data-stu-id="38241-511">Inserts the elements of a collection into the <see cref="T:System.Collections.ArrayList" /> at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38241-512"><xref:System.Collections.ArrayList> aceita `null` como um valor válido e permite elementos duplicados.</span><span class="sxs-lookup"><span data-stu-id="38241-512"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="38241-513">Se o novo <xref:System.Collections.ArrayList.Count%2A> (atual <xref:System.Collections.ArrayList.Count%2A> mais o tamanho da coleção) será maior que <xref:System.Collections.ArrayList.Capacity%2A>, a capacidade do <xref:System.Collections.ArrayList> é aumentado, automaticamente realocando a matriz interna para acomodar os novos elementos e o os elementos existentes são copiados para a nova matriz antes dos novos elementos adicionados.</span><span class="sxs-lookup"><span data-stu-id="38241-513">If the new <xref:System.Collections.ArrayList.Count%2A> (the current <xref:System.Collections.ArrayList.Count%2A> plus the size of the collection) will be greater than <xref:System.Collections.ArrayList.Capacity%2A>, the capacity of the <xref:System.Collections.ArrayList> is increased by automatically reallocating the internal array to accommodate the new elements, and the existing elements are copied to the new array before the new elements are added.</span></span>  
  
 <span data-ttu-id="38241-514">Se `index` é igual a <xref:System.Collections.ArrayList.Count%2A>, os elementos são adicionados ao final da <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="38241-514">If `index` is equal to <xref:System.Collections.ArrayList.Count%2A>, the elements are added to the end of <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="38241-515">A ordem dos elementos na <xref:System.Collections.ICollection> é preservado no <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="38241-515">The order of the elements in the <xref:System.Collections.ICollection> is preserved in the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="38241-516">Em coleções de elementos contíguos, como listas, os elementos que seguem o ponto de inserção descem para acomodar o novo elemento.</span><span class="sxs-lookup"><span data-stu-id="38241-516">In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</span></span> <span data-ttu-id="38241-517">Caso a coleção seja indexada, os índices dos elementos que são movidos também são atualizados.</span><span class="sxs-lookup"><span data-stu-id="38241-517">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="38241-518">Este comportamento não se aplica às coleções em que elementos sejam agrupados conceitualmente em buckets, como uma tabela de hash.</span><span class="sxs-lookup"><span data-stu-id="38241-518">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="38241-519">Esse método é um O (`n` + `m`) a operação, onde `n` é o número de elementos a serem adicionados e `m` é <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="38241-519">This method is an O(`n` + `m`) operation, where `n` is the number of elements to be added and `m` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38241-520">O exemplo de código a seguir mostra como inserir elementos no <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="38241-520">The following code example shows how to insert elements into the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Insert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Insert Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Insert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Insert Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Insert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Insert Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="38241-521"><paramref name="c" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="38241-521"><paramref name="c" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="38241-522"><paramref name="index" /> é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="38241-522"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="38241-523">- ou -</span><span class="sxs-lookup"><span data-stu-id="38241-523">-or-</span></span> 
 <span data-ttu-id="38241-524"><paramref name="index" /> é maior que <see cref="P:System.Collections.ArrayList.Count" />.</span><span class="sxs-lookup"><span data-stu-id="38241-524"><paramref name="index" /> is greater than <see cref="P:System.Collections.ArrayList.Count" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="38241-525">O <see cref="T:System.Collections.ArrayList" /> é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="38241-525">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span>  
  
<span data-ttu-id="38241-526">- ou -</span><span class="sxs-lookup"><span data-stu-id="38241-526">-or-</span></span> 
<span data-ttu-id="38241-527">O <see cref="T:System.Collections.ArrayList" /> tem um tamanho fixo.</span><span class="sxs-lookup"><span data-stu-id="38241-527">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="public virtual bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFixedSize : bool" Usage="System.Collections.ArrayList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38241-528">Obtém um valor que indica se o <see cref="T:System.Collections.ArrayList" /> tem um tamanho fixo.</span><span class="sxs-lookup"><span data-stu-id="38241-528">Gets a value indicating whether the <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span></span></summary>
        <value><span data-ttu-id="38241-529"><see langword="true" /> se o <see cref="T:System.Collections.ArrayList" /> tiver um valor fixo; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="38241-529"><see langword="true" /> if the <see cref="T:System.Collections.ArrayList" /> has a fixed size; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="38241-530">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="38241-530">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38241-531">Uma coleção com um tamanho fixo não permite a adição ou a remoção de elementos após a coleção ser criada, mas permite a modificação de elementos existentes.</span><span class="sxs-lookup"><span data-stu-id="38241-531">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</span></span>  
  
 <span data-ttu-id="38241-532">Uma coleção com um tamanho fixo é simplesmente uma coleção com um wrapper que impede a adição e a remoção de elementos; por isso, caso as alterações sejam feitas na coleção subjacente, inclusive a adição ou a remoção de elementos, a coleção de tamanho fixo reflete essas alterações.</span><span class="sxs-lookup"><span data-stu-id="38241-532">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="38241-533">A recuperação do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="38241-533">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38241-534">O exemplo de código a seguir mostra como criar um wrapper de tamanho fixo em torno um <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="38241-534">The following code example shows how to create a fixed-size wrapper around an <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsFixedSize Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsFixedSize Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IsFixedSize Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsFixedSize Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IsFixedSize Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsFixedSize Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Collections.ArrayList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38241-535">Obtém um valor que indica se o <see cref="T:System.Collections.ArrayList" /> é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="38241-535">Gets a value indicating whether the <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="38241-536"><see langword="true" /> se o <see cref="T:System.Collections.ArrayList" /> for somente leitura; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="38241-536"><see langword="true" /> if the <see cref="T:System.Collections.ArrayList" /> is read-only; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="38241-537">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="38241-537">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38241-538">Uma coleção que seja somente leitura não permite a adição, a remoção ou a modificação de elementos após a coleção ser criada.</span><span class="sxs-lookup"><span data-stu-id="38241-538">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="38241-539">Uma coleção somente leitura é apenas uma coleção com um wrapper que impede a modificação da coleção; por isso, caso as alterações sejam feitas na coleção subjacente, a coleção somente leitura reflete as alterações.</span><span class="sxs-lookup"><span data-stu-id="38241-539">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="38241-540">A recuperação do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="38241-540">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38241-541">O exemplo de código a seguir mostra como criar um wrapper somente leitura em torno de um <xref:System.Collections.ArrayList> e como determinar se um <xref:System.Collections.ArrayList> é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="38241-541">The following code example shows how to create a read-only wrapper around an <xref:System.Collections.ArrayList> and how to determine if an <xref:System.Collections.ArrayList> is read-only.</span></span>  
  
 [!code-cpp[Classic ArrayList.ReadOnly1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.ReadOnly1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.ReadOnly1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.ReadOnly1 Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.ReadOnly1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.ReadOnly1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)" />
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Collections.ArrayList.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38241-542">Obtém um valor que indica se o acesso à <see cref="T:System.Collections.ArrayList" /> é sincronizado (thread-safe).</span><span class="sxs-lookup"><span data-stu-id="38241-542">Gets a value indicating whether access to the <see cref="T:System.Collections.ArrayList" /> is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="38241-543"><see langword="true" /> caso o acesso ao <see cref="T:System.Collections.ArrayList" /> seja sincronizado (thread-safe); do contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="38241-543"><see langword="true" /> if access to the <see cref="T:System.Collections.ArrayList" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span></span> <span data-ttu-id="38241-544">O padrão é <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="38241-544">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38241-545">Para garantir a segurança do thread do <xref:System.Collections.ArrayList>, todas as operações devem ser feitas por meio de wrapper retornado pelo <xref:System.Collections.ArrayList.Synchronized%2A> método.</span><span class="sxs-lookup"><span data-stu-id="38241-545">To guarantee the thread safety of the <xref:System.Collections.ArrayList>, all operations must be done through the wrapper returned by the <xref:System.Collections.ArrayList.Synchronized%2A> method.</span></span>  
  
 <span data-ttu-id="38241-546">A enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="38241-546">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="38241-547">Mesmo quando uma coleção está sincronizada, outros threads ainda podem modificar a coleção, o que faz o enumerador lançar uma exceção.</span><span class="sxs-lookup"><span data-stu-id="38241-547">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="38241-548">Para garantir thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração ou verificar as exceções resultantes das alterações feitas por outros threads.</span><span class="sxs-lookup"><span data-stu-id="38241-548">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38241-549">O exemplo de código a seguir mostra como bloquear a coleção usando o <xref:System.Collections.ArrayList.SyncRoot%2A> durante toda a enumeração.</span><span class="sxs-lookup"><span data-stu-id="38241-549">The following code example shows how to lock the collection using the <xref:System.Collections.ArrayList.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="38241-550">A recuperação do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="38241-550">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 <span data-ttu-id="38241-551">O exemplo de código a seguir mostra como sincronizar um <xref:System.Collections.ArrayList>, determinar se um <xref:System.Collections.ArrayList> é sincronizado e usar um sincronizada <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="38241-551">The following code example shows how to synchronize an <xref:System.Collections.ArrayList>, determine if an <xref:System.Collections.ArrayList> is synchronized and use a synchronized <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ArrayList.SyncRoot" />
        <altmember cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual object this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj with get, set" Usage="System.Collections.ArrayList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="38241-552">O índice com base em zero do elemento a ser obtido ou definido.</span><span class="sxs-lookup"><span data-stu-id="38241-552">The zero-based index of the element to get or set.</span></span></param>
        <summary><span data-ttu-id="38241-553">Obtém ou define o elemento no índice especificado.</span><span class="sxs-lookup"><span data-stu-id="38241-553">Gets or sets the element at the specified index.</span></span></summary>
        <value><span data-ttu-id="38241-554">O elemento no índice especificado.</span><span class="sxs-lookup"><span data-stu-id="38241-554">The element at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38241-555">O <xref:System.Collections.ArrayList.Item%2A> retorna um <xref:System.Object>, portanto, talvez seja necessário converter o valor retornado para o tipo original para manipulá-lo.</span><span class="sxs-lookup"><span data-stu-id="38241-555">The <xref:System.Collections.ArrayList.Item%2A> returns an <xref:System.Object>, so you may need to cast the returned value to the original type in order to manipulate it.</span></span> <span data-ttu-id="38241-556">É importante observar que <xref:System.Collections.ArrayList> não é uma coleção fortemente tipada.</span><span class="sxs-lookup"><span data-stu-id="38241-556">It is important to note that <xref:System.Collections.ArrayList> is not a strongly-typed collection.</span></span> <span data-ttu-id="38241-557">Para obter uma alternativa fortemente tipados, consulte <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="38241-557">For a strongly-typed alternative, see <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="38241-558"><xref:System.Collections.ArrayList> aceita `null` como um valor válido e permite elementos duplicados.</span><span class="sxs-lookup"><span data-stu-id="38241-558"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="38241-559">Esta propriedade fornece a capacidade de acessar um elemento específico na coleção usando a seguinte sintaxe: `myCollection[index]`.</span><span class="sxs-lookup"><span data-stu-id="38241-559">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>  
  
 <span data-ttu-id="38241-560">O C# linguagem usa o [ `this` ](~/docs/csharp/language-reference/keywords/this.md) palavra-chave para definir os indexadores em vez de implementar o <xref:System.Collections.ArrayList.Item%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="38241-560">The C# language uses the [`this`](~/docs/csharp/language-reference/keywords/this.md) keyword to define the indexers instead of implementing the <xref:System.Collections.ArrayList.Item%2A> property.</span></span> <span data-ttu-id="38241-561">Visual Basic implementa <xref:System.Collections.ArrayList.Item%2A> como uma propriedade padrão, que fornece a mesma funcionalidade de indexação.</span><span class="sxs-lookup"><span data-stu-id="38241-561">Visual Basic implements <xref:System.Collections.ArrayList.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="38241-562">Recuperando o valor dessa propriedade é uma operação de (1); definindo a propriedade também é uma operação de (1).</span><span class="sxs-lookup"><span data-stu-id="38241-562">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38241-563">O exemplo de código a seguir cria um <xref:System.Collections.ArrayList> e adiciona vários itens.</span><span class="sxs-lookup"><span data-stu-id="38241-563">The following code example creates an <xref:System.Collections.ArrayList> and adds several items.</span></span> <span data-ttu-id="38241-564">O exemplo demonstra o acesso aos elementos com o <xref:System.Collections.ArrayList.Item%2A> propriedade (o indexador em C#) e alterando um elemento, atribuindo um novo valor para o <xref:System.Collections.ArrayList.Item%2A> propriedade para um índice especificado.</span><span class="sxs-lookup"><span data-stu-id="38241-564">The example demonstrates accessing elements with the <xref:System.Collections.ArrayList.Item%2A> property (the indexer in C#), and changing an element by assigning a new value to the <xref:System.Collections.ArrayList.Item%2A> property for a specified index.</span></span> <span data-ttu-id="38241-565">O exemplo também mostra que o <xref:System.Collections.ArrayList.Item%2A> propriedade não pode ser usada para acessar ou adicionar elementos fora do tamanho atual da lista.</span><span class="sxs-lookup"><span data-stu-id="38241-565">The example also shows that the <xref:System.Collections.ArrayList.Item%2A> property cannot be used to access or add elements outside the current size of the list.</span></span>  
  
 [!code-cpp[System.Collections.ArrayList.Item#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ArrayList.Item/cpp/source.cpp#1)]
 [!code-csharp[System.Collections.ArrayList.Item#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ArrayList.Item/CS/source.cs#1)]
 [!code-vb[System.Collections.ArrayList.Item#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ArrayList.Item/VB/source.vb#1)]  
  
 <span data-ttu-id="38241-566">O exemplo a seguir usa o <xref:System.Collections.ArrayList.Item%2A> propriedade explicitamente para atribuir valores aos itens na lista.</span><span class="sxs-lookup"><span data-stu-id="38241-566">The following example uses the <xref:System.Collections.ArrayList.Item%2A> property explicitly to assign values to items in the list.</span></span> <span data-ttu-id="38241-567">O exemplo define uma classe que herda um <xref:System.Collections.ArrayList> e adiciona um método para embaralhar os itens da lista.</span><span class="sxs-lookup"><span data-stu-id="38241-567">The example defines a class that inherits an <xref:System.Collections.ArrayList> and adds a method to scramble the list items.</span></span>  
  
 [!code-cpp[System.Collections.ArrayList.Item#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ArrayList.Item/cpp/source2.cpp#2)]
 [!code-csharp[System.Collections.ArrayList.Item#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ArrayList.Item/CS/source2.cs#2)]
 [!code-vb[System.Collections.ArrayList.Item#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ArrayList.Item/VB/source2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="38241-568"><paramref name="index" /> é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="38241-568"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="38241-569">- ou -</span><span class="sxs-lookup"><span data-stu-id="38241-569">-or-</span></span> 
 <span data-ttu-id="38241-570"><paramref name="index" /> é igual a ou maior que <see cref="P:System.Collections.ArrayList.Count" />.</span><span class="sxs-lookup"><span data-stu-id="38241-570"><paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ArrayList.Count" />.</span></span></exception>
        <altmember cref="P:System.Collections.ArrayList.Count" />
      </Docs>
    </Member>
    <MemberGroup MemberName="LastIndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="38241-571">Retorna o índice baseado em zero da última ocorrência de um valor no <see cref="T:System.Collections.ArrayList" /> ou em uma parte dele.</span><span class="sxs-lookup"><span data-stu-id="38241-571">Returns the zero-based index of the last occurrence of a value in the <see cref="T:System.Collections.ArrayList" /> or in a portion of it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.LastIndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : obj -&gt; int&#xA;override this.LastIndexOf : obj -&gt; int" Usage="arrayList.LastIndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="38241-572">O <see cref="T:System.Object" /> a ser localizado no <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-572">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="38241-573">O valor pode ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="38241-573">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="38241-574">Pesquisa o <see cref="T:System.Object" /> especificado e retorna o índice de base zero da última ocorrência dentro de todo o <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-574">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the last occurrence within the entire <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <returns><span data-ttu-id="38241-575">O índice de base zero da última ocorrência de <paramref name="value" /> em todo o <see cref="T:System.Collections.ArrayList" />, se localizado; caso contrário, -1.</span><span class="sxs-lookup"><span data-stu-id="38241-575">The zero-based index of the last occurrence of <paramref name="value" /> within the entire the <see cref="T:System.Collections.ArrayList" />, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38241-576">O <xref:System.Collections.ArrayList> é pesquisado para trás começando no último elemento e terminando no primeiro elemento.</span><span class="sxs-lookup"><span data-stu-id="38241-576">The <xref:System.Collections.ArrayList> is searched backward starting at the last element and ending at the first element.</span></span>  
  
 <span data-ttu-id="38241-577">Este método executa uma pesquisa linear; por isso, esse método é uma operação O(`n`), em que `n` é <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="38241-577">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
 <span data-ttu-id="38241-578">Começando com o .NET Framework 2.0, esse método usa o objeto da coleção <xref:System.Object.Equals%2A> e <xref:System.IComparable.CompareTo%2A> métodos em `item` para determinar se o item existe.</span><span class="sxs-lookup"><span data-stu-id="38241-578">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="38241-579">Em versões anteriores do .NET Framework, essa decisão era tomada usando-se os métodos <xref:System.Object.Equals%2A> e <xref:System.IComparable.CompareTo%2A> do parâmetro `item` nos objetos na coleção.</span><span class="sxs-lookup"><span data-stu-id="38241-579">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38241-580">O exemplo de código a seguir mostra como determinar o índice da última ocorrência de um elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="38241-580">The following code example shows how to determine the index of the last occurrence of a specified element.</span></span>  
  
 [!code-cpp[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ArrayList.IndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Contains(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="38241-581">Executando operações de cadeia de caracteres que não levam em conta a cultura em coleções</span><span class="sxs-lookup"><span data-stu-id="38241-581">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (object value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(object value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (value As Object, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::Object ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : obj * int -&gt; int&#xA;override this.LastIndexOf : obj * int -&gt; int" Usage="arrayList.LastIndexOf (value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="38241-582">O <see cref="T:System.Object" /> a ser localizado no <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-582">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="38241-583">O valor pode ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="38241-583">The value can be <see langword="null" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="38241-584">O índice inicial com base em zero da pesquisa inversa.</span><span class="sxs-lookup"><span data-stu-id="38241-584">The zero-based starting index of the backward search.</span></span></param>
        <summary><span data-ttu-id="38241-585">Pesquisa o <see cref="T:System.Object" /> especificado e retorna o índice baseado em zero da última ocorrência dentro do intervalo de elementos no <see cref="T:System.Collections.ArrayList" /> que se estende do primeiro elemento ao índice especificado.</span><span class="sxs-lookup"><span data-stu-id="38241-585">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that extends from the first element to the specified index.</span></span></summary>
        <returns><span data-ttu-id="38241-586">O índice baseado em zero da última ocorrência de <paramref name="value" /> dentro do intervalo de elementos em <see cref="T:System.Collections.ArrayList" /> que se estende do primeiro elemento a <paramref name="startIndex" />, se encontrado; caso contrário, -1.</span><span class="sxs-lookup"><span data-stu-id="38241-586">The zero-based index of the last occurrence of <paramref name="value" /> within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that extends from the first element to <paramref name="startIndex" />, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38241-587">O <xref:System.Collections.ArrayList> é pesquisada começando com versões anteriores em `startIndex` e terminando no primeiro elemento.</span><span class="sxs-lookup"><span data-stu-id="38241-587">The <xref:System.Collections.ArrayList> is searched backward starting at `startIndex` and ending at the first element.</span></span>  
  
 <span data-ttu-id="38241-588">Esse método executa uma pesquisa linear. Portanto, esse método é um O (`n`) a operação, onde `n` é o número de elementos desde o início do <xref:System.Collections.ArrayList> para `startIndex`.</span><span class="sxs-lookup"><span data-stu-id="38241-588">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is the number of elements from the beginning of the <xref:System.Collections.ArrayList> to `startIndex`.</span></span>  
  
 <span data-ttu-id="38241-589">Este método determina a igualdade chamando <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="38241-589">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="38241-590">Começando com o .NET Framework 2.0, esse método usa o objeto da coleção <xref:System.Object.Equals%2A> e <xref:System.IComparable.CompareTo%2A> métodos em `item` para determinar se o item existe.</span><span class="sxs-lookup"><span data-stu-id="38241-590">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="38241-591">Em versões anteriores do .NET Framework, essa decisão era tomada usando-se os métodos <xref:System.Object.Equals%2A> e <xref:System.IComparable.CompareTo%2A> do parâmetro `item` nos objetos na coleção.</span><span class="sxs-lookup"><span data-stu-id="38241-591">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38241-592">O exemplo de código a seguir mostra como determinar o índice da última ocorrência de um elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="38241-592">The following code example shows how to determine the index of the last occurrence of a specified element.</span></span>  
  
 [!code-cpp[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="38241-593"><paramref name="startIndex" /> está fora do intervalo de índices válidos para o <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-593"><paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.ArrayList" />.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.IndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Contains(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="38241-594">Executando operações de cadeia de caracteres que não levam em conta a cultura em coleções</span><span class="sxs-lookup"><span data-stu-id="38241-594">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (object value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(object value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (value As Object, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::Object ^ value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : obj * int * int -&gt; int&#xA;override this.LastIndexOf : obj * int * int -&gt; int" Usage="arrayList.LastIndexOf (value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="38241-595">O <see cref="T:System.Object" /> a ser localizado no <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-595">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="38241-596">O valor pode ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="38241-596">The value can be <see langword="null" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="38241-597">O índice inicial com base em zero da pesquisa inversa.</span><span class="sxs-lookup"><span data-stu-id="38241-597">The zero-based starting index of the backward search.</span></span></param>
        <param name="count"><span data-ttu-id="38241-598">O número de elementos na seção a ser pesquisada.</span><span class="sxs-lookup"><span data-stu-id="38241-598">The number of elements in the section to search.</span></span></param>
        <summary><span data-ttu-id="38241-599">Pesquisa o <see cref="T:System.Object" /> especificado e retorna o índice baseado em zero da última ocorrência no intervalo de elementos na <see cref="T:System.Collections.ArrayList" /> que contém o número de elementos especificado e termina no índice especificado.</span><span class="sxs-lookup"><span data-stu-id="38241-599">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that contains the specified number of elements and ends at the specified index.</span></span></summary>
        <returns><span data-ttu-id="38241-600">O índice baseado em zero da última ocorrência de <paramref name="value" /> dentro do intervalo de elementos no <see cref="T:System.Collections.ArrayList" /> que contém o número <paramref name="count" /> de elementos e termina em <paramref name="startIndex" />, se encontrado; caso contrário, -1.</span><span class="sxs-lookup"><span data-stu-id="38241-600">The zero-based index of the last occurrence of <paramref name="value" /> within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that contains <paramref name="count" /> number of elements and ends at <paramref name="startIndex" />, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38241-601">O <xref:System.Collections.ArrayList> é pesquisada com versões anteriores começando `startIndex` e termina em `startIndex` menos `count` mais 1, se `count` for maior que 0.</span><span class="sxs-lookup"><span data-stu-id="38241-601">The <xref:System.Collections.ArrayList> is searched backward starting at `startIndex` and ending at `startIndex` minus `count` plus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="38241-602">Este método executa uma pesquisa linear; por isso, esse método é uma operação O(`n`), em que `n` é `count`.</span><span class="sxs-lookup"><span data-stu-id="38241-602">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
 <span data-ttu-id="38241-603">Este método determina a igualdade chamando <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="38241-603">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="38241-604">Começando com o .NET Framework 2.0, esse método usa o objeto da coleção <xref:System.Object.Equals%2A> e <xref:System.IComparable.CompareTo%2A> métodos em `item` para determinar se o item existe.</span><span class="sxs-lookup"><span data-stu-id="38241-604">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="38241-605">Em versões anteriores do .NET Framework, essa decisão era tomada usando-se os métodos <xref:System.Object.Equals%2A> e <xref:System.IComparable.CompareTo%2A> do parâmetro `item` nos objetos na coleção.</span><span class="sxs-lookup"><span data-stu-id="38241-605">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38241-606">O exemplo de código a seguir mostra como determinar o índice da última ocorrência de um elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="38241-606">The following code example shows how to determine the index of the last occurrence of a specified element.</span></span> <span data-ttu-id="38241-607">Observe que `LastIndexOf` é uma pesquisa com versões anteriores; portanto, `count` deve ser menor ou igual a `startIndex` + 1.</span><span class="sxs-lookup"><span data-stu-id="38241-607">Note that `LastIndexOf` is a backward search; therefore, `count` must be less than or equal to `startIndex` + 1.</span></span>  
  
 [!code-cpp[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="38241-608"><paramref name="startIndex" /> está fora do intervalo de índices válidos para o <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-608"><paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.ArrayList" />.</span></span>  
  
<span data-ttu-id="38241-609">- ou -</span><span class="sxs-lookup"><span data-stu-id="38241-609">-or-</span></span> 
 <span data-ttu-id="38241-610"><paramref name="count" /> é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="38241-610"><paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="38241-611">- ou -</span><span class="sxs-lookup"><span data-stu-id="38241-611">-or-</span></span> 
 <span data-ttu-id="38241-612"><paramref name="startIndex" /> e <paramref name="count" /> não especificam uma seção válida no <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-612"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in the <see cref="T:System.Collections.ArrayList" />.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.IndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Contains(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="38241-613">Executando operações de cadeia de caracteres que não levam em conta a cultura em coleções</span><span class="sxs-lookup"><span data-stu-id="38241-613">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadOnly">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="38241-614">Retorna um wrapper de lista somente leitura.</span><span class="sxs-lookup"><span data-stu-id="38241-614">Returns a list wrapper that is read-only.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public static System.Collections.ArrayList ReadOnly (System.Collections.ArrayList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ArrayList ReadOnly(class System.Collections.ArrayList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.ReadOnly(System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadOnly (list As ArrayList) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ArrayList ^ ReadOnly(System::Collections::ArrayList ^ list);" />
      <MemberSignature Language="F#" Value="static member ReadOnly : System.Collections.ArrayList -&gt; System.Collections.ArrayList" Usage="System.Collections.ArrayList.ReadOnly list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="list"><span data-ttu-id="38241-615">O <see cref="T:System.Collections.ArrayList" /> a ser encapsulado.</span><span class="sxs-lookup"><span data-stu-id="38241-615">The <see cref="T:System.Collections.ArrayList" /> to wrap.</span></span></param>
        <summary><span data-ttu-id="38241-616">Retorna um wrapper <see cref="T:System.Collections.ArrayList" /> de somente leitura.</span><span class="sxs-lookup"><span data-stu-id="38241-616">Returns a read-only <see cref="T:System.Collections.ArrayList" /> wrapper.</span></span></summary>
        <returns><span data-ttu-id="38241-617">Um wrapper <see cref="T:System.Collections.ArrayList" /> de somente leitura encapsula <paramref name="list" />.</span><span class="sxs-lookup"><span data-stu-id="38241-617">A read-only <see cref="T:System.Collections.ArrayList" /> wrapper around <paramref name="list" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38241-618">Para evitar quaisquer modificações `list`, expor `list` somente por meio desse wrapper.</span><span class="sxs-lookup"><span data-stu-id="38241-618">To prevent any modifications to `list`, expose `list` only through this wrapper.</span></span>  
  
 <span data-ttu-id="38241-619">Uma coleção que é somente leitura é simplesmente uma coleção com um wrapper que impede a modificação da coleção.</span><span class="sxs-lookup"><span data-stu-id="38241-619">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection.</span></span> <span data-ttu-id="38241-620">Se forem feitas alterações à coleção subjacente, a coleção somente leitura reflete essas alterações.</span><span class="sxs-lookup"><span data-stu-id="38241-620">If changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="38241-621">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="38241-621">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38241-622">O exemplo de código a seguir mostra como criar um wrapper somente leitura em torno de um <xref:System.Collections.ArrayList> e como determinar se um <xref:System.Collections.ArrayList> é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="38241-622">The following code example shows how to create a read-only wrapper around an <xref:System.Collections.ArrayList> and how to determine if an <xref:System.Collections.ArrayList> is read-only.</span></span>  
  
 [!code-cpp[Classic ArrayList.ReadOnly1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.ReadOnly1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.ReadOnly1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.ReadOnly1 Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.ReadOnly1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.ReadOnly1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="38241-623"><paramref name="list" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="38241-623"><paramref name="list" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Collections.ArrayList.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public static System.Collections.IList ReadOnly (System.Collections.IList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IList ReadOnly(class System.Collections.IList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadOnly (list As IList) As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IList ^ ReadOnly(System::Collections::IList ^ list);" />
      <MemberSignature Language="F#" Value="static member ReadOnly : System.Collections.IList -&gt; System.Collections.IList" Usage="System.Collections.ArrayList.ReadOnly list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="list"><span data-ttu-id="38241-624">O <see cref="T:System.Collections.IList" /> a ser encapsulado.</span><span class="sxs-lookup"><span data-stu-id="38241-624">The <see cref="T:System.Collections.IList" /> to wrap.</span></span></param>
        <summary><span data-ttu-id="38241-625">Retorna um wrapper <see cref="T:System.Collections.IList" /> de somente leitura.</span><span class="sxs-lookup"><span data-stu-id="38241-625">Returns a read-only <see cref="T:System.Collections.IList" /> wrapper.</span></span></summary>
        <returns><span data-ttu-id="38241-626">Um wrapper <see cref="T:System.Collections.IList" /> de somente leitura encapsula <paramref name="list" />.</span><span class="sxs-lookup"><span data-stu-id="38241-626">A read-only <see cref="T:System.Collections.IList" /> wrapper around <paramref name="list" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38241-627">Para evitar quaisquer modificações `list`, expor `list` somente por meio desse wrapper.</span><span class="sxs-lookup"><span data-stu-id="38241-627">To prevent any modifications to `list`, expose `list` only through this wrapper.</span></span>  
  
 <span data-ttu-id="38241-628">Uma coleção que é somente leitura é simplesmente uma coleção com um wrapper que impede a modificação da coleção.</span><span class="sxs-lookup"><span data-stu-id="38241-628">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection.</span></span> <span data-ttu-id="38241-629">Se forem feitas alterações à coleção subjacente, a coleção somente leitura reflete essas alterações.</span><span class="sxs-lookup"><span data-stu-id="38241-629">If changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="38241-630">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="38241-630">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="38241-631"><paramref name="list" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="38241-631"><paramref name="list" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Collections.ArrayList.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj -&gt; unit&#xA;override this.Remove : obj -&gt; unit" Usage="arrayList.Remove obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="38241-632">O <see cref="T:System.Object" /> a ser removido de <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-632">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="38241-633">O valor pode ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="38241-633">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="38241-634">Remove a primeira ocorrência de um objeto específico do <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-634">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38241-635">Se o <xref:System.Collections.ArrayList> não contém o objeto especificado, o <xref:System.Collections.ArrayList> permanece inalterado.</span><span class="sxs-lookup"><span data-stu-id="38241-635">If the <xref:System.Collections.ArrayList> does not contain the specified object, the <xref:System.Collections.ArrayList> remains unchanged.</span></span> <span data-ttu-id="38241-636">Nenhuma exceção é lançada.</span><span class="sxs-lookup"><span data-stu-id="38241-636">No exception is thrown.</span></span>  
  
 <span data-ttu-id="38241-637">Este método executa uma pesquisa linear; por isso, esse método é uma operação O(`n`), em que `n` é <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="38241-637">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
 <span data-ttu-id="38241-638">Este método determina a igualdade chamando <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="38241-638">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="38241-639">Em coleções de elementos contíguos, como listas, os elementos que seguem o elemento removido sobem para ocupar o ponto vazio.</span><span class="sxs-lookup"><span data-stu-id="38241-639">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="38241-640">Caso a coleção seja indexada, os índices dos elementos que são movidos também são atualizados.</span><span class="sxs-lookup"><span data-stu-id="38241-640">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="38241-641">Este comportamento não se aplica às coleções em que elementos sejam agrupados conceitualmente em buckets, como uma tabela de hash.</span><span class="sxs-lookup"><span data-stu-id="38241-641">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38241-642">O exemplo de código a seguir mostra como remover elementos do <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="38241-642">The following code example shows how to remove elements from the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Remove Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="38241-643">O <see cref="T:System.Collections.ArrayList" /> é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="38241-643">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span>  
  
<span data-ttu-id="38241-644">- ou -</span><span class="sxs-lookup"><span data-stu-id="38241-644">-or-</span></span> 
<span data-ttu-id="38241-645">O <see cref="T:System.Collections.ArrayList" /> tem um tamanho fixo.</span><span class="sxs-lookup"><span data-stu-id="38241-645">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.Add(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="38241-646">Executando operações de cadeia de caracteres que não levam em conta a cultura em coleções</span><span class="sxs-lookup"><span data-stu-id="38241-646">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="arrayList.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="38241-647">O índice de base zero do elemento a ser removido.</span><span class="sxs-lookup"><span data-stu-id="38241-647">The zero-based index of the element to remove.</span></span></param>
        <summary><span data-ttu-id="38241-648">Remove o elemento no índice especificado do <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-648">Removes the element at the specified index of the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38241-649">Depois que o elemento for removido, o tamanho da coleção é ajustado e o valor da <xref:System.Collections.ArrayList.Count%2A> propriedade diminui em um.</span><span class="sxs-lookup"><span data-stu-id="38241-649">After the element is removed, the size of the collection is adjusted and the value of the <xref:System.Collections.ArrayList.Count%2A> property is decreased by one.</span></span>  
  
 <span data-ttu-id="38241-650">Em coleções de elementos contíguos, como listas, os elementos que seguem o elemento removido sobem para ocupar o ponto vazio.</span><span class="sxs-lookup"><span data-stu-id="38241-650">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="38241-651">Caso a coleção seja indexada, os índices dos elementos que são movidos também são atualizados.</span><span class="sxs-lookup"><span data-stu-id="38241-651">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="38241-652">Este comportamento não se aplica às coleções em que elementos sejam agrupados conceitualmente em buckets, como uma tabela de hash.</span><span class="sxs-lookup"><span data-stu-id="38241-652">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="38241-653">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="38241-653">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38241-654">O exemplo de código a seguir mostra como remover elementos do <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="38241-654">The following code example shows how to remove elements from the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Remove Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="38241-655"><paramref name="index" /> é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="38241-655"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="38241-656">- ou -</span><span class="sxs-lookup"><span data-stu-id="38241-656">-or-</span></span> 
 <span data-ttu-id="38241-657"><paramref name="index" /> é igual a ou maior que <see cref="P:System.Collections.ArrayList.Count" />.</span><span class="sxs-lookup"><span data-stu-id="38241-657"><paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ArrayList.Count" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="38241-658">O <see cref="T:System.Collections.ArrayList" /> é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="38241-658">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span>  
  
<span data-ttu-id="38241-659">- ou -</span><span class="sxs-lookup"><span data-stu-id="38241-659">-or-</span></span> 
<span data-ttu-id="38241-660">O <see cref="T:System.Collections.ArrayList" /> tem um tamanho fixo.</span><span class="sxs-lookup"><span data-stu-id="38241-660">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.Remove(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.Add(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveRange">
      <MemberSignature Language="C#" Value="public virtual void RemoveRange (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveRange(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveRange (index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveRange(int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member RemoveRange : int * int -&gt; unit&#xA;override this.RemoveRange : int * int -&gt; unit" Usage="arrayList.RemoveRange (index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="38241-661">O índice inicial baseado em zero do intervalo de elementos a serem removidos.</span><span class="sxs-lookup"><span data-stu-id="38241-661">The zero-based starting index of the range of elements to remove.</span></span></param>
        <param name="count"><span data-ttu-id="38241-662">O número de elementos a serem removidos.</span><span class="sxs-lookup"><span data-stu-id="38241-662">The number of elements to remove.</span></span></param>
        <summary><span data-ttu-id="38241-663">Remove um intervalo de elementos do <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-663">Removes a range of elements from the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38241-664">Em coleções de elementos contíguos, como listas, os elementos que seguem o elemento removido sobem para ocupar o ponto vazio.</span><span class="sxs-lookup"><span data-stu-id="38241-664">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="38241-665">Caso a coleção seja indexada, os índices dos elementos que são movidos também são atualizados.</span><span class="sxs-lookup"><span data-stu-id="38241-665">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="38241-666">Este comportamento não se aplica às coleções em que elementos sejam agrupados conceitualmente em buckets, como uma tabela de hash.</span><span class="sxs-lookup"><span data-stu-id="38241-666">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="38241-667">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="38241-667">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38241-668">O exemplo de código a seguir mostra como remover elementos do <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="38241-668">The following code example shows how to remove elements from the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Remove Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="38241-669"><paramref name="index" /> é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="38241-669"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="38241-670">- ou -</span><span class="sxs-lookup"><span data-stu-id="38241-670">-or-</span></span> 
 <span data-ttu-id="38241-671"><paramref name="count" /> é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="38241-671"><paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="38241-672"><paramref name="index" /> e <paramref name="count" /> não denotam um intervalo válido de elementos no <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-672"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range of elements in the <see cref="T:System.Collections.ArrayList" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="38241-673">O <see cref="T:System.Collections.ArrayList" /> é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="38241-673">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span>  
  
<span data-ttu-id="38241-674">- ou -</span><span class="sxs-lookup"><span data-stu-id="38241-674">-or-</span></span> 
<span data-ttu-id="38241-675">O <see cref="T:System.Collections.ArrayList" /> tem um tamanho fixo.</span><span class="sxs-lookup"><span data-stu-id="38241-675">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.Remove(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)" />
      </Docs>
    </Member>
    <Member MemberName="Repeat">
      <MemberSignature Language="C#" Value="public static System.Collections.ArrayList Repeat (object value, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ArrayList Repeat(object value, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Repeat(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Repeat (value As Object, count As Integer) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ArrayList ^ Repeat(System::Object ^ value, int count);" />
      <MemberSignature Language="F#" Value="static member Repeat : obj * int -&gt; System.Collections.ArrayList" Usage="System.Collections.ArrayList.Repeat (value, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="38241-676">O <see cref="T:System.Object" /> para copiar várias vezes no novo <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-676">The <see cref="T:System.Object" /> to copy multiple times in the new <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="38241-677">O valor pode ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="38241-677">The value can be <see langword="null" />.</span></span></param>
        <param name="count"><span data-ttu-id="38241-678">O número de vezes que <paramref name="value" /> deve ser copiado.</span><span class="sxs-lookup"><span data-stu-id="38241-678">The number of times <paramref name="value" /> should be copied.</span></span></param>
        <summary><span data-ttu-id="38241-679">Retorna um <see cref="T:System.Collections.ArrayList" /> cujos elementos são cópias do valor especificado.</span><span class="sxs-lookup"><span data-stu-id="38241-679">Returns an <see cref="T:System.Collections.ArrayList" /> whose elements are copies of the specified value.</span></span></summary>
        <returns><span data-ttu-id="38241-680">Um <see cref="T:System.Collections.ArrayList" /> com <paramref name="count" /> número de elementos, que são cópias de <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="38241-680">An <see cref="T:System.Collections.ArrayList" /> with <paramref name="count" /> number of elements, all of which are copies of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38241-681"><xref:System.Collections.ArrayList> aceita `null` como um valor válido e permite elementos duplicados.</span><span class="sxs-lookup"><span data-stu-id="38241-681"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="38241-682">Este método é uma operação O(`n`), em que `n` é `count`.</span><span class="sxs-lookup"><span data-stu-id="38241-682">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38241-683">O exemplo de código a seguir mostra como criar e inicializar um novo <xref:System.Collections.ArrayList> com o mesmo valor.</span><span class="sxs-lookup"><span data-stu-id="38241-683">The following code example shows how to create and initialize a new <xref:System.Collections.ArrayList> with the same value.</span></span>  
  
 [!code-cpp[Classic ArrayList.Repeat Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Repeat Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Repeat Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Repeat Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Repeat Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Repeat Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="38241-684"><paramref name="count" /> é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="38241-684"><paramref name="count" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Reverse">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="38241-685">Inverte a ordem dos elementos no <see cref="T:System.Collections.ArrayList" /> em uma parte dele.</span><span class="sxs-lookup"><span data-stu-id="38241-685">Reverses the order of the elements in the <see cref="T:System.Collections.ArrayList" /> or a portion of it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public virtual void Reverse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reverse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Reverse" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reverse ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reverse();" />
      <MemberSignature Language="F#" Value="abstract member Reverse : unit -&gt; unit&#xA;override this.Reverse : unit -&gt; unit" Usage="arrayList.Reverse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="38241-686">Inverte a ordem dos elementos em todo o <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-686">Reverses the order of the elements in the entire <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38241-687">Esse método usa <xref:System.Array.Reverse%2A?displayProperty=nameWithType> para inverter a ordem dos elementos, de modo que o elemento no <xref:System.Collections.ArrayList> [i], onde i é qualquer índice dentro do intervalo, move para <xref:System.Collections.ArrayList> [j], onde é igual a j `index`  +  `index`  +  `count` - i - 1.</span><span class="sxs-lookup"><span data-stu-id="38241-687">This method uses <xref:System.Array.Reverse%2A?displayProperty=nameWithType> to reverse the order of the elements, such that the element at <xref:System.Collections.ArrayList> [i], where i is any index within the range, moves to <xref:System.Collections.ArrayList> [j], where j equals `index` + `index` + `count` - i - 1.</span></span>  
  
 <span data-ttu-id="38241-688">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="38241-688">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38241-689">O exemplo de código a seguir mostra como reverter a ordem de classificação dos valores em um <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="38241-689">The following code example shows how to reverse the sort order of the values in an <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Reverse Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Reverse Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Reverse Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Reverse Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Reverse Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Reverse Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="38241-690">O <see cref="T:System.Collections.ArrayList" /> é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="38241-690">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public virtual void Reverse (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reverse(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Reverse(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reverse (index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reverse(int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member Reverse : int * int -&gt; unit&#xA;override this.Reverse : int * int -&gt; unit" Usage="arrayList.Reverse (index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="38241-691">O índice inicial baseado em zero do intervalo a ser revertido.</span><span class="sxs-lookup"><span data-stu-id="38241-691">The zero-based starting index of the range to reverse.</span></span></param>
        <param name="count"><span data-ttu-id="38241-692">O número de elementos no intervalo a serem revertidos.</span><span class="sxs-lookup"><span data-stu-id="38241-692">The number of elements in the range to reverse.</span></span></param>
        <summary><span data-ttu-id="38241-693">Inverte a ordem dos elementos no intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="38241-693">Reverses the order of the elements in the specified range.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38241-694">Esse método usa <xref:System.Array.Reverse%2A?displayProperty=nameWithType> para inverter a ordem dos elementos, de modo que o elemento no <xref:System.Collections.ArrayList> [i], onde i é qualquer índice dentro do intervalo, move para <xref:System.Collections.ArrayList> [j], onde é igual a j `index`  +  `index`  +  `count` - i - 1.</span><span class="sxs-lookup"><span data-stu-id="38241-694">This method uses <xref:System.Array.Reverse%2A?displayProperty=nameWithType> to reverse the order of the elements, such that the element at <xref:System.Collections.ArrayList> [i], where i is any index within the range, moves to <xref:System.Collections.ArrayList> [j], where j equals `index` + `index` + `count` - i - 1.</span></span>  
  
 <span data-ttu-id="38241-695">Este método é uma operação O(`n`), em que `n` é `count`.</span><span class="sxs-lookup"><span data-stu-id="38241-695">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38241-696">O exemplo de código a seguir mostra como reverter a ordem de classificação dos valores em um intervalo de elementos em um <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="38241-696">The following code example shows how to reverse the sort order of the values in a range of elements in an <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Reverse1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Reverse1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Reverse1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Reverse1 Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Reverse1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Reverse1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="38241-697"><paramref name="index" /> é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="38241-697"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="38241-698">- ou -</span><span class="sxs-lookup"><span data-stu-id="38241-698">-or-</span></span> 
 <span data-ttu-id="38241-699"><paramref name="count" /> é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="38241-699"><paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="38241-700"><paramref name="index" /> e <paramref name="count" /> não denotam um intervalo válido de elementos no <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-700"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range of elements in the <see cref="T:System.Collections.ArrayList" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="38241-701">O <see cref="T:System.Collections.ArrayList" /> é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="38241-701">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetRange">
      <MemberSignature Language="C#" Value="public virtual void SetRange (int index, System.Collections.ICollection c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetRange(int32 index, class System.Collections.ICollection c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetRange (index As Integer, c As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetRange(int index, System::Collections::ICollection ^ c);" />
      <MemberSignature Language="F#" Value="abstract member SetRange : int * System.Collections.ICollection -&gt; unit&#xA;override this.SetRange : int * System.Collections.ICollection -&gt; unit" Usage="arrayList.SetRange (index, c)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="c" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="38241-702">O índice <see cref="T:System.Collections.ArrayList" /> com base em zero no qual começar a copiar os elementos de <paramref name="c" />.</span><span class="sxs-lookup"><span data-stu-id="38241-702">The zero-based <see cref="T:System.Collections.ArrayList" /> index at which to start copying the elements of <paramref name="c" />.</span></span></param>
        <param name="c"><span data-ttu-id="38241-703">O <see cref="T:System.Collections.ICollection" /> cujos elementos copiar para o <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-703">The <see cref="T:System.Collections.ICollection" /> whose elements to copy to the <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="38241-704">A coleção em si não pode ser <see langword="null" />, mas pode conter elementos que são <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="38241-704">The collection itself cannot be <see langword="null" />, but it can contain elements that are <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="38241-705">Copia os elementos de uma coleção em um intervalo de elementos no <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-705">Copies the elements of a collection over a range of elements in the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38241-706"><xref:System.Collections.ArrayList> aceita `null` como um valor válido e permite elementos duplicados.</span><span class="sxs-lookup"><span data-stu-id="38241-706"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="38241-707">A ordem dos elementos na <xref:System.Collections.ICollection> é preservado no <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="38241-707">The order of the elements in the <xref:System.Collections.ICollection> is preserved in the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="38241-708">Esse método é um O (`n` + 1) a operação, onde `n` é <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="38241-708">This method is an O(`n` + 1) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38241-709">O exemplo de código a seguir mostra como definir e obter um intervalo de elementos no <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="38241-709">The following code example shows how to set and get a range of elements in the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.SetRange Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.SetRange Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.SetRange Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.SetRange Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.SetRange Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.SetRange Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="38241-710"><paramref name="index" /> é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="38241-710"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="38241-711">- ou -</span><span class="sxs-lookup"><span data-stu-id="38241-711">-or-</span></span> 
 <span data-ttu-id="38241-712"><paramref name="index" /> mais o número de elementos em <paramref name="c" /> é maior que <see cref="P:System.Collections.ArrayList.Count" />.</span><span class="sxs-lookup"><span data-stu-id="38241-712"><paramref name="index" /> plus the number of elements in <paramref name="c" /> is greater than <see cref="P:System.Collections.ArrayList.Count" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="38241-713"><paramref name="c" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="38241-713"><paramref name="c" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="38241-714">O <see cref="T:System.Collections.ArrayList" /> é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="38241-714">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Sort">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="38241-715">Classifica os elementos no <see cref="T:System.Collections.ArrayList" /> ou parte dele.</span><span class="sxs-lookup"><span data-stu-id="38241-715">Sorts the elements in the <see cref="T:System.Collections.ArrayList" /> or a portion of it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public virtual void Sort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Sort" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Sort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Sort();" />
      <MemberSignature Language="F#" Value="abstract member Sort : unit -&gt; unit&#xA;override this.Sort : unit -&gt; unit" Usage="arrayList.Sort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="38241-716">Classifica os elementos em todo o <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-716">Sorts the elements in the entire <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38241-717">Esse método usa <xref:System.Array.Sort%2A?displayProperty=nameWithType>, que usa o algoritmo QuickSort.</span><span class="sxs-lookup"><span data-stu-id="38241-717">This method uses <xref:System.Array.Sort%2A?displayProperty=nameWithType>, which uses the QuickSort algorithm.</span></span> <span data-ttu-id="38241-718">O algoritmo QuickSort é uma comparação de classificação (também chamada de uma classificação instável), o que significa que um "menor ou igual a" operação de comparação que determina qual dos dois elementos deve ocorrer pela primeira vez na lista classificada final.</span><span class="sxs-lookup"><span data-stu-id="38241-718">The QuickSort algorithm is a comparison sort (also called an unstable sort), which means that a "less than or equal to" comparison operation determines which of two elements should occur first in the final sorted list.</span></span> <span data-ttu-id="38241-719">No entanto, se dois elementos são iguais, sua ordem original pode não ser preservada.</span><span class="sxs-lookup"><span data-stu-id="38241-719">However, if two elements are equal, their original order might not be preserved.</span></span> <span data-ttu-id="38241-720">Por outro lado, uma classificação estável preserva a ordem de elementos iguais.</span><span class="sxs-lookup"><span data-stu-id="38241-720">In contrast, a stable sort preserves the order of elements that are equal.</span></span> <span data-ttu-id="38241-721">Para executar uma classificação estável, você deve implementar um personalizado <xref:System.Collections.IComparer> interface a ser usada com as outras sobrecargas desse método.</span><span class="sxs-lookup"><span data-stu-id="38241-721">To perform a stable sort, you must implement a custom <xref:System.Collections.IComparer> interface to use with the other overloads of this method.</span></span>  
  
 <span data-ttu-id="38241-722">Em média, esse método é um O (`n` log `n`) a operação, onde `n` é <xref:System.Collections.ArrayList.Count%2A>; no pior caso é um O (`n`^ 2) operação.</span><span class="sxs-lookup"><span data-stu-id="38241-722">On average, this method is an O(`n` log `n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>; in the worst case it is an O(`n`^2) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38241-723">O exemplo de código a seguir mostra como classificar os valores em um <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="38241-723">The following code example shows how to sort the values in an <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Sort Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Sort Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Sort Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Sort Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Sort Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Sort Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="38241-724">O <see cref="T:System.Collections.ArrayList" /> é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="38241-724">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span></exception>
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="38241-725">Executando operações de cadeia de caracteres que não levam em conta a cultura em coleções</span><span class="sxs-lookup"><span data-stu-id="38241-725">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public virtual void Sort (System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort(class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Sort(System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Sort (comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Sort(System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member Sort : System.Collections.IComparer -&gt; unit&#xA;override this.Sort : System.Collections.IComparer -&gt; unit" Usage="arrayList.Sort comparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="38241-726">A implementação de <see cref="T:System.Collections.IComparer" /> a ser usada durante a comparação de elementos.</span><span class="sxs-lookup"><span data-stu-id="38241-726">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span></span>  
  
<span data-ttu-id="38241-727">- ou -</span><span class="sxs-lookup"><span data-stu-id="38241-727">-or-</span></span> 
<span data-ttu-id="38241-728">Uma referência nula (<see langword="Nothing" /> no Visual Basic) para usar a implementação de <see cref="T:System.IComparable" /> de cada elemento.</span><span class="sxs-lookup"><span data-stu-id="38241-728">A null reference (<see langword="Nothing" /> in Visual Basic) to use the <see cref="T:System.IComparable" /> implementation of each element.</span></span></param>
        <summary><span data-ttu-id="38241-729">Classifica os elementos em todo o <see cref="T:System.Collections.ArrayList" /> usando o comparador especificado.</span><span class="sxs-lookup"><span data-stu-id="38241-729">Sorts the elements in the entire <see cref="T:System.Collections.ArrayList" /> using the specified comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38241-730">Use o <xref:System.Collections.ArrayList.Sort%2A> método para classificar uma lista de objetos com um comparador personalizado que implementa o <xref:System.Collections.IComparer> interface.</span><span class="sxs-lookup"><span data-stu-id="38241-730">Use the <xref:System.Collections.ArrayList.Sort%2A> method to  sort a list of objects with a custom comparer that implements the <xref:System.Collections.IComparer> interface.</span></span> <span data-ttu-id="38241-731">Se você passar `null` para `comparer`, esse método usa o <xref:System.IComparable> implementação de cada elemento.</span><span class="sxs-lookup"><span data-stu-id="38241-731">If you pass `null` for `comparer`, this method uses the <xref:System.IComparable> implementation of each element.</span></span> <span data-ttu-id="38241-732">Nesse caso, certifique-se de que os objetos contidos na lista de implementam o <xref:System.Collections.IComparer> interface ou uma exceção ocorrerá.</span><span class="sxs-lookup"><span data-stu-id="38241-732">In this case, you must make sure that the objects contained in the list implement the <xref:System.Collections.IComparer> interface or an exception will occur.</span></span>  
  
 <span data-ttu-id="38241-733">Além disso, usando o <xref:System.IComparable> implementação significa que a lista executa uma classificação de comparação (também chamada de uma classificação instável); ou seja, se dois elementos são iguais, sua ordem pode não ser preservada.</span><span class="sxs-lookup"><span data-stu-id="38241-733">In addition, using the <xref:System.IComparable> implementation means the list performs a comparison sort (also called an unstable sort); that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="38241-734">Por outro lado, uma classificação estável preserva a ordem de elementos iguais.</span><span class="sxs-lookup"><span data-stu-id="38241-734">In contrast, a stable sort preserves the order of elements that are equal.</span></span> <span data-ttu-id="38241-735">Para executar uma classificação estável, você deve implementar um personalizado <xref:System.Collections.IComparer> interface.</span><span class="sxs-lookup"><span data-stu-id="38241-735">To perform a stable sort, you must implement a custom <xref:System.Collections.IComparer> interface.</span></span>  
  
 <span data-ttu-id="38241-736">Em média, esse método é um O (`n` log `n`) a operação, onde `n` é <xref:System.Collections.ArrayList.Count%2A>; no pior caso é um O (`n`^ 2) operação.</span><span class="sxs-lookup"><span data-stu-id="38241-736">On average, this method is an O(`n` log `n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>; in the worst case it is an O(`n`^2) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38241-737">O exemplo de código a seguir mostra como classificar os valores em um <xref:System.Collections.ArrayList> usando a comparação padrão e uma comparação personalizada que inverte a ordem de classificação.</span><span class="sxs-lookup"><span data-stu-id="38241-737">The following code example shows how to sort the values in an <xref:System.Collections.ArrayList> using the default comparer and a custom comparer that reverses the sort order.</span></span>  
  
 [!code-cpp[System.Collections.ArrayList.Sort_2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_2/CPP/arraylist_sort2.cpp#1)]
 [!code-csharp[System.Collections.ArrayList.Sort_2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_2/CS/arraylist_sort2.cs#1)]
 [!code-vb[System.Collections.ArrayList.Sort_2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_2/VB/arraylist_sort2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="38241-738">O <see cref="T:System.Collections.ArrayList" /> é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="38241-738">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="38241-739">Erro ao comparar dois elementos.</span><span class="sxs-lookup"><span data-stu-id="38241-739">An error occurred while comparing two elements.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="38241-740"><see langword="null" /> é passado para <paramref name="comparer" />, e os elementos na lista não implementam <see cref="T:System.IComparable" />.</span><span class="sxs-lookup"><span data-stu-id="38241-740"><see langword="null" /> is passed for <paramref name="comparer" />, and the elements in the list do not implement <see cref="T:System.IComparable" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="38241-741">Executando operações de cadeia de caracteres que não levam em conta a cultura em coleções</span><span class="sxs-lookup"><span data-stu-id="38241-741">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public virtual void Sort (int index, int count, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort(int32 index, int32 count, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Sort(System.Int32,System.Int32,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Sort (index As Integer, count As Integer, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Sort(int index, int count, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member Sort : int * int * System.Collections.IComparer -&gt; unit&#xA;override this.Sort : int * int * System.Collections.IComparer -&gt; unit" Usage="arrayList.Sort (index, count, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="38241-742">O índice inicial baseado em zero do intervalo a ser classificado.</span><span class="sxs-lookup"><span data-stu-id="38241-742">The zero-based starting index of the range to sort.</span></span></param>
        <param name="count"><span data-ttu-id="38241-743">O tamanho do intervalo a ser classificado.</span><span class="sxs-lookup"><span data-stu-id="38241-743">The length of the range to sort.</span></span></param>
        <param name="comparer"><span data-ttu-id="38241-744">A implementação de <see cref="T:System.Collections.IComparer" /> a ser usada durante a comparação de elementos.</span><span class="sxs-lookup"><span data-stu-id="38241-744">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span></span>  
  
<span data-ttu-id="38241-745">- ou -</span><span class="sxs-lookup"><span data-stu-id="38241-745">-or-</span></span> 
<span data-ttu-id="38241-746">Uma referência nula (<see langword="Nothing" /> no Visual Basic) para usar a implementação de <see cref="T:System.IComparable" /> de cada elemento.</span><span class="sxs-lookup"><span data-stu-id="38241-746">A null reference (<see langword="Nothing" /> in Visual Basic) to use the <see cref="T:System.IComparable" /> implementation of each element.</span></span></param>
        <summary><span data-ttu-id="38241-747">Classifica os elementos em um intervalo de elementos em <see cref="T:System.Collections.ArrayList" /> usando o comparador especificado.</span><span class="sxs-lookup"><span data-stu-id="38241-747">Sorts the elements in a range of elements in <see cref="T:System.Collections.ArrayList" /> using the specified comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38241-748">Se `comparer` é definido como `null`, esse método executa uma classificação de comparação (também chamada de uma classificação instável); ou seja, se dois elementos são iguais, sua ordem pode não ser preservada.</span><span class="sxs-lookup"><span data-stu-id="38241-748">If `comparer` is set to `null`, this method performs a comparison sort (also called an unstable sort); that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="38241-749">Por outro lado, uma classificação estável preserva a ordem de elementos iguais.</span><span class="sxs-lookup"><span data-stu-id="38241-749">In contrast, a stable sort preserves the order of elements that are equal.</span></span> <span data-ttu-id="38241-750">Para executar uma classificação estável, você deve implementar um personalizado <xref:System.Collections.IComparer> interface.</span><span class="sxs-lookup"><span data-stu-id="38241-750">To perform a stable sort, you must implement a custom <xref:System.Collections.IComparer> interface.</span></span>  
  
 <span data-ttu-id="38241-751">Em média, esse método é um O (`n` log `n`) a operação, onde `n` é `count`; no pior caso é uma operação de O(n^2).</span><span class="sxs-lookup"><span data-stu-id="38241-751">On average, this method is an O(`n` log `n`) operation, where `n` is `count`; in the worst case it is an O(n^2) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38241-752">O exemplo de código a seguir mostra como classificar os valores em um intervalo de elementos em um <xref:System.Collections.ArrayList> usando o comparador padrão e uma comparação personalizada que inverte a ordem de classificação.</span><span class="sxs-lookup"><span data-stu-id="38241-752">The following code example shows how to sort the values in a range of elements in an <xref:System.Collections.ArrayList> using the default comparer and a custom comparer that reverses the sort order.</span></span>  
  
 [!code-cpp[System.Collections.ArrayList.Sort_3#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_3/CPP/arraylist_sort3.cpp#1)]
 [!code-csharp[System.Collections.ArrayList.Sort_3#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_3/CS/arraylist_sort3.cs#1)]
 [!code-vb[System.Collections.ArrayList.Sort_3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_3/VB/arraylist_sort3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="38241-753"><paramref name="index" /> é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="38241-753"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="38241-754">- ou -</span><span class="sxs-lookup"><span data-stu-id="38241-754">-or-</span></span> 
 <span data-ttu-id="38241-755"><paramref name="count" /> é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="38241-755"><paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="38241-756"><paramref name="index" /> e <paramref name="count" /> não especificam um intervalo válido no <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-756"><paramref name="index" /> and <paramref name="count" /> do not specify a valid range in the <see cref="T:System.Collections.ArrayList" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="38241-757">O <see cref="T:System.Collections.ArrayList" /> é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="38241-757">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="38241-758">Erro ao comparar dois elementos.</span><span class="sxs-lookup"><span data-stu-id="38241-758">An error occurred while comparing two elements.</span></span></exception>
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="38241-759">Executando operações de cadeia de caracteres que não levam em conta a cultura em coleções</span><span class="sxs-lookup"><span data-stu-id="38241-759">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Synchronized">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="38241-760">Retorna um wrapper de lista sincronizado (thread-safe).</span><span class="sxs-lookup"><span data-stu-id="38241-760">Returns a list wrapper that is synchronized (thread safe).</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.Collections.ArrayList Synchronized (System.Collections.ArrayList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ArrayList Synchronized(class System.Collections.ArrayList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Synchronized(System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Synchronized (list As ArrayList) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ArrayList ^ Synchronized(System::Collections::ArrayList ^ list);" />
      <MemberSignature Language="F#" Value="static member Synchronized : System.Collections.ArrayList -&gt; System.Collections.ArrayList" Usage="System.Collections.ArrayList.Synchronized list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="list"><span data-ttu-id="38241-761">O <see cref="T:System.Collections.ArrayList" /> a ser sincronizado.</span><span class="sxs-lookup"><span data-stu-id="38241-761">The <see cref="T:System.Collections.ArrayList" /> to synchronize.</span></span></param>
        <summary><span data-ttu-id="38241-762">Retorna um wrapper <see cref="T:System.Collections.ArrayList" /> sincronizado (thread-safe).</span><span class="sxs-lookup"><span data-stu-id="38241-762">Returns an <see cref="T:System.Collections.ArrayList" /> wrapper that is synchronized (thread safe).</span></span></summary>
        <returns><span data-ttu-id="38241-763">Um wrapper <see cref="T:System.Collections.ArrayList" /> sincronizado (thread-safe).</span><span class="sxs-lookup"><span data-stu-id="38241-763">An <see cref="T:System.Collections.ArrayList" /> wrapper that is synchronized (thread safe).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38241-764">Para garantir a segurança do thread do <xref:System.Collections.ArrayList>, todas as operações devem ser feitas por esse wrapper.</span><span class="sxs-lookup"><span data-stu-id="38241-764">To guarantee the thread safety of the <xref:System.Collections.ArrayList>, all operations must be done through this wrapper.</span></span>  
  
 <span data-ttu-id="38241-765">A enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="38241-765">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="38241-766">Mesmo quando uma coleção está sincronizada, outros threads ainda podem modificar a coleção, o que faz o enumerador lançar uma exceção.</span><span class="sxs-lookup"><span data-stu-id="38241-766">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="38241-767">Para garantir thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração ou verificar as exceções resultantes das alterações feitas por outros threads.</span><span class="sxs-lookup"><span data-stu-id="38241-767">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38241-768">O exemplo de código a seguir mostra como bloquear a coleção usando o <xref:System.Collections.ArrayList.SyncRoot%2A> durante toda a enumeração.</span><span class="sxs-lookup"><span data-stu-id="38241-768">The following code example shows how to lock the collection using the <xref:System.Collections.ArrayList.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="38241-769">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="38241-769">This method is an O(1) operation.</span></span>  
  
 <span data-ttu-id="38241-770">O exemplo de código a seguir mostra como sincronizar um <xref:System.Collections.ArrayList>, determinar se um <xref:System.Collections.ArrayList> é sincronizado e usar um sincronizada <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="38241-770">The following code example shows how to synchronize an <xref:System.Collections.ArrayList>, determine if an <xref:System.Collections.ArrayList> is synchronized and use a synchronized <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="38241-771"><paramref name="list" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="38241-771"><paramref name="list" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Collections.ArrayList.SyncRoot" />
        <altmember cref="P:System.Collections.ArrayList.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.Collections.IList Synchronized (System.Collections.IList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IList Synchronized(class System.Collections.IList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Synchronized (list As IList) As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IList ^ Synchronized(System::Collections::IList ^ list);" />
      <MemberSignature Language="F#" Value="static member Synchronized : System.Collections.IList -&gt; System.Collections.IList" Usage="System.Collections.ArrayList.Synchronized list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="list"><span data-ttu-id="38241-772">O <see cref="T:System.Collections.IList" /> a ser sincronizado.</span><span class="sxs-lookup"><span data-stu-id="38241-772">The <see cref="T:System.Collections.IList" /> to synchronize.</span></span></param>
        <summary><span data-ttu-id="38241-773">Retorna um wrapper <see cref="T:System.Collections.IList" /> sincronizado (thread-safe).</span><span class="sxs-lookup"><span data-stu-id="38241-773">Returns an <see cref="T:System.Collections.IList" /> wrapper that is synchronized (thread safe).</span></span></summary>
        <returns><span data-ttu-id="38241-774">Um wrapper <see cref="T:System.Collections.IList" /> sincronizado (thread-safe).</span><span class="sxs-lookup"><span data-stu-id="38241-774">An <see cref="T:System.Collections.IList" /> wrapper that is synchronized (thread safe).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38241-775">Para garantir a segurança do thread do <xref:System.Collections.ArrayList>, todas as operações devem ser feitas por esse wrapper.</span><span class="sxs-lookup"><span data-stu-id="38241-775">To guarantee the thread safety of the <xref:System.Collections.ArrayList>, all operations must be done through this wrapper.</span></span>  
  
 <span data-ttu-id="38241-776">A enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="38241-776">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="38241-777">Mesmo quando uma coleção está sincronizada, outros threads ainda podem modificar a coleção, o que faz o enumerador lançar uma exceção.</span><span class="sxs-lookup"><span data-stu-id="38241-777">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="38241-778">Para garantir thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração ou verificar as exceções resultantes das alterações feitas por outros threads.</span><span class="sxs-lookup"><span data-stu-id="38241-778">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38241-779">O exemplo de código a seguir mostra como bloquear a coleção usando o <xref:System.Collections.ArrayList.SyncRoot%2A> durante toda a enumeração.</span><span class="sxs-lookup"><span data-stu-id="38241-779">The following code example shows how to lock the collection using the <xref:System.Collections.ArrayList.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="38241-780">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="38241-780">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="38241-781"><paramref name="list" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="38241-781"><paramref name="list" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Collections.ArrayList.SyncRoot" />
        <altmember cref="P:System.Collections.ArrayList.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Collections.ArrayList.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38241-782">Obtém um objeto que pode ser usado para sincronizar o acesso ao <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-782">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <value><span data-ttu-id="38241-783">Um objeto que pode ser usado para sincronizar o acesso ao <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-783">An object that can be used to synchronize access to the <see cref="T:System.Collections.ArrayList" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38241-784">Para criar uma versão sincronizada do <xref:System.Collections.ArrayList>, use o <xref:System.Collections.ArrayList.Synchronized%2A> método.</span><span class="sxs-lookup"><span data-stu-id="38241-784">To create a synchronized version of the <xref:System.Collections.ArrayList>, use the <xref:System.Collections.ArrayList.Synchronized%2A> method.</span></span> <span data-ttu-id="38241-785">No entanto, as classes derivadas podem fornecer sua própria versão sincronizada do <xref:System.Collections.ArrayList> usando o <xref:System.Collections.ArrayList.SyncRoot%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="38241-785">However, derived classes can provide their own synchronized version of the <xref:System.Collections.ArrayList> using the <xref:System.Collections.ArrayList.SyncRoot%2A> property.</span></span> <span data-ttu-id="38241-786">O código de sincronização necessário realizar operações na <xref:System.Collections.ArrayList.SyncRoot%2A> do <xref:System.Collections.ArrayList>, não diretamente no <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="38241-786">The synchronizing code must perform operations on the <xref:System.Collections.ArrayList.SyncRoot%2A> of the <xref:System.Collections.ArrayList>, not directly on the <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="38241-787">Isso garante a operação apropriada das coleções que são derivadas de outros objetos.</span><span class="sxs-lookup"><span data-stu-id="38241-787">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="38241-788">Especificamente, ele mantém uma sincronização adequada com outros threads que podem ser simultaneamente modificando o <xref:System.Collections.ArrayList> objeto.</span><span class="sxs-lookup"><span data-stu-id="38241-788">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.ArrayList> object.</span></span>  
  
 <span data-ttu-id="38241-789">A enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="38241-789">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="38241-790">Mesmo quando uma coleção está sincronizada, outros threads ainda podem modificar a coleção, o que faz o enumerador lançar uma exceção.</span><span class="sxs-lookup"><span data-stu-id="38241-790">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="38241-791">Para garantir thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração ou verificar as exceções resultantes das alterações feitas por outros threads.</span><span class="sxs-lookup"><span data-stu-id="38241-791">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38241-792">O exemplo de código a seguir mostra como bloquear a coleção usando o <xref:System.Collections.ArrayList.SyncRoot%2A> durante toda a enumeração.</span><span class="sxs-lookup"><span data-stu-id="38241-792">The following code example shows how to lock the collection using the <xref:System.Collections.ArrayList.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="38241-793">A recuperação do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="38241-793">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ArrayList.IsSynchronized" />
        <altmember cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToArray">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="38241-794">Copia os elementos do <see cref="T:System.Collections.ArrayList" /> em uma nova matriz.</span><span class="sxs-lookup"><span data-stu-id="38241-794">Copies the elements of the <see cref="T:System.Collections.ArrayList" /> to a new array.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public virtual object[] ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] ToArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.ToArray" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToArray () As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Object ^&gt; ^ ToArray();" />
      <MemberSignature Language="F#" Value="abstract member ToArray : unit -&gt; obj[]&#xA;override this.ToArray : unit -&gt; obj[]" Usage="arrayList.ToArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="38241-795">Copia os elementos do <see cref="T:System.Collections.ArrayList" /> em uma nova matriz <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="38241-795">Copies the elements of the <see cref="T:System.Collections.ArrayList" /> to a new <see cref="T:System.Object" /> array.</span></span></summary>
        <returns><span data-ttu-id="38241-796">Uma matriz <see cref="T:System.Object" /> que contém cópias dos elementos do <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-796">An <see cref="T:System.Object" /> array containing copies of the elements of the <see cref="T:System.Collections.ArrayList" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38241-797">Os elementos são copiados usando <xref:System.Array.Copy%2A?displayProperty=nameWithType>, que é um O (`n`) a operação, onde `n` é <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="38241-797">The elements are copied using <xref:System.Array.Copy%2A?displayProperty=nameWithType>, which is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public virtual Array ToArray (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Array ToArray(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.ToArray(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Array ^ ToArray(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member ToArray : Type -&gt; Array&#xA;override this.ToArray : Type -&gt; Array" Usage="arrayList.ToArray type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Array</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="38241-798">O elemento <see cref="T:System.Type" /> da matriz de destino para criação e cópia dos elementos.</span><span class="sxs-lookup"><span data-stu-id="38241-798">The element <see cref="T:System.Type" /> of the destination array to create and copy elements to.</span></span></param>
        <summary><span data-ttu-id="38241-799">Copia os elementos do <see cref="T:System.Collections.ArrayList" /> em uma nova matriz do tipo de elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="38241-799">Copies the elements of the <see cref="T:System.Collections.ArrayList" /> to a new array of the specified element type.</span></span></summary>
        <returns><span data-ttu-id="38241-800">Uma matriz do tipo de elemento especificado que contém cópias dos elementos do <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-800">An array of the specified element type containing copies of the elements of the <see cref="T:System.Collections.ArrayList" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38241-801">Todos os objetos na <xref:System.Collections.ArrayList> objeto será convertido para o <xref:System.Type> especificado no `type` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="38241-801">All of the objects in the <xref:System.Collections.ArrayList> object will be cast to the <xref:System.Type> specified in the `type` parameter.</span></span>  
  
 <span data-ttu-id="38241-802">Os elementos são copiados usando <xref:System.Array.Copy%2A?displayProperty=nameWithType>, que é um O (`n`) a operação, onde `n` é <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="38241-802">The elements are copied using <xref:System.Array.Copy%2A?displayProperty=nameWithType>, which is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38241-803">O exemplo de cópia a seguir mostra como copiar os elementos de um <xref:System.Collections.ArrayList> para uma matriz de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="38241-803">The following copy example shows how to copy the elements of an <xref:System.Collections.ArrayList> to a string array.</span></span>  
  
 [!code-cpp[System.Collections.ArrayList.ToArray#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ArrayList.ToArray/CPP/arraylist_toarray.cpp#1)]
 [!code-csharp[System.Collections.ArrayList.ToArray#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ArrayList.ToArray/CS/arraylist_toarray.cs#1)]
 [!code-vb[System.Collections.ArrayList.ToArray#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ArrayList.ToArray/VB/arraylist_toarray.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="38241-804"><paramref name="type" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="38241-804"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="38241-805">O tipo do <see cref="T:System.Collections.ArrayList" /> de origem não pode ser convertido automaticamente no tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="38241-805">The type of the source <see cref="T:System.Collections.ArrayList" /> cannot be cast automatically to the specified type.</span></span></exception>
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="TrimToSize">
      <MemberSignature Language="C#" Value="public virtual void TrimToSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TrimToSize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.TrimToSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TrimToSize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TrimToSize();" />
      <MemberSignature Language="F#" Value="abstract member TrimToSize : unit -&gt; unit&#xA;override this.TrimToSize : unit -&gt; unit" Usage="arrayList.TrimToSize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="38241-806">Define a capacidade para o número real de elementos em <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="38241-806">Sets the capacity to the actual number of elements in the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38241-807">Esse método pode ser usado para minimizar a memória de uma coleção sobrecarga se nenhum elemento novo será adicionado à coleção.</span><span class="sxs-lookup"><span data-stu-id="38241-807">This method can be used to minimize a collection's memory overhead if no new elements will be added to the collection.</span></span>  
  
 <span data-ttu-id="38241-808">Para redefinir uma <xref:System.Collections.ArrayList> para seu estado inicial, chamar o <xref:System.Collections.ArrayList.Clear%2A> método antes de chamar <xref:System.Collections.ArrayList.TrimToSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="38241-808">To reset a <xref:System.Collections.ArrayList> to its initial state, call the <xref:System.Collections.ArrayList.Clear%2A> method before calling <xref:System.Collections.ArrayList.TrimToSize%2A>.</span></span> <span data-ttu-id="38241-809">Cortar um vazio <xref:System.Collections.ArrayList> define a capacidade do <xref:System.Collections.ArrayList> para a capacidade padrão.</span><span class="sxs-lookup"><span data-stu-id="38241-809">Trimming an empty <xref:System.Collections.ArrayList> sets the capacity of the <xref:System.Collections.ArrayList> to the default capacity.</span></span>  
  
 <span data-ttu-id="38241-810">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="38241-810">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38241-811">O exemplo de código a seguir mostra como cortar as partes não usadas do <xref:System.Collections.ArrayList> e como limpar os valores da <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="38241-811">The following code example shows how to trim the unused portions of the <xref:System.Collections.ArrayList> and how to clear the values of the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="38241-812">O <see cref="T:System.Collections.ArrayList" /> é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="38241-812">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span>  
  
<span data-ttu-id="38241-813">- ou -</span><span class="sxs-lookup"><span data-stu-id="38241-813">-or-</span></span> 
<span data-ttu-id="38241-814">O <see cref="T:System.Collections.ArrayList" /> tem um tamanho fixo.</span><span class="sxs-lookup"><span data-stu-id="38241-814">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.Clear" />
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
        <altmember cref="P:System.Collections.ArrayList.Count" />
      </Docs>
    </Member>
  </Members>
</Type>