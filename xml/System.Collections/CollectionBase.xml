<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CollectionBase.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac509de5a8fc0b91651ca42d10dde326c186122e14a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">09de5a8fc0b91651ca42d10dde326c186122e14a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Collections.CollectionBase">
          <source>Provides the <ph id="ph1">&lt;see langword="abstract" /&gt;</ph> base class for a strongly typed collection.</source>
          <target state="translated">Fornece a classe base <ph id="ph1">&lt;see langword="abstract" /&gt;</ph> para uma coleção fortemente tipada.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.CollectionBase">
          <source>A <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> instance is always modifiable.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> instância sempre é modificável.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.CollectionBase">
          <source>See <ph id="ph1">&lt;xref:System.Collections.ReadOnlyCollectionBase&gt;</ph> for a read-only version of this class.</source>
          <target state="translated">Consulte <ph id="ph1">&lt;xref:System.Collections.ReadOnlyCollectionBase&gt;</ph> para obter uma versão somente leitura dessa classe.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.CollectionBase">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> is the number of elements the <ph id="ph2">&lt;xref:System.Collections.CollectionBase&gt;</ph> can hold.</source>
          <target state="translated">A capacidade de um <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> é o número de elementos de <ph id="ph2">&lt;xref:System.Collections.CollectionBase&gt;</ph> pode conter.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.CollectionBase">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph>, the capacity is automatically increased as required through reallocation.</source>
          <target state="translated">Como os elementos são adicionados a um <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph>, a capacidade é aumentada automaticamente conforme necessário por meio de realocação.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.CollectionBase">
          <source>The capacity can be decreased by setting the <ph id="ph1">&lt;xref:System.Collections.CollectionBase.Capacity%2A&gt;</ph> property explicitly.</source>
          <target state="translated">A capacidade pode ser diminuída, definindo o <ph id="ph1">&lt;xref:System.Collections.CollectionBase.Capacity%2A&gt;</ph> propriedade explicitamente.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.CollectionBase">
          <source>The following code example implements the <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> class and uses that implementation to create a collection of <ph id="ph2">&lt;xref:System.Int16&gt;</ph> objects.</source>
          <target state="translated">O seguinte código exemplo implementa o <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> classe e usa essa implementação para criar uma coleção de <ph id="ph2">&lt;xref:System.Int16&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.CollectionBase">
          <source>Public static (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> in Visual Basic) members of this type are thread safe.</source>
          <target state="translated">Os membros estáticos públicos (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> no Visual Basic) desse são thread-safe.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.CollectionBase">
          <source>Any instance members are not guaranteed to be thread safe.</source>
          <target state="translated">Não há garantia de que qualquer membro de instância seja thread-safe.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.CollectionBase">
          <source>This implementation does not provide a synchronized (thread safe) wrapper for a <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>, but derived classes can create their own synchronized versions of the <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> using the <ph id="ph3">&lt;see cref="P:System.Collections.ICollection.SyncRoot" /&gt;</ph> property.</source>
          <target state="translated">Esta implementação não oferece um sincronizado wrapper (thread-safe) para um <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>, mas as classes derivadas podem criar suas próprias versões sincronizadas do <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> usando o <ph id="ph3">&lt;see cref="P:System.Collections.ICollection.SyncRoot" /&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.CollectionBase">
          <source>Enumerating through a collection is intrinsically not a thread safe procedure.</source>
          <target state="translated">Enumerar através de uma coleção intrinsecamente não é um procedimento de segurança do thread.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.CollectionBase">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Mesmo quando uma coleção está sincronizada, outros threads ainda podem modificar a coleção, o que faz o enumerador lançar uma exceção.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.CollectionBase">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Para garantir thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração ou verificar as exceções resultantes das alterações feitas por outros threads.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.CollectionBase">
          <source>This base class is provided to make it easier for implementers to create a strongly typed custom collection.</source>
          <target state="translated">Essa classe base é fornecido para tornar mais fácil para os implementadores criar uma coleção personalizada com rigidez de tipos.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.CollectionBase">
          <source>Implementers are encouraged to extend this base class instead of creating their own.</source>
          <target state="translated">Os implementadores são incentivados a estender a classe base em vez de criar seus próprios.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="T:System.Collections.CollectionBase">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> class with the default initial capacity.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> com a capacidade inicial padrão.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.#ctor">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.CollectionBase&gt;</ph> can hold.</source>
          <target state="translated">A capacidade de um <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> é o número de elementos que o <ph id="ph2">&lt;xref:System.Collections.CollectionBase&gt;</ph> pode conter.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.#ctor">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Como os elementos são adicionados a um <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph>, a capacidade é aumentada automaticamente conforme necessário ao realocar a matriz interna.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.#ctor">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph>.</source>
          <target state="translated">Se o tamanho da coleção pode ser estimado, especificando a capacidade inicial elimina a necessidade de executar um número de operações de redimensionamento durante a adição de elementos para o <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.#ctor">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Este construtor é uma operação O(1).</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.#ctor(System.Int32)">
          <source>The number of elements that the new list can initially store.</source>
          <target state="translated">O número de elementos que a nova lista pode armazenar inicialmente.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> class with the specified capacity.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> com a capacidade especificada.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.#ctor(System.Int32)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.CollectionBase&gt;</ph> can hold.</source>
          <target state="translated">A capacidade de um <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> é o número de elementos que o <ph id="ph2">&lt;xref:System.Collections.CollectionBase&gt;</ph> pode conter.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.#ctor(System.Int32)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Como os elementos são adicionados a um <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph>, a capacidade é aumentada automaticamente conforme necessário ao realocar a matriz interna.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.#ctor(System.Int32)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph>.</source>
          <target state="translated">Se o tamanho da coleção pode ser estimado, especificando a capacidade inicial elimina a necessidade de executar um número de operações de redimensionamento durante a adição de elementos para o <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.#ctor(System.Int32)">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`capacity`</ph>.</source>
          <target state="translated">Este construtor é um O (<ph id="ph1">`n`</ph>) operação, onde <ph id="ph2">`n`</ph> é <ph id="ph3">`capacity`</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.Collections.CollectionBase.Capacity">
          <source>Gets or sets the number of elements that the <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> can contain.</source>
          <target state="translated">Obtém ou define o número de elementos que o <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> pode conter.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.Capacity">
          <source>The number of elements that the <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> can contain.</source>
          <target state="translated">O número de elementos que o <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> pode conter.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.Capacity">
          <source><ph id="ph1">&lt;xref:System.Collections.CollectionBase.Capacity%2A&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.CollectionBase&gt;</ph> can store.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.CollectionBase.Capacity%2A&gt;</ph> é o número de elementos que o <ph id="ph2">&lt;xref:System.Collections.CollectionBase&gt;</ph> pode armazenar.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.Capacity">
          <source><ph id="ph1">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph> is the number of elements that are actually in the <ph id="ph2">&lt;xref:System.Collections.CollectionBase&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph> é o número de elementos que estão realmente no <ph id="ph2">&lt;xref:System.Collections.CollectionBase&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.Capacity">
          <source><ph id="ph1">&lt;xref:System.Collections.CollectionBase.Capacity%2A&gt;</ph> is always greater than or equal to <ph id="ph2">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.CollectionBase.Capacity%2A&gt;</ph> sempre é maior que ou igual a <ph id="ph2">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.Capacity">
          <source>If <ph id="ph1">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph> exceeds <ph id="ph2">&lt;xref:System.Collections.CollectionBase.Capacity%2A&gt;</ph> while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph> excede <ph id="ph2">&lt;xref:System.Collections.CollectionBase.Capacity%2A&gt;</ph> durante a adição de elementos, a capacidade é aumentada automaticamente realocando a matriz interna antes de copiar os elementos antigos e adição de novos elementos.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.Capacity">
          <source>The capacity can be decreased by setting the <ph id="ph1">&lt;xref:System.Collections.CollectionBase.Capacity%2A&gt;</ph> property explicitly.</source>
          <target state="translated">A capacidade pode ser diminuída, definindo o <ph id="ph1">&lt;xref:System.Collections.CollectionBase.Capacity%2A&gt;</ph> propriedade explicitamente.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.Capacity">
          <source>When the value of <ph id="ph1">&lt;xref:System.Collections.CollectionBase.Capacity%2A&gt;</ph> is set explicitly, the internal array is also reallocated to accommodate the specified capacity.</source>
          <target state="translated">Quando o valor de <ph id="ph1">&lt;xref:System.Collections.CollectionBase.Capacity%2A&gt;</ph> é definido explicitamente, a matriz interna também seja realocada para acomodar a capacidade especificada.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.Capacity">
          <source>Retrieving the value of this property is an O(1) operation; setting the property is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the new capacity.</source>
          <target state="translated">Recuperar o valor dessa propriedade é uma operação de (1); configuração da propriedade é um O (<ph id="ph1">`n`</ph>) operação, onde <ph id="ph2">`n`</ph> é a nova capacidade.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.Collections.CollectionBase.Capacity">
          <source><ph id="ph1">&lt;see cref="P:System.Collections.CollectionBase.Capacity" /&gt;</ph> is set to a value that is less than <ph id="ph2">&lt;see cref="P:System.Collections.CollectionBase.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Collections.CollectionBase.Capacity" /&gt;</ph> é definido como um valor menor que <ph id="ph2">&lt;see cref="P:System.Collections.CollectionBase.Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.Collections.CollectionBase.Capacity">
          <source>There is not enough memory available on the system.</source>
          <target state="translated">Não há memória suficiente disponível no sistema.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.Clear">
          <source>Removes all objects from the <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> instance.</source>
          <target state="translated">Remove todos os objetos da instância <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.Clear">
          <source>This method cannot be overridden.</source>
          <target state="translated">Esse método não pode ser substituído.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.Clear">
          <source><ph id="ph1">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph> is set to zero.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph> é definido como zero.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.Clear">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método é uma operação O(<ph id="ph1">`n`</ph>), em que <ph id="ph2">`n`</ph> é <ph id="ph3">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.Clear">
          <source>To perform custom actions before or after the collection is cleared, override the protected <ph id="ph1">&lt;xref:System.Collections.CollectionBase.OnClear%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.CollectionBase.OnClearComplete%2A&gt;</ph> method.</source>
          <target state="translated">Para executar ações personalizadas antes ou depois que a coleção é desmarcada, substituir protegido <ph id="ph1">&lt;xref:System.Collections.CollectionBase.OnClear%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Collections.CollectionBase.OnClearComplete%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="P:System.Collections.CollectionBase.Count">
          <source>Gets the number of elements contained in the <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> instance.</source>
          <target state="translated">Obtém o número de elementos contidos na instância <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="P:System.Collections.CollectionBase.Count">
          <source>This property cannot be overridden.</source>
          <target state="translated">Essa propriedade não pode ser substituída.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.Count">
          <source>The number of elements contained in the <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> instance.</source>
          <target state="translated">O número de elementos contidos na instância <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.Count">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">A recuperação do valor dessa propriedade é uma operação O(1).</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.Count">
          <source>The following code example implements the <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> class and uses that implementation to create a collection of <ph id="ph2">&lt;xref:System.Int16&gt;</ph> objects.</source>
          <target state="translated">O seguinte código exemplo implementa o <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> classe e usa essa implementação para criar uma coleção de <ph id="ph2">&lt;xref:System.Int16&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.GetEnumerator">
          <source>Returns an enumerator that iterates through the <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> instance.</source>
          <target state="translated">Retorna um enumerador que itera pela instância <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> instance.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> para a instância <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.GetEnumerator">
          <source>[Visual Basic, C#]</source>
          <target state="translated">[Visual Basic, C#]</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">O <ph id="ph1">`foreach`</ph> instrução de linguagem c# (<ph id="ph2">`for each`</ph> no Visual Basic) oculta a complexidade dos enumeradores.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Portanto, o uso de <ph id="ph1">`foreach`</ph> é recomendado, em vez de manipular diretamente o enumerador.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Os enumeradores podem ser usados para ler os dados na coleção, mas não podem ser usados para modificar a coleção subjacente.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Inicialmente, o enumerador é posicionado antes do primeiro elemento da coleção.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> também traz o enumerador de volta para essa posição.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.GetEnumerator">
          <source>At this position, calling <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> throws an exception.</source>
          <target state="translated">AT isso posicionar, chamando <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> lança uma exceção.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">Por isso, você deve chamar <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> para avançar o enumerador até o primeiro elemento da coleção antes de ler o valor de <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> retorna o mesmo objeto até <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> ou <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> ser chamado.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> define <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> como o próximo elemento.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Caso <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passe o final da coleção, o enumerador é posicionado após o último elemento na coleção e <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> retorna <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Quando o enumerador está nessa posição, as chamadas subsequentes para <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> também retornam <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, calling <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> throws an exception.</source>
          <target state="translated">Se a última chamada <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> retornou <ph id="ph2">`false`</ph>, chamar <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> lança uma exceção.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">Para definir <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> como o primeiro elemento da coleção novamente, é possível chamar <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> seguido de <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Um enumerador permanece válido desde que a coleção continue inalterada.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Se forem feitas alterações na coleção, como adicionar, modificar, ou excluir elementos, o enumerador é invalidado invalidado e a próxima chamada para <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> lança um <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.GetEnumerator">
          <source>If the collection is modified between <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the element that it is set to, even if the enumerator is already invalidated.</source>
          <target state="translated">Se a coleção é modificada entre <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> retorna o elemento que está definido como, mesmo se o enumerador já é invalidado.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</source>
          <target state="translated">O enumerador não tem acesso exclusivo à coleção; Portanto, enumerando através de uma coleção intrinsecamente não é um procedimento de segurança do thread.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.GetEnumerator">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Mesmo quando uma coleção está sincronizada, outros threads ainda podem modificar a coleção, o que faz o enumerador lançar uma exceção.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Para garantir thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração ou verificar as exceções resultantes das alterações feitas por outros threads.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.GetEnumerator">
          <source>While the <ph id="ph1">&lt;xref:System.Collections.CollectionBase.GetEnumerator%2A&gt;</ph> method is not visible to COM clients by default, inheriting the <ph id="ph2">&lt;xref:System.Collections.CollectionBase&gt;</ph> class can expose it and can cause undesirable behavior in COM clients.</source>
          <target state="translated">Enquanto o <ph id="ph1">&lt;xref:System.Collections.CollectionBase.GetEnumerator%2A&gt;</ph> método não é visível para clientes COM por padrão, herdando a <ph id="ph2">&lt;xref:System.Collections.CollectionBase&gt;</ph> classe pode expô-lo e pode causar um comportamento indesejado em clientes COM.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Este método é uma operação O(1).</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.GetEnumerator">
          <source>The following code example implements the <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> class and uses that implementation to create a collection of <ph id="ph2">&lt;xref:System.Int16&gt;</ph> objects.</source>
          <target state="translated">O seguinte código exemplo implementa o <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> classe e usa essa implementação para criar uma coleção de <ph id="ph2">&lt;xref:System.Int16&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.Collections.CollectionBase.InnerList">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> containing the list of elements in the <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> instance.</source>
          <target state="translated">Obtém uma <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> que contém a lista de elementos na instância de <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.InnerList">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> representing the <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> instance itself.</source>
          <target state="translated">Uma <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> que representa a própria instância de <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.InnerList">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">A recuperação do valor dessa propriedade é uma operação O(1).</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.InnerList">
          <source>The On* methods are invoked only on the instance returned by the <ph id="ph1">&lt;xref:System.Collections.CollectionBase.List%2A&gt;</ph> property, but not on the instance returned by the <ph id="ph2">&lt;xref:System.Collections.CollectionBase.InnerList%2A&gt;</ph> property.</source>
          <target state="translated">Os métodos On * são invocados somente na instância retornada pelo <ph id="ph1">&lt;xref:System.Collections.CollectionBase.List%2A&gt;</ph> propriedade, mas não na instância retornado pelo <ph id="ph2">&lt;xref:System.Collections.CollectionBase.InnerList%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="P:System.Collections.CollectionBase.List">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> containing the list of elements in the <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> instance.</source>
          <target state="translated">Obtém uma <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> que contém a lista de elementos na instância de <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.List">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> representing the <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> instance itself.</source>
          <target state="translated">Uma <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> que representa a própria instância de <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.List">
          <source>The On* methods are invoked only on the instance returned by the <ph id="ph1">&lt;xref:System.Collections.CollectionBase.List%2A&gt;</ph> property, but not on the instance returned by the <ph id="ph2">&lt;xref:System.Collections.CollectionBase.InnerList%2A&gt;</ph> property.</source>
          <target state="translated">Os métodos On * são invocados somente na instância retornada pelo <ph id="ph1">&lt;xref:System.Collections.CollectionBase.List%2A&gt;</ph> propriedade, mas não na instância retornado pelo <ph id="ph2">&lt;xref:System.Collections.CollectionBase.InnerList%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.List">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">A recuperação do valor dessa propriedade é uma operação O(1).</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.List">
          <source>The following code example implements the <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> class and uses that implementation to create a collection of <ph id="ph2">&lt;xref:System.Int16&gt;</ph> objects.</source>
          <target state="translated">O seguinte código exemplo implementa o <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> classe e usa essa implementação para criar uma coleção de <ph id="ph2">&lt;xref:System.Int16&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.OnClear">
          <source>Performs additional custom processes when clearing the contents of the <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> instance.</source>
          <target state="translated">Executa processos personalizados adicionais ao limpar o conteúdo da instância <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnClear">
          <source>The default implementation of this method is intended to be overridden by a derived class to perform some action before the collection is cleared.</source>
          <target state="translated">A implementação padrão desse método destina-se a ser substituído por uma classe derivada para executar alguma ação antes da coleção está desmarcada.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnClear">
          <source>The On* methods are invoked only on the instance returned by the <ph id="ph1">&lt;xref:System.Collections.CollectionBase.List%2A&gt;</ph> property, but not on the instance returned by the <ph id="ph2">&lt;xref:System.Collections.CollectionBase.InnerList%2A&gt;</ph> property.</source>
          <target state="translated">Os métodos On * são invocados somente na instância retornada pelo <ph id="ph1">&lt;xref:System.Collections.CollectionBase.List%2A&gt;</ph> propriedade, mas não na instância retornado pelo <ph id="ph2">&lt;xref:System.Collections.CollectionBase.InnerList%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnClear">
          <source>If the process fails, the collection reverts back to its previous state.</source>
          <target state="translated">Se o processo falhar, a coleção será revertido para seu estado anterior.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnClear">
          <source>The default implementation of this method is an O(1) operation.</source>
          <target state="translated">A implementação padrão desse método é uma operação de (1).</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnClear">
          <source>This method allows implementers to define processes that must be performed before deleting all the elements from the underlying <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated">Esse método permite que os implementadores defina processos que devem ser executados antes de excluir todos os elementos do subjacente <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnClear">
          <source>By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</source>
          <target state="translated">Definindo esse método, os implementadores podem adicionar funcionalidade para métodos herdados sem a necessidade de substituir todos os outros métodos.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnClear">
          <source><ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnClear" /&gt;</ph> is invoked before the standard Clear behavior, whereas <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnClearComplete" /&gt;</ph> is invoked after the standard Clear behavior.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnClear" /&gt;</ph> é invocado antes de limpar o comportamento padrão, enquanto <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnClearComplete" /&gt;</ph> é invocado após o comportamento padrão de limpar.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnClear">
          <source>For example, implementers can exempt certain elements from deletion by a global Clear.</source>
          <target state="translated">Por exemplo, implementadores podem isentar certos elementos de exclusão por uma clara global.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.OnClearComplete">
          <source>Performs additional custom processes after clearing the contents of the <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> instance.</source>
          <target state="translated">Executa processos adicionais personalizados após limpar o conteúdo da instância <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnClearComplete">
          <source>The default implementation of this method is intended to be overridden by a derived class to perform some action after the collection is cleared.</source>
          <target state="translated">A implementação padrão desse método destina-se a ser substituído por uma classe derivada para executar alguma ação após a coleção está desmarcada.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnClearComplete">
          <source>The On* methods are invoked only on the instance returned by the <ph id="ph1">&lt;xref:System.Collections.CollectionBase.List%2A&gt;</ph> property, but not on the instance returned by the <ph id="ph2">&lt;xref:System.Collections.CollectionBase.InnerList%2A&gt;</ph> property.</source>
          <target state="translated">Os métodos On * são invocados somente na instância retornada pelo <ph id="ph1">&lt;xref:System.Collections.CollectionBase.List%2A&gt;</ph> propriedade, mas não na instância retornado pelo <ph id="ph2">&lt;xref:System.Collections.CollectionBase.InnerList%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnClearComplete">
          <source>The default implementation of this method is an O(1) operation.</source>
          <target state="translated">A implementação padrão desse método é uma operação de (1).</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnClearComplete">
          <source>This method allows implementers to define processes that must be performed after deleting all the elements from the underlying <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated">Esse método permite que os implementadores definir os processos que devem ser executados após a exclusão de todos os elementos de base <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnClearComplete">
          <source>By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</source>
          <target state="translated">Definindo esse método, os implementadores podem adicionar funcionalidade para métodos herdados sem a necessidade de substituir todos os outros métodos.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnClearComplete">
          <source><ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnClear" /&gt;</ph> is invoked before the standard Clear behavior, whereas <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnClearComplete" /&gt;</ph> is invoked after the standard Clear behavior.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnClear" /&gt;</ph> é invocado antes de limpar o comportamento padrão, enquanto <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnClearComplete" /&gt;</ph> é invocado após o comportamento padrão de limpar.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">
          <source>The zero-based index at which to insert <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O índice de base zero no qual o <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept> será inserido.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">
          <source>The new value of the element at <bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O novo valor do elemento no <bpt id="p1">&lt;c&gt;</bpt>índice<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">
          <source>Performs additional custom processes before inserting a new element into the <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> instance.</source>
          <target state="translated">Executa os processos personalizados adicionais antes de inserir um novo elemento na instância <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">
          <source>The default implementation of this method is intended to be overridden by a derived class to perform some action before the specified element is inserted.</source>
          <target state="translated">A implementação padrão desse método destina-se a ser substituído por uma classe derivada para executar alguma ação antes que o elemento especificado é inserido.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">
          <source>The On* methods are invoked only on the instance returned by the <ph id="ph1">&lt;xref:System.Collections.CollectionBase.List%2A&gt;</ph> property, but not on the instance returned by the <ph id="ph2">&lt;xref:System.Collections.CollectionBase.InnerList%2A&gt;</ph> property.</source>
          <target state="translated">Os métodos On * são invocados somente na instância retornada pelo <ph id="ph1">&lt;xref:System.Collections.CollectionBase.List%2A&gt;</ph> propriedade, mas não na instância retornado pelo <ph id="ph2">&lt;xref:System.Collections.CollectionBase.InnerList%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">
          <source>If the process fails, the collection reverts back to its previous state.</source>
          <target state="translated">Se o processo falhar, a coleção será revertido para seu estado anterior.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">
          <source>The default implementation of this method is an O(1) operation.</source>
          <target state="translated">A implementação padrão desse método é uma operação de (1).</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">
          <source>The following code example implements the <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> class and uses that implementation to create a collection of <ph id="ph2">&lt;xref:System.Int16&gt;</ph> objects.</source>
          <target state="translated">O seguinte código exemplo implementa o <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> classe e usa essa implementação para criar uma coleção de <ph id="ph2">&lt;xref:System.Int16&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">
          <source>This method allows implementers to define processes that must be performed before inserting the element into the underlying <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated">Esse método permite que os implementadores defina processos que devem ser executados antes de inserir o elemento em subjacente <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">
          <source>By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</source>
          <target state="translated">Definindo esse método, os implementadores podem adicionar funcionalidade para métodos herdados sem a necessidade de substituir todos os outros métodos.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">
          <source><ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" /&gt;</ph> is invoked before the standard Insert behavior, whereas <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" /&gt;</ph> is invoked after the standard Insert behavior.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" /&gt;</ph> é chamado antes do comportamento padrão de inserção, enquanto <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" /&gt;</ph> é invocado após o comportamento padrão de inserção.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">
          <source>For example, implementers can restrict which types of objects can be inserted into the <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated">Por exemplo, os implementadores podem restringir quais tipos de objetos podem ser inseridos no <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">
          <source><ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /&gt;</ph> is called prior to this method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /&gt;</ph> é chamado antes desse método.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
          <source>The zero-based index at which to insert <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O índice de base zero no qual o <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept> será inserido.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
          <source>The new value of the element at <bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O novo valor do elemento no <bpt id="p1">&lt;c&gt;</bpt>índice<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
          <source>Performs additional custom processes after inserting a new element into the <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> instance.</source>
          <target state="translated">Executa processos personalizados adicionais após inserir um novo elemento na instância de <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
          <source>The default implementation of this method is intended to be overridden by a derived class to perform some action after the specified element is inserted.</source>
          <target state="translated">A implementação padrão desse método destina-se a ser substituído por uma classe derivada para executar alguma ação depois de inserido o elemento especificado.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
          <source>The On* methods are invoked only on the instance returned by the <ph id="ph1">&lt;xref:System.Collections.CollectionBase.List%2A&gt;</ph> property, but not on the instance returned by the <ph id="ph2">&lt;xref:System.Collections.CollectionBase.InnerList%2A&gt;</ph> property.</source>
          <target state="translated">Os métodos On * são invocados somente na instância retornada pelo <ph id="ph1">&lt;xref:System.Collections.CollectionBase.List%2A&gt;</ph> propriedade, mas não na instância retornado pelo <ph id="ph2">&lt;xref:System.Collections.CollectionBase.InnerList%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
          <source>The collection reverts back to its previous state if one of the following occurs:</source>
          <target state="translated">A coleção será revertido para seu estado anterior se ocorrer um dos seguintes:</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
          <source>The process fails.</source>
          <target state="translated">O processo falhará.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
          <source>This method is overridden to throw an exception.</source>
          <target state="translated">Esse método é substituído para gerar uma exceção.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
          <source>The default implementation of this method is an O(1) operation.</source>
          <target state="translated">A implementação padrão desse método é uma operação de (1).</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
          <source>This method allows implementers to define processes that must be performed after inserting the element into the underlying <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated">Esse método permite que os implementadores defina processos que devem ser executados depois de inserir o elemento no subjacente <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
          <source>By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</source>
          <target state="translated">Definindo esse método, os implementadores podem adicionar funcionalidade para métodos herdados sem a necessidade de substituir todos os outros métodos.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
          <source><ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" /&gt;</ph> is invoked before the standard Insert behavior, whereas <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" /&gt;</ph> is invoked after the standard Insert behavior.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" /&gt;</ph> é chamado antes do comportamento padrão de inserção, enquanto <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" /&gt;</ph> é invocado após o comportamento padrão de inserção.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">
          <source>The zero-based index at which <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> can be found.</source>
          <target state="translated">O índice de base zero no qual o <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept> pode ser encontrado.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">
          <source>The value of the element to remove from <bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O valor do elemento a ser removido do <bpt id="p1">&lt;c&gt;</bpt>índice<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">
          <source>Performs additional custom processes when removing an element from the <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> instance.</source>
          <target state="translated">Executa processos personalizados adicionais ao remover um elemento da instância <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">
          <source>The default implementation of this method is intended to be overridden by a derived class to perform some action before the specified element is removed.</source>
          <target state="translated">A implementação padrão desse método destina-se a ser substituído por uma classe derivada para executar alguma ação antes que o elemento especificado é removido.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">
          <source>The On* methods are invoked only on the instance returned by the <ph id="ph1">&lt;xref:System.Collections.CollectionBase.List%2A&gt;</ph> property, but not on the instance returned by the <ph id="ph2">&lt;xref:System.Collections.CollectionBase.InnerList%2A&gt;</ph> property.</source>
          <target state="translated">Os métodos On * são invocados somente na instância retornada pelo <ph id="ph1">&lt;xref:System.Collections.CollectionBase.List%2A&gt;</ph> propriedade, mas não na instância retornado pelo <ph id="ph2">&lt;xref:System.Collections.CollectionBase.InnerList%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">
          <source>If the process fails, the collection reverts back to its previous state.</source>
          <target state="translated">Se o processo falhar, a coleção será revertido para seu estado anterior.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">
          <source>The default implementation of this method is an O(1) operation.</source>
          <target state="translated">A implementação padrão desse método é uma operação de (1).</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">
          <source>The following code example implements the <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> class and uses that implementation to create a collection of <ph id="ph2">&lt;xref:System.Int16&gt;</ph> objects.</source>
          <target state="translated">O seguinte código exemplo implementa o <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> classe e usa essa implementação para criar uma coleção de <ph id="ph2">&lt;xref:System.Int16&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">
          <source>This method allows implementers to define processes that must be performed before removing the element from the underlying <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated">Esse método permite que os implementadores definir os processos que devem ser executados antes de remover o elemento subjacente <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">
          <source>By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</source>
          <target state="translated">Definindo esse método, os implementadores podem adicionar funcionalidade para métodos herdados sem a necessidade de substituir todos os outros métodos.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">
          <source><ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" /&gt;</ph> is invoked before the standard Remove behavior, whereas <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" /&gt;</ph> is invoked after the standard Remove behavior.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" /&gt;</ph> é chamado antes do comportamento padrão de remover, enquanto <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" /&gt;</ph> é invocado depois de remover o comportamento padrão.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">
          <source>For example, implementers can prevent removal of elements by always throwing an exception in <ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" /&gt;</ph>.</source>
          <target state="translated">Por exemplo, os implementadores podem impedir a remoção de elementos sempre lançando uma exceção <ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">
          <source><ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /&gt;</ph> is called prior to this method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /&gt;</ph> é chamado antes desse método.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
          <source>The zero-based index at which <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> can be found.</source>
          <target state="translated">O índice de base zero no qual o <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept> pode ser encontrado.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
          <source>The value of the element to remove from <bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O valor do elemento a ser removido do <bpt id="p1">&lt;c&gt;</bpt>índice<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
          <source>Performs additional custom processes after removing an element from the <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> instance.</source>
          <target state="translated">Executa processos personalizados adicionais após remover um elemento da instância de <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
          <source>The default implementation of this method is intended to be overridden by a derived class to perform some action after the specified element is removed.</source>
          <target state="translated">A implementação padrão desse método destina-se a ser substituído por uma classe derivada para executar alguma ação após a remoção do elemento especificado.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
          <source>The On* methods are invoked only on the instance returned by the <ph id="ph1">&lt;xref:System.Collections.CollectionBase.List%2A&gt;</ph> property, but not on the instance returned by the <ph id="ph2">&lt;xref:System.Collections.CollectionBase.InnerList%2A&gt;</ph> property.</source>
          <target state="translated">Os métodos On * são invocados somente na instância retornada pelo <ph id="ph1">&lt;xref:System.Collections.CollectionBase.List%2A&gt;</ph> propriedade, mas não na instância retornado pelo <ph id="ph2">&lt;xref:System.Collections.CollectionBase.InnerList%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
          <source>The collection reverts back to its previous state if one of the following occurs:</source>
          <target state="translated">A coleção será revertido para seu estado anterior se ocorrer um dos seguintes:</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
          <source>The process fails.</source>
          <target state="translated">O processo falhará.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
          <source>This method is overridden to throw an exception.</source>
          <target state="translated">Esse método é substituído para gerar uma exceção.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
          <source>The default implementation of this method is an O(1) operation.</source>
          <target state="translated">A implementação padrão desse método é uma operação de (1).</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
          <source>This method allows implementers to define processes that must be performed after removing the element from the underlying <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated">Esse método permite que os implementadores definir os processos que devem ser executados depois de remover o elemento de subjacente <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
          <source>By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</source>
          <target state="translated">Definindo esse método, os implementadores podem adicionar funcionalidade para métodos herdados sem a necessidade de substituir todos os outros métodos.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
          <source><ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" /&gt;</ph> is invoked before the standard Remove behavior, whereas <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" /&gt;</ph> is invoked after the standard Remove behavior.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" /&gt;</ph> é chamado antes do comportamento padrão de remover, enquanto <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" /&gt;</ph> é invocado depois de remover o comportamento padrão.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">
          <source>The zero-based index at which <bpt id="p1">&lt;c&gt;</bpt>oldValue<ept id="p1">&lt;/c&gt;</ept> can be found.</source>
          <target state="translated">O índice de base zero no qual <bpt id="p1">&lt;c&gt;</bpt>oldValue<ept id="p1">&lt;/c&gt;</ept> pode ser encontrado.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">
          <source>The value to replace with <bpt id="p1">&lt;c&gt;</bpt>newValue<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O valor a ser substituído por <bpt id="p1">&lt;c&gt;</bpt>newValue<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">
          <source>The new value of the element at <bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O novo valor do elemento no <bpt id="p1">&lt;c&gt;</bpt>índice<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">
          <source>Performs additional custom processes before setting a value in the <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> instance.</source>
          <target state="translated">Executa processos personalizados adicionais antes de definir um valor na instância <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">
          <source>The default implementation of this method is intended to be overridden by a derived class to perform some action before the specified element is set.</source>
          <target state="translated">A implementação padrão desse método destina-se a ser substituído por uma classe derivada para executar alguma ação antes da definição do elemento especificado.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">
          <source>The On* methods are invoked only on the instance returned by the <ph id="ph1">&lt;xref:System.Collections.CollectionBase.List%2A&gt;</ph> property, but not on the instance returned by the <ph id="ph2">&lt;xref:System.Collections.CollectionBase.InnerList%2A&gt;</ph> property.</source>
          <target state="translated">Os métodos On * são invocados somente na instância retornada pelo <ph id="ph1">&lt;xref:System.Collections.CollectionBase.List%2A&gt;</ph> propriedade, mas não na instância retornado pelo <ph id="ph2">&lt;xref:System.Collections.CollectionBase.InnerList%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">
          <source>If the process fails, the collection reverts back to its previous state.</source>
          <target state="translated">Se o processo falhar, a coleção será revertido para seu estado anterior.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">
          <source>The default implementation of this method is an O(1) operation.</source>
          <target state="translated">A implementação padrão desse método é uma operação de (1).</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">
          <source>The following code example implements the <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> class and uses that implementation to create a collection of <ph id="ph2">&lt;xref:System.Int16&gt;</ph> objects.</source>
          <target state="translated">O seguinte código exemplo implementa o <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> classe e usa essa implementação para criar uma coleção de <ph id="ph2">&lt;xref:System.Int16&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">
          <source>This method allows implementers to define processes that must be performed before setting the specified element in the underlying <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated">Esse método permite que os implementadores defina processos que devem ser executados antes de configurar o elemento especificado no subjacente <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">
          <source>By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</source>
          <target state="translated">Definindo esse método, os implementadores podem adicionar funcionalidade para métodos herdados sem a necessidade de substituir todos os outros métodos.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">
          <source><ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" /&gt;</ph> is invoked before the standard Set behavior, whereas <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" /&gt;</ph> is invoked after the standard Set behavior.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" /&gt;</ph> é chamado antes do comportamento padrão do conjunto, enquanto <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" /&gt;</ph> é invocado após o comportamento padrão do conjunto.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">
          <source>For example, implementers can restrict which values can be overwritten by performing a check inside <ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" /&gt;</ph>.</source>
          <target state="translated">Por exemplo, os implementadores podem restringir quais valores podem ser substituídos por executar uma verificação de dentro de <ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">
          <source><ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /&gt;</ph> is called prior to this method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /&gt;</ph> é chamado antes desse método.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
          <source>The zero-based index at which <bpt id="p1">&lt;c&gt;</bpt>oldValue<ept id="p1">&lt;/c&gt;</ept> can be found.</source>
          <target state="translated">O índice de base zero no qual <bpt id="p1">&lt;c&gt;</bpt>oldValue<ept id="p1">&lt;/c&gt;</ept> pode ser encontrado.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
          <source>The value to replace with <bpt id="p1">&lt;c&gt;</bpt>newValue<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O valor a ser substituído por <bpt id="p1">&lt;c&gt;</bpt>newValue<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
          <source>The new value of the element at <bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">O novo valor do elemento no <bpt id="p1">&lt;c&gt;</bpt>índice<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
          <source>Performs additional custom processes after setting a value in the <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> instance.</source>
          <target state="translated">Executa processos personalizados adicionais após configurar um valor na instância de <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
          <source>The default implementation of this method is intended to be overridden by a derived class to perform some action after the specified element is set.</source>
          <target state="translated">A implementação padrão desse método destina-se a ser substituído por uma classe derivada para executar alguma ação após o elemento especificado está definido.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
          <source>The On* methods are invoked only on the instance returned by the <ph id="ph1">&lt;xref:System.Collections.CollectionBase.List%2A&gt;</ph> property, but not on the instance returned by the <ph id="ph2">&lt;xref:System.Collections.CollectionBase.InnerList%2A&gt;</ph> property.</source>
          <target state="translated">Os métodos On * são invocados somente na instância retornada pelo <ph id="ph1">&lt;xref:System.Collections.CollectionBase.List%2A&gt;</ph> propriedade, mas não na instância retornado pelo <ph id="ph2">&lt;xref:System.Collections.CollectionBase.InnerList%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
          <source>The collection reverts back to its previous state if one of the following occurs:</source>
          <target state="translated">A coleção será revertido para seu estado anterior se ocorrer um dos seguintes:</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
          <source>The process fails.</source>
          <target state="translated">O processo falhará.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
          <source>This method is overridden to throw an exception.</source>
          <target state="translated">Esse método é substituído para gerar uma exceção.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
          <source>The default implementation of this method is an O(1) operation.</source>
          <target state="translated">A implementação padrão desse método é uma operação de (1).</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
          <source>This method allows implementers to define processes that must be performed after setting the specified element in the underlying <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated">Esse método permite que os implementadores defina processos que devem ser executados depois de definir o elemento especificado na subjacente <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
          <source>By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</source>
          <target state="translated">Definindo esse método, os implementadores podem adicionar funcionalidade para métodos herdados sem a necessidade de substituir todos os outros métodos.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
          <source><ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" /&gt;</ph> is invoked before the standard Set behavior, whereas <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" /&gt;</ph> is invoked after the standard Set behavior.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" /&gt;</ph> é chamado antes do comportamento padrão do conjunto, enquanto <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" /&gt;</ph> é invocado após o comportamento padrão do conjunto.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.OnValidate(System.Object)">
          <source>The object to validate.</source>
          <target state="translated">O objeto a ser validado.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.OnValidate(System.Object)">
          <source>Performs additional custom processes when validating a value.</source>
          <target state="translated">Executa processos personalizados adicionais ao validar um valor.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnValidate(System.Object)">
          <source>The default implementation of this method determines whether <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph>, and, if so, throws <ph id="ph3">&lt;xref:System.ArgumentNullException&gt;</ph>.</source>
          <target state="translated">A implementação padrão desse método determina se <ph id="ph1">`value`</ph> é <ph id="ph2">`null`</ph>e, nesse caso, lança <ph id="ph3">&lt;xref:System.ArgumentNullException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnValidate(System.Object)">
          <source>It is intended to be overridden by a derived class to perform additional action when the specified element is validated.</source>
          <target state="translated">Destina-se a ser substituído por uma classe derivada para executar uma ação adicional quando o elemento especificado é validado.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnValidate(System.Object)">
          <source>The On* methods are invoked only on the instance returned by the <ph id="ph1">&lt;xref:System.Collections.CollectionBase.List%2A&gt;</ph> property, but not on the instance returned by the <ph id="ph2">&lt;xref:System.Collections.CollectionBase.InnerList%2A&gt;</ph> property.</source>
          <target state="translated">Os métodos On * são invocados somente na instância retornada pelo <ph id="ph1">&lt;xref:System.Collections.CollectionBase.List%2A&gt;</ph> propriedade, mas não na instância retornado pelo <ph id="ph2">&lt;xref:System.Collections.CollectionBase.InnerList%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnValidate(System.Object)">
          <source>The default implementation of this method is an O(1) operation.</source>
          <target state="translated">A implementação padrão desse método é uma operação de (1).</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnValidate(System.Object)">
          <source>The following code example implements the <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> class and uses that implementation to create a collection of <ph id="ph2">&lt;xref:System.Int16&gt;</ph> objects.</source>
          <target state="translated">O seguinte código exemplo implementa o <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> classe e usa essa implementação para criar uma coleção de <ph id="ph2">&lt;xref:System.Int16&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.OnValidate(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnValidate(System.Object)">
          <source>This method allows implementers to define processes that must be performed when executing the standard behavior of the underlying <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated">Esse método permite que os implementadores defina processos que devem ser executados ao executar o comportamento padrão da subjacente <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnValidate(System.Object)">
          <source>By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</source>
          <target state="translated">Definindo esse método, os implementadores podem adicionar funcionalidade para métodos herdados sem a necessidade de substituir todos os outros métodos.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnValidate(System.Object)">
          <source><ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /&gt;</ph> can be used to impose restrictions on the type of objects that are accepted into the collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /&gt;</ph> pode ser usado para impor restrições no tipo de objetos que são aceitos na coleção.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnValidate(System.Object)">
          <source>The default implementation prevents <ph id="ph1">&lt;see langword="null" /&gt;</ph> from being added to or removed from the underlying <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</source>
          <target state="translated">Impede que a implementação padrão <ph id="ph1">&lt;see langword="null" /&gt;</ph> sejam adicionados ou removidos da subjacente <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.OnValidate(System.Object)">
          <source><ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /&gt;</ph> is called prior to <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" /&gt;</ph>, and <ph id="ph4">&lt;see cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /&gt;</ph> é chamado antes de <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" /&gt;</ph>, e <ph id="ph4">&lt;see cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.RemoveAt(System.Int32)">
          <source>The zero-based index of the element to remove.</source>
          <target state="translated">O índice de base zero do elemento a ser removido.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.RemoveAt(System.Int32)">
          <source>Removes the element at the specified index of the <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> instance.</source>
          <target state="translated">Remove o elemento no índice especificado da instância <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.RemoveAt(System.Int32)">
          <source>This method is not overridable.</source>
          <target state="translated">Este método não é substituível.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.RemoveAt(System.Int32)">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">Em coleções de elementos contíguos, como listas, os elementos que seguem o elemento removido sobem para ocupar o ponto vazio.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.RemoveAt(System.Int32)">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">Caso a coleção seja indexada, os índices dos elementos que são movidos também são atualizados.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.RemoveAt(System.Int32)">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">Este comportamento não se aplica às coleções em que elementos sejam agrupados conceitualmente em buckets, como uma tabela de hash.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.RemoveAt(System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método é uma operação O(<ph id="ph1">`n`</ph>), em que <ph id="ph2">`n`</ph> é <ph id="ph3">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.RemoveAt(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> é menor que zero.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.RemoveAt(System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.RemoveAt(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is equal to or greater than <ph id="ph2">&lt;see cref="P:System.Collections.CollectionBase.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> é igual a ou maior que <ph id="ph2">&lt;see cref="P:System.Collections.CollectionBase.Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.RemoveAt(System.Int32)">
          <source>This method calls <ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" /&gt;</ph>, and <ph id="ph3">&lt;see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" /&gt;</ph>.</source>
          <target state="translated">Este método chama <ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" /&gt;</ph>, e <ph id="ph3">&lt;see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the elements copied from <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> unidimensional que é o destino dos elementos copiados de <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> deve ter indexação com base em zero.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">O índice baseado em zero na <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> na qual a cópia começa.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>Copies the entire <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> to a compatible one-dimensional <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, starting at the specified index of the target array.</source>
          <target state="translated">Copia todo o <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> em um <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph> unidimensional compatível, começando no índice especificado da matriz de destino.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The specified array must be of a compatible type.</source>
          <target state="translated">A matriz especificada deve ser de um tipo compatível.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>This method uses <ph id="ph1">&lt;xref:System.Array.Copy%2A?displayProperty=nameWithType&gt;</ph> to copy the elements.</source>
          <target state="translated">Este método usa <ph id="ph1">&lt;xref:System.Array.Copy%2A?displayProperty=nameWithType&gt;</ph> para copiar os elementos.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método é uma operação O(<ph id="ph1">`n`</ph>), em que <ph id="ph2">`n`</ph> é <ph id="ph3">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> é menor que zero.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> é multidimensional.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> is greater than the available space from <ph id="ph2">&lt;paramref name="index" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">O número de elementos na origem <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> é maior do que o espaço disponível de <ph id="ph2">&lt;paramref name="index" /&gt;</ph> até o final do <ph id="ph3">&lt;paramref name="array" /&gt;</ph> de destino.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The type of the source <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">O tipo do <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> de origem não pode ser automaticamente convertido para o tipo de <ph id="ph2">&lt;paramref name="array" /&gt;</ph> de destino.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized">
          <source>Gets a value indicating whether access to the <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> is synchronized (thread safe).</source>
          <target state="translated">Obtém um valor que indica se o acesso à <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> é sincronizado (thread-safe).</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if access to the <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> is synchronized (thread safe); otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> caso o acesso ao <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> seja sincronizado (thread-safe); do contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized">
          <source>A <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> instance is not synchronized.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> instância não está sincronizada.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized">
          <source>Derived classes can provide a synchronized version of the <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> using the <ph id="ph2">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property.</source>
          <target state="translated">Classes derivadas podem fornecer uma versão sincronizada do <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> usando o <ph id="ph2">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized">
          <source>Enumerating through a collection is intrinsically not a thread safe procedure.</source>
          <target state="translated">Enumerar através de uma coleção intrinsecamente não é um procedimento de segurança do thread.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Mesmo quando uma coleção está sincronizada, outros threads ainda podem modificar a coleção, o que faz o enumerador lançar uma exceção.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Para garantir thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração ou verificar as exceções resultantes das alterações feitas por outros threads.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized">
          <source>The following code example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> during the entire enumeration:</source>
          <target state="translated">O exemplo de código a seguir mostra como bloquear a coleção usando o <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> durante toda a enumeração:</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">A recuperação do valor dessa propriedade é uma operação O(1).</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</source>
          <target state="translated">Obtém um objeto que pode ser usado para sincronizar o acesso ao <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot">
          <source>An object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</source>
          <target state="translated">Um objeto que pode ser usado para sincronizar o acesso ao <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot">
          <source>Derived classes can provide their own synchronized version of the <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> using the <ph id="ph2">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property.</source>
          <target state="translated">Classes derivadas podem fornecer sua própria versão sincronizada de <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> usando o <ph id="ph2">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot">
          <source>The synchronizing code must perform operations on the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> of the <ph id="ph2">&lt;xref:System.Collections.CollectionBase&gt;</ph>, not directly on the <ph id="ph3">&lt;xref:System.Collections.CollectionBase&gt;</ph>.</source>
          <target state="translated">O código de sincronização necessário realizar operações no <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> do <ph id="ph2">&lt;xref:System.Collections.CollectionBase&gt;</ph>, não diretamente no <ph id="ph3">&lt;xref:System.Collections.CollectionBase&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot">
          <source>This ensures proper operation of collections that are derived from other objects.</source>
          <target state="translated">Isso garante a operação apropriada das coleções que são derivadas de outros objetos.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot">
          <source>Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> object.</source>
          <target state="translated">Especificamente, ele mantém uma sincronização adequada com outros threads que podem ser simultaneamente modificando o <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot">
          <source>Enumerating through a collection is intrinsically not a thread safe procedure.</source>
          <target state="translated">Enumerar através de uma coleção intrinsecamente não é um procedimento de segurança do thread.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Mesmo quando uma coleção está sincronizada, outros threads ainda podem modificar a coleção, o que faz o enumerador lançar uma exceção.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Para garantir thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração ou verificar as exceções resultantes das alterações feitas por outros threads.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot">
          <source>The following code example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> during the entire enumeration:</source>
          <target state="translated">O exemplo de código a seguir mostra como bloquear a coleção usando o <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> durante toda a enumeração:</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">A recuperação do valor dessa propriedade é uma operação O(1).</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to be added to the end of the <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</source>
          <target state="translated">O objeto <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> a ser adicionado ao final do <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)">
          <source>Adds an object to the end of the <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</source>
          <target state="translated">Adiciona um objeto ao final do <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> index at which the <ph id="ph2">&lt;paramref name="value" /&gt;</ph> has been added.</source>
          <target state="translated">O índice <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> ao qual o <ph id="ph2">&lt;paramref name="value" /&gt;</ph> foi adicionado.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph> already equals the capacity, the capacity of the list is doubled by automatically reallocating the internal array and copying the existing elements to the new array before the new element is added.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph> já for igual à capacidade, a capacidade da lista é duplicada, automaticamente realocando a matriz interna e copiar os elementos existentes para a nova matriz antes de adicionar o novo elemento.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph> is less than the capacity, this method is an O(1) operation.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph> é menor que a capacidade, esse método é uma operação de (1).</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)">
          <source>If the capacity needs to be increased to accommodate the new element, this method becomes an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph>.</source>
          <target state="translated">Se a capacidade precisa ser aumentado para acomodar o novo elemento, esse método se torna um O (<ph id="ph1">`n`</ph>) operação, onde <ph id="ph2">`n`</ph> é <ph id="ph3">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)">
          <source>The following code example implements the <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> class and uses that implementation to create a collection of <ph id="ph2">&lt;xref:System.Int16&gt;</ph> objects.</source>
          <target state="translated">O seguinte código exemplo implementa o <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> classe e usa essa implementação para criar uma coleção de <ph id="ph2">&lt;xref:System.Int16&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> is read-only.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> é somente leitura.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> has a fixed size.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> tem um tamanho fixo.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)">
          <source>This method calls <ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" /&gt;</ph>, and <ph id="ph3">&lt;see cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" /&gt;</ph>.</source>
          <target state="translated">Este método chama <ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" /&gt;</ph>, e <ph id="ph3">&lt;see cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to locate in the <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> a ser localizado no <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)">
          <source>Determines whether the <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> contains a specific element.</source>
          <target state="translated">Determina se o <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> contém um elemento específico.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> contains the specified <ph id="ph3">&lt;paramref name="value" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> contiver o <ph id="ph3">&lt;paramref name="value" /&gt;</ph> especificado; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método executa uma pesquisa linear; por isso, esse método é uma operação O(<ph id="ph1">`n`</ph>), em que <ph id="ph2">`n`</ph> é <ph id="ph3">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)">
          <source>This method determines equality by calling <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Este método determina a igualdade chamando <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods on <ph id="ph3">`item`</ph> to determine whether <ph id="ph4">`item`</ph> exists.</source>
          <target state="translated">Começando com o .NET Framework 2.0, esse método usa objetos da coleção <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> métodos em <ph id="ph3">`item`</ph> para determinar se <ph id="ph4">`item`</ph> existe.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods of the <ph id="ph3">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">Em versões anteriores do .NET Framework, essa decisão era tomada usando-se os métodos <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> do parâmetro <ph id="ph3">`item`</ph> nos objetos na coleção.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)">
          <source>The following code example implements the <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> class and uses that implementation to create a collection of <ph id="ph2">&lt;xref:System.Int16&gt;</ph> objects.</source>
          <target state="translated">O seguinte código exemplo implementa o <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> classe e usa essa implementação para criar uma coleção de <ph id="ph2">&lt;xref:System.Int16&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to locate in the <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> a ser localizado no <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)">
          <source>Searches for the specified <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> and returns the zero-based index of the first occurrence within the entire <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</source>
          <target state="translated">Pesquisa o <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> especificado e retorna o índice de base zero da primeira ocorrência dentro de todo o <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)">
          <source>The zero-based index of the first occurrence of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> within the entire <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>, if found; otherwise, -1.</source>
          <target state="translated">O índice baseado em zero da primeira ocorrência de <ph id="ph1">&lt;paramref name="value" /&gt;</ph> em todo o <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>, se encontrado; caso contrário, -1.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método executa uma pesquisa linear; por isso, esse método é uma operação O(<ph id="ph1">`n`</ph>), em que <ph id="ph2">`n`</ph> é <ph id="ph3">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)">
          <source>This method determines equality by calling <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Este método determina a igualdade chamando <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods on <ph id="ph3">`item`</ph> to determine whether <ph id="ph4">`item`</ph> exists.</source>
          <target state="translated">Começando com o .NET Framework 2.0, esse método usa objetos da coleção <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> métodos em <ph id="ph3">`item`</ph> para determinar se <ph id="ph4">`item`</ph> existe.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods of the <ph id="ph3">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">Em versões anteriores do .NET Framework, essa decisão era tomada usando-se os métodos <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> do parâmetro <ph id="ph3">`item`</ph> nos objetos na coleção.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)">
          <source>The following code example implements the <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> class and uses that implementation to create a collection of <ph id="ph2">&lt;xref:System.Int16&gt;</ph> objects.</source>
          <target state="translated">O seguinte código exemplo implementa o <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> classe e usa essa implementação para criar uma coleção de <ph id="ph2">&lt;xref:System.Int16&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>The zero-based index at which <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> should be inserted.</source>
          <target state="translated">O índice baseado em zero no qual o <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept> deve ser inserido.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to insert.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> a ser inserido.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>Inserts an element into the <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> at the specified index.</source>
          <target state="translated">Insere um elemento no <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>, no índice especificado.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph> already equals the capacity, the capacity of the list is doubled by automatically reallocating the internal array before the new element is inserted.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph> já for igual à capacidade, a capacidade da lista é duplicada, automaticamente realocando a matriz interna antes do novo elemento é inserido.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>If <ph id="ph1">`index`</ph> is equal to <ph id="ph2">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph>, <ph id="ph3">`value`</ph> is added to the end of <ph id="ph4">&lt;xref:System.Collections.CollectionBase&gt;</ph>.</source>
          <target state="translated">Se <ph id="ph1">`index`</ph> é igual a <ph id="ph2">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph>, <ph id="ph3">`value`</ph> é adicionada ao final da <ph id="ph4">&lt;xref:System.Collections.CollectionBase&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</source>
          <target state="translated">Em coleções de elementos contíguos, como listas, os elementos que seguem o ponto de inserção descem para acomodar o novo elemento.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">Caso a coleção seja indexada, os índices dos elementos que são movidos também são atualizados.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">Este comportamento não se aplica às coleções em que elementos sejam agrupados conceitualmente em buckets, como uma tabela de hash.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método é uma operação O(<ph id="ph1">`n`</ph>), em que <ph id="ph2">`n`</ph> é <ph id="ph3">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>The following code example implements the <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> class and uses that implementation to create a collection of <ph id="ph2">&lt;xref:System.Int16&gt;</ph> objects.</source>
          <target state="translated">O seguinte código exemplo implementa o <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> classe e usa essa implementação para criar uma coleção de <ph id="ph2">&lt;xref:System.Int16&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> é menor que zero.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="P:System.Collections.CollectionBase.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> é maior que <ph id="ph2">&lt;see cref="P:System.Collections.CollectionBase.Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> is read-only.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> é somente leitura.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> has a fixed size.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> tem um tamanho fixo.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>This method calls <ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" /&gt;</ph>, and <ph id="ph3">&lt;see cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" /&gt;</ph>.</source>
          <target state="translated">Este método chama <ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" /&gt;</ph>, e <ph id="ph3">&lt;see cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> has a fixed size.</source>
          <target state="translated">Obtém um valor que indica se o <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> tem um tamanho fixo.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> has a fixed size; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> tiver um valor fixo; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize">
          <source>A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</source>
          <target state="translated">Uma coleção com um tamanho fixo não permite a adição ou a remoção de elementos após a coleção ser criada, mas permite a modificação de elementos existentes.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize">
          <source>A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</source>
          <target state="translated">Uma coleção com um tamanho fixo é simplesmente uma coleção com um wrapper que impede a adição e a remoção de elementos; por isso, caso as alterações sejam feitas na coleção subjacente, inclusive a adição ou a remoção de elementos, a coleção de tamanho fixo reflete essas alterações.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">A recuperação do valor dessa propriedade é uma operação O(1).</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> is read-only.</source>
          <target state="translated">Obtém um valor que indica se o <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> é somente leitura.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> is read-only; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> for somente leitura; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">Uma coleção que seja somente leitura não permite a adição, a remoção ou a modificação de elementos após a coleção ser criada.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">Uma coleção somente leitura é apenas uma coleção com um wrapper que impede a modificação da coleção; por isso, caso as alterações sejam feitas na coleção subjacente, a coleção somente leitura reflete as alterações.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">A recuperação do valor dessa propriedade é uma operação O(1).</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)">
          <source>The zero-based index of the element to get or set.</source>
          <target state="translated">O índice com base em zero do elemento a ser obtido ou definido.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)">
          <source>Gets or sets the element at the specified index.</source>
          <target state="translated">Obtém ou define o elemento no índice especificado.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)">
          <source>The element at the specified index.</source>
          <target state="translated">O elemento no índice especificado.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)">
          <source>This property provides the ability to access a specific element in the collection by using the following syntax: <ph id="ph1">`myCollection[index]`</ph>.</source>
          <target state="translated">Esta propriedade fornece a capacidade de acessar um elemento específico na coleção usando a seguinte sintaxe: <ph id="ph1">`myCollection[index]`</ph>.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)">
          <source>Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</source>
          <target state="translated">Recuperar o valor dessa propriedade é uma operação de (1); definindo a propriedade também é uma operação de (1).</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)">
          <source>The following code example implements the <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> class and uses that implementation to create a collection of <ph id="ph2">&lt;xref:System.Int16&gt;</ph> objects.</source>
          <target state="translated">O seguinte código exemplo implementa o <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> classe e usa essa implementação para criar uma coleção de <ph id="ph2">&lt;xref:System.Int16&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> é menor que zero.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is equal to or greater than <ph id="ph2">&lt;see cref="P:System.Collections.CollectionBase.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> é igual a ou maior que <ph id="ph2">&lt;see cref="P:System.Collections.CollectionBase.Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)">
          <source>When this property is set, the methods <ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" /&gt;</ph>, and <ph id="ph3">&lt;see cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" /&gt;</ph> are called.</source>
          <target state="translated">Quando essa propriedade é definida, os métodos <ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" /&gt;</ph>, e <ph id="ph3">&lt;see cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" /&gt;</ph> são chamados.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to remove from the <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> a ser removido de <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)">
          <source>Removes the first occurrence of a specific object from the <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</source>
          <target state="translated">Remove a primeira ocorrência de um objeto específico do <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> does not contain the specified object, the <ph id="ph2">&lt;xref:System.Collections.CollectionBase&gt;</ph> remains unchanged.</source>
          <target state="translated">Se o <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> não contém o objeto especificado, o <ph id="ph2">&lt;xref:System.Collections.CollectionBase&gt;</ph> permanece inalterado.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)">
          <source>No exception is thrown.</source>
          <target state="translated">Nenhuma exceção é lançada.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph>.</source>
          <target state="translated">Este método executa uma pesquisa linear; por isso, esse método é uma operação O(<ph id="ph1">`n`</ph>), em que <ph id="ph2">`n`</ph> é <ph id="ph3">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)">
          <source>This method determines equality by calling <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Este método determina a igualdade chamando <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">Em coleções de elementos contíguos, como listas, os elementos que seguem o elemento removido sobem para ocupar o ponto vazio.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">Caso a coleção seja indexada, os índices dos elementos que são movidos também são atualizados.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">Este comportamento não se aplica às coleções em que elementos sejam agrupados conceitualmente em buckets, como uma tabela de hash.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)">
          <source>The following code example implements the <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> class and uses that implementation to create a collection of <ph id="ph2">&lt;xref:System.Int16&gt;</ph> objects.</source>
          <target state="translated">O seguinte código exemplo implementa o <ph id="ph1">&lt;xref:System.Collections.CollectionBase&gt;</ph> classe e usa essa implementação para criar uma coleção de <ph id="ph2">&lt;xref:System.Int16&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter was not found in the <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> object.</source>
          <target state="translated">O parâmetro <ph id="ph1">&lt;paramref name="value" /&gt;</ph> não foi localizado no objeto <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> is read-only.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> é somente leitura.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> has a fixed size.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> tem um tamanho fixo.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)">
          <source>This method calls <ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" /&gt;</ph>, and <ph id="ph3">&lt;see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" /&gt;</ph>.</source>
          <target state="translated">Este método chama <ph id="ph1">&lt;see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" /&gt;</ph>, e <ph id="ph3">&lt;see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>