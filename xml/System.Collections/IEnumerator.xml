<Type Name="IEnumerator" FullName="System.Collections.IEnumerator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bac6f267643fe84822377154ed44a693c40d3f64" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55318361" /></Metadata><TypeSignature Language="C#" Value="public interface IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnumerator" />
  <TypeSignature Language="DocId" Value="T:System.Collections.IEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEnumerator" />
  <TypeSignature Language="F#" Value="type IEnumerator = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("496B0ABF-CDEE-11d3-88E8-00902754C43A")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="38650-101">Dá suporte a uma iteração simples em uma coleção não genérica.</span><span class="sxs-lookup"><span data-stu-id="38650-101">Supports a simple iteration over a non-generic collection.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38650-102"><xref:System.Collections.IEnumerator> é a interface base para todos os enumeradores não genérico.</span><span class="sxs-lookup"><span data-stu-id="38650-102"><xref:System.Collections.IEnumerator> is the base interface for all non-generic enumerators.</span></span> <span data-ttu-id="38650-103">Seu equivalente genérico é o <xref:System.Collections.Generic.IEnumerator%601?displayProperty=nameWithType> interface.</span><span class="sxs-lookup"><span data-stu-id="38650-103">Its generic equivalent is the <xref:System.Collections.Generic.IEnumerator%601?displayProperty=nameWithType> interface.</span></span>  
  
 <span data-ttu-id="38650-104">O `foreach` instrução da linguagem c# (`for each` no Visual Basic) oculta a complexidade dos enumeradores.</span><span class="sxs-lookup"><span data-stu-id="38650-104">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="38650-105">Portanto, o uso `foreach` é recomendado em vez de manipular diretamente o enumerador.</span><span class="sxs-lookup"><span data-stu-id="38650-105">Therefore, using `foreach` is recommended instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="38650-106">Os enumeradores podem ser usados para ler os dados na coleção, mas não podem ser usados para modificar a coleção subjacente.</span><span class="sxs-lookup"><span data-stu-id="38650-106">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="38650-107">O <xref:System.Collections.IEnumerator.Reset%2A> método é fornecido para interoperabilidade COM e não precisa ser totalmente implementado; em vez disso, o implementador pode lançar um <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="38650-107">The <xref:System.Collections.IEnumerator.Reset%2A> method is provided for COM interoperability and does not need to be fully implemented; instead, the implementer can throw a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="38650-108">Inicialmente, o enumerador é posicionado antes do primeiro elemento da coleção.</span><span class="sxs-lookup"><span data-stu-id="38650-108">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="38650-109">Você deve chamar o <xref:System.Collections.IEnumerator.MoveNext%2A> método para avançar o enumerador para o primeiro elemento da coleção antes de ler o valor de <xref:System.Collections.IEnumerator.Current%2A>; caso contrário, <xref:System.Collections.IEnumerator.Current%2A> é indefinido.</span><span class="sxs-lookup"><span data-stu-id="38650-109">You must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>; otherwise, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span>  
  
 <span data-ttu-id="38650-110"><xref:System.Collections.IEnumerator.Current%2A> retorna o mesmo objeto até <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> ser chamado.</span><span class="sxs-lookup"><span data-stu-id="38650-110"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="38650-111"><xref:System.Collections.IEnumerator.MoveNext%2A> define <xref:System.Collections.IEnumerator.Current%2A> como o próximo elemento.</span><span class="sxs-lookup"><span data-stu-id="38650-111"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="38650-112">Caso <xref:System.Collections.IEnumerator.MoveNext%2A> passe o final da coleção, o enumerador é posicionado após o último elemento na coleção e <xref:System.Collections.IEnumerator.MoveNext%2A> retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="38650-112">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="38650-113">Quando o enumerador está nessa posição, as chamadas subsequentes para <xref:System.Collections.IEnumerator.MoveNext%2A> também retornam `false`.</span><span class="sxs-lookup"><span data-stu-id="38650-113">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="38650-114">Caso a última chamada para <xref:System.Collections.IEnumerator.MoveNext%2A> tenha retornado `false`, <xref:System.Collections.IEnumerator.Current%2A> está indefinido.</span><span class="sxs-lookup"><span data-stu-id="38650-114">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span>  
  
 <span data-ttu-id="38650-115">Para definir <xref:System.Collections.IEnumerator.Current%2A> para o primeiro elemento da coleção novamente, você pode chamar <xref:System.Collections.IEnumerator.Reset%2A>, se ele for implementado, seguido por <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="38650-115">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A>, if it's implemented, followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span> <span data-ttu-id="38650-116">Se <xref:System.Collections.IEnumerator.Reset%2A> não é implementada, você deve criar uma nova instância de enumerador para retornar para o primeiro elemento da coleção.</span><span class="sxs-lookup"><span data-stu-id="38650-116">If <xref:System.Collections.IEnumerator.Reset%2A> is not implemented, you must create a new enumerator instance to return to the first element of the collection.</span></span>  
  
 <span data-ttu-id="38650-117">Se forem feitas alterações na coleção, como adicionar, modificar ou excluir elementos, o comportamento do enumerador é indefinido.</span><span class="sxs-lookup"><span data-stu-id="38650-117">If changes are made to the collection, such as adding, modifying, or deleting elements, the behavior of the enumerator is undefined.</span></span>  
  
 <span data-ttu-id="38650-118">O enumerador não tem acesso exclusivo à coleção; por isso, a enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="38650-118">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="38650-119">Mesmo quando uma coleção está sincronizada, outros threads ainda podem modificar a coleção, o que faz o enumerador lançar uma exceção.</span><span class="sxs-lookup"><span data-stu-id="38650-119">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="38650-120">Para garantir thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração ou verificar as exceções resultantes das alterações feitas por outros threads.</span><span class="sxs-lookup"><span data-stu-id="38650-120">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38650-121">O exemplo de código a seguir demonstra a implementação do <xref:System.Collections.IEnumerable> e <xref:System.Collections.IEnumerator> interfaces para uma coleção personalizada.</span><span class="sxs-lookup"><span data-stu-id="38650-121">The following code example demonstrates the implementation of the <xref:System.Collections.IEnumerable> and <xref:System.Collections.IEnumerator> interfaces for a custom collection.</span></span> <span data-ttu-id="38650-122">Neste exemplo, os membros dessas interfaces não são chamados explicitamente, mas eles são implementados para dar suporte o uso de `foreach` (`for each` no Visual Basic) para iterar pela coleção.</span><span class="sxs-lookup"><span data-stu-id="38650-122">In this example, members of these interfaces are not explicitly called, but they are implemented to support the use of `foreach` (`for each` in Visual Basic) to iterate through the collection.</span></span>  
  
 [!code-csharp[System.Collections_EnumeratorInterfaces#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections_EnumeratorInterfaces/cs/ienumerator.cs#1)]
 [!code-vb[System.Collections_EnumeratorInterfaces#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections_EnumeratorInterfaces/vb/ienumerator.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.IEnumerable" />
    <altmember cref="T:System.Collections.ICollection" />
    <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public object Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Current" />
      <MemberSignature Language="DocId" Value="P:System.Collections.IEnumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : obj" Usage="System.Collections.IEnumerator.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38650-123">Obtém o elemento na coleção na posição atual do enumerador.</span><span class="sxs-lookup"><span data-stu-id="38650-123">Gets the element in the collection at the current position of the enumerator.</span></span></summary>
        <value><span data-ttu-id="38650-124">O elemento na coleção na posição atual do enumerador.</span><span class="sxs-lookup"><span data-stu-id="38650-124">The element in the collection at the current position of the enumerator.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38650-125"><xref:System.Collections.IEnumerator.Current%2A> o não está definida em qualquer uma das seguintes condições:</span><span class="sxs-lookup"><span data-stu-id="38650-125"><xref:System.Collections.IEnumerator.Current%2A> is undefined under any of the following conditions:</span></span>  
  
-   <span data-ttu-id="38650-126">O enumerador está posicionado antes do primeiro elemento na coleção, imediatamente depois que o enumerador é criado.</span><span class="sxs-lookup"><span data-stu-id="38650-126">The enumerator is positioned before the first element in the collection, immediately after the enumerator is created.</span></span>   <span data-ttu-id="38650-127"><xref:System.Collections.IEnumerator.MoveNext%2A> deve ser chamado para avançar o enumerador para o primeiro elemento da coleção antes de ler o valor de <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="38650-127"><xref:System.Collections.IEnumerator.MoveNext%2A> must be called to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
-   <span data-ttu-id="38650-128">A última chamada para <xref:System.Collections.IEnumerator.MoveNext%2A> retornou `false`, que indica o final da coleção.</span><span class="sxs-lookup"><span data-stu-id="38650-128">The last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, which indicates the end of the collection.</span></span>  
  
-   <span data-ttu-id="38650-129">O enumerador será invalidado devido a alterações feitas na coleção, como adicionar, modificar ou excluir elementos.</span><span class="sxs-lookup"><span data-stu-id="38650-129">The enumerator is invalidated due to changes made in the collection, such as adding, modifying, or deleting elements.</span></span>  
  
 <span data-ttu-id="38650-130"><xref:System.Collections.IEnumerator.Current%2A> Retorna o mesmo objeto até <xref:System.Collections.IEnumerator.MoveNext%2A> é chamado.</span><span class="sxs-lookup"><span data-stu-id="38650-130"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="38650-131"><xref:System.Collections.IEnumerator.MoveNext%2A> define <xref:System.Collections.IEnumerator.Current%2A> como o próximo elemento.</span><span class="sxs-lookup"><span data-stu-id="38650-131"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38650-132">O exemplo de código a seguir demonstra a implementação do <xref:System.Collections.IEnumerator> interfaces para uma coleção personalizada.</span><span class="sxs-lookup"><span data-stu-id="38650-132">The following code example demonstrates the implementation of the <xref:System.Collections.IEnumerator> interfaces for a custom collection.</span></span> <span data-ttu-id="38650-133">Neste exemplo, <xref:System.Collections.IEnumerator.Current%2A> não for chamado explicitamente, mas é implementado para dar suporte o uso de `foreach` (`for each` no Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="38650-133">In this example, <xref:System.Collections.IEnumerator.Current%2A> is not explicitly called, but it is implemented to support the use of `foreach` (`for each` in Visual Basic).</span></span> <span data-ttu-id="38650-134">Este exemplo de código é parte de um exemplo maior para o <xref:System.Collections.IEnumerator> interface.</span><span class="sxs-lookup"><span data-stu-id="38650-134">This code example is part of a larger example for the <xref:System.Collections.IEnumerator> interface.</span></span>  
  
 [!code-csharp[System.Collections_EnumeratorInterfaces#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections_EnumeratorInterfaces/cs/ienumerator.cs#2)]
 [!code-vb[System.Collections_EnumeratorInterfaces#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections_EnumeratorInterfaces/vb/ienumerator.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
        <altmember cref="M:System.Collections.IEnumerator.Reset" />
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IEnumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MoveNext();" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool" Usage="iEnumerator.MoveNext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="38650-135">Avança o enumerador para o próximo elemento da coleção.</span><span class="sxs-lookup"><span data-stu-id="38650-135">Advances the enumerator to the next element of the collection.</span></span></summary>
        <returns><span data-ttu-id="38650-136"><see langword="true" /> se o enumerador foi avançado com êxito para o próximo elemento; <see langword="false" /> se o enumerador passou o final da coleção.</span><span class="sxs-lookup"><span data-stu-id="38650-136"><see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38650-137">Após a criação de um enumerador ou depois do <xref:System.Collections.IEnumerator.Reset%2A> método é chamado, um enumerador é posicionado antes do primeiro elemento da coleção e a primeira chamada para o <xref:System.Collections.IEnumerator.MoveNext%2A> método Move o enumerador sobre o primeiro elemento da coleção.</span><span class="sxs-lookup"><span data-stu-id="38650-137">After an enumerator is created or after the <xref:System.Collections.IEnumerator.Reset%2A> method is called, an enumerator is positioned before the first element of the collection, and the first call to the <xref:System.Collections.IEnumerator.MoveNext%2A> method moves the enumerator over the first element of the collection.</span></span>  
  
 <span data-ttu-id="38650-138">Caso <xref:System.Collections.IEnumerator.MoveNext%2A> passe o final da coleção, o enumerador é posicionado após o último elemento na coleção e <xref:System.Collections.IEnumerator.MoveNext%2A> retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="38650-138">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="38650-139">Quando o enumerador está nessa posição, chamadas subsequentes para <xref:System.Collections.IEnumerator.MoveNext%2A> também retornam `false` até que <xref:System.Collections.IEnumerator.Reset%2A> é chamado.</span><span class="sxs-lookup"><span data-stu-id="38650-139">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false` until <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span>  
  
 <span data-ttu-id="38650-140">Se forem feitas alterações à coleção, como adicionar, modificar ou excluir elementos, o comportamento de <xref:System.Collections.IEnumerator.MoveNext%2A> é indefinido.</span><span class="sxs-lookup"><span data-stu-id="38650-140">If changes are made to the collection, such as adding, modifying, or deleting elements, the behavior of <xref:System.Collections.IEnumerator.MoveNext%2A> is undefined.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38650-141">O exemplo de código a seguir demonstra a implementação do <xref:System.Collections.IEnumerator> interfaces para uma coleção personalizada.</span><span class="sxs-lookup"><span data-stu-id="38650-141">The following code example demonstrates the implementation of the <xref:System.Collections.IEnumerator> interfaces for a custom collection.</span></span> <span data-ttu-id="38650-142">Neste exemplo, <xref:System.Collections.IEnumerator.MoveNext%2A> não for chamado explicitamente, mas é implementado para dar suporte o uso de `foreach` (`for each` no Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="38650-142">In this example, <xref:System.Collections.IEnumerator.MoveNext%2A> is not explicitly called, but it is implemented to support the use of `foreach` (`for each` in Visual Basic).</span></span> <span data-ttu-id="38650-143">Este exemplo de código é parte de um exemplo maior para o <xref:System.Collections.IEnumerator> interface.</span><span class="sxs-lookup"><span data-stu-id="38650-143">This code example is part of a larger example for the <xref:System.Collections.IEnumerator> interface.</span></span>  
  
 [!code-csharp[System.Collections_EnumeratorInterfaces#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections_EnumeratorInterfaces/cs/ienumerator.cs#2)]
 [!code-vb[System.Collections_EnumeratorInterfaces#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections_EnumeratorInterfaces/vb/ienumerator.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.IEnumerator.Current" />
        <altmember cref="M:System.Collections.IEnumerator.Reset" />
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="38650-144">A coleção foi modificada depois da criação do enumerador.</span><span class="sxs-lookup"><span data-stu-id="38650-144">The collection was modified after the enumerator was created.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IEnumerator.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit" Usage="iEnumerator.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="38650-145">Define o enumerador com sua posição inicial, que é antes do primeiro elemento da coleção.</span><span class="sxs-lookup"><span data-stu-id="38650-145">Sets the enumerator to its initial position, which is before the first element in the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="38650-146">Se forem feitas alterações à coleção, como adicionar, modificar ou excluir elementos, o comportamento de <xref:System.Collections.IEnumerator.Reset%2A> é indefinido.</span><span class="sxs-lookup"><span data-stu-id="38650-146">If changes are made to the collection, such as adding, modifying, or deleting elements, the behavior of <xref:System.Collections.IEnumerator.Reset%2A> is undefined.</span></span>  
  
 <span data-ttu-id="38650-147">O <xref:System.Collections.IEnumerator.Reset%2A> método é fornecido para interoperabilidade COM.</span><span class="sxs-lookup"><span data-stu-id="38650-147">The <xref:System.Collections.IEnumerator.Reset%2A> method is provided for COM interoperability.</span></span> <span data-ttu-id="38650-148">Ele não precisa necessariamente ser implementadas; em vez disso, o implementador pode simplesmente lançar um <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="38650-148">It does not necessarily need to be implemented; instead, the implementer can simply throw a <xref:System.NotSupportedException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38650-149">O exemplo de código a seguir demonstra a implementação do <xref:System.Collections.IEnumerator> interfaces para uma coleção personalizada.</span><span class="sxs-lookup"><span data-stu-id="38650-149">The following code example demonstrates the implementation of the <xref:System.Collections.IEnumerator> interfaces for a custom collection.</span></span> <span data-ttu-id="38650-150">Neste exemplo, <xref:System.Collections.IEnumerator.Reset%2A> não for chamado explicitamente, mas é implementado para dar suporte o uso de `foreach` (`for each` no Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="38650-150">In this example, <xref:System.Collections.IEnumerator.Reset%2A> is not explicitly called, but it is implemented to support the use of `foreach` (`for each` in Visual Basic).</span></span> <span data-ttu-id="38650-151">Este exemplo de código é parte de um exemplo maior para o <xref:System.Collections.IEnumerator> interface.</span><span class="sxs-lookup"><span data-stu-id="38650-151">This code example is part of a larger example for the <xref:System.Collections.IEnumerator> interface.</span></span>  
  
 [!code-csharp[System.Collections_EnumeratorInterfaces#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections_EnumeratorInterfaces/cs/ienumerator.cs#2)]
 [!code-vb[System.Collections_EnumeratorInterfaces#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections_EnumeratorInterfaces/vb/ienumerator.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="38650-152">Todas as chamadas para <see cref="M:System.Collections.IEnumerator.Reset" /> deve resultar no mesmo estado para o enumerador.</span><span class="sxs-lookup"><span data-stu-id="38650-152">All calls to <see cref="M:System.Collections.IEnumerator.Reset" /> must result in the same state for the enumerator.</span></span> <span data-ttu-id="38650-153">A implementação preferida é mover o enumerador para o início da coleção, antes do primeiro elemento.</span><span class="sxs-lookup"><span data-stu-id="38650-153">The preferred implementation is to move the enumerator to the beginning of the collection, before the first element.</span></span> <span data-ttu-id="38650-154">Isso invalida o enumerador se a coleção foi modificada desde que o enumerador foi criado, o que é consistente com <see cref="M:System.Collections.IEnumerator.MoveNext" /> e <see cref="P:System.Collections.IEnumerator.Current" />.</span><span class="sxs-lookup"><span data-stu-id="38650-154">This invalidates the enumerator if the collection has been modified since the enumerator was created, which is consistent with <see cref="M:System.Collections.IEnumerator.MoveNext" /> and <see cref="P:System.Collections.IEnumerator.Current" />.</span></span></para></block>
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
        <altmember cref="P:System.Collections.IEnumerator.Current" />
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="38650-155">A coleção foi modificada depois da criação do enumerador.</span><span class="sxs-lookup"><span data-stu-id="38650-155">The collection was modified after the enumerator was created.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>