<Type Name="Queue" FullName="System.Collections.Queue">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="35a21c57df8f37e412b63620230c911fe166fb4d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Queue : ICloneable, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Queue extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Queue" />
  <TypeSignature Language="VB.NET" Value="Public Class Queue&#xA;Implements ICloneable, ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class Queue : ICloneable, System::Collections::ICollection" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.NonGeneric</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Queue/QueueDebugView))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="b15cc-101">Representa uma coleção primeiro a entrar, primeiro a sair de objetos.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b15cc-101">Represents a first-in, first-out collection of objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b15cc-102">Essa classe implementa uma fila como uma matriz circular.</span><span class="sxs-lookup"><span data-stu-id="b15cc-102">This class implements a queue as a circular array.</span></span> <span data-ttu-id="b15cc-103">Objetos armazenados em um <xref:System.Collections.Queue> são inseridas em uma extremidade e removido da outra.</span><span class="sxs-lookup"><span data-stu-id="b15cc-103">Objects stored in a <xref:System.Collections.Queue> are inserted at one end and removed from the other.</span></span>  
  
 <span data-ttu-id="b15cc-104">Pilhas e filas são úteis quando você precisa de armazenamento temporário para informações. ou seja, quando você quiser descartar um elemento após recuperar seu valor.</span><span class="sxs-lookup"><span data-stu-id="b15cc-104">Queues and stacks are useful when you need temporary storage for information; that is, when you might want to discard an element after retrieving its value.</span></span> <span data-ttu-id="b15cc-105">Use <xref:System.Collections.Queue> se você precisar acessar as informações na mesma ordem em que ela está armazenada na coleção.</span><span class="sxs-lookup"><span data-stu-id="b15cc-105">Use <xref:System.Collections.Queue> if you need to access the information in the same order that it is stored in the collection.</span></span> <span data-ttu-id="b15cc-106">Use <xref:System.Collections.Stack> se você precisar acessar as informações na ordem inversa.</span><span class="sxs-lookup"><span data-stu-id="b15cc-106">Use <xref:System.Collections.Stack> if you need to access the information in reverse order.</span></span> <span data-ttu-id="b15cc-107">Use <xref:System.Collections.Concurrent.ConcurrentQueue%601> ou <xref:System.Collections.Concurrent.ConcurrentStack%601> se você precisar acessar a coleção de vários threads simultaneamente.</span><span class="sxs-lookup"><span data-stu-id="b15cc-107">Use <xref:System.Collections.Concurrent.ConcurrentQueue%601> or <xref:System.Collections.Concurrent.ConcurrentStack%601> if you need to access the collection from multiple threads concurrently.</span></span>  
  
 <span data-ttu-id="b15cc-108">Três operações principais podem ser executadas em um <xref:System.Collections.Queue> e seus elementos:</span><span class="sxs-lookup"><span data-stu-id="b15cc-108">Three main operations can be performed on a <xref:System.Collections.Queue> and its elements:</span></span>  
  
-   <span data-ttu-id="b15cc-109"><xref:System.Collections.Queue.Enqueue%2A> Adiciona um elemento ao final do <xref:System.Collections.Queue>.</span><span class="sxs-lookup"><span data-stu-id="b15cc-109"><xref:System.Collections.Queue.Enqueue%2A> adds an element to the end of the <xref:System.Collections.Queue>.</span></span>  
  
-   <span data-ttu-id="b15cc-110"><xref:System.Collections.Queue.Dequeue%2A> Remove o elemento mais antigo do início do <xref:System.Collections.Queue>.</span><span class="sxs-lookup"><span data-stu-id="b15cc-110"><xref:System.Collections.Queue.Dequeue%2A> removes the oldest element from the start of the <xref:System.Collections.Queue>.</span></span>  
  
-   <span data-ttu-id="b15cc-111"><xref:System.Collections.Queue.Peek%2A> Retorna o elemento mais antigo que está no início do <xref:System.Collections.Queue> mas não removê-lo a <xref:System.Collections.Queue>.</span><span class="sxs-lookup"><span data-stu-id="b15cc-111"><xref:System.Collections.Queue.Peek%2A> returns the oldest element that is at the start of the <xref:System.Collections.Queue> but does not remove it from the <xref:System.Collections.Queue>.</span></span>  
  
 <span data-ttu-id="b15cc-112">A capacidade de um <xref:System.Collections.Queue> é o número de elementos de <xref:System.Collections.Queue> pode conter.</span><span class="sxs-lookup"><span data-stu-id="b15cc-112">The capacity of a <xref:System.Collections.Queue> is the number of elements the <xref:System.Collections.Queue> can hold.</span></span> <span data-ttu-id="b15cc-113">Como os elementos são adicionados a um <xref:System.Collections.Queue>, a capacidade é aumentada automaticamente conforme necessário por meio de realocação.</span><span class="sxs-lookup"><span data-stu-id="b15cc-113">As elements are added to a <xref:System.Collections.Queue>, the capacity is automatically increased as required through reallocation.</span></span>  <span data-ttu-id="b15cc-114">A capacidade pode ser diminuída chamando <xref:System.Collections.Queue.TrimToSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="b15cc-114">The capacity can be decreased by calling <xref:System.Collections.Queue.TrimToSize%2A>.</span></span>  
  
 <span data-ttu-id="b15cc-115">O fator de crescimento é o número pelo qual a capacidade atual é multiplicada quando for necessária uma maior capacidade.</span><span class="sxs-lookup"><span data-stu-id="b15cc-115">The growth factor is the number by which the current capacity is multiplied when a greater capacity is required.</span></span>  <span data-ttu-id="b15cc-116">O fator de crescimento é determinado quando o <xref:System.Collections.Queue> é construído.</span><span class="sxs-lookup"><span data-stu-id="b15cc-116">The growth factor is determined when the <xref:System.Collections.Queue> is constructed.</span></span> <span data-ttu-id="b15cc-117">O fator de crescimento padrão é 2.0.</span><span class="sxs-lookup"><span data-stu-id="b15cc-117">The default growth factor is 2.0.</span></span> <span data-ttu-id="b15cc-118">A capacidade do <xref:System.Collections.Queue> sempre será aumentado em um mínimo de quatro, independentemente do fator de crescimento.</span><span class="sxs-lookup"><span data-stu-id="b15cc-118">The capacity of the <xref:System.Collections.Queue> will always increase by at least a minimum of four, regardless of the growth factor.</span></span> <span data-ttu-id="b15cc-119">Por exemplo, um <xref:System.Collections.Queue> com um fator de crescimento de 1.0 sempre aumentará de capacidade por quatro quando for necessária uma maior capacidade.</span><span class="sxs-lookup"><span data-stu-id="b15cc-119">For example, a <xref:System.Collections.Queue> with a growth factor of 1.0 will always increase in capacity by four when a greater capacity is required.</span></span>  
  
 <span data-ttu-id="b15cc-120"><xref:System.Collections.Queue> aceita `null` como um valor válido e permite elementos duplicados.</span><span class="sxs-lookup"><span data-stu-id="b15cc-120"><xref:System.Collections.Queue> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="b15cc-121">Para obter a versão genérica dessa coleção, consulte <xref:System.Collections.Generic.Queue%601?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="b15cc-121">For the generic version of this collection, see <xref:System.Collections.Generic.Queue%601?displayProperty=nameWithType></span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b15cc-122">O exemplo a seguir mostra como criar e adicionar valores para um <xref:System.Collections.Queue> e como imprimir seus valores.</span><span class="sxs-lookup"><span data-stu-id="b15cc-122">The following example shows how to create and add values to a <xref:System.Collections.Queue> and how to print out its values.</span></span>  
  
 [!code-cpp[Classic Queue Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Queue Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Queue Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Queue Example/CS/source.cs#1)]
 [!code-vb[Classic Queue Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Queue Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="b15cc-123">Os membros estáticos públicos (<see langword="Shared" /> no Visual Basic) desse são thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b15cc-123">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="b15cc-124">Não há garantia de que qualquer membro de instância seja thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b15cc-124">Any instance members are not guaranteed to be thread safe.</span>
      </span>
      <span data-ttu-id="b15cc-125">Para garantir a segurança de thread do <see cref="T:System.Collections.Queue" />, todas as operações devem ser feitas por meio do wrapper retornado pelo <see cref="M:System.Collections.Queue.Synchronized(System.Collections.Queue)" /> método.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b15cc-125">To guarantee the thread safety of the <see cref="T:System.Collections.Queue" />, all operations must be done through the wrapper returned by the <see cref="M:System.Collections.Queue.Synchronized(System.Collections.Queue)" /> method.</span>
      </span>
      <span data-ttu-id="b15cc-126">A enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b15cc-126">Enumerating through a collection is intrinsically not a thread-safe procedure.</span>
      </span>
      <span data-ttu-id="b15cc-127">Mesmo quando uma coleção está sincronizada, outros threads ainda podem modificar a coleção, o que faz o enumerador lançar uma exceção.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b15cc-127">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span>
      </span>
      <span data-ttu-id="b15cc-128">Para garantir thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração ou verificar as exceções resultantes das alterações feitas por outros threads.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b15cc-128">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Collections.Generic.Queue`1" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b15cc-129">Inicializa uma nova instância da classe <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-129">Initializes a new instance of the <see cref="T:System.Collections.Queue" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Queue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Queue.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Queue();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b15cc-130">Inicializa uma nova instância da classe <see cref="T:System.Collections.Queue" /> que está vazia, tem a capacidade inicial padrão e usa o fator de crescimento padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-130">Initializes a new instance of the <see cref="T:System.Collections.Queue" /> class that is empty, has the default initial capacity, and uses the default growth factor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b15cc-131">A capacidade de um <xref:System.Collections.Queue> é o número de elementos de <xref:System.Collections.Queue> pode conter.</span><span class="sxs-lookup"><span data-stu-id="b15cc-131">The capacity of a <xref:System.Collections.Queue> is the number of elements the <xref:System.Collections.Queue> can hold.</span></span>  <span data-ttu-id="b15cc-132">Como os elementos são adicionados a um <xref:System.Collections.Queue>, a capacidade é aumentada automaticamente conforme necessário por meio de realocação.</span><span class="sxs-lookup"><span data-stu-id="b15cc-132">As elements are added to a <xref:System.Collections.Queue>, the capacity is automatically increased as required through reallocation.</span></span>  <span data-ttu-id="b15cc-133">A capacidade pode ser diminuída chamando <xref:System.Collections.Queue.TrimToSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="b15cc-133">The capacity can be decreased by calling <xref:System.Collections.Queue.TrimToSize%2A>.</span></span>  
  
 <span data-ttu-id="b15cc-134">O fator de crescimento é o número pelo qual a capacidade atual é multiplicada quando for necessária uma maior capacidade.</span><span class="sxs-lookup"><span data-stu-id="b15cc-134">The growth factor is the number by which the current capacity is multiplied when a greater capacity is required.</span></span>  <span data-ttu-id="b15cc-135">O fator de crescimento é determinado quando o <xref:System.Collections.Queue> é construído.</span><span class="sxs-lookup"><span data-stu-id="b15cc-135">The growth factor is determined when the <xref:System.Collections.Queue> is constructed.</span></span>  
  
 <span data-ttu-id="b15cc-136">Este construtor é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="b15cc-136">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Queue (System.Collections.ICollection col);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.ICollection col) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Queue.#ctor(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (col As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Queue(System::Collections::ICollection ^ col);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="col" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="col">
          <span data-ttu-id="b15cc-137">A <see cref="T:System.Collections.ICollection" /> da qual copiar elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-137">The <see cref="T:System.Collections.ICollection" /> to copy elements from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b15cc-138">Inicializa uma nova instância da classe <see cref="T:System.Collections.Queue" /> que contém os elementos copiados da coleção especificada, tem a mesma capacidade inicial que o número de elementos copiados e usa o fator de crescimento padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-138">Initializes a new instance of the <see cref="T:System.Collections.Queue" /> class that contains elements copied from the specified collection, has the same initial capacity as the number of elements copied, and uses the default growth factor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b15cc-139">A capacidade de um <xref:System.Collections.Queue> é o número de elementos de <xref:System.Collections.Queue> pode conter.</span><span class="sxs-lookup"><span data-stu-id="b15cc-139">The capacity of a <xref:System.Collections.Queue> is the number of elements the <xref:System.Collections.Queue> can hold.</span></span>  <span data-ttu-id="b15cc-140">Como os elementos são adicionados a um <xref:System.Collections.Queue>, a capacidade é aumentada automaticamente conforme necessário por meio de realocação.</span><span class="sxs-lookup"><span data-stu-id="b15cc-140">As elements are added to a <xref:System.Collections.Queue>, the capacity is automatically increased as required through reallocation.</span></span>  <span data-ttu-id="b15cc-141">A capacidade pode ser diminuída chamando <xref:System.Collections.Queue.TrimToSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="b15cc-141">The capacity can be decreased by calling <xref:System.Collections.Queue.TrimToSize%2A>.</span></span>  
  
 <span data-ttu-id="b15cc-142">O fator de crescimento é o número pelo qual a capacidade atual é multiplicada quando for necessária uma maior capacidade.</span><span class="sxs-lookup"><span data-stu-id="b15cc-142">The growth factor is the number by which the current capacity is multiplied when a greater capacity is required.</span></span>  <span data-ttu-id="b15cc-143">O fator de crescimento é determinado quando o <xref:System.Collections.Queue> é construído.</span><span class="sxs-lookup"><span data-stu-id="b15cc-143">The growth factor is determined when the <xref:System.Collections.Queue> is constructed.</span></span>  
  
 <span data-ttu-id="b15cc-144">Os elementos são copiados para o <xref:System.Collections.Queue> na mesma ordem em que são lidas pelo <xref:System.Collections.IEnumerator> do <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="b15cc-144">The elements are copied onto the <xref:System.Collections.Queue> in the same order they are read by the <xref:System.Collections.IEnumerator> of the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="b15cc-145">Este construtor é um O (`n`) operação, onde `n` é o número de elementos em `col`.</span><span class="sxs-lookup"><span data-stu-id="b15cc-145">This constructor is an O(`n`) operation, where `n` is the number of elements in `col`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b15cc-146">
            <paramref name="col" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-146">
              <paramref name="col" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Queue (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Queue.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Queue(int capacity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity">
          <span data-ttu-id="b15cc-147">O número inicial de elementos que o <see cref="T:System.Collections.Queue" /> pode conter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-147">The initial number of elements that the <see cref="T:System.Collections.Queue" /> can contain.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b15cc-148">Inicializa uma nova instância da classe <see cref="T:System.Collections.Queue" /> que está vazia, tem a capacidade inicial especificada e usa o fator de crescimento padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-148">Initializes a new instance of the <see cref="T:System.Collections.Queue" /> class that is empty, has the specified initial capacity, and uses the default growth factor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b15cc-149">A capacidade de um <xref:System.Collections.Queue> é o número de elementos de <xref:System.Collections.Queue> pode conter.</span><span class="sxs-lookup"><span data-stu-id="b15cc-149">The capacity of a <xref:System.Collections.Queue> is the number of elements the <xref:System.Collections.Queue> can hold.</span></span>  <span data-ttu-id="b15cc-150">Como os elementos são adicionados a um <xref:System.Collections.Queue>, a capacidade é aumentada automaticamente conforme necessário por meio de realocação.</span><span class="sxs-lookup"><span data-stu-id="b15cc-150">As elements are added to a <xref:System.Collections.Queue>, the capacity is automatically increased as required through reallocation.</span></span>  <span data-ttu-id="b15cc-151">A capacidade pode ser diminuída chamando <xref:System.Collections.Queue.TrimToSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="b15cc-151">The capacity can be decreased by calling <xref:System.Collections.Queue.TrimToSize%2A>.</span></span>  
  
 <span data-ttu-id="b15cc-152">O fator de crescimento é o número pelo qual a capacidade atual é multiplicada quando for necessária uma maior capacidade.</span><span class="sxs-lookup"><span data-stu-id="b15cc-152">The growth factor is the number by which the current capacity is multiplied when a greater capacity is required.</span></span>  <span data-ttu-id="b15cc-153">O fator de crescimento é determinado quando o <xref:System.Collections.Queue> é construído.</span><span class="sxs-lookup"><span data-stu-id="b15cc-153">The growth factor is determined when the <xref:System.Collections.Queue> is constructed.</span></span>  
  
 <span data-ttu-id="b15cc-154">Se o tamanho da coleção pode ser estimado, especificando a capacidade inicial elimina a necessidade de executar um número de operações de redimensionamento durante a adição de elementos para o <xref:System.Collections.Queue>.</span><span class="sxs-lookup"><span data-stu-id="b15cc-154">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Queue>.</span></span>  
  
 <span data-ttu-id="b15cc-155">Este construtor é um O (`n`) operação, onde `n` é `capacity`.</span><span class="sxs-lookup"><span data-stu-id="b15cc-155">This constructor is an O(`n`) operation, where `n` is `capacity`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b15cc-156">
            <paramref name="capacity" /> é menor que zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-156">
              <paramref name="capacity" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Queue (int capacity, float growFactor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity, float32 growFactor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Queue.#ctor(System.Int32,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer, growFactor As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Queue(int capacity, float growFactor);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
        <Parameter Name="growFactor" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="capacity">
          <span data-ttu-id="b15cc-157">O número inicial de elementos que o <see cref="T:System.Collections.Queue" /> pode conter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-157">The initial number of elements that the <see cref="T:System.Collections.Queue" /> can contain.</span>
          </span>
        </param>
        <param name="growFactor">
          <span data-ttu-id="b15cc-158">O fator pelo qual a capacidade da <see cref="T:System.Collections.Queue" /> é expandida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-158">The factor by which the capacity of the <see cref="T:System.Collections.Queue" /> is expanded.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b15cc-159">Inicializa uma nova instância da classe <see cref="T:System.Collections.Queue" /> que está vazia, tem a capacidade inicial especificada e usa o fator de crescimento especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-159">Initializes a new instance of the <see cref="T:System.Collections.Queue" /> class that is empty, has the specified initial capacity, and uses the specified growth factor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b15cc-160">A capacidade de um <xref:System.Collections.Queue> é o número de elementos de <xref:System.Collections.Queue> pode conter.</span><span class="sxs-lookup"><span data-stu-id="b15cc-160">The capacity of a <xref:System.Collections.Queue> is the number of elements the <xref:System.Collections.Queue> can hold.</span></span>  <span data-ttu-id="b15cc-161">Como os elementos são adicionados a um <xref:System.Collections.Queue>, a capacidade é aumentada automaticamente conforme necessário por meio de realocação.</span><span class="sxs-lookup"><span data-stu-id="b15cc-161">As elements are added to a <xref:System.Collections.Queue>, the capacity is automatically increased as required through reallocation.</span></span>  <span data-ttu-id="b15cc-162">A capacidade pode ser diminuída chamando <xref:System.Collections.Queue.TrimToSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="b15cc-162">The capacity can be decreased by calling <xref:System.Collections.Queue.TrimToSize%2A>.</span></span>  
  
 <span data-ttu-id="b15cc-163">O fator de crescimento é o número pelo qual a capacidade atual é multiplicada quando for necessária uma maior capacidade.</span><span class="sxs-lookup"><span data-stu-id="b15cc-163">The growth factor is the number by which the current capacity is multiplied when a greater capacity is required.</span></span>  <span data-ttu-id="b15cc-164">O fator de crescimento é determinado quando o <xref:System.Collections.Queue> é construído.</span><span class="sxs-lookup"><span data-stu-id="b15cc-164">The growth factor is determined when the <xref:System.Collections.Queue> is constructed.</span></span> <span data-ttu-id="b15cc-165">A capacidade do <xref:System.Collections.Queue> sempre será aumentado em um valor mínimo, independentemente do fator de crescimento; um fator de crescimento de 1.0 não impedirá o <xref:System.Collections.Queue> de aumentarem de tamanho.</span><span class="sxs-lookup"><span data-stu-id="b15cc-165">The capacity of the <xref:System.Collections.Queue> will always increase by a minimum value, regardless of the growth factor; a growth factor of 1.0 will not prevent the <xref:System.Collections.Queue> from increasing in size.</span></span>  
  
 <span data-ttu-id="b15cc-166">Se o tamanho da coleção pode ser estimado, especificando a capacidade inicial elimina a necessidade de executar um número de operações de redimensionamento durante a adição de elementos para o <xref:System.Collections.Queue>.</span><span class="sxs-lookup"><span data-stu-id="b15cc-166">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Queue>.</span></span>  
  
 <span data-ttu-id="b15cc-167">Este construtor é um O (`n`) operação, onde `n` é `capacity`.</span><span class="sxs-lookup"><span data-stu-id="b15cc-167">This constructor is an O(`n`) operation, where `n` is `capacity`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b15cc-168">
            <paramref name="capacity" /> é menor que zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-168">
              <paramref name="capacity" /> is less than zero.</span>
          </span>
          <span data-ttu-id="b15cc-169">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-169">-or-</span>
          </span>
          <span data-ttu-id="b15cc-170">
            <paramref name="growFactor" /> é menor que 1,0 ou maior que 10,0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-170">
              <paramref name="growFactor" /> is less than 1.0 or greater than 10.0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Queue.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b15cc-171">Remove todos os objetos da <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-171">Removes all objects from the <see cref="T:System.Collections.Queue" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b15cc-172"><xref:System.Collections.Queue.Count%2A> é definido como zero, e referências a outros objetos de elementos da coleção também são liberadas.</span><span class="sxs-lookup"><span data-stu-id="b15cc-172"><xref:System.Collections.Queue.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="b15cc-173">A capacidade permanece inalterada.</span><span class="sxs-lookup"><span data-stu-id="b15cc-173">The capacity remains unchanged.</span></span> <span data-ttu-id="b15cc-174">Para redefinir a capacidade do <xref:System.Collections.Queue>, chame <xref:System.Collections.Queue.TrimToSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="b15cc-174">To reset the capacity of the <xref:System.Collections.Queue>, call <xref:System.Collections.Queue.TrimToSize%2A>.</span></span> <span data-ttu-id="b15cc-175">Cortar vazio <xref:System.Collections.Queue> define a capacidade do <xref:System.Collections.Queue> à capacidade padrão.</span><span class="sxs-lookup"><span data-stu-id="b15cc-175">Trimming an empty <xref:System.Collections.Queue> sets the capacity of the <xref:System.Collections.Queue> to the default capacity.</span></span>  
  
 <span data-ttu-id="b15cc-176">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.Queue.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="b15cc-176">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Queue.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b15cc-177">O exemplo a seguir mostra como limpar os valores de <xref:System.Collections.Queue>.</span><span class="sxs-lookup"><span data-stu-id="b15cc-177">The following example shows how to clear the values of the <xref:System.Collections.Queue>.</span></span>  
  
 [!code-cpp[Classic Queue.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Queue.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Queue.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Queue.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic Queue.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Queue.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Queue.TrimToSize" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Queue.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b15cc-178">Cria uma cópia superficial do <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-178">Creates a shallow copy of the <see cref="T:System.Collections.Queue" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b15cc-179">Uma cópia superficial do <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-179">A shallow copy of the <see cref="T:System.Collections.Queue" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b15cc-180">Uma cópia superficial de uma coleção copia apenas os elementos da coleção, se eles são tipos de referência ou tipos de valor, mas não copia os objetos que se referem as referências a.</span><span class="sxs-lookup"><span data-stu-id="b15cc-180">A shallow copy of a collection copies only the elements of the collection, whether they are reference types or value types, but it does not copy the objects that the references refer to.</span></span> <span data-ttu-id="b15cc-181">As referências na nova coleção apontam para os mesmos objetos que as referências na coleção original apontem para.</span><span class="sxs-lookup"><span data-stu-id="b15cc-181">The references in the new collection point to the same objects that the references in the original collection point to.</span></span>  
  
 <span data-ttu-id="b15cc-182">Em contraste, uma cópia profunda de uma coleção copia os elementos e tudo direta ou indiretamente referenciado por elementos.</span><span class="sxs-lookup"><span data-stu-id="b15cc-182">In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="b15cc-183">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.Queue.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="b15cc-183">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Queue.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Queue.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="b15cc-184">O <see cref="T:System.Object" /> a ser localizado no <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-184">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.Queue" />.</span>
          </span>
          <span data-ttu-id="b15cc-185">O valor pode ser <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-185">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b15cc-186">Determina se um elemento está no <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-186">Determines whether an element is in the <see cref="T:System.Collections.Queue" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b15cc-187">
            <see langword="true" /> se <paramref name="obj" /> for encontrado no <see cref="T:System.Collections.Queue" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-187">
              <see langword="true" /> if <paramref name="obj" /> is found in the <see cref="T:System.Collections.Queue" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b15cc-188">Este método determina a igualdade chamando <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="b15cc-188">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="b15cc-189">Este método executa uma pesquisa linear; por isso, esse método é uma operação O(`n`), em que `n` é <xref:System.Collections.Queue.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="b15cc-189">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Queue.Count%2A>.</span></span>  
  
 <span data-ttu-id="b15cc-190">Começando com o .NET Framework 2.0, esse método usa objetos da coleção <xref:System.Object.Equals%2A> e <xref:System.IComparable.CompareTo%2A> métodos em `obj` para determinar se `item` existe.</span><span class="sxs-lookup"><span data-stu-id="b15cc-190">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `obj` to determine whether `item` exists.</span></span> <span data-ttu-id="b15cc-191">Em versões anteriores do .NET Framework, essa decisão era tomada usando-se os métodos <xref:System.Object.Equals%2A> e <xref:System.IComparable.CompareTo%2A> do parâmetro `obj` nos objetos na coleção.</span><span class="sxs-lookup"><span data-stu-id="b15cc-191">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `obj` parameter on the objects in the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Queue.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="b15cc-192">O <see cref="T:System.Array" /> unidimensional que é o destino dos elementos copiados de <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-192">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Queue" />.</span>
          </span>
          <span data-ttu-id="b15cc-193">O <see cref="T:System.Array" /> deve ter indexação com base em zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-193">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="b15cc-194">O índice baseado em zero na <c>array</c> na qual a cópia começa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-194">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b15cc-195">Copia os elementos <see cref="T:System.Collections.Queue" /> em um <see cref="T:System.Array" /> unidimensional existente, começando no índice da matriz especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-195">Copies the <see cref="T:System.Collections.Queue" /> elements to an existing one-dimensional <see cref="T:System.Array" />, starting at the specified array index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b15cc-196">Os elementos são copiados para o <xref:System.Array> na mesma ordem em que o enumerador que itera por meio de <xref:System.Collections.Queue>.</span><span class="sxs-lookup"><span data-stu-id="b15cc-196">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.Queue>.</span></span>  
  
 <span data-ttu-id="b15cc-197">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.Queue.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="b15cc-197">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Queue.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b15cc-198">O exemplo a seguir mostra como copiar um <xref:System.Collections.Queue> em uma matriz unidimensional.</span><span class="sxs-lookup"><span data-stu-id="b15cc-198">The following example shows how to copy a <xref:System.Collections.Queue> into a one-dimensional array.</span></span>  
  
 [!code-cpp[Classic Queue.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Queue.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Queue.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Queue.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic Queue.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Queue.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b15cc-199">
            <paramref name="array" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-199">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b15cc-200">
            <paramref name="index" /> é menor que zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-200">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b15cc-201">
            <paramref name="array" /> é multidimensional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-201">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="b15cc-202">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-202">-or-</span>
          </span>
          <span data-ttu-id="b15cc-203">O número de elementos na origem <see cref="T:System.Collections.Queue" /> é maior do que o espaço disponível de <paramref name="index" /> até o final do <paramref name="array" /> de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-203">The number of elements in the source <see cref="T:System.Collections.Queue" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArrayTypeMismatchException">
          <span data-ttu-id="b15cc-204">O tipo do <see cref="T:System.Collections.Queue" /> de origem não pode ser automaticamente convertido para o tipo de <paramref name="array" /> de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-204">The type of the source <see cref="T:System.Collections.Queue" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Queue.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b15cc-205">Obtém o número de elementos contidos no <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-205">Gets the number of elements contained in the <see cref="T:System.Collections.Queue" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b15cc-206">O número de elementos contidos no <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-206">The number of elements contained in the <see cref="T:System.Collections.Queue" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b15cc-207">A capacidade de um <xref:System.Collections.Queue> é o número de elementos que o <xref:System.Collections.Queue> pode armazenar.</span><span class="sxs-lookup"><span data-stu-id="b15cc-207">The capacity of a <xref:System.Collections.Queue> is the number of elements that the <xref:System.Collections.Queue> can store.</span></span> <span data-ttu-id="b15cc-208"><xref:System.Collections.Queue.Count%2A> é o número de elementos que estão realmente no <xref:System.Collections.Queue>.</span><span class="sxs-lookup"><span data-stu-id="b15cc-208"><xref:System.Collections.Queue.Count%2A> is the number of elements that are actually in the <xref:System.Collections.Queue>.</span></span>  
  
 <span data-ttu-id="b15cc-209">A capacidade de um <xref:System.Collections.Queue> é sempre maior que ou igual a <xref:System.Collections.Queue.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="b15cc-209">The capacity of a <xref:System.Collections.Queue> is always greater than or equal to <xref:System.Collections.Queue.Count%2A>.</span></span> <span data-ttu-id="b15cc-210">Se <xref:System.Collections.Queue.Count%2A> excede a capacidade durante a adição de elementos, a capacidade é aumentada automaticamente realocando a matriz interna antes de copiar os elementos antigos e adição de novos elementos.</span><span class="sxs-lookup"><span data-stu-id="b15cc-210">If <xref:System.Collections.Queue.Count%2A> exceeds the capacity while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</span></span> <span data-ttu-id="b15cc-211">A nova capacidade é determinada multiplicando a capacidade atual pelo fator de crescimento, o que é determinado quando o <xref:System.Collections.Queue> é construído.</span><span class="sxs-lookup"><span data-stu-id="b15cc-211">The new capacity is determined by multiplying the current capacity by the growth factor, which is determined when the <xref:System.Collections.Queue> is constructed.</span></span> <span data-ttu-id="b15cc-212">A capacidade do <xref:System.Collections.Queue> sempre será aumentado em um valor mínimo, independentemente do fator de crescimento; um fator de crescimento de 1.0 não impedirá o <xref:System.Collections.Queue> de aumentarem de tamanho.</span><span class="sxs-lookup"><span data-stu-id="b15cc-212">The capacity of the <xref:System.Collections.Queue> will always increase by a minimum value, regardless of the growth factor; a growth factor of 1.0 will not prevent the <xref:System.Collections.Queue> from increasing in size.</span></span>  
  
 <span data-ttu-id="b15cc-213">A capacidade pode ser diminuída chamando <xref:System.Collections.Queue.TrimToSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="b15cc-213">The capacity can be decreased by calling <xref:System.Collections.Queue.TrimToSize%2A>.</span></span>  
  
 <span data-ttu-id="b15cc-214">A recuperação do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="b15cc-214">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dequeue">
      <MemberSignature Language="C#" Value="public virtual object Dequeue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dequeue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Queue.Dequeue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Dequeue () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Dequeue();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b15cc-215">Remove e retorna o objeto no início do <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-215">Removes and returns the object at the beginning of the <see cref="T:System.Collections.Queue" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b15cc-216">O objeto removido do início do <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-216">The object that is removed from the beginning of the <see cref="T:System.Collections.Queue" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b15cc-217">Esse método é semelhante do <xref:System.Collections.Queue.Peek%2A> método, mas <xref:System.Collections.Queue.Peek%2A> não modifica o <xref:System.Collections.Queue>.</span><span class="sxs-lookup"><span data-stu-id="b15cc-217">This method is similar to the <xref:System.Collections.Queue.Peek%2A> method, but <xref:System.Collections.Queue.Peek%2A> does not modify the <xref:System.Collections.Queue>.</span></span>  
  
 <span data-ttu-id="b15cc-218">`null` podem ser adicionados para o <xref:System.Collections.Queue> como um valor.</span><span class="sxs-lookup"><span data-stu-id="b15cc-218">`null` can be added to the <xref:System.Collections.Queue> as a value.</span></span> <span data-ttu-id="b15cc-219">Para distinguir entre um valor nulo e o término do <xref:System.Collections.Queue>, verifique o <xref:System.Collections.Queue.Count%2A> propriedade ou catch o <xref:System.InvalidOperationException>, que é gerado quando o <xref:System.Collections.Queue> está vazio.</span><span class="sxs-lookup"><span data-stu-id="b15cc-219">To distinguish between a null value and the end of the <xref:System.Collections.Queue>, check the <xref:System.Collections.Queue.Count%2A> property or catch the <xref:System.InvalidOperationException>, which is thrown when the <xref:System.Collections.Queue> is empty.</span></span>  
  
 <span data-ttu-id="b15cc-220">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="b15cc-220">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b15cc-221">O exemplo a seguir mostra como adicionar elementos para o <xref:System.Collections.Queue>, remover elementos do <xref:System.Collections.Queue>, ou exibir o elemento no início do <xref:System.Collections.Queue>.</span><span class="sxs-lookup"><span data-stu-id="b15cc-221">The following example shows how to add elements to the <xref:System.Collections.Queue>, remove elements from the <xref:System.Collections.Queue>, or view the element at the beginning of the <xref:System.Collections.Queue>.</span></span>  
  
 [!code-cpp[Classic Queue.Enqueue Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Queue.Enqueue Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Queue.Enqueue Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Queue.Enqueue Example/CS/source.cs#1)]
 [!code-vb[Classic Queue.Enqueue Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Queue.Enqueue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b15cc-222">O <see cref="T:System.Collections.Queue" /> está vazio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-222">The <see cref="T:System.Collections.Queue" /> is empty.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Queue.Enqueue(System.Object)" />
        <altmember cref="M:System.Collections.Queue.Peek" />
      </Docs>
    </Member>
    <Member MemberName="Enqueue">
      <MemberSignature Language="C#" Value="public virtual void Enqueue (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Enqueue(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Queue.Enqueue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Enqueue (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Enqueue(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="b15cc-223">O objeto a ser adicionado ao <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-223">The object to add to the <see cref="T:System.Collections.Queue" />.</span>
          </span>
          <span data-ttu-id="b15cc-224">O valor pode ser <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-224">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b15cc-225">Adiciona um objeto ao final do <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-225">Adds an object to the end of the <see cref="T:System.Collections.Queue" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b15cc-226">A capacidade de um <xref:System.Collections.Queue> é o número de elementos de <xref:System.Collections.Queue> pode conter.</span><span class="sxs-lookup"><span data-stu-id="b15cc-226">The capacity of a <xref:System.Collections.Queue> is the number of elements the <xref:System.Collections.Queue> can hold.</span></span>  <span data-ttu-id="b15cc-227">Como os elementos são adicionados a um <xref:System.Collections.Queue>, a capacidade é aumentada automaticamente conforme necessário por meio de realocação.</span><span class="sxs-lookup"><span data-stu-id="b15cc-227">As elements are added to a <xref:System.Collections.Queue>, the capacity is automatically increased as required through reallocation.</span></span>  <span data-ttu-id="b15cc-228">A capacidade pode ser diminuída chamando <xref:System.Collections.Queue.TrimToSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="b15cc-228">The capacity can be decreased by calling <xref:System.Collections.Queue.TrimToSize%2A>.</span></span>  
  
 <span data-ttu-id="b15cc-229">O fator de crescimento é o número pelo qual a capacidade atual é multiplicada quando for necessária uma maior capacidade.</span><span class="sxs-lookup"><span data-stu-id="b15cc-229">The growth factor is the number by which the current capacity is multiplied when a greater capacity is required.</span></span>  <span data-ttu-id="b15cc-230">O fator de crescimento é determinado quando o <xref:System.Collections.Queue> é construído.</span><span class="sxs-lookup"><span data-stu-id="b15cc-230">The growth factor is determined when the <xref:System.Collections.Queue> is constructed.</span></span> <span data-ttu-id="b15cc-231">A capacidade do <xref:System.Collections.Queue> sempre será aumentado em um valor mínimo, independentemente do fator de crescimento; um fator de crescimento de 1.0 não impedirá o <xref:System.Collections.Queue> de aumentarem de tamanho.</span><span class="sxs-lookup"><span data-stu-id="b15cc-231">The capacity of the <xref:System.Collections.Queue> will always increase by a minimum value, regardless of the growth factor; a growth factor of 1.0 will not prevent the <xref:System.Collections.Queue> from increasing in size.</span></span>  
  
 <span data-ttu-id="b15cc-232">Se <xref:System.Collections.Queue.Count%2A> é menor que a capacidade da matriz interna, esse método é uma operação de (1).</span><span class="sxs-lookup"><span data-stu-id="b15cc-232">If <xref:System.Collections.Queue.Count%2A> is less than the capacity of the internal array, this method is an O(1) operation.</span></span> <span data-ttu-id="b15cc-233">Se a matriz interna precisa ser realocada para acomodar o novo elemento, esse método se torna um O (`n`) operação, onde `n` é <xref:System.Collections.Queue.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="b15cc-233">If the internal array needs to be reallocated to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.Queue.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b15cc-234">O exemplo a seguir mostra como adicionar elementos para o <xref:System.Collections.Queue>, remover elementos do <xref:System.Collections.Queue>, ou exibir o elemento no início do <xref:System.Collections.Queue>.</span><span class="sxs-lookup"><span data-stu-id="b15cc-234">The following example shows how to add elements to the <xref:System.Collections.Queue>, remove elements from the <xref:System.Collections.Queue>, or view the element at the beginning of the <xref:System.Collections.Queue>.</span></span>  
  
 [!code-cpp[Classic Queue.Enqueue Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Queue.Enqueue Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Queue.Enqueue Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Queue.Enqueue Example/CS/source.cs#1)]
 [!code-vb[Classic Queue.Enqueue Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Queue.Enqueue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Queue.Dequeue" />
        <altmember cref="M:System.Collections.Queue.Peek" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Queue.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b15cc-235">Retorna um enumerador que itera por meio de <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-235">Returns an enumerator that iterates through the <see cref="T:System.Collections.Queue" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b15cc-236">Um <see cref="T:System.Collections.IEnumerator" /> para o <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-236">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Collections.Queue" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b15cc-237">O `foreach` instrução de linguagem c# (`for each` no Visual Basic) oculta a complexidade dos enumeradores.</span><span class="sxs-lookup"><span data-stu-id="b15cc-237">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="b15cc-238">Portanto, o uso de `foreach` é recomendado, em vez de manipular diretamente o enumerador.</span><span class="sxs-lookup"><span data-stu-id="b15cc-238">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="b15cc-239">Os enumeradores podem ser usados para ler os dados na coleção, mas não podem ser usados para modificar a coleção subjacente.</span><span class="sxs-lookup"><span data-stu-id="b15cc-239">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="b15cc-240">Inicialmente, o enumerador é posicionado antes do primeiro elemento da coleção.</span><span class="sxs-lookup"><span data-stu-id="b15cc-240">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="b15cc-241"><xref:System.Collections.IEnumerator.Reset%2A> também traz o enumerador de volta para essa posição.</span><span class="sxs-lookup"><span data-stu-id="b15cc-241"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="b15cc-242">Nesta posição, <xref:System.Collections.IEnumerator.Current%2A> está indefinido.</span><span class="sxs-lookup"><span data-stu-id="b15cc-242">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="b15cc-243">Por isso, você deve chamar <xref:System.Collections.IEnumerator.MoveNext%2A> para avançar o enumerador até o primeiro elemento da coleção antes de ler o valor de <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="b15cc-243">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="b15cc-244"><xref:System.Collections.IEnumerator.Current%2A> retorna o mesmo objeto até <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> ser chamado.</span><span class="sxs-lookup"><span data-stu-id="b15cc-244"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="b15cc-245"><xref:System.Collections.IEnumerator.MoveNext%2A> define <xref:System.Collections.IEnumerator.Current%2A> como o próximo elemento.</span><span class="sxs-lookup"><span data-stu-id="b15cc-245"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="b15cc-246">Caso <xref:System.Collections.IEnumerator.MoveNext%2A> passe o final da coleção, o enumerador é posicionado após o último elemento na coleção e <xref:System.Collections.IEnumerator.MoveNext%2A> retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="b15cc-246">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="b15cc-247">Quando o enumerador está nessa posição, as chamadas subsequentes para <xref:System.Collections.IEnumerator.MoveNext%2A> também retornam `false`.</span><span class="sxs-lookup"><span data-stu-id="b15cc-247">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="b15cc-248">Caso a última chamada para <xref:System.Collections.IEnumerator.MoveNext%2A> tenha retornado `false`, <xref:System.Collections.IEnumerator.Current%2A> está indefinido.</span><span class="sxs-lookup"><span data-stu-id="b15cc-248">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="b15cc-249">Para definir <xref:System.Collections.IEnumerator.Current%2A> como o primeiro elemento da coleção novamente, é possível chamar <xref:System.Collections.IEnumerator.Reset%2A> seguido de <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="b15cc-249">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="b15cc-250">Um enumerador permanece válido desde que a coleção continue inalterada.</span><span class="sxs-lookup"><span data-stu-id="b15cc-250">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="b15cc-251">Se forem feitas alterações na coleção, como adicionar, modificar ou excluir elementos, o enumerador será invalidado de maneira irrevogável e seu comportamento permanecerá indefinido.</span><span class="sxs-lookup"><span data-stu-id="b15cc-251">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="b15cc-252">O enumerador não tem acesso exclusivo à coleção; por isso, a enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="b15cc-252">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="b15cc-253">Para garantir acesso thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração.</span><span class="sxs-lookup"><span data-stu-id="b15cc-253">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="b15cc-254">Para permitir que a coleção a ser acessado por vários threads para leitura e gravação, você deve implementar sua sincronização.</span><span class="sxs-lookup"><span data-stu-id="b15cc-254">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="b15cc-255">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="b15cc-255">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Queue.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b15cc-256">Obtém um valor que indica se o acesso à <see cref="T:System.Collections.Queue" /> é sincronizado (thread-safe).</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-256">Gets a value indicating whether access to the <see cref="T:System.Collections.Queue" /> is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b15cc-257">
            <see langword="true" /> caso o acesso ao <see cref="T:System.Collections.Queue" /> seja sincronizado (thread-safe); do contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-257">
              <see langword="true" /> if access to the <see cref="T:System.Collections.Queue" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="b15cc-258">O padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-258">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b15cc-259">Para garantir a segurança de thread do <xref:System.Collections.Queue>, todas as operações devem ser feitas por meio do wrapper retornado pelo <xref:System.Collections.Queue.Synchronized%2A> método.</span><span class="sxs-lookup"><span data-stu-id="b15cc-259">To guarantee the thread safety of the <xref:System.Collections.Queue>, all operations must be done through the wrapper returned by the <xref:System.Collections.Queue.Synchronized%2A> method.</span></span>  
  
 <span data-ttu-id="b15cc-260">A enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="b15cc-260">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="b15cc-261">Mesmo quando uma coleção está sincronizada, outros threads ainda podem modificar a coleção, o que faz o enumerador lançar uma exceção.</span><span class="sxs-lookup"><span data-stu-id="b15cc-261">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="b15cc-262">Para garantir thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração ou verificar as exceções resultantes das alterações feitas por outros threads.</span><span class="sxs-lookup"><span data-stu-id="b15cc-262">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b15cc-263">O exemplo de código a seguir mostra como bloquear a coleção usando o <xref:System.Collections.Queue.SyncRoot%2A> durante toda a enumeração.</span><span class="sxs-lookup"><span data-stu-id="b15cc-263">The following code example shows how to lock the collection using the <xref:System.Collections.Queue.SyncRoot%2A> during the entire enumeration.</span></span> <span data-ttu-id="b15cc-264">A recuperação do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="b15cc-264">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 [!code-cpp[Classic Queue.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Queue.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic Queue.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Queue.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic Queue.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Queue.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="b15cc-265">O exemplo a seguir mostra como sincronizar um <xref:System.Collections.Queue>, determinar se um <xref:System.Collections.Queue> está sincronizado e usar um sincronizado <xref:System.Collections.Queue>.</span><span class="sxs-lookup"><span data-stu-id="b15cc-265">The following example shows how to synchronize a <xref:System.Collections.Queue>, determine if a <xref:System.Collections.Queue> is synchronized, and use a synchronized <xref:System.Collections.Queue>.</span></span>  
  
 [!code-cpp[Classic Queue.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Queue.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Queue.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Queue.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic Queue.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Queue.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Queue.SyncRoot" />
        <altmember cref="M:System.Collections.Queue.Synchronized(System.Collections.Queue)" />
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public virtual object Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Queue.Peek" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Peek () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Peek();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b15cc-266">Retorna o objeto ao início da <see cref="T:System.Collections.Queue" /> sem removê-lo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-266">Returns the object at the beginning of the <see cref="T:System.Collections.Queue" /> without removing it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b15cc-267">O objeto no início da <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-267">The object at the beginning of the <see cref="T:System.Collections.Queue" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b15cc-268">Esse método é semelhante do <xref:System.Collections.Queue.Dequeue%2A> método, mas <xref:System.Collections.Queue.Peek%2A> não modifica o <xref:System.Collections.Queue>.</span><span class="sxs-lookup"><span data-stu-id="b15cc-268">This method is similar to the <xref:System.Collections.Queue.Dequeue%2A> method, but <xref:System.Collections.Queue.Peek%2A> does not modify the <xref:System.Collections.Queue>.</span></span>  
  
 <span data-ttu-id="b15cc-269">`null` podem ser adicionados para o <xref:System.Collections.Queue> como um valor.</span><span class="sxs-lookup"><span data-stu-id="b15cc-269">`null` can be added to the <xref:System.Collections.Queue> as a value.</span></span> <span data-ttu-id="b15cc-270">Para distinguir entre um valor nulo e o término do <xref:System.Collections.Queue>, verifique o <xref:System.Collections.Queue.Count%2A> propriedade ou catch o <xref:System.InvalidOperationException>, que é gerado quando o <xref:System.Collections.Queue> está vazio.</span><span class="sxs-lookup"><span data-stu-id="b15cc-270">To distinguish between a null value and the end of the <xref:System.Collections.Queue>, check the <xref:System.Collections.Queue.Count%2A> property or catch the <xref:System.InvalidOperationException>, which is thrown when the <xref:System.Collections.Queue> is empty.</span></span>  
  
 <span data-ttu-id="b15cc-271">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="b15cc-271">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b15cc-272">O exemplo a seguir mostra como adicionar elementos para o <xref:System.Collections.Queue>, remover elementos do <xref:System.Collections.Queue>, ou exibir o elemento no início do <xref:System.Collections.Queue>.</span><span class="sxs-lookup"><span data-stu-id="b15cc-272">The following example shows how to add elements to the <xref:System.Collections.Queue>, remove elements from the <xref:System.Collections.Queue>, or view the element at the beginning of the <xref:System.Collections.Queue>.</span></span>  
  
 [!code-cpp[Classic Queue.Enqueue Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Queue.Enqueue Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Queue.Enqueue Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Queue.Enqueue Example/CS/source.cs#1)]
 [!code-vb[Classic Queue.Enqueue Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Queue.Enqueue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b15cc-273">O <see cref="T:System.Collections.Queue" /> está vazio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-273">The <see cref="T:System.Collections.Queue" /> is empty.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Queue.Enqueue(System.Object)" />
        <altmember cref="M:System.Collections.Queue.Dequeue" />
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.Collections.Queue Synchronized (System.Collections.Queue queue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Queue Synchronized(class System.Collections.Queue queue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Queue.Synchronized(System.Collections.Queue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Queue ^ Synchronized(System::Collections::Queue ^ queue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Queue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queue" Type="System.Collections.Queue" />
      </Parameters>
      <Docs>
        <param name="queue">
          <span data-ttu-id="b15cc-274">O <see cref="T:System.Collections.Queue" /> a ser sincronizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-274">The <see cref="T:System.Collections.Queue" /> to synchronize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b15cc-275">Retorna um novo <see cref="T:System.Collections.Queue" /> que encapsula a fila original e é thread-safe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-275">Returns a new <see cref="T:System.Collections.Queue" /> that wraps the original queue, and is thread safe.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b15cc-276">Um wrapper <see cref="T:System.Collections.Queue" /> sincronizado (thread-safe).</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-276">A <see cref="T:System.Collections.Queue" /> wrapper that is synchronized (thread safe).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b15cc-277">O wrapper retornado por este método bloqueia a fila antes de uma operação é executada de forma que ele é executado em uma forma thread-safe.</span><span class="sxs-lookup"><span data-stu-id="b15cc-277">The wrapper returned by this method locks the queue before an operation is performed so that it is performed in a thread-safe manner.</span></span>  
  
 <span data-ttu-id="b15cc-278">Para garantir a segurança de thread do <xref:System.Collections.Queue>, todas as operações devem ser feitas por meio de apenas esse wrapper.</span><span class="sxs-lookup"><span data-stu-id="b15cc-278">To guarantee the thread safety of the <xref:System.Collections.Queue>, all operations must be done through this wrapper only.</span></span>  
  
 <span data-ttu-id="b15cc-279">A enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="b15cc-279">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="b15cc-280">Mesmo quando uma coleção está sincronizada, outros threads ainda podem modificar a coleção, o que faz o enumerador lançar uma exceção.</span><span class="sxs-lookup"><span data-stu-id="b15cc-280">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="b15cc-281">Para garantir thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração ou verificar as exceções resultantes das alterações feitas por outros threads.</span><span class="sxs-lookup"><span data-stu-id="b15cc-281">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b15cc-282">O exemplo de código a seguir mostra como bloquear a coleção usando o <xref:System.Collections.Queue.SyncRoot%2A> durante toda a enumeração.</span><span class="sxs-lookup"><span data-stu-id="b15cc-282">The following code example shows how to lock the collection using the <xref:System.Collections.Queue.SyncRoot%2A> during the entire enumeration.</span></span> <span data-ttu-id="b15cc-283">Este método é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="b15cc-283">This method is an O(1) operation.</span></span>  
  
 [!code-cpp[Classic Queue.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Queue.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic Queue.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Queue.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic Queue.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Queue.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="b15cc-284">O exemplo a seguir mostra como sincronizar um <xref:System.Collections.Queue>, determinar se um <xref:System.Collections.Queue> é sincronizado e usar um sincronizado <xref:System.Collections.Queue>.</span><span class="sxs-lookup"><span data-stu-id="b15cc-284">The following example shows how to synchronize a <xref:System.Collections.Queue>, determine if a <xref:System.Collections.Queue> is synchronized and use a synchronized <xref:System.Collections.Queue>.</span></span>  
  
 [!code-cpp[Classic Queue.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Queue.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Queue.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Queue.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic Queue.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Queue.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b15cc-285">
            <paramref name="queue" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-285">
              <paramref name="queue" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.Queue.IsSynchronized" />
        <altmember cref="P:System.Collections.Queue.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Queue.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b15cc-286">Obtém um objeto que pode ser usado para sincronizar o acesso ao <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-286">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.Queue" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b15cc-287">Um objeto que pode ser usado para sincronizar o acesso ao <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-287">An object that can be used to synchronize access to the <see cref="T:System.Collections.Queue" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b15cc-288">Para criar uma versão sincronizada do <xref:System.Collections.Queue>, use o <xref:System.Collections.Queue.Synchronized%2A> método.</span><span class="sxs-lookup"><span data-stu-id="b15cc-288">To create a synchronized version of the <xref:System.Collections.Queue>, use the <xref:System.Collections.Queue.Synchronized%2A> method.</span></span> <span data-ttu-id="b15cc-289">No entanto, as classes derivadas podem fornecer sua própria versão sincronizada de <xref:System.Collections.Queue> usando o <xref:System.Collections.Queue.SyncRoot%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="b15cc-289">However, derived classes can provide their own synchronized version of the <xref:System.Collections.Queue> using the <xref:System.Collections.Queue.SyncRoot%2A> property.</span></span> <span data-ttu-id="b15cc-290">O código de sincronização necessário realizar operações no <xref:System.Collections.Queue.SyncRoot%2A> do <xref:System.Collections.Queue>, não diretamente no <xref:System.Collections.Queue>.</span><span class="sxs-lookup"><span data-stu-id="b15cc-290">The synchronizing code must perform operations on the <xref:System.Collections.Queue.SyncRoot%2A> of the <xref:System.Collections.Queue>, not directly on the <xref:System.Collections.Queue>.</span></span> <span data-ttu-id="b15cc-291">Isso garante a operação apropriada das coleções que são derivadas de outros objetos.</span><span class="sxs-lookup"><span data-stu-id="b15cc-291">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="b15cc-292">Especificamente, ele mantém uma sincronização adequada com outros threads que podem ser simultaneamente modificando o <xref:System.Collections.Queue> objeto.</span><span class="sxs-lookup"><span data-stu-id="b15cc-292">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.Queue> object.</span></span>  
  
 <span data-ttu-id="b15cc-293">A enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="b15cc-293">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="b15cc-294">Mesmo quando uma coleção está sincronizada, outros threads ainda podem modificar a coleção, o que faz o enumerador lançar uma exceção.</span><span class="sxs-lookup"><span data-stu-id="b15cc-294">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="b15cc-295">Para garantir thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração ou verificar as exceções resultantes das alterações feitas por outros threads.</span><span class="sxs-lookup"><span data-stu-id="b15cc-295">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b15cc-296">O exemplo de código a seguir mostra como bloquear a coleção usando o <xref:System.Collections.Queue.SyncRoot%2A> durante toda a enumeração.</span><span class="sxs-lookup"><span data-stu-id="b15cc-296">The following code example shows how to lock the collection using the <xref:System.Collections.Queue.SyncRoot%2A> during the entire enumeration.</span></span> <span data-ttu-id="b15cc-297">A recuperação do valor dessa propriedade é uma operação O(1).</span><span class="sxs-lookup"><span data-stu-id="b15cc-297">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 [!code-cpp[Classic Queue.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Queue.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic Queue.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Queue.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic Queue.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Queue.IsSynchronized Example/VB/source2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Queue.IsSynchronized" />
        <altmember cref="M:System.Collections.Queue.Synchronized(System.Collections.Queue)" />
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public virtual object[] ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] ToArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Queue.ToArray" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToArray () As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Object ^&gt; ^ ToArray();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b15cc-298">Copia os elementos do <see cref="T:System.Collections.Queue" /> em uma nova matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-298">Copies the <see cref="T:System.Collections.Queue" /> elements to a new array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b15cc-299">Uma nova matriz que contém os elementos copiados de <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-299">A new array containing elements copied from the <see cref="T:System.Collections.Queue" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b15cc-300">O <xref:System.Collections.Queue> não é modificado.</span><span class="sxs-lookup"><span data-stu-id="b15cc-300">The <xref:System.Collections.Queue> is not modified.</span></span> <span data-ttu-id="b15cc-301">A ordem dos elementos na nova matriz é igual à ordem dos elementos do início do <xref:System.Collections.Queue> até o fim.</span><span class="sxs-lookup"><span data-stu-id="b15cc-301">The order of the elements in the new array is the same as the order of the elements from the beginning of the <xref:System.Collections.Queue> to its end.</span></span>  
  
 <span data-ttu-id="b15cc-302">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.Queue.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="b15cc-302">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Queue.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b15cc-303">O exemplo a seguir mostra como copiar um <xref:System.Collections.Queue> em uma matriz unidimensional.</span><span class="sxs-lookup"><span data-stu-id="b15cc-303">The following example shows how to copy a <xref:System.Collections.Queue> into a one-dimensional array.</span></span>  
  
 [!code-cpp[Classic Queue.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Queue.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Queue.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Queue.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic Queue.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Queue.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimToSize">
      <MemberSignature Language="C#" Value="public virtual void TrimToSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TrimToSize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Queue.TrimToSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TrimToSize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TrimToSize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b15cc-304">Define a capacidade para o número real de elementos em <see cref="T:System.Collections.Queue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-304">Sets the capacity to the actual number of elements in the <see cref="T:System.Collections.Queue" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b15cc-305">Esse método pode ser usado para minimizar a memória de uma fila sobrecarga se nenhum elemento novo será adicionado à fila.</span><span class="sxs-lookup"><span data-stu-id="b15cc-305">This method can be used to minimize a queue's memory overhead if no new elements will be added to the queue.</span></span>  
  
 <span data-ttu-id="b15cc-306">Para redefinir um <xref:System.Collections.Queue> para seu estado inicial, chame o <xref:System.Collections.Queue.Clear%2A> método antes de chamar <xref:System.Collections.Queue.TrimToSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="b15cc-306">To reset a <xref:System.Collections.Queue> to its initial state, call the <xref:System.Collections.Queue.Clear%2A> method before calling <xref:System.Collections.Queue.TrimToSize%2A>.</span></span> <span data-ttu-id="b15cc-307">Cortar vazio <xref:System.Collections.Queue> define a capacidade do <xref:System.Collections.Queue> à capacidade padrão.</span><span class="sxs-lookup"><span data-stu-id="b15cc-307">Trimming an empty <xref:System.Collections.Queue> sets the capacity of the <xref:System.Collections.Queue> to the default capacity.</span></span>  
  
 <span data-ttu-id="b15cc-308">Este método é uma operação O(`n`), em que `n` é <xref:System.Collections.Queue.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="b15cc-308">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Queue.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="b15cc-309">O <see cref="T:System.Collections.Queue" /> é somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b15cc-309">The <see cref="T:System.Collections.Queue" /> is read-only.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Queue.Clear" />
        <altmember cref="P:System.Collections.Queue.Count" />
      </Docs>
    </Member>
  </Members>
</Type>