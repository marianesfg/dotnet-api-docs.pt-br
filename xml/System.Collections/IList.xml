<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IList.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56599051e2ecdfc3d4aef852a9d7d8340b31ba59a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6599051e2ecdfc3d4aef852a9d7d8340b31ba59a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Collections.IList">
          <source>Represents a non-generic collection of objects that can be individually accessed by index.</source>
          <target state="translated">Representa uma coleção não genérica de objetos que podem ser acessados separadamente por índice.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IList">
          <source><ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> is a descendant of the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> interface and is the base interface of all non-generic lists.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> é um descendente do <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> interface e é a interface base de todas as listas não genérico.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IList">
          <source><ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> implementations fall into three categories: read-only, fixed-size, and variable-size.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> implementações se encaixam em três categorias: somente leitura, tamanho fixo e tamanho variável.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IList">
          <source>A read-only <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> cannot be modified.</source>
          <target state="translated">Somente leitura <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> não pode ser modificado.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IList">
          <source>A fixed-size <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> does not allow the addition or removal of elements, but it allows the modification of existing elements.</source>
          <target state="translated">Um tamanho fixo <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> não permite a adição ou remoção de elementos, mas permite que a modificação de elementos existentes.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IList">
          <source>A variable-size <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> allows the addition, removal, and modification of elements.</source>
          <target state="translated">Um tamanho de variável <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> permite a adição, remoção e modificação de elementos.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IList">
          <source>For the generic version of this interface, see <ph id="ph1">&lt;xref:System.Collections.Generic.IList%601?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Para obter a versão genérica dessa interface, consulte <ph id="ph1">&lt;xref:System.Collections.Generic.IList%601?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IList">
          <source>The following example demonstrates the implementation of the <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> interface to create a simple list, fixed-size list.</source>
          <target state="translated">O exemplo a seguir demonstra a implementação da interface <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> para criar uma lista simples, de tamanho fixo.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Collections.IList.Add(System.Object)">
          <source>The object to add to the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated">O objeto a ser adicionado ao <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Collections.IList.Add(System.Object)">
          <source>Adds an item to the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated">Adiciona um item ao <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Collections.IList.Add(System.Object)">
          <source>The position into which the new element was inserted, or -1 to indicate that the item was not inserted into the collection.</source>
          <target state="translated">A posição na qual o novo elemento foi inserido, ou -1 para indicar que o item não foi inserido na coleção.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IList.Add(System.Object)">
          <source>The following example demonstrates the implementation of the <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> interface to create a simple, fixed-size list.</source>
          <target state="translated">O exemplo a seguir demonstra a implementação do <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> interface para criar uma lista simple, de tamanho fixo.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IList.Add(System.Object)">
          <source>This code is part of a larger example for the <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> interface.</source>
          <target state="translated">Este código faz parte de um exemplo maior para a interface <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Collections.IList.Add(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> is read-only.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> é somente leitura.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Collections.IList.Add(System.Object)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Collections.IList.Add(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> has a fixed size.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> tem um tamanho fixo.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Collections.IList.Clear">
          <source>Removes all items from the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated">Remove todos os itens do <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IList.Clear">
          <source>Implementations of this method can vary in how they handle the <ph id="ph1">&lt;xref:System.Collections.ICollection.Count%2A?displayProperty=nameWithType&gt;</ph> and the capacity of a collection.</source>
          <target state="translated">As implementações desse método podem variar no modo como tratam o <ph id="ph1">&lt;xref:System.Collections.ICollection.Count%2A?displayProperty=nameWithType&gt;</ph> e a capacidade de uma coleção.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IList.Clear">
          <source>Typically, the count is set to zero, and references to other objects from elements of the collection are also released.</source>
          <target state="translated">Normalmente, a contagem é definida como zero, e referências a outros objetos de elementos da coleção também são liberadas.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IList.Clear">
          <source>The capacity can be set to zero or a default value, or it can remain unchanged.</source>
          <target state="translated">A capacidade pode ser definida como zero ou um valor padrão ou pode permanecem inalterada.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IList.Clear">
          <source>The following example demonstrates the implementation of the <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> interface to create a simple list, fixed-size list.</source>
          <target state="translated">O exemplo a seguir demonstra a implementação da interface <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> para criar uma lista simples, de tamanho fixo.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IList.Clear">
          <source>This code is part of a larger example for the <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> interface.</source>
          <target state="translated">Este código faz parte de um exemplo maior para a interface <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Collections.IList.Clear">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> is read-only.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> é somente leitura.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Collections.IList.Contains(System.Object)">
          <source>The object to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated">O objeto a ser localizado no <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Collections.IList.Contains(System.Object)">
          <source>Determines whether the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> contains a specific value.</source>
          <target state="translated">Determinará se o <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> contiver um valor específico.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Collections.IList.Contains(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> is found in the <ph id="ph3">&lt;see cref="T:System.Collections.IList" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> for encontrado no <ph id="ph3">&lt;see cref="T:System.Collections.IList" /&gt;</ph>; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IList.Contains(System.Object)">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods on <ph id="ph3">`item`</ph> to determine whether item exists.</source>
          <target state="translated">Começando pelo .NET Framework 2.0, esse método usa os métodos <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> do objeto da coleção em <ph id="ph3">`item`</ph> para determinar se o item existe.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IList.Contains(System.Object)">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods of the <ph id="ph3">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">Em versões anteriores do .NET Framework, essa decisão era tomada usando-se os métodos <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> do parâmetro <ph id="ph3">`item`</ph> nos objetos na coleção.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IList.Contains(System.Object)">
          <source>The following example demonstrates the implementation of the <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> interface to create a simple list, fixed-size list.</source>
          <target state="translated">O exemplo a seguir demonstra a implementação da interface <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> para criar uma lista simples, de tamanho fixo.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IList.Contains(System.Object)">
          <source>This code is part of a larger example for the <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> interface.</source>
          <target state="translated">Este código faz parte de um exemplo maior para a interface <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Collections.IList.IndexOf(System.Object)">
          <source>The object to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated">O objeto a ser localizado no <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Collections.IList.IndexOf(System.Object)">
          <source>Determines the index of a specific item in the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated">Determina o índice de um item específico em <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Collections.IList.IndexOf(System.Object)">
          <source>The index of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> if found in the list; otherwise, -1.</source>
          <target state="translated">O índice de <ph id="ph1">&lt;paramref name="value" /&gt;</ph> se encontrado na lista; caso contrário, -1.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IList.IndexOf(System.Object)">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods on <ph id="ph3">`item`</ph> to determine whether item exists.</source>
          <target state="translated">Começando pelo .NET Framework 2.0, esse método usa os métodos <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> do objeto da coleção em <ph id="ph3">`item`</ph> para determinar se o item existe.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IList.IndexOf(System.Object)">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods of the <ph id="ph3">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">Em versões anteriores do .NET Framework, essa decisão era tomada usando-se os métodos <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> do parâmetro <ph id="ph3">`item`</ph> nos objetos na coleção.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IList.IndexOf(System.Object)">
          <source>The following example demonstrates the implementation of the <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> interface to create a simple list, fixed-size list.</source>
          <target state="translated">O exemplo a seguir demonstra a implementação da interface <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> para criar uma lista simples, de tamanho fixo.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IList.IndexOf(System.Object)">
          <source>This code is part of a larger example for the <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> interface.</source>
          <target state="translated">Este código faz parte de um exemplo maior para a interface <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Collections.IList.Insert(System.Int32,System.Object)">
          <source>The zero-based index at which <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> should be inserted.</source>
          <target state="translated">O índice baseado em zero no qual o <bpt id="p1">&lt;c&gt;</bpt>valor<ept id="p1">&lt;/c&gt;</ept> deve ser inserido.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Collections.IList.Insert(System.Int32,System.Object)">
          <source>The object to insert into the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated">O objeto a ser inserido no <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Collections.IList.Insert(System.Int32,System.Object)">
          <source>Inserts an item to the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> at the specified index.</source>
          <target state="translated">Insere um item na <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> no índice especificado.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IList.Insert(System.Int32,System.Object)">
          <source>If <ph id="ph1">`index`</ph> equals the number of items in the <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>, then <ph id="ph3">`value`</ph> is appended to the end.</source>
          <target state="translated">Se <ph id="ph1">`index`</ph> é igual ao número de itens no <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>, em seguida, <ph id="ph3">`value`</ph> é acrescentado ao final.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IList.Insert(System.Int32,System.Object)">
          <source>In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</source>
          <target state="translated">Em coleções de elementos contíguos, como listas, os elementos que seguem o ponto de inserção descem para acomodar o novo elemento.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IList.Insert(System.Int32,System.Object)">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">Caso a coleção seja indexada, os índices dos elementos que são movidos também são atualizados.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IList.Insert(System.Int32,System.Object)">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">Este comportamento não se aplica às coleções em que elementos sejam agrupados conceitualmente em buckets, como uma tabela de hash.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IList.Insert(System.Int32,System.Object)">
          <source>The following example demonstrates the implementation of the <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> interface to create a simple list, fixed-size list.</source>
          <target state="translated">O exemplo a seguir demonstra a implementação da interface <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> para criar uma lista simples, de tamanho fixo.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IList.Insert(System.Int32,System.Object)">
          <source>This code is part of a larger example for the <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> interface.</source>
          <target state="translated">Este código faz parte de um exemplo maior para a interface <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Collections.IList.Insert(System.Int32,System.Object)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is not a valid index in the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> não é um índice válido no <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Collections.IList.Insert(System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> is read-only.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> é somente leitura.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Collections.IList.Insert(System.Int32,System.Object)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Collections.IList.Insert(System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> has a fixed size.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> tem um tamanho fixo.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Collections.IList.Insert(System.Int32,System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is null reference in the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> é uma referência nula no <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.Collections.IList.IsFixedSize">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> has a fixed size.</source>
          <target state="translated">Obtém um valor que indica se o <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> tem um tamanho fixo.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IList.IsFixedSize">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> has a fixed size; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> tiver um valor fixo; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IList.IsFixedSize">
          <source>A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</source>
          <target state="translated">Uma coleção com um tamanho fixo não permite a adição ou a remoção de elementos após a coleção ser criada, mas permite a modificação de elementos existentes.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IList.IsFixedSize">
          <source>The following example demonstrates the implementation of the <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> interface to create a simple list, fixed-size list.</source>
          <target state="translated">O exemplo a seguir demonstra a implementação da interface <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> para criar uma lista simples, de tamanho fixo.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IList.IsFixedSize">
          <source>This code is part of a larger example for the <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> interface.</source>
          <target state="translated">Este código faz parte de um exemplo maior para a interface <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="P:System.Collections.IList.IsReadOnly">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> is read-only.</source>
          <target state="translated">Obtém um valor que indica se o <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> é somente leitura.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IList.IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> is read-only; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> for somente leitura; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IList.IsReadOnly">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">Uma coleção que seja somente leitura não permite a adição, a remoção ou a modificação de elementos após a coleção ser criada.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IList.IsReadOnly">
          <source>The following example demonstrates the implementation of the <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> interface to create a simple list, fixed-size list.</source>
          <target state="translated">O exemplo a seguir demonstra a implementação da interface <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> para criar uma lista simples, de tamanho fixo.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IList.IsReadOnly">
          <source>This code is part of a larger example for the <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> interface.</source>
          <target state="translated">Este código faz parte de um exemplo maior para a interface <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="P:System.Collections.IList.Item(System.Int32)">
          <source>The zero-based index of the element to get or set.</source>
          <target state="translated">O índice com base em zero do elemento a ser obtido ou definido.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="P:System.Collections.IList.Item(System.Int32)">
          <source>Gets or sets the element at the specified index.</source>
          <target state="translated">Obtém ou define o elemento no índice especificado.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IList.Item(System.Int32)">
          <source>The element at the specified index.</source>
          <target state="translated">O elemento no índice especificado.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IList.Item(System.Int32)">
          <source>This property provides the ability to access a specific element in the collection by using the following syntax: <ph id="ph1">`myCollection[index]`</ph>.</source>
          <target state="translated">Esta propriedade fornece a capacidade de acessar um elemento específico na coleção usando a seguinte sintaxe: <ph id="ph1">`myCollection[index]`</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IList.Item(System.Int32)">
          <source>The C# language uses the  keyword to define the indexers instead of implementing the <ph id="ph1">&lt;xref:System.Collections.IList.Item%2A&gt;</ph> property.</source>
          <target state="translated">A linguagem c# usa a palavra-chave para definir os indexadores em vez de implementar o <ph id="ph1">&lt;xref:System.Collections.IList.Item%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IList.Item(System.Int32)">
          <source>Visual Basic implements <ph id="ph1">&lt;xref:System.Collections.IList.Item%2A&gt;</ph> as a default property, which provides the same indexing functionality.</source>
          <target state="translated">Visual Basic implementa <ph id="ph1">&lt;xref:System.Collections.IList.Item%2A&gt;</ph> como uma propriedade padrão, que fornece a mesma funcionalidade de indexação.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IList.Item(System.Int32)">
          <source>The following example demonstrates the implementation of the <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> interface to create a simple list, fixed-size list.</source>
          <target state="translated">O exemplo a seguir demonstra a implementação da interface <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> para criar uma lista simples, de tamanho fixo.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.IList.Item(System.Int32)">
          <source>This code is part of a larger example for the <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> interface.</source>
          <target state="translated">Este código faz parte de um exemplo maior para a interface <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.Collections.IList.Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is not a valid index in the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> não é um índice válido no <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="P:System.Collections.IList.Item(System.Int32)">
          <source>The property is set and the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> is read-only.</source>
          <target state="translated">A propriedade é definida e o <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> é somente leitura.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Collections.IList.Remove(System.Object)">
          <source>The object to remove from the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated">O objeto a remover do <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Collections.IList.Remove(System.Object)">
          <source>Removes the first occurrence of a specific object from the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated">Remove a primeira ocorrência de um objeto específico do <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IList.Remove(System.Object)">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">Em coleções de elementos contíguos, como listas, os elementos que seguem o elemento removido sobem para ocupar o ponto vazio.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IList.Remove(System.Object)">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">Caso a coleção seja indexada, os índices dos elementos que são movidos também são atualizados.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IList.Remove(System.Object)">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">Este comportamento não se aplica às coleções em que elementos sejam agrupados conceitualmente em buckets, como uma tabela de hash.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IList.Remove(System.Object)">
          <source>If <ph id="ph1">`value`</ph> is not found in the <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>, the <ph id="ph3">&lt;xref:System.Collections.IList&gt;</ph> remains unchanged and no exception is thrown.</source>
          <target state="translated">Se <ph id="ph1">`value`</ph> não foi encontrado no <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>, o <ph id="ph3">&lt;xref:System.Collections.IList&gt;</ph> permanecerão inalterados e nenhuma exceção é lançada.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IList.Remove(System.Object)">
          <source>The following example demonstrates the implementation of the <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> interface to create a simple list, fixed-size list.</source>
          <target state="translated">O exemplo a seguir demonstra a implementação da interface <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> para criar uma lista simples, de tamanho fixo.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IList.Remove(System.Object)">
          <source>This code is part of a larger example for the <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> interface.</source>
          <target state="translated">Este código faz parte de um exemplo maior para a interface <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Collections.IList.Remove(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> is read-only.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> é somente leitura.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Collections.IList.Remove(System.Object)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Collections.IList.Remove(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> has a fixed size.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> tem um tamanho fixo.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IList.Remove(System.Object)">
          <source>If <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not in the list, the <ph id="ph2">&lt;see cref="M:System.Collections.IList.Remove(System.Object)" /&gt;</ph> method should do nothing.</source>
          <target state="translated">Se <ph id="ph1">&lt;paramref name="value" /&gt;</ph> não está na lista, o <ph id="ph2">&lt;see cref="M:System.Collections.IList.Remove(System.Object)" /&gt;</ph> método não deve fazer nada.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IList.Remove(System.Object)">
          <source>In particular, it should not throw an exception.</source>
          <target state="translated">Em particular, ele não deve lançar uma exceção.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Collections.IList.RemoveAt(System.Int32)">
          <source>The zero-based index of the item to remove.</source>
          <target state="translated">O índice com base em zero do item a ser removido.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Collections.IList.RemoveAt(System.Int32)">
          <source>Removes the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> item at the specified index.</source>
          <target state="translated">Remove o item <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> no índice especificado.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IList.RemoveAt(System.Int32)">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">Em coleções de elementos contíguos, como listas, os elementos que seguem o elemento removido sobem para ocupar o ponto vazio.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IList.RemoveAt(System.Int32)">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">Caso a coleção seja indexada, os índices dos elementos que são movidos também são atualizados.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IList.RemoveAt(System.Int32)">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">Este comportamento não se aplica às coleções em que elementos sejam agrupados conceitualmente em buckets, como uma tabela de hash.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IList.RemoveAt(System.Int32)">
          <source>The following example demonstrates the implementation of the <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> interface to create a simple list, fixed-size list.</source>
          <target state="translated">O exemplo a seguir demonstra a implementação da interface <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> para criar uma lista simples, de tamanho fixo.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IList.RemoveAt(System.Int32)">
          <source>This code is part of a larger example for the <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> interface.</source>
          <target state="translated">Este código faz parte de um exemplo maior para a interface <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Collections.IList.RemoveAt(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is not a valid index in the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> não é um índice válido no <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Collections.IList.RemoveAt(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> is read-only.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> é somente leitura.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Collections.IList.RemoveAt(System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Collections.IList.RemoveAt(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> has a fixed size.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> tem um tamanho fixo.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>