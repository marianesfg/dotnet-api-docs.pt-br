<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IStructuralEquatable.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e79517aa8dab302204c461cf349e6d34f100645e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e79517aa8dab302204c461cf349e6d34f100645e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Collections.IStructuralEquatable">
          <source>Defines methods to support the comparison of objects for structural equality.</source>
          <target state="translated">Define métodos para dar suporte à comparação de objetos para igualdade estrutural.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>Structural equality means that two objects are equal because they have equal values.</source>
          <target state="translated">Igualdade estrutural significa que os dois objetos são iguais porque eles têm valores iguais.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>It differs from reference equality, which indicates that two object references are equal because they reference the same physical object.</source>
          <target state="translated">Ele é diferente de igualdade de referência, que indica que as duas referências de objeto são iguais, porque eles referenciarem o mesmo objeto físico.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface enables you to implement customized comparisons to check for the structural equality of collection objects.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface permite que você implemente comparações personalizadas para verificar a igualdade estrutural de objetos da coleção.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>That is, you can create your own definition of structural equality and specify that this definition be used with a collection type that accepts the <ph id="ph1">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface.</source>
          <target state="translated">Ou seja, você pode criar sua própria definição de igualdade estrutural e especificar que essa definição usada com um tipo de coleção que aceita o <ph id="ph1">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>The interface has two members: <ph id="ph1">&lt;xref:System.Collections.IStructuralEquatable.Equals%2A&gt;</ph>, which tests for equality by using a specified <ph id="ph2">&lt;xref:System.Collections.IEqualityComparer&gt;</ph> implementation, and <ph id="ph3">&lt;xref:System.Collections.IStructuralEquatable.GetHashCode%2A&gt;</ph>, which returns identical hash codes for objects that are equal.</source>
          <target state="translated">A interface tem dois membros: <ph id="ph1">&lt;xref:System.Collections.IStructuralEquatable.Equals%2A&gt;</ph>, que testa a igualdade usando um especificado <ph id="ph2">&lt;xref:System.Collections.IEqualityComparer&gt;</ph> implementação, e <ph id="ph3">&lt;xref:System.Collections.IStructuralEquatable.GetHashCode%2A&gt;</ph>, que retorna códigos de hash idênticos para os objetos são iguais.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface supports only custom comparisons for structural equality.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface oferece suporte a apenas comparações personalizadas para igualdade estrutural.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IStructuralComparable&gt;</ph> interface supports custom structural comparisons for sorting and ordering.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Collections.IStructuralComparable&gt;</ph> interface oferece suporte a comparações estruturais personalizadas para classificação e ordenação.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>The .NET Framework also provides default equality comparers, which are returned by the <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType&gt;</ph> properties.</source>
          <target state="translated">O .NET Framework também fornece padrão comparadores de igualdade, que são retornados pelo <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> e <ph id="ph2">&lt;xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType&gt;</ph> propriedades.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>For more information, see the example.</source>
          <target state="translated">Para obter mais informações, consulte o exemplo.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>The generic tuple classes (<ph id="ph1">&lt;xref:System.Tuple%601&gt;</ph>, <ph id="ph2">&lt;xref:System.Tuple%602&gt;</ph>, <ph id="ph3">&lt;xref:System.Tuple%603&gt;</ph>, and so on) and the <ph id="ph4">&lt;xref:System.Array&gt;</ph> class provide explicit implementations of the <ph id="ph5">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface.</source>
          <target state="translated">As classes de tupla genérico (<ph id="ph1">&lt;xref:System.Tuple%601&gt;</ph>, <ph id="ph2">&lt;xref:System.Tuple%602&gt;</ph>, <ph id="ph3">&lt;xref:System.Tuple%603&gt;</ph>, e assim por diante) e o <ph id="ph4">&lt;xref:System.Array&gt;</ph> classe fornecer implementações explícitas do <ph id="ph5">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>By casting (in C#) or converting (in Visual Basic) the current instance of an array or tuple to an <ph id="ph1">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface value and providing your <ph id="ph2">&lt;xref:System.Collections.IEqualityComparer&gt;</ph> implementation as an argument to the <ph id="ph3">&lt;xref:System.Collections.IStructuralEquatable.Equals%2A&gt;</ph> method, you can define a custom equality comparison for the array or collection.</source>
          <target state="translated">Conversão (em c#) ou convertendo (no Visual Basic) a instância atual de uma matriz ou coleção de itens para um <ph id="ph1">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> valor interface e fornecendo o <ph id="ph2">&lt;xref:System.Collections.IEqualityComparer&gt;</ph> implementação como um argumento para o <ph id="ph3">&lt;xref:System.Collections.IStructuralEquatable.Equals%2A&gt;</ph> método, você pode definir uma comparação de igualdade personalizado para a matriz ou coleção.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>The default equality comparer, <ph id="ph1">`EqualityComparer&lt;Object&gt;.Default.Equals`</ph>, considers two <ph id="ph2">`NaN`</ph> values to be equal.</source>
          <target state="translated">O comparador de igualdade padrão, <ph id="ph1">`EqualityComparer&lt;Object&gt;.Default.Equals`</ph>, considera dois <ph id="ph2">`NaN`</ph> valores são iguais.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>However, in some cases, you may want the comparison of <ph id="ph1">`NaN`</ph> values for equality to return <ph id="ph2">`false`</ph>, which indicates that the values cannot be compared.</source>
          <target state="translated">No entanto, em alguns casos, convém a comparação de <ph id="ph1">`NaN`</ph> igualdade retornar valores de <ph id="ph2">`false`</ph>, que indica que os valores não podem ser comparados.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>The following example defines a <ph id="ph1">`NanComparer`</ph> class that implements the <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface.</source>
          <target state="translated">O exemplo a seguir define uma classe <ph id="ph1">`NanComparer`</ph> que implementa a interface <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>It compares two <ph id="ph1">&lt;xref:System.Double&gt;</ph> or two <ph id="ph2">&lt;xref:System.Single&gt;</ph> values by using the equality operator.</source>
          <target state="translated">Compara dois <ph id="ph1">&lt;xref:System.Double&gt;</ph> ou dois <ph id="ph2">&lt;xref:System.Single&gt;</ph> valores usando o operador de igualdade.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>It passes values of any other type to the default equality comparer.</source>
          <target state="translated">Ele passa valores de qualquer outro tipo para o comparador de igualdade padrão.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>The following example creates two identical 3-tuple objects whose components consist of three <ph id="ph1">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">O exemplo a seguir cria dois objetos de tupla de 3 idênticos cujos componentes consistem em três <ph id="ph1">&lt;xref:System.Double&gt;</ph> valores.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>The value of the second component is <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">O valor do segundo componente é <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>The example then calls the <ph id="ph1">&lt;xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType&gt;</ph> method, and it calls the <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType&gt;</ph> method three times.</source>
          <target state="translated">O exemplo, em seguida, chama o <ph id="ph1">&lt;xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType&gt;</ph> método e chama o <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType&gt;</ph> método três vezes.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>The first time, it passes the default equality comparer that is returned by the <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Na primeira vez, ele passa o comparador de igualdade padrão que é retornado pelo <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>The second time, it passes the default equality comparer that is returned by the <ph id="ph1">&lt;xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Na segunda vez, ele passa o comparador de igualdade padrão que é retornado pelo <ph id="ph1">&lt;xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>The third time, it passes the custom <ph id="ph1">`NanComparer`</ph> object.</source>
          <target state="translated">A terceira vez, ele passa personalizado <ph id="ph1">`NanComparer`</ph> objeto.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>As the output from the example shows, the first three method calls return <ph id="ph1">`true`</ph>, whereas the fourth call returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Como mostra a saída do exemplo, o método três primeiros chama retorno <ph id="ph1">`true`</ph>, enquanto a quarta chamada retorna <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The object to compare with the current instance.</source>
          <target state="translated">O objeto a ser comparado com a instância atual.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>An object that determines whether the current instance and <bpt id="p1">&lt;c&gt;</bpt>other<ept id="p1">&lt;/c&gt;</ept> are equal.</source>
          <target state="translated">Um objeto que determina se a instância atual e <bpt id="p1">&lt;c&gt;</bpt>other<ept id="p1">&lt;/c&gt;</ept> são iguais.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>Determines whether an object is structurally equal to the current instance.</source>
          <target state="translated">Determina se um objeto é estruturalmente igual à instância atual.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the two objects are equal; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se os dois objetos forem iguais; do contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IStructuralEquatable.Equals%2A&gt;</ph> method supports custom structural comparison of array and tuple objects.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Collections.IStructuralEquatable.Equals%2A&gt;</ph> método dá suporte à personalizado comparação estrutural de objetos de tupla e de matriz.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>This method in turn calls the <ph id="ph1">`comparer`</ph> object's <ph id="ph2">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType&gt;</ph> method to compare individual array elements or tuple components, starting with the first element or component.</source>
          <target state="translated">Este método chama o <ph id="ph1">`comparer`</ph> do objeto <ph id="ph2">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType&gt;</ph> método para comparar elementos individuais da matriz ou componentes de tupla, começando com o primeiro elemento ou componente.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The individual calls to <ph id="ph1">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType&gt;</ph> end and the <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType&gt;</ph> method returns a value either when a method call returns <ph id="ph3">`false`</ph> or after all array elements or tuple components have been compared.</source>
          <target state="translated">Chamadas individuais para <ph id="ph1">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType&gt;</ph> final e o <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType&gt;</ph> método retorna um valor ou uma chamada de método retorna <ph id="ph3">`false`</ph> ou depois de todos os elementos de matriz ou componentes de tupla comparados.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The default equality comparer, <ph id="ph1">`EqualityComparer&lt;Object&gt;.Default.Equals`</ph>, considers two <ph id="ph2">`NaN`</ph> values to be equal.</source>
          <target state="translated">O comparador de igualdade padrão, <ph id="ph1">`EqualityComparer&lt;Object&gt;.Default.Equals`</ph>, considera dois <ph id="ph2">`NaN`</ph> valores são iguais.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>However, in some cases, you may want the comparison of <ph id="ph1">`NaN`</ph> values for equality to return <ph id="ph2">`false`</ph>, which indicates that the values cannot be compared.</source>
          <target state="translated">No entanto, em alguns casos, convém a comparação de <ph id="ph1">`NaN`</ph> igualdade retornar valores de <ph id="ph2">`false`</ph>, que indica que os valores não podem ser comparados.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The following example defines a <ph id="ph1">`NanComparer`</ph> class that implements the <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface.</source>
          <target state="translated">O exemplo a seguir define uma classe <ph id="ph1">`NanComparer`</ph> que implementa a interface <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>It compares two <ph id="ph1">&lt;xref:System.Double&gt;</ph> or two <ph id="ph2">&lt;xref:System.Single&gt;</ph> values by using the equality operator.</source>
          <target state="translated">Compara dois <ph id="ph1">&lt;xref:System.Double&gt;</ph> ou dois <ph id="ph2">&lt;xref:System.Single&gt;</ph> valores usando o operador de igualdade.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>It passes values of any other type to the default equality comparer.</source>
          <target state="translated">Ele passa valores de qualquer outro tipo para o comparador de igualdade padrão.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The following example creates two identical 3-tuple objects whose components consist of three <ph id="ph1">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">O exemplo a seguir cria dois objetos de tupla de 3 idênticos cujos componentes consistem em três <ph id="ph1">&lt;xref:System.Double&gt;</ph> valores.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The value of the second component is <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">O valor do segundo componente é <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The example then calls the <ph id="ph1">&lt;xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType&gt;</ph> method, and it calls the <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType&gt;</ph> method three times.</source>
          <target state="translated">O exemplo, em seguida, chama o <ph id="ph1">&lt;xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType&gt;</ph> método e chama o <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType&gt;</ph> método três vezes.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The first time, it passes the default equality comparer that is returned by the <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Na primeira vez, ele passa o comparador de igualdade padrão que é retornado pelo <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The second time, it passes the default equality comparer that is returned by the <ph id="ph1">&lt;xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Na segunda vez, ele passa o comparador de igualdade padrão que é retornado pelo <ph id="ph1">&lt;xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The third time, it passes the custom <ph id="ph1">`NanComparer`</ph> object.</source>
          <target state="translated">A terceira vez, ele passa personalizado <ph id="ph1">`NanComparer`</ph> objeto.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>As the output from the example shows, the first three method calls return <ph id="ph1">`true`</ph>, whereas the fourth call returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Como mostra a saída do exemplo, o método três primeiros chama retorno <ph id="ph1">`true`</ph>, enquanto a quarta chamada retorna <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)">
          <source>An object that computes the hash code of the current object.</source>
          <target state="translated">Um objeto que calcula o código hash do objeto atual.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)">
          <source>Returns a hash code for the current instance.</source>
          <target state="translated">Retorna um código hash para a instância atual.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)">
          <source>The hash code for the current instance.</source>
          <target state="translated">O código hash da instância atual.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)">
          <source>Implement this method to return customized hash codes for collection objects that correspond to the customized comparison for structural equality provided by the <ph id="ph1">&lt;xref:System.Collections.IStructuralEquatable.Equals%2A&gt;</ph> method.</source>
          <target state="translated">Implementar esse método para retornar códigos hash personalizadas para objetos de coleção que correspondem à comparação personalizada para igualdade estrutural fornecida pelo <ph id="ph1">&lt;xref:System.Collections.IStructuralEquatable.Equals%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)">
          <source>If the <ph id="ph1">&lt;see cref="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" /&gt;</ph> method returns <ph id="ph2">&lt;see langword="true" /&gt;</ph> for two objects, the values returned by the <ph id="ph3">&lt;see cref="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" /&gt;</ph> method for the two objects must also be equal.</source>
          <target state="translated">Se o <ph id="ph1">&lt;see cref="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" /&gt;</ph> método <ph id="ph2">&lt;see langword="true" /&gt;</ph> de dois objetos, os valores retornados pelo <ph id="ph3">&lt;see cref="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" /&gt;</ph> método para os dois objetos também deve ser igual.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>