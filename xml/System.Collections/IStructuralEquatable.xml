<Type Name="IStructuralEquatable" FullName="System.Collections.IStructuralEquatable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="24f9f86b4e1994a1305d34f6917275d03ae43de0" />
    <Meta Name="ms.sourcegitcommit" Value="6ee2e6b2c5d7c5bd66feeb362d29e65fdf858836" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="11/15/2018" />
    <Meta Name="ms.locfileid" Value="51689878" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStructuralEquatable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.IStructuralEquatable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStructuralEquatable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStructuralEquatable" />
  <TypeSignature Language="F#" Value="type IStructuralEquatable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Define métodos para dar suporte à comparação de objetos para igualdade estrutural.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Igualdade estrutural significa que dois objetos são iguais porque têm valores iguais. Ele difere de igualdade de referência, que indica que duas referências de objeto são iguais porque eles referenciam o mesmo objeto físico. O <xref:System.Collections.IStructuralEquatable> interface permite que você implemente comparações personalizadas para verificar a igualdade estrutural de objetos da coleção. Ou seja, você pode criar sua própria definição de igualdade estrutural e especificar que essa definição de ser usada com um tipo de coleção que aceita o <xref:System.Collections.IStructuralEquatable> interface. A interface tem dois membros: <xref:System.Collections.IStructuralEquatable.Equals%2A>, que testa a igualdade usando um <xref:System.Collections.IEqualityComparer> implementação, e <xref:System.Collections.IStructuralEquatable.GetHashCode%2A>, que retorna códigos de hash idênticos para os objetos são iguais.  
  
> [!NOTE]
>  O <xref:System.Collections.IStructuralEquatable> interface dá suporte a apenas comparações personalizadas para igualdade estrutural. O <xref:System.Collections.IStructuralComparable> interface dá suporte a comparações estruturais personalizadas para classificação e ordenação.  
  
 O .NET Framework também fornece padrão comparadores de igualdade, que são retornados pelo <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> e <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> propriedades. Para obter mais informações, consulte o exemplo.  
  
 As classes de tupla genérico (<xref:System.Tuple%601>, <xref:System.Tuple%602>, <xref:System.Tuple%603>e assim por diante) e o <xref:System.Array> classe forneça implementações explícitas do <xref:System.Collections.IStructuralEquatable> interface. Conversão (em c#) ou convertendo (no Visual Basic) a instância atual de uma matriz ou uma tupla a um <xref:System.Collections.IStructuralEquatable> valor da interface e fornecendo sua <xref:System.Collections.IEqualityComparer> implementação como um argumento para o <xref:System.Collections.IStructuralEquatable.Equals%2A> método, você pode definir uma igualdade personalizada comparação de matriz ou coleção.  
  
   
  
## Examples  
 O comparador de igualdade padrão, `EqualityComparer<Object>.Default.Equals`, considera dois `NaN` valores são iguais. No entanto, em alguns casos, você pode querer a comparação dos `NaN` valores de igualdade retorne `false`, que indica que os valores não podem ser comparados. O exemplo a seguir define uma classe `NanComparer` que implementa a interface <xref:System.Collections.IStructuralEquatable>. Ele compara duas <xref:System.Double> ou dois <xref:System.Single> valores usando o operador de igualdade. Ele passa os valores de qualquer outro tipo para o comparador de igualdade padrão.  
  
 [!code-csharp[System.Collections.IStructuralEquatable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#1)]
 [!code-vb[System.Collections.IStructuralEquatable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#1)]  
  
 O exemplo a seguir cria dois objetos de tupla de 3 idênticos cujos componentes consistem em três <xref:System.Double> valores. O valor do segundo componente é <xref:System.Double.NaN?displayProperty=nameWithType>. O exemplo, em seguida, chama o <xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType> método e chama o <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> método três vezes. Na primeira vez, ele passa o comparador de igualdade padrão que é retornado pelo <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> propriedade. Na segunda vez, ele passa o comparador de igualdade padrão que é retornado pelo <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> propriedade. Pela terceira vez, ele passa personalizado `NanComparer` objeto. Como mostra a saída do exemplo, o método três primeiros chama retorno `true`, considerando a quarta chamada retorna `false`.  
  
 [!code-csharp[System.Collections.IStructuralEquatable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#2)]
 [!code-vb[System.Collections.IStructuralEquatable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.IEqualityComparer" />
    <altmember cref="T:System.Collections.IStructuralComparable" />
    <altmember cref="P:System.Collections.StructuralComparisons.StructuralEqualityComparer" />
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Object, comparer As IEqualityComparer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member Equals : obj * System.Collections.IEqualityComparer -&gt; bool" Usage="iStructuralEquatable.Equals (other, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other">O objeto a ser comparado com a instância atual.</param>
        <param name="comparer">Um objeto que determina se a instância atual e <paramref name="other" /> são iguais.</param>
        <summary>Determina se um objeto é estruturalmente igual à instância atual.</summary>
        <returns>
          <see langword="true" /> se os dois objetos forem iguais; do contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Collections.IStructuralEquatable.Equals%2A> método dá suporte a personalizado comparação estrutural de objetos de matriz e de tupla. Esse método por sua vez chama o `comparer` do objeto <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> método para comparar elementos individuais da matriz ou componentes de tupla, começando com o primeiro elemento ou um componente. Chama o indivíduo <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> final e o <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> método retorna um valor ou quando uma chamada de método retorna `false` ou depois que todos os elementos de matriz ou componentes da tupla são comparadas.  
  
   
  
## Examples  
 O comparador de igualdade padrão, `EqualityComparer<Object>.Default.Equals`, considera dois `NaN` valores são iguais. No entanto, em alguns casos, você pode querer a comparação dos `NaN` valores de igualdade retorne `false`, que indica que os valores não podem ser comparados. O exemplo a seguir define uma classe `NanComparer` que implementa a interface <xref:System.Collections.IStructuralEquatable>. Ele compara duas <xref:System.Double> ou dois <xref:System.Single> valores usando o operador de igualdade. Ele passa os valores de qualquer outro tipo para o comparador de igualdade padrão.  
  
 [!code-csharp[System.Collections.IStructuralEquatable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#1)]
 [!code-vb[System.Collections.IStructuralEquatable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#1)]  
  
 O exemplo a seguir cria dois objetos de tupla de 3 idênticos cujos componentes consistem em três <xref:System.Double> valores. O valor do segundo componente é <xref:System.Double.NaN?displayProperty=nameWithType>. O exemplo, em seguida, chama o <xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType> método e chama o <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> método três vezes. Na primeira vez, ele passa o comparador de igualdade padrão que é retornado pelo <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> propriedade. Na segunda vez, ele passa o comparador de igualdade padrão que é retornado pelo <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> propriedade. Pela terceira vez, ele passa personalizado `NanComparer` objeto. Como mostra a saída do exemplo, o método três primeiros chama retorno `true`, considerando a quarta chamada retorna `false`.  
  
 [!code-csharp[System.Collections.IStructuralEquatable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#2)]
 [!code-vb[System.Collections.IStructuralEquatable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.StructuralComparisons.StructuralEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (comparer As IEqualityComparer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode(System::Collections::IEqualityComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member GetHashCode : System.Collections.IEqualityComparer -&gt; int" Usage="iStructuralEquatable.GetHashCode comparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer">Um objeto que calcula o código hash do objeto atual.</param>
        <summary>Retorna um código hash para a instância atual.</summary>
        <returns>O código hash da instância atual.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implemente este método para retornar códigos de hash personalizado para objetos de coleção que correspondem à comparação personalizada para igualdade estrutural fornecida pelo <xref:System.Collections.IStructuralEquatable.Equals%2A> método.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Se o <see cref="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" /> retorn <see langword="true" /> para dois objetos, os valores retornados pelo <see cref="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" /> método para os dois objetos também deve ser igual.</para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>