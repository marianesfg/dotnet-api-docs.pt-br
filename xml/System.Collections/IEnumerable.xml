<Type Name="IEnumerable" FullName="System.Collections.IEnumerable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="362b87879b0f88ac728309df6d13c694bcde1a52" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.IEnumerable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("496B0ABE-CDEE-11d3-88E8-00902754C43A")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="5a5fb-101">Expõe um enumerador que dá suporte a uma iteração simples em uma coleção não genérica.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5a5fb-101">Exposes an enumerator, which supports a simple iteration over a non-generic collection.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a5fb-102"><xref:System.Collections.IEnumerable> é a interface base para todas as coleções não genéricas que podem ser enumerados.</span><span class="sxs-lookup"><span data-stu-id="5a5fb-102"><xref:System.Collections.IEnumerable> is the base interface for all non-generic collections that can be enumerated.</span></span> <span data-ttu-id="5a5fb-103">Para a versão genérica dessa interface consulte <xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="5a5fb-103">For the generic version of this interface see <xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType>.</span></span> <span data-ttu-id="5a5fb-104"><xref:System.Collections.IEnumerable> contém um único método, <xref:System.Collections.IEnumerable.GetEnumerator%2A>, que retorna um <xref:System.Collections.IEnumerator>.</span><span class="sxs-lookup"><span data-stu-id="5a5fb-104"><xref:System.Collections.IEnumerable> contains a single method, <xref:System.Collections.IEnumerable.GetEnumerator%2A>, which returns an <xref:System.Collections.IEnumerator>.</span></span> <span data-ttu-id="5a5fb-105"><xref:System.Collections.IEnumerator> fornece a capacidade de iterar pela coleção ao expor um <xref:System.Collections.IEnumerator.Current%2A> propriedade e <xref:System.Collections.IEnumerator.MoveNext%2A> e <xref:System.Collections.IEnumerator.Reset%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="5a5fb-105"><xref:System.Collections.IEnumerator> provides the ability to iterate through the collection by exposing a <xref:System.Collections.IEnumerator.Current%2A> property and <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Reset%2A> methods.</span></span>  
  
 <span data-ttu-id="5a5fb-106">É uma prática recomendada para implementar <xref:System.Collections.IEnumerable> e <xref:System.Collections.IEnumerator> em suas classes de coleção para habilitar o `foreach` (`For Each` no Visual Basic) sintaxe, no entanto implementando <xref:System.Collections.IEnumerable> não é necessária.</span><span class="sxs-lookup"><span data-stu-id="5a5fb-106">It is a best practice to implement <xref:System.Collections.IEnumerable> and <xref:System.Collections.IEnumerator> on your collection classes to enable the `foreach` (`For Each` in Visual Basic) syntax, however implementing <xref:System.Collections.IEnumerable> is not required.</span></span> <span data-ttu-id="5a5fb-107">Se sua coleção não implementa <xref:System.Collections.IEnumerable>, você ainda deve seguir o padrão de iterador para oferecer suporte a essa sintaxe, fornecendo um `GetEnumerator` método que retorna uma interface, classe ou estrutura.</span><span class="sxs-lookup"><span data-stu-id="5a5fb-107">If your collection does not implement <xref:System.Collections.IEnumerable>, you must still follow the iterator pattern to support this syntax by providing a `GetEnumerator` method that returns an interface, class or struct.</span></span> <span data-ttu-id="5a5fb-108">Ao usar o Visual Basic, você deve fornecer um <xref:System.Collections.IEnumerator> implementação, o que é retornada pelo `GetEnumerator`.</span><span class="sxs-lookup"><span data-stu-id="5a5fb-108">When using Visual Basic, you must provide an <xref:System.Collections.IEnumerator> implementation, which is returned by `GetEnumerator`.</span></span> <span data-ttu-id="5a5fb-109">Quando o desenvolvimento com o c#, você deve fornecer uma classe que contém um `Current` propriedade e `MoveNext` e `Reset` métodos conforme descrito pelo <xref:System.Collections.IEnumerator>, mas a classe precisa implementar <xref:System.Collections.IEnumerator>.</span><span class="sxs-lookup"><span data-stu-id="5a5fb-109">When developing with C# you must provide a class that contains a `Current` property, and `MoveNext` and `Reset` methods as described by <xref:System.Collections.IEnumerator>, but the class does not have to implement <xref:System.Collections.IEnumerator>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5a5fb-110">O exemplo de código a seguir demonstra a prática recomendada para iterar uma coleção personalizada Implementando o <xref:System.Collections.IEnumerable> e <xref:System.Collections.IEnumerator> interfaces.</span><span class="sxs-lookup"><span data-stu-id="5a5fb-110">The following code example demonstrates the best practice for iterating a custom collection by implementing the <xref:System.Collections.IEnumerable> and <xref:System.Collections.IEnumerator> interfaces.</span></span> <span data-ttu-id="5a5fb-111">Neste exemplo, os membros dessas interfaces não forem chamados explicitamente, mas eles são implementados para suporte ao uso de `foreach` (`For Each` no Visual Basic) para iterar pela coleção.</span><span class="sxs-lookup"><span data-stu-id="5a5fb-111">In this example, members of these interfaces are not explicitly called, but they are implemented to support the use of `foreach` (`For Each` in Visual Basic) to iterate through the collection.</span></span> <span data-ttu-id="5a5fb-112">Este exemplo é um aplicativo de Console concluído.</span><span class="sxs-lookup"><span data-stu-id="5a5fb-112">This example is a complete Console app.</span></span> <span data-ttu-id="5a5fb-113">Para compilar o aplicativo do Visual Basic, altere o **objeto de inicialização** para **Sub Main** do projeto **propriedades** página.</span><span class="sxs-lookup"><span data-stu-id="5a5fb-113">To compile the Visual Basic app, change the **Startup object** to **Sub Main** in the project’s **Properties** page.</span></span>  
  
 <span data-ttu-id="5a5fb-114">Para obter um exemplo que mostra como implementar a <xref:System.Collections.IEnumerable> interface, consulte [Implementando a IEnumerable Interface em uma classe de coleção](http://code.msdn.microsoft.com/Implementing-the-e1708a24)</span><span class="sxs-lookup"><span data-stu-id="5a5fb-114">For a sample that shows how to implement the <xref:System.Collections.IEnumerable> interface, see [Implementing the IEnumerable Interface in a Collection Class](http://code.msdn.microsoft.com/Implementing-the-e1708a24)</span></span>  
  
 [!code-csharp[System.Collections_EnumeratorInterfaces#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections_EnumeratorInterfaces/cs/ienumerator.cs#1)]
 [!code-vb[System.Collections_EnumeratorInterfaces#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections_EnumeratorInterfaces/vb/ienumerator.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.IEnumerator" />
    <altmember cref="T:System.Collections.Generic.IEnumerable`1" />
  </Docs>
  <Members>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IEnumerable.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5a5fb-115">Retorna um enumerador que itera em uma coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a5fb-115">Returns an enumerator that iterates through a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5a5fb-116">Um objeto <see cref="T:System.Collections.IEnumerator" /> que pode ser usado para iterar pela coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a5fb-116">An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a5fb-117">O `foreach` instrução de linguagem c# (`For Each` no Visual Basic) oculta a complexidade dos enumeradores.</span><span class="sxs-lookup"><span data-stu-id="5a5fb-117">The `foreach` statement of the C# language (`For Each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="5a5fb-118">Portanto, o uso de `foreach` é recomendado, em vez de manipular diretamente o enumerador.</span><span class="sxs-lookup"><span data-stu-id="5a5fb-118">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="5a5fb-119">Os enumeradores podem ser usados para ler os dados na coleção, mas não podem ser usados para modificar a coleção subjacente.</span><span class="sxs-lookup"><span data-stu-id="5a5fb-119">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="5a5fb-120">Inicialmente, o enumerador é posicionado antes do primeiro elemento da coleção.</span><span class="sxs-lookup"><span data-stu-id="5a5fb-120">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="5a5fb-121">O método <xref:System.Collections.IEnumerator.Reset%2A> também retorna o enumerador a essa posição.</span><span class="sxs-lookup"><span data-stu-id="5a5fb-121">The <xref:System.Collections.IEnumerator.Reset%2A> method also brings the enumerator back to this position.</span></span>  <span data-ttu-id="5a5fb-122">Nesta posição, o <xref:System.Collections.IEnumerator.Current%2A> propriedade está definida.</span><span class="sxs-lookup"><span data-stu-id="5a5fb-122">At this position, the <xref:System.Collections.IEnumerator.Current%2A> property is undefined.</span></span> <span data-ttu-id="5a5fb-123">Por isso, você deve chamar o método <xref:System.Collections.IEnumerator.MoveNext%2A> para avançar o enumerador até o primeiro elemento da coleção antes de ler o valor de <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="5a5fb-123">Therefore, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="5a5fb-124"><xref:System.Collections.IEnumerator.Current%2A> retorna o mesmo objeto até <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> ser chamado.</span><span class="sxs-lookup"><span data-stu-id="5a5fb-124"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="5a5fb-125"><xref:System.Collections.IEnumerator.MoveNext%2A> define <xref:System.Collections.IEnumerator.Current%2A> como o próximo elemento.</span><span class="sxs-lookup"><span data-stu-id="5a5fb-125"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="5a5fb-126">Caso <xref:System.Collections.IEnumerator.MoveNext%2A> passe o final da coleção, o enumerador é posicionado após o último elemento na coleção e <xref:System.Collections.IEnumerator.MoveNext%2A> retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="5a5fb-126">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="5a5fb-127">Quando o enumerador está nessa posição, as chamadas subsequentes para <xref:System.Collections.IEnumerator.MoveNext%2A> também retornam `false`.</span><span class="sxs-lookup"><span data-stu-id="5a5fb-127">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="5a5fb-128">Se a última chamada <xref:System.Collections.IEnumerator.MoveNext%2A> retorna `false`, <xref:System.Collections.IEnumerator.Current%2A> é indefinido.</span><span class="sxs-lookup"><span data-stu-id="5a5fb-128">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="5a5fb-129">Para definir <xref:System.Collections.IEnumerator.Current%2A> como o primeiro elemento da coleção novamente, é possível chamar <xref:System.Collections.IEnumerator.Reset%2A> seguido de <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="5a5fb-129">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="5a5fb-130">Um enumerador permanece válido desde que a coleção continue inalterada.</span><span class="sxs-lookup"><span data-stu-id="5a5fb-130">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="5a5fb-131">Se forem feitas alterações na coleção, como adicionar, modificar ou excluir elementos, o enumerador será invalidado de maneira irrevogável e seu comportamento permanecerá indefinido.</span><span class="sxs-lookup"><span data-stu-id="5a5fb-131">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="5a5fb-132">O enumerador não tem acesso exclusivo à coleção; por isso, a enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="5a5fb-132">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="5a5fb-133">Para garantir acesso thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração.</span><span class="sxs-lookup"><span data-stu-id="5a5fb-133">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="5a5fb-134">Para permitir que a coleção a ser acessado por vários threads para leitura e gravação, você deve implementar sua sincronização.</span><span class="sxs-lookup"><span data-stu-id="5a5fb-134">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5a5fb-135">O exemplo de código a seguir demonstra a implementação do <xref:System.Collections.IEnumerable> interfaces para uma coleção personalizada.</span><span class="sxs-lookup"><span data-stu-id="5a5fb-135">The following code example demonstrates the implementation of the <xref:System.Collections.IEnumerable> interfaces for a custom collection.</span></span> <span data-ttu-id="5a5fb-136">Neste exemplo, <xref:System.Collections.IEnumerable.GetEnumerator%2A> não for chamado explicitamente, mas ele é implementado para suporte ao uso de `foreach` (`For Each` no Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="5a5fb-136">In this example, <xref:System.Collections.IEnumerable.GetEnumerator%2A> is not explicitly called, but it is implemented to support the use of `foreach` (`For Each` in Visual Basic).</span></span> <span data-ttu-id="5a5fb-137">Este exemplo de código é parte de um exemplo maior para o <xref:System.Collections.IEnumerable> interface.</span><span class="sxs-lookup"><span data-stu-id="5a5fb-137">This code example is part of a larger example for the <xref:System.Collections.IEnumerable> interface.</span></span>  
  
 [!code-csharp[System.Collections_EnumeratorInterfaces#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections_EnumeratorInterfaces/cs/ienumerator.cs#1)]
 [!code-vb[System.Collections_EnumeratorInterfaces#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections_EnumeratorInterfaces/vb/ienumerator.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
  </Members>
</Type>