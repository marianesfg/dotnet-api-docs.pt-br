<Type Name="FormsAuthentication" FullName="System.Web.Security.FormsAuthentication">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e263ff699870482bd488f25313f8bb898b795019" /><Meta Name="ms.sourcegitcommit" Value="3efce15f3841385ee3ba24bd71ff0c0cf9a47815" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="04/03/2019" /><Meta Name="ms.locfileid" Value="58874794" /></Metadata><TypeSignature Language="C#" Value="public sealed class FormsAuthentication" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FormsAuthentication extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.FormsAuthentication" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FormsAuthentication" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormsAuthentication sealed" />
  <TypeSignature Language="F#" Value="type FormsAuthentication = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Gerencia os serviços de autenticação de formulários para aplicativos Web. Essa classe não pode ser herdada.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Autenticação de formulários permite que o usuário e a validação de senha para aplicativos Web que não exigem a autenticação do Windows. Com autenticação de formulários, informações do usuário são armazenadas em uma fonte de dados externa, como um <xref:System.Web.Security.Membership> banco de dados, ou no arquivo de configuração para um aplicativo. Quando um usuário é autenticado, a autenticação de formulários mantém um tíquete de autenticação em um cookie ou na URL para que um usuário autenticado não precisa fornecer credenciais com cada solicitação.  
  
 Autenticação de formulários é habilitada definindo o `mode` atributo o [autenticação](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/532aee0e(v%3dvs.100)) elemento de configuração para `Forms`. Você pode exigir que todas as solicitações para um aplicativo contêm um tíquete de autenticação de usuário válido usando o [autorização](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/8d82143t(v%3dvs.100)) elemento de configuração para negar a solicitação de qualquer usuário desconhecido, conforme mostrado no exemplo a seguir.  
  
```  
<system.web>  
  <authentication mode="Forms">  
    <forms loginUrl="login.aspx" />  
  </authentication>  
  <authorization>  
    <deny users="?" />  
  </authorization>  
</system.web>  
```  
  
 No exemplo anterior, qualquer solicitação para uma página ASP.NET que é parte do aplicativo requer um nome de usuário válido que é fornecido pela autenticação de formulários. Se nenhum nome de usuário existe, a solicitação é redirecionada ao configurado <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>.  
  
 O <xref:System.Web.Security.FormsAuthentication> classe fornece acesso a métodos e propriedades que você pode usar em um aplicativo que autentica usuários. O <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> método redireciona um navegador para configurado <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A> para os usuários façam logon em um aplicativo. O <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> método redireciona um usuário autenticado de volta para a URL original protegida que foi solicitada ou para o <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>. Também há métodos que permitem gerenciar tíquetes de autenticação de formulários, se necessário.  
  
   
  
## Examples  
 O exemplo de código a seguir mostra o arquivo Web. config para um aplicativo ASP.NET que usa o provedor de associação do ASP.NET para autenticação de formulários e requer que todos os usuários sejam autenticados.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
      <providers>  
        <add name="SqlProvider"  
          type="System.Web.Security.SqlMembershipProvider"  
          connectionStringName="SqlServices"  
          enablePasswordRetrieval="false"  
          enablePasswordReset="true"  
          requiresQuestionAndAnswer="true"  
          passwordFormat="Hashed"  
          applicationName="/" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 O exemplo de código a seguir mostra a página de logon para um aplicativo ASP.NET que usa a autenticação de formulários e associação do ASP.NET.  
  
> [!IMPORTANT]
>  Este exemplo contém uma caixa de texto que aceita entrada do usuário, que é uma potencial ameaça de segurança. Por padrão, as páginas da Web do ASP.NET validam que a entrada do usuário não inclui elementos HTML ou script. Para obter mais informações, consulte [Visão geral de explorações de script](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/logincs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/loginvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Web.AspNetHostingPermission">Para usar o <see cref="T:System.Web.Security.FormsAuthentication" /> classe em um ambiente hospedado. Valor de demanda: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />. Valor de permissão: <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" />.</permission>
    <related type="Article" href="https://msdn.microsoft.com/library/77e21ba2-bad1-4967-a8ec-74942dea7e47">Provedor de autenticação de formulários</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormsAuthentication ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormsAuthentication();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Security.FormsAuthentication" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este construtor não se destina a ser usado no seu código.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Segurança do aplicativo Web do ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Authenticate">
      <MemberSignature Language="C#" Value="public static bool Authenticate (string name, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Authenticate(string name, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.Authenticate(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Authenticate (name As String, password As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Authenticate(System::String ^ name, System::String ^ password);" />
      <MemberSignature Language="F#" Value="static member Authenticate : string * string -&gt; bool" Usage="System.Web.Security.FormsAuthentication.Authenticate (name, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("The recommended alternative is to use the Membership APIs, such as Membership.ValidateUser. For more information, see http://go.microsoft.com/fwlink/?LinkId=252463.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">O nome do usuário.</param>
        <param name="password">A senha do usuário.</param>
        <summary>Valida um nome de usuário e senha com relação às credenciais armazenadas no arquivo de configuração do aplicativo.</summary>
        <returns><see langword="true" /> se o nome de usuário e a senha forem válidos; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O método Authenticate verifica as credenciais de usuário que são armazenadas em do [credenciais](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/e01fc50a(v%3dvs.100)) seção do arquivo de configuração do aplicativo. Como alternativa, você pode usar a associação do ASP.NET para armazenar as credenciais do usuário e a chamada a <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> para verificar as credenciais. Para obter mais informações, consulte [Gerenciando usuários usando associação](https://msdn.microsoft.com/library/824c3a24-f0af-427c-a652-0d2d1e9397cd).  
  
 Para maior segurança, você pode criptografar as senhas armazenadas no arquivo de configuração para um aplicativo usando o <xref:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile%2A> método.  
  
   
  
## Examples  
 O exemplo de código a seguir mostra as credenciais de usuário armazenadas no arquivo Web. config para um aplicativo. Os valores de senha tiveram sido transformada em hash usando o <xref:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile%2A> método.  
  
 `<authentication mode="Forms">`  
  
 `<forms loginUrl="login.aspx">`  
  
 `<credentials passwordFormat="SHA1">`  
  
 `<user name="user1"   password="27CE4CA7FBF00685AF2F617E3F5BBCAFF7B7403C" />`  
  
 `<user name="user2"   password="D108F80936F78DFDD333141EBC985B0233A30C7A" />`  
  
 `<user name="user3" password="7BDB09781A3F23885CD43177C0508B375CB1B7E9"/>`  
  
 `</credentials>`  
  
 `</forms>`  
  
 `</authentication>`  
  
 O exemplo de código a seguir mostra uma página de logon que usa o <xref:System.Web.Security.FormsAuthentication.Authenticate%2A> método para validar as credenciais do usuário.  
  
> [!IMPORTANT]
>  Este exemplo contém uma caixa de texto que aceita entrada do usuário, que é uma potencial ameaça de segurança. Por padrão, as páginas da Web do ASP.NET validam que a entrada do usuário não inclui elementos HTML ou script. Para obter mais informações, consulte [Visão geral de explorações de script](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.FormsAuthentication#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/CS/logincs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.FormsAuthentication#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/VB/loginvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Segurança do aplicativo Web do ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CookieDomain">
      <MemberSignature Language="C#" Value="public static string CookieDomain { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string CookieDomain" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.CookieDomain" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CookieDomain As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ CookieDomain { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CookieDomain : string" Usage="System.Web.Security.FormsAuthentication.CookieDomain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o valor do domínio do cookie de autenticação de formulários.</summary>
        <value>O <see cref="P:System.Web.HttpCookie.Domain" /> do cookie de autenticação de formulários. O padrão é uma cadeia de caracteres vazia ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Security.FormsAuthentication.CookieDomain%2A> o valor da propriedade é definido no arquivo de configuração para um aplicativo ASP.NET usando o `domain` atributo da [formulários](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1d3t3c61(v%3dvs.100)) elemento de configuração. O <xref:System.Web.Security.FormsAuthentication.CookieDomain%2A> determina o valor da propriedade a <xref:System.Web.HttpCookie.Domain%2A> que o cookie será usado.  
  
   
  
## Examples  
 O seguinte exemplo de código define o `domain` atributo no arquivo Web. config.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    cookieless="UseCookies"  
    domain="contoso.com" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Segurança do aplicativo Web do ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CookieMode">
      <MemberSignature Language="C#" Value="public static System.Web.HttpCookieMode CookieMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Web.HttpCookieMode CookieMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.CookieMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CookieMode As HttpCookieMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::HttpCookieMode CookieMode { System::Web::HttpCookieMode get(); };" />
      <MemberSignature Language="F#" Value="member this.CookieMode : System.Web.HttpCookieMode" Usage="System.Web.Security.FormsAuthentication.CookieMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookieMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se o aplicativo está configurado para autenticação de formulários sem cookies.</summary>
        <value>Um dos valores <see cref="T:System.Web.HttpCookieMode" /> que indica se o aplicativo está configurado para autenticação de formulários sem cookies. O padrão é <see cref="F:System.Web.HttpCookieMode.UseDeviceProfile" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Security.FormsAuthentication.CookieMode%2A> propriedade reflete o valor para o `cookieless` atributo da [formulários](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1d3t3c61(v%3dvs.100)) elemento de configuração. O <xref:System.Web.Security.FormsAuthentication.CookieMode%2A> propriedade determina se o <xref:System.Web.Security.FormsAuthenticationTicket> valor será armazenado em um cookie de sessão no navegador ou armazenado no <xref:System.Web.HttpRequest.QueryString%2A> propriedade.  
  
> [!NOTE]
>  Quando o <xref:System.Web.Security.FormsAuthenticationTicket> valor é armazenado no URI, o tamanho do URI gerado pode ser maior que o comprimento máximo permitido. Isso é mais provável de ocorrer quando o <xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A> estiver definida como o nome do aplicativo e o nome do aplicativo é longo (40 ou mais caracteres), nomes de usuário no aplicativo são longos ou ao longo <xref:System.Web.Security.FormsAuthenticationTicket.UserData%2A> cadeias de caracteres são armazenadas no <xref:System.Web.Security.FormsAuthenticationTicket> valor. Se o URI gerado é muito longo, o servidor da Web retornará um `400 - Bad Request` erro.  
  
   
  
## Examples  
 O seguinte exemplo de código define a `cookieless` atributo `AutoDetect` no arquivo Web. config.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    cookieless="AutoDetect" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Segurança do aplicativo Web do ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CookieSameSite">
      <MemberSignature Language="C#" Value="public static System.Web.SameSiteMode CookieSameSite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Web.SameSiteMode CookieSameSite" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.CookieSameSite" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CookieSameSite As SameSiteMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::SameSiteMode CookieSameSite { System::Web::SameSiteMode get(); };" />
      <MemberSignature Language="F#" Value="member this.CookieSameSite : System.Web.SameSiteMode" Usage="System.Web.Security.FormsAuthentication.CookieSameSite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SameSiteMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o valor do atributo SameSite do cookie.</summary>
        <value>Um dos valores de enumeração que representa o modo de imposição do cookie. O valor padrão é <see cref="F:System.Web.SameSiteMode.Lax" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CookiesSupported">
      <MemberSignature Language="C#" Value="public static bool CookiesSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool CookiesSupported" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.CookiesSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CookiesSupported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool CookiesSupported { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CookiesSupported : bool" Usage="System.Web.Security.FormsAuthentication.CookiesSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se o aplicativo está configurado para dar suporte a autenticação de formulários sem cookies.</summary>
        <value><see langword="false" /> Se o aplicativo estiver configurado para dar suporte à autenticação de formulários sem cookies; Caso contrário, <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> propriedade retorna um valor com base no <xref:System.Web.Security.FormsAuthentication.CookieMode%2A> valor e os recursos do navegador.  
  
-   Se o <xref:System.Web.Security.FormsAuthentication.CookieMode%2A> estiver definida como <xref:System.Web.HttpCookieMode.UseCookies>, o <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> propriedade retornará `true`.  
  
-   Se o <xref:System.Web.Security.FormsAuthentication.CookieMode%2A> estiver definida como <xref:System.Web.HttpCookieMode.UseUri>, o <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> propriedade retornará `false`.  
  
-   Se o <xref:System.Web.Security.FormsAuthentication.CookieMode%2A> estiver definida como <xref:System.Web.HttpCookieMode.AutoDetect>, o <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> propriedade retornará `true` se o navegador dá suporte a cookies e os cookies estão habilitados; caso contrário, o <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> propriedade retornará `false`.  
  
-   Se o <xref:System.Web.Security.FormsAuthentication.CookieMode%2A> estiver definida como <xref:System.Web.HttpCookieMode.UseDeviceProfile>, o <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> propriedade retornará `true` se o <xref:System.Web.HttpRequest.Browser%2A> atual <xref:System.Web.HttpContext.Request%2A> oferece suporte a cookies e redirecionar com cookies; caso contrário, o <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> propriedade retornará `false`.  
  
   
  
## Examples  
 O seguinte exemplo de código define a `cookieless` atributo <xref:System.Web.HttpCookieMode.UseUri> no arquivo Web. config. Essa configuração resultará na <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> propriedade retornando `false`.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    cookieless="UseUri" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Segurança do aplicativo Web do ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Decrypt">
      <MemberSignature Language="C#" Value="public static System.Web.Security.FormsAuthenticationTicket Decrypt (string encryptedTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.FormsAuthenticationTicket Decrypt(string encryptedTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.Decrypt(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Decrypt (encryptedTicket As String) As FormsAuthenticationTicket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::FormsAuthenticationTicket ^ Decrypt(System::String ^ encryptedTicket);" />
      <MemberSignature Language="F#" Value="static member Decrypt : string -&gt; System.Web.Security.FormsAuthenticationTicket" Usage="System.Web.Security.FormsAuthentication.Decrypt encryptedTicket" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.FormsAuthenticationTicket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedTicket" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="encryptedTicket">O tíquete de autenticação criptografado.</param>
        <summary>Cria um objeto <see cref="T:System.Web.Security.FormsAuthenticationTicket" /> com base no tíquete de autenticação de formulários criptografado passado para o método.</summary>
        <returns>Um objeto <see cref="T:System.Web.Security.FormsAuthenticationTicket" />. Se o parâmetro <paramref name="encryptedTicket" /> não é um tíquete válido, <see langword="null" /> é retornado.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="encryptedTicket" /> é <see langword="null" />.  
  
- ou - 
 <paramref name="encryptedTicket" /> é uma cadeia de caracteres vazia (“”).  
  
- ou - 
O tamanho de <paramref name="encryptedTicket" /> é maior que 4096 caracteres.  
  
- ou - 
 <paramref name="encryptedTicket" /> está em um formato inválido.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Segurança do aplicativo Web do ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="DefaultUrl">
      <MemberSignature Language="C#" Value="public static string DefaultUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string DefaultUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.DefaultUrl" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ DefaultUrl { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultUrl : string" Usage="System.Web.Security.FormsAuthentication.DefaultUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a URL para a qual a classe <see cref="T:System.Web.Security.FormsAuthentication" /> não será redirecionada se nenhuma URL de redirecionamento for especificada.</summary>
        <value>A URL para a qual a classe <see cref="T:System.Web.Security.FormsAuthentication" /> será redirecionada se nenhuma URL de redirecionamento for especificada. O padrão é “default.aspx”.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> o valor da propriedade é definido no arquivo de configuração para um aplicativo ASP.NET usando o `defaultUrl` atributo da [formulários](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1d3t3c61(v%3dvs.100)) elemento de configuração. O <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> propriedade é usada pelo <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> método se nenhuma URL de retorno é incluído na solicitação. Da mesma forma, o <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> método retornará o <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> se nenhuma URL de retorno é incluído na solicitação.  
  
   
  
## Examples  
 O seguinte exemplo de código define o `defaultUrl` atributo no arquivo Web. config.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    defaultUrl="index.aspx" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Segurança do aplicativo Web do ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="EnableCrossAppRedirects">
      <MemberSignature Language="C#" Value="public static bool EnableCrossAppRedirects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool EnableCrossAppRedirects" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnableCrossAppRedirects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool EnableCrossAppRedirects { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnableCrossAppRedirects : bool" Usage="System.Web.Security.FormsAuthentication.EnableCrossAppRedirects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se os usuários autenticados podem ser redirecionados para URLs em outros aplicativos Web.</summary>
        <value><see langword="true" /> Se os usuários autenticados podem ser redirecionados para URLs em outros aplicativos da Web; Caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> valor de propriedade é definido usando o `enableCrossAppRedirects` atributo da [formulários](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1d3t3c61(v%3dvs.100)) elemento de configuração.  
  
 O <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> propriedade é verificada no <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> método quando o redirecionamento de URL não aponta para uma página no aplicativo atual. Se <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> é `true`, em seguida, o redirecionamento será executado; se <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> é `false`, o navegador é redirecionado para a página definida no <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> propriedade.  
  
> [!NOTE]
>  Quando você redireciona as páginas em todos os aplicativos, certifique-se de que específica os atributos na [formulários](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1d3t3c61(v%3dvs.100)) elemento de configuração são duplicadas em todos os aplicativos autenticados. Para obter mais informações e um exemplo, consulte [autenticação de formulários em aplicativos](https://msdn.microsoft.com/library/99e2f9e8-5b97-4a4d-a4ed-5f93276053b7).  
  
> [!IMPORTANT]
>  Quando os redirecionamentos entre aplicativos são permitidos, seu site é vulnerável a um explorador que direciona os usuários para um site mal-intencionado, mas usa a página de logon para o seu site. Sempre verifique a URL de redirecionamento que é retornada pelo <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> método é uma URL que você espera para que você possa fazer-se de que permitir redirecionamentos de apenas a sites aprovados. Você também deve verificar que a URL de redirecionamento usa o protocolo apropriado (HTTP ou HTTPS). Para executar essas verificações, você pode adicionar um manipulador de evento de postback para a página de logon, ou você pode adicionar um manipulador para o <xref:System.Web.UI.WebControls.Login.LoggedIn> eventos do <xref:System.Web.UI.WebControls.Login> controle.  
  
   
  
## Examples  
 O seguinte exemplo de código define a `enableCrossAppRedirects` atributo `true` no arquivo Web. config para um aplicativo ASP.NET.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    cookieless="UseUri"  
    requireSSL="true"   
    enableCrossAppRedirects="true" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Segurança do aplicativo Web do ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="EnableFormsAuthentication">
      <MemberSignature Language="C#" Value="public static void EnableFormsAuthentication (System.Collections.Specialized.NameValueCollection configurationData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EnableFormsAuthentication(class System.Collections.Specialized.NameValueCollection configurationData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.EnableFormsAuthentication(System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EnableFormsAuthentication (configurationData As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EnableFormsAuthentication(System::Collections::Specialized::NameValueCollection ^ configurationData);" />
      <MemberSignature Language="F#" Value="static member EnableFormsAuthentication : System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="System.Web.Security.FormsAuthentication.EnableFormsAuthentication configurationData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configurationData" Type="System.Collections.Specialized.NameValueCollection" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="configurationData">Uma coleção de nome-valor que contém os valores para "defaultUrl" e/ou "loginUrl". O parâmetro poderá ser nulo se não houver nenhum valor para a URL padrão ou a URL de logon.</param>
        <summary>Habilita a autenticação de formulários.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se o <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> é de propriedade `null`, que a propriedade é definida como o valor da URL padrão do `configurationData` parâmetro. Se o <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A> é de propriedade `null`, que a propriedade é definida como o valor da URL de logon a `configurationData` parâmetro.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">O aplicativo não está na fase de inicialização anterior ao início do aplicativo.</exception>
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public static string Encrypt (System.Web.Security.FormsAuthenticationTicket ticket);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Encrypt(class System.Web.Security.FormsAuthenticationTicket ticket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.Encrypt(System.Web.Security.FormsAuthenticationTicket)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Encrypt (ticket As FormsAuthenticationTicket) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Encrypt(System::Web::Security::FormsAuthenticationTicket ^ ticket);" />
      <MemberSignature Language="F#" Value="static member Encrypt : System.Web.Security.FormsAuthenticationTicket -&gt; string" Usage="System.Web.Security.FormsAuthentication.Encrypt ticket" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ticket" Type="System.Web.Security.FormsAuthenticationTicket" />
      </Parameters>
      <Docs>
        <param name="ticket">O objeto <see cref="T:System.Web.Security.FormsAuthenticationTicket" /> com o qual criar o tíquete de autenticação de formulários criptografado.</param>
        <summary>Cria uma cadeia de caracteres que contém um tíquete de autenticação de formulários criptografado adequado para uso em um cookie HTTP.</summary>
        <returns>Uma cadeia de caracteres que contém um tíquete de autenticação de formulários criptografado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo de código a seguir armazena o resultado do <xref:System.Web.Security.FormsAuthentication.Encrypt%2A> método em um cookie, usando o <xref:System.Web.Security.FormsAuthentication.FormsCookieName%2A> propriedade e redireciona o usuário para a URL retornado do <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> método.  
  
> [!IMPORTANT]
>  Este exemplo contém uma caixa de texto que aceita entrada do usuário, que é uma potencial ameaça de segurança. Por padrão, as páginas da Web do ASP.NET validam que a entrada do usuário não inclui elementos HTML ou script. Para obter mais informações, consulte [Visão geral de explorações de script](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormsAuthenticationTicketClass#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormsAuthenticationTicketClass/CS/formsauthenticationticketclasscs.aspx#1)]
 [!code-aspx-vb[FormsAuthenticationTicketClass#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormsAuthenticationTicketClass/VB/formsauthenticationticketclassvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="ticket" /> é <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Segurança do aplicativo Web do ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="FormsCookieName">
      <MemberSignature Language="C#" Value="public static string FormsCookieName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string FormsCookieName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.FormsCookieName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property FormsCookieName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ FormsCookieName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FormsCookieName : string" Usage="System.Web.Security.FormsAuthentication.FormsCookieName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o nome do cookie usado para armazenar o tíquete de autenticação de formulários.</summary>
        <value>O nome do cookie usado para armazenar o tíquete de autenticação de formulários. O padrão é “.ASPXAUTH”.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Security.FormsAuthentication.FormsCookieName%2A> o valor da propriedade é definido no arquivo de configuração para um aplicativo ASP.NET usando o `name` atributo da [formulários](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1d3t3c61(v%3dvs.100)) elemento de configuração. O <xref:System.Web.Security.FormsAuthentication.FormsCookieName%2A> é usado para referenciar o cookie que armazena o <xref:System.Web.Security.FormsAuthenticationTicket> informações.  
  
   
  
## Examples  
 O seguinte exemplo de código define a <xref:System.Web.Security.FormsAuthentication.FormsCookieName%2A> valor da propriedade usando o `name` atributo no arquivo Web. config.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    cookieless="UseCookies"  
    name=".ASPXFORMSAUTH" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Segurança do aplicativo Web do ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="FormsCookiePath">
      <MemberSignature Language="C#" Value="public static string FormsCookiePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string FormsCookiePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.FormsCookiePath" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property FormsCookiePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ FormsCookiePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FormsCookiePath : string" Usage="System.Web.Security.FormsAuthentication.FormsCookiePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o caminho para o cookie de autenticação de formulários.</summary>
        <value>O caminho do cookie no qual as informações do tíquete de autenticação de formulários estão armazenadas. O padrão é "/".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A> valor da propriedade é definido no arquivo de configuração para um aplicativo ASP.NET usando o `path` atributo da [formulários](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1d3t3c61(v%3dvs.100)) elemento de configuração. O <xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A> Especifica o <xref:System.Web.HttpCookie.Path%2A> para o cookie que armazena o <xref:System.Web.Security.FormsAuthenticationTicket> informações.  
  
   
  
## Examples  
 O seguinte exemplo de código define a <xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A> valor da propriedade usando o `path` atributo no arquivo Web. config.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    cookieless="UseCookies"  
    path="/MyApplication" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Segurança do aplicativo Web do ASP.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAuthCookie">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Cria um cookie de autenticação para um determinado nome de usuário.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Segurança do aplicativo Web do ASP.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAuthCookie">
      <MemberSignature Language="C#" Value="public static System.Web.HttpCookie GetAuthCookie (string userName, bool createPersistentCookie);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.HttpCookie GetAuthCookie(string userName, bool createPersistentCookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAuthCookie (userName As String, createPersistentCookie As Boolean) As HttpCookie" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::HttpCookie ^ GetAuthCookie(System::String ^ userName, bool createPersistentCookie);" />
      <MemberSignature Language="F#" Value="static member GetAuthCookie : string * bool -&gt; System.Web.HttpCookie" Usage="System.Web.Security.FormsAuthentication.GetAuthCookie (userName, createPersistentCookie)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookie</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="createPersistentCookie" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="userName">O nome do usuário autenticado.</param>
        <param name="createPersistentCookie"><see langword="true" /> para criar um cookie durável (um que seja salvo entre as sessões do navegador); caso contrário, <see langword="false" />.</param>
        <summary>Cria um cookie de autenticação para um determinado nome de usuário. Isso não define o cookie como parte da resposta de saída, de modo que um aplicativo pode ter mais controle sobre como o cookie é emitido.</summary>
        <returns>Um <see cref="T:System.Web.HttpCookie" /> que contém informações de tíquete de autenticação de formulários criptografadas. O valor padrão da propriedade <see cref="P:System.Web.Security.FormsAuthentication.FormsCookiePath" /> é usado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O caminho do cookie é determinado pelo <xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A> propriedade.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Segurança do aplicativo Web do ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetAuthCookie">
      <MemberSignature Language="C#" Value="public static System.Web.HttpCookie GetAuthCookie (string userName, bool createPersistentCookie, string strCookiePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.HttpCookie GetAuthCookie(string userName, bool createPersistentCookie, string strCookiePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAuthCookie (userName As String, createPersistentCookie As Boolean, strCookiePath As String) As HttpCookie" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::HttpCookie ^ GetAuthCookie(System::String ^ userName, bool createPersistentCookie, System::String ^ strCookiePath);" />
      <MemberSignature Language="F#" Value="static member GetAuthCookie : string * bool * string -&gt; System.Web.HttpCookie" Usage="System.Web.Security.FormsAuthentication.GetAuthCookie (userName, createPersistentCookie, strCookiePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookie</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="createPersistentCookie" Type="System.Boolean" />
        <Parameter Name="strCookiePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userName">O nome do usuário autenticado.</param>
        <param name="createPersistentCookie"><see langword="true" /> para criar um cookie durável (um que seja salvo entre as sessões do navegador); caso contrário, <see langword="false" />.</param>
        <param name="strCookiePath">O <see cref="P:System.Web.HttpCookie.Path" /> do cookie de autenticação.</param>
        <summary>Cria um cookie de autenticação para um determinado nome de usuário. Isso não define o cookie como parte da resposta de saída.</summary>
        <returns>Um <see cref="T:System.Web.HttpCookie" /> que contém informações de tíquete de autenticação de formulários criptografadas.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Segurança do aplicativo Web do ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetRedirectUrl">
      <MemberSignature Language="C#" Value="public static string GetRedirectUrl (string userName, bool createPersistentCookie);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetRedirectUrl(string userName, bool createPersistentCookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.GetRedirectUrl(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRedirectUrl (userName As String, createPersistentCookie As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetRedirectUrl(System::String ^ userName, bool createPersistentCookie);" />
      <MemberSignature Language="F#" Value="static member GetRedirectUrl : string * bool -&gt; string" Usage="System.Web.Security.FormsAuthentication.GetRedirectUrl (userName, createPersistentCookie)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="createPersistentCookie" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="userName">O nome do usuário autenticado.</param>
        <param name="createPersistentCookie">Este parâmetro é ignorado.</param>
        <summary>Retorna a URL de redirecionamento para a solicitação original que causou o redirecionamento para a página de logon.</summary>
        <returns>Uma cadeia de caracteres que contém a URL de redirecionamento ou nulo, se <paramref name="userName" /> for nulo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você pode usar esse método quando quiser realizar o redirecionamento no código do aplicativo em vez de usar o <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> método.  
  
 O <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> método retorna a URL especificada na cadeia de consulta usando o `ReturnURL` nome da variável. Por exemplo, na URL `http://www.contoso.com/login.aspx?ReturnUrl=caller.aspx`, o <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> método retorna a URL de retorno `caller.aspx`. Se o `ReturnURL` variável não existir, o <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> método retorna a URL no <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> propriedade.  
  
 O ASP.NET adiciona automaticamente a URL de retorno quando o navegador é redirecionado para a página de logon.  
  
 Por padrão, o `ReturnUrl` variável deve se referir a uma página dentro do aplicativo atual. Se `ReturnUrl` refere-se a uma página em um aplicativo diferente ou em um servidor diferente, o <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> métodos retorna a URL no <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> propriedade. Se você quiser permitir que a URL de retorno para se referir a uma página fora do aplicativo atual, você deve definir a <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> propriedade para `true` usando o `enableCrossAppRedirects` atributo do [formulários](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1d3t3c61(v%3dvs.100)) elemento de configuração.  

Esse método não cria um cookie.
  
> [!IMPORTANT]
>  Definindo o <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> propriedade para `true` para permitir redirecionamentos entre aplicativos é uma ameaça potencial de segurança. Para obter mais informações, consulte a propriedade <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>.  
  
   
  
## Examples  
 O código a seguir redirecionamentos de exemplo usuários autenticados para a URL retornados do <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> método.  
  
> [!IMPORTANT]
>  Este exemplo contém uma caixa de texto que aceita entrada do usuário, que é uma potencial ameaça de segurança. Por padrão, as páginas da Web do ASP.NET validam que a entrada do usuário não inclui elementos HTML ou script. Para obter mais informações, consulte [Visão geral de explorações de script](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormsAuthenticationTicketClass#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormsAuthenticationTicketClass/CS/formsauthenticationticketclasscs.aspx#1)]
 [!code-aspx-vb[FormsAuthenticationTicketClass#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormsAuthenticationTicketClass/VB/formsauthenticationticketclassvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Segurança do aplicativo Web do ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="HashPasswordForStoringInConfigFile">
      <MemberSignature Language="C#" Value="public static string HashPasswordForStoringInConfigFile (string password, string passwordFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HashPasswordForStoringInConfigFile(string password, string passwordFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HashPasswordForStoringInConfigFile (password As String, passwordFormat As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HashPasswordForStoringInConfigFile(System::String ^ password, System::String ^ passwordFormat);" />
      <MemberSignature Language="F#" Value="static member HashPasswordForStoringInConfigFile : string * string -&gt; string" Usage="System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile (password, passwordFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("The recommended alternative is to use the Membership APIs, such as Membership.CreateUser. For more information, see http://go.microsoft.com/fwlink/?LinkId=252463.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="passwordFormat" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="password">A senha para hash.</param>
        <param name="passwordFormat">O algoritmo de hash a ser usado. <paramref name="passwordFormat" /> é um <see langword="String" /> que representa um dos valores de enumeração <see cref="T:System.Web.Configuration.FormsAuthPasswordFormat" />.</param>
        <summary>Gera uma senha hash adequada para armazenar em um arquivo de configuração com base no algoritmo de hash e na senha especificados.</summary>
        <returns>A senha hash.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile%2A> método cria um valor de hash de senha que pode ser usado quando a autenticação de formulários de armazenar credenciais no arquivo de configuração para um aplicativo.  
  
 Credenciais de autenticação armazenadas no arquivo de configuração para um aplicativo são usadas pelo <xref:System.Web.Security.FormsAuthentication.Authenticate%2A> método para verificar se as senhas para usuários de um aplicativo. Como alternativa, você pode usar a associação do ASP.NET para armazenar as credenciais do usuário. Para obter mais informações, consulte [Gerenciando usuários usando associação](https://msdn.microsoft.com/library/824c3a24-f0af-427c-a652-0d2d1e9397cd).  
  
   
  
## Examples  
 O exemplo de código a seguir usa um nome de usuário, senha e o tipo de hash e exibe a [credenciais](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/e01fc50a(v%3dvs.100)) seção da configuração que inclui a definição do usuário e senha de hash.  
  
> [!IMPORTANT]
>  Este exemplo contém uma caixa de texto que aceita entrada do usuário, que é uma potencial ameaça de segurança. Por padrão, as páginas da Web do ASP.NET validam que a entrada do usuário não inclui elementos HTML ou script. Para obter mais informações, consulte [Visão geral de explorações de script](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormsAuthenticationHashPassword#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormsAuthenticationHashPassword/CS/formsauthenticationhashpasswordcs.aspx#1)]
 [!code-aspx-vb[FormsAuthenticationHashPassword#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormsAuthenticationHashPassword/VB/formsauthenticationhashpasswordvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="password" /> is <see langword="null" />  
  
- ou - 
 <paramref name="passwordFormat" /> é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="passwordFormat" /> não é um valor <see cref="T:System.Web.Configuration.FormsAuthPasswordFormat" /> válido.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Segurança do aplicativo Web do ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public static void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Initialize();" />
      <MemberSignature Language="F#" Value="static member Initialize : unit -&gt; unit" Usage="System.Web.Security.FormsAuthentication.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicializa o objeto <see cref="T:System.Web.Security.FormsAuthentication" /> de acordo com as definições de configuração do aplicativo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Security.FormsAuthentication.Initialize%2A> método é chamado quando o <xref:System.Web.Security.FormsAuthenticationModule> cria uma instância do <xref:System.Web.Security.FormsAuthentication> classe. Esse método não deve ser chamado do seu código.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Segurança do aplicativo Web do ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public static bool IsEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : bool" Usage="System.Web.Security.FormsAuthentication.IsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se a autenticação de formulários está habilitada.</summary>
        <value><see langword="true" /> Se a autenticação de formulários está habilitada; Caso contrário, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoginUrl">
      <MemberSignature Language="C#" Value="public static string LoginUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string LoginUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.LoginUrl" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property LoginUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ LoginUrl { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LoginUrl : string" Usage="System.Web.Security.FormsAuthentication.LoginUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a URL para a página de logon para a qual a classe <see cref="T:System.Web.Security.FormsAuthentication" /> será redirecionada.</summary>
        <value>A URL da página de logon para a qual a classe <see cref="T:System.Web.Security.FormsAuthentication" /> será redirecionada. O padrão é “login.aspx”.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A> o valor da propriedade é definido no arquivo de configuração para um aplicativo ASP.NET usando o `loginUrl` atributo da [formulários](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1d3t3c61(v%3dvs.100)) elemento de configuração. O <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A> é usado pelo <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> método.  
  
   
  
## Examples  
 O seguinte exemplo de código define o `loginUrl` atributo no arquivo Web. config.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    defaultUrl="index.aspx" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Segurança do aplicativo Web do ASP.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="RedirectFromLoginPage">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Redireciona um usuário autenticado de volta para a URL solicitada originalmente ou a URL padrão.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Segurança do aplicativo Web do ASP.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="RedirectFromLoginPage">
      <MemberSignature Language="C#" Value="public static void RedirectFromLoginPage (string userName, bool createPersistentCookie);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RedirectFromLoginPage(string userName, bool createPersistentCookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RedirectFromLoginPage (userName As String, createPersistentCookie As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RedirectFromLoginPage(System::String ^ userName, bool createPersistentCookie);" />
      <MemberSignature Language="F#" Value="static member RedirectFromLoginPage : string * bool -&gt; unit" Usage="System.Web.Security.FormsAuthentication.RedirectFromLoginPage (userName, createPersistentCookie)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="createPersistentCookie" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="userName">O nome de usuário autenticado.</param>
        <param name="createPersistentCookie"><see langword="true" /> para criar um cookie durável (um que seja salvo entre as sessões do navegador); caso contrário, <see langword="false" />.</param>
        <summary>Redireciona um usuário autenticado de volta para a URL solicitada originalmente ou a URL padrão.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> método redireciona para a URL especificada na cadeia de consulta usando o `ReturnURL` nome da variável. Por exemplo, na URL `http://www.contoso.com/login.aspx?ReturnUrl=caller.aspx`, o <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> método redireciona para a URL de retorno `caller.aspx`. Se o `ReturnURL` variável não existir, o <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> método redireciona para a URL no <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> propriedade.  
  
 O ASP.NET adiciona automaticamente a URL de retorno quando o navegador é redirecionado para a página de logon.  
  
 Por padrão, o `ReturnUrl` variável deve se referir a uma página dentro do aplicativo atual. Se `ReturnUrl` refere-se a uma página em um aplicativo diferente ou em um servidor diferente, o <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> métodos redireciona para a URL no <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> propriedade. Se você quiser permitir que o redireciona para uma página fora do aplicativo atual, você deve definir a <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> propriedade para `true` usando o `enableCrossAppRedirects` atributo do [formulários](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1d3t3c61(v%3dvs.100)) elemento de configuração.  
  
> [!IMPORTANT]
>  Definindo o <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> propriedade para `true` para permitir redirecionamentos entre aplicativos é uma ameaça potencial de segurança. Para obter mais informações, consulte a propriedade <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>.  
  
 Se o <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> é de propriedade `true`e o `ReturnUrl` variável está dentro do aplicativo atual ou o <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> é de propriedade `true`, o <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> método emite um tíquete de autenticação e o coloca no padrão de cookie usando o <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> método.  
  
 Se <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> é `false` e o caminho de redirecionamento é uma URL no aplicativo atual, o tíquete é emitido como parte da URL de redirecionamento. Se <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> está `false`, <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> é `true`e o redirecionamento de URL não faz referência a uma página dentro do aplicativo atual, o <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> método emite um tíquete de autenticação e o coloca no <xref:System.Web.HttpRequest.QueryString%2A> propriedade.  
  
   
  
## Examples  
 O exemplo de código a seguir redireciona os usuários validados para a URL solicitada originalmente ou o <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>. O exemplo de código usa a associação do ASP.NET para validar os usuários. Para obter mais informações sobre associação do ASP.NET, consulte [Gerenciando usuários usando associação](https://msdn.microsoft.com/library/824c3a24-f0af-427c-a652-0d2d1e9397cd).  
  
> [!IMPORTANT]
>  Este exemplo contém uma caixa de texto que aceita entrada do usuário, que é uma potencial ameaça de segurança. Por padrão, as páginas da Web do ASP.NET validam que a entrada do usuário não inclui elementos HTML ou script. Para obter mais informações, consulte [Visão geral de explorações de script](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/logincs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/loginvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">A URL de retorno especificada na cadeia de caracteres de consulta contém um protocolo diferente de HTTP: ou HTTPS:.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Segurança do aplicativo Web do ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RedirectFromLoginPage">
      <MemberSignature Language="C#" Value="public static void RedirectFromLoginPage (string userName, bool createPersistentCookie, string strCookiePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RedirectFromLoginPage(string userName, bool createPersistentCookie, string strCookiePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RedirectFromLoginPage (userName As String, createPersistentCookie As Boolean, strCookiePath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RedirectFromLoginPage(System::String ^ userName, bool createPersistentCookie, System::String ^ strCookiePath);" />
      <MemberSignature Language="F#" Value="static member RedirectFromLoginPage : string * bool * string -&gt; unit" Usage="System.Web.Security.FormsAuthentication.RedirectFromLoginPage (userName, createPersistentCookie, strCookiePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="createPersistentCookie" Type="System.Boolean" />
        <Parameter Name="strCookiePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userName">O nome de usuário autenticado.</param>
        <param name="createPersistentCookie"><see langword="true" /> para criar um cookie durável (um que seja salvo entre as sessões do navegador); caso contrário, <see langword="false" />.</param>
        <param name="strCookiePath">O caminho do cookie para que o tíquete de autenticação de formulários.</param>
        <summary>Redireciona um usuário autenticado de volta para a URL solicitada originalmente ou para a URL padrão usando o caminho do cookie especificado para o cookie de autenticação de formulários.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> método redireciona para a URL de retorno especificada na cadeia de consulta usando o `ReturnURL` nome da variável. Por exemplo, na URL `http://www.contoso.com/login.aspx?ReturnUrl=caller.aspx`, o <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> método redireciona para a URL de retorno `caller.aspx`. Se o `ReturnURL` variável não existir, o <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> método redireciona para a URL no <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> propriedade.  
  
 O ASP.NET adiciona automaticamente a URL de retorno quando o navegador é redirecionado para a página de logon.  
  
 Por padrão, o `ReturnUrl` variável deve se referir a uma página dentro do aplicativo atual. Se `ReturnUrl` refere-se a uma página em um aplicativo diferente ou em um servidor diferente, o <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> método redireciona para a URL no <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> propriedade. Se você quiser permitir que o redireciona para uma página fora do aplicativo atual, você deve definir a <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> propriedade para `true` usando o `enableCrossAppRedirects` atributo do [formulários](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1d3t3c61(v%3dvs.100)) elemento de configuração.  
  
> [!IMPORTANT]
>  Definindo o <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> propriedade para `true` para permitir redirecionamentos entre aplicativos é uma ameaça potencial de segurança. Para obter mais informações, consulte a propriedade <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>.  
  
 Se o <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> é de propriedade `true`e o `ReturnUrl` variável está dentro do aplicativo atual ou o <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> é de propriedade `true`, o <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> método emite um tíquete de autenticação e o coloca no cookie especificado pela `strCookiePath` parâmetro usando o <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> método.  
  
 Se <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> é `false` e o caminho de redirecionamento é uma URL no aplicativo atual, o tíquete é emitido como parte da URL de redirecionamento. Se <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> está `false`, <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> é `true`e o redirecionamento de URL não faz referência a uma página dentro do aplicativo atual, o <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> método emite um tíquete de autenticação e o coloca no <xref:System.Web.HttpRequest.QueryString%2A> propriedade.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">A URL de retorno especificada na cadeia de caracteres de consulta contém um protocolo diferente de HTTP: ou HTTPS:.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Segurança do aplicativo Web do ASP.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="RedirectToLoginPage">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Redireciona o navegador para a URL de logon.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> método redireciona o navegador para o <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>.  
  
 O <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> método não limpa o cookie de autenticação de formulários. Você pode usar o <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> método em conjunto com o <xref:System.Web.Security.FormsAuthentication.SignOut%2A> método para um usuário de logoff e permitir que um usuário diferente fazer logon.  
  
 Ao contrário do <xref:System.Web.HttpResponse.Redirect%2A?displayProperty=nameWithType> método, esse método não termina a solicitação ao chamar <xref:System.Web.HttpResponse.End%2A?displayProperty=nameWithType>. Isso significa que o código que segue o <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> chamada de método será executado.  
  
   
  
## Examples  
 O exemplo de código a seguir limpa o cookie de autenticação de formulários usando o <xref:System.Web.Security.FormsAuthentication.SignOut%2A> método e redireciona o usuário para o logon de página usando o <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> método.  
  
 [!code-aspx-csharp[System.Web.Security.FormsAuthentication#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/CS/signoutcs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.FormsAuthentication#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/VB/signoutvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Segurança do aplicativo Web do ASP.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="RedirectToLoginPage">
      <MemberSignature Language="C#" Value="public static void RedirectToLoginPage ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RedirectToLoginPage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.RedirectToLoginPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RedirectToLoginPage ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RedirectToLoginPage();" />
      <MemberSignature Language="F#" Value="static member RedirectToLoginPage : unit -&gt; unit" Usage="System.Web.Security.FormsAuthentication.RedirectToLoginPage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Redireciona o navegador para a URL de logon.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> método redireciona o navegador para o <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>.  
  
 O <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> método não limpa o cookie de autenticação de formulários. Você pode usar o <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> método em conjunto com o <xref:System.Web.Security.FormsAuthentication.SignOut%2A> método para um usuário de logoff e permitir que um usuário diferente fazer logon.  
  
   
  
## Examples  
 O exemplo de código a seguir limpa o cookie de autenticação de formulários usando o <xref:System.Web.Security.FormsAuthentication.SignOut%2A> método e redireciona o usuário para o logon de página usando o <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> método.  
  
 [!code-aspx-csharp[System.Web.Security.FormsAuthentication#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/CS/signoutcs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.FormsAuthentication#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/VB/signoutvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Segurança do aplicativo Web do ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RedirectToLoginPage">
      <MemberSignature Language="C#" Value="public static void RedirectToLoginPage (string extraQueryString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RedirectToLoginPage(string extraQueryString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.RedirectToLoginPage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RedirectToLoginPage (extraQueryString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RedirectToLoginPage(System::String ^ extraQueryString);" />
      <MemberSignature Language="F#" Value="static member RedirectToLoginPage : string -&gt; unit" Usage="System.Web.Security.FormsAuthentication.RedirectToLoginPage extraQueryString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extraQueryString" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="extraQueryString">A cadeia de caracteres de consulta para incluir com a URL de redirecionamento.</param>
        <summary>Redireciona o navegador para a URL de logon com a cadeia de caracteres de consulta especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> método redireciona o navegador para o <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A> e inclui o `extraQueryString` valor como o <xref:System.Management.ManagementQuery.QueryString%2A> para a URL redirecionada.  
  
 O <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> método não limpa o cookie de autenticação de formulários. Você pode usar o <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> método em conjunto com o <xref:System.Web.Security.FormsAuthentication.SignOut%2A> método para um usuário de logoff e permitir que um usuário diferente fazer logon.  
  
   
  
## Examples  
 O exemplo de código a seguir limpa o cookie de autenticação de formulários usando o <xref:System.Web.Security.FormsAuthentication.SignOut%2A> método e redireciona o usuário para o logon de página usando o <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> método.  
  
 [!code-aspx-csharp[System.Web.Security.FormsAuthentication#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/CS/signout2cs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.FormsAuthentication#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/VB/signout2vb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Segurança do aplicativo Web do ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RenewTicketIfOld">
      <MemberSignature Language="C#" Value="public static System.Web.Security.FormsAuthenticationTicket RenewTicketIfOld (System.Web.Security.FormsAuthenticationTicket tOld);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.FormsAuthenticationTicket RenewTicketIfOld(class System.Web.Security.FormsAuthenticationTicket tOld) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.RenewTicketIfOld(System.Web.Security.FormsAuthenticationTicket)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RenewTicketIfOld (tOld As FormsAuthenticationTicket) As FormsAuthenticationTicket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::FormsAuthenticationTicket ^ RenewTicketIfOld(System::Web::Security::FormsAuthenticationTicket ^ tOld);" />
      <MemberSignature Language="F#" Value="static member RenewTicketIfOld : System.Web.Security.FormsAuthenticationTicket -&gt; System.Web.Security.FormsAuthenticationTicket" Usage="System.Web.Security.FormsAuthentication.RenewTicketIfOld tOld" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.FormsAuthenticationTicket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tOld" Type="System.Web.Security.FormsAuthenticationTicket" />
      </Parameters>
      <Docs>
        <param name="tOld">O tíquete de autenticação de formulários a ser atualizado.</param>
        <summary>Atualiza, de forma condicional, a data de emissão, a hora e a data de expiração e o tempo de um <see cref="T:System.Web.Security.FormsAuthenticationTicket" />.</summary>
        <returns>O <see cref="T:System.Web.Security.FormsAuthenticationTicket" /> atualizado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Security.FormsAuthentication.RenewTicketIfOld%2A> método atualiza a data de expiração e a hora de fornecido <xref:System.Web.Security.FormsAuthenticationTicket> se a data e hora atuais menos o <xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A> valor é maior que o <xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A> valor menos a data e hora atuais.  
  
 O tíquete é atualizado com o <xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A> propriedade definida como a data e hora atuais e o <xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A> propriedade definida como a data e hora atuais mais original <xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A> valor menos original <xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A> valor.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Segurança do aplicativo Web do ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RequireSSL">
      <MemberSignature Language="C#" Value="public static bool RequireSSL { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool RequireSSL" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.RequireSSL" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RequireSSL As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool RequireSSL { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequireSSL : bool" Usage="System.Web.Security.FormsAuthentication.RequireSSL" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se o cookie de autenticação de formulários exige o SSL para ser retornado ao servidor.</summary>
        <value><see langword="true" /> Se o SSL é necessário para retornar o cookie de autenticação de formulários para o servidor. Caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Security.FormsAuthentication.RequireSSL%2A> o valor da propriedade é definido no arquivo de configuração para um aplicativo ASP.NET usando o `requireSSL` atributo da [formulários](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1d3t3c61(v%3dvs.100)) elemento de configuração. Você pode especificar no arquivo Web. config para seu aplicativo ASP.NET se o SSL (Secure Sockets Layer) é necessário para retornar o cookie de autenticação de formulários para o servidor definindo a `requireSSL` atributo. Para obter mais informações, consulte <xref:System.Web.HttpCookie.Secure%2A>.  
  
 É recomendável que se você definir `requireSSL` como `false`, você também configura `slidingExpiration` como `false`, para reduzir a quantidade de tempo para o qual um tíquete é válido.  
  
   
  
## Examples  
 O seguinte exemplo de código define o `requireSSL` atributo no arquivo Web. config.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    cookieless="UseCookies"  
    requireSSL="true"  
    path="/MyApplication" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Segurança do aplicativo Web do ASP.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetAuthCookie">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Cria um tíquete de autenticação para o nome de usuário fornecido e o adiciona à coleção de cookies de resposta ou à URL, se você estiver usando autenticação sem cookies.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> método adiciona um tíquete de autenticação de formulários para a coleção de cookies ou a URL se <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> é `false`. O tíquete de autenticação de formulários fornece informações de autenticação de formulários para a próxima solicitação feita pelo navegador. Com a autenticação de formulários, você pode usar o <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> método quando você deseja autenticar um usuário, mas ainda manter o controle do painel de navegação com redirecionamentos.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Segurança do aplicativo Web do ASP.NET</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=197376">Explicado: Autenticação de formulários no ASP.NET 2.0</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=197377">Como: Usar a associação do ASP.NET 2.0</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetAuthCookie">
      <MemberSignature Language="C#" Value="public static void SetAuthCookie (string userName, bool createPersistentCookie);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAuthCookie(string userName, bool createPersistentCookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetAuthCookie (userName As String, createPersistentCookie As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetAuthCookie(System::String ^ userName, bool createPersistentCookie);" />
      <MemberSignature Language="F#" Value="static member SetAuthCookie : string * bool -&gt; unit" Usage="System.Web.Security.FormsAuthentication.SetAuthCookie (userName, createPersistentCookie)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="createPersistentCookie" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="userName">O nome de um usuário autenticado. Isso não precisa mapear para uma conta do Windows.</param>
        <param name="createPersistentCookie"><see langword="true" /> para criar um cookie persistente (um que seja salvo entre as sessões do navegador); caso contrário, <see langword="false" />.</param>
        <summary>Cria um tíquete de autenticação para o nome de usuário fornecido e o adiciona à coleção de cookies de resposta ou à URL, se você estiver usando autenticação sem cookies.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> método adiciona um tíquete de autenticação de formulários à coleção de cookies, ou para a URL se <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> é `false`. O tíquete de autenticação de formulários fornece informações de autenticação de formulários para a próxima solicitação feita pelo navegador. Com a autenticação de formulários, você pode usar o <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> método quando você deseja autenticar um usuário, mas ainda manter o controle do painel de navegação com redirecionamentos.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="P:System.Web.Security.FormsAuthentication.RequireSSL" /> é <see langword="true" /> e <see cref="P:System.Web.HttpRequest.IsSecureConnection" /> é <see langword="false" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Segurança do aplicativo Web do ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="SetAuthCookie">
      <MemberSignature Language="C#" Value="public static void SetAuthCookie (string userName, bool createPersistentCookie, string strCookiePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAuthCookie(string userName, bool createPersistentCookie, string strCookiePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetAuthCookie (userName As String, createPersistentCookie As Boolean, strCookiePath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetAuthCookie(System::String ^ userName, bool createPersistentCookie, System::String ^ strCookiePath);" />
      <MemberSignature Language="F#" Value="static member SetAuthCookie : string * bool * string -&gt; unit" Usage="System.Web.Security.FormsAuthentication.SetAuthCookie (userName, createPersistentCookie, strCookiePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="createPersistentCookie" Type="System.Boolean" />
        <Parameter Name="strCookiePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userName">O nome de um usuário autenticado.</param>
        <param name="createPersistentCookie"><see langword="true" /> para criar um cookie durável (um que seja salvo entre as sessões do navegador); caso contrário, <see langword="false" />.</param>
        <param name="strCookiePath">O caminho do cookie para que o tíquete de autenticação de formulários.</param>
        <summary>Cria um tíquete de autenticação para o nome de usuário fornecido e o adiciona à coleção de cookies de resposta usando o caminho do cookie fornecido ou usando a URL, caso você esteja usando a autenticação sem cookies.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> método adiciona um tíquete de autenticação de formulários para a coleção de cookies ou a URL se <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> é `false`. O tíquete de autenticação de formulários fornece informações de autenticação de formulários para a próxima solicitação feita pelo navegador. Com a autenticação de formulários, você pode usar o <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> método quando você deseja autenticar um usuário, mas ainda manter o controle do painel de navegação com redirecionamentos.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="P:System.Web.Security.FormsAuthentication.RequireSSL" /> é <see langword="true" /> e <see cref="P:System.Web.HttpRequest.IsSecureConnection" /> é <see langword="false" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Segurança do aplicativo Web do ASP.NET</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=197376">Explicado: Autenticação de formulários no ASP.NET 2.0</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=197377">Como: Usar a associação do ASP.NET 2.0</related>
      </Docs>
    </Member>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public static void SignOut ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SignOut() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.SignOut" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SignOut ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SignOut();" />
      <MemberSignature Language="F#" Value="static member SignOut : unit -&gt; unit" Usage="System.Web.Security.FormsAuthentication.SignOut " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Remove o tíquete de autenticação de formulários do navegador.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Security.FormsAuthentication.SignOut%2A> método remove as informações do tíquete de autenticação de formulários do cookie ou a URL, se <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> é `false`. Você pode usar o <xref:System.Web.Security.FormsAuthentication.SignOut%2A> método em conjunto com o <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> método para um usuário de logoff e permitir que um usuário diferente fazer logon.  
  
 Se você executar exclusivamente no modo sem cookies ou, se você oferecer suporte a usuários autenticados e anônimos, você deve explicitamente controle o redirecionamento para a página de logon, se você precisar de lógica de negócios especiais para executar como resultado removendo o identificador anônimo.  
  
 Quando o <xref:System.Web.Security.FormsAuthentication.SignOut%2A> método é chamado, um redirecionamento para a página de logon do aplicativo é feito chamando o <xref:System.Web.HttpResponse.Redirect%2A> método com o `endResponse` parâmetro definido como `false`. O redirecionamento não ocorrerá até que a página atual tiver concluído a execução, portanto, o código adicional pode ser executado. Se o código não contiver um redirecionamento explícito para outra página, o usuário é redirecionado para a página de logon configurada no arquivo de configuração do aplicativo.  
  
 Chamar o <xref:System.Web.Security.FormsAuthentication.SignOut%2A> método remove apenas o cookie de autenticação de formulários. O servidor Web não armazena os tíquetes de autenticação de válido e expiradas para a comparação posterior. Isso torna seu site vulnerável a um ataque de repetição se um usuário mal-intencionado obtiver um cookie de autenticação. Para melhorar a segurança ao usar um cookie de autenticação de formulários, você deve fazer o seguinte:  
  
-   Usar uma expiração absoluta para cookies de autenticação de formulários, definindo o <xref:System.Web.Security.FormsAuthentication.SlidingExpiration%2A> propriedade para `false`. Isso limita a janela na qual um cookie da sequestrado pode ser reproduzido.  
  
-   Emitir apenas e aceite cookies de autenticação por protocolo (SSL), definindo a <xref:System.Web.Security.FormsAuthentication.RequireSSL%2A> propriedade para `true` e pela execução de todo o site da Web em SSL. Definindo o <xref:System.Web.Security.FormsAuthentication.RequireSSL%2A> propriedade para `true` garante que o ASP.NET nunca será enviar um cookie de autenticação para o navegador ao longo de uma conexão não SSL; no entanto, o cliente não poderá respeitar a configuração segura no cookie. Isso significa que o cliente pode enviar o cookie de autenticação de formulários ao longo de uma conexão não SSL, assim, deixando-o vulnerável a assumir o controle. Você pode impedir que um cliente envie o cookie de autenticação de formulários de modo transparente, executando todo o site da Web em SSL.  
  
-   Use o armazenamento persistente no servidor para registrar quando um usuário fizer logoff do site e, em seguida, usar um evento do aplicativo, como <xref:System.Web.HttpApplication.PostAuthenticateRequest> evento para determinar se o atual usuário foi autenticado com a autenticação de formulários. Se o usuário foi autenticado com a autenticação de formulários, e se as informações no armazenamento persistente indicam o usuário é desconectado, limpar o cookie de autenticação-o imediatamente e redirecionar o navegador para a página de logon. Após um logon bem-sucedido, atualize o armazenamento para refletir que o usuário está conectado. Quando você usa esse método, seu aplicativo deve acompanhar o status de login do usuário e deve forçar os usuários ociosos fazer logoff.  
  
   
  
## Examples  
 O exemplo de código a seguir limpa o cookie de autenticação de formulários usando o <xref:System.Web.Security.FormsAuthentication.SignOut%2A> método e redireciona o usuário para o logon de página usando o <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> método.  
  
 [!code-aspx-csharp[System.Web.Security.FormsAuthentication#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/CS/signoutcs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.FormsAuthentication#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/VB/signoutvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Segurança do aplicativo Web do ASP.NET</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=197376">Explicado: Autenticação de formulários no ASP.NET 2.0</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=197377">Como: Usar a associação do ASP.NET 2.0</related>
      </Docs>
    </Member>
    <Member MemberName="SlidingExpiration">
      <MemberSignature Language="C#" Value="public static bool SlidingExpiration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool SlidingExpiration" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.SlidingExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SlidingExpiration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool SlidingExpiration { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SlidingExpiration : bool" Usage="System.Web.Security.FormsAuthentication.SlidingExpiration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se a expiração deslizante está habilitada.</summary>
        <value><see langword="true" /> Se a expiração deslizante estiver habilitada; Caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Security.FormsAuthentication.SlidingExpiration%2A> valor de propriedade é definido usando o `slidingExpiration` atributo da [formulários](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1d3t3c61(v%3dvs.100)) elemento de configuração.  
  
 A expiração deslizante redefine a hora de expiração para um cookie de autenticação válido, se uma solicitação é feita e mais da metade do intervalo de tempo limite expirou. Se o cookie expirar, o usuário deve autenticar novamente. Definindo o <xref:System.Web.Security.FormsAuthentication.SlidingExpiration%2A> propriedade para `false` pode melhorar a segurança de um aplicativo, limitando o tempo para o qual um cookie de autenticação é válido, com base em configurado `timeout` valor.  
  
 É recomendável que, se você definir `requireSSL` como `false`, você também configura `slidingExpiration` como `false`, para reduzir a quantidade de tempo para o qual um tíquete é válido.  
  
   
  
## Examples  
 O seguinte exemplo de código define a `slidingExpiration` atributo `false` no arquivo Web. config para um aplicativo ASP.NET.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    name=".ASPXFORMSAUTH"  
    cookieless="UseCookies"  
    requireSSL="true"   
    slidingExpiration="false" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Segurança do aplicativo Web do ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="TicketCompatibilityMode">
      <MemberSignature Language="C#" Value="public static System.Web.Configuration.TicketCompatibilityMode TicketCompatibilityMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Web.Configuration.TicketCompatibilityMode TicketCompatibilityMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.TicketCompatibilityMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TicketCompatibilityMode As TicketCompatibilityMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Configuration::TicketCompatibilityMode TicketCompatibilityMode { System::Web::Configuration::TicketCompatibilityMode get(); };" />
      <MemberSignature Language="F#" Value="member this.TicketCompatibilityMode : System.Web.Configuration.TicketCompatibilityMode" Usage="System.Web.Security.FormsAuthentication.TicketCompatibilityMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.TicketCompatibilityMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um valor que indica se UTC (Tempo Universal Coordenado) ou o horário local deve ser usado para a data de validade de tíquetes.</summary>
        <value>Um valor que indica se é necessário usar o tempo Universal Coordenado (UTC) ou hora local para a data de expiração de tíquetes.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public static TimeSpan Timeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.TimeSpan Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Timeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TimeSpan Timeout { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : TimeSpan" Usage="System.Web.Security.FormsAuthentication.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém a quantidade de tempo antes que um tíquete de autenticação expire.</summary>
        <value>A quantidade de tempo antes que um tíquete de autenticação expira.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>