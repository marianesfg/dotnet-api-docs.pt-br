<Type Name="UrlAuthorizationModule" FullName="System.Web.Security.UrlAuthorizationModule">
  <Metadata><Meta Name="ms.openlocfilehash" Value="69232f2983617f14b360a03eba4d541ec46e4370" /><Meta Name="ms.sourcegitcommit" Value="954560a1b131dce1872e29ce5c01cd9f2c927f11" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="01/11/2019" /><Meta Name="ms.locfileid" Value="54234664" /></Metadata><TypeSignature Language="C#" Value="public sealed class UrlAuthorizationModule : System.Web.IHttpModule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit UrlAuthorizationModule extends System.Object implements class System.Web.IHttpModule" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.UrlAuthorizationModule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class UrlAuthorizationModule&#xA;Implements IHttpModule" />
  <TypeSignature Language="C++ CLI" Value="public ref class UrlAuthorizationModule sealed : System::Web::IHttpModule" />
  <TypeSignature Language="F#" Value="type UrlAuthorizationModule = class&#xA;    interface IHttpModule" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.IHttpModule</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Verifica se o usuário tem permissão para acessar a URL solicitada. Essa classe não pode ser herdada.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Security.UrlAuthorizationModule> determina se o usuário atual é permitido o acesso à URL solicitada, com base no usuário <xref:System.Security.Principal.IIdentity.Name%2A> ou a lista de funções que um usuário é membro. Para obter informações sobre como o nome de usuário é determinado, consulte [autenticação do ASP.NET](https://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1(v=vs.100)). Para obter informações sobre como gerenciar funções de usuário, consulte [Gerenciando autorização usando funções](https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195).  
  
 Autorização para um usuário ou uma função é gerenciada usando o [autorização](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/8d82143t(v%3dvs.100)) elemento de configuração. Você pode permitir ou negar a um usuário ou uma função usando o `allow` ou `deny` subelementos, respectivamente. O `allow` e `deny` subelementos são interpretados na ordem em que eles aparecem na configuração. Depois que um elemento Especifica que o acesso é permitido ou negado, o <xref:System.Web.Security.UrlAuthorizationModule> conclui sua verificação de autorização. Por exemplo, a seção a seguir de um arquivo Web. config exige que os usuários façam logon (pela negação de usuários anônimos) e, em seguida, permite que somente usuários na função de administradores tenham acesso. Os usuários não na função de administradores são negados.  
  
```  
<authorization>  
  <deny users="?" />  
  <allow roles="Administrators" />  
  <deny users="*" />  
</authorization>  
```  
  
 Um usuário ou função deve ser negada especificamente para recusar o usuário ou a permissão de função para uma URL. Ou seja, se o exemplo anterior não especificou o `<deny users="*" />` elemento e, em seguida, todos os usuários autenticados teria sido permitido o acesso à URL solicitada, independentemente de qual função eles fossem um membro de.  
  
   
  
## Examples  
 O exemplo de código a seguir concede acesso a Kim e membros da função de administradores, negando-o a John e todos os usuários anônimos.  
  
```  
<authorization>  
  <allow users="Kim"/>  
  <allow roles="Admins"/>  
  <deny users="John"/>  
  <deny users="?"/>  
</authorization>  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/ba7c17d4-f709-4501-8441-2340e2d6db05">Autorização de ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UrlAuthorizationModule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.UrlAuthorizationModule.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UrlAuthorizationModule();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Cria uma instância de <see cref="T:System.Web.Security.UrlAuthorizationModule" /> classe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este construtor não se destina a ser chamado do código do aplicativo.  
  
 Esse construtor para criar uma instância do ASP.NET chama o <xref:System.Web.Security.UrlAuthorizationModule> classe. Depois de chamar o construtor, ele chama o <xref:System.Web.Security.UrlAuthorizationModule.Init%2A> método para inicializar a nova <xref:System.Web.Security.UrlAuthorizationModule> objeto.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ba7c17d4-f709-4501-8441-2340e2d6db05">Autorização de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CheckUrlAccessForPrincipal">
      <MemberSignature Language="C#" Value="public static bool CheckUrlAccessForPrincipal (string virtualPath, System.Security.Principal.IPrincipal user, string verb);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CheckUrlAccessForPrincipal(string virtualPath, class System.Security.Principal.IPrincipal user, string verb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal(System.String,System.Security.Principal.IPrincipal,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CheckUrlAccessForPrincipal (virtualPath As String, user As IPrincipal, verb As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool CheckUrlAccessForPrincipal(System::String ^ virtualPath, System::Security::Principal::IPrincipal ^ user, System::String ^ verb);" />
      <MemberSignature Language="F#" Value="static member CheckUrlAccessForPrincipal : string * System.Security.Principal.IPrincipal * string -&gt; bool" Usage="System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal (virtualPath, user, verb)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="user" Type="System.Security.Principal.IPrincipal" />
        <Parameter Name="verb" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">O caminho virtual para o arquivo.</param>
        <param name="user">Um objeto <see cref="T:System.Security.Principal.IPrincipal" /> que representa o usuário atual.</param>
        <param name="verb">O verbo HTTP usado para fazer a solicitação.</param>
        <summary>Determina se o usuário tem acesso ao arquivo solicitado.</summary>
        <returns><see langword="true" /> se o usuário atual puder acessar o arquivo; caso contrário, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal%2A> método verifica se o usuário atual será concedido acesso ao arquivo solicitado no arquivo Web. config para o aplicativo.  
  
 Se o verbo HTTP usado para fazer a solicitação é `GET`, `POST`, ou `HEAD`, o <xref:System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal%2A> método verifica se há acesso de leitura ao arquivo. Se qualquer outro verbo é usado, o <xref:System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal%2A> verifica se há acesso de leitura/gravação ao arquivo.  
  
 Para obter mais informações e um exemplo de arquivo Web. config, consulte o <xref:System.Web.Security.UrlAuthorizationModule> documentação da classe.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="virtualPath" /> é <see langword="null" />.  
  
- ou - 
 <paramref name="user" /> é <see langword="null" />.  
  
- ou - 
 <paramref name="verb" /> é <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="virtualPath" /> está fora do caminho raiz do aplicativo.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.UrlAuthorizationModule.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="urlAuthorizationModule.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpModule.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Libera todos os recursos, exceto a memória, usados pelo <see cref="T:System.Web.Security.UrlAuthorizationModule" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método não se destina a ser chamado do código do aplicativo.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ba7c17d4-f709-4501-8441-2340e2d6db05">Autorização de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public void Init (System.Web.HttpApplication app);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Init(class System.Web.HttpApplication app) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.UrlAuthorizationModule.Init(System.Web.HttpApplication)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Init (app As HttpApplication)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Init(System::Web::HttpApplication ^ app);" />
      <MemberSignature Language="F#" Value="abstract member Init : System.Web.HttpApplication -&gt; unit&#xA;override this.Init : System.Web.HttpApplication -&gt; unit" Usage="urlAuthorizationModule.Init app" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpModule.Init(System.Web.HttpApplication)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="app" Type="System.Web.HttpApplication" />
      </Parameters>
      <Docs>
        <param name="app">A instância <see cref="T:System.Web.HttpApplication" /> atual.</param>
        <summary>Inicializa o objeto <see cref="T:System.Web.Security.UrlAuthorizationModule" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método não se destina a ser chamado do código do aplicativo.  
  
 O <xref:System.Web.Security.UrlAuthorizationModule.Init%2A> método garante que o <xref:System.Web.Security.UrlAuthorizationModule> está incluído no processamento do <xref:System.Web.HttpApplication.AuthorizeRequest> eventos.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ba7c17d4-f709-4501-8441-2340e2d6db05">Autorização de ASP.NET</related>
      </Docs>
    </Member>
  </Members>
</Type>