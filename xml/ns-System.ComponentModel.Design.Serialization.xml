<Namespace Name="System.ComponentModel.Design.Serialization">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a00e1219743debba9734b13b4ea4797337e29dbe" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="30725940" /></Metadata><Docs>
    <summary>O namespace <see cref="N:System.ComponentModel.Design.Serialization" /> fornece tipos compatíveis com personalização e o controle de serialização em tempo de design.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 As classes nesse namespace podem ser divididas nas seguintes categorias:  
  
-   Atributos de serialização que podem ser usados para indicar o serializador a ser usado para um tipo específico: <xref:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute>, para indicar o serializador a ser usado para um tipo específico; e <xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute>, para indicar o serializador base a ser usado para o designer raiz.  
  
-   As classes que pode ser implementados por um designer para personalizar a serialização: <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost>, para carregar um documento de designer de um estado serializado, e <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>, para carregar um documento de designer quando o carregamento assíncrono e componentes externos estão envolvidos.  
  
-   Interfaces que um designer pode usar para gerenciar o processo de serialização: <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>, para registrar ou recuperar os serializadores personalizados; <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider>, para disponibilizar um serializador para um <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>; e <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService>, que fornece métodos para invocar a serialização e desserialização.  
  
-   Uma interface que pode ser implementada para personalizar o processo de carregamento de um designer: <xref:System.ComponentModel.Design.Serialization.DesignerLoader>.  
  
-   Uma interface que pode ser usada para otimizar o recarregamento de um designer: <xref:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload>.  
  
-   Outras classes auxiliares: <xref:System.ComponentModel.Design.Serialization.INameCreationService>, uma interface para gerar nomes exclusivos para objetos. <xref:System.ComponentModel.Design.Serialization.ContextStack>, uma estrutura de dados útil para compartilhar informações de contexto de serialização com serializadores; e <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>, um objeto que pode descrever um objeto serializável.  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>