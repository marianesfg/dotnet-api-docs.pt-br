<Type Name="ModelItem" FullName="System.Activities.Presentation.Model.ModelItem">
  <Metadata><Meta Name="ms.openlocfilehash" Value="165a2b2debf8ee3a9e69321d2fa87aa43b75335f" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52611428" /></Metadata><TypeSignature Language="C#" Value="public abstract class ModelItem : System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ModelItem extends System.Object implements class System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Model.ModelItem" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ModelItem&#xA;Implements INotifyPropertyChanged" />
  <TypeSignature Language="C++ CLI" Value="public ref class ModelItem abstract : System::ComponentModel::INotifyPropertyChanged" />
  <TypeSignature Language="F#" Value="type ModelItem = class&#xA;    interface INotifyPropertyChanged" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.INotifyPropertyChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="5e90e-101">Representa um item único no modelo de edição.</span><span class="sxs-lookup"><span data-stu-id="5e90e-101">Represents a single item in the editing model.</span></span> <span data-ttu-id="5e90e-102">Um item pode ser qualquer coisa, desde uma estrutura de dados complexos até uma cor ou um inteiro.</span><span class="sxs-lookup"><span data-stu-id="5e90e-102">An item can be anything from a complex data structure down to a color or integer.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e90e-103">Você pode acessar as propriedades do item por meio de seu <xref:System.Activities.Presentation.Model.ModelItem.Properties%2A> coleta e faça alterações para os valores das propriedades.</span><span class="sxs-lookup"><span data-stu-id="5e90e-103">You can access the item's properties through its <xref:System.Activities.Presentation.Model.ModelItem.Properties%2A> collection and make changes to the values of the properties.</span></span>  
  
 <span data-ttu-id="5e90e-104">Um <xref:System.Activities.Presentation.Model.ModelItem> é um wrapper em torno do modelo de dados subjacente do designer.</span><span class="sxs-lookup"><span data-stu-id="5e90e-104">A <xref:System.Activities.Presentation.Model.ModelItem> is a wrapper around the underlying data model of the designer.</span></span> <span data-ttu-id="5e90e-105">Você pode acessar o modelo subjacente por meio de <xref:System.Activities.Presentation.Model.ModelItem.GetCurrentValue%2A> método.</span><span class="sxs-lookup"><span data-stu-id="5e90e-105">You can access the underlying model through the <xref:System.Activities.Presentation.Model.ModelItem.GetCurrentValue%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5e90e-106">As alterações feitas a um objeto retornado do <xref:System.Activities.Presentation.Model.ModelItem.GetCurrentValue%2A> método não será refletido pelos sistemas de desfazer e serialização do designer.</span><span class="sxs-lookup"><span data-stu-id="5e90e-106">Any changes you make to an object returned from the <xref:System.Activities.Presentation.Model.ModelItem.GetCurrentValue%2A> method will not be reflected by the serialization and undo systems of the designer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e90e-107">O <xref:System.Activities.Presentation.Model.ModelItem> pode ser pensada como um proxy dinâmico para um objeto no qual ele aponta.</span><span class="sxs-lookup"><span data-stu-id="5e90e-107">The <xref:System.Activities.Presentation.Model.ModelItem> can be thought of as a thin proxy for an object at which it points.</span></span> <span data-ttu-id="5e90e-108">Primeiro, defina um simples `Animal` objeto.</span><span class="sxs-lookup"><span data-stu-id="5e90e-108">First define a simple `Animal` object.</span></span>  
  
```csharp  
  
public class Animal  
{  
    // simple property  
    public string Name { get; set; }  
    // complex property   
    public Location Residence { get; set; }   
    // list   
    public List<Animal> CloseRelatives { get; set; }  
    // dictionary  
    public Dictionary<string, object> Features { get; set; }   
}  
  
public class Location  
{  
    public string StreetAddress { get; set; }  
    public string City { get; set; }  
    public string State { get; set; }   
}  
  
```  
  
 <span data-ttu-id="5e90e-109">Em segundo lugar, crie uma instância dela `Animal` e um <xref:System.Activities.Presentation.Model.ModelItem> que é um proxy para ele.</span><span class="sxs-lookup"><span data-stu-id="5e90e-109">Secondly, create an instance of that `Animal` and a <xref:System.Activities.Presentation.Model.ModelItem> that is a proxy for it.</span></span> <span data-ttu-id="5e90e-110">O objeto pode ser recuperado chamando <xref:System.Activities.Presentation.Model.ModelItem.GetCurrentValue%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e90e-110">The object can then be retrieved by calling <xref:System.Activities.Presentation.Model.ModelItem.GetCurrentValue%2A>.</span></span> <span data-ttu-id="5e90e-111">O código a seguir também mostra como usar outras propriedades definidas por <xref:System.Activities.Presentation.Model.ModelItem>.</span><span class="sxs-lookup"><span data-stu-id="5e90e-111">The following code also shows how to use other properties defined by <xref:System.Activities.Presentation.Model.ModelItem>.</span></span>  
  
```csharp  
  
EditingContext ec = new EditingContext();  
var companion1 = new Animal { Name = "Houdini the parakeet" };  
var companion2 = new Animal { Name = "Groucho the fish" };  
var animal = new Animal   
   {  
      Name = "Sasha the pug",  
      Residence = new Location   
      {  
         StreetAddress = "123 Main Street",  
         City = "AnyTown",  
         State = "Washington"  
      },  
      Features = new Dictionary<string, object> {   
         {"noise", "snort" },  
         {"MeanTimeUntilNaps", TimeSpan.FromMinutes(15) }  
      },  
      CloseRelatives = new List<Animal> { companion1, companion2 }   
   };  
ModelTreeManager mtm = new ModelTreeManager(ec);  mtm.Load(animal);  
ModelItem mi = mtm.Root;  
  
//Testing other properties of the class  
ModelItem root = mtm.Root;  
Assert.IsTrue(root.GetCurrentValue() == animal, "GetCurrentValue() returns same object");  
Assert.IsTrue(root.ItemType == typeof(Animal),"ItemType describes the item");  
Assert.IsTrue(root.Parent == null,"root parent is null");  
Assert.IsTrue(root.Source == null, "root source is null");  
Assert.IsTrue(((List<Animal>)root.Properties["CloseRelatives"].ComputedValue)[0] == companion1,   
   "ComputedValue of prop == actual object");  
Assert.IsFalse(((List<Animal>)root.Properties["CloseRelatives"].ComputedValue)[0] == companion2,   
   "ComputedValue of prop == actual object");  
Assert.AreEqual(root.Properties["Residence"].  
   Value.  
   Properties["StreetAddress"].  
   Value.GetCurrentValue(), "123 Main Street", "get actual value back out");  
Assert.AreEqual(root, root.Properties["Residence"].Parent, "property points to owner");  
ModelItem location = root.Properties["Residence"].Value;  
Assert.AreEqual(root.Properties["Residence"], location.Source, "sources point to the right place");  
  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ModelItem ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItem.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ModelItem();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5e90e-112">Cria uma nova instância da classe <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span><span class="sxs-lookup"><span data-stu-id="5e90e-112">Creates a new instance of the <see cref="T:System.Activities.Presentation.Model.ModelItem" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public abstract System.ComponentModel.AttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.AttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItem.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Attributes As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::ComponentModel::AttributeCollection ^ Attributes { System::ComponentModel::AttributeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.ComponentModel.AttributeCollection" Usage="System.Activities.Presentation.Model.ModelItem.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e90e-113">Obtém os atributos declarados neste item.</span><span class="sxs-lookup"><span data-stu-id="5e90e-113">Gets the attributes declared on this item.</span></span></summary>
        <value><span data-ttu-id="5e90e-114">Uma coleção que contém os atributos do item.</span><span class="sxs-lookup"><span data-stu-id="5e90e-114">A collection that contains the attributes of the item.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginEdit">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5e90e-115">Abre um escopo de edição para o designer.</span><span class="sxs-lookup"><span data-stu-id="5e90e-115">Opens an editing scope for the designer.</span></span></summary>
        <altmember cref="T:System.Activities.Presentation.Model.ModelEditingScope" />
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelEditingScope BeginEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Activities.Presentation.Model.ModelEditingScope BeginEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItem.BeginEdit" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginEdit () As ModelEditingScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Activities::Presentation::Model::ModelEditingScope ^ BeginEdit();" />
      <MemberSignature Language="F#" Value="abstract member BeginEdit : unit -&gt; System.Activities.Presentation.Model.ModelEditingScope" Usage="modelItem.BeginEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelEditingScope</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5e90e-116">Abre um escopo de edição para o designer.</span><span class="sxs-lookup"><span data-stu-id="5e90e-116">Opens an editing scope for the designer.</span></span> <span data-ttu-id="5e90e-117">Depois de abrir um escopo de edição, todas as alterações em todos os objetos serão salvas no escopo até que a transação seja concluída ou revertida.</span><span class="sxs-lookup"><span data-stu-id="5e90e-117">After an editing scope is open, all changes across all objects will be saved into the scope until the transaction is completed or reverted.</span></span> <span data-ttu-id="5e90e-118">Escopos de edição podem ser aninhados, mas devem ser confirmados na ordem.</span><span class="sxs-lookup"><span data-stu-id="5e90e-118">Editing scopes can be nested, but must be committed in order.</span></span></summary>
        <returns><span data-ttu-id="5e90e-119">Um <see cref="T:System.Activities.Presentation.Model.ModelEditingScope" /> que deve ser concluído ou revertido.</span><span class="sxs-lookup"><span data-stu-id="5e90e-119">A <see cref="T:System.Activities.Presentation.Model.ModelEditingScope" />, which must be either completed or reverted.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e90e-120">Um escopo de edição permite que várias alterações para o modelo a ser aplicado como uma única transação.</span><span class="sxs-lookup"><span data-stu-id="5e90e-120">An editing scope allows multiple changes to the model to be applied as a single transaction.</span></span> <span data-ttu-id="5e90e-121">Todas as alterações feitas dentro do escopo de edição poderá ser revertidas a qualquer momento antes que a transação seja concluída.</span><span class="sxs-lookup"><span data-stu-id="5e90e-121">All of the changes made within the editing scope can be reverted at any time before the transaction is completed.</span></span>  
  
 <span data-ttu-id="5e90e-122">Escopos de edição são globais para o designer.</span><span class="sxs-lookup"><span data-stu-id="5e90e-122">Editing scopes are global to the designer.</span></span> <span data-ttu-id="5e90e-123">Um escopo de edição pode ser criado para qualquer item no designer; Você não precisará criar um escopo de edição para o item específico que você está alterando.</span><span class="sxs-lookup"><span data-stu-id="5e90e-123">An editing scope can be created for any item in the designer; you do not need to create an editing scope for the specific item you are changing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public virtual System.Activities.Presentation.Model.ModelEditingScope BeginEdit (bool shouldApplyChangesImmediately);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Activities.Presentation.Model.ModelEditingScope BeginEdit(bool shouldApplyChangesImmediately) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItem.BeginEdit(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginEdit (shouldApplyChangesImmediately As Boolean) As ModelEditingScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Activities::Presentation::Model::ModelEditingScope ^ BeginEdit(bool shouldApplyChangesImmediately);" />
      <MemberSignature Language="F#" Value="abstract member BeginEdit : bool -&gt; System.Activities.Presentation.Model.ModelEditingScope&#xA;override this.BeginEdit : bool -&gt; System.Activities.Presentation.Model.ModelEditingScope" Usage="modelItem.BeginEdit shouldApplyChangesImmediately" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelEditingScope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shouldApplyChangesImmediately" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="shouldApplyChangesImmediately"><span data-ttu-id="5e90e-124"><see langword="true" /> para indicar que as alterações devem ser aplicadas imediatamente; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e90e-124"><see langword="true" /> to indicate that the changes should be applied immediately; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="5e90e-125">Abre um escopo de edição para o designer.</span><span class="sxs-lookup"><span data-stu-id="5e90e-125">Opens an editing scope for the designer.</span></span></summary>
        <returns><span data-ttu-id="5e90e-126">Um <see cref="T:System.Activities.Presentation.Model.ModelEditingScope" /> que deve ser concluído ou revertido.</span><span class="sxs-lookup"><span data-stu-id="5e90e-126">A <see cref="T:System.Activities.Presentation.Model.ModelEditingScope" />, which must be either completed or reverted.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelEditingScope BeginEdit (string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Activities.Presentation.Model.ModelEditingScope BeginEdit(string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItem.BeginEdit(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginEdit (description As String) As ModelEditingScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Activities::Presentation::Model::ModelEditingScope ^ BeginEdit(System::String ^ description);" />
      <MemberSignature Language="F#" Value="abstract member BeginEdit : string -&gt; System.Activities.Presentation.Model.ModelEditingScope" Usage="modelItem.BeginEdit description" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelEditingScope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="description"><span data-ttu-id="5e90e-127">Uma descrição opcional da alteração.</span><span class="sxs-lookup"><span data-stu-id="5e90e-127">An optional description of the change.</span></span> <span data-ttu-id="5e90e-128">Isso será definido para a propriedade <see cref="P:System.Activities.Presentation.Model.ModelEditingScope.Description" /> do escopo de edição.</span><span class="sxs-lookup"><span data-stu-id="5e90e-128">This will be set into the <see cref="P:System.Activities.Presentation.Model.ModelEditingScope.Description" /> property of the editing scope.</span></span></param>
        <summary><span data-ttu-id="5e90e-129">Abre um escopo de edição para o designer.</span><span class="sxs-lookup"><span data-stu-id="5e90e-129">Opens an editing scope for the designer.</span></span> <span data-ttu-id="5e90e-130">Depois de abrir um escopo de edição, todas as alterações em todos os objetos serão salvas no escopo até que a transação seja concluída ou revertida.</span><span class="sxs-lookup"><span data-stu-id="5e90e-130">After an editing scope is open, all changes across all objects will be saved into the scope until the transaction is completed or reverted.</span></span> <span data-ttu-id="5e90e-131">Escopos de edição podem ser aninhados, mas devem ser confirmados na ordem.</span><span class="sxs-lookup"><span data-stu-id="5e90e-131">Editing scopes can be nested, but must be committed in order.</span></span></summary>
        <returns><span data-ttu-id="5e90e-132">Um <see cref="T:System.Activities.Presentation.Model.ModelEditingScope" /> que deve ser concluído ou revertido.</span><span class="sxs-lookup"><span data-stu-id="5e90e-132">A <see cref="T:System.Activities.Presentation.Model.ModelEditingScope" />, which must be either completed or reverted.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e90e-133">Um escopo de edição permite que várias alterações para o modelo a ser aplicado como uma única transação.</span><span class="sxs-lookup"><span data-stu-id="5e90e-133">An editing scope allows multiple changes to the model to be applied as a single transaction.</span></span> <span data-ttu-id="5e90e-134">Todas as alterações feitas dentro do escopo de edição poderá ser revertidas a qualquer momento antes que a transação seja concluída.</span><span class="sxs-lookup"><span data-stu-id="5e90e-134">All of the changes made within the editing scope can be reverted at any time before the transaction is completed.</span></span>  
  
 <span data-ttu-id="5e90e-135">Escopos de edição são globais para o designer.</span><span class="sxs-lookup"><span data-stu-id="5e90e-135">Editing scopes are global to the designer.</span></span> <span data-ttu-id="5e90e-136">Um escopo de edição pode ser criado para qualquer item no designer; Você não precisará criar um escopo de edição para o item específico que você está alterando.</span><span class="sxs-lookup"><span data-stu-id="5e90e-136">An editing scope can be created for any item in the designer; you do not need to create an editing scope for the specific item you are changing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public virtual System.Activities.Presentation.Model.ModelEditingScope BeginEdit (string description, bool shouldApplyChangesImmediately);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Activities.Presentation.Model.ModelEditingScope BeginEdit(string description, bool shouldApplyChangesImmediately) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItem.BeginEdit(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginEdit (description As String, shouldApplyChangesImmediately As Boolean) As ModelEditingScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Activities::Presentation::Model::ModelEditingScope ^ BeginEdit(System::String ^ description, bool shouldApplyChangesImmediately);" />
      <MemberSignature Language="F#" Value="abstract member BeginEdit : string * bool -&gt; System.Activities.Presentation.Model.ModelEditingScope&#xA;override this.BeginEdit : string * bool -&gt; System.Activities.Presentation.Model.ModelEditingScope" Usage="modelItem.BeginEdit (description, shouldApplyChangesImmediately)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelEditingScope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="shouldApplyChangesImmediately" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="description"><span data-ttu-id="5e90e-137">Uma descrição opcional da alteração.</span><span class="sxs-lookup"><span data-stu-id="5e90e-137">An optional description of the change.</span></span> <span data-ttu-id="5e90e-138">Isso será definido para a propriedade <see cref="P:System.Activities.Presentation.Model.ModelEditingScope.Description" /> do escopo de edição.</span><span class="sxs-lookup"><span data-stu-id="5e90e-138">This will be set into the <see cref="P:System.Activities.Presentation.Model.ModelEditingScope.Description" /> property of the editing scope.</span></span></param>
        <param name="shouldApplyChangesImmediately"><span data-ttu-id="5e90e-139"><see langword="true" /> para indicar que as alterações devem ser aplicadas imediatamente; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e90e-139"><see langword="true" /> to indicate that the changes should be applied immediately; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="5e90e-140">Abre um escopo de edição para o designer.</span><span class="sxs-lookup"><span data-stu-id="5e90e-140">Opens an editing scope for the designer.</span></span></summary>
        <returns><span data-ttu-id="5e90e-141">Um <see cref="T:System.Activities.Presentation.Model.ModelEditingScope" /> que deve ser concluído ou revertido.</span><span class="sxs-lookup"><span data-stu-id="5e90e-141">A <see cref="T:System.Activities.Presentation.Model.ModelEditingScope" />, which must be either completed or reverted.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelProperty Content { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelProperty Content" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItem.Content" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Content As ModelProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Activities::Presentation::Model::ModelProperty ^ Content { System::Activities::Presentation::Model::ModelProperty ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Content : System.Activities.Presentation.Model.ModelProperty" Usage="System.Activities.Presentation.Model.ModelItem.Content" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e90e-142">Obtém o <see langword="ContentPropertyAttribute" /> do item ou <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5e90e-142">Gets the <see langword="ContentPropertyAttribute" /> of the item, or <see langword="null" />.</span></span></summary>
        <value><span data-ttu-id="5e90e-143">O <see langword="ContentPropertyAttribute" /> do item como um <see cref="T:System.Activities.Presentation.Model.ModelProperty" />.</span><span class="sxs-lookup"><span data-stu-id="5e90e-143">The <see langword="ContentPropertyAttribute" /> of the item as a <see cref="T:System.Activities.Presentation.Model.ModelProperty" />.</span></span> <span data-ttu-id="5e90e-144">Se o <see langword="ContentPropertyAttribute" /> não é declarada com o <see cref="P:System.Activities.Presentation.Model.ModelItem.ItemType" /> deste item <see cref="P:System.Activities.Presentation.Model.ModelItem.Content" /> retorna <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5e90e-144">If the <see langword="ContentPropertyAttribute" /> is not declared by the <see cref="P:System.Activities.Presentation.Model.ModelItem.ItemType" /> of this item, <see cref="P:System.Activities.Presentation.Model.ModelItem.Content" /> returns <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValue">
      <MemberSignature Language="C#" Value="public abstract object GetCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItem.GetCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetCurrentValue () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetCurrentValue();" />
      <MemberSignature Language="F#" Value="abstract member GetCurrentValue : unit -&gt; obj" Usage="modelItem.GetCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5e90e-145">Retorna o valor atual do objeto de modelo subjacente que o <see cref="T:System.Activities.Presentation.Model.ModelItem" /> está encapsulando.</span><span class="sxs-lookup"><span data-stu-id="5e90e-145">Returns the current value of the underlying model object that the <see cref="T:System.Activities.Presentation.Model.ModelItem" /> is wrapping.</span></span></summary>
        <returns><span data-ttu-id="5e90e-146">O valor atual do objeto de modelo subjacente como o qual o <see cref="T:System.Activities.Presentation.Model.ModelItem" /> está encapsulando como um <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="5e90e-146">The current value of the underlying model object that the <see cref="T:System.Activities.Presentation.Model.ModelItem" /> is wrapping as an <see cref="T:System.Object" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e90e-147">Você pode inspecionar a esse objeto, mas você não deve fazer todas as alterações a ele.</span><span class="sxs-lookup"><span data-stu-id="5e90e-147">You can inspect this object, but you should not make any changes to it.</span></span> <span data-ttu-id="5e90e-148">As alterações feitas no objeto retornado não serão incorporadas no designer.</span><span class="sxs-lookup"><span data-stu-id="5e90e-148">Changes made to the object returned will not be incorporated into the designer.</span></span> <span data-ttu-id="5e90e-149">O <xref:System.Activities.Presentation.Model.ModelItem.GetCurrentValue%2A> método pode retornar uma nova ou existente clonada instância do objeto.</span><span class="sxs-lookup"><span data-stu-id="5e90e-149">The <xref:System.Activities.Presentation.Model.ModelItem.GetCurrentValue%2A> method can return either an existing or new cloned instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public abstract Type ItemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ItemType" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItem.ItemType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ItemType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ ItemType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemType : Type" Usage="System.Activities.Presentation.Model.ModelItem.ItemType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e90e-150">Obtém o tipo de objeto que o item representa.</span><span class="sxs-lookup"><span data-stu-id="5e90e-150">Gets the type of object that the item represents.</span></span></summary>
        <value><span data-ttu-id="5e90e-151">O tipo de objeto que representa o item.</span><span class="sxs-lookup"><span data-stu-id="5e90e-151">The type of object that the item represents.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItem.Name" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Activities.Presentation.Model.ModelItem.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e90e-152">Obtém ou define o nome ou a ID do item.</span><span class="sxs-lookup"><span data-stu-id="5e90e-152">Gets or sets the name or ID of the item.</span></span></summary>
        <value><span data-ttu-id="5e90e-153">O nome ou ID do item como um <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="5e90e-153">The name or ID of the item as a <see cref="T:System.String" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e90e-154">Nem todos os itens precisam ter nomes, portanto, essa ação pode retornar `null`.</span><span class="sxs-lookup"><span data-stu-id="5e90e-154">Not all items need to have names, so this might return `null`.</span></span> <span data-ttu-id="5e90e-155">Dependendo do tipo de item e onde ele se encontra na hierarquia, pode não sempre ser legal para definir o <xref:System.Activities.Presentation.Model.ModelItem.Name%2A> em um item.</span><span class="sxs-lookup"><span data-stu-id="5e90e-155">Depending on the type of item and where it sits in the hierarchy, it might not always be legal to set the <xref:System.Activities.Presentation.Model.ModelItem.Name%2A> on an item.</span></span> <span data-ttu-id="5e90e-156">Se o <xref:System.Activities.Presentation.Model.ModelItem.ItemType%2A> deste item declara um `RuntimeNamePropertyAttribute`, o <xref:System.Activities.Presentation.Model.ModelItem.Name%2A> propriedade é um mapeamento direto para a propriedade ditado por esse atributo.</span><span class="sxs-lookup"><span data-stu-id="5e90e-156">If the <xref:System.Activities.Presentation.Model.ModelItem.ItemType%2A> of this item declares a `RuntimeNamePropertyAttribute`, the  <xref:System.Activities.Presentation.Model.ModelItem.Name%2A> property is a direct mapping to the property dictated by that attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelItem Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelItem Parent" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItem.Parent" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Parent As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Activities::Presentation::Model::ModelItem ^ Parent { System::Activities::Presentation::Model::ModelItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Activities.Presentation.Model.ModelItem" Usage="System.Activities.Presentation.Model.ModelItem.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e90e-157">Obtém o item que é o pai deste item.</span><span class="sxs-lookup"><span data-stu-id="5e90e-157">Gets the item that is the parent of this item.</span></span></summary>
        <value><span data-ttu-id="5e90e-158">Um <see cref="T:System.Activities.Presentation.Model.ModelItem" /> que é o pai deste item.</span><span class="sxs-lookup"><span data-stu-id="5e90e-158">A <see cref="T:System.Activities.Presentation.Model.ModelItem" /> that is the parent of this item.</span></span> <span data-ttu-id="5e90e-159">Se um item estiver contido em uma coleção ou dicionário, o objeto que possui a coleção ou dicionário é retornado em vez disso.</span><span class="sxs-lookup"><span data-stu-id="5e90e-159">If an item is contained in a collection or dictionary, the object that owns the collection or dictionary is returned instead.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parents">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Model.ModelItem&gt; Parents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Activities.Presentation.Model.ModelItem&gt; Parents" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItem.Parents" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Parents As IEnumerable(Of ModelItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::Generic::IEnumerable&lt;System::Activities::Presentation::Model::ModelItem ^&gt; ^ Parents { System::Collections::Generic::IEnumerable&lt;System::Activities::Presentation::Model::ModelItem ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parents : seq&lt;System.Activities.Presentation.Model.ModelItem&gt;" Usage="System.Activities.Presentation.Model.ModelItem.Parents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Model.ModelItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e90e-160">Obtém todos os pais desse item.</span><span class="sxs-lookup"><span data-stu-id="5e90e-160">Gets all parents of this item.</span></span></summary>
        <value><span data-ttu-id="5e90e-161">Os pais desse item.</span><span class="sxs-lookup"><span data-stu-id="5e90e-161">The parents of this item.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItem.Properties" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Properties As ModelPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Activities::Presentation::Model::ModelPropertyCollection ^ Properties { System::Activities::Presentation::Model::ModelPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Activities.Presentation.Model.ModelPropertyCollection" Usage="System.Activities.Presentation.Model.ModelItem.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e90e-162">Obtém as propriedades públicas neste item.</span><span class="sxs-lookup"><span data-stu-id="5e90e-162">Gets the public properties on this item.</span></span></summary>
        <value><span data-ttu-id="5e90e-163">Um <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" /> que contém as propriedades públicas deste item.</span><span class="sxs-lookup"><span data-stu-id="5e90e-163">A <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" /> that contains the public properties of this item.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e90e-164">O conjunto de propriedades retornado pode mudar com base em propriedades anexadas ou alterações ao escopo de edição.</span><span class="sxs-lookup"><span data-stu-id="5e90e-164">The set of properties returned might change based on attached properties or changes to the editing scope.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyChanged">
      <MemberSignature Language="C#" Value="public abstract event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.PropertyChangedEventHandler PropertyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.Model.ModelItem.PropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Event PropertyChanged As PropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract event System::ComponentModel::PropertyChangedEventHandler ^ PropertyChanged;" />
      <MemberSignature Language="F#" Value="member this.PropertyChanged : System.ComponentModel.PropertyChangedEventHandler " Usage="member this.PropertyChanged : System.ComponentModel.PropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e90e-165">Implementa <see langword="INotifyPropertyChanged" />.</span><span class="sxs-lookup"><span data-stu-id="5e90e-165">Implements <see langword="INotifyPropertyChanged" />.</span></span> <span data-ttu-id="5e90e-166">Use este evento para ouvir alterações ao modelo.</span><span class="sxs-lookup"><span data-stu-id="5e90e-166">Use this event to listen for changes to the model.</span></span> <span data-ttu-id="5e90e-167">Isso também é usado pelos recursos de associação de dados do WPF.</span><span class="sxs-lookup"><span data-stu-id="5e90e-167">This is also used by the data binding features of WPF.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e90e-168">Eventos de desconexão de itens quando tiver terminado com eles.</span><span class="sxs-lookup"><span data-stu-id="5e90e-168">Disconnect events from items when you are finished with them.</span></span> <span data-ttu-id="5e90e-169">Caso contrário, você pode impedir que o coletor de lixo descarte de um item que não está mais em uso.</span><span class="sxs-lookup"><span data-stu-id="5e90e-169">Otherwise, you might prevent the garbage collector from disposing of an item that is no longer in use.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Root">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelItem Root { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelItem Root" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItem.Root" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Root As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Activities::Presentation::Model::ModelItem ^ Root { System::Activities::Presentation::Model::ModelItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Root : System.Activities.Presentation.Model.ModelItem" Usage="System.Activities.Presentation.Model.ModelItem.Root" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e90e-170">Obtém o item que é a raiz dessa árvore.</span><span class="sxs-lookup"><span data-stu-id="5e90e-170">Gets the item that is the root of this tree.</span></span></summary>
        <value><span data-ttu-id="5e90e-171">Um <see cref="T:System.Activities.Presentation.Model.ModelItem" /> que é a raiz dessa árvore ou <see langword="null" /> se este item não é parte de uma árvore.</span><span class="sxs-lookup"><span data-stu-id="5e90e-171">A <see cref="T:System.Activities.Presentation.Model.ModelItem" /> that is the root of this tree, or <see langword="null" /> if this item is not part of a tree.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelProperty Source { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelProperty Source" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItem.Source" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Source As ModelProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Activities::Presentation::Model::ModelProperty ^ Source { System::Activities::Presentation::Model::ModelProperty ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Source : System.Activities.Presentation.Model.ModelProperty" Usage="System.Activities.Presentation.Model.ModelItem.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e90e-172">Obtém a propriedade que forneceu esse valor.</span><span class="sxs-lookup"><span data-stu-id="5e90e-172">Gets the property that provided this value.</span></span></summary>
        <value><span data-ttu-id="5e90e-173">Um <see cref="T:System.Activities.Presentation.Model.ModelProperty" /> que indica a origem desse valor.</span><span class="sxs-lookup"><span data-stu-id="5e90e-173">A <see cref="T:System.Activities.Presentation.Model.ModelProperty" /> that indicates the source of this value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e90e-174">Se o item representa a raiz do grafo de objeto, isso retornará `null`.</span><span class="sxs-lookup"><span data-stu-id="5e90e-174">If the item represents the root of the object graph, this will return `null`.</span></span> <span data-ttu-id="5e90e-175">Se um item for um membro de uma coleção ou dicionário, a propriedade retornada da fonte será uma propriedade de pseudo fornecida pela coleção ou dicionário.</span><span class="sxs-lookup"><span data-stu-id="5e90e-175">If an item is a member of a collection or dictionary, the property returned from Source will be a pseudo-property provided by the collection or dictionary.</span></span> <span data-ttu-id="5e90e-176">Para outros valores, a propriedade de origem retorna a propriedade, em que o valor realmente foi definido.</span><span class="sxs-lookup"><span data-stu-id="5e90e-176">For other values, the Source property returns the property where the value was actually set.</span></span> <span data-ttu-id="5e90e-177">Portanto, se um valor está sendo herdado, código-fonte permite que você descubra que o valor fornecido originalmente.</span><span class="sxs-lookup"><span data-stu-id="5e90e-177">Therefore, if a value is being inherited, Source allows you to find out who originally provided the value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sources">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Model.ModelProperty&gt; Sources { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Activities.Presentation.Model.ModelProperty&gt; Sources" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItem.Sources" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Sources As IEnumerable(Of ModelProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::Generic::IEnumerable&lt;System::Activities::Presentation::Model::ModelProperty ^&gt; ^ Sources { System::Collections::Generic::IEnumerable&lt;System::Activities::Presentation::Model::ModelProperty ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Sources : seq&lt;System.Activities.Presentation.Model.ModelProperty&gt;" Usage="System.Activities.Presentation.Model.ModelItem.Sources" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Model.ModelProperty&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e90e-178">Obtém todas as propriedades que contêm esse valor.</span><span class="sxs-lookup"><span data-stu-id="5e90e-178">Gets all the properties that hold this value.</span></span></summary>
        <value><span data-ttu-id="5e90e-179">As fontes desse valor.</span><span class="sxs-lookup"><span data-stu-id="5e90e-179">The sources of this value.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItem.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="modelItem.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5e90e-180">Retorna uma representação de cadeia de caracteres do objeto de modelo subjacente contido neste item de modelo.</span><span class="sxs-lookup"><span data-stu-id="5e90e-180">Returns a string representation of the underlying model object contained in this model item.</span></span></summary>
        <returns><span data-ttu-id="5e90e-181">Uma representação de cadeia de caracteres do objeto de modelo subjacente contido neste item de modelo.</span><span class="sxs-lookup"><span data-stu-id="5e90e-181">A string representation of the underlying model object contained in this model item.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="View">
      <MemberSignature Language="C#" Value="public abstract System.Windows.DependencyObject View { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObject View" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItem.View" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property View As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Windows::DependencyObject ^ View { System::Windows::DependencyObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.View : System.Windows.DependencyObject" Usage="System.Activities.Presentation.Model.ModelItem.View" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e90e-182">Obtém um <see cref="T:System.Windows.DependencyObject" /> que representa graficamente esse item.</span><span class="sxs-lookup"><span data-stu-id="5e90e-182">Gets a <see cref="T:System.Windows.DependencyObject" /> that graphically represents this item.</span></span></summary>
        <value><span data-ttu-id="5e90e-183">Um <see cref="T:System.Windows.DependencyObject" /> que representa graficamente esse item, ou <see langword="null" /> se não houver nenhum tal representação.</span><span class="sxs-lookup"><span data-stu-id="5e90e-183">A <see cref="T:System.Windows.DependencyObject" /> that graphically represents this item, or <see langword="null" /> if there is no such representation.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>