<Type Name="ModelEditingScope" FullName="System.Activities.Presentation.Model.ModelEditingScope">
  <TypeSignature Language="C#" Value="public abstract class ModelEditingScope : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ModelEditingScope extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Model.ModelEditingScope" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ModelEditingScope&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ModelEditingScope abstract : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="8e7af-101">Representa um grupo de alterações ao repositório de edição.</span><span class="sxs-lookup"><span data-stu-id="8e7af-101">Represents a group of changes to the editing store.</span></span> <span data-ttu-id="8e7af-102">Grupos de alterações são transacionais.</span><span class="sxs-lookup"><span data-stu-id="8e7af-102">Change groups are transactional.</span></span> <span data-ttu-id="8e7af-103">As alterações feitas em um escopo de edição podem ser confirmadas ou anuladas como uma unidade.</span><span class="sxs-lookup"><span data-stu-id="8e7af-103">The changes made under an editing scope can be committed or aborted as a unit.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e7af-104">Quando um escopo de edição é confirmado, o armazenamento de edição tem todas as alterações que ocorreram dentro dele e aplica-se ao modelo.</span><span class="sxs-lookup"><span data-stu-id="8e7af-104">When an editing scope is committed, the editing store takes all changes that occurred within it and applies them to the model.</span></span> <span data-ttu-id="8e7af-105">Se o escopo de edição <xref:System.Activities.Presentation.Model.ModelEditingScope.Revert%2A> método é chamado ou o escopo de edição é descartado antes de <xref:System.Activities.Presentation.Model.ModelEditingScope.Complete%2A> é chamado, a edição de escopo em vez disso, reverte as alterações feitas nos objetos subjacentes, reaplicar o estado do armazenamento de edição.</span><span class="sxs-lookup"><span data-stu-id="8e7af-105">If the editing scope’s <xref:System.Activities.Presentation.Model.ModelEditingScope.Revert%2A> method is called, or the editing scope is disposed of before <xref:System.Activities.Presentation.Model.ModelEditingScope.Complete%2A> is called, the editing scope will instead reverse the changes made to the underlying objects, reapplying state from the editing store.</span></span> <span data-ttu-id="8e7af-106">Isso fornece uma base sólida para um mecanismo de desfazer.</span><span class="sxs-lookup"><span data-stu-id="8e7af-106">This provides a solid basis for an undo mechanism.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ModelEditingScope ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelEditingScope.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ModelEditingScope();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8e7af-107">Cria um novo <see cref="T:System.Activities.Presentation.Model.ModelEditingScope" />.</span><span class="sxs-lookup"><span data-stu-id="8e7af-107">Creates a new <see cref="T:System.Activities.Presentation.Model.ModelEditingScope" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanComplete">
      <MemberSignature Language="C#" Value="protected abstract bool CanComplete ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CanComplete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelEditingScope.CanComplete" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CanComplete () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool CanComplete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8e7af-108">Determina se <see cref="M:System.Activities.Presentation.Model.ModelEditingScope.OnComplete" /> deve ser chamado ou se a alteração deve, em vez disso, ser revertida.</span><span class="sxs-lookup"><span data-stu-id="8e7af-108">Determines whether <see cref="M:System.Activities.Presentation.Model.ModelEditingScope.OnComplete" /> should be called, or whether the change should instead be reverted.</span></span> <span data-ttu-id="8e7af-109">Motivos para a reversão podem incluir a impossibilidade de fazer check-out de um arquivo de um sistema de controle do código-fonte para modificação.</span><span class="sxs-lookup"><span data-stu-id="8e7af-109">Reasons for reverting might include a file cannot be checked out of a source control system for modification.</span></span></summary>
        <returns>
          <span data-ttu-id="8e7af-110"><see langword="true" /> se o preenchimento puder ocorrer; <see langword="false" /> se a alteração precisará ser revertida.</span><span class="sxs-lookup"><span data-stu-id="8e7af-110"><see langword="true" /> if completion can occur; <see langword="false" /> if the change should instead revert.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public void Complete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Complete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelEditingScope.Complete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Complete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8e7af-111">Conclui o escopo de edição chamando o método <see cref="M:System.Activities.Presentation.Model.ModelEditingScope.OnComplete" />.</span><span class="sxs-lookup"><span data-stu-id="8e7af-111">Completes the editing scope by calling the <see cref="M:System.Activities.Presentation.Model.ModelEditingScope.OnComplete" /> method.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8e7af-112">O escopo de edição já foi revertido ou concluído.</span><span class="sxs-lookup"><span data-stu-id="8e7af-112">The editing scope has already been reverted or completed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelEditingScope.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e7af-113">Descreve o grupo de alterações.</span><span class="sxs-lookup"><span data-stu-id="8e7af-113">Describes the group of changes.</span></span> <span data-ttu-id="8e7af-114">Ele pode ser alterado a qualquer momento antes que as alterações sejam confirmadas.</span><span class="sxs-lookup"><span data-stu-id="8e7af-114">It can be changed anytime before the changes are committed.</span></span></summary>
        <value><span data-ttu-id="8e7af-115">Retorna um <see cref="T:System.String" /> que descreve as alterações.</span><span class="sxs-lookup"><span data-stu-id="8e7af-115">Returnsa <see cref="T:System.String" /> that describes the changes.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8e7af-116">Descarta este objeto anulando as alterações.</span><span class="sxs-lookup"><span data-stu-id="8e7af-116">Disposes of this object by aborting changes.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelEditingScope.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8e7af-117">Descarta este objeto anulando alterações, a menos que o escopo de edição já tenha sido concluído ou revertido.</span><span class="sxs-lookup"><span data-stu-id="8e7af-117">Disposes of this object by aborting changes unless the editing scope has already been completed or reverted.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e7af-118">Se o escopo de edição foi concluída ou foi revertido anteriormente, em seguida, chamar este método não fará nada.</span><span class="sxs-lookup"><span data-stu-id="8e7af-118">If either the editing scope has completed or it has been reverted previously, then calling this method does nothing.</span></span> <span data-ttu-id="8e7af-119">Este método chama <xref:System.Activities.Presentation.Model.ModelEditingScope.Dispose%2A> com o parâmetro de entrada definido como `true`.</span><span class="sxs-lookup"><span data-stu-id="8e7af-119">This method calls <xref:System.Activities.Presentation.Model.ModelEditingScope.Dispose%2A> with the input parameter set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelEditingScope.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="8e7af-120">Determina se as alterações devem ser revertidas como parte de uma operação de desfazer ou porque o objeto está sendo finalizado.</span><span class="sxs-lookup"><span data-stu-id="8e7af-120">Determines whether the changes should be reverted as part of an undo operation or because the object is being finalized.</span></span></param>
        <summary><span data-ttu-id="8e7af-121">Descarta este objeto anulando as alterações.</span><span class="sxs-lookup"><span data-stu-id="8e7af-121">Disposes of this object by aborting changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e7af-122">Chamadas <xref:System.Activities.Presentation.Model.ModelEditingScope.Revert%2A> se `disposing` é definido como `true`.</span><span class="sxs-lookup"><span data-stu-id="8e7af-122">Calls <xref:System.Activities.Presentation.Model.ModelEditingScope.Revert%2A> if `disposing` is set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnComplete">
      <MemberSignature Language="C#" Value="protected abstract void OnComplete ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnComplete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelEditingScope.OnComplete" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub OnComplete ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void OnComplete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8e7af-123">Executa a conclusão real do escopo de edição.</span><span class="sxs-lookup"><span data-stu-id="8e7af-123">Performs the actual complete of the editing scope.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnException">
      <MemberSignature Language="C#" Value="protected abstract bool OnException (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnException(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelEditingScope.OnException(System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool OnException(Exception ^ exception);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception"><span data-ttu-id="8e7af-124">A exceção a ser manipulada.</span><span class="sxs-lookup"><span data-stu-id="8e7af-124">The exception to handle.</span></span></param>
        <summary><span data-ttu-id="8e7af-125">Trata a exceção.</span><span class="sxs-lookup"><span data-stu-id="8e7af-125">Handles an exception.</span></span></summary>
        <returns>
          <span data-ttu-id="8e7af-126"><see langword="true" /> se a exceção for manipulada, caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8e7af-126"><see langword="true" /> if the exception is handled; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e7af-127">O <xref:System.Activities.Presentation.Model.ModelEditingScope.Complete%2A> e <xref:System.Activities.Presentation.Model.ModelEditingScope.Revert%2A> métodos de chamam esse método para lidar com exceções.</span><span class="sxs-lookup"><span data-stu-id="8e7af-127">The <xref:System.Activities.Presentation.Model.ModelEditingScope.Complete%2A> and <xref:System.Activities.Presentation.Model.ModelEditingScope.Revert%2A> methods call this method to handle exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRevert">
      <MemberSignature Language="C#" Value="protected abstract void OnRevert (bool finalizing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRevert(bool finalizing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelEditingScope.OnRevert(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub OnRevert (finalizing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void OnRevert(bool finalizing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="finalizing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="finalizing"><span data-ttu-id="8e7af-128">Determina se a anulação está ocorrendo porque o objeto está sendo finalizado.</span><span class="sxs-lookup"><span data-stu-id="8e7af-128">Determines whether the abort is occurring because the object is being finalized.</span></span> <span data-ttu-id="8e7af-129">Alguns sistemas de desfazer podem tentar anular neste caso, enquanto outros podem abandonar a alteração e gravá-la como uma operação de desfazer reativa.</span><span class="sxs-lookup"><span data-stu-id="8e7af-129">Some undo systems might attempt to abort in this case, while others might abandon the change and record it as a reactive undo operation.</span></span></param>
        <summary><span data-ttu-id="8e7af-130">Executa a reversão real do escopo de edição.</span><span class="sxs-lookup"><span data-stu-id="8e7af-130">Performs the actual revert of the editing scope.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Revert">
      <MemberSignature Language="C#" Value="public void Revert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Revert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelEditingScope.Revert" />
      <MemberSignature Language="VB.NET" Value="Public Sub Revert ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Revert();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8e7af-131">Desfaz as alterações feitas durante o escopo de edição.</span><span class="sxs-lookup"><span data-stu-id="8e7af-131">Abandons the changes made during the editing scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e7af-132">Este método chama <xref:System.Activities.Presentation.Model.ModelEditingScope.OnRevert%2A> com o parâmetro de entrada definido como `false`.</span><span class="sxs-lookup"><span data-stu-id="8e7af-132">This method calls <xref:System.Activities.Presentation.Model.ModelEditingScope.OnRevert%2A> with the input parameter set to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8e7af-133">O grupo de alterações já foi confirmado.</span><span class="sxs-lookup"><span data-stu-id="8e7af-133">The group of changes has already been committed.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>