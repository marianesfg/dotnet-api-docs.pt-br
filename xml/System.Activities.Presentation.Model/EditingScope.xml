<Type Name="EditingScope" FullName="System.Activities.Presentation.Model.EditingScope">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0b63711d7cf4d8e55c3e2a7b7023fd23f25d8aa9" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30349050" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EditingScope : System.Activities.Presentation.Model.ModelEditingScope" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EditingScope extends System.Activities.Presentation.Model.ModelEditingScope" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Model.EditingScope" />
  <TypeSignature Language="VB.NET" Value="Public Class EditingScope&#xA;Inherits ModelEditingScope" />
  <TypeSignature Language="C++ CLI" Value="public ref class EditingScope : System::Activities::Presentation::Model::ModelEditingScope" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.Presentation.Model.ModelEditingScope</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="6b3ba-101">Um escopo de edição representa uma coleção de alterações na árvore <see cref="T:System.Activities.Presentation.Model.ModelItem" /> que pode ser confirmada ou revertida como uma unidade de trabalho atômica.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6b3ba-101">An editing scope represents a collection of changes to the <see cref="T:System.Activities.Presentation.Model.ModelItem" /> tree that can be committed or rolled back as one atomic unit of work.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b3ba-102">Isso é útil para em lote de um conjunto de alterações a vários <xref:System.Activities.Presentation.Model.ModelItem> objetos.</span><span class="sxs-lookup"><span data-stu-id="6b3ba-102">This is useful for batching together a set of changes to multiple <xref:System.Activities.Presentation.Model.ModelItem> objects.</span></span> <span data-ttu-id="6b3ba-103">Como exemplo, as atividades de mensagens, as alterações feitas as caixas de diálogo geradas afetará vários valores de propriedade.</span><span class="sxs-lookup"><span data-stu-id="6b3ba-103">As an example, in the messaging activities, the changes made from the raised dialogs will impact multiple property values.</span></span> <span data-ttu-id="6b3ba-104">No entanto, como todas as alterações que vêm de caixa de diálogo gerado, a necessidade de alterações a ser considerado como um lote e desfeitas como uma única unidade de trabalho.</span><span class="sxs-lookup"><span data-stu-id="6b3ba-104">However, as all of the changes come from the raised dialog, the changes need to be considered as a batch and undone as a single unit of work.</span></span> <span data-ttu-id="6b3ba-105">Para obter mais detalhes sobre o uso, consulte o exemplo de escopo de edição</span><span class="sxs-lookup"><span data-stu-id="6b3ba-105">For more details on usage, see the Editing Scope sample</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CanComplete">
      <MemberSignature Language="C#" Value="protected override bool CanComplete ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool CanComplete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.EditingScope.CanComplete" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CanComplete () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool CanComplete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6b3ba-106">Determina se a instância de escopo de edição atual pode ser concluída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b3ba-106">Determines whether the current editing scope instance can complete.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6b3ba-107">
            <see langword="true" /> se o escopo de edição puder ser concluído, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b3ba-107">
              <see langword="true" /> if the editing scope can complete; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Changes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;System.Activities.Presentation.Model.Change&gt; Changes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;class System.Activities.Presentation.Model.Change&gt; Changes" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.EditingScope.Changes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Changes As List(Of Change)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::Activities::Presentation::Model::Change ^&gt; ^ Changes { System::Collections::Generic::List&lt;System::Activities::Presentation::Model::Change ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.Activities.Presentation.Model.Change&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b3ba-108">Obtém uma lista de alterações.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b3ba-108">Gets a list of changes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b3ba-109">Retorna um <see cref="T:System.Collections.Generic.List`1" /> que contém as alterações.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b3ba-109">Returns a <see cref="T:System.Collections.Generic.List`1" /> that contains the changes.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasEffectiveChanges">
      <MemberSignature Language="C#" Value="public bool HasEffectiveChanges { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasEffectiveChanges" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.EditingScope.HasEffectiveChanges" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasEffectiveChanges As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasEffectiveChanges { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b3ba-110">Obtém um booliano que especifica se as alterações foram aplicadas ao escopo de edição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b3ba-110">Gets  a Boolean that specifies whether changes have been applied to the editing scope.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b3ba-111">
            <see langword="true" /> Se as alterações tiverem sido aplicadas ao escopo de edição; Caso contrário, <see langword="false" />...</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b3ba-111">
              <see langword="true" /> if changes have been applied to the editing scope; otherwise, <see langword="false" />..</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnComplete">
      <MemberSignature Language="C#" Value="protected override void OnComplete ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnComplete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.EditingScope.OnComplete" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnComplete ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnComplete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6b3ba-112">Gera o evento Concluído.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b3ba-112">Raises the Complete event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnException">
      <MemberSignature Language="C#" Value="protected override bool OnException (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnException(class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.EditingScope.OnException(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnException (e As Exception) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnException(Exception ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="6b3ba-113">A exceção a ser manipulada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b3ba-113">The exception to handle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b3ba-114">Manipula a exceção especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b3ba-114">Handles the specified exception.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6b3ba-115">
            <see langword="true" /> se a exceção for manipulada, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b3ba-115">
              <see langword="true" /> if the exception is handled; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRevert">
      <MemberSignature Language="C#" Value="protected override void OnRevert (bool finalizing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRevert(bool finalizing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.EditingScope.OnRevert(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRevert (finalizing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRevert(bool finalizing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="finalizing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="finalizing">
          <span data-ttu-id="6b3ba-116">Não usado nesta implementação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b3ba-116">Not used in this implementation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b3ba-117">Gera o evento Reverter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b3ba-117">Raises the Revert event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>