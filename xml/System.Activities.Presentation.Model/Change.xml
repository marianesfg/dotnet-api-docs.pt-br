<Type Name="Change" FullName="System.Activities.Presentation.Model.Change">
  <Metadata><Meta Name="ms.openlocfilehash" Value="52e75a84638896157a03c2cbdb231ec4de9470b0" /><Meta Name="ms.sourcegitcommit" Value="662f143e6be46d519ff8ab4451d543d91e651478" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="12/18/2018" /><Meta Name="ms.locfileid" Value="53563371" /></Metadata><TypeSignature Language="C#" Value="public abstract class Change" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Change extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Model.Change" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Change" />
  <TypeSignature Language="C++ CLI" Value="public ref class Change abstract" />
  <TypeSignature Language="F#" Value="type Change = class" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Classe abstrata que, quando implementada, descreve uma alteração na árvore de modelo.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa classe é usada pela infraestrutura de Desfazer/Refazer para acompanhar as alterações feitas durante um episódio de edição.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Change ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.Change.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Change();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Cria uma nova instância da classe <see cref="T:System.Activities.Presentation.Model.Change" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public abstract bool Apply ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Apply() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.Change.Apply" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Apply () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Apply();" />
      <MemberSignature Language="F#" Value="abstract member Apply : unit -&gt; bool" Usage="change.Apply " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quando implementada em uma classe derivada, aplica a alteração na instância atual.</summary>
        <returns><see langword="true" /> se a alteração foi aplicada à instância atual; caso contrário, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public abstract string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.Change.Description" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Description { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Description : string" Usage="System.Activities.Presentation.Model.Change.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quando implementada em uma classe derivada, obtém uma descrição da alteração.</summary>
        <value>Uma cadeia de caracteres que contém uma descrição da alteração.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInverse">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.Change GetInverse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Activities.Presentation.Model.Change GetInverse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.Change.GetInverse" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetInverse () As Change" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Activities::Presentation::Model::Change ^ GetInverse();" />
      <MemberSignature Language="F#" Value="abstract member GetInverse : unit -&gt; System.Activities.Presentation.Model.Change" Usage="change.GetInverse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.Change</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quando implementada em uma classe derivada, recupera o inverso da alteração.</summary>
        <returns>O inverso da instância atual.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>