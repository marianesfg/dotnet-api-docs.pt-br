<Type Name="SymReader" FullName="System.Diagnostics.SymbolStore.SymReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="46351b31c79db5999423b6ca4c80e5819f022986" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SymReader : System.Diagnostics.SymbolStore.SymReaderBase, IDisposable, System.Diagnostics.SymbolStore.ISymbolReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SymReader extends System.Diagnostics.SymbolStore.SymReaderBase implements class System.Diagnostics.SymbolStore.ISymbolReader, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.SymbolStore.SymReader" />
  <TypeSignature Language="VB.NET" Value="Public Class SymReader&#xA;Inherits SymReaderBase&#xA;Implements IDisposable, ISymbolReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class SymReader : System::Diagnostics::SymbolStore::SymReaderBase, IDisposable, System::Diagnostics::SymbolStore::ISymbolReader" />
  <AssemblyInfo>
    <AssemblyName>ISymWrapper</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.SymbolStore.SymReaderBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Diagnostics.SymbolStore.ISymbolReader</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="d7dd8-101">Fornece acesso a documentos, métodos e variáveis em um repositório de símbolos.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d7dd8-101">Provides access to documents, methods, and variables within a symbol store.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymReader (System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader* pReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader* pReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader*)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymReader(System::Diagnostics::SymbolStore::Private::ISymUnmanagedReader* pReader);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pReader" Type="System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader*" />
      </Parameters>
      <Docs>
        <param name="pReader">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d7dd8-102">Libera os recursos usados pela instância atual da classe <see cref="T:System.Diagnostics.SymbolStore.SymReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-102">Releases the resources used by the current instance of the <see cref="T:System.Diagnostics.SymbolStore.SymReader" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override sealed void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d7dd8-103">Libera os recursos usados pela instância atual da classe <see cref="T:System.Diagnostics.SymbolStore.SymReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-103">Releases the resources used by the current instance of the <see cref="T:System.Diagnostics.SymbolStore.SymReader" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool A_0);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool A_0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (A_0 As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool A_0);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="A_0" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="A_0">
          <span data-ttu-id="d7dd8-104">
            <see langword="true" /> para liberar recursos gerenciados e não gerenciados, <see langword="false" /> para liberar apenas recursos não gerenciados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-104">
              <see langword="true" /> to release managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d7dd8-105">Chamado pelos métodos <see cref="M:System.Diagnostics.SymbolStore.SymReader.Dispose" /> e <see cref="M:System.Diagnostics.SymbolStore.SymReader.Finalize" /> para liberar os recursos gerenciados e não gerenciados usados pela instância atual da classe <see cref="T:System.Diagnostics.SymbolStore.SymReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-105">Called by the <see cref="M:System.Diagnostics.SymbolStore.SymReader.Dispose" /> and <see cref="M:System.Diagnostics.SymbolStore.SymReader.Finalize" /> methods to release the managed and unmanaged resources used by the current instance of the <see cref="T:System.Diagnostics.SymbolStore.SymReader" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7dd8-106">Este método é chamado somente pelo público <xref:System.Diagnostics.SymbolStore.SymReader.Dispose%2A> e <xref:System.Diagnostics.SymbolStore.SymReader.Finalize%2A> métodos; não chame este método diretamente.</span><span class="sxs-lookup"><span data-stu-id="d7dd8-106">This method is called only by the public <xref:System.Diagnostics.SymbolStore.SymReader.Dispose%2A> and <xref:System.Diagnostics.SymbolStore.SymReader.Finalize%2A> methods; do not call this method directly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SymReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!SymReader ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d7dd8-107">Libera recursos não gerenciados e executa outras operações de limpeza antes que <see cref="T:System.Diagnostics.SymbolStore.SymReader" /> seja recuperado pela coleta de lixo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-107">Releases unmanaged resources and performs other cleanup operations before the <see cref="T:System.Diagnostics.SymbolStore.SymReader" /> is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7dd8-108">Este método substitui  <xref:System.Object.Finalize%2A>.</span><span class="sxs-lookup"><span data-stu-id="d7dd8-108">This method overrides  <xref:System.Object.Finalize%2A>.</span></span> <span data-ttu-id="d7dd8-109">O código do aplicativo não deve chamar este método; o método `Finalize` de um objeto é invocado automaticamente durante a coleta de lixo, a menos que a finalização pelo coletor de lixo tenha sido desabilitada por uma chamada para o método <xref:System.GC.SuppressFinalize%2A>.</span><span class="sxs-lookup"><span data-stu-id="d7dd8-109">Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDocument">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolDocument GetDocument (string url, Guid language, Guid languageVendor, Guid documentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolDocument GetDocument(string url, valuetype System.Guid language, valuetype System.Guid languageVendor, valuetype System.Guid documentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.GetDocument(System.String,System.Guid,System.Guid,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDocument (url As String, language As Guid, languageVendor As Guid, documentType As Guid) As ISymbolDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Diagnostics::SymbolStore::ISymbolDocument ^ GetDocument(System::String ^ url, Guid language, Guid languageVendor, Guid documentType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="language" Type="System.Guid" />
        <Parameter Name="languageVendor" Type="System.Guid" />
        <Parameter Name="documentType" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="d7dd8-110">A URL que identifica o documento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-110">The URL that identifies the document.</span>
          </span>
        </param>
        <param name="language">
          <span data-ttu-id="d7dd8-111">O idioma do documento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-111">The document language.</span>
          </span>
          <span data-ttu-id="d7dd8-112">É possível especificar esse parâmetro como <see cref="F:System.Guid.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-112">You can specify this parameter as <see cref="F:System.Guid.Empty" />.</span>
          </span>
          <span data-ttu-id="d7dd8-113">para indicar qualquer idioma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-113">to indicate any language.</span>
          </span>
        </param>
        <param name="languageVendor">
          <span data-ttu-id="d7dd8-114">A identidade do fornecedor para o idioma do documento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-114">The identity of the vendor for the document language.</span>
          </span>
          <span data-ttu-id="d7dd8-115">É possível especificar este parâmetro como <see cref="F:System.Guid.Empty" /> para indicar qualquer fornecedor de idioma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-115">You can specify this parameter as <see cref="F:System.Guid.Empty" /> to indicate any language vendor.</span>
          </span>
        </param>
        <param name="documentType">
          <span data-ttu-id="d7dd8-116">O tipo do documento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-116">The type of the document.</span>
          </span>
          <span data-ttu-id="d7dd8-117">É possível especificar este parâmetro como <see cref="F:System.Guid.Empty" /> para indicar qualquer tipo de documento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-117">You can specify this parameter as <see cref="F:System.Guid.Empty" /> to indicate any document type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d7dd8-118">Obtém um documento especificado pela URL do documento e, opcionalmente, o idioma, fornecedor de idioma e tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-118">Gets a document specified by the URL for the document and optionally the language, language vendor, and type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d7dd8-119">O documento com a URL especificada se encontrado no repositório de símbolos ou <see langword="null" /> se o documento não existir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-119">The document with the specified URL if found in the symbol store, or <see langword="null" /> if the document does not exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7dd8-120">O `language`, `languageVendor`, e `documentType` parâmetros atualmente são ignorados.</span><span class="sxs-lookup"><span data-stu-id="d7dd8-120">The `language`, `languageVendor`, and `documentType` parameters are currently ignored.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDocuments">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolDocument[] GetDocuments ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolDocument[] GetDocuments() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.GetDocuments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDocuments () As ISymbolDocument()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Diagnostics::SymbolStore::ISymbolDocument ^&gt; ^ GetDocuments();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolDocument[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d7dd8-121">Obtém uma matriz de todos os documentos definidos no repositório de símbolos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-121">Gets an array of all documents defined in the symbol store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d7dd8-122">Uma matriz de todos os documentos definidos no repositório de símbolos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-122">An array of all documents defined in the symbol store.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="d7dd8-123">Não há memória suficiente para atender à solicitação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-123">There is insufficient memory to satisfy the request.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGlobalVariables">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolVariable[] GetGlobalVariables ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolVariable[] GetGlobalVariables() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.GetGlobalVariables" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGlobalVariables () As ISymbolVariable()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Diagnostics::SymbolStore::ISymbolVariable ^&gt; ^ GetGlobalVariables();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolVariable[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d7dd8-124">Gera um <see cref="T:System.NotSupportedException" /> em todos os casos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-124">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d7dd8-125">Gera um <see cref="T:System.NotSupportedException" /> em todos os casos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-125">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d7dd8-126">Em todos os casos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-126">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMethod">
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d7dd8-127">Obtém um objeto do método de leitor de símbolo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-127">Gets a symbol reader method object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolMethod GetMethod (System.Diagnostics.SymbolStore.SymbolToken method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolMethod GetMethod(valuetype System.Diagnostics.SymbolStore.SymbolToken method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMethod (method As SymbolToken) As ISymbolMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Diagnostics::SymbolStore::ISymbolMethod ^ GetMethod(System::Diagnostics::SymbolStore::SymbolToken method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolMethod</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Diagnostics.SymbolStore.SymbolToken" />
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="d7dd8-128">O token de metadados do método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-128">The metadata token of the method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d7dd8-129">Obtém um objeto do método de leitor de símbolo quando o identificador de um método é fornecido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-129">Gets a symbol reader method object when given the identifier of a method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d7dd8-130">O objeto do método de leitor de símbolo para o identificador do método especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-130">The symbol reader method object for the specified method identifier.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolMethod GetMethod (System.Diagnostics.SymbolStore.SymbolToken method, int version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolMethod GetMethod(valuetype System.Diagnostics.SymbolStore.SymbolToken method, int32 version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMethod (method As SymbolToken, version As Integer) As ISymbolMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Diagnostics::SymbolStore::ISymbolMethod ^ GetMethod(System::Diagnostics::SymbolStore::SymbolToken method, int version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolMethod</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Diagnostics.SymbolStore.SymbolToken" />
        <Parameter Name="version" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="d7dd8-131">O token de metadados do método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-131">The metadata token of the method.</span>
          </span>
        </param>
        <param name="version">
          <span data-ttu-id="d7dd8-132">A versão de edição e continuação do método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-132">The edit and continue version of the method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d7dd8-133">Obtém um objeto do método de leitor de símbolo quando é fornecido o identificador de um método e sua versão de edição e continuação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-133">Gets a symbol reader method object when given the identifier of a method and its edit and continue version.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d7dd8-134">O objeto do método de leitor de símbolo para o identificador e a versão do método especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-134">The symbol reader method object for the specified method identifier and version.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethodFromDocumentPosition">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolMethod GetMethodFromDocumentPosition (System.Diagnostics.SymbolStore.ISymbolDocument document, int line, int column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolMethod GetMethodFromDocumentPosition(class System.Diagnostics.SymbolStore.ISymbolDocument document, int32 line, int32 column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.GetMethodFromDocumentPosition(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMethodFromDocumentPosition (document As ISymbolDocument, line As Integer, column As Integer) As ISymbolMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Diagnostics::SymbolStore::ISymbolMethod ^ GetMethodFromDocumentPosition(System::Diagnostics::SymbolStore::ISymbolDocument ^ document, int line, int column);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolMethod</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="System.Diagnostics.SymbolStore.ISymbolDocument" />
        <Parameter Name="line" Type="System.Int32" />
        <Parameter Name="column" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="document">
          <span data-ttu-id="d7dd8-135">O documento no qual o método está localizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-135">The document in which the method is located.</span>
          </span>
        </param>
        <param name="line">
          <span data-ttu-id="d7dd8-136">A posição da linha dentro do documento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-136">The position of the line within the document.</span>
          </span>
          <span data-ttu-id="d7dd8-137">As linhas são numeradas, começando com 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-137">The lines are numbered, beginning with 1.</span>
          </span>
        </param>
        <param name="column">
          <span data-ttu-id="d7dd8-138">A posição da coluna dentro do documento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-138">The position of column within the document.</span>
          </span>
          <span data-ttu-id="d7dd8-139">As colunas são numeradas, começando com 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-139">The columns are numbered, beginning with 1.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d7dd8-140">Obtém um objeto do método de leitor de símbolo que contém uma posição especificada em um documento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-140">Gets a symbol reader method object that contains a specified position in a document.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d7dd8-141">O objeto do método de leitor de símbolo para a posição especificada no documento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-141">The symbol reader method object for the specified position in the document.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNamespaces">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolNamespace[] GetNamespaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolNamespace[] GetNamespaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.GetNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNamespaces () As ISymbolNamespace()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Diagnostics::SymbolStore::ISymbolNamespace ^&gt; ^ GetNamespaces();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolNamespace[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d7dd8-142">Gera um <see cref="T:System.NotSupportedException" /> em todos os casos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-142">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d7dd8-143">Gera um <see cref="T:System.NotSupportedException" /> em todos os casos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-143">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d7dd8-144">Em todos os casos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-144">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSymAttribute">
      <MemberSignature Language="C#" Value="public virtual byte[] GetSymAttribute (System.Diagnostics.SymbolStore.SymbolToken parent, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetSymAttribute(valuetype System.Diagnostics.SymbolStore.SymbolToken parent, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.GetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSymAttribute (parent As SymbolToken, name As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetSymAttribute(System::Diagnostics::SymbolStore::SymbolToken parent, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="System.Diagnostics.SymbolStore.SymbolToken" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parent">
          <span data-ttu-id="d7dd8-145">Este parâmetro não é usado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-145">This parameter is not used.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="d7dd8-146">Este parâmetro não é usado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-146">This parameter is not used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d7dd8-147">Gera um <see cref="T:System.NotSupportedException" /> em todos os casos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-147">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d7dd8-148">Gera um <see cref="T:System.NotSupportedException" /> em todos os casos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-148">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d7dd8-149">Em todos os casos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-149">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVariables">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolVariable[] GetVariables (System.Diagnostics.SymbolStore.SymbolToken parent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolVariable[] GetVariables(valuetype System.Diagnostics.SymbolStore.SymbolToken parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.GetVariables(System.Diagnostics.SymbolStore.SymbolToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVariables (parent As SymbolToken) As ISymbolVariable()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Diagnostics::SymbolStore::ISymbolVariable ^&gt; ^ GetVariables(System::Diagnostics::SymbolStore::SymbolToken parent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolVariable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="System.Diagnostics.SymbolStore.SymbolToken" />
      </Parameters>
      <Docs>
        <param name="parent">
          <span data-ttu-id="d7dd8-150">Este parâmetro não é usado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-150">This parameter is not used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d7dd8-151">Gera um <see cref="T:System.NotSupportedException" /> em todos os casos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-151">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d7dd8-152">Gera um <see cref="T:System.NotSupportedException" /> em todos os casos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-152">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d7dd8-153">Em todos os casos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-153">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReplaceSymbolStore">
      <MemberSignature Language="C#" Value="public virtual void ReplaceSymbolStore (string fileName, IntPtr stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReplaceSymbolStore(string fileName, native int stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.ReplaceSymbolStore(System.String,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReplaceSymbolStore (fileName As String, stream As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReplaceSymbolStore(System::String ^ fileName, IntPtr stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="stream" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="d7dd8-154">O nome do arquivo que contém o repositório de símbolos ou <see langword="null" /> se estiver usando um repositório na memória.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-154">The name of the file containing the symbol store, or <see langword="null" /> if using an in-memory store.</span>
          </span>
        </param>
        <param name="stream">
          <span data-ttu-id="d7dd8-155">O ponteiro para o fluxo de entrada para o repositório de símbolos ou <see cref="F:System.IntPtr.Zero" /> se estiver usando um repositório em disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-155">The pointer to the input stream for the symbol store, or <see cref="F:System.IntPtr.Zero" /> if using an on-disk store.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d7dd8-156">Substitui o repositório de símbolos existente por um repositório de símbolos delta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-156">Replaces the existing symbol store with a delta symbol store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7dd8-157">O <xref:System.Diagnostics.SymbolStore.SymReader.ReplaceSymbolStore%2A> é muito parecida com a <xref:System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore%2A> método, mas o determinado delta atua como uma substituição completa em vez de uma atualização.</span><span class="sxs-lookup"><span data-stu-id="d7dd8-157">The <xref:System.Diagnostics.SymbolStore.SymReader.ReplaceSymbolStore%2A> is much like the <xref:System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore%2A> method, but the given delta acts as a complete replacement rather than an update.</span></span>  
  
 <span data-ttu-id="d7dd8-158">Somente um dos parâmetros, `fileName` ou `stream`, precisa ser especificado.</span><span class="sxs-lookup"><span data-stu-id="d7dd8-158">Only one of the parameters, `fileName` or `stream`, needs to be specified.</span></span> <span data-ttu-id="d7dd8-159">Se `fileName` for especificado, o armazenamento de símbolo é atualizado com os símbolos no arquivo.</span><span class="sxs-lookup"><span data-stu-id="d7dd8-159">If `fileName` is specified, the symbol store is updated with the symbols in that file.</span></span> <span data-ttu-id="d7dd8-160">Se `stream` for especificado, o armazenamento de símbolo é atualizado com os dados a partir de <xref:System.Runtime.InteropServices.ComTypes.IStream> .</span><span class="sxs-lookup"><span data-stu-id="d7dd8-160">If `stream` is specified, the symbol store is updated with the data from the <xref:System.Runtime.InteropServices.ComTypes.IStream> .</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSymbolStore">
      <MemberSignature Language="C#" Value="public virtual void UpdateSymbolStore (string fileName, IntPtr stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateSymbolStore(string fileName, native int stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore(System.String,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UpdateSymbolStore (fileName As String, stream As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UpdateSymbolStore(System::String ^ fileName, IntPtr stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="stream" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="d7dd8-161">O nome do arquivo que contém o repositório de símbolos ou <see langword="null" /> se estiver usando um repositório na memória.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-161">The name of the file containing the symbol store, or <see langword="null" /> if using an in-memory store.</span>
          </span>
        </param>
        <param name="stream">
          <span data-ttu-id="d7dd8-162">O ponteiro para o fluxo de entrada para o repositório de símbolos ou <see cref="F:System.IntPtr.Zero" /> se estiver usando um repositório em disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-162">The pointer to the input stream for the symbol store, or <see cref="F:System.IntPtr.Zero" /> if using an on-disk store.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d7dd8-163">Atualiza o repositório de símbolos existente com um repositório de símbolos delta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-163">Updates the existing symbol store with a delta symbol store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7dd8-164">Esse método é usado em cenários de editar e continuar como uma maneira de atualizar o armazenamento de símbolo para corresponder os deltas de arquivo PE original.</span><span class="sxs-lookup"><span data-stu-id="d7dd8-164">This method is used in Edit and Continue scenarios as a way to update the symbol store to match deltas to the original PE file.</span></span>  
  
 <span data-ttu-id="d7dd8-165">Somente um dos parâmetros, `fileName` ou `stream`, precisa ser especificado.</span><span class="sxs-lookup"><span data-stu-id="d7dd8-165">Only one of the parameters, `fileName` or `stream`, needs to be specified.</span></span> <span data-ttu-id="d7dd8-166">Se `fileName` for especificado, o armazenamento de símbolo é atualizado com os símbolos no arquivo.</span><span class="sxs-lookup"><span data-stu-id="d7dd8-166">If `fileName` is specified, the symbol store is updated with the symbols in that file.</span></span> <span data-ttu-id="d7dd8-167">Se `stream` for especificado, o armazenamento de símbolo é atualizado com os dados a partir de <xref:System.Runtime.InteropServices.ComTypes.IStream> .</span><span class="sxs-lookup"><span data-stu-id="d7dd8-167">If `stream` is specified, the symbol store is updated with the data from the <xref:System.Runtime.InteropServices.ComTypes.IStream> .</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserEntryPoint">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.SymbolToken UserEntryPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.SymbolStore.SymbolToken UserEntryPoint" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.SymbolStore.SymReader.UserEntryPoint" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UserEntryPoint As SymbolToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Diagnostics::SymbolStore::SymbolToken UserEntryPoint { System::Diagnostics::SymbolStore::SymbolToken get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.SymbolToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d7dd8-168">Obtém o token de metadados para o método especificado como o ponto de entrada do usuário para o módulo, caso haja algum.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-168">Gets the metadata token for the method that was specified as the user entry point for the module, if any.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d7dd8-169">Ponto de token de metadados para o método que é a entrada do usuário para o módulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-169">The metadata token for the method that is the user entry point for the module.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7dd8-170">Normalmente, o valor de retorno é o método principal.</span><span class="sxs-lookup"><span data-stu-id="d7dd8-170">The return value is normally the main method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="d7dd8-171">Um ponto de entrada não foi encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7dd8-171">An entry point was not found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>