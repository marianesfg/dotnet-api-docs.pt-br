<Type Name="SymBinder" FullName="System.Diagnostics.SymbolStore.SymBinder">
  <TypeSignature Language="C#" Value="public class SymBinder : System.Diagnostics.SymbolStore.SymBinderBase, IDisposable, System.Diagnostics.SymbolStore.ISymbolBinder, System.Diagnostics.SymbolStore.ISymbolBinder1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SymBinder extends System.Diagnostics.SymbolStore.SymBinderBase implements class System.Diagnostics.SymbolStore.ISymbolBinder, class System.Diagnostics.SymbolStore.ISymbolBinder1, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.SymbolStore.SymBinder" />
  <TypeSignature Language="VB.NET" Value="Public Class SymBinder&#xA;Inherits SymBinderBase&#xA;Implements IDisposable, ISymbolBinder, ISymbolBinder1" />
  <TypeSignature Language="C++ CLI" Value="public ref class SymBinder : System::Diagnostics::SymbolStore::SymBinderBase, IDisposable, System::Diagnostics::SymbolStore::ISymbolBinder, System::Diagnostics::SymbolStore::ISymbolBinder1" />
  <AssemblyInfo>
    <AssemblyName>ISymWrapper</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.SymbolStore.SymBinderBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Diagnostics.SymbolStore.ISymbolBinder</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Diagnostics.SymbolStore.ISymbolBinder1</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b6b8b-101">Representa um associador de símbolos para código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="b6b8b-101">Represents a symbol binder for managed code.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymBinder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymBinder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymBinder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b6b8b-102">Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.SymbolStore.SymBinder" />.</span><span class="sxs-lookup"><span data-stu-id="b6b8b-102">Initializes a new instance of the <see cref="T:System.Diagnostics.SymbolStore.SymBinder" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="b6b8b-103">a capacidade de acessar o código não gerenciado.</span><span class="sxs-lookup"><span data-stu-id="b6b8b-103">for the ability to access unmanaged code.</span></span> <span data-ttu-id="b6b8b-104">Enumeração associada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="b6b8b-104">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b6b8b-105">Libera os recursos usados pela instância atual da classe <see cref="T:System.Diagnostics.SymbolStore.SymBinder" />.</span><span class="sxs-lookup"><span data-stu-id="b6b8b-105">Releases the resources used by the current instance of the <see cref="T:System.Diagnostics.SymbolStore.SymBinder" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override sealed void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymBinder.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b6b8b-106">Libera os recursos usados pela instância atual da classe <see cref="T:System.Diagnostics.SymbolStore.SymBinder" />.</span><span class="sxs-lookup"><span data-stu-id="b6b8b-106">Releases the resources used by the current instance of the <see cref="T:System.Diagnostics.SymbolStore.SymBinder" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool A_0);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool A_0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymBinder.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (A_0 As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool A_0);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="A_0" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="A_0">
          <span data-ttu-id="b6b8b-107"><see langword="true" /> para liberar recursos gerenciados e não gerenciados, <see langword="false" /> para liberar apenas recursos não gerenciados.</span><span class="sxs-lookup"><span data-stu-id="b6b8b-107"><see langword="true" /> to release managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="b6b8b-108">Chamado pelos métodos <see cref="M:System.Diagnostics.SymbolStore.SymBinder.Dispose" /> e <see cref="M:System.Diagnostics.SymbolStore.SymBinder.Finalize" /> para liberar os recursos gerenciados e não gerenciados usados pela instância atual da classe <see cref="T:System.Diagnostics.SymbolStore.SymBinder" />.</span><span class="sxs-lookup"><span data-stu-id="b6b8b-108">Called by the <see cref="M:System.Diagnostics.SymbolStore.SymBinder.Dispose" /> and <see cref="M:System.Diagnostics.SymbolStore.SymBinder.Finalize" /> methods to release the managed and unmanaged resources used by the current instance of the <see cref="T:System.Diagnostics.SymbolStore.SymBinder" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6b8b-109">Este método é chamado somente pelo público <xref:System.Diagnostics.SymbolStore.SymBinder.Dispose%2A> e <xref:System.Diagnostics.SymbolStore.SymBinder.Finalize%2A> métodos; não chame este método diretamente.</span><span class="sxs-lookup"><span data-stu-id="b6b8b-109">This method is called only by the public <xref:System.Diagnostics.SymbolStore.SymBinder.Dispose%2A> and <xref:System.Diagnostics.SymbolStore.SymBinder.Finalize%2A> methods; do not call this method directly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SymBinder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymBinder.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!SymBinder ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b6b8b-110">Libera os recursos mantidos pela instância atual.</span><span class="sxs-lookup"><span data-stu-id="b6b8b-110">Releases the resources held by the current instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6b8b-111">Este método substitui <xref:System.Object.Finalize%2A>.</span><span class="sxs-lookup"><span data-stu-id="b6b8b-111">This method overrides <xref:System.Object.Finalize%2A>.</span></span> <span data-ttu-id="b6b8b-112">O código do aplicativo não deve chamar este método; o método `Finalize` de um objeto é invocado automaticamente durante a coleta de lixo, a menos que a finalização pelo coletor de lixo tenha sido desabilitada por uma chamada para o método <xref:System.GC.SuppressFinalize%2A>.</span><span class="sxs-lookup"><span data-stu-id="b6b8b-112">Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetReader">
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b6b8b-113">Obtém a interface do leitor de símbolo para o arquivo atual.</span><span class="sxs-lookup"><span data-stu-id="b6b8b-113">Gets the interface of the symbol reader for the current file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetReader">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolReader GetReader (int importer, string filename, string searchPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolReader GetReader(int32 importer, string filename, string searchPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymBinder.GetReader(System.Int32,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReader (importer As Integer, filename As String, searchPath As String) As ISymbolReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Diagnostics::SymbolStore::ISymbolReader ^ GetReader(int importer, System::String ^ filename, System::String ^ searchPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is SymBinder.GetReader(IntPtr, String). ISymbolBinder1.GetReader takes the importer interface pointer as an IntPtr instead of an Int32, and thus works on both 32-bit and 64-bit architectures. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importer" Type="System.Int32" />
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="searchPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="importer"><span data-ttu-id="b6b8b-114">Um inteiro de 32 bits que aponta para a interface de importação de metadados.</span><span class="sxs-lookup"><span data-stu-id="b6b8b-114">A 32-bit integer that points to the metadata import interface.</span></span></param>
        <param name="filename"><span data-ttu-id="b6b8b-115">O nome do arquivo para o qual a interface de leitor é necessária.</span><span class="sxs-lookup"><span data-stu-id="b6b8b-115">The name of the file for which the reader interface is required.</span></span></param>
        <param name="searchPath"><span data-ttu-id="b6b8b-116">O caminho de pesquisa usado para localizar o arquivo de símbolo.</span><span class="sxs-lookup"><span data-stu-id="b6b8b-116">The search path used to locate the symbol file.</span></span></param>
        <summary><span data-ttu-id="b6b8b-117">Obtém a interface do leitor de símbolo para o arquivo atual usando o ponteiro de inteiro de 32 bits para uma interface de metadados, o nome do arquivo e o caminho de pesquisa especificados.</span><span class="sxs-lookup"><span data-stu-id="b6b8b-117">Gets the interface of the symbol reader for the current file, using the specified 32-bit integer pointer to a metadata interface, the specified file name, and the specified search path.</span></span></summary>
        <returns><span data-ttu-id="b6b8b-118">A interface que lê os símbolos de depuração.</span><span class="sxs-lookup"><span data-stu-id="b6b8b-118">The interface that reads the debugging symbols.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6b8b-119">Quando é fornecido um ponteiro para uma interface de metadados, um nome de arquivo e um caminho de pesquisa, o <xref:System.Diagnostics.SymbolStore.SymBinder.GetReader%2A> método retorna o <xref:System.Diagnostics.SymbolStore.ISymbolReader> interface que lê os símbolos de depuração associados com o módulo.</span><span class="sxs-lookup"><span data-stu-id="b6b8b-119">When given a pointer to a metadata interface, a file name, and a search path, the <xref:System.Diagnostics.SymbolStore.SymBinder.GetReader%2A> method returns the <xref:System.Diagnostics.SymbolStore.ISymbolReader> interface that reads the debugging symbols associated with the module.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b6b8b-120">Não é recomendável usar um inteiro de 32 bits como um ponteiro.</span><span class="sxs-lookup"><span data-stu-id="b6b8b-120">Using a 32-bit integer as a pointer is not recommended.</span></span> <span data-ttu-id="b6b8b-121">Use o <xref:System.Diagnostics.SymbolStore.SymBinder.GetReader%2A> sobrecarga.</span><span class="sxs-lookup"><span data-stu-id="b6b8b-121">Use the <xref:System.Diagnostics.SymbolStore.SymBinder.GetReader%2A> overload instead.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="b6b8b-122">a capacidade de acessar o código não gerenciado.</span><span class="sxs-lookup"><span data-stu-id="b6b8b-122">for the ability to access unmanaged code.</span></span> <span data-ttu-id="b6b8b-123">Ação de segurança: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="b6b8b-123">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="b6b8b-124">Enumeração associada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="b6b8b-124">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetReader">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolReader GetReader (IntPtr importer, string filename, string searchPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolReader GetReader(native int importer, string filename, string searchPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymBinder.GetReader(System.IntPtr,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReader (importer As IntPtr, filename As String, searchPath As String) As ISymbolReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Diagnostics::SymbolStore::ISymbolReader ^ GetReader(IntPtr importer, System::String ^ filename, System::String ^ searchPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importer" Type="System.IntPtr" />
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="searchPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="importer"><span data-ttu-id="b6b8b-125">Uma estrutura que aponta para a interface de importação de metadados.</span><span class="sxs-lookup"><span data-stu-id="b6b8b-125">A structure that points to the metadata import interface.</span></span></param>
        <param name="filename"><span data-ttu-id="b6b8b-126">O nome do arquivo para o qual a interface de leitor é necessária.</span><span class="sxs-lookup"><span data-stu-id="b6b8b-126">The name of the file for which the reader interface is required.</span></span></param>
        <param name="searchPath"><span data-ttu-id="b6b8b-127">O caminho de pesquisa usado para localizar o arquivo de símbolo.</span><span class="sxs-lookup"><span data-stu-id="b6b8b-127">The search path used to locate the symbol file.</span></span></param>
        <summary><span data-ttu-id="b6b8b-128">Obtém a interface do leitor de símbolo para o arquivo atual usando o ponteiro para uma interface de metadados, o nome do arquivo e o caminho de pesquisa especificados.</span><span class="sxs-lookup"><span data-stu-id="b6b8b-128">Gets the interface of the symbol reader for the current file, using the specified pointer to a metadata interface, the specified file name, and the specified search path.</span></span></summary>
        <returns><span data-ttu-id="b6b8b-129">A interface que lê os símbolos de depuração.</span><span class="sxs-lookup"><span data-stu-id="b6b8b-129">The interface that reads the debugging symbols.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6b8b-130">Quando é fornecido um ponteiro para uma interface de metadados, um nome de arquivo e um caminho de pesquisa, o <xref:System.Diagnostics.SymbolStore.SymBinder.GetReader%2A> método retorna o <xref:System.Diagnostics.SymbolStore.ISymbolReader> interface que lê os símbolos de depuração associados com o módulo.</span><span class="sxs-lookup"><span data-stu-id="b6b8b-130">When given a pointer to a metadata interface, a file name, and a search path, the <xref:System.Diagnostics.SymbolStore.SymBinder.GetReader%2A> method returns the <xref:System.Diagnostics.SymbolStore.ISymbolReader> interface that reads the debugging symbols associated with the module.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="b6b8b-131">a capacidade de acessar o código não gerenciado.</span><span class="sxs-lookup"><span data-stu-id="b6b8b-131">for the ability to access unmanaged code.</span></span> <span data-ttu-id="b6b8b-132">Ação de segurança: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="b6b8b-132">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="b6b8b-133">Enumeração associada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="b6b8b-133">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>