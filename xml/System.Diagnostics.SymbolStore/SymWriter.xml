<Type Name="SymWriter" FullName="System.Diagnostics.SymbolStore.SymWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="dc7400851f6e61859899b9a8ce3c0fbfecb27b1c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36675694" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SymWriter : System.Diagnostics.SymbolStore.SymWriterBase, IDisposable, System.Diagnostics.SymbolStore.ISymbolWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SymWriter extends System.Diagnostics.SymbolStore.SymWriterBase implements class System.Diagnostics.SymbolStore.ISymbolWriter, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.SymbolStore.SymWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class SymWriter&#xA;Inherits SymWriterBase&#xA;Implements IDisposable, ISymbolWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class SymWriter : System::Diagnostics::SymbolStore::SymWriterBase, IDisposable, System::Diagnostics::SymbolStore::ISymbolWriter" />
  <TypeSignature Language="F#" Value="type SymWriter = class&#xA;    inherit SymWriterBase&#xA;    interface ISymbolWriter&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>ISymWrapper</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.SymbolStore.SymWriterBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Diagnostics.SymbolStore.ISymbolWriter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="fb487-101">Represents a symbol writer for managed code.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fb487-101">Represents a symbol writer for managed code.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb487-102">O <xref:System.Diagnostics.SymbolStore.SymWriter> classe fornece métodos que definem a documentos, pontos de sequência, escopos de léxicos e variáveis.</span><span class="sxs-lookup"><span data-stu-id="fb487-102">The <xref:System.Diagnostics.SymbolStore.SymWriter> class provides methods that define documents, sequence points, lexical scopes, and variables.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymWriter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fb487-103">Initializes a new instance of the <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-103">Initializes a new instance of the <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="fb487-104">a capacidade de acessar o código não gerenciado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-104">for the ability to access unmanaged code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymWriter (bool noUnderlyingWriter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool noUnderlyingWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (noUnderlyingWriter As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymWriter(bool noUnderlyingWriter);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.SymbolStore.SymWriter : bool -&gt; System.Diagnostics.SymbolStore.SymWriter" Usage="new System.Diagnostics.SymbolStore.SymWriter noUnderlyingWriter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="noUnderlyingWriter" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="noUnderlyingWriter">
          <span data-ttu-id="fb487-105">
            <see langword="true" /> if an underlying symbol writer will be provided by calling the <see cref="M:System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter(System.IntPtr)" /> method; <see langword="false" /> if a default underlying symbol writer should be created instead.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-105">
              <see langword="true" /> if an underlying symbol writer will be provided by calling the <see cref="M:System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter(System.IntPtr)" /> method; <see langword="false" /> if a default underlying symbol writer should be created instead.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fb487-106">Initializes a new instance of the <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> class, specifying whether to create an underlying symbol writer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-106">Initializes a new instance of the <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> class, specifying whether to create an underlying symbol writer.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="symWriter.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fb487-107">Closes the <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> and commits the symbols to the symbol store.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-107">Closes the <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> and commits the symbols to the symbol store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb487-108">Após essa chamada, o <xref:System.Diagnostics.SymbolStore.SymWriter> se torna inválido para obter informações mais atualizadas.</span><span class="sxs-lookup"><span data-stu-id="fb487-108">After this call, the <xref:System.Diagnostics.SymbolStore.SymWriter> becomes invalid for further updates.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseMethod">
      <MemberSignature Language="C#" Value="public virtual void CloseMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseMethod() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.CloseMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CloseMethod ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CloseMethod();" />
      <MemberSignature Language="F#" Value="abstract member CloseMethod : unit -&gt; unit&#xA;override this.CloseMethod : unit -&gt; unit" Usage="symWriter.CloseMethod " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fb487-109">Closes the current method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-109">Closes the current method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb487-110">Depois que um método é fechado, não é possível definir um símbolo de dentro do método.</span><span class="sxs-lookup"><span data-stu-id="fb487-110">After a method is closed, you cannot define a symbol from within the method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseNamespace">
      <MemberSignature Language="C#" Value="public virtual void CloseNamespace ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseNamespace() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.CloseNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CloseNamespace ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CloseNamespace();" />
      <MemberSignature Language="F#" Value="abstract member CloseNamespace : unit -&gt; unit&#xA;override this.CloseNamespace : unit -&gt; unit" Usage="symWriter.CloseNamespace " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fb487-111">Closes the most recent namespace.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-111">Closes the most recent namespace.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseScope">
      <MemberSignature Language="C#" Value="public virtual void CloseScope (int endOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseScope(int32 endOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.CloseScope(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CloseScope (endOffset As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CloseScope(int endOffset);" />
      <MemberSignature Language="F#" Value="abstract member CloseScope : int -&gt; unit&#xA;override this.CloseScope : int -&gt; unit" Usage="symWriter.CloseScope endOffset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="endOffset">
          <span data-ttu-id="fb487-112">The IL offset just past the last instruction in the scope.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-112">The IL offset just past the last instruction in the scope.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fb487-113">Closes the current lexical scope.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-113">Closes the current lexical scope.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb487-114">Depois que um escopo é fechado, você não pode definir uma variável de dentro do método.</span><span class="sxs-lookup"><span data-stu-id="fb487-114">After a scope is closed, you cannot define a variable from within the method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineDocument">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolDocumentWriter DefineDocument (string url, Guid language, Guid languageVendor, Guid documentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolDocumentWriter DefineDocument(string url, valuetype System.Guid language, valuetype System.Guid languageVendor, valuetype System.Guid documentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DefineDocument (url As String, language As Guid, languageVendor As Guid, documentType As Guid) As ISymbolDocumentWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Diagnostics::SymbolStore::ISymbolDocumentWriter ^ DefineDocument(System::String ^ url, Guid language, Guid languageVendor, Guid documentType);" />
      <MemberSignature Language="F#" Value="abstract member DefineDocument : string * Guid * Guid * Guid -&gt; System.Diagnostics.SymbolStore.ISymbolDocumentWriter&#xA;override this.DefineDocument : string * Guid * Guid * Guid -&gt; System.Diagnostics.SymbolStore.ISymbolDocumentWriter" Usage="symWriter.DefineDocument (url, language, languageVendor, documentType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolDocumentWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="language" Type="System.Guid" />
        <Parameter Name="languageVendor" Type="System.Guid" />
        <Parameter Name="documentType" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="fb487-115">The URL that identifies the document.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-115">The URL that identifies the document.</span>
          </span>
        </param>
        <param name="language">
          <span data-ttu-id="fb487-116">The document language.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-116">The document language.</span>
          </span>
          <span data-ttu-id="fb487-117">This parameter can be <see cref="F:System.Guid.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-117">This parameter can be <see cref="F:System.Guid.Empty" />.</span>
          </span>
        </param>
        <param name="languageVendor">
          <span data-ttu-id="fb487-118">The identity of the vendor for the document language.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-118">The identity of the vendor for the document language.</span>
          </span>
          <span data-ttu-id="fb487-119">This parameter can be <see cref="F:System.Guid.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-119">This parameter can be <see cref="F:System.Guid.Empty" />.</span>
          </span>
        </param>
        <param name="documentType">
          <span data-ttu-id="fb487-120">The type of the document.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-120">The type of the document.</span>
          </span>
          <span data-ttu-id="fb487-121">This parameter can be <see cref="F:System.Guid.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-121">This parameter can be <see cref="F:System.Guid.Empty" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fb487-122">Defines a source document.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-122">Defines a source document.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fb487-123">The <see cref="T:System.Diagnostics.SymbolStore.ISymbolDocumentWriter" /> object that represents the document.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-123">The <see cref="T:System.Diagnostics.SymbolStore.ISymbolDocumentWriter" /> object that represents the document.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineField">
      <MemberSignature Language="C#" Value="public virtual void DefineField (System.Diagnostics.SymbolStore.SymbolToken parent, string name, System.Reflection.FieldAttributes attributes, byte[] signature, System.Diagnostics.SymbolStore.SymAddressKind addrKind, int addr1, int addr2, int addr3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DefineField(valuetype System.Diagnostics.SymbolStore.SymbolToken parent, string name, valuetype System.Reflection.FieldAttributes attributes, unsigned int8[] signature, valuetype System.Diagnostics.SymbolStore.SymAddressKind addrKind, int32 addr1, int32 addr2, int32 addr3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DefineField (parent As SymbolToken, name As String, attributes As FieldAttributes, signature As Byte(), addrKind As SymAddressKind, addr1 As Integer, addr2 As Integer, addr3 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DefineField(System::Diagnostics::SymbolStore::SymbolToken parent, System::String ^ name, System::Reflection::FieldAttributes attributes, cli::array &lt;System::Byte&gt; ^ signature, System::Diagnostics::SymbolStore::SymAddressKind addrKind, int addr1, int addr2, int addr3);" />
      <MemberSignature Language="F#" Value="abstract member DefineField : System.Diagnostics.SymbolStore.SymbolToken * string * System.Reflection.FieldAttributes * byte[] * System.Diagnostics.SymbolStore.SymAddressKind * int * int * int -&gt; unit&#xA;override this.DefineField : System.Diagnostics.SymbolStore.SymbolToken * string * System.Reflection.FieldAttributes * byte[] * System.Diagnostics.SymbolStore.SymAddressKind * int * int * int -&gt; unit" Usage="symWriter.DefineField (parent, name, attributes, signature, addrKind, addr1, addr2, addr3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="System.Diagnostics.SymbolStore.SymbolToken" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attributes" Type="System.Reflection.FieldAttributes" />
        <Parameter Name="signature" Type="System.Byte[]" />
        <Parameter Name="addrKind" Type="System.Diagnostics.SymbolStore.SymAddressKind" />
        <Parameter Name="addr1" Type="System.Int32" />
        <Parameter Name="addr2" Type="System.Int32" />
        <Parameter Name="addr3" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parent">
          <span data-ttu-id="fb487-124">This parameter is not used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-124">This parameter is not used.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="fb487-125">This parameter is not used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-125">This parameter is not used.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="fb487-126">This parameter is not used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-126">This parameter is not used.</span>
          </span>
        </param>
        <param name="signature">
          <span data-ttu-id="fb487-127">This parameter is not used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-127">This parameter is not used.</span>
          </span>
        </param>
        <param name="addrKind">
          <span data-ttu-id="fb487-128">This parameter is not used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-128">This parameter is not used.</span>
          </span>
        </param>
        <param name="addr1">
          <span data-ttu-id="fb487-129">This parameter is not used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-129">This parameter is not used.</span>
          </span>
        </param>
        <param name="addr2">
          <span data-ttu-id="fb487-130">This parameter is not used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-130">This parameter is not used.</span>
          </span>
        </param>
        <param name="addr3">
          <span data-ttu-id="fb487-131">This parameter is not used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-131">This parameter is not used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fb487-132">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-132">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="fb487-133">In all cases.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-133">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DefineGlobalVariable">
      <MemberSignature Language="C#" Value="public virtual void DefineGlobalVariable (string name, System.Reflection.FieldAttributes attributes, byte[] signature, System.Diagnostics.SymbolStore.SymAddressKind addrKind, int addr1, int addr2, int addr3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DefineGlobalVariable(string name, valuetype System.Reflection.FieldAttributes attributes, unsigned int8[] signature, valuetype System.Diagnostics.SymbolStore.SymAddressKind addrKind, int32 addr1, int32 addr2, int32 addr3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DefineGlobalVariable (name As String, attributes As FieldAttributes, signature As Byte(), addrKind As SymAddressKind, addr1 As Integer, addr2 As Integer, addr3 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DefineGlobalVariable(System::String ^ name, System::Reflection::FieldAttributes attributes, cli::array &lt;System::Byte&gt; ^ signature, System::Diagnostics::SymbolStore::SymAddressKind addrKind, int addr1, int addr2, int addr3);" />
      <MemberSignature Language="F#" Value="abstract member DefineGlobalVariable : string * System.Reflection.FieldAttributes * byte[] * System.Diagnostics.SymbolStore.SymAddressKind * int * int * int -&gt; unit&#xA;override this.DefineGlobalVariable : string * System.Reflection.FieldAttributes * byte[] * System.Diagnostics.SymbolStore.SymAddressKind * int * int * int -&gt; unit" Usage="symWriter.DefineGlobalVariable (name, attributes, signature, addrKind, addr1, addr2, addr3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attributes" Type="System.Reflection.FieldAttributes" />
        <Parameter Name="signature" Type="System.Byte[]" />
        <Parameter Name="addrKind" Type="System.Diagnostics.SymbolStore.SymAddressKind" />
        <Parameter Name="addr1" Type="System.Int32" />
        <Parameter Name="addr2" Type="System.Int32" />
        <Parameter Name="addr3" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="fb487-134">This parameter is not used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-134">This parameter is not used.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="fb487-135">This parameter is not used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-135">This parameter is not used.</span>
          </span>
        </param>
        <param name="signature">
          <span data-ttu-id="fb487-136">This parameter is not used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-136">This parameter is not used.</span>
          </span>
        </param>
        <param name="addrKind">
          <span data-ttu-id="fb487-137">This parameter is not used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-137">This parameter is not used.</span>
          </span>
        </param>
        <param name="addr1">
          <span data-ttu-id="fb487-138">This parameter is not used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-138">This parameter is not used.</span>
          </span>
        </param>
        <param name="addr2">
          <span data-ttu-id="fb487-139">This parameter is not used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-139">This parameter is not used.</span>
          </span>
        </param>
        <param name="addr3">
          <span data-ttu-id="fb487-140">This parameter is not used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-140">This parameter is not used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fb487-141">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-141">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="fb487-142">In all cases.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-142">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DefineLocalVariable">
      <MemberSignature Language="C#" Value="public virtual void DefineLocalVariable (string name, System.Reflection.FieldAttributes attributes, byte[] signature, System.Diagnostics.SymbolStore.SymAddressKind addrKind, int addr1, int addr2, int addr3, int startOffset, int endOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DefineLocalVariable(string name, valuetype System.Reflection.FieldAttributes attributes, unsigned int8[] signature, valuetype System.Diagnostics.SymbolStore.SymAddressKind addrKind, int32 addr1, int32 addr2, int32 addr3, int32 startOffset, int32 endOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DefineLocalVariable (name As String, attributes As FieldAttributes, signature As Byte(), addrKind As SymAddressKind, addr1 As Integer, addr2 As Integer, addr3 As Integer, startOffset As Integer, endOffset As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DefineLocalVariable(System::String ^ name, System::Reflection::FieldAttributes attributes, cli::array &lt;System::Byte&gt; ^ signature, System::Diagnostics::SymbolStore::SymAddressKind addrKind, int addr1, int addr2, int addr3, int startOffset, int endOffset);" />
      <MemberSignature Language="F#" Value="abstract member DefineLocalVariable : string * System.Reflection.FieldAttributes * byte[] * System.Diagnostics.SymbolStore.SymAddressKind * int * int * int * int * int -&gt; unit&#xA;override this.DefineLocalVariable : string * System.Reflection.FieldAttributes * byte[] * System.Diagnostics.SymbolStore.SymAddressKind * int * int * int * int * int -&gt; unit" Usage="symWriter.DefineLocalVariable (name, attributes, signature, addrKind, addr1, addr2, addr3, startOffset, endOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attributes" Type="System.Reflection.FieldAttributes" />
        <Parameter Name="signature" Type="System.Byte[]" />
        <Parameter Name="addrKind" Type="System.Diagnostics.SymbolStore.SymAddressKind" />
        <Parameter Name="addr1" Type="System.Int32" />
        <Parameter Name="addr2" Type="System.Int32" />
        <Parameter Name="addr3" Type="System.Int32" />
        <Parameter Name="startOffset" Type="System.Int32" />
        <Parameter Name="endOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="fb487-143">The local variable name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-143">The local variable name.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="fb487-144">The local variable attributes specified using the <see cref="T:System.Reflection.FieldAttributes" /> enumerator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-144">The local variable attributes specified using the <see cref="T:System.Reflection.FieldAttributes" /> enumerator.</span>
          </span>
        </param>
        <param name="signature">
          <span data-ttu-id="fb487-145">The local variable signature.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-145">The local variable signature.</span>
          </span>
        </param>
        <param name="addrKind">
          <span data-ttu-id="fb487-146">The address types for <c>addr1</c>, <c>addr2</c>, and <c>addr3</c> using <see cref="T:System.Diagnostics.SymbolStore.SymAddressKind" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-146">The address types for <c>addr1</c>, <c>addr2</c>, and <c>addr3</c> using <see cref="T:System.Diagnostics.SymbolStore.SymAddressKind" />.</span>
          </span>
        </param>
        <param name="addr1">
          <span data-ttu-id="fb487-147">The first address for the local variable specification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-147">The first address for the local variable specification.</span>
          </span>
        </param>
        <param name="addr2">
          <span data-ttu-id="fb487-148">The second address for the local variable specification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-148">The second address for the local variable specification.</span>
          </span>
        </param>
        <param name="addr3">
          <span data-ttu-id="fb487-149">The third address for the local variable specification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-149">The third address for the local variable specification.</span>
          </span>
        </param>
        <param name="startOffset">
          <span data-ttu-id="fb487-150">The start offset for the variable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-150">The start offset for the variable.</span>
          </span>
          <span data-ttu-id="fb487-151">If zero, this parameter is ignored and the variable is defined throughout the entire scope.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-151">If zero, this parameter is ignored and the variable is defined throughout the entire scope.</span>
          </span>
          <span data-ttu-id="fb487-152">If nonzero, it falls within the offsets of the current scope.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-152">If nonzero, it falls within the offsets of the current scope.</span>
          </span>
        </param>
        <param name="endOffset">
          <span data-ttu-id="fb487-153">The end offset for the variable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-153">The end offset for the variable.</span>
          </span>
          <span data-ttu-id="fb487-154">If zero, this parameter is ignored and the variable is defined throughout the entire scope.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-154">If zero, this parameter is ignored and the variable is defined throughout the entire scope.</span>
          </span>
          <span data-ttu-id="fb487-155">If nonzero, it falls within the offsets of the current scope.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-155">If nonzero, it falls within the offsets of the current scope.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fb487-156">Defines a single variable in the current lexical scope.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-156">Defines a single variable in the current lexical scope.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb487-157">O `startOffset` e `endOffset` parâmetros são opcionais.</span><span class="sxs-lookup"><span data-stu-id="fb487-157">The `startOffset` and `endOffset` parameters are optional.</span></span> <span data-ttu-id="fb487-158">Se o valor for zero, elas são ignoradas e a variável é definida em toda a todo o escopo.</span><span class="sxs-lookup"><span data-stu-id="fb487-158">If their value is zero, they are ignored and the variable is defined throughout the entire scope.</span></span> <span data-ttu-id="fb487-159">Se o valor for diferente de zero, eles se encaixam dentro de deslocamentos do escopo atual.</span><span class="sxs-lookup"><span data-stu-id="fb487-159">If their value is nonzero, they fall within the offsets of the current scope.</span></span>  
  
 <span data-ttu-id="fb487-160">Você pode chamar <xref:System.Diagnostics.SymbolStore.SymWriter.DefineLocalVariable%2A> várias vezes para uma variável de mesmo nome que ocorre várias vezes em diferentes intervalos de deslocamento ao longo de um escopo.</span><span class="sxs-lookup"><span data-stu-id="fb487-160">You can call <xref:System.Diagnostics.SymbolStore.SymWriter.DefineLocalVariable%2A> multiple times for a variable of the same name that occurs multiple times in different offset ranges throughout a scope.</span></span> <span data-ttu-id="fb487-161">(Nesse caso, os deslocamentos de início e de término não devem se sobrepor.)</span><span class="sxs-lookup"><span data-stu-id="fb487-161">(In this case, start and end offsets must not overlap.)</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineParameter">
      <MemberSignature Language="C#" Value="public virtual void DefineParameter (string name, System.Reflection.ParameterAttributes attributes, int sequence, System.Diagnostics.SymbolStore.SymAddressKind addrKind, int addr1, int addr2, int addr3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DefineParameter(string name, valuetype System.Reflection.ParameterAttributes attributes, int32 sequence, valuetype System.Diagnostics.SymbolStore.SymAddressKind addrKind, int32 addr1, int32 addr2, int32 addr3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DefineParameter (name As String, attributes As ParameterAttributes, sequence As Integer, addrKind As SymAddressKind, addr1 As Integer, addr2 As Integer, addr3 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DefineParameter(System::String ^ name, System::Reflection::ParameterAttributes attributes, int sequence, System::Diagnostics::SymbolStore::SymAddressKind addrKind, int addr1, int addr2, int addr3);" />
      <MemberSignature Language="F#" Value="abstract member DefineParameter : string * System.Reflection.ParameterAttributes * int * System.Diagnostics.SymbolStore.SymAddressKind * int * int * int -&gt; unit&#xA;override this.DefineParameter : string * System.Reflection.ParameterAttributes * int * System.Diagnostics.SymbolStore.SymAddressKind * int * int * int -&gt; unit" Usage="symWriter.DefineParameter (name, attributes, sequence, addrKind, addr1, addr2, addr3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attributes" Type="System.Reflection.ParameterAttributes" />
        <Parameter Name="sequence" Type="System.Int32" />
        <Parameter Name="addrKind" Type="System.Diagnostics.SymbolStore.SymAddressKind" />
        <Parameter Name="addr1" Type="System.Int32" />
        <Parameter Name="addr2" Type="System.Int32" />
        <Parameter Name="addr3" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="fb487-162">This parameter is not used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-162">This parameter is not used.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="fb487-163">This parameter is not used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-163">This parameter is not used.</span>
          </span>
        </param>
        <param name="sequence">
          <span data-ttu-id="fb487-164">This parameter is not used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-164">This parameter is not used.</span>
          </span>
        </param>
        <param name="addrKind">
          <span data-ttu-id="fb487-165">This parameter is not used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-165">This parameter is not used.</span>
          </span>
        </param>
        <param name="addr1">
          <span data-ttu-id="fb487-166">This parameter is not used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-166">This parameter is not used.</span>
          </span>
        </param>
        <param name="addr2">
          <span data-ttu-id="fb487-167">This parameter is not used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-167">This parameter is not used.</span>
          </span>
        </param>
        <param name="addr3">
          <span data-ttu-id="fb487-168">This parameter is not used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-168">This parameter is not used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fb487-169">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-169">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="fb487-170">In all cases.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-170">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DefineSequencePoints">
      <MemberSignature Language="C#" Value="public virtual void DefineSequencePoints (System.Diagnostics.SymbolStore.ISymbolDocumentWriter document, int[] offsets, int[] lines, int[] columns, int[] endLines, int[] endColumns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DefineSequencePoints(class System.Diagnostics.SymbolStore.ISymbolDocumentWriter document, int32[] offsets, int32[] lines, int32[] columns, int32[] endLines, int32[] endColumns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DefineSequencePoints (document As ISymbolDocumentWriter, offsets As Integer(), lines As Integer(), columns As Integer(), endLines As Integer(), endColumns As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DefineSequencePoints(System::Diagnostics::SymbolStore::ISymbolDocumentWriter ^ document, cli::array &lt;int&gt; ^ offsets, cli::array &lt;int&gt; ^ lines, cli::array &lt;int&gt; ^ columns, cli::array &lt;int&gt; ^ endLines, cli::array &lt;int&gt; ^ endColumns);" />
      <MemberSignature Language="F#" Value="abstract member DefineSequencePoints : System.Diagnostics.SymbolStore.ISymbolDocumentWriter * int[] * int[] * int[] * int[] * int[] -&gt; unit&#xA;override this.DefineSequencePoints : System.Diagnostics.SymbolStore.ISymbolDocumentWriter * int[] * int[] * int[] * int[] * int[] -&gt; unit" Usage="symWriter.DefineSequencePoints (document, offsets, lines, columns, endLines, endColumns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="System.Diagnostics.SymbolStore.ISymbolDocumentWriter" />
        <Parameter Name="offsets" Type="System.Int32[]" />
        <Parameter Name="lines" Type="System.Int32[]" />
        <Parameter Name="columns" Type="System.Int32[]" />
        <Parameter Name="endLines" Type="System.Int32[]" />
        <Parameter Name="endColumns" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="document">
          <span data-ttu-id="fb487-171">The document object for which the sequence points are being defined.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-171">The document object for which the sequence points are being defined.</span>
          </span>
        </param>
        <param name="offsets">
          <span data-ttu-id="fb487-172">The IL offset of the sequence points measured from the beginning of the method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-172">The IL offset of the sequence points measured from the beginning of the method.</span>
          </span>
        </param>
        <param name="lines">
          <span data-ttu-id="fb487-173">The starting line numbers of the sequence points.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-173">The starting line numbers of the sequence points.</span>
          </span>
        </param>
        <param name="columns">
          <span data-ttu-id="fb487-174">The starting column numbers of the sequence points.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-174">The starting column numbers of the sequence points.</span>
          </span>
        </param>
        <param name="endLines">
          <span data-ttu-id="fb487-175">The ending line numbers of the sequence points.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-175">The ending line numbers of the sequence points.</span>
          </span>
        </param>
        <param name="endColumns">
          <span data-ttu-id="fb487-176">The ending column numbers of the sequence points.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-176">The ending column numbers of the sequence points.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fb487-177">Defines a group of sequence points within the current method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-177">Defines a group of sequence points within the current method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb487-178">Pontos de sequência são usados para mapear entre os locais de arquivo de origem e deslocamentos de IL.</span><span class="sxs-lookup"><span data-stu-id="fb487-178">Sequence points are used to map between source file locations and IL offsets.</span></span>  <span data-ttu-id="fb487-179">Cada ponto de sequência consiste em um IL deslocamento e a fonte de arquivo região, especificada por números de início e término de linha/coluna relativa a um <xref:System.Diagnostics.SymbolStore.ISymbolDocument> objeto.</span><span class="sxs-lookup"><span data-stu-id="fb487-179">Each sequence point consists of an IL offset and source file region, specified by start and end line/column numbers relative to an <xref:System.Diagnostics.SymbolStore.ISymbolDocument> object.</span></span>  <span data-ttu-id="fb487-180">Cada elemento em um índice específico de cada matriz corresponde a um ponto de sequência específico.</span><span class="sxs-lookup"><span data-stu-id="fb487-180">Each element at a specific index of every array corresponds to a specific sequence point.</span></span> <span data-ttu-id="fb487-181">Cada linha e cada coluna definem o início de uma instrução dentro de um método.</span><span class="sxs-lookup"><span data-stu-id="fb487-181">Each line and each column defines the start of a statement within a method.</span></span> <span data-ttu-id="fb487-182">As matrizes devem ser classificadas na ordem crescente de deslocamentos.</span><span class="sxs-lookup"><span data-stu-id="fb487-182">The arrays should be sorted in the increasing order of offsets.</span></span> <span data-ttu-id="fb487-183">O deslocamento é sempre o deslocamento do início do método, em bytes.</span><span class="sxs-lookup"><span data-stu-id="fb487-183">The offset is always the offset from the start of the method, in bytes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override sealed void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="symWriter.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fb487-184">Releases the resources used by the current instance of the <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-184">Releases the resources used by the current instance of the <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool A_0);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool A_0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (A_0 As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool A_0);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="symWriter.Dispose A_0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="A_0" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="A_0">
          <span data-ttu-id="fb487-185">
            <see langword="true" /> to release managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-185">
              <see langword="true" /> to release managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fb487-186">Called by the <see cref="M:System.Diagnostics.SymbolStore.SymWriter.Dispose" /> and <see cref="M:System.Diagnostics.SymbolStore.SymWriter.Finalize" /> methods to release the managed and unmanaged resources used by the current instance of the <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-186">Called by the <see cref="M:System.Diagnostics.SymbolStore.SymWriter.Dispose" /> and <see cref="M:System.Diagnostics.SymbolStore.SymWriter.Finalize" /> methods to release the managed and unmanaged resources used by the current instance of the <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb487-187">Este método é chamado somente pelo público <xref:System.Diagnostics.SymbolStore.SymWriter.Dispose%2A> e <xref:System.Diagnostics.SymbolStore.SymWriter.Finalize%2A> métodos; não chame este método diretamente.</span><span class="sxs-lookup"><span data-stu-id="fb487-187">This method is called only by the public <xref:System.Diagnostics.SymbolStore.SymWriter.Dispose%2A> and <xref:System.Diagnostics.SymbolStore.SymWriter.Finalize%2A> methods; do not call this method directly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SymWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!SymWriter ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="symWriter.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fb487-188">Releases unmanaged resources and performs other cleanup operations before the <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> is reclaimed by garbage collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-188">Releases unmanaged resources and performs other cleanup operations before the <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb487-189">Este método substitui  <xref:System.Object.Finalize%2A>.</span><span class="sxs-lookup"><span data-stu-id="fb487-189">This method overrides  <xref:System.Object.Finalize%2A>.</span></span> <span data-ttu-id="fb487-190">O código do aplicativo não deve chamar este método; o método `Finalize` de um objeto é invocado automaticamente durante a coleta de lixo, a menos que a finalização pelo coletor de lixo tenha sido desabilitada por uma chamada para o método <xref:System.GC.SuppressFinalize%2A>.</span><span class="sxs-lookup"><span data-stu-id="fb487-190">Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWriter">
      <MemberSignature Language="C#" Value="public System.Diagnostics.SymbolStore.Private.ISymUnmanagedWriter* GetWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Diagnostics.SymbolStore.Private.ISymUnmanagedWriter* GetWriter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.GetWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Diagnostics::SymbolStore::Private::ISymUnmanagedWriter* GetWriter();" />
      <MemberSignature Language="F#" Value="member this.GetWriter : unit -&gt; nativeptr&lt;System.Diagnostics.SymbolStore.Private.ISymUnmanagedWriter&gt;" Usage="symWriter.GetWriter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.Private.ISymUnmanagedWriter*</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public virtual void Initialize (IntPtr emitter, string filename, bool fFullBuild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(native int emitter, string filename, bool fFullBuild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.Initialize(System.IntPtr,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Initialize (emitter As IntPtr, filename As String, fFullBuild As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize(IntPtr emitter, System::String ^ filename, bool fFullBuild);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : nativeint * string * bool -&gt; unit&#xA;override this.Initialize : nativeint * string * bool -&gt; unit" Usage="symWriter.Initialize (emitter, filename, fFullBuild)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emitter" Type="System.IntPtr" />
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="fFullBuild" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="emitter">
          <span data-ttu-id="fb487-191">The metadata emitter interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-191">The metadata emitter interface.</span>
          </span>
        </param>
        <param name="filename">
          <span data-ttu-id="fb487-192">The file name for which the debugging symbols are written.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-192">The file name for which the debugging symbols are written.</span>
          </span>
          <span data-ttu-id="fb487-193">Some writers require a file name, while others do not.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-193">Some writers require a file name, while others do not.</span>
          </span>
          <span data-ttu-id="fb487-194">If a file name is specified for a writer that does not use file names, this parameter is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-194">If a file name is specified for a writer that does not use file names, this parameter is ignored.</span>
          </span>
        </param>
        <param name="fFullBuild">
          <span data-ttu-id="fb487-195">
            <see langword="true" /> indicates that this is a full rebuild; <see langword="false" /> indicates an incremental compilation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-195">
              <see langword="true" /> indicates that this is a full rebuild; <see langword="false" /> indicates an incremental compilation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fb487-196">Sets the metadata emitter interface to associate with this writer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-196">Sets the metadata emitter interface to associate with this writer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb487-197"><xref:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize%2A> também define o nome do arquivo de saída onde os símbolos de depuração são gravados.</span><span class="sxs-lookup"><span data-stu-id="fb487-197"><xref:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize%2A> also sets the output file name where the debugging symbols are written.</span></span> <span data-ttu-id="fb487-198">Esse método pode ser chamado apenas uma vez e deve ser chamado antes de quaisquer outros métodos de gravador são chamados.</span><span class="sxs-lookup"><span data-stu-id="fb487-198">This method can be called only once and must be called before any other writer methods are called.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="fb487-199">a capacidade de acessar o código não gerenciado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-199">for the ability to access unmanaged code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="InitWriter">
      <MemberSignature Language="C#" Value="public void InitWriter (bool noUnderlyingWriter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InitWriter(bool noUnderlyingWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.InitWriter(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitWriter (noUnderlyingWriter As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InitWriter(bool noUnderlyingWriter);" />
      <MemberSignature Language="F#" Value="member this.InitWriter : bool -&gt; unit" Usage="symWriter.InitWriter noUnderlyingWriter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="noUnderlyingWriter" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="noUnderlyingWriter">
          <span data-ttu-id="fb487-200">
            <see langword="true" /> if an underlying symbol writer will be provided by calling the <see cref="M:System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter(System.IntPtr)" /> method; <see langword="false" /> if a default underlying symbol writer should be created instead.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-200">
              <see langword="true" /> if an underlying symbol writer will be provided by calling the <see cref="M:System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter(System.IntPtr)" /> method; <see langword="false" /> if a default underlying symbol writer should be created instead.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fb487-201">Initializes the symbol writer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-201">Initializes the symbol writer.</span>
          </span>
          <span data-ttu-id="fb487-202">This method should not be called directly; it is called by the constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-202">This method should not be called directly; it is called by the constructor.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="fb487-203">a capacidade de acessar o código não gerenciado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-203">for the ability to access unmanaged code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="OpenMethod">
      <MemberSignature Language="C#" Value="public virtual void OpenMethod (System.Diagnostics.SymbolStore.SymbolToken method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OpenMethod(valuetype System.Diagnostics.SymbolStore.SymbolToken method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OpenMethod (method As SymbolToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OpenMethod(System::Diagnostics::SymbolStore::SymbolToken method);" />
      <MemberSignature Language="F#" Value="abstract member OpenMethod : System.Diagnostics.SymbolStore.SymbolToken -&gt; unit&#xA;override this.OpenMethod : System.Diagnostics.SymbolStore.SymbolToken -&gt; unit" Usage="symWriter.OpenMethod method" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Diagnostics.SymbolStore.SymbolToken" />
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="fb487-204">The metadata token for the method to be opened.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-204">The metadata token for the method to be opened.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fb487-205">Opens a method in which to place symbol information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-205">Opens a method in which to place symbol information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb487-206">O método especificado torna-se o método atual para chamadas para definir pontos de sequência, parâmetros e escopos léxicos.</span><span class="sxs-lookup"><span data-stu-id="fb487-206">The specified method becomes the current method for calls to define sequence points, parameters, and lexical scopes.</span></span> <span data-ttu-id="fb487-207">Há um escopo léxico implícita ao redor de todo o método.</span><span class="sxs-lookup"><span data-stu-id="fb487-207">There is an implicit lexical scope around the entire method.</span></span> <span data-ttu-id="fb487-208">Reabrir um método que foi fechado anteriormente apaga qualquer símbolos definidos anteriormente para o método.</span><span class="sxs-lookup"><span data-stu-id="fb487-208">Reopening a method that has been previously closed erases any previously defined symbols for the method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenNamespace">
      <MemberSignature Language="C#" Value="public virtual void OpenNamespace (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OpenNamespace(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.OpenNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OpenNamespace (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OpenNamespace(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member OpenNamespace : string -&gt; unit&#xA;override this.OpenNamespace : string -&gt; unit" Usage="symWriter.OpenNamespace name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="fb487-209">The name of the new namespace.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-209">The name of the new namespace.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fb487-210">Opens a new namespace.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-210">Opens a new namespace.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb487-211">Chame este método antes de definir métodos ou variáveis que existem em um namespace.</span><span class="sxs-lookup"><span data-stu-id="fb487-211">Call this method before defining methods or variables that exist within a namespace.</span></span> <span data-ttu-id="fb487-212">Namespaces podem ser aninhados.</span><span class="sxs-lookup"><span data-stu-id="fb487-212">Namespaces can be nested.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenScope">
      <MemberSignature Language="C#" Value="public virtual int OpenScope (int startOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 OpenScope(int32 startOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.OpenScope(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OpenScope (startOffset As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int OpenScope(int startOffset);" />
      <MemberSignature Language="F#" Value="abstract member OpenScope : int -&gt; int&#xA;override this.OpenScope : int -&gt; int" Usage="symWriter.OpenScope startOffset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startOffset">
          <span data-ttu-id="fb487-213">The IL offset in bytes from the beginning of the method to the first instruction in the lexical scope.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-213">The IL offset in bytes from the beginning of the method to the first instruction in the lexical scope.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fb487-214">Opens a new lexical scope in the current method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-214">Opens a new lexical scope in the current method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fb487-215">An opaque scope identifier that can be used with <see cref="M:System.Diagnostics.SymbolStore.SymWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)" /> to define the start and end offsets of a scope at a later time.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-215">An opaque scope identifier that can be used with <see cref="M:System.Diagnostics.SymbolStore.SymWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)" /> to define the start and end offsets of a scope at a later time.</span>
          </span>
          <span data-ttu-id="fb487-216">In this case, the offsets passed to <see cref="M:System.Diagnostics.SymbolStore.SymWriter.OpenScope(System.Int32)" /> and <see cref="M:System.Diagnostics.SymbolStore.SymWriter.CloseScope(System.Int32)" /> are ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-216">In this case, the offsets passed to <see cref="M:System.Diagnostics.SymbolStore.SymWriter.OpenScope(System.Int32)" /> and <see cref="M:System.Diagnostics.SymbolStore.SymWriter.CloseScope(System.Int32)" /> are ignored.</span>
          </span>
          <span data-ttu-id="fb487-217">A scope identifier is valid only in the current method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-217">A scope identifier is valid only in the current method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb487-218">Esse escopo se torna o novo escopo atual e é enviada por push para uma pilha de escopos.</span><span class="sxs-lookup"><span data-stu-id="fb487-218">This scope becomes the new current scope and is pushed onto a stack of scopes.</span></span> <span data-ttu-id="fb487-219">Escopos devem formar uma hierarquia.</span><span class="sxs-lookup"><span data-stu-id="fb487-219">Scopes must form a hierarchy.</span></span> <span data-ttu-id="fb487-220">Irmãos não podem se sobrepor.</span><span class="sxs-lookup"><span data-stu-id="fb487-220">Siblings are not allowed to overlap.</span></span>  
  
 <span data-ttu-id="fb487-221">Identificadores de escopo só são válidos no método atual.</span><span class="sxs-lookup"><span data-stu-id="fb487-221">Scope identifiers are only valid in the current method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMethodSourceRange">
      <MemberSignature Language="C#" Value="public virtual void SetMethodSourceRange (System.Diagnostics.SymbolStore.ISymbolDocumentWriter startDoc, int startLine, int startColumn, System.Diagnostics.SymbolStore.ISymbolDocumentWriter endDoc, int endLine, int endColumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMethodSourceRange(class System.Diagnostics.SymbolStore.ISymbolDocumentWriter startDoc, int32 startLine, int32 startColumn, class System.Diagnostics.SymbolStore.ISymbolDocumentWriter endDoc, int32 endLine, int32 endColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetMethodSourceRange (startDoc As ISymbolDocumentWriter, startLine As Integer, startColumn As Integer, endDoc As ISymbolDocumentWriter, endLine As Integer, endColumn As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetMethodSourceRange(System::Diagnostics::SymbolStore::ISymbolDocumentWriter ^ startDoc, int startLine, int startColumn, System::Diagnostics::SymbolStore::ISymbolDocumentWriter ^ endDoc, int endLine, int endColumn);" />
      <MemberSignature Language="F#" Value="abstract member SetMethodSourceRange : System.Diagnostics.SymbolStore.ISymbolDocumentWriter * int * int * System.Diagnostics.SymbolStore.ISymbolDocumentWriter * int * int -&gt; unit&#xA;override this.SetMethodSourceRange : System.Diagnostics.SymbolStore.ISymbolDocumentWriter * int * int * System.Diagnostics.SymbolStore.ISymbolDocumentWriter * int * int -&gt; unit" Usage="symWriter.SetMethodSourceRange (startDoc, startLine, startColumn, endDoc, endLine, endColumn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDoc" Type="System.Diagnostics.SymbolStore.ISymbolDocumentWriter" />
        <Parameter Name="startLine" Type="System.Int32" />
        <Parameter Name="startColumn" Type="System.Int32" />
        <Parameter Name="endDoc" Type="System.Diagnostics.SymbolStore.ISymbolDocumentWriter" />
        <Parameter Name="endLine" Type="System.Int32" />
        <Parameter Name="endColumn" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startDoc">
          <span data-ttu-id="fb487-222">This parameter is not used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-222">This parameter is not used.</span>
          </span>
        </param>
        <param name="startLine">
          <span data-ttu-id="fb487-223">This parameter is not used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-223">This parameter is not used.</span>
          </span>
        </param>
        <param name="startColumn">
          <span data-ttu-id="fb487-224">This parameter is not used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-224">This parameter is not used.</span>
          </span>
        </param>
        <param name="endDoc">
          <span data-ttu-id="fb487-225">This parameter is not used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-225">This parameter is not used.</span>
          </span>
        </param>
        <param name="endLine">
          <span data-ttu-id="fb487-226">This parameter is not used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-226">This parameter is not used.</span>
          </span>
        </param>
        <param name="endColumn">
          <span data-ttu-id="fb487-227">This parameter is not used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-227">This parameter is not used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fb487-228">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-228">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="fb487-229">In all cases.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-229">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetScopeRange">
      <MemberSignature Language="C#" Value="public virtual void SetScopeRange (int scopeID, int startOffset, int endOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetScopeRange(int32 scopeID, int32 startOffset, int32 endOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetScopeRange (scopeID As Integer, startOffset As Integer, endOffset As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetScopeRange(int scopeID, int startOffset, int endOffset);" />
      <MemberSignature Language="F#" Value="abstract member SetScopeRange : int * int * int -&gt; unit&#xA;override this.SetScopeRange : int * int * int -&gt; unit" Usage="symWriter.SetScopeRange (scopeID, startOffset, endOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scopeID" Type="System.Int32" />
        <Parameter Name="startOffset" Type="System.Int32" />
        <Parameter Name="endOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="scopeID">
          <span data-ttu-id="fb487-230">The identifier of the lexical scope returned by the <see cref="M:System.Diagnostics.SymbolStore.SymWriter.OpenScope(System.Int32)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-230">The identifier of the lexical scope returned by the <see cref="M:System.Diagnostics.SymbolStore.SymWriter.OpenScope(System.Int32)" /> method.</span>
          </span>
        </param>
        <param name="startOffset">
          <span data-ttu-id="fb487-231">The IL offset of the beginning of the lexical scope.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-231">The IL offset of the beginning of the lexical scope.</span>
          </span>
        </param>
        <param name="endOffset">
          <span data-ttu-id="fb487-232">The IL offset of the end of the lexical scope.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-232">The IL offset of the end of the lexical scope.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fb487-233">Defines the offset range for the specified lexical scope.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-233">Defines the offset range for the specified lexical scope.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSymAttribute">
      <MemberSignature Language="C#" Value="public virtual void SetSymAttribute (System.Diagnostics.SymbolStore.SymbolToken parent, string name, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSymAttribute(valuetype System.Diagnostics.SymbolStore.SymbolToken parent, string name, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetSymAttribute (parent As SymbolToken, name As String, data As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetSymAttribute(System::Diagnostics::SymbolStore::SymbolToken parent, System::String ^ name, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetSymAttribute : System.Diagnostics.SymbolStore.SymbolToken * string * byte[] -&gt; unit&#xA;override this.SetSymAttribute : System.Diagnostics.SymbolStore.SymbolToken * string * byte[] -&gt; unit" Usage="symWriter.SetSymAttribute (parent, name, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="System.Diagnostics.SymbolStore.SymbolToken" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="parent">
          <span data-ttu-id="fb487-234">The metadata token for which the attribute is being defined.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-234">The metadata token for which the attribute is being defined.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="fb487-235">The attribute name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-235">The attribute name.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="fb487-236">The attribute value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-236">The attribute value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fb487-237">Defines an attribute when given the attribute name and the attribute value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-237">Defines an attribute when given the attribute name and the attribute value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb487-238">O <xref:System.Diagnostics.SymbolStore.SymWriter.SetSymAttribute%2A> método só está associado às informações simbólicas e não é um atributo de metadados personalizado.</span><span class="sxs-lookup"><span data-stu-id="fb487-238">The <xref:System.Diagnostics.SymbolStore.SymWriter.SetSymAttribute%2A> method is only associated with symbolic information and is not a metadata custom attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetUnderlyingWriter">
      <MemberSignature Language="C#" Value="public virtual void SetUnderlyingWriter (IntPtr underlyingWriter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetUnderlyingWriter(native int underlyingWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetUnderlyingWriter (underlyingWriter As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetUnderlyingWriter(IntPtr underlyingWriter);" />
      <MemberSignature Language="F#" Value="abstract member SetUnderlyingWriter : nativeint -&gt; unit&#xA;override this.SetUnderlyingWriter : nativeint -&gt; unit" Usage="symWriter.SetUnderlyingWriter underlyingWriter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="underlyingWriter" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="underlyingWriter">
          <span data-ttu-id="fb487-239">An <see cref="T:System.IntPtr" /> type pointer to code that is the underlying writer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-239">An <see cref="T:System.IntPtr" /> type pointer to code that is the underlying writer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fb487-240">Sets the underlying [ISymUnmanagedWriter Interface](~/docs/framework/unmanaged-api/diagnostics/isymunmanagedwriter-interface.md) (the corresponding unmanaged API) that a managed <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> uses to emit symbols.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-240">Sets the underlying [ISymUnmanagedWriter Interface](~/docs/framework/unmanaged-api/diagnostics/isymunmanagedwriter-interface.md) (the corresponding unmanaged API) that a managed <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> uses to emit symbols.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb487-241">Subjacente [ISymUnmanagedWriter Interface](~/docs/framework/unmanaged-api/diagnostics/isymunmanagedwriter-interface.md) (correspondente API não gerenciada) interface representa um gravador de símbolo para código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="fb487-241">The underlying [ISymUnmanagedWriter Interface](~/docs/framework/unmanaged-api/diagnostics/isymunmanagedwriter-interface.md) (the corresponding unmanaged API) interface represents a symbol writer for managed code.</span></span> <span data-ttu-id="fb487-242">A interface fornece métodos para definir documentos, pontos de sequência, escopos de léxicos e variáveis.</span><span class="sxs-lookup"><span data-stu-id="fb487-242">The interface provides methods to define documents, sequence points, lexical scopes, and variables.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="fb487-243">a capacidade de acessar o código não gerenciado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-243">for the ability to access unmanaged code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SetUserEntryPoint">
      <MemberSignature Language="C#" Value="public virtual void SetUserEntryPoint (System.Diagnostics.SymbolStore.SymbolToken entryMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetUserEntryPoint(valuetype System.Diagnostics.SymbolStore.SymbolToken entryMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.SetUserEntryPoint(System.Diagnostics.SymbolStore.SymbolToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetUserEntryPoint (entryMethod As SymbolToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetUserEntryPoint(System::Diagnostics::SymbolStore::SymbolToken entryMethod);" />
      <MemberSignature Language="F#" Value="abstract member SetUserEntryPoint : System.Diagnostics.SymbolStore.SymbolToken -&gt; unit&#xA;override this.SetUserEntryPoint : System.Diagnostics.SymbolStore.SymbolToken -&gt; unit" Usage="symWriter.SetUserEntryPoint entryMethod" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entryMethod" Type="System.Diagnostics.SymbolStore.SymbolToken" />
      </Parameters>
      <Docs>
        <param name="entryMethod">
          <span data-ttu-id="fb487-244">The metadata token for the method that is the user entry point.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-244">The metadata token for the method that is the user entry point.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fb487-245">Identifies the user-defined method as the entry point for the current module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-245">Identifies the user-defined method as the entry point for the current module.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb487-246">Isso normalmente é o método principal.</span><span class="sxs-lookup"><span data-stu-id="fb487-246">This is normally the main method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UsingNamespace">
      <MemberSignature Language="C#" Value="public virtual void UsingNamespace (string fullName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UsingNamespace(string fullName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.UsingNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UsingNamespace (fullName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UsingNamespace(System::String ^ fullName);" />
      <MemberSignature Language="F#" Value="abstract member UsingNamespace : string -&gt; unit&#xA;override this.UsingNamespace : string -&gt; unit" Usage="symWriter.UsingNamespace fullName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fullName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fullName">
          <span data-ttu-id="fb487-247">The fully qualified name of the namespace.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-247">The fully qualified name of the namespace.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fb487-248">Specifies that the given, fully qualified namespace name is used within the open lexical scope.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb487-248">Specifies that the given, fully qualified namespace name is used within the open lexical scope.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb487-249">Fechar o escopo atual impede que esse escopo usando o namespace.</span><span class="sxs-lookup"><span data-stu-id="fb487-249">Closing the current scope prevents this scope from using the namespace.</span></span> <span data-ttu-id="fb487-250">O namespace continua em uso em todos os escopos que herdam do escopo atual aberto.</span><span class="sxs-lookup"><span data-stu-id="fb487-250">The namespace remains in use in all scopes that inherit from the current open scope.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>