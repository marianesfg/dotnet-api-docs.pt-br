<Type Name="XsdDataContractExporter" FullName="System.Runtime.Serialization.XsdDataContractExporter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b10630be84113cc7ca50aaf4a6938af091054dba" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46689337" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XsdDataContractExporter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XsdDataContractExporter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.XsdDataContractExporter" />
  <TypeSignature Language="VB.NET" Value="Public Class XsdDataContractExporter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XsdDataContractExporter" />
  <TypeSignature Language="F#" Value="type XsdDataContractExporter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
    <AssemblyVersion>4.1.3.0</AssemblyVersion>
    <AssemblyVersion>4.1.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="0f29b-101">Possibilita a transformação de um conjunto de tipos do .NET Framework que são usadas em contratos de dados em um arquivo de esquema XML (.xsd).</span>
      <span class="sxs-lookup">
        <span data-stu-id="0f29b-101">Allows the transformation of a set of .NET Framework types that are used in data contracts into an XML schema file (.xsd).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f29b-102">Use o <xref:System.Runtime.Serialization.XsdDataContractExporter> classe quando você tiver criado um serviço Web que incorpora os dados representados por tipos common language runtime (CLR) e quando for preciso exportar esquemas XML para cada tipo a ser consumida por outros serviços da Web.</span><span class="sxs-lookup"><span data-stu-id="0f29b-102">Use the <xref:System.Runtime.Serialization.XsdDataContractExporter> class when you have created a Web service that incorporates data represented by common language runtime (CLR) types and when you need to export XML schemas for each type to be consumed by other Web services.</span></span> <span data-ttu-id="0f29b-103">Ou seja, <xref:System.Runtime.Serialization.XsdDataContractExporter> transforma um conjunto de tipos CLR em esquemas XML.</span><span class="sxs-lookup"><span data-stu-id="0f29b-103">That is, <xref:System.Runtime.Serialization.XsdDataContractExporter> transforms a set of CLR types into XML schemas.</span></span> <span data-ttu-id="0f29b-104">(Para obter mais informações sobre os tipos que podem ser usados, consulte [tipos com suporte pelo serializador de contrato de dados](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md).) Os esquemas, em seguida, podem ser expostos por meio de um documento de descrição linguagem WSDL (Web Services) para uso por outras pessoas que precisam para interoperar com seu serviço.</span><span class="sxs-lookup"><span data-stu-id="0f29b-104">(For more information about the types that can be used, see [Types Supported by the Data Contract Serializer](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md).) The schemas can then be exposed through a Web Services Description Language (WSDL) document for use by others who need to interoperate with your service.</span></span>  
  
 <span data-ttu-id="0f29b-105">Por outro lado, se você estiver criando um serviço Web que deve interoperar com um serviço Web existente, use o <xref:System.Runtime.Serialization.XsdDataContractImporter> para transformar os esquemas XML e criar os tipos CLR que representam os dados em uma linguagem de programação selecionada.</span><span class="sxs-lookup"><span data-stu-id="0f29b-105">Conversely, if you are creating a Web service that must interoperate with an existing Web service, use the <xref:System.Runtime.Serialization.XsdDataContractImporter> to transform XML schemas and create the CLR types that represent the data in a selected programming language.</span></span>  
  
 <span data-ttu-id="0f29b-106">O <xref:System.Runtime.Serialization.XsdDataContractExporter> gera um <xref:System.Xml.Schema.XmlSchemaSet> objeto que contém a coleção de esquemas.</span><span class="sxs-lookup"><span data-stu-id="0f29b-106">The <xref:System.Runtime.Serialization.XsdDataContractExporter> generates an <xref:System.Xml.Schema.XmlSchemaSet> object that contains the collection of schemas.</span></span> <span data-ttu-id="0f29b-107">Acessar o conjunto de esquemas por meio de <xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="0f29b-107">Access the set of schemas through the <xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0f29b-108">Para gerar rapidamente arquivos de definição de (XSD) de esquema XML que outros serviços da Web podem consumir, use o <xref:System.Runtime.Serialization.XsdDataContractExporter>.</span><span class="sxs-lookup"><span data-stu-id="0f29b-108">To quickly generate XML schema definition (XSD) files that other Web services can consume, use the <xref:System.Runtime.Serialization.XsdDataContractExporter>.</span></span>  
  
## <a name="exporting-schemas-into-an-xmlschemaset"></a><span data-ttu-id="0f29b-109">Exportando esquemas em um XmlSchemaSet</span><span class="sxs-lookup"><span data-stu-id="0f29b-109">Exporting Schemas Into an XmlSchemaSet</span></span>  
 <span data-ttu-id="0f29b-110">Para criar uma instância da <xref:System.Xml.Schema.XmlSchemaSet> classe que contém os arquivos de esquema XML, você deve estar ciente das seguintes opções.</span><span class="sxs-lookup"><span data-stu-id="0f29b-110">To create an instance of the <xref:System.Xml.Schema.XmlSchemaSet> class that contains XML schema files, you should be aware of the following.</span></span>  
  
 <span data-ttu-id="0f29b-111">O conjunto de tipos que você está exportando são registradas como um conjunto interno de contratos de dados.</span><span class="sxs-lookup"><span data-stu-id="0f29b-111">The set of types you are exporting are recorded as an internal set of data contracts.</span></span> <span data-ttu-id="0f29b-112">Assim, você pode chamar o <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> método várias vezes para adicionar novos tipos para o esquema definido sem comprometer o desempenho porque apenas os novos tipos serão adicionados ao conjunto.</span><span class="sxs-lookup"><span data-stu-id="0f29b-112">Thus, you can call the <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> method multiple times to add new types to the schema set without degrading performance because only the new types will be added to the set.</span></span> <span data-ttu-id="0f29b-113">Durante o <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> operação, os esquemas existentes são comparados com os novos esquemas que está sendo adicionados.</span><span class="sxs-lookup"><span data-stu-id="0f29b-113">During the <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> operation, the existing schemas are compared to the new schemas being added.</span></span> <span data-ttu-id="0f29b-114">Se houver conflitos, uma exceção será lançada.</span><span class="sxs-lookup"><span data-stu-id="0f29b-114">If there are conflicts, an exception will be thrown.</span></span> <span data-ttu-id="0f29b-115">Um conflito é detectado com geralmente se dois tipos com os mesmos dados de contrato de nome, mas diferentes contratos (membros diferentes) são exportados pelo mesmo <xref:System.Runtime.Serialization.XsdDataContractExporter> instância.</span><span class="sxs-lookup"><span data-stu-id="0f29b-115">A conflict is usually detected if two types with the same data contract name but different contracts (different members) are exported by the same <xref:System.Runtime.Serialization.XsdDataContractExporter> instance.</span></span>  
  
## <a name="using-the-exporter"></a><span data-ttu-id="0f29b-116">Usando o exportador</span><span class="sxs-lookup"><span data-stu-id="0f29b-116">Using the Exporter</span></span>  
 <span data-ttu-id="0f29b-117">Uma maneira recomendada de usar essa classe é o seguinte:</span><span class="sxs-lookup"><span data-stu-id="0f29b-117">A recommended way of using this class is as follows:</span></span>  
  
1.  <span data-ttu-id="0f29b-118">Use um do <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> sobrecargas para determinar se o tipo especificado ou um conjunto de tipos pode ser exportado.</span><span class="sxs-lookup"><span data-stu-id="0f29b-118">Use one of the <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> overloads to determine whether the specified type or set of types can be exported.</span></span> <span data-ttu-id="0f29b-119">Use uma das sobrecargas que seja apropriada para suas necessidades.</span><span class="sxs-lookup"><span data-stu-id="0f29b-119">Use one of the overloads that is appropriate to your requirements.</span></span>  
  
2.  <span data-ttu-id="0f29b-120">Chamar correspondente <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> método.</span><span class="sxs-lookup"><span data-stu-id="0f29b-120">Call the corresponding <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> method.</span></span>  
  
3.  <span data-ttu-id="0f29b-121">Recuperar os esquemas do <xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="0f29b-121">Retrieve the schemas from the <xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f29b-122">O exemplo a seguir cria uma instância das <xref:System.Runtime.Serialization.XsdDataContractExporter> e chama o <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%28System.Type%29> método.</span><span class="sxs-lookup"><span data-stu-id="0f29b-122">The following example creates an instance of the <xref:System.Runtime.Serialization.XsdDataContractExporter> and calls the <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%28System.Type%29> method.</span></span>  
  
 [!code-csharp[XsdDataContractExporter#0](~/samples/snippets/csharp/VS_Snippets_CFX/xsddatacontractexporter/cs/overview.cs#0)]
 [!code-vb[XsdDataContractExporter#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/xsddatacontractexporter/vb/overview.vb#0)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Serialization.DataContractSerializer" />
    <altmember cref="T:System.Runtime.Serialization.XsdDataContractImporter" />
    <related type="Article" href="~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md">
      <span data-ttu-id="0f29b-123">Tipos com suporte fornecido pelo serializador de contrato de dados</span>
      <span class="sxs-lookup">
        <span data-stu-id="0f29b-123">Types Supported by the Data Contract Serializer</span>
      </span>
    </related>
    <related type="Article" href="~/docs/framework/wcf/feature-details/serialization-and-deserialization.md">
      <span data-ttu-id="0f29b-124">Serialização e desserialização</span>
      <span class="sxs-lookup">
        <span data-stu-id="0f29b-124">Serialization and Deserialization</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0f29b-125">Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f29b-125">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XsdDataContractExporter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XsdDataContractExporter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0f29b-126">Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f29b-126">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XsdDataContractExporter (System.Xml.Schema.XmlSchemaSet schemas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Schema.XmlSchemaSet schemas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.#ctor(System.Xml.Schema.XmlSchemaSet)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (schemas As XmlSchemaSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XsdDataContractExporter(System::Xml::Schema::XmlSchemaSet ^ schemas);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Serialization.XsdDataContractExporter : System.Xml.Schema.XmlSchemaSet -&gt; System.Runtime.Serialization.XsdDataContractExporter" Usage="new System.Runtime.Serialization.XsdDataContractExporter schemas" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
      </Parameters>
      <Docs>
        <param name="schemas">
          <span data-ttu-id="0f29b-127">Um <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que contém os esquemas a serem exportados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f29b-127">An <see cref="T:System.Xml.Schema.XmlSchemaSet" /> that contains the schemas to be exported.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f29b-128">Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> com o conjunto de esquemas especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f29b-128">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> class with the specified set of schemas.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f29b-129">Use essa sobrecarga quando você tiver uma <xref:System.Xml.Schema.XmlSchemaSet> à qual você deseja adicionar novos esquemas.</span><span class="sxs-lookup"><span data-stu-id="0f29b-129">Use this overload when you have an existing <xref:System.Xml.Schema.XmlSchemaSet> to which you want to add new schemas.</span></span> <span data-ttu-id="0f29b-130">Depois que você construir um <xref:System.Runtime.Serialization.XsdDataContractExporter> com essa sobrecarga, chame o <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> método para adicionar novos tipos ao conjunto existente.</span><span class="sxs-lookup"><span data-stu-id="0f29b-130">After you construct a <xref:System.Runtime.Serialization.XsdDataContractExporter> with this overload, call the <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> method to add new types to the existing set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanExport">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0f29b-131">Obtém um valor que indica se um tipo CLR (Common Language Runtime) (ou um conjunto de tipos) pode ser exportado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f29b-131">Gets a value that indicates whether a common language runtime (CLR) type (or set of types) can be exported.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f29b-132">Nem todos os tipos CLR podem ser usados em contratos de dados.</span><span class="sxs-lookup"><span data-stu-id="0f29b-132">Not all CLR types can be used in data contracts.</span></span> <span data-ttu-id="0f29b-133">Para obter mais informações sobre o que pode ser serializado, consulte [tipos com suporte pelo serializador de contrato de dados](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md).</span><span class="sxs-lookup"><span data-stu-id="0f29b-133">For more information about what can be serialized, see [Types Supported by the Data Contract Serializer](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanExport">
      <MemberSignature Language="C#" Value="public bool CanExport (System.Collections.Generic.ICollection&lt;System.Reflection.Assembly&gt; assemblies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanExport(class System.Collections.Generic.ICollection`1&lt;class System.Reflection.Assembly&gt; assemblies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Reflection.Assembly})" />
      <MemberSignature Language="VB.NET" Value="Public Function CanExport (assemblies As ICollection(Of Assembly)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanExport(System::Collections::Generic::ICollection&lt;System::Reflection::Assembly ^&gt; ^ assemblies);" />
      <MemberSignature Language="F#" Value="member this.CanExport : System.Collections.Generic.ICollection&lt;System.Reflection.Assembly&gt; -&gt; bool" Usage="xsdDataContractExporter.CanExport assemblies" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblies" Type="System.Collections.Generic.ICollection&lt;System.Reflection.Assembly&gt;" />
      </Parameters>
      <Docs>
        <param name="assemblies">
          <span data-ttu-id="0f29b-134">Um <see cref="T:System.Collections.Generic.ICollection`1" /> de <see cref="T:System.Reflection.Assembly" /> que contém os assemblies com os tipos para exportação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f29b-134">A <see cref="T:System.Collections.Generic.ICollection`1" /> of <see cref="T:System.Reflection.Assembly" /> that contains the assemblies with the types to export.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f29b-135">Obtém um valor que indica se o conjunto de tipos CLR (Common Language Runtime) contidos em um conjunto de assemblies pode ser exportado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f29b-135">Gets a value that indicates whether the set of .common language runtime (CLR) types contained in a set of assemblies can be exported.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f29b-136">
            <see langword="true" /> se os tipos puderem ser exportados; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f29b-136">
              <see langword="true" /> if the types can be exported; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanExport">
      <MemberSignature Language="C#" Value="public bool CanExport (System.Collections.Generic.ICollection&lt;Type&gt; types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanExport(class System.Collections.Generic.ICollection`1&lt;class System.Type&gt; types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Type})" />
      <MemberSignature Language="VB.NET" Value="Public Function CanExport (types As ICollection(Of Type)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanExport(System::Collections::Generic::ICollection&lt;Type ^&gt; ^ types);" />
      <MemberSignature Language="F#" Value="member this.CanExport : System.Collections.Generic.ICollection&lt;Type&gt; -&gt; bool" Usage="xsdDataContractExporter.CanExport types" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Collections.Generic.ICollection&lt;System.Type&gt;" />
      </Parameters>
      <Docs>
        <param name="types">
          <span data-ttu-id="0f29b-137">Um <see cref="T:System.Collections.Generic.ICollection`1" /> que contém os tipos especificados para exportação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f29b-137">A <see cref="T:System.Collections.Generic.ICollection`1" /> that contains the specified types to export.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f29b-138">Obtém um valor que indica se o conjunto de tipos CLR (Common Language Runtime) contidos em um <see cref="T:System.Collections.Generic.ICollection`1" /> pode ser exportado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f29b-138">Gets a value that indicates whether the set of .common language runtime (CLR) types contained in a <see cref="T:System.Collections.Generic.ICollection`1" /> can be exported.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f29b-139">
            <see langword="true" /> se os tipos puderem ser exportados; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f29b-139">
              <see langword="true" /> if the types can be exported; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanExport">
      <MemberSignature Language="C#" Value="public bool CanExport (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanExport(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanExport(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.CanExport : Type -&gt; bool" Usage="xsdDataContractExporter.CanExport type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="0f29b-140">O <see cref="T:System.Type" /> a ser exportado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f29b-140">The <see cref="T:System.Type" /> to export.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f29b-141">Obtém um valor que indica se o tipo CLR (Common Language Runtime) especificado pode ser exportado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f29b-141">Gets a value that indicates whether the specified common language runtime (CLR) type can be exported.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f29b-142">
            <see langword="true" /> se o tipo puder ser exportado; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f29b-142">
              <see langword="true" /> if the type can be exported; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0f29b-143">A exemplo a seguir chama o <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%28System.Type%29> método antes de chamar o <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%28System.Type%29> método.</span><span class="sxs-lookup"><span data-stu-id="0f29b-143">The following example calls the <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%28System.Type%29> method before calling the <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%28System.Type%29> method.</span></span>  
  
 [!code-csharp[XsdDataContractExporter#1](~/samples/snippets/csharp/VS_Snippets_CFX/xsddatacontractexporter/cs/overview.cs#1)]
 [!code-vb[XsdDataContractExporter#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/xsddatacontractexporter/vb/overview.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Export">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0f29b-144">Transforma o tipo CLR (Common Language Runtime) ou conjunto de tipos, em um conjunto de esquemas XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f29b-144">Transforms the common language runtime (CLR) type, or set of types, into a set of XML schemas.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f29b-145">Como prática recomendada, use um do <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> sobrecargas para determinar se o tipo especificado ou um conjunto de tipos pode ser exportado.</span><span class="sxs-lookup"><span data-stu-id="0f29b-145">As a recommended practice, use one of the <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> overloads to determine whether the specified type or set of types can be exported.</span></span>  
  
 <span data-ttu-id="0f29b-146">Depois de chamar o <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> método, recuperar os esquemas do <xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="0f29b-146">After calling the <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> method, retrieve the schemas from the <xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public void Export (System.Collections.Generic.ICollection&lt;System.Reflection.Assembly&gt; assemblies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Export(class System.Collections.Generic.ICollection`1&lt;class System.Reflection.Assembly&gt; assemblies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Reflection.Assembly})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Export (assemblies As ICollection(Of Assembly))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Export(System::Collections::Generic::ICollection&lt;System::Reflection::Assembly ^&gt; ^ assemblies);" />
      <MemberSignature Language="F#" Value="member this.Export : System.Collections.Generic.ICollection&lt;System.Reflection.Assembly&gt; -&gt; unit" Usage="xsdDataContractExporter.Export assemblies" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblies" Type="System.Collections.Generic.ICollection&lt;System.Reflection.Assembly&gt;" />
      </Parameters>
      <Docs>
        <param name="assemblies">
          <span data-ttu-id="0f29b-147">Um <see cref="T:System.Collections.Generic.ICollection`1" /> (de <see cref="T:System.Reflection.Assembly" />) que contém os tipos para exportação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f29b-147">A <see cref="T:System.Collections.Generic.ICollection`1" /> (of <see cref="T:System.Reflection.Assembly" />) that contains the types to export.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f29b-148">Transforma os tipos contidos na coleção especificada de assemblies.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f29b-148">Transforms the types contained in the specified collection of assemblies.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0f29b-149">O argumento <paramref name="assemblies" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f29b-149">The <paramref name="assemblies" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0f29b-150">Um <see cref="T:System.Reflection.Assembly" /> na coleção é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f29b-150">An <see cref="T:System.Reflection.Assembly" /> in the collection is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public void Export (System.Collections.Generic.ICollection&lt;Type&gt; types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Export(class System.Collections.Generic.ICollection`1&lt;class System.Type&gt; types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Type})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Export (types As ICollection(Of Type))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Export(System::Collections::Generic::ICollection&lt;Type ^&gt; ^ types);" />
      <MemberSignature Language="F#" Value="member this.Export : System.Collections.Generic.ICollection&lt;Type&gt; -&gt; unit" Usage="xsdDataContractExporter.Export types" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Collections.Generic.ICollection&lt;System.Type&gt;" />
      </Parameters>
      <Docs>
        <param name="types">
          <span data-ttu-id="0f29b-151">Um <see cref="T:System.Collections.Generic.ICollection`1" /> (de <see cref="T:System.Type" />) que contém os tipos para exportação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f29b-151">A  <see cref="T:System.Collections.Generic.ICollection`1" /> (of <see cref="T:System.Type" />) that contains the types to export.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f29b-152">Transforma os tipos contidos no <see cref="T:System.Collections.Generic.ICollection`1" /> passado para este método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f29b-152">Transforms the types contained in the <see cref="T:System.Collections.Generic.ICollection`1" /> passed to this method.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0f29b-153">O argumento <paramref name="types" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f29b-153">The <paramref name="types" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0f29b-154">Um tipo na coleção é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f29b-154">A type in the collection is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public void Export (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Export(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Export(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.Export : Type -&gt; unit" Usage="xsdDataContractExporter.Export type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="0f29b-155">O <see cref="T:System.Type" /> a ser transformado em um esquema XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f29b-155">The <see cref="T:System.Type" /> to transform into an XML schema.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f29b-156">Transforma o tipo [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] especificado em um esquema XSD (linguagem de definição de esquema XML).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f29b-156">Transforms the specified [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] type into an XML schema definition language (XSD) schema.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f29b-157">Chamar o <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> para determinar se o tipo pode ser exportado.</span><span class="sxs-lookup"><span data-stu-id="0f29b-157">Call the <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> to determine whether the type can be exported.</span></span> <span data-ttu-id="0f29b-158">Depois de chamar o <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> método, o esquema pode ser recuperado por meio de <xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="0f29b-158">After calling the <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> method, the schema can be retrieved through the <xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0f29b-159">O argumento <paramref name="type" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f29b-159">The <paramref name="type" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRootElementName">
      <MemberSignature Language="C#" Value="public System.Xml.XmlQualifiedName GetRootElementName (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlQualifiedName GetRootElementName(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.GetRootElementName(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlQualifiedName ^ GetRootElementName(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.GetRootElementName : Type -&gt; System.Xml.XmlQualifiedName" Usage="xsdDataContractExporter.GetRootElementName type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlQualifiedName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="0f29b-160">O <see cref="T:System.Type" /> a ser consultado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f29b-160">The <see cref="T:System.Type" /> to query.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f29b-161">Retorna o nome e namespace de nível superior para o <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f29b-161">Returns the top-level name and namespace for the <see cref="T:System.Type" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f29b-162">O <see cref="T:System.Xml.XmlQualifiedName" /> que representa o nome de nível superior e o namespace para este <see cref="T:System.Type" />, que é gravado no fluxo durante a gravação desse objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f29b-162">The <see cref="T:System.Xml.XmlQualifiedName" /> that represents the top-level name and namespace for this <see cref="T:System.Type" />, which is written to the stream when writing this object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0f29b-163">O argumento <paramref name="type" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f29b-163">The <paramref name="type" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSchemaType">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaType GetSchemaType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchemaType GetSchemaType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchemaType ^ GetSchemaType(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.GetSchemaType : Type -&gt; System.Xml.Schema.XmlSchemaType" Usage="xsdDataContractExporter.GetSchemaType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="0f29b-164">O tipo para o qual retornar um esquema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f29b-164">The type to return a schema for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f29b-165">Retorna o tipo de esquema XML para o tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f29b-165">Returns the XML schema type for the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f29b-166">Um <see cref="T:System.Xml.Schema.XmlSchemaType" /> que contém o esquema XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f29b-166">An <see cref="T:System.Xml.Schema.XmlSchemaType" /> that contains the XML schema.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f29b-167">A principal finalidade desse método é permitir que os tipos anônimos no esquema XML para ser representado.</span><span class="sxs-lookup"><span data-stu-id="0f29b-167">The main purpose of this method is to allow anonymous types in XML schema to be represented.</span></span> <span data-ttu-id="0f29b-168">Como tipos anônimos não têm um nome de contrato e namespace, eles não podem ser pesquisados usando o <xref:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName%2A>.</span><span class="sxs-lookup"><span data-stu-id="0f29b-168">Because anonymous types do not have a contract name and namespace, they cannot be looked up using the <xref:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName%2A>.</span></span> <span data-ttu-id="0f29b-169">Esse método retorna o <xref:System.Xml.Schema.XmlSchemaType> definição para esses tipos.</span><span class="sxs-lookup"><span data-stu-id="0f29b-169">This method returns the <xref:System.Xml.Schema.XmlSchemaType> definition for such types.</span></span> <span data-ttu-id="0f29b-170">Os tipos para o qual o <xref:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName%2A> método retorna um nome válido, esse método retornará `null`.</span><span class="sxs-lookup"><span data-stu-id="0f29b-170">The types for which the <xref:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName%2A> method returns a valid name, this method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0f29b-171">O argumento <paramref name="type" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f29b-171">The <paramref name="type" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTypeName">
      <MemberSignature Language="C#" Value="public System.Xml.XmlQualifiedName GetSchemaTypeName (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlQualifiedName GetSchemaTypeName(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlQualifiedName ^ GetSchemaTypeName(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.GetSchemaTypeName : Type -&gt; System.Xml.XmlQualifiedName" Usage="xsdDataContractExporter.GetSchemaTypeName type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlQualifiedName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="0f29b-172">O <see cref="T:System.Type" /> que foi exportado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f29b-172">The <see cref="T:System.Type" /> that was exported.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f29b-173">Retorna o nome e o namespace do contrato para o <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f29b-173">Returns the contract name and contract namespace for the <see cref="T:System.Type" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f29b-174">Um <see cref="T:System.Xml.XmlQualifiedName" /> que representa o nome do contrato do tipo e seu namespace.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f29b-174">An <see cref="T:System.Xml.XmlQualifiedName" /> that represents the contract name of the type and its namespace.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0f29b-175">O argumento <paramref name="type" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f29b-175">The <paramref name="type" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.ExportOptions Options { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.ExportOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.XsdDataContractExporter.Options" />
      <MemberSignature Language="VB.NET" Value="Public Property Options As ExportOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::ExportOptions ^ Options { System::Runtime::Serialization::ExportOptions ^ get(); void set(System::Runtime::Serialization::ExportOptions ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.Runtime.Serialization.ExportOptions with get, set" Usage="System.Runtime.Serialization.XsdDataContractExporter.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.ExportOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0f29b-176">Obtém ou define um <see cref="T:System.Runtime.Serialization.ExportOptions" /> que contém opções que podem ser definidas para a operação de exportação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f29b-176">Gets or sets an <see cref="T:System.Runtime.Serialization.ExportOptions" /> that contains options that can be set for the export operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0f29b-177">Um <see cref="T:System.Runtime.Serialization.ExportOptions" /> que contém as opções usadas para personalizar como os tipos são exportados para esquemas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f29b-177">An <see cref="T:System.Runtime.Serialization.ExportOptions" /> that contains options used to customize how types are exported to schemas.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Schemas">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSet Schemas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaSet Schemas" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.XsdDataContractExporter.Schemas" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Schemas As XmlSchemaSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaSet ^ Schemas { System::Xml::Schema::XmlSchemaSet ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Schemas : System.Xml.Schema.XmlSchemaSet" Usage="System.Runtime.Serialization.XsdDataContractExporter.Schemas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0f29b-178">Obtém a coleção de esquemas XML exportados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f29b-178">Gets the collection of exported XML schemas.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0f29b-179">Uma <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que contém os esquemas transformados do conjunto de tipos common language runtime (CLR) depois de chamar o <see cref="Overload:System.Runtime.Serialization.XsdDataContractExporter.Export" /> método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f29b-179">An <see cref="T:System.Xml.Schema.XmlSchemaSet" /> that contains the schemas transformed from the set of common language runtime (CLR) types after calling the <see cref="Overload:System.Runtime.Serialization.XsdDataContractExporter.Export" /> method.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>