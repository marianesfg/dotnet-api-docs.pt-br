<Type Name="KnownTypeAttribute" FullName="System.Runtime.Serialization.KnownTypeAttribute">
  <TypeSignature Language="C#" Value="public sealed class KnownTypeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit KnownTypeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.KnownTypeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class KnownTypeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class KnownTypeAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct, AllowMultiple=true, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="cc058-101">Especifica os tipos que devem ser reconhecidos pelo <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> ao serializar ou desserializar um determinado tipo.</span><span class="sxs-lookup"><span data-stu-id="cc058-101">Specifies types that should be recognized by the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> when serializing or deserializing a given type.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc058-102">Aplicar o <xref:System.Runtime.Serialization.KnownTypeAttribute> de atributo para um tipo para indicar para o <xref:System.Runtime.Serialization.DataContractSerializer> tipos que devem ser reconhecidos ao serializar ou desserializar uma instância do tipo ao qual o atributo é aplicado.</span><span class="sxs-lookup"><span data-stu-id="cc058-102">Apply the <xref:System.Runtime.Serialization.KnownTypeAttribute> attribute to a type to indicate to the <xref:System.Runtime.Serialization.DataContractSerializer> types that should be recognized when serializing or deserializing an instance of the type to which the attribute is applied.</span></span> <span data-ttu-id="cc058-103">Esse atributo também pode ser reconhecido por outros serializadores que entender os contratos de dados.</span><span class="sxs-lookup"><span data-stu-id="cc058-103">This attribute could also be recognized by other serializers that understand data contracts.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc058-104">No seu código, você pode usar a palavra `KnownType` em vez do mais `KnownTypeAttribute`.</span><span class="sxs-lookup"><span data-stu-id="cc058-104">In your code, you can use the word `KnownType` instead of the longer `KnownTypeAttribute`.</span></span>  
  
 <span data-ttu-id="cc058-105">Você pode aplicar exatamente um <xref:System.Runtime.Serialization.KnownTypeAttribute> instância com o <xref:System.Runtime.Serialization.KnownTypeAttribute.MethodName%2A> conjunto de propriedades, ou um ou mais <xref:System.Runtime.Serialization.KnownTypeAttribute> instâncias com o <xref:System.Runtime.Serialization.KnownTypeAttribute.Type%2A> conjunto de propriedades.</span><span class="sxs-lookup"><span data-stu-id="cc058-105">You can either apply exactly one <xref:System.Runtime.Serialization.KnownTypeAttribute> instance with the <xref:System.Runtime.Serialization.KnownTypeAttribute.MethodName%2A> property set, or one or more <xref:System.Runtime.Serialization.KnownTypeAttribute> instances with the <xref:System.Runtime.Serialization.KnownTypeAttribute.Type%2A> property set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc058-106">O exemplo a seguir mostra um tipo chamado `Person` e um tipo chamado `IDInformation` que devem ser reconhecidos ao serializar ou desserializar o `Person` tipo.</span><span class="sxs-lookup"><span data-stu-id="cc058-106">The following example shows a type named `Person` and a type named `IDInformation` that should be recognized when serializing or deserializing the `Person` type.</span></span>  
  
 [!code-csharp[KnownTypeAttribute#0](~/samples/snippets/csharp/VS_Snippets_CFX/knowntypeattribute/cs/overview.cs#0)]
 [!code-vb[KnownTypeAttribute#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/knowntypeattribute/vb/overview.vb#0)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Serialization.DataContractAttribute" />
    <altmember cref="T:System.Runtime.Serialization.DataMemberAttribute" />
    <altmember cref="T:System.Runtime.Serialization.DataContractSerializer" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cc058-107">Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.KnownTypeAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="cc058-107">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KnownTypeAttribute (string methodName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string methodName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (methodName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KnownTypeAttribute(System::String ^ methodName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="methodName"><span data-ttu-id="cc058-108">O nome do método que retorna um <see cref="T:System.Collections.IEnumerable" /> de tipos usados ao serializar ou desserializar dados.</span><span class="sxs-lookup"><span data-stu-id="cc058-108">The name of the method that returns an <see cref="T:System.Collections.IEnumerable" /> of types used when serializing or deserializing data.</span></span></param>
        <summary><span data-ttu-id="cc058-109">Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /> com o nome de um método que retorna um <see cref="T:System.Collections.IEnumerable" /> de tipos conhecidos.</span><span class="sxs-lookup"><span data-stu-id="cc058-109">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /> class with the name of a method that returns an <see cref="T:System.Collections.IEnumerable" /> of known types.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc058-110">Este construtor usa um nome de método que corresponde a um método da classe.</span><span class="sxs-lookup"><span data-stu-id="cc058-110">This constructor uses a method name that matches a method of the class.</span></span>  <span data-ttu-id="cc058-111">O método retorna um <xref:System.Collections.Generic.IEnumerable%601> de <xref:System.Type> objetos.</span><span class="sxs-lookup"><span data-stu-id="cc058-111">The method returns a <xref:System.Collections.Generic.IEnumerable%601> of <xref:System.Type> objects.</span></span> <span data-ttu-id="cc058-112">Durante a serialização ou desserialização, os tipos encontrados na coleção podem ser usados dentro do tipo de raiz ao qual o atributo é aplicado.</span><span class="sxs-lookup"><span data-stu-id="cc058-112">During serialization or deserialization, the types found in the collection can be used within the root type to which the attribute is applied.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc058-113">O exemplo a seguir usa o `methodName` parâmetro para identificar um método no tipo que contém uma matriz de <xref:System.Type> objetos.</span><span class="sxs-lookup"><span data-stu-id="cc058-113">The following example uses the `methodName` parameter to identify a method in the type that contains an array of <xref:System.Type> objects.</span></span>  
  
 [!code-csharp[KnownTypeAttribute_Ctor_String#1](~/samples/snippets/csharp/VS_Snippets_CFX/knowntypeattribute_ctor_string/cs/knowntype_ctor1.cs#1)]
 [!code-vb[KnownTypeAttribute_Ctor_String#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/knowntypeattribute_ctor_string/vb/knowntypeattribute_ctor1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KnownTypeAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KnownTypeAttribute(Type ^ type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="cc058-114">O <see cref="T:System.Type" /> que é incluído como um tipo conhecido ao serializar ou desserializar os dados.</span><span class="sxs-lookup"><span data-stu-id="cc058-114">The <see cref="T:System.Type" /> that is included as a known type when serializing or deserializing data.</span></span></param>
        <summary><span data-ttu-id="cc058-115">Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /> com o tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="cc058-115">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /> class with the specified type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cc058-116">O exemplo a seguir mostra um tipo chamado `Person` e um tipo chamado `IDInformation` que devem ser incluídas quando ou desserializar.</span><span class="sxs-lookup"><span data-stu-id="cc058-116">The following example shows a type named `Person` and a type named `IDInformation` that should be included when or deserializing.</span></span>  
  
 [!code-csharp[KnownTypeAttribute#0](~/samples/snippets/csharp/VS_Snippets_CFX/knowntypeattribute/cs/overview.cs#0)]
 [!code-vb[KnownTypeAttribute#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/knowntypeattribute/vb/overview.vb#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodName">
      <MemberSignature Language="C#" Value="public string MethodName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MethodName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.KnownTypeAttribute.MethodName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MethodName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MethodName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc058-117">Obtém o nome de um método que retorna uma lista dos tipos que devem ser reconhecidos durante a serialização ou desserialização.</span><span class="sxs-lookup"><span data-stu-id="cc058-117">Gets the name of a method that will return a list of types that should be recognized during serialization or deserialization.</span></span></summary>
        <value><span data-ttu-id="cc058-118">Um <see cref="T:System.String" /> que contém o nome do método do tipo definido pelo <see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /> classe.</span><span class="sxs-lookup"><span data-stu-id="cc058-118">A <see cref="T:System.String" /> that contains the name of the method on the type defined by the <see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /> class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc058-119">O método deve existir na classe ou estrutura que o <xref:System.Runtime.Serialization.KnownTypeAttribute> é aplicado a, deve ser estático, não deve aceitar nenhum parâmetro e deve retornar uma instância de qualquer tipo que implementa o genérico <xref:System.Collections.Generic.IEnumerable%601> interface, como o <xref:System.Collections.ObjectModel.Collection%601> classe ou uma matriz de <xref:System.Type> objetos.</span><span class="sxs-lookup"><span data-stu-id="cc058-119">The method must exist on the class or structure that the <xref:System.Runtime.Serialization.KnownTypeAttribute> is applied to, must be static, must accept no parameters, and must return an instance of any type that implements the generic <xref:System.Collections.Generic.IEnumerable%601> interface, such as the <xref:System.Collections.ObjectModel.Collection%601> class, or an array of <xref:System.Type> objects.</span></span>  
  
 <span data-ttu-id="cc058-120">O método é chamado uma vez por domínio de aplicativo quando o contrato de dados é carregado para o tipo.</span><span class="sxs-lookup"><span data-stu-id="cc058-120">The method is called once per application domain when the data contract is loaded for the type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc058-121">O exemplo a seguir usa o `methodName` parâmetro para identificar um método no tipo que contém uma matriz de <xref:System.Type> objetos.</span><span class="sxs-lookup"><span data-stu-id="cc058-121">The following example uses the `methodName` parameter to identify a method in the type that contains an array of <xref:System.Type> objects.</span></span>  
  
 [!code-csharp[KnownTypeAttribute_Ctor_String#1](~/samples/snippets/csharp/VS_Snippets_CFX/knowntypeattribute_ctor_string/cs/knowntype_ctor1.cs#1)]
 [!code-vb[KnownTypeAttribute_Ctor_String#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/knowntypeattribute_ctor_string/vb/knowntypeattribute_ctor1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.KnownTypeAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc058-122">Obtém o tipo que deve ser reconhecido durante a serialização ou desserialização pelo <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</span><span class="sxs-lookup"><span data-stu-id="cc058-122">Gets the type that should be recognized during serialization or deserialization by the <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</span></span></summary>
        <value><span data-ttu-id="cc058-123">O <see cref="T:System.Type" /> que é usado durante a serialização ou desserialização.</span><span class="sxs-lookup"><span data-stu-id="cc058-123">The <see cref="T:System.Type" /> that is used during serialization or deserialization.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>