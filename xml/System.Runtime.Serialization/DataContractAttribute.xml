<Type Name="DataContractAttribute" FullName="System.Runtime.Serialization.DataContractAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="04f43e13932813858f7d993ace2fae4b629cc17e" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52241971" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DataContractAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataContractAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.DataContractAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataContractAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataContractAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type DataContractAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinmac-3.0;netframework-4.8;netcore-2.2">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Enum | System.AttributeTargets.Struct, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Enum, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Especifica que o tipo define ou implementa um contrato de dados e são serializáveis por um serializador, como o <see cref="T:System.Runtime.Serialization.DataContractSerializer" />. Para tornar seu tipo serializável, os autores de tipo devem definir um contrato de dados para seu tipo.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplicar a <xref:System.Runtime.Serialization.DataContractAttribute> atributo aos tipos (classes, estruturas ou enumerações) que são usados em operações de serialização e desserialização, o <xref:System.Runtime.Serialization.DataContractSerializer>. Se você enviar ou recebe mensagens usando a infraestrutura do Windows Communication Foundation (WCF), você também deve aplicar o <xref:System.Runtime.Serialization.DataContractAttribute> para todas as classes que mantenha e manipulam os dados enviados em mensagens. Para obter mais informações sobre contratos de dados, consulte [contratos de dados usando](~/docs/framework/wcf/feature-details/using-data-contracts.md).  
  
 Você também deve aplicar o <xref:System.Runtime.Serialization.DataMemberAttribute> para qualquer campo, propriedade ou evento que contém valores que você deseja serializar. Aplicando o <xref:System.Runtime.Serialization.DataContractAttribute>, habilitar explicitamente o <xref:System.Runtime.Serialization.DataContractSerializer> para serializar e desserializar os dados.  
  
> [!CAUTION]
>  Você pode aplicar o <xref:System.Runtime.Serialization.DataMemberAttribute> a campos privados. Lembre-se de que os dados retornados pelo campo (mesmo se ela é privada) são serializados e desserializado e, portanto, podem ser exibidos ou interceptado por um usuário mal-intencionado ou processo.  
  
 Para obter mais informações sobre contratos de dados, consulte os tópicos listados em [contratos de dados usando](~/docs/framework/wcf/feature-details/using-data-contracts.md).  
  
## <a name="data-contracts"></a>Contratos de dados  
 Um *contrato de dados* é uma descrição abstrata de um conjunto de campos com um nome e tipo de dados para cada campo. Existe o contrato de dados fora de uma única implementação para permitir que os serviços em diferentes plataformas para interoperar. Os dados passados entre os serviços estão em conformidade com o mesmo contrato, desde que todos os serviços podem processar os dados. Esse processamento é também conhecido como um *acoplados de forma flexível sistema*. Um contrato de dados também é semelhante a uma interface em que o contrato especifica como os dados devem ser entregues para que ela possa ser processada por um aplicativo. Por exemplo, o contrato de dados pode chamar para um tipo de dados chamado "Person" que tem dois campos de texto, chamados "FirstName" e "LastName". Para criar um contrato de dados, aplicar a <xref:System.Runtime.Serialization.DataContractAttribute> à classe e aplicar o <xref:System.Runtime.Serialization.DataMemberAttribute> para quaisquer campos ou propriedades que devem ser serializadas. Quando serializados, os dados está em conformidade com o contrato de dados é criado implicitamente no tipo.  
  
> [!NOTE]
>  Um contrato de dados é significativamente diferente de uma interface real em seu comportamento de herança. Interfaces são herdadas por tipos derivados. Quando você aplica o <xref:System.Runtime.Serialization.DataContractAttribute> em uma classe base, os tipos derivados não herdam o atributo ou o comportamento. No entanto, se um tipo derivado tem um contrato de dados, os membros da classe base de dados são serializados. No entanto, você deve aplicar o <xref:System.Runtime.Serialization.DataMemberAttribute> para novos membros em uma classe derivada para torná-los serializável.  
  
## <a name="xml-schema-documents-and-the-svcutil-tool"></a>Documentos de esquema XML e a ferramenta SvcUtil  
 Se você está trocando dados com outros serviços, você deve descrever o contrato de dados. Para a versão atual do <xref:System.Runtime.Serialization.DataContractSerializer>, um esquema XML pode ser usado para definir contratos de dados. (Outras formas de/descrição de metadados podem ser usadas para a mesma finalidade.) Para criar um esquema XML do seu aplicativo, use o [ferramenta de utilitário de metadados ServiceModel (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md) com o **/dconly.** opção de linha de comando. Quando a entrada para a ferramenta é um assembly, por padrão, a ferramenta gera um conjunto de esquemas XML que definem todos os tipos de contrato de dados encontrados no assembly. Por outro lado, você também pode usar a ferramenta Svcutil.exe para criar definições de classe do Visual Basic ou c# que estão em conformidade com os requisitos de esquemas XML que usam construções que podem ser expressos por contratos de dados. Nesse caso, o **/dconly.** opção de linha de comando não é necessária.  
  
 Se a entrada para a ferramenta Svcutil.exe é um esquema XML, por padrão, a ferramenta cria um conjunto de classes. Se você examinar essas classes, você verá que o <xref:System.Runtime.Serialization.DataContractAttribute> foi aplicada. Você pode usar essas classes para criar um novo aplicativo para processar os dados que devem ser trocados com outros serviços.  
  
 Você também pode executar a ferramenta em relação a um ponto de extremidade que retorna um documento de descrição linguagem WSDL (Web Services) para gerar automaticamente o código e a configuração para criar um cliente do Windows Communication Foundation (WCF). O código gerado inclui tipos que são marcados com o <xref:System.Runtime.Serialization.DataContractAttribute>.  
  
## <a name="reusing-existing-types"></a>A reutilização de tipos existentes  
 Um contrato de dados tem dois requisitos básicos: um nome estável e uma lista de membros. O nome estável consiste o namespace uniform resource identifier (URI) e o nome local do contrato. Por padrão, quando você aplicar a <xref:System.Runtime.Serialization.DataContractAttribute> a uma classe, ele usa o nome de classe como o nome local e o namespace da classe (prefixados com "http://schemas.datacontract.org/2004/07/") como o URI de namespace. Você pode substituir os padrões, definindo o <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> e <xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A> propriedades. Você também pode alterar o namespace, aplicando o <xref:System.Runtime.Serialization.ContractNamespaceAttribute> ao namespace. Use esse recurso quando você tem um tipo existente que processa os dados exatamente como você exige, mas tem um namespace diferente e um nome de classe de contrato de dados. Substituindo os valores padrão, você pode reutilizar seu tipo existente e fazer com que os dados serializados estão em conformidade com o contrato de dados.  
  
> [!NOTE]
>  Em qualquer código, você pode usar a palavra `DataContract` em vez de mais tempo <xref:System.Runtime.Serialization.DataContractAttribute>.  
  
## <a name="versioning"></a>Controle de versão  
 Um contrato de dados também pode acomodar versões mais recentes de si mesmo. Ou seja, quando uma versão posterior do contrato inclui dados extras, esses dados são armazenados e retornados para um remetente inalterados. Para fazer isso, implementar o <xref:System.Runtime.Serialization.IExtensibleDataObject> interface.  
  
 Para obter mais informações sobre controle de versão, consulte [controle de versão de contrato de dados](~/docs/framework/wcf/feature-details/data-contract-versioning.md).  
  
   
  
## Examples  
 O exemplo a seguir serializa e desserializa uma classe chamada `Person` ao qual o <xref:System.Runtime.Serialization.DataContractAttribute> foi aplicada. Observe que o <xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A> e <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> propriedades foram definidas como valores que substituem as configurações padrão.  
  
 [!code-csharp[DataContractAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractattribute/cs/overview.cs#1)]
 [!code-vb[DataContractAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractattribute/vb/overview.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Serialization.IExtensibleDataObject" />
    <altmember cref="T:System.Runtime.Serialization.ExtensionDataObject" />
    <altmember cref="T:System.Runtime.Serialization.DataContractSerializer" />
    <altmember cref="T:System.Runtime.Serialization.DataMemberAttribute" />
    <altmember cref="T:System.Runtime.Serialization.ISerializable" />
    <altmember cref="T:System.Runtime.Serialization.KnownTypeAttribute" />
    <related type="Article" href="~/docs/framework/wcf/feature-details/using-data-contracts.md">Usando contratos de dados</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNameSetExplicitly">
      <MemberSignature Language="C#" Value="public bool IsNameSetExplicitly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNameSetExplicitly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.IsNameSetExplicitly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNameSetExplicitly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNameSetExplicitly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNameSetExplicitly : bool" Usage="System.Runtime.Serialization.DataContractAttribute.IsNameSetExplicitly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém se <see cref="P:System.Runtime.Serialization.DataContractAttribute.Name" /> tiver sido definido explicitamente.</summary>
        <value>Retorna <see langword="true" /> se o nome tiver sido explicitamente definido; caso contrário, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNamespaceSetExplicitly">
      <MemberSignature Language="C#" Value="public bool IsNamespaceSetExplicitly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNamespaceSetExplicitly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.IsNamespaceSetExplicitly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNamespaceSetExplicitly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNamespaceSetExplicitly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNamespaceSetExplicitly : bool" Usage="System.Runtime.Serialization.DataContractAttribute.IsNamespaceSetExplicitly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém se <see cref="P:System.Runtime.Serialization.DataContractAttribute.Namespace" /> tiver sido definido explicitamente.</summary>
        <value>Retorna <see langword="true" /> se o namespace foi explicitamente definido; caso contrário, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReference">
      <MemberSignature Language="C#" Value="public bool IsReference { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReference" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.IsReference" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReference As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReference { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsReference : bool with get, set" Usage="System.Runtime.Serialization.DataContractAttribute.IsReference" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se deve preservar os dados de referência do objeto.</summary>
        <value>
          <see langword="true" /> para manter os dados de referência de objeto usando XML padrão, caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o `IsReference` propriedade para instruir o <xref:System.Runtime.Serialization.DataContractSerializer> inserir construções XML que preservam as informações de referência de objeto.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences" />
      </Docs>
    </Member>
    <Member MemberName="IsReferenceSetExplicitly">
      <MemberSignature Language="C#" Value="public bool IsReferenceSetExplicitly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReferenceSetExplicitly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.IsReferenceSetExplicitly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReferenceSetExplicitly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReferenceSetExplicitly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReferenceSetExplicitly : bool" Usage="System.Runtime.Serialization.DataContractAttribute.IsReferenceSetExplicitly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém se <see cref="P:System.Runtime.Serialization.DataContractAttribute.IsReference" /> tiver sido definido explicitamente.</summary>
        <value>
          <see langword="true" /> Se a referência tiver sido definida explicitamente; Caso contrário, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Runtime.Serialization.DataContractAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o nome do contrato de dados para o tipo.</summary>
        <value>O nome local de um contrato de dados. O padrão é o nome da classe ao qual o atributo foi aplicado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> propriedade é usada para fornecer um nome a um contrato de dados, que é o nome do tipo no esquema XML. Para obter mais informações, consulte [nomes de contrato de dados](~/docs/framework/wcf/feature-details/data-contract-names.md).  
  
 Por padrão, o nome de um contrato de dados é o nome do tipo que o <xref:System.Runtime.Serialization.DataContractAttribute> é aplicado a. No entanto, pode haver motivos para alterar esse nome padrão. Um dos motivos é permitir que um tipo existente para processar os dados devem estar em conformidade com um contrato de dados existente. Por exemplo, existe um tipo denominado `Person` , mas o contrato de dados incorporado em um esquema XML, requer que o nome seja `Customer`. O contrato pode ser atendido, definindo o valor da propriedade como `Customer`.  
  
 Uma segunda razão é permitir que a geração de nomes que são inválidos, como nomes de tipo. Por exemplo, se um contrato de dados exige um nome que não seja permitido como um nome de tipo, defina o valor da propriedade para o nome não permitido. Por exemplo, a cadeia de caracteres "$value" não é permitida como um nome de tipo, mas é permitida como um <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> valor da propriedade.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Runtime.Serialization.DataContractAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o namespace para o contrato de dados para o tipo.</summary>
        <value>O namespace do contrato.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use essa propriedade para especificar um namespace específico se seu tipo deve retornar dados que está em conformidade com um contrato de dados específico.  
  
> [!TIP]
>  Para os dados a serem transmitidos com êxito, o nome dos dados em um contrato de dados deve ser o mesmo no cliente e o servidor. Projetos do Visual Basic, por padrão, adicionam um prefixo para o namespace definido em cada arquivo (chamado de "namespace raiz," chamado depois que o projeto). Adicionar esse prefixo faz com que os namespaces de cliente e servidor ser diferente para o mesmo tipo. A solução é definir o <xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A> propriedade como "", ou para definir explicitamente o namespace de contrato de dados nessa propriedade.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>