<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ImportAttribute.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52fd342b12b95b30ace25637548d85e95df490be4.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2fd342b12b95b30ace25637548d85e95df490be4</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Composition.ImportAttribute">
          <source>Specifies that a property, field, or parameter value should be provided by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph>.object</source>
          <target state="translated">Especifica que um valor de parâmetro, campo ou propriedade deve ser fornecido pelo <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph>.object</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.ImportAttribute">
          <source>In the Attributed Programming Model, the <ph id="ph1">&lt;xref:System.ComponentModel.Composition.ImportAttribute&gt;</ph> is used to declare the imports, or dependencies, of a given part.</source>
          <target state="translated">No atribuído modelo de programação, o <ph id="ph1">&lt;xref:System.ComponentModel.Composition.ImportAttribute&gt;</ph> é usada para declarar imports ou dependências de uma determinada parte.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.ImportAttribute">
          <source>It can decorate a property, a field, or a method.</source>
          <target state="translated">Ele pode decorar uma propriedade, um campo ou um método.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.ImportAttribute">
          <source>During composition, a part's imports will be filled by the <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> object to which that part belongs, by using the exports provided to that <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> object.</source>
          <target state="translated">Durante a composição, importações da parte serão preenchidas pelo <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> objeto ao qual pertence essa parte, usando as exportações fornecidas para que <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.ImportAttribute">
          <source>Whether an import matches a given export is determined primarily by comparing the contract name and the contract type.</source>
          <target state="translated">Se uma importação coincide com a exportação de uma determinada é determinado principalmente pelo comparando o nome do contrato e o tipo de contrato.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.ImportAttribute">
          <source>Ordinarily, you do not have to specify either of these when using the import attribute in code, and they will be automatically inferred from the type of the decorated member.</source>
          <target state="translated">Em geral, você não precisa especificar qualquer uma delas usando o atributo de importação no código, e eles serão inferidos automaticamente do tipo do membro decorado.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.ImportAttribute">
          <source>If the import must match an export of a different type (for example, a subclass of the type of the decorated member, or an interface implemented by that member), then the contract type must be explicitly specified.</source>
          <target state="translated">Se a importação deve corresponder a uma exportação de um tipo diferente (por exemplo, uma subclasse do tipo de membro decorado ou uma interface implementada por esse membro), em seguida, o tipo de contrato deve ser especificado explicitamente.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.ImportAttribute">
          <source>The contract name can also be explicitly specified, for example to distinguish between multiple contracts with the same type, but it is usually better to do this through metadata.</source>
          <target state="translated">O nome do contrato pode também ser especificado explicitamente, por exemplo, para distinguir entre vários contratos com o mesmo tipo, mas é melhor fazer isso por meio de metadados.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.ImportAttribute">
          <source>For more information about metadata, see <ph id="ph1">&lt;xref:System.ComponentModel.Composition.PartMetadataAttribute&gt;</ph>.</source>
          <target state="translated">Para obter mais informações sobre metadados, consulte <ph id="ph1">&lt;xref:System.ComponentModel.Composition.PartMetadataAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.ImportAttribute">
          <source>The following example shows three classes with members decorated with the <ph id="ph1">&lt;xref:System.ComponentModel.Composition.ImportAttribute&gt;</ph>, and three exports that match them.</source>
          <target state="translated">O exemplo a seguir mostra três classes com membros decorados com o <ph id="ph1">&lt;xref:System.ComponentModel.Composition.ImportAttribute&gt;</ph>e três exportações que correspondem a elas.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Composition.ImportAttribute">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.ImportAttribute" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.ImportAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.ImportAttribute.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.ImportAttribute" /&gt;</ph> class, importing the export with the default contract name.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.ImportAttribute" /&gt;</ph>, importando a exportação com o nome do contrato padrão.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.ImportAttribute.#ctor">
          <source>The default contract name is the result of calling the <ph id="ph1">&lt;xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A&gt;</ph> method on the property, field, or parameter type that this is marked with this attribute.</source>
          <target state="translated">O nome do contrato padrão é o resultado de chamar o <ph id="ph1">&lt;xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A&gt;</ph> método no tipo de propriedade, campo ou parâmetro que ele é marcado com esse atributo.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.ImportAttribute.#ctor">
          <source>The contract name is compared by using the <ph id="ph1">&lt;xref:System.StringComparer.Ordinal%2A&gt;</ph> property to perform a case-sensitive, non-linguistic comparison.</source>
          <target state="translated">O nome do contrato é comparado usando-se a propriedade <ph id="ph1">&lt;xref:System.StringComparer.Ordinal%2A&gt;</ph> para executar uma comparação que diferencia maiúsculas de minúsculas, não linguística.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.ImportAttribute.#ctor(System.String)">
          <source>The contract name of the export to import, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> or an empty string ("") to use the default contract name.</source>
          <target state="translated">O nome do contrato de exportação para importação ou <ph id="ph1">&lt;see langword="null" /&gt;</ph> ou uma cadeia de caracteres vazia ("") para usar o nome do contrato padrão.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.ImportAttribute.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.ImportAttribute" /&gt;</ph> class, importing the export with the specified contract name.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.ImportAttribute" /&gt;</ph>, importando a exportação com o nome do contrato especificado.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.ImportAttribute.#ctor(System.String)">
          <source>The default contract name is the result of calling the <ph id="ph1">&lt;xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A&gt;</ph> method on the property, field, or parameter type that is marked with this attribute.</source>
          <target state="translated">O nome do contrato padrão é o resultado de chamar o <ph id="ph1">&lt;xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A&gt;</ph> método no tipo de propriedade, campo ou parâmetro está marcado com esse atributo.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.ImportAttribute.#ctor(System.String)">
          <source>The contract name is compared by using the <ph id="ph1">&lt;xref:System.StringComparer.Ordinal%2A&gt;</ph> property to perform a case-sensitive, non-linguistic comparison.</source>
          <target state="translated">O nome do contrato é comparado usando-se a propriedade <ph id="ph1">&lt;xref:System.StringComparer.Ordinal%2A&gt;</ph> para executar uma comparação que diferencia maiúsculas de minúsculas, não linguística.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.ImportAttribute.#ctor(System.Type)">
          <source>The type to derive the contract name of the export from, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> to use the default contract name.</source>
          <target state="translated">O tipo do qual derivar o nome do contrato da exportação ou <ph id="ph1">&lt;see langword="null" /&gt;</ph> para usar o nome de contrato padrão.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.ImportAttribute.#ctor(System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.ImportAttribute" /&gt;</ph> class, importing the export with the contract name derived from the specified type.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.ImportAttribute" /&gt;</ph>, importando a exportação com o nome do contrato derivado do tipo especificado.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.ImportAttribute.#ctor(System.Type)">
          <source>The contract name is the result of calling the <ph id="ph1">&lt;xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A&gt;</ph> method on <ph id="ph2">`contractType`</ph>.</source>
          <target state="translated">O nome do contrato é o resultado da chamada do método <ph id="ph1">&lt;xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A&gt;</ph> em <ph id="ph2">`contractType`</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.ImportAttribute.#ctor(System.Type)">
          <source>The default contract name is the result of calling the <ph id="ph1">&lt;xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A&gt;</ph> method on the property, field, or parameter type that is marked with this attribute.</source>
          <target state="translated">O nome do contrato padrão é o resultado de chamar o <ph id="ph1">&lt;xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A&gt;</ph> método no tipo de propriedade, campo ou parâmetro está marcado com esse atributo.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.ImportAttribute.#ctor(System.Type)">
          <source>The contract name is compared by using the <ph id="ph1">&lt;xref:System.StringComparer.Ordinal%2A&gt;</ph> property to perform a case-sensitive, non-linguistic comparison.</source>
          <target state="translated">O nome do contrato é comparado usando-se a propriedade <ph id="ph1">&lt;xref:System.StringComparer.Ordinal%2A&gt;</ph> para executar uma comparação que diferencia maiúsculas de minúsculas, não linguística.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.ImportAttribute.#ctor(System.String,System.Type)">
          <source>The contract name of the export to import, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> or an empty string ("") to use the default contract name.</source>
          <target state="translated">O nome do contrato de exportação para importação ou <ph id="ph1">&lt;see langword="null" /&gt;</ph> ou uma cadeia de caracteres vazia ("") para usar o nome do contrato padrão.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.ImportAttribute.#ctor(System.String,System.Type)">
          <source>The type of the export to import.</source>
          <target state="translated">O tipo de exportação a importar.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.ImportAttribute.#ctor(System.String,System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.ImportAttribute" /&gt;</ph> class, importing the export with the specified contract name and type.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.ImportAttribute" /&gt;</ph>, importando a exportação com o tipo e o nome do contrato especificados.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Composition.ImportAttribute.AllowDefault">
          <source>Gets or sets a value that indicates whether the property, field, or parameter will be set to its type's default value when an export with the contract name is not present in the container.</source>
          <target state="translated">Obtém ou define um valor que indica se a propriedade, o campo ou o parâmetro será definido para o valor padrão de seu tipo quando uma exportação com o nome do contrato não estiver presente no contêiner.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.ImportAttribute.AllowDefault">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property, field, or parameter will be set to its type's default value when there is no export with the <ph id="ph2">&lt;see cref="P:System.ComponentModel.Composition.ImportAttribute.ContractName" /&gt;</ph> in the <ph id="ph3">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se a propriedade, campo ou parâmetro será definido para o valor padrão do seu tipo quando não houver nenhuma exportação com o <ph id="ph2">&lt;see cref="P:System.ComponentModel.Composition.ImportAttribute.ContractName" /&gt;</ph> no <ph id="ph3">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph>; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.ImportAttribute.AllowDefault">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.ImportAttribute.AllowDefault">
          <source>The default value of the type of a property, field, or parameter is <ph id="ph1">`null`</ph> for reference types and zero for numeric value types.</source>
          <target state="translated">O valor padrão do tipo de propriedade, campo ou parâmetro é <ph id="ph1">`null`</ph> para tipos de referência e zero para tipos de valor numérico.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.ImportAttribute.AllowDefault">
          <source>For other value types, the default value will be each field of the value type initialized to zero if the field is a value type, or <ph id="ph1">`null`</ph> if the field is a reference type.</source>
          <target state="translated">Para outros tipos de valor, o valor padrão será de cada campo do tipo de valor inicializado a zero se o campo é um tipo de valor, ou <ph id="ph1">`null`</ph> se o campo for um tipo de referência.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Composition.ImportAttribute.AllowRecomposition">
          <source>Gets or sets a value that indicates whether the property or field will be recomposed when exports with a matching contract have changed in the container.</source>
          <target state="translated">Obtém ou define um valor que indica se a propriedade ou o campo será recomposto quando exportações com um contrato correspondente tiverem mudado no contêiner.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.ImportAttribute.AllowRecomposition">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property or field allows recomposition when exports with a matching <ph id="ph2">&lt;see cref="P:System.ComponentModel.Composition.ImportAttribute.ContractName" /&gt;</ph> are added or removed from the <ph id="ph3">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se a propriedade ou campo permite recomposition quando exporta com uma correspondência <ph id="ph2">&lt;see cref="P:System.ComponentModel.Composition.ImportAttribute.ContractName" /&gt;</ph> são adicionados ou removidos do <ph id="ph3">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph>; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.ImportAttribute.AllowRecomposition">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">O padrão é <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Composition.ImportAttribute.ContractName">
          <source>Gets the contract name of the export to import.</source>
          <target state="translated">Obtém o nome do contrato da exportação a importar.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.ImportAttribute.ContractName">
          <source>The contract name of the export to import.</source>
          <target state="translated">O nome do contrato da exportação a importar.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.ImportAttribute.ContractName">
          <source>The default is an empty string ("").</source>
          <target state="translated">O padrão é uma cadeia de caracteres vazia ("").</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Composition.ImportAttribute.ContractType">
          <source>Gets the type of the export to import.</source>
          <target state="translated">Obtém o tipo de exportação a importar.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.ImportAttribute.ContractType">
          <source>The type of the export to import.</source>
          <target state="translated">O tipo de exportação a importar.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy">
          <source>Gets or sets a value that indicates that the importer requires a specific <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.CreationPolicy" /&gt;</ph> for the exports used to satisfy this import.</source>
          <target state="translated">Obtém ou define um valor que indica que o importador exige uma <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.CreationPolicy" /&gt;</ph> específica para as exportações usadas para atender a essa importação.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy">
          <source>One of the following values:</source>
          <target state="translated">Um dos seguintes valores:</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy">
          <source><ph id="ph1">&lt;see cref="F:System.ComponentModel.Composition.CreationPolicy.Any" /&gt;</ph>, if the importer does not require a specific <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.CreationPolicy" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.ComponentModel.Composition.CreationPolicy.Any" /&gt;</ph>, se o importador de não exigir um determinado <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.CreationPolicy" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy">
          <source>This is the default.</source>
          <target state="translated">Esse é o padrão.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy">
          <source><ph id="ph1">&lt;see cref="F:System.ComponentModel.Composition.CreationPolicy.Shared" /&gt;</ph> to require that all used exports be shared by all parts in the container.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.ComponentModel.Composition.CreationPolicy.Shared" /&gt;</ph> para exigir que todas as exportações usadas ser compartilhado por todas as partes no contêiner.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy">
          <source><ph id="ph1">&lt;see cref="F:System.ComponentModel.Composition.CreationPolicy.NonShared" /&gt;</ph> to require that all used exports be non-shared in a container.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.ComponentModel.Composition.CreationPolicy.NonShared" /&gt;</ph> para exigir que todas as exportações usadas seja não compartilhado em um contêiner.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy">
          <source>In this case, each part receives their own instance.</source>
          <target state="translated">Nesse caso, cada parte recebe sua própria instância.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Composition.ImportAttribute.Source">
          <source>Gets or sets a value that specifies the scopes from which this import may be satisfied.</source>
          <target state="translated">Obtém ou define um valor que especifica os escopos dos quais essa importação pode ser atendida.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.ImportAttribute.Source">
          <source>A value that specifies the scopes from which this import may be satisfied.</source>
          <target state="translated">Um valor que especifica os escopos do qual essa importação pode ser atendida.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>