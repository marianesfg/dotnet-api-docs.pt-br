<Type Name="ImportAttribute" FullName="System.ComponentModel.Composition.ImportAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2fd342b12b95b30ace25637548d85e95df490be4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30368130" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ImportAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImportAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.ImportAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class ImportAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImportAttribute : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a251c-101">Especifica que um valor de parâmetro, campo ou propriedade deve ser fornecido pelo <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.object</span>
      <span class="sxs-lookup">
        <span data-stu-id="a251c-101">Specifies that a property, field, or parameter value should be provided by the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.object</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a251c-102">No atribuído modelo de programação, o <xref:System.ComponentModel.Composition.ImportAttribute> é usada para declarar imports ou dependências de uma determinada parte.</span><span class="sxs-lookup"><span data-stu-id="a251c-102">In the Attributed Programming Model, the <xref:System.ComponentModel.Composition.ImportAttribute> is used to declare the imports, or dependencies, of a given part.</span></span> <span data-ttu-id="a251c-103">Ele pode decorar uma propriedade, um campo ou um método.</span><span class="sxs-lookup"><span data-stu-id="a251c-103">It can decorate a property, a field, or a method.</span></span> <span data-ttu-id="a251c-104">Durante a composição, importações da parte serão preenchidas pelo <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> objeto ao qual pertence essa parte, usando as exportações fornecidas para que <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> objeto.</span><span class="sxs-lookup"><span data-stu-id="a251c-104">During composition, a part's imports will be filled by the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> object to which that part belongs, by using the exports provided to that <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> object.</span></span>  
  
 <span data-ttu-id="a251c-105">Se uma importação coincide com a exportação de uma determinada é determinado principalmente pelo comparando o nome do contrato e o tipo de contrato.</span><span class="sxs-lookup"><span data-stu-id="a251c-105">Whether an import matches a given export is determined primarily by comparing the contract name and the contract type.</span></span> <span data-ttu-id="a251c-106">Em geral, você não precisa especificar qualquer uma delas usando o atributo de importação no código, e eles serão inferidos automaticamente do tipo do membro decorado.</span><span class="sxs-lookup"><span data-stu-id="a251c-106">Ordinarily, you do not have to specify either of these when using the import attribute in code, and they will be automatically inferred from the type of the decorated member.</span></span> <span data-ttu-id="a251c-107">Se a importação deve corresponder a uma exportação de um tipo diferente (por exemplo, uma subclasse do tipo de membro decorado ou uma interface implementada por esse membro), em seguida, o tipo de contrato deve ser especificado explicitamente.</span><span class="sxs-lookup"><span data-stu-id="a251c-107">If the import must match an export of a different type (for example, a subclass of the type of the decorated member, or an interface implemented by that member), then the contract type must be explicitly specified.</span></span> <span data-ttu-id="a251c-108">O nome do contrato pode também ser especificado explicitamente, por exemplo, para distinguir entre vários contratos com o mesmo tipo, mas é melhor fazer isso por meio de metadados.</span><span class="sxs-lookup"><span data-stu-id="a251c-108">The contract name can also be explicitly specified, for example to distinguish between multiple contracts with the same type, but it is usually better to do this through metadata.</span></span> <span data-ttu-id="a251c-109">Para obter mais informações sobre metadados, consulte <xref:System.ComponentModel.Composition.PartMetadataAttribute>.</span><span class="sxs-lookup"><span data-stu-id="a251c-109">For more information about metadata, see <xref:System.ComponentModel.Composition.PartMetadataAttribute>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a251c-110">O exemplo a seguir mostra três classes com membros decorados com o <xref:System.ComponentModel.Composition.ImportAttribute>e três exportações que correspondem a elas.</span><span class="sxs-lookup"><span data-stu-id="a251c-110">The following example shows three classes with members decorated with the <xref:System.ComponentModel.Composition.ImportAttribute>, and three exports that match them.</span></span>  
  
 [!code-csharp[ImportAndExport#1](~/samples/snippets/csharp/VS_Snippets_Misc/importandexport/cs/program.cs#1)]
 [!code-vb[ImportAndExport#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/importandexport/vb/module1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Composition.ExportAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a251c-111">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Composition.ImportAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a251c-111">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportAttribute" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ImportAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a251c-112">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Composition.ImportAttribute" />, importando a exportação com o nome do contrato padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a251c-112">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportAttribute" /> class, importing the export with the default contract name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a251c-113">O nome do contrato padrão é o resultado de chamar o <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> método no tipo de propriedade, campo ou parâmetro que ele é marcado com esse atributo.</span><span class="sxs-lookup"><span data-stu-id="a251c-113">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property, field, or parameter type that this is marked with this attribute.</span></span>  
  
 <span data-ttu-id="a251c-114">O nome do contrato é comparado usando-se a propriedade <xref:System.StringComparer.Ordinal%2A> para executar uma comparação que diferencia maiúsculas de minúsculas, não linguística.</span><span class="sxs-lookup"><span data-stu-id="a251c-114">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportAttribute (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ImportAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportAttribute(System::String ^ contractName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contractName">
          <span data-ttu-id="a251c-115">O nome do contrato de exportação para importação ou <see langword="null" /> ou uma cadeia de caracteres vazia ("") para usar o nome do contrato padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a251c-115">The contract name of the export to import, or <see langword="null" /> or an empty string ("") to use the default contract name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a251c-116">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Composition.ImportAttribute" />, importando a exportação com o nome do contrato especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a251c-116">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportAttribute" /> class, importing the export with the specified contract name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a251c-117">O nome do contrato padrão é o resultado de chamar o <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> método no tipo de propriedade, campo ou parâmetro está marcado com esse atributo.</span><span class="sxs-lookup"><span data-stu-id="a251c-117">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property, field, or parameter type that is marked with this attribute.</span></span>  
  
 <span data-ttu-id="a251c-118">O nome do contrato é comparado usando-se a propriedade <xref:System.StringComparer.Ordinal%2A> para executar uma comparação que diferencia maiúsculas de minúsculas, não linguística.</span><span class="sxs-lookup"><span data-stu-id="a251c-118">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportAttribute (Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ImportAttribute.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportAttribute(Type ^ contractType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contractType">
          <span data-ttu-id="a251c-119">O tipo do qual derivar o nome do contrato da exportação ou <see langword="null" /> para usar o nome de contrato padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a251c-119">The type to derive the contract name of the export from, or <see langword="null" /> to use the default contract name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a251c-120">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Composition.ImportAttribute" />, importando a exportação com o nome do contrato derivado do tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a251c-120">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportAttribute" /> class, importing the export with the contract name derived from the specified type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a251c-121">O nome do contrato é o resultado da chamada do método <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> em `contractType`.</span><span class="sxs-lookup"><span data-stu-id="a251c-121">The contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `contractType`.</span></span>  
  
 <span data-ttu-id="a251c-122">O nome do contrato padrão é o resultado de chamar o <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> método no tipo de propriedade, campo ou parâmetro está marcado com esse atributo.</span><span class="sxs-lookup"><span data-stu-id="a251c-122">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property, field, or parameter type that is marked with this attribute.</span></span>  
  
 <span data-ttu-id="a251c-123">O nome do contrato é comparado usando-se a propriedade <xref:System.StringComparer.Ordinal%2A> para executar uma comparação que diferencia maiúsculas de minúsculas, não linguística.</span><span class="sxs-lookup"><span data-stu-id="a251c-123">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportAttribute (string contractName, Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName, class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ImportAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractName As String, contractType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportAttribute(System::String ^ contractName, Type ^ contractType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contractName">
          <span data-ttu-id="a251c-124">O nome do contrato de exportação para importação ou <see langword="null" /> ou uma cadeia de caracteres vazia ("") para usar o nome do contrato padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a251c-124">The contract name of the export to import, or <see langword="null" /> or an empty string ("") to use the default contract name.</span>
          </span>
        </param>
        <param name="contractType">
          <span data-ttu-id="a251c-125">O tipo de exportação a importar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a251c-125">The type of the export to import.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a251c-126">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Composition.ImportAttribute" />, importando a exportação com o tipo e o nome do contrato especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a251c-126">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportAttribute" /> class, importing the export with the specified contract name and type.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDefault">
      <MemberSignature Language="C#" Value="public bool AllowDefault { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDefault" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportAttribute.AllowDefault" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowDefault { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a251c-127">Obtém ou define um valor que indica se a propriedade, o campo ou o parâmetro será definido para o valor padrão de seu tipo quando uma exportação com o nome do contrato não estiver presente no contêiner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a251c-127">Gets or sets a value that indicates whether the property, field, or parameter will be set to its type's default value when an export with the contract name is not present in the container.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a251c-128">
            <see langword="true" /> Se a propriedade, campo ou parâmetro será definido para o valor padrão do seu tipo quando não houver nenhuma exportação com o <see cref="P:System.ComponentModel.Composition.ImportAttribute.ContractName" /> no <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a251c-128">
              <see langword="true" /> if the property, field, or parameter will be set to its type's default value when there is no export with the <see cref="P:System.ComponentModel.Composition.ImportAttribute.ContractName" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a251c-129">O padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a251c-129">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a251c-130">O valor padrão do tipo de propriedade, campo ou parâmetro é `null` para tipos de referência e zero para tipos de valor numérico.</span><span class="sxs-lookup"><span data-stu-id="a251c-130">The default value of the type of a property, field, or parameter is `null` for reference types and zero for numeric value types.</span></span> <span data-ttu-id="a251c-131">Para outros tipos de valor, o valor padrão será de cada campo do tipo de valor inicializado a zero se o campo é um tipo de valor, ou `null` se o campo for um tipo de referência.</span><span class="sxs-lookup"><span data-stu-id="a251c-131">For other value types, the default value will be each field of the value type initialized to zero if the field is a value type, or `null` if the field is a reference type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowRecomposition">
      <MemberSignature Language="C#" Value="public bool AllowRecomposition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowRecomposition" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportAttribute.AllowRecomposition" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowRecomposition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowRecomposition { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a251c-132">Obtém ou define um valor que indica se a propriedade ou o campo será recomposto quando exportações com um contrato correspondente tiverem mudado no contêiner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a251c-132">Gets or sets a value that indicates whether the property or field will be recomposed when exports with a matching contract have changed in the container.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a251c-133">
            <see langword="true" /> Se a propriedade ou campo permite recomposition quando exporta com uma correspondência <see cref="P:System.ComponentModel.Composition.ImportAttribute.ContractName" /> são adicionados ou removidos do <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a251c-133">
              <see langword="true" /> if the property or field allows recomposition when exports with a matching <see cref="P:System.ComponentModel.Composition.ImportAttribute.ContractName" /> are added or removed from the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a251c-134">O padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a251c-134">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractName">
      <MemberSignature Language="C#" Value="public string ContractName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContractName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportAttribute.ContractName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContractName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a251c-135">Obtém o nome do contrato da exportação a importar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a251c-135">Gets the contract name of the export to import.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a251c-136">O nome do contrato da exportação a importar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a251c-136">The contract name of the export to import.</span>
          </span>
          <span data-ttu-id="a251c-137">O padrão é uma cadeia de caracteres vazia ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="a251c-137">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractType">
      <MemberSignature Language="C#" Value="public Type ContractType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ContractType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportAttribute.ContractType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ContractType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a251c-138">Obtém o tipo de exportação a importar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a251c-138">Gets the type of the export to import.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a251c-139">O tipo de exportação a importar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a251c-139">The type of the export to import.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiredCreationPolicy">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.CreationPolicy RequiredCreationPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.Composition.CreationPolicy RequiredCreationPolicy" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property RequiredCreationPolicy As CreationPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Composition::CreationPolicy RequiredCreationPolicy { System::ComponentModel::Composition::CreationPolicy get(); void set(System::ComponentModel::Composition::CreationPolicy value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.CreationPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a251c-140">Obtém ou define um valor que indica que o importador exige uma <see cref="T:System.ComponentModel.Composition.CreationPolicy" /> específica para as exportações usadas para atender a essa importação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a251c-140">Gets or sets a value that indicates that the importer requires a specific <see cref="T:System.ComponentModel.Composition.CreationPolicy" /> for the exports used to satisfy this import.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a251c-141">Um dos seguintes valores:</span>
          <span class="sxs-lookup">
            <span data-stu-id="a251c-141">One of the following values:</span>
          </span>
          <span data-ttu-id="a251c-142">
            <see cref="F:System.ComponentModel.Composition.CreationPolicy.Any" />, se o importador de não exigir um determinado <see cref="T:System.ComponentModel.Composition.CreationPolicy" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a251c-142">
              <see cref="F:System.ComponentModel.Composition.CreationPolicy.Any" />, if the importer does not require a specific <see cref="T:System.ComponentModel.Composition.CreationPolicy" />.</span>
          </span>
          <span data-ttu-id="a251c-143">Esse é o padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a251c-143">This is the default.</span>
          </span>
          <span data-ttu-id="a251c-144">
            <see cref="F:System.ComponentModel.Composition.CreationPolicy.Shared" /> para exigir que todas as exportações usadas ser compartilhado por todas as partes no contêiner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a251c-144">
              <see cref="F:System.ComponentModel.Composition.CreationPolicy.Shared" /> to require that all used exports be shared by all parts in the container.</span>
          </span>
          <span data-ttu-id="a251c-145">
            <see cref="F:System.ComponentModel.Composition.CreationPolicy.NonShared" /> para exigir que todas as exportações usadas seja não compartilhado em um contêiner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a251c-145">
              <see cref="F:System.ComponentModel.Composition.CreationPolicy.NonShared" /> to require that all used exports be non-shared in a container.</span>
          </span>
          <span data-ttu-id="a251c-146">Nesse caso, cada parte recebe sua própria instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a251c-146">In this case, each part receives their own instance.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.ImportSource Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.Composition.ImportSource Source" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportAttribute.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As ImportSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Composition::ImportSource Source { System::ComponentModel::Composition::ImportSource get(); void set(System::ComponentModel::Composition::ImportSource value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.ImportSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a251c-147">Obtém ou define um valor que especifica os escopos dos quais essa importação pode ser atendida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a251c-147">Gets or sets a value that specifies the scopes from which this import may be satisfied.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a251c-148">Um valor que especifica os escopos do qual essa importação pode ser atendida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a251c-148">A value that specifies the scopes from which this import may be satisfied.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>