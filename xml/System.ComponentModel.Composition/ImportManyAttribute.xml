<Type Name="ImportManyAttribute" FullName="System.ComponentModel.Composition.ImportManyAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="529faf954e2a10dc389da8b4af290ba5cae43ce2" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30367610" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ImportManyAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImportManyAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.ImportManyAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class ImportManyAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImportManyAttribute : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="af437-101">Especifica que uma propriedade, campo ou parâmetro deve ser preenchido com todas as exportações correspondentes, pelo objeto <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="af437-101">Specifies that a property, field, or parameter should be populated with all matching exports by the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="af437-102">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Composition.ImportManyAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af437-102">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportManyAttribute" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportManyAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ImportManyAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportManyAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="af437-103">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Composition.ImportManyAttribute" /> importando o conjunto de exportações com o nome do contrato padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af437-103">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportManyAttribute" /> class, importing the set of exports with the default contract name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af437-104">O nome do contrato padrão é o resultado de chamar o <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> método do tipo de propriedade, campo ou parâmetro que está marcado com esse atributo.</span><span class="sxs-lookup"><span data-stu-id="af437-104">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the type of the property, field, or parameter that is marked with this attribute.</span></span>  
  
 <span data-ttu-id="af437-105">O nome do contrato é comparado usando-se a propriedade <xref:System.StringComparer.Ordinal%2A> para executar uma comparação que diferencia maiúsculas de minúsculas, não linguística.</span><span class="sxs-lookup"><span data-stu-id="af437-105">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportManyAttribute (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportManyAttribute(System::String ^ contractName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contractName">
          <span data-ttu-id="af437-106">O nome do contrato das exportações a importar ou <see langword="null" /> ou uma cadeia de caracteres vazia ("") para usar o nome do contrato padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af437-106">The contract name of the exports to import, or <see langword="null" /> or an empty string ("") to use the default contract name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af437-107">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Composition.ImportManyAttribute" /> importando o conjunto de exportações com o nome do contrato especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af437-107">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportManyAttribute" /> class, importing the set of exports with the specified contract name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af437-108">O nome do contrato padrão é o resultado de chamar o <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> método no tipo de propriedade, campo ou parâmetro está marcado com esse atributo.</span><span class="sxs-lookup"><span data-stu-id="af437-108">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property, field, or parameter type that is marked with this attribute.</span></span>  
  
 <span data-ttu-id="af437-109">O nome do contrato é comparado usando-se a propriedade <xref:System.StringComparer.Ordinal%2A> para executar uma comparação que diferencia maiúsculas de minúsculas, não linguística.</span><span class="sxs-lookup"><span data-stu-id="af437-109">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportManyAttribute (Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportManyAttribute(Type ^ contractType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contractType">
          <span data-ttu-id="af437-110">O tipo do qual derivar o nome do contrato da exportação a importar ou <see langword="null" /> para usar o nome de contrato padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af437-110">The type to derive the contract name of the exports to import, or <see langword="null" /> to use the default contract name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af437-111">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Composition.ImportManyAttribute" /> importando o conjunto de exportação com o nome do contrato derivado do tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af437-111">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportManyAttribute" /> class, importing the set of exports with the contract name derived from the specified type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af437-112">O nome do contrato é o resultado da chamada do método <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> em `contractType`.</span><span class="sxs-lookup"><span data-stu-id="af437-112">The contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `contractType`.</span></span>  
  
 <span data-ttu-id="af437-113">O nome do contrato padrão é o resultado de chamar o <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> método no tipo de propriedade, campo ou parâmetro está marcado com esse atributo.</span><span class="sxs-lookup"><span data-stu-id="af437-113">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property, field, or parameter type that is marked with this attribute.</span></span>  
  
 <span data-ttu-id="af437-114">O nome do contrato é comparado usando-se a propriedade <xref:System.StringComparer.Ordinal%2A> para executar uma comparação que diferencia maiúsculas de minúsculas, não linguística.</span><span class="sxs-lookup"><span data-stu-id="af437-114">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportManyAttribute (string contractName, Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName, class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractName As String, contractType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportManyAttribute(System::String ^ contractName, Type ^ contractType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contractName">
          <span data-ttu-id="af437-115">O nome do contrato das exportações a importar ou <see langword="null" /> ou uma cadeia de caracteres vazia ("") para usar o nome do contrato padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af437-115">The contract name of the exports to import, or <see langword="null" /> or an empty string ("") to use the default contract name.</span>
          </span>
        </param>
        <param name="contractType">
          <span data-ttu-id="af437-116">O tipo de exportação a importar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af437-116">The type of the export to import.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="af437-117">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Composition.ImportManyAttribute" />, importando o conjunto de exportações com o nome de contrato e o tipo de contrato especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af437-117">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportManyAttribute" /> class, importing the set of exports with the specified contract name and contract type.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowRecomposition">
      <MemberSignature Language="C#" Value="public bool AllowRecomposition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowRecomposition" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportManyAttribute.AllowRecomposition" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowRecomposition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowRecomposition { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="af437-118">Obtém ou define um valor que indica se o campo ou a propriedade decorada será recomposto quando exportações que fornecem o contrato correspondente mudarem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af437-118">Gets or sets a value indicating whether the decorated property or field will be recomposed when exports that provide the matching contract change.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="af437-119">
            <see langword="true" /> Se a propriedade ou campo permite recomposition quando exportações que fornecem a mesma <see cref="P:System.ComponentModel.Composition.ImportManyAttribute.ContractName" /> são adicionados ou removidos do <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af437-119">
              <see langword="true" /> if the property or field allows for recomposition when exports that provide the same <see cref="P:System.ComponentModel.Composition.ImportManyAttribute.ContractName" /> are added or removed from the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="af437-120">O valor padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af437-120">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractName">
      <MemberSignature Language="C#" Value="public string ContractName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContractName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportManyAttribute.ContractName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContractName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="af437-121">Obtém o nome do contrato das exportações para importar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af437-121">Gets the contract name of the exports to import.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="af437-122">O nome do contrato das exportações para importar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af437-122">The contract name of the exports to import.</span>
          </span>
          <span data-ttu-id="af437-123">O valor padrão é uma cadeia de caracteres vazia ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="af437-123">The default value is an empty string ("").</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractType">
      <MemberSignature Language="C#" Value="public Type ContractType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ContractType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportManyAttribute.ContractType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ContractType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="af437-124">Obtém o tipo do contrato da exportação a importar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af437-124">Gets the contract type of the export to import.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="af437-125">O tipo de exportação que essa importação está esperando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af437-125">The type of the export that this import is expecting.</span>
          </span>
          <span data-ttu-id="af437-126">O valor padrão é <see langword="null" />, que significa que o tipo será obtido observando o tipo do membro que essa importação está associada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af437-126">The default value is <see langword="null" />, which means that the type will be obtained by looking at the type on the member that this import is attached to.</span>
          </span>
          <span data-ttu-id="af437-127">Se o tipo for <see cref="T:System.Object" />, a importação corresponderá a qualquer tipo exportado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af437-127">If the type is <see cref="T:System.Object" />, the import will match any exported type.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiredCreationPolicy">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.CreationPolicy RequiredCreationPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.Composition.CreationPolicy RequiredCreationPolicy" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportManyAttribute.RequiredCreationPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property RequiredCreationPolicy As CreationPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Composition::CreationPolicy RequiredCreationPolicy { System::ComponentModel::Composition::CreationPolicy get(); void set(System::ComponentModel::Composition::CreationPolicy value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.CreationPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="af437-128">Obtém ou define um valor que indica que o importador exige uma <see cref="T:System.ComponentModel.Composition.CreationPolicy" /> específica para as exportações usadas para atender a essa importação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af437-128">Gets or sets a value that indicates that the importer requires a specific <see cref="T:System.ComponentModel.Composition.CreationPolicy" /> for the exports used to satisfy this import.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="af437-129">Um dos seguintes valores:</span>
          <span class="sxs-lookup">
            <span data-stu-id="af437-129">One of the following values:</span>
          </span>
          <span data-ttu-id="af437-130">
            <see cref="F:System.ComponentModel.Composition.CreationPolicy.Any" />, se o importador de não exigir um determinado <see cref="T:System.ComponentModel.Composition.CreationPolicy" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af437-130">
              <see cref="F:System.ComponentModel.Composition.CreationPolicy.Any" />, if the importer does not require a specific <see cref="T:System.ComponentModel.Composition.CreationPolicy" />.</span>
          </span>
          <span data-ttu-id="af437-131">Esse é o padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af437-131">This is the default.</span>
          </span>
          <span data-ttu-id="af437-132">
            <see cref="F:System.ComponentModel.Composition.CreationPolicy.Shared" /> para exigir que todas as exportações usadas ser compartilhado por todas as partes no contêiner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af437-132">
              <see cref="F:System.ComponentModel.Composition.CreationPolicy.Shared" /> to require that all used exports be shared by all parts in the container.</span>
          </span>
          <span data-ttu-id="af437-133">
            <see cref="F:System.ComponentModel.Composition.CreationPolicy.NonShared" /> para exigir que todas as exportações usadas seja não compartilhado em um contêiner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af437-133">
              <see cref="F:System.ComponentModel.Composition.CreationPolicy.NonShared" /> to require that all used exports be non-shared in a container.</span>
          </span>
          <span data-ttu-id="af437-134">Nesse caso, cada parte recebe sua própria instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af437-134">In this case, each part receives their own instance.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.ImportSource Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.Composition.ImportSource Source" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportManyAttribute.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As ImportSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Composition::ImportSource Source { System::ComponentModel::Composition::ImportSource get(); void set(System::ComponentModel::Composition::ImportSource value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.ImportSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="af437-135">Obtém ou define um valor que especifica os escopos dos quais essa importação pode ser atendida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af437-135">Gets or sets a value that specifies the scopes from which this import may be satisfied.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="af437-136">Um valor que especifica os escopos do qual essa importação pode ser atendida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="af437-136">A value that specifies the scopes from which this import may be satisfied.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>