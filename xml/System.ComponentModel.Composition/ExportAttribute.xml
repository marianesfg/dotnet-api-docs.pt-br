<Type Name="ExportAttribute" FullName="System.ComponentModel.Composition.ExportAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="360f34ea16c30195fdf771b4bb7ca51250e3039a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36711483" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ExportAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExportAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.ExportAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class ExportAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExportAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type ExportAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Field | System.AttributeTargets.Method | System.AttributeTargets.Property, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="e827c-101">Especifica que um tipo, uma propriedade, um campo ou um método fornece uma exportação específica.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e827c-101">Specifies that a type, property, field, or method provides a particular export.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e827c-102">No atribuído modelo de programação, o <xref:System.ComponentModel.Composition.ExportAttribute> declara que exporta uma parte, ou fornece para o contêiner de composição, um objeto que atenda a um contrato específico.</span><span class="sxs-lookup"><span data-stu-id="e827c-102">In the Attributed Programming Model, the <xref:System.ComponentModel.Composition.ExportAttribute> declares that a part exports, or provides to the composition container, an object that fulfills a particular contract.</span></span> <span data-ttu-id="e827c-103">Durante a composição, partes de importações que têm correspondência contratos terá essas dependências preenchidas pelo objeto exportado.</span><span class="sxs-lookup"><span data-stu-id="e827c-103">During composition, parts with imports that have matching contracts will have those dependencies filled by the exported object.</span></span>  
  
 <span data-ttu-id="e827c-104">O <xref:System.ComponentModel.Composition.ExportAttribute> pode decorar toda uma classe ou uma propriedade, campo ou método de uma classe.</span><span class="sxs-lookup"><span data-stu-id="e827c-104">The <xref:System.ComponentModel.Composition.ExportAttribute> can decorate either an entire class, or a property, field, or method of a class.</span></span> <span data-ttu-id="e827c-105">Se a classe inteira é decorada, uma instância da classe é o objeto exportado.</span><span class="sxs-lookup"><span data-stu-id="e827c-105">If the entire class is decorated, an instance of the class is the exported object.</span></span> <span data-ttu-id="e827c-106">Se um membro de uma classe está decorado, o objeto exportado será o valor do membro realçado.</span><span class="sxs-lookup"><span data-stu-id="e827c-106">If a member of a class is decorated, the exported object will be the value of the decorated member.</span></span>  
  
 <span data-ttu-id="e827c-107">Ou não corresponde a um contrato é determinado principalmente pelo nome do contrato e o tipo de contrato.</span><span class="sxs-lookup"><span data-stu-id="e827c-107">Whether or not a contract matches is determined primarily by the contract name and the contract type.</span></span> <span data-ttu-id="e827c-108">Para obter mais informações, consulte <xref:System.ComponentModel.Composition.ImportAttribute>.</span><span class="sxs-lookup"><span data-stu-id="e827c-108">For more information, see <xref:System.ComponentModel.Composition.ImportAttribute>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e827c-109">O exemplo a seguir mostra três classes decorados com o <xref:System.ComponentModel.Composition.ExportAttribute>e três importações que correspondem a elas.</span><span class="sxs-lookup"><span data-stu-id="e827c-109">The following example shows three classes decorated with the <xref:System.ComponentModel.Composition.ExportAttribute>, and three imports that match them.</span></span>  
  
 [!code-csharp[ImportAndExport#1](~/samples/snippets/csharp/VS_Snippets_Misc/importandexport/cs/program.cs#1)]
 [!code-vb[ImportAndExport#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/importandexport/vb/module1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Composition.ImportAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e827c-110">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Composition.ExportAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e827c-110">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExportAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ExportAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExportAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e827c-111">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Composition.ExportAttribute" />, exportando o tipo ou membro marcado com esse atributo com o nome de contrato padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e827c-111">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> class, exporting the type or member marked with this attribute under the default contract name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e827c-112">O nome do contrato padrão é o resultado de chamar o <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> método no tipo de propriedade ou campo, ou o tipo que está marcado com esse atributo.</span><span class="sxs-lookup"><span data-stu-id="e827c-112">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property or field type, or on the type that is marked with this attribute.</span></span>  
  
 <span data-ttu-id="e827c-113">Métodos marcados com esse atributo devem especificar um nome de contrato ou um tipo usando o <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29> ou <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>.</span><span class="sxs-lookup"><span data-stu-id="e827c-113">Methods marked with this attribute must specify a contract name or a type by using either <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29> or <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>.</span></span>  
  
 <span data-ttu-id="e827c-114">O nome do contrato é comparado usando-se a propriedade <xref:System.StringComparer.Ordinal%2A> para executar uma comparação que diferencia maiúsculas de minúsculas, não linguística.</span><span class="sxs-lookup"><span data-stu-id="e827c-114">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExportAttribute (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExportAttribute(System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.ExportAttribute : string -&gt; System.ComponentModel.Composition.ExportAttribute" Usage="new System.ComponentModel.Composition.ExportAttribute contractName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contractName">
          <span data-ttu-id="e827c-115">O nome do contrato que é usado para exportar o tipo ou membro marcado com esse atributo, ou <see langword="null" />, ou uma cadeia de caracteres vazia ("") para usar o nome do contrato padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e827c-115">The contract name that is used to export the type or member marked with this attribute, or <see langword="null" /> or an empty string ("") to use the default contract name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e827c-116">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Composition.ExportAttribute" />, exportando o tipo ou membro marcado com esse atributo com o nome de contrato especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e827c-116">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> class, exporting the type or member marked with this attribute under the specified contract name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e827c-117">O nome do contrato padrão é o resultado de chamar o <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> método no tipo de propriedade ou campo, ou o tipo que ele é marcado com esse atributo.</span><span class="sxs-lookup"><span data-stu-id="e827c-117">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property or field type, or on the type that this is marked with this attribute.</span></span>  
  
 <span data-ttu-id="e827c-118">Métodos marcados com esse atributo devem especificar um nome de contrato ou um tipo usando o <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29> ou <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>.</span><span class="sxs-lookup"><span data-stu-id="e827c-118">Methods marked with this attribute must specify a contract name or a type by using either <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29> or <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>.</span></span>  
  
 <span data-ttu-id="e827c-119">O nome do contrato é comparado usando-se a propriedade <xref:System.StringComparer.Ordinal%2A> para executar uma comparação que diferencia maiúsculas de minúsculas, não linguística.</span><span class="sxs-lookup"><span data-stu-id="e827c-119">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExportAttribute (Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExportAttribute(Type ^ contractType);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.ExportAttribute : Type -&gt; System.ComponentModel.Composition.ExportAttribute" Usage="new System.ComponentModel.Composition.ExportAttribute contractType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contractType">
          <span data-ttu-id="e827c-120">Um tipo de derivação do nome de contrato que é usado para exportar o tipo ou membro marcado com esse atributo, ou <see langword="null" /> para usar um nome de contrato padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e827c-120">A type from which to derive the contract name that is used to export the type or member marked with this attribute, or <see langword="null" /> to use the default contract name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e827c-121">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Composition.ExportAttribute" />, exportando o tipo ou membro marcado com esse atributo em um nome de contrato derivado do tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e827c-121">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> class, exporting the type or member marked with this attribute under a contract name derived from the specified type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e827c-122">O nome do contrato é o resultado da chamada do método <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> em `contractType`.</span><span class="sxs-lookup"><span data-stu-id="e827c-122">The contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `contractType`.</span></span>  
  
 <span data-ttu-id="e827c-123">O nome do contrato padrão é o resultado de chamar o <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> método no tipo de propriedade ou campo, ou o tipo que está marcado com esse atributo.</span><span class="sxs-lookup"><span data-stu-id="e827c-123">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property or field type, or on the type that is marked with this attribute.</span></span>  
  
 <span data-ttu-id="e827c-124">Métodos marcados com esse atributo devem especificar um nome de contrato ou um tipo usando o <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29> ou <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>.</span><span class="sxs-lookup"><span data-stu-id="e827c-124">Methods marked with this attribute must specify a contract name or a type by using either <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29> or <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>.</span></span>  
  
 <span data-ttu-id="e827c-125">O nome do contrato é comparado usando-se a propriedade <xref:System.StringComparer.Ordinal%2A> para executar uma comparação que diferencia maiúsculas de minúsculas, não linguística.</span><span class="sxs-lookup"><span data-stu-id="e827c-125">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExportAttribute (string contractName, Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName, class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractName As String, contractType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExportAttribute(System::String ^ contractName, Type ^ contractType);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.ExportAttribute : string * Type -&gt; System.ComponentModel.Composition.ExportAttribute" Usage="new System.ComponentModel.Composition.ExportAttribute (contractName, contractType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contractName">
          <span data-ttu-id="e827c-126">O nome do contrato que é usado para exportar o tipo ou membro marcado com esse atributo, ou <see langword="null" />, ou uma cadeia de caracteres vazia ("") para usar o nome do contrato padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e827c-126">The contract name that is used to export the type or member marked with this attribute, or <see langword="null" /> or an empty string ("") to use the default contract name.</span>
          </span>
        </param>
        <param name="contractType">
          <span data-ttu-id="e827c-127">O tipo a ser exportado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e827c-127">The type to export.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e827c-128">Inicializa uma nova instância da classe <see cref="T:System.ComponentModel.Composition.ExportAttribute" />, exportando o tipo especificado com o nome de contrato especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e827c-128">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> class, exporting the specified type under the specified contract name.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractName">
      <MemberSignature Language="C#" Value="public string ContractName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContractName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ExportAttribute.ContractName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContractName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContractName : string" Usage="System.ComponentModel.Composition.ExportAttribute.ContractName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e827c-129">Obtém o nome do contrato que é usado para exportar o tipo ou membro marcado com esse atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e827c-129">Gets the contract name that is used to export the type or member marked with this attribute.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e827c-130">O nome do contrato que é usado para exportar o tipo ou membro marcado com esse atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e827c-130">The contract name that is used to export the type or member marked with this attribute.</span>
          </span>
          <span data-ttu-id="e827c-131">O valor padrão é uma cadeia de caracteres vazia ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="e827c-131">The default value is an empty string ("").</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractType">
      <MemberSignature Language="C#" Value="public Type ContractType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ContractType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ExportAttribute.ContractType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ContractType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContractType : Type" Usage="System.ComponentModel.Composition.ExportAttribute.ContractType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e827c-132">Obtém o tipo de contrato exportado pelo membro ao qual este atributo é anexado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e827c-132">Gets the contract type that is exported by the member that this attribute is attached to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e827c-133">O tipo de exportação que é fornecido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e827c-133">The type of export that is be provided.</span>
          </span>
          <span data-ttu-id="e827c-134">O valor padrão é <see langword="null" />, que significa que o tipo será obtido examinando o tipo no membro ao qual essa exportação está anexada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e827c-134">The default value is <see langword="null" />, which means that the type will be obtained by looking at the type on the member that this export is attached to.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>