<Type Name="ProjectMetadata" FullName="Microsoft.Build.Evaluation.ProjectMetadata">
  <TypeSignature Language="C#" Value="public class ProjectMetadata : IEquatable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProjectMetadata extends System.Object implements class System.IEquatable`1&lt;class Microsoft.Build.Evaluation.ProjectMetadata&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Evaluation.ProjectMetadata" />
  <TypeSignature Language="VB.NET" Value="Public Class ProjectMetadata&#xA;Implements IEquatable(Of ProjectMetadata)" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProjectMetadata : IEquatable&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{Name}={EvaluatedValue} [{xml.Value}]")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="36383-101">Representa os metadados em tempo de design avaliados.</span><span class="sxs-lookup"><span data-stu-id="36383-101">Represents evaluated design-time metadata.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36383-102">Nunca é usado para representar metadados internos, como % (nome de arquivo).</span><span class="sxs-lookup"><span data-stu-id="36383-102">Never used to represent built-in metadata, like %(Filename).</span></span> <span data-ttu-id="36383-103">Os metadados sempre estão associado com o código de origem do projeto.</span><span class="sxs-lookup"><span data-stu-id="36383-103">The metadata is always associated with project source code.</span></span>  
  
 <span data-ttu-id="36383-104">Os metadados está contido por um <xref:Microsoft.Build.Evaluation.ProjectItemDefinition> ou <xref:Microsoft.Build.Evaluation.ProjectItem>.</span><span class="sxs-lookup"><span data-stu-id="36383-104">The metadata is contained by either by a <xref:Microsoft.Build.Evaluation.ProjectItemDefinition> or a <xref:Microsoft.Build.Evaluation.ProjectItem>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ConditionLocation">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ElementLocation ConditionLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation ConditionLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.ConditionLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConditionLocation As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ElementLocation ^ ConditionLocation { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36383-105">O local do atributo Condition.</span><span class="sxs-lookup"><span data-stu-id="36383-105">Location of the Condition attribute.</span></span></summary>
        <value><span data-ttu-id="36383-106">Retorna o local de atributo de condição.</span><span class="sxs-lookup"><span data-stu-id="36383-106">Returns Condition attribute location.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluatedValue">
      <MemberSignature Language="C#" Value="public string EvaluatedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EvaluatedValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.EvaluatedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EvaluatedValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EvaluatedValue { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36383-107">Obtém o valor de metadados avaliado.</span><span class="sxs-lookup"><span data-stu-id="36383-107">Gets the evaluated metadata value.</span></span></summary>
        <value><span data-ttu-id="36383-108">Retorna o valor avaliado metadados, que nunca é nulo.</span><span class="sxs-lookup"><span data-stu-id="36383-108">Returns the evaluated metadata value, which is never null.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36383-109">Não é possível definir diretamente: somente o valor não avaliado pode ser definido.</span><span class="sxs-lookup"><span data-stu-id="36383-109">Cannot be set directly: only the unevaluated value can be set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsImported">
      <MemberSignature Language="C#" Value="public bool IsImported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsImported" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.IsImported" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsImported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsImported { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36383-110">Determina se os metadados originaram-se de um arquivo importado.</span><span class="sxs-lookup"><span data-stu-id="36383-110">Determines if the metadata originated from an imported file.</span></span></summary>
        <value><span data-ttu-id="36383-111">Retorna VERDADEIRO se os metadados origem de um arquivo importado. FALSO caso contrário.</span><span class="sxs-lookup"><span data-stu-id="36383-111">Returns true if the metadata originated from an imported file; false otherwise.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public string ItemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ItemType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.ItemType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ItemType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36383-112">Obtém o tipo de item para o item ou a definição de item recipiente.</span><span class="sxs-lookup"><span data-stu-id="36383-112">Gets the item type of the containing item definition or item.</span></span></summary>
        <value><span data-ttu-id="36383-113">Retorna o tipo de item de definição de item de recipiente ou do item.</span><span class="sxs-lookup"><span data-stu-id="36383-113">Returns the item type of the containing item definition or item.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ElementLocation Location { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation Location" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.Location" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Location As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ElementLocation ^ Location { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36383-114">Local do elemento.</span><span class="sxs-lookup"><span data-stu-id="36383-114">Location of the element.</span></span></summary>
        <value><span data-ttu-id="36383-115">Retorna o local do elemento.</span><span class="sxs-lookup"><span data-stu-id="36383-115">Returns the element location.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36383-116">Obtém o nome dos metadados.</span><span class="sxs-lookup"><span data-stu-id="36383-116">Gets the name of the metadata.</span></span></summary>
        <value><span data-ttu-id="36383-117">Retorna o nome dos metadados.</span><span class="sxs-lookup"><span data-stu-id="36383-117">Returns the name of the metadata.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Predecessor">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ProjectMetadata Predecessor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Evaluation.ProjectMetadata Predecessor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.Predecessor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Predecessor As ProjectMetadata" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Evaluation::ProjectMetadata ^ Predecessor { Microsoft::Build::Evaluation::ProjectMetadata ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectMetadata</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36383-118">Obtém os últimos metadados (de um item ou de uma definição de item) substituídos por estes metadados durante a avaliação.</span><span class="sxs-lookup"><span data-stu-id="36383-118">Gets the last metadata (from an item definition or item) that was overridden by this metadata during evaluation.</span></span></summary>
        <value><span data-ttu-id="36383-119">Retorna os metadados de último (de uma definição de item ou item) cujo valor foi substituído por esses metadados durante a avaliação.</span><span class="sxs-lookup"><span data-stu-id="36383-119">Returns the last metadata (from an item definition or item) whose value was overridden by this metadata during evaluation.</span></span> <span data-ttu-id="36383-120">Retorna nulo se os metadados não foi substituído.</span><span class="sxs-lookup"><span data-stu-id="36383-120">Returns null if the metadata has not been overridden.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36383-121">Este método pesquisa todos os metadados com o mesmo nome que acabam acima no arquivo de projeto lógico e que é contido por definições de item do mesmo tipo de item e cujas condições são avaliadas como true.</span><span class="sxs-lookup"><span data-stu-id="36383-121">This method searches for all metadata with the same name that lie above in the logical project file, and which are contained by item definitions of the same item type, and whose conditions evaluate to true.</span></span> <span data-ttu-id="36383-122">Se os metadados estiverem contidos por um item, este método pesquisa todos os metadados anteriores com o mesmo nome e o item cuja condição avaliada como true.</span><span class="sxs-lookup"><span data-stu-id="36383-122">If the metadata is contained by an item, this method searches for any previous metadata with the same name and item whose condition evaluated to true.</span></span> <span data-ttu-id="36383-123">Definições de item são pesquisadas antes de itens.</span><span class="sxs-lookup"><span data-stu-id="36383-123">Item definitions are searched before items.</span></span>  
  
 <span data-ttu-id="36383-124">Se o projeto não tem sido reavaliado desde a última modificação, esse valor pode estar incorreto.</span><span class="sxs-lookup"><span data-stu-id="36383-124">If the project has not been reevaluated since the last modification, this value may be incorrect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Project">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.Project Project { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Evaluation.Project Project" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.Project" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Project As Project" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Evaluation::Project ^ Project { Microsoft::Build::Evaluation::Project ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.Project</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36383-125">Obtém o projeto que contém esses metadados.</span><span class="sxs-lookup"><span data-stu-id="36383-125">Gets the project that contains this metadata.</span></span></summary>
        <value><span data-ttu-id="36383-126">Retorna o projeto que contém metadados, que nunca é nulo.</span><span class="sxs-lookup"><span data-stu-id="36383-126">Returns the project that contains this metadata, which is never null.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IEquatable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;.Equals">
      <MemberSignature Language="C#" Value="bool IEquatable&lt;ProjectMetadata&gt;.Equals (Microsoft.Build.Evaluation.ProjectMetadata other);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IEquatable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;.Equals(class Microsoft.Build.Evaluation.ProjectMetadata other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.ProjectMetadata.System#IEquatable&lt;Microsoft#Build#Evaluation#ProjectMetadata&gt;#Equals(Microsoft.Build.Evaluation.ProjectMetadata)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (other As ProjectMetadata) As Boolean Implements IEquatable(Of ProjectMetadata).Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IEquatable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;.Equals(Microsoft::Build::Evaluation::ProjectMetadata ^ other) = IEquatable&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt;::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Microsoft.Build.Evaluation.ProjectMetadata" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="36383-127">Os metadados do projeto aos quais ser comparado.</span><span class="sxs-lookup"><span data-stu-id="36383-127">The project metadata to be compared to.</span></span></param>
        <summary><span data-ttu-id="36383-128">Compara os metadados desse projeto aos metadados do projeto fornecidos quanto à igualdade.</span><span class="sxs-lookup"><span data-stu-id="36383-128">Compares this project metadata with the given project metadata for equality.</span></span></summary>
        <returns><span data-ttu-id="36383-129">Retornará true se os metadados de projeto forem iguais; caso contrário, false.</span><span class="sxs-lookup"><span data-stu-id="36383-129">Returns true if the project metadata are equal; false otherwise.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnevaluatedValue">
      <MemberSignature Language="C#" Value="public string UnevaluatedValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UnevaluatedValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.UnevaluatedValue" />
      <MemberSignature Language="VB.NET" Value="Public Property UnevaluatedValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UnevaluatedValue { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36383-130">Obtém ou define o valor dos metadados não avaliados.</span><span class="sxs-lookup"><span data-stu-id="36383-130">Gets or sets the unevaluated metadata value.</span></span></summary>
        <value><span data-ttu-id="36383-131">Retorna o valor de metadados não avaliado.</span><span class="sxs-lookup"><span data-stu-id="36383-131">Returns the unevaluated metadata value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36383-132">O método setter atualiza o valor não avaliado e o valor avaliado, mas não afeta mais nada no projeto até reavaliação.</span><span class="sxs-lookup"><span data-stu-id="36383-132">The setter method updates both the unevaluated value and the evaluated value, but does not affect anything else in the project until reevaluation.</span></span>  
  
 <span data-ttu-id="36383-133">Por exemplo,-se uma parte dos metadados denominados "m" for modificada no item do tipo "i", ele não afeta "j", que é avaliada de "@(j -> '(m) %')" até que a reavaliação.</span><span class="sxs-lookup"><span data-stu-id="36383-133">For example, --if a piece of metadata named "m" is modified on item of type "i", it does not affect "j" which is evaluated from "@(j->'%(m)')" until reevaluation.</span></span> <span data-ttu-id="36383-134">– Se o valor não avaliado "m" é definido como algo que é modificada por avaliação, como "$(p)", o valor será definido para "$(p)" até que a reavaliação.</span><span class="sxs-lookup"><span data-stu-id="36383-134">--if the unevaluated value of "m" is set to something that is modified by evaluation, such as "$(p)", the evaluated value will be set to "$(p)" until reevaluation.</span></span>  
  
 <span data-ttu-id="36383-135">A definição de metadados por meio de um <xref:Microsoft.Build.Evaluation.ProjectItem> pode causar associado <xref:Microsoft.Build.Construction.ProjectItemElement> a ser dividida, se o elemento item originados de uma expressão de item de lista, curinga ou ponto e vírgula.</span><span class="sxs-lookup"><span data-stu-id="36383-135">Setting metadata through a <xref:Microsoft.Build.Evaluation.ProjectItem> may cause the associated <xref:Microsoft.Build.Construction.ProjectItemElement> to be split, if the item element originated from an item list, wildcard, or semicolon expression.</span></span> <span data-ttu-id="36383-136">porque isso implica uma intenção de afetam somente esse item.</span><span class="sxs-lookup"><span data-stu-id="36383-136">because it implies an intention to only affect that particular item.</span></span>  
  
 <span data-ttu-id="36383-137">A definição de metadados por meio de ProjectMetadata não cause qualquer divisão, porque isso implica uma intenção para afetar todos os itens usando subjacente <xref:Microsoft.Build.Construction.ProjectMetadataElement>.</span><span class="sxs-lookup"><span data-stu-id="36383-137">Setting metadata through ProjectMetadata does not cause any splitting, because it implies an intention to affect all items using the underlying <xref:Microsoft.Build.Construction.ProjectMetadataElement>.</span></span>  
  
 <span data-ttu-id="36383-138">O projeto está marcado como modificada.</span><span class="sxs-lookup"><span data-stu-id="36383-138">The containing project is marked as modified.</span></span> <span data-ttu-id="36383-139">Não avaliados valores serão considerados conter caracteres sequências de escape conforme necessário.</span><span class="sxs-lookup"><span data-stu-id="36383-139">Unevaluated values are assumed to contain escaped character sequences as needed.</span></span>  
  
 <span data-ttu-id="36383-140">Este método não pode deixar o projeto em um estado consistente de autoatendimento.</span><span class="sxs-lookup"><span data-stu-id="36383-140">This method may not leave the project in a self consistent state.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Xml">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectMetadataElement Xml { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ProjectMetadataElement Xml" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.Xml" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Xml As ProjectMetadataElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ProjectMetadataElement ^ Xml { Microsoft::Build::Construction::ProjectMetadataElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectMetadataElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36383-141">Obtém o elemento de metadados de projeto associado.</span><span class="sxs-lookup"><span data-stu-id="36383-141">Gets the associated project metadata element.</span></span></summary>
        <value><span data-ttu-id="36383-142">Retorna o elemento de metadados do projeto associado, nunca pode ser nulo.</span><span class="sxs-lookup"><span data-stu-id="36383-142">Returns the associated project metadata element, which can never be null.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>