<Type Name="ProjectProperty" FullName="Microsoft.Build.Evaluation.ProjectProperty">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0bfdd2edfe18b304c2392657897fd025bc8ddf87" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39979986" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ProjectProperty : IEquatable&lt;Microsoft.Build.Evaluation.ProjectProperty&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ProjectProperty extends System.Object implements class System.IEquatable`1&lt;class Microsoft.Build.Evaluation.ProjectProperty&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Evaluation.ProjectProperty" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ProjectProperty&#xA;Implements IEquatable(Of ProjectProperty)" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProjectProperty abstract : IEquatable&lt;Microsoft::Build::Evaluation::ProjectProperty ^&gt;" />
  <TypeSignature Language="F#" Value="type ProjectProperty = class&#xA;    interface IEquatable&lt;ProjectProperty&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Microsoft.Build.Evaluation.ProjectProperty&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Diagnostics.DebuggerDisplay("{Name}={EvaluatedValue} [{UnevaluatedValue}]")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0">
      <AttributeName>System.Diagnostics.DebuggerDisplay("{name}={EvaluatedValue} [{xml.Value}]")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="2b816-101">Representa uma propriedade de tempo de design avaliada.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2b816-101">Represents an evaluated design-time property.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="EvaluatedValue">
      <MemberSignature Language="C#" Value="public string EvaluatedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EvaluatedValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectProperty.EvaluatedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EvaluatedValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EvaluatedValue { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EvaluatedValue : string" Usage="Microsoft.Build.Evaluation.ProjectProperty.EvaluatedValue" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Evaluation.IProperty.EvaluatedValue</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2b816-102">Obtém o valor da propriedade avaliada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b816-102">Gets the evaluated property value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2b816-103">Retorna o valor de propriedade avaliada, que nunca é nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b816-103">Returns the evaluated property value, which is never null.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b816-104">Não pode ser definida diretamente. pode ser definido apenas o valor não avaliado.</span><span class="sxs-lookup"><span data-stu-id="2b816-104">Cannot be set directly; only the unevaluated value can be set.</span></span> <span data-ttu-id="2b816-105">O valor avaliado não contém nenhuma sequência de escape de caractere.</span><span class="sxs-lookup"><span data-stu-id="2b816-105">The evaluated value contains no character escape sequences.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnvironmentProperty">
      <MemberSignature Language="C#" Value="public abstract bool IsEnvironmentProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnvironmentProperty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectProperty.IsEnvironmentProperty" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsEnvironmentProperty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsEnvironmentProperty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEnvironmentProperty : bool" Usage="Microsoft.Build.Evaluation.ProjectProperty.IsEnvironmentProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2b816-106">Determina se a propriedade foi originada das variáveis de ambiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b816-106">Determines whether the property originated from the environment variables.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2b816-107">True se a propriedade foi originada de uma variável de ambiente; False caso contrário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b816-107">True if the property originated from an environment variable; false otherwise.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGlobalProperty">
      <MemberSignature Language="C#" Value="public abstract bool IsGlobalProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGlobalProperty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectProperty.IsGlobalProperty" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsGlobalProperty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsGlobalProperty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsGlobalProperty : bool" Usage="Microsoft.Build.Evaluation.ProjectProperty.IsGlobalProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2b816-108">Determina se a propriedade é uma propriedade global.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b816-108">Determines whether the property is a global property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2b816-109">True se a propriedade é uma propriedade global; False caso contrário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b816-109">True if the property is a global property; false otherwise.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsImported">
      <MemberSignature Language="C#" Value="public abstract bool IsImported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsImported" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectProperty.IsImported" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsImported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsImported { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsImported : bool" Usage="Microsoft.Build.Evaluation.ProjectProperty.IsImported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2b816-110">Determina se a propriedade é originada de um arquivo importado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b816-110">Determines whether the property originates from an imported file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2b816-111">Retorna VERDADEIRO se a propriedade é originada de um arquivo importado e não de uma variável de ambiente, uma propriedade global ou uma propriedade reservada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b816-111">Returns true if the property originates from an imported file and not from an environment variable, a global property, or a reserved property.</span>
          </span>
          <span data-ttu-id="2b816-112">Caso contrário, retornará false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b816-112">Returns false otherwise.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReservedProperty">
      <MemberSignature Language="C#" Value="public abstract bool IsReservedProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReservedProperty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectProperty.IsReservedProperty" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsReservedProperty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsReservedProperty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReservedProperty : bool" Usage="Microsoft.Build.Evaluation.ProjectProperty.IsReservedProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2b816-113">Determina se a propriedade é uma propriedade reservada, por exemplo, 'MSBuildProjectFile'.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b816-113">Determines whether the property is a reserved property, for example 'MSBuildProjectFile'.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2b816-114">Retorna VERDADEIRO se a propriedade é uma propriedade reservada; False caso contrário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b816-114">Returns true if the property is a reserved property; false otherwise.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectProperty.Name" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Microsoft.Build.Evaluation.ProjectProperty.Name" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Evaluation.IProperty.Name</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Diagnostics.DebuggerBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2b816-115">Obtém o nome da propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b816-115">Gets the name of the property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2b816-116">Retorna o nome da propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b816-116">Returns the name of the property.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Predecessor">
      <MemberSignature Language="C#" Value="public abstract Microsoft.Build.Evaluation.ProjectProperty Predecessor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Evaluation.ProjectProperty Predecessor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectProperty.Predecessor" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Predecessor As ProjectProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Microsoft::Build::Evaluation::ProjectProperty ^ Predecessor { Microsoft::Build::Evaluation::ProjectProperty ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Predecessor : Microsoft.Build.Evaluation.ProjectProperty" Usage="Microsoft.Build.Evaluation.ProjectProperty.Predecessor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2b816-117">Obtém a última propriedade que foi substituída por essa propriedade durante a avaliação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b816-117">Gets the last property that was overridden by this property during evaluation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2b816-118">Retorna a última propriedade cujo valor foi substituído por essa propriedade durante a avaliação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b816-118">Returns the last property whose value was overridden by this property during evaluation.</span>
          </span>
          <span data-ttu-id="2b816-119">Retorna nulo se a propriedade não foi substituída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b816-119">Returns null if the property has not been overridden.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b816-120">Esse método pesquisará todas as propriedades com o mesmo nome que acabam acima no arquivo de projeto lógico e cujas condições são avaliadas como true.</span><span class="sxs-lookup"><span data-stu-id="2b816-120">This method searches for all properties with the same name that lie above in the logical project file, and whose conditions evaluate to true.</span></span>  
  
 <span data-ttu-id="2b816-121">Se o projeto não tem sido reavaliado desde a última modificação, esse valor pode estar incorreto.</span><span class="sxs-lookup"><span data-stu-id="2b816-121">If the project has not been reevaluated since the last modification, this value may be incorrect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Project">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.Project Project { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Evaluation.Project Project" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectProperty.Project" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Project As Project" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Evaluation::Project ^ Project { Microsoft::Build::Evaluation::Project ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Project : Microsoft.Build.Evaluation.Project" Usage="Microsoft.Build.Evaluation.ProjectProperty.Project" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Diagnostics.DebuggerBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.Project</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2b816-122">Obtém o projeto que contém essa propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b816-122">Gets the project that contains this property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2b816-123">Retorna o projeto que contém essa propriedade, que nunca é nula.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b816-123">Returns the project that contains this property, which is never null.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IEquatable&lt;Microsoft.Build.Evaluation.ProjectProperty&gt;.Equals">
      <MemberSignature Language="C#" Value="bool IEquatable&lt;ProjectProperty&gt;.Equals (Microsoft.Build.Evaluation.ProjectProperty other);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IEquatable&lt;Microsoft.Build.Evaluation.ProjectProperty&gt;.Equals(class Microsoft.Build.Evaluation.ProjectProperty other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.ProjectProperty.System#IEquatable&lt;Microsoft#Build#Evaluation#ProjectProperty&gt;#Equals(Microsoft.Build.Evaluation.ProjectProperty)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (other As ProjectProperty) As Boolean Implements IEquatable(Of ProjectProperty).Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IEquatable&lt;Microsoft.Build.Evaluation.ProjectProperty&gt;.Equals(Microsoft::Build::Evaluation::ProjectProperty ^ other) = IEquatable&lt;Microsoft::Build::Evaluation::ProjectProperty ^&gt;::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Microsoft.Build.Evaluation.ProjectProperty" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="2b816-124">A propriedade do projeto com a qual comparar</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b816-124">The project property to be compared to</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b816-125">Compara essa propriedade de projeto com a propriedade de projeto fornecida quanto à igualdade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b816-125">Compares this project property with the given project property for equality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b816-126">Retorna true se as propriedades de projeto são iguais; caso contrário, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b816-126">Returns true if the project properties are equal; false otherwise.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnevaluatedValue">
      <MemberSignature Language="C#" Value="public abstract string UnevaluatedValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UnevaluatedValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectProperty.UnevaluatedValue" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property UnevaluatedValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ UnevaluatedValue { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UnevaluatedValue : string with get, set" Usage="Microsoft.Build.Evaluation.ProjectProperty.UnevaluatedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2b816-127">Obtém ou define o valor da propriedade não avaliada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b816-127">Gets or sets the unevaluated property value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2b816-128">Retorna o valor da propriedade não avaliada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b816-128">Returns the unevaluated property value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b816-129">O método setter atualiza o valor não avaliado e o valor avaliado, mas não afeta mais nada no projeto até que a reavaliação.</span><span class="sxs-lookup"><span data-stu-id="2b816-129">The setter method updates both the unevaluated value and the evaluated value, but does not affect anything else in the project until reevaluation.</span></span>  
  
 <span data-ttu-id="2b816-130">O projeto contentor está marcado como modificada.</span><span class="sxs-lookup"><span data-stu-id="2b816-130">The containing project is marked as modified.</span></span> <span data-ttu-id="2b816-131">Valores não avaliados devem conter caracteres sequências de escape conforme necessário.</span><span class="sxs-lookup"><span data-stu-id="2b816-131">Unevaluated values are assumed to contain escaped character sequences as needed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Xml">
      <MemberSignature Language="C#" Value="public abstract Microsoft.Build.Construction.ProjectPropertyElement Xml { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ProjectPropertyElement Xml" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectProperty.Xml" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Xml As ProjectPropertyElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Microsoft::Build::Construction::ProjectPropertyElement ^ Xml { Microsoft::Build::Construction::ProjectPropertyElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Xml : Microsoft.Build.Construction.ProjectPropertyElement" Usage="Microsoft.Build.Evaluation.ProjectProperty.Xml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Diagnostics.DebuggerBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectPropertyElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2b816-132">Obtém o elemento de propriedade associado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b816-132">Gets the associated property element.</span>
          </span>
          <span data-ttu-id="2b816-133">Propriedade XML de suporte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b816-133">Backing XML property.</span>
          </span>
          <span data-ttu-id="2b816-134">Nulo somente se essa for uma propriedade global, de ambiente ou interna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b816-134">Null only if this is a global, environment, or built-in property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2b816-135">Retorna o elemento de propriedade associada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b816-135">Returns the associated property element.</span>
          </span>
          <span data-ttu-id="2b816-136">Retorne null se esta é uma propriedade global ou reservada ou se origina de uma variável de ambiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b816-136">Return null if this is a global or reserved property, or originates from an environment variable.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>