<Type Name="Project" FullName="Microsoft.Build.Evaluation.Project">
  <TypeSignature Language="C#" Value="public class Project" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Project extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Evaluation.Project" />
  <TypeSignature Language="VB.NET" Value="Public Class Project" />
  <TypeSignature Language="C++ CLI" Value="public ref class Project" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{FullPath} EffectiveToolsVersion={ToolsVersion} #GlobalProperties={data.globalProperties.Count} #Properties={data.Properties.Count} #ItemTypes={data.ItemTypes.Count} #ItemDefinitions={data.ItemDefinitions.Count} #Items={data.Items.Count} #Targets={data.Targets.Count}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="899c5-101">Representa um projeto com a semântica de tempo de design.</span><span class="sxs-lookup"><span data-stu-id="899c5-101">Represents a project with design time semantics.</span></span> <span data-ttu-id="899c5-102">Essa classe pode carregar arquivos de projeto, editar itens e propriedades e criar projetos.</span><span class="sxs-lookup"><span data-stu-id="899c5-102">This class can load project files, edit items and properties and build projects.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="899c5-103">Constrói um projeto vazio usando as propriedades globais da coleção global de projetos e a versão padrão das ferramentas.</span><span class="sxs-lookup"><span data-stu-id="899c5-103">Constructs an empty project using the global project collection global properties and default tools version.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="899c5-104">Constrói um projeto vazio usando as propriedades globais da coleção global de projetos e a versão padrão das ferramentas.</span><span class="sxs-lookup"><span data-stu-id="899c5-104">Constructs an empty project using the global project collection global properties and default tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-105">Este projeto é adicionado à coleção de projeto global quando é fornecido o caminho completo para o arquivo de projeto de origem, normalmente por salvar o projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-105">This project is added to the global project collection when it is given the full path to the source project file, typically by saving the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Construction.ProjectRootElement xml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xml As ProjectRootElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Construction::ProjectRootElement ^ xml);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="899c5-106">O ProjectRootElement a ser usado para avaliação.</span><span class="sxs-lookup"><span data-stu-id="899c5-106">ProjectRootElement to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="899c5-107">Constrói um projeto vazio e o avalia usando a raiz do projeto determinada, bem como as propriedades globais da coleção global de projetos e a versão padrão das ferramentas.</span><span class="sxs-lookup"><span data-stu-id="899c5-107">Constructs an empty project and evaluates it using the given project root and the global project collection global properties and default tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-108">Este projeto é adicionado à coleção de projeto global quando este projeto ou a raiz do projeto fornecido tem o caminho completo para o arquivo de projeto de origem.</span><span class="sxs-lookup"><span data-stu-id="899c5-108">This project is added to the global project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="899c5-109">Lança InvalidProjectFileException caso a avaliação falhe.</span><span class="sxs-lookup"><span data-stu-id="899c5-109">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="899c5-110">Lança InvalidOperationException caso já haja um projeto equivalente carregado na coleção de projetos.</span><span class="sxs-lookup"><span data-stu-id="899c5-110">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="projectCollection"><span data-ttu-id="899c5-111">A coleção de projetos a que o novo projeto é adicionado.</span><span class="sxs-lookup"><span data-stu-id="899c5-111">The project collection that the new project is added to.</span></span></param>
        <summary><span data-ttu-id="899c5-112">Constrói um projeto vazio usando as propriedades globais determinadas da coleção de projetos e a versão padrão das ferramentas.</span><span class="sxs-lookup"><span data-stu-id="899c5-112">Constructs an empty project using the given project collection global properties and default tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-113">Este projeto é adicionado à coleção de projeto fornecido quando é fornecido o caminho completo para o arquivo de projeto de origem, normalmente por salvar o projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-113">This project is added to the given project collection when it is given the full path to the source project file, typically by saving the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (string projectFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectFile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::String ^ projectFile);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="899c5-114">O arquivo de projeto de origem a ser avaliado.</span><span class="sxs-lookup"><span data-stu-id="899c5-114">The source project file to be evaluated.</span></span></param>
        <summary><span data-ttu-id="899c5-115">Constrói um projeto e o avalia através do arquivo de projeto de origem determinado, bem como as propriedades globais da coleção global de projetos e a versão padrão das ferramentas.</span><span class="sxs-lookup"><span data-stu-id="899c5-115">Constructs a project and evaluates it from the given source project file and with the global project collection global properties and default tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-116">O projeto é adicionado à coleção de projeto global.</span><span class="sxs-lookup"><span data-stu-id="899c5-116">The project is added to the global project collection.</span></span>  
  
 <span data-ttu-id="899c5-117">Gera InvalidOperationException se já houver um projeto na coleção de projeto que é avaliada neste arquivo de projeto de origem.</span><span class="sxs-lookup"><span data-stu-id="899c5-117">Throws InvalidOperationException if there is already a project in the project collection that evaluates this source project file.</span></span> <span data-ttu-id="899c5-118">Pode lançar exceções relacionadas a IO.</span><span class="sxs-lookup"><span data-stu-id="899c5-118">May throw IO-related exceptions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:Microsoft.Build.Exceptions.InvalidProjectFileException"><span data-ttu-id="899c5-119">Se a avaliação falhar.</span><span class="sxs-lookup"><span data-stu-id="899c5-119">If the evaluation fails.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Xml.XmlReader xmlReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Xml::XmlReader ^ xmlReader);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="899c5-120">Leitor XML para leitura do código-fonte do projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-120">Xml reader to read project source code from.</span></span></param>
        <summary><span data-ttu-id="899c5-121">Constrói um projeto e avalia o código-fonte do leitor XML fornecido.</span><span class="sxs-lookup"><span data-stu-id="899c5-121">Constructs a project and evaluates the source code from the given XML reader.</span></span> <span data-ttu-id="899c5-122">O código-fonte é avaliado com as propriedades globais da coleção de projetos globais e a versão padrão das ferramentas.</span><span class="sxs-lookup"><span data-stu-id="899c5-122">The source code is evaluated with the global project collection global properties and default tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-123">Este projeto é adicionado à coleção de projeto global quando é fornecido o caminho completo para o arquivo de projeto de origem, normalmente por salvar o projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-123">This project is added to the global project collection when it is given the full path to the source project file, typically by saving the project.</span></span>  
  
 <span data-ttu-id="899c5-124">Lança InvalidProjectFileException caso a avaliação falhe.</span><span class="sxs-lookup"><span data-stu-id="899c5-124">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="899c5-125">Lança InvalidOperationException caso já haja um projeto equivalente carregado na coleção de projetos.</span><span class="sxs-lookup"><span data-stu-id="899c5-125">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xml As ProjectRootElement, globalProperties As IDictionary(Of String, String), toolsVersion As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="899c5-126">A raiz do projeto a ser usada para avaliação.</span><span class="sxs-lookup"><span data-stu-id="899c5-126">The project root to use for evaluation.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="899c5-127">Propriedades globais a serem avaliadas com.</span><span class="sxs-lookup"><span data-stu-id="899c5-127">Global properties to evaluate with.</span></span> <span data-ttu-id="899c5-128">Pode ser nulo; nesse caso, as propriedades globais da coleção de projetos serão usadas.</span><span class="sxs-lookup"><span data-stu-id="899c5-128">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="899c5-129">Versão das ferramentas para avaliação.</span><span class="sxs-lookup"><span data-stu-id="899c5-129">Tools version to evaluate with.</span></span> <span data-ttu-id="899c5-130">Pode ser nulo.</span><span class="sxs-lookup"><span data-stu-id="899c5-130">May be null.</span></span></param>
        <summary><span data-ttu-id="899c5-131">Constrói um projeto vazio e o avalia usando a raiz do projeto determinada, bem como as propriedades globais e versão das ferramentas especificadas.</span><span class="sxs-lookup"><span data-stu-id="899c5-131">Constructs an empty project and evaluates it using the given project root and with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-132">Este projeto é adicionado à coleção de projeto global quando este projeto ou a raiz do projeto fornecido tem o caminho completo para o arquivo de projeto de origem.</span><span class="sxs-lookup"><span data-stu-id="899c5-132">This project is added to the global project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="899c5-133">Lança InvalidProjectFileException caso a avaliação falhe.</span><span class="sxs-lookup"><span data-stu-id="899c5-133">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="899c5-134">Lança InvalidOperationException caso já haja um projeto equivalente carregado na coleção de projetos.</span><span class="sxs-lookup"><span data-stu-id="899c5-134">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="globalProperties"><span data-ttu-id="899c5-135">Propriedades globais a serem avaliadas com.</span><span class="sxs-lookup"><span data-stu-id="899c5-135">Global properties to evaluate with.</span></span> <span data-ttu-id="899c5-136">Pode ser nulo; nesse caso, as propriedades globais da coleção de projetos serão usadas.</span><span class="sxs-lookup"><span data-stu-id="899c5-136">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="899c5-137">A versão das ferramentas usada para avaliar o projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-137">The tools version used to evaluate the project.</span></span> <span data-ttu-id="899c5-138">Pode ser nulo.</span><span class="sxs-lookup"><span data-stu-id="899c5-138">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="899c5-139">A coleção de projetos a que o novo projeto será adicionado.</span><span class="sxs-lookup"><span data-stu-id="899c5-139">The project collection the new project will be added to.</span></span></param>
        <summary><span data-ttu-id="899c5-140">Constrói um projeto vazio para ser avaliado com a coleção de projetos determinada, bem como as propriedades globais e versão das ferramentas especificadas.</span><span class="sxs-lookup"><span data-stu-id="899c5-140">Constructs an empty project, to be evaluated with the given project collection and with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-141">O projeto é adicionado à coleção de projeto especificado quando é fornecido o caminho completo para o arquivo de projeto de origem, normalmente por salvar o projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-141">The project is added to the specified project collection when it is given the full path to the source project file, typically by saving the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectFile As String, globalProperties As IDictionary(Of String, String), toolsVersion As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="899c5-142">O caminho para o arquivo do projeto fonte a ser avaliado.</span><span class="sxs-lookup"><span data-stu-id="899c5-142">The path to the source project file to be evaluated.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="899c5-143">Propriedades globais a serem avaliadas com.</span><span class="sxs-lookup"><span data-stu-id="899c5-143">Global properties to evaluate with.</span></span> <span data-ttu-id="899c5-144">Pode ser nulo; nesse caso, as propriedades globais da coleção de projetos serão usadas.</span><span class="sxs-lookup"><span data-stu-id="899c5-144">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="899c5-145">Versão das ferramentas para avaliação.</span><span class="sxs-lookup"><span data-stu-id="899c5-145">Tools version to evaluate with.</span></span> <span data-ttu-id="899c5-146">Pode ser nulo.</span><span class="sxs-lookup"><span data-stu-id="899c5-146">May be null.</span></span></param>
        <summary><span data-ttu-id="899c5-147">Constrói um projeto e o avalia por meio do arquivo de projeto de origem especificado, bem como as propriedades globais e versão das ferramentas especificadas.</span><span class="sxs-lookup"><span data-stu-id="899c5-147">Constructs a project and evaluates it from the given source project file and with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-148">O projeto é adicionado à coleção de projeto global.</span><span class="sxs-lookup"><span data-stu-id="899c5-148">The project is added to the global project collection.</span></span>  
  
 <span data-ttu-id="899c5-149">Lança InvalidProjectFileException caso a avaliação falhe.</span><span class="sxs-lookup"><span data-stu-id="899c5-149">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="899c5-150">Lança InvalidOperationException caso já haja um projeto equivalente carregado na coleção de projetos.</span><span class="sxs-lookup"><span data-stu-id="899c5-150">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span> <span data-ttu-id="899c5-151">Pode lançar exceções relacionadas a IO.</span><span class="sxs-lookup"><span data-stu-id="899c5-151">May throw IO-related exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Xml::XmlReader ^ xmlReader, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="899c5-152">Leitor XML para leitura do código-fonte do projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-152">Xml reader to read project source code from.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="899c5-153">Propriedades globais a serem avaliadas com.</span><span class="sxs-lookup"><span data-stu-id="899c5-153">Global properties to evaluate with.</span></span> <span data-ttu-id="899c5-154">Pode ser nulo; nesse caso, as propriedades globais da coleção de projetos serão usadas.</span><span class="sxs-lookup"><span data-stu-id="899c5-154">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="899c5-155">Versão das ferramentas para avaliação.</span><span class="sxs-lookup"><span data-stu-id="899c5-155">Tools version to evaluate with.</span></span> <span data-ttu-id="899c5-156">Pode ser nulo.</span><span class="sxs-lookup"><span data-stu-id="899c5-156">May be null.</span></span></param>
        <summary><span data-ttu-id="899c5-157">Constrói um projeto e avalia o código-fonte do leitor XML fornecido.</span><span class="sxs-lookup"><span data-stu-id="899c5-157">Constructs a project and evaluates the source code from the given XML reader.</span></span> <span data-ttu-id="899c5-158">O código-fonte é avaliado com as propriedades globais e com a versão das ferramentas especificadas.</span><span class="sxs-lookup"><span data-stu-id="899c5-158">The source code is evaluated with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-159">Este projeto é adicionado à coleção de projeto global quando é fornecido o caminho completo para o arquivo de projeto de origem, normalmente por salvar o projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-159">This project is added to the global project collection when it is given the full path to the source project file, typically by saving the project.</span></span>  
  
 <span data-ttu-id="899c5-160">Lança InvalidProjectFileException caso a avaliação falhe.</span><span class="sxs-lookup"><span data-stu-id="899c5-160">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="899c5-161">Lança InvalidOperationException caso já haja um projeto equivalente carregado na coleção de projetos.</span><span class="sxs-lookup"><span data-stu-id="899c5-161">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="899c5-162">A raiz do projeto a ser usada para avaliação.</span><span class="sxs-lookup"><span data-stu-id="899c5-162">The project root to use for evaluation.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="899c5-163">Propriedades globais a serem avaliadas com.</span><span class="sxs-lookup"><span data-stu-id="899c5-163">Global properties to evaluate with.</span></span> <span data-ttu-id="899c5-164">Pode ser nulo; nesse caso, as propriedades globais da coleção de projetos serão usadas.</span><span class="sxs-lookup"><span data-stu-id="899c5-164">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="899c5-165">Versão das ferramentas para avaliação.</span><span class="sxs-lookup"><span data-stu-id="899c5-165">Tools version to evaluate with.</span></span> <span data-ttu-id="899c5-166">Pode ser nulo.</span><span class="sxs-lookup"><span data-stu-id="899c5-166">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="899c5-167">A coleção de projetos a que o projeto é adicionado.</span><span class="sxs-lookup"><span data-stu-id="899c5-167">The project collection the project is added to.</span></span></param>
        <summary><span data-ttu-id="899c5-168">Constrói um projeto e o avalia usando a raiz do projeto determinada, bem como as propriedades globais e versão das ferramentas especificadas.</span><span class="sxs-lookup"><span data-stu-id="899c5-168">Constructs a project and evaluates it using the given project root and with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-169">Este projeto é adicionado à coleção de projetos indicada quando este projeto ou a raiz do projeto informada recebem o caminho completo para o arquivo do projeto de fonte.</span><span class="sxs-lookup"><span data-stu-id="899c5-169">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="899c5-170">Lança InvalidProjectFileException caso a avaliação falhe.</span><span class="sxs-lookup"><span data-stu-id="899c5-170">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="899c5-171">Lança InvalidOperationException caso já haja um projeto equivalente carregado na coleção de projetos.</span><span class="sxs-lookup"><span data-stu-id="899c5-171">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="899c5-172">O caminho para o arquivo do projeto fonte a ser avaliado.</span><span class="sxs-lookup"><span data-stu-id="899c5-172">The path to the source project file to be evaluated.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="899c5-173">As propriedades globais.</span><span class="sxs-lookup"><span data-stu-id="899c5-173">The global properties.</span></span> <span data-ttu-id="899c5-174">Pode ser nulo.</span><span class="sxs-lookup"><span data-stu-id="899c5-174">May be null.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="899c5-175">A versão das ferramentas.</span><span class="sxs-lookup"><span data-stu-id="899c5-175">The tools version.</span></span> <span data-ttu-id="899c5-176">Pode ser nulo.</span><span class="sxs-lookup"><span data-stu-id="899c5-176">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="899c5-177">A coleção de projetos a que o projeto é adicionado.</span><span class="sxs-lookup"><span data-stu-id="899c5-177">The project collection the project is added to.</span></span> <span data-ttu-id="899c5-178">Não pode ser nulo.</span><span class="sxs-lookup"><span data-stu-id="899c5-178">May not be null.</span></span></param>
        <summary><span data-ttu-id="899c5-179">Constrói um projeto e o avalia por meio do arquivo de projeto de origem especificado, bem como as propriedades globais e versão das ferramentas especificadas.</span><span class="sxs-lookup"><span data-stu-id="899c5-179">Constructs a project and evaluates it from the given source project file and with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-180">O projeto é adicionado à coleção de projeto fornecido.</span><span class="sxs-lookup"><span data-stu-id="899c5-180">The project is added to the given project collection.</span></span>  
  
 <span data-ttu-id="899c5-181">Lança InvalidProjectFileException caso a avaliação falhe.</span><span class="sxs-lookup"><span data-stu-id="899c5-181">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="899c5-182">Lança InvalidOperationException caso já haja um projeto equivalente carregado na coleção de projetos.</span><span class="sxs-lookup"><span data-stu-id="899c5-182">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span> <span data-ttu-id="899c5-183">Pode lançar exceções relacionadas a IO.</span><span class="sxs-lookup"><span data-stu-id="899c5-183">May throw IO-related exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Xml::XmlReader ^ xmlReader, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="899c5-184">Leitor XML para leitura do código-fonte do projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-184">Xml reader to read project source code from.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="899c5-185">Propriedades globais a serem avaliadas com.</span><span class="sxs-lookup"><span data-stu-id="899c5-185">Global properties to evaluate with.</span></span> <span data-ttu-id="899c5-186">Pode ser nulo; nesse caso, as propriedades globais da coleção de projetos serão usadas.</span><span class="sxs-lookup"><span data-stu-id="899c5-186">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="899c5-187">Versão das ferramentas para avaliação.</span><span class="sxs-lookup"><span data-stu-id="899c5-187">Tools version to evaluate with.</span></span> <span data-ttu-id="899c5-188">Pode ser nulo.</span><span class="sxs-lookup"><span data-stu-id="899c5-188">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="899c5-189">A coleção de projetos a que o projeto é adicionado.</span><span class="sxs-lookup"><span data-stu-id="899c5-189">The project collection the project is added to.</span></span> <span data-ttu-id="899c5-190">Não pode ser nulo.</span><span class="sxs-lookup"><span data-stu-id="899c5-190">May not be null.</span></span></param>
        <summary><span data-ttu-id="899c5-191">Constrói um projeto e avalia o código-fonte do leitor XML fornecido.</span><span class="sxs-lookup"><span data-stu-id="899c5-191">Constructs a project and evaluates the source code from the given XML reader.</span></span> <span data-ttu-id="899c5-192">O código-fonte é avaliado com as propriedades globais e com a versão das ferramentas especificadas.</span><span class="sxs-lookup"><span data-stu-id="899c5-192">The source code is evaluated with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-193">Este projeto é adicionado à coleção de projetos indicada quando este projeto ou a raiz do projeto informada recebem o caminho completo para o arquivo do projeto de fonte.</span><span class="sxs-lookup"><span data-stu-id="899c5-193">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="899c5-194">Lança InvalidProjectFileException caso a avaliação falhe.</span><span class="sxs-lookup"><span data-stu-id="899c5-194">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="899c5-195">Lança InvalidOperationException caso já haja um projeto equivalente carregado na coleção de projetos.</span><span class="sxs-lookup"><span data-stu-id="899c5-195">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="899c5-196">A raiz do projeto a ser usada para avaliação.</span><span class="sxs-lookup"><span data-stu-id="899c5-196">The project root to use for evaluation.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="899c5-197">Propriedades globais a serem avaliadas com.</span><span class="sxs-lookup"><span data-stu-id="899c5-197">Global properties to evaluate with.</span></span> <span data-ttu-id="899c5-198">Pode ser nulo; nesse caso, as propriedades globais da coleção de projetos serão usadas.</span><span class="sxs-lookup"><span data-stu-id="899c5-198">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="899c5-199">Versão das ferramentas para avaliação.</span><span class="sxs-lookup"><span data-stu-id="899c5-199">Tools version to evaluate with.</span></span> <span data-ttu-id="899c5-200">Pode ser nulo.</span><span class="sxs-lookup"><span data-stu-id="899c5-200">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="899c5-201">A coleção de projetos a que o projeto é adicionado.</span><span class="sxs-lookup"><span data-stu-id="899c5-201">The project collection the project is added to.</span></span> <span data-ttu-id="899c5-202">Não pode ser nulo.</span><span class="sxs-lookup"><span data-stu-id="899c5-202">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="899c5-203">As configurações de carregamento a serem usadas para avaliação.</span><span class="sxs-lookup"><span data-stu-id="899c5-203">The load settings to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="899c5-204">Constrói um projeto e o avalia usando a raiz do projeto determinada, bem como as propriedades globais, a versão das ferramentas e as configurações de carregamento especificadas.</span><span class="sxs-lookup"><span data-stu-id="899c5-204">Constructs a project and evaluates it using the given project root and with the given global properties, given tools version, and given load settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-205">Este projeto é adicionado à coleção de projetos indicada quando este projeto ou a raiz do projeto informada recebem o caminho completo para o arquivo do projeto de fonte.</span><span class="sxs-lookup"><span data-stu-id="899c5-205">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="899c5-206">Lança InvalidProjectFileException caso a avaliação falhe.</span><span class="sxs-lookup"><span data-stu-id="899c5-206">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="899c5-207">Lança InvalidOperationException caso já haja um projeto equivalente carregado na coleção de projetos.</span><span class="sxs-lookup"><span data-stu-id="899c5-207">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="899c5-208">O caminho para o arquivo do projeto fonte a ser avaliado.</span><span class="sxs-lookup"><span data-stu-id="899c5-208">The path to the source project file to be evaluated.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="899c5-209">Propriedades globais a serem avaliadas com.</span><span class="sxs-lookup"><span data-stu-id="899c5-209">Global properties to evaluate with.</span></span> <span data-ttu-id="899c5-210">Pode ser nulo; nesse caso, as propriedades globais da coleção de projetos serão usadas.</span><span class="sxs-lookup"><span data-stu-id="899c5-210">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="899c5-211">A versão das ferramentas.</span><span class="sxs-lookup"><span data-stu-id="899c5-211">The tools version.</span></span> <span data-ttu-id="899c5-212">Pode ser nulo.</span><span class="sxs-lookup"><span data-stu-id="899c5-212">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="899c5-213">A coleção de projetos a que o projeto é adicionado.</span><span class="sxs-lookup"><span data-stu-id="899c5-213">The project collection the project is added to.</span></span> <span data-ttu-id="899c5-214">Não pode ser nulo.</span><span class="sxs-lookup"><span data-stu-id="899c5-214">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="899c5-215">As configurações de carregamento a serem usadas para avaliação.</span><span class="sxs-lookup"><span data-stu-id="899c5-215">The load settings to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="899c5-216">Constrói um projeto e o avalia por meio do arquivo de projeto de origem especificado, bem como as propriedades globais, a versão das ferramentas e as configurações de carregamento especificadas.</span><span class="sxs-lookup"><span data-stu-id="899c5-216">Constructs a project and evaluates it from the given source project file and with the given global properties, given tools version, and given load settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-217">O projeto é adicionado à coleção de projeto fornecido.</span><span class="sxs-lookup"><span data-stu-id="899c5-217">The project is added to the given project collection.</span></span>  
  
 <span data-ttu-id="899c5-218">Lança InvalidProjectFileException caso a avaliação falhe.</span><span class="sxs-lookup"><span data-stu-id="899c5-218">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="899c5-219">Lança InvalidOperationException caso já haja um projeto equivalente carregado na coleção de projetos.</span><span class="sxs-lookup"><span data-stu-id="899c5-219">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span> <span data-ttu-id="899c5-220">Pode lançar exceções relacionadas a IO.</span><span class="sxs-lookup"><span data-stu-id="899c5-220">May throw IO-related exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Xml::XmlReader ^ xmlReader, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="899c5-221">Leitor de XML do qual ler o código-fonte do projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-221">Xml reader from which to read project source code.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="899c5-222">Propriedades globais a serem avaliadas com.</span><span class="sxs-lookup"><span data-stu-id="899c5-222">Global properties to evaluate with.</span></span> <span data-ttu-id="899c5-223">Pode ser nulo; nesse caso, as propriedades globais da coleção de projetos serão usadas.</span><span class="sxs-lookup"><span data-stu-id="899c5-223">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="899c5-224">Versão das ferramentas para avaliação.</span><span class="sxs-lookup"><span data-stu-id="899c5-224">Tools version to evaluate with.</span></span> <span data-ttu-id="899c5-225">Pode ser nulo.</span><span class="sxs-lookup"><span data-stu-id="899c5-225">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="899c5-226">A coleção de projetos a que o projeto é adicionado.</span><span class="sxs-lookup"><span data-stu-id="899c5-226">The project collection the project is added to.</span></span> <span data-ttu-id="899c5-227">Não pode ser nulo.</span><span class="sxs-lookup"><span data-stu-id="899c5-227">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="899c5-228">As configurações de carregamento a serem usadas para avaliação.</span><span class="sxs-lookup"><span data-stu-id="899c5-228">The load settings to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="899c5-229">Constrói um projeto e avalia o código-fonte do leitor XML fornecido.</span><span class="sxs-lookup"><span data-stu-id="899c5-229">Constructs a project and evaluates the source code from the given XML reader.</span></span> <span data-ttu-id="899c5-230">O código-fonte é avaliado com as propriedades globais e com a versão das ferramentas especificadas.</span><span class="sxs-lookup"><span data-stu-id="899c5-230">The source code is evaluated with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-231">Este projeto é adicionado à coleção de projetos indicada quando este projeto ou a raiz do projeto informada recebem o caminho completo para o arquivo do projeto de fonte.</span><span class="sxs-lookup"><span data-stu-id="899c5-231">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="899c5-232">Lança InvalidProjectFileException caso a avaliação falhe.</span><span class="sxs-lookup"><span data-stu-id="899c5-232">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="899c5-233">Lança InvalidOperationException caso já haja um projeto equivalente carregado na coleção de projetos.</span><span class="sxs-lookup"><span data-stu-id="899c5-233">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="subToolsetVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="899c5-234">A raiz do projeto a ser usada para avaliação.</span><span class="sxs-lookup"><span data-stu-id="899c5-234">The project root to use for evaluation.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="899c5-235">Propriedades globais a serem avaliadas com.</span><span class="sxs-lookup"><span data-stu-id="899c5-235">Global properties to evaluate with.</span></span> <span data-ttu-id="899c5-236">Pode ser nulo; nesse caso, as propriedades globais da coleção de projetos serão usadas.</span><span class="sxs-lookup"><span data-stu-id="899c5-236">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="899c5-237">Versão das ferramentas para avaliação.</span><span class="sxs-lookup"><span data-stu-id="899c5-237">Tools version to evaluate with.</span></span> <span data-ttu-id="899c5-238">Pode ser nulo.</span><span class="sxs-lookup"><span data-stu-id="899c5-238">May be null.</span></span></param>
        <param name="subToolsetVersion"><span data-ttu-id="899c5-239">Versão do subconjunto de ferramentas com o qual avaliar.</span><span class="sxs-lookup"><span data-stu-id="899c5-239">Sub toolset version to evaluate with.</span></span> <span data-ttu-id="899c5-240">Pode ser nulo.</span><span class="sxs-lookup"><span data-stu-id="899c5-240">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="899c5-241">A coleção de projetos a que o projeto é adicionado.</span><span class="sxs-lookup"><span data-stu-id="899c5-241">The project collection the project is added to.</span></span> <span data-ttu-id="899c5-242">Não pode ser nulo.</span><span class="sxs-lookup"><span data-stu-id="899c5-242">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="899c5-243">As configurações de carregamento a serem usadas para avaliação.</span><span class="sxs-lookup"><span data-stu-id="899c5-243">The load settings to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="899c5-244">Constrói um projeto e o avalia usando a raiz do projeto determinada, bem como as propriedades globais, as versões das ferramentas e do subconjunto de ferramentas, a coleção de projetos e as configurações de carregamento.</span><span class="sxs-lookup"><span data-stu-id="899c5-244">Constructs a project and evaluates it using the given project root and with the given global properties, tools and sub-toolset versions, project collection, and load settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-245">Este projeto é adicionado à coleção de projetos indicada quando este projeto ou a raiz do projeto informada recebem o caminho completo para o arquivo do projeto de fonte.</span><span class="sxs-lookup"><span data-stu-id="899c5-245">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="899c5-246">Lança InvalidProjectFileException caso a avaliação falhe.</span><span class="sxs-lookup"><span data-stu-id="899c5-246">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="899c5-247">Lança InvalidOperationException caso já haja um projeto equivalente carregado na coleção de projetos.</span><span class="sxs-lookup"><span data-stu-id="899c5-247">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="subToolsetVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="899c5-248">O caminho para o arquivo do projeto fonte a ser avaliado.</span><span class="sxs-lookup"><span data-stu-id="899c5-248">The path to the source project file to be evaluated.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="899c5-249">Propriedades globais a serem avaliadas com.</span><span class="sxs-lookup"><span data-stu-id="899c5-249">Global properties to evaluate with.</span></span> <span data-ttu-id="899c5-250">Pode ser nulo; nesse caso, as propriedades globais da coleção de projetos serão usadas.</span><span class="sxs-lookup"><span data-stu-id="899c5-250">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="899c5-251">A versão das ferramentas.</span><span class="sxs-lookup"><span data-stu-id="899c5-251">The tools version.</span></span> <span data-ttu-id="899c5-252">Pode ser nulo.</span><span class="sxs-lookup"><span data-stu-id="899c5-252">May be null.</span></span></param>
        <param name="subToolsetVersion"><span data-ttu-id="899c5-253">A versão do subconjunto de ferramentas.</span><span class="sxs-lookup"><span data-stu-id="899c5-253">The sub toolset version.</span></span> <span data-ttu-id="899c5-254">Pode ser nulo.</span><span class="sxs-lookup"><span data-stu-id="899c5-254">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="899c5-255">A coleção de projetos a que o projeto é adicionado.</span><span class="sxs-lookup"><span data-stu-id="899c5-255">The project collection the project is added to.</span></span> <span data-ttu-id="899c5-256">Não pode ser nulo.</span><span class="sxs-lookup"><span data-stu-id="899c5-256">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="899c5-257">As configurações de carregamento a serem usadas para avaliação.</span><span class="sxs-lookup"><span data-stu-id="899c5-257">The load settings to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="899c5-258">Constrói um projeto e o avalia por meio do arquivo de projeto de origem determinado, bem como as propriedades globais, as versões das ferramentas e do subconjunto de ferramentas, a coleção de projetos e as configurações de carregamento.</span><span class="sxs-lookup"><span data-stu-id="899c5-258">Constructs a project and evaluates it from the given source project file and with the given global properties, tools and sub-toolset versions, project collection, and load settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-259">O projeto é adicionado à coleção de projeto fornecido.</span><span class="sxs-lookup"><span data-stu-id="899c5-259">The project is added to the given project collection.</span></span>  
  
 <span data-ttu-id="899c5-260">Lança InvalidProjectFileException caso a avaliação falhe.</span><span class="sxs-lookup"><span data-stu-id="899c5-260">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="899c5-261">Lança InvalidOperationException caso já haja um projeto equivalente carregado na coleção de projetos.</span><span class="sxs-lookup"><span data-stu-id="899c5-261">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span> <span data-ttu-id="899c5-262">Pode lançar exceções relacionadas a IO.</span><span class="sxs-lookup"><span data-stu-id="899c5-262">May throw IO-related exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Xml::XmlReader ^ xmlReader, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="subToolsetVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="899c5-263">Leitor XML para leitura do código-fonte do projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-263">Xml reader to read project source code from.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="899c5-264">Propriedades globais a serem avaliadas com.</span><span class="sxs-lookup"><span data-stu-id="899c5-264">Global properties to evaluate with.</span></span> <span data-ttu-id="899c5-265">Pode ser nulo; nesse caso, as propriedades globais da coleção de projetos serão usadas.</span><span class="sxs-lookup"><span data-stu-id="899c5-265">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="899c5-266">Versão das ferramentas para avaliação.</span><span class="sxs-lookup"><span data-stu-id="899c5-266">Tools version to evaluate with.</span></span> <span data-ttu-id="899c5-267">Pode ser nulo.</span><span class="sxs-lookup"><span data-stu-id="899c5-267">May be null.</span></span></param>
        <param name="subToolsetVersion"><span data-ttu-id="899c5-268">Versão do subconjunto de ferramentas com o qual avaliar.</span><span class="sxs-lookup"><span data-stu-id="899c5-268">Sub Toolset version to evaluate with.</span></span> <span data-ttu-id="899c5-269">Pode ser nulo.</span><span class="sxs-lookup"><span data-stu-id="899c5-269">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="899c5-270">A coleção de projetos a que o projeto é adicionado.</span><span class="sxs-lookup"><span data-stu-id="899c5-270">The project collection the project is added to.</span></span> <span data-ttu-id="899c5-271">Não pode ser nulo.</span><span class="sxs-lookup"><span data-stu-id="899c5-271">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="899c5-272">As configurações de carregamento a serem usadas para avaliação.</span><span class="sxs-lookup"><span data-stu-id="899c5-272">The load settings to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="899c5-273">Constrói um projeto e avalia o código-fonte do leitor XML fornecido.</span><span class="sxs-lookup"><span data-stu-id="899c5-273">Constructs a project and evaluates the source code from the given XML reader.</span></span> <span data-ttu-id="899c5-274">O código-fonte é avaliado com as propriedades globais, as versões das ferramentas e do subconjunto de ferramentas, a coleção de projetos e as configurações de carregamento determinadas.</span><span class="sxs-lookup"><span data-stu-id="899c5-274">The source code is evaluated with the given global properties, tools and sub-toolset versions, project collection, and load settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-275">Este projeto é adicionado à coleção de projetos indicada quando este projeto ou a raiz do projeto informada recebem o caminho completo para o arquivo do projeto de fonte.</span><span class="sxs-lookup"><span data-stu-id="899c5-275">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="899c5-276">Lança InvalidProjectFileException caso a avaliação falhe.</span><span class="sxs-lookup"><span data-stu-id="899c5-276">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="899c5-277">Lança InvalidOperationException caso já haja um projeto equivalente carregado na coleção de projetos.</span><span class="sxs-lookup"><span data-stu-id="899c5-277">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddItem">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="899c5-278">Adiciona um item.</span><span class="sxs-lookup"><span data-stu-id="899c5-278">Adds an item.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddItem">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt; AddItem (string itemType, string unevaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; AddItem(string itemType, string unevaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItem (itemType As String, unevaluatedInclude As String) As IList(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ AddItem(System::String ^ itemType, System::String ^ unevaluatedInclude);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="unevaluatedInclude" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="899c5-279">O tipo de item do item adicionado.</span><span class="sxs-lookup"><span data-stu-id="899c5-279">The item type of the added item.</span></span></param>
        <param name="unevaluatedInclude"><span data-ttu-id="899c5-280">Inclua o atributo do item a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="899c5-280">Include attribute of the item to be added.</span></span></param>
        <summary><span data-ttu-id="899c5-281">Adiciona um item sem metadados ao projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-281">Adds an item with no metadata to the project.</span></span></summary>
        <returns><span data-ttu-id="899c5-282">Retorna o item adicionado.</span><span class="sxs-lookup"><span data-stu-id="899c5-282">Returns the added item.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-283">Todos os metadados podem ser adicionados posteriormente.</span><span class="sxs-lookup"><span data-stu-id="899c5-283">Any metadata can be added later.</span></span> <span data-ttu-id="899c5-284">Não modifique a fonte de projeto, se uma expressão curinga já inclui o novo item.</span><span class="sxs-lookup"><span data-stu-id="899c5-284">Does not modify the project source if a wildcard expression already includes the new item.</span></span>  
  
 <span data-ttu-id="899c5-285">Avaliação ocorre em uma base de melhor esforço.</span><span class="sxs-lookup"><span data-stu-id="899c5-285">Evaluation takes place on a best-effort basis.</span></span> <span data-ttu-id="899c5-286">Itens que são definidos na fonte de projeto, o novo item a seguir podem ser usados para avaliação.</span><span class="sxs-lookup"><span data-stu-id="899c5-286">Items that are defined in the project source following the new item may be used for evaluation.</span></span> <span data-ttu-id="899c5-287">Somente este item é avaliado.</span><span class="sxs-lookup"><span data-stu-id="899c5-287">Only this item is evaluated.</span></span> <span data-ttu-id="899c5-288">Outros itens que podem depender não são afetados.</span><span class="sxs-lookup"><span data-stu-id="899c5-288">Other items that might depend on it are not affected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddItem">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt; AddItem (string itemType, string unevaluatedInclude, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; AddItem(string itemType, string unevaluatedInclude, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt; metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItem (itemType As String, unevaluatedInclude As String, metadata As IEnumerable(Of KeyValuePair(Of String, String))) As IList(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ AddItem(System::String ^ itemType, System::String ^ unevaluatedInclude, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::String ^&gt;&gt; ^ metadata);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="unevaluatedInclude" Type="System.String" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="899c5-289">O tipo de item do item adicionado.</span><span class="sxs-lookup"><span data-stu-id="899c5-289">The item type of the added item.</span></span></param>
        <param name="unevaluatedInclude"><span data-ttu-id="899c5-290">Inclua o atributo do item a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="899c5-290">Include attribute of the item to be added.</span></span></param>
        <param name="metadata"><span data-ttu-id="899c5-291">Os metadados do item adicionado.</span><span class="sxs-lookup"><span data-stu-id="899c5-291">The metadata of the added item.</span></span></param>
        <summary><span data-ttu-id="899c5-292">Adiciona um item com os metadados determinados ao projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-292">Adds an item with the given metadata to the project.</span></span></summary>
        <returns><span data-ttu-id="899c5-293">Retorna o item adicionado.</span><span class="sxs-lookup"><span data-stu-id="899c5-293">Returns the added item.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-294">Os metadados podem ser nulo, que não indica que nenhum metadado.</span><span class="sxs-lookup"><span data-stu-id="899c5-294">The metadata may be null, which indicates no metadata.</span></span>  
  
 <span data-ttu-id="899c5-295">Avaliação ocorre em uma base de melhor esforço.</span><span class="sxs-lookup"><span data-stu-id="899c5-295">Evaluation takes place on a best-effort basis.</span></span> <span data-ttu-id="899c5-296">Itens que são definidos na fonte de projeto, o novo item a seguir podem ser usados para avaliação.</span><span class="sxs-lookup"><span data-stu-id="899c5-296">Items that are defined in the project source following the new item may be used for evaluation.</span></span> <span data-ttu-id="899c5-297">Somente este item é avaliado.</span><span class="sxs-lookup"><span data-stu-id="899c5-297">Only this item is evaluated.</span></span> <span data-ttu-id="899c5-298">Outros itens que podem depender não são afetados.</span><span class="sxs-lookup"><span data-stu-id="899c5-298">Other items that might depend on it are not affected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddItemFast">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="899c5-299">Adiciona um item sem metadados ao projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-299">Adds an item with no metadata to the project.</span></span>  <span data-ttu-id="899c5-300">Não faz nenhum esforço para ver se uma curinga existente já corresponderia ao novo item, a menos que seja o primeiro item em um grupo de itens.</span><span class="sxs-lookup"><span data-stu-id="899c5-300">Makes no effort to see if an existing wildcard would already match the new item, unless it is the first item in an item group.</span></span>  <span data-ttu-id="899c5-301">Não faz nenhum esforço para localizar o novo item próximo a itens semelhantes.</span><span class="sxs-lookup"><span data-stu-id="899c5-301">Makes no effort to locate the new item near similar items.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddItemFast">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt; AddItemFast (string itemType, string unevaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; AddItemFast(string itemType, string unevaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItemFast (itemType As String, unevaluatedInclude As String) As IList(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ AddItemFast(System::String ^ itemType, System::String ^ unevaluatedInclude);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="unevaluatedInclude" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="899c5-302">O tipo de item a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="899c5-302">The item type to be added.</span></span></param>
        <param name="unevaluatedInclude"><span data-ttu-id="899c5-303">O atributo Include não avaliado a ser adicionado ao item.</span><span class="sxs-lookup"><span data-stu-id="899c5-303">The unevaluated Include attribute to be added to the item.</span></span></param>
        <summary><span data-ttu-id="899c5-304">Adiciona um item sem metadados ao projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-304">Adds an item with no metadata to the project.</span></span>  <span data-ttu-id="899c5-305">Não faz nenhum esforço para ver se uma curinga existente já corresponderia ao novo item, a menos que seja o primeiro item em um grupo de itens.</span><span class="sxs-lookup"><span data-stu-id="899c5-305">Makes no effort to see if an existing wildcard would already match the new item, unless it is the first item in an item group.</span></span>  <span data-ttu-id="899c5-306">Não faz nenhum esforço para localizar o novo item próximo a itens semelhantes.</span><span class="sxs-lookup"><span data-stu-id="899c5-306">Makes no effort to locate the new item near similar items.</span></span></summary>
        <returns><span data-ttu-id="899c5-307">Retorna uma lista de itens de projeto adicionados.</span><span class="sxs-lookup"><span data-stu-id="899c5-307">Returns a list of the project items added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-308">Anexa o item para o primeiro grupo de item que não tem uma condição and ou não tem filhos ou cujo primeiro filho é um item do mesmo tipo.</span><span class="sxs-lookup"><span data-stu-id="899c5-308">Appends the item to the first item group that does not have a condition and has either no children or whose first child is an item of the same type.</span></span>  
  
 <span data-ttu-id="899c5-309">Avalia em uma base de melhor esforço:-expande com todos os itens.</span><span class="sxs-lookup"><span data-stu-id="899c5-309">Evaluates on a best-effort basis: -expands with all items.</span></span> <span data-ttu-id="899c5-310">Itens que são definidos no XML abaixo do novo item podem ser usados, mesmo que em uma avaliação real não seriam.</span><span class="sxs-lookup"><span data-stu-id="899c5-310">Items that are defined in the XML below the new item may be used, even though in a real evaluation they would not be.</span></span>  
  
 <span data-ttu-id="899c5-311">Somente este item é avaliado.</span><span class="sxs-lookup"><span data-stu-id="899c5-311">Only this item is evaluated.</span></span> <span data-ttu-id="899c5-312">Outros itens que podem depender não são afetados.</span><span class="sxs-lookup"><span data-stu-id="899c5-312">Other items that might depend on it are not affected.</span></span>  
  
 <span data-ttu-id="899c5-313">Isso é uma conveniência que é entendida não necessariamente deixe o projeto em um estado consistente perfeitamente self até reavaliação.</span><span class="sxs-lookup"><span data-stu-id="899c5-313">This is a convenience that it is understood does not necessarily leave the project in a perfectly self consistent state until reevaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddItemFast">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt; AddItemFast (string itemType, string unevaluatedInclude, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; AddItemFast(string itemType, string unevaluatedInclude, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt; metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItemFast (itemType As String, unevaluatedInclude As String, metadata As IEnumerable(Of KeyValuePair(Of String, String))) As IList(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ AddItemFast(System::String ^ itemType, System::String ^ unevaluatedInclude, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::String ^&gt;&gt; ^ metadata);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="unevaluatedInclude" Type="System.String" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="899c5-314">O tipo de item a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="899c5-314">The item type to be added.</span></span></param>
        <param name="unevaluatedInclude"><span data-ttu-id="899c5-315">O atributo Include não avaliado a ser adicionado ao item.</span><span class="sxs-lookup"><span data-stu-id="899c5-315">The unevaluated Include attribute to be added to the item.</span></span></param>
        <param name="metadata"><span data-ttu-id="899c5-316">Os metadados a serem adicionados.</span><span class="sxs-lookup"><span data-stu-id="899c5-316">The metadata to be added.</span></span></param>
        <summary><span data-ttu-id="899c5-317">Adiciona um item com metadados ao projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-317">Adds an item with metadata to the project.</span></span> <span data-ttu-id="899c5-318">Os metadados podem ser nulos, indicando ausência de metadados.</span><span class="sxs-lookup"><span data-stu-id="899c5-318">Metadata may be null, indicating no metadata.</span></span> <span data-ttu-id="899c5-319">Não faz nenhum esforço para ver se uma curinga existente já corresponderia ao novo item, a menos que seja o primeiro item em um grupo de itens.</span><span class="sxs-lookup"><span data-stu-id="899c5-319">Makes no effort to see if an existing wildcard would already match the new item, unless it is the first item in an item group.</span></span> <span data-ttu-id="899c5-320">Não faz nenhum esforço para localizar o novo item próximo a itens semelhantes.</span><span class="sxs-lookup"><span data-stu-id="899c5-320">Makes no effort to locate the new item near similar items.</span></span></summary>
        <returns><span data-ttu-id="899c5-321">Retorna uma lista de itens de projeto adicionados.</span><span class="sxs-lookup"><span data-stu-id="899c5-321">Returns a list of the project items added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-322">Anexa o item para o primeiro grupo de item que não tem uma condição and ou não tem filhos ou cujo primeiro filho é um item do mesmo tipo.</span><span class="sxs-lookup"><span data-stu-id="899c5-322">Appends the item to the first item group that does not have a condition and has either no children or whose first child is an item of the same type.</span></span>  
  
 <span data-ttu-id="899c5-323">Avalia em uma base de melhor esforço:-expande com todos os itens.</span><span class="sxs-lookup"><span data-stu-id="899c5-323">Evaluates on a best-effort basis: -expands with all items.</span></span> <span data-ttu-id="899c5-324">Itens que são definidos no XML abaixo do novo item podem ser usados, mesmo que em uma avaliação real não seriam.</span><span class="sxs-lookup"><span data-stu-id="899c5-324">Items that are defined in the XML below the new item may be used, even though in a real evaluation they would not be.</span></span>  
  
 <span data-ttu-id="899c5-325">Somente este item é avaliado.</span><span class="sxs-lookup"><span data-stu-id="899c5-325">Only this item is evaluated.</span></span> <span data-ttu-id="899c5-326">Outros itens que podem depender não é afetado.</span><span class="sxs-lookup"><span data-stu-id="899c5-326">Other items that might depend on it is not affected.</span></span>  
  
 <span data-ttu-id="899c5-327">Isso é uma conveniência que é entendida não necessariamente deixe o projeto em um estado consistente perfeitamente self até reavaliação.</span><span class="sxs-lookup"><span data-stu-id="899c5-327">This is a convenience that it is understood does not necessarily leave the project in a perfectly self consistent state until reevaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllEvaluatedItemDefinitionMetadata">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt; AllEvaluatedItemDefinitionMetadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectMetadata&gt; AllEvaluatedItemDefinitionMetadata" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.AllEvaluatedItemDefinitionMetadata" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllEvaluatedItemDefinitionMetadata As ICollection(Of ProjectMetadata)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt; ^ AllEvaluatedItemDefinitionMetadata { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="899c5-328">Obtém todos os metadados de definição de item encontrados durante a avaliação.</span><span class="sxs-lookup"><span data-stu-id="899c5-328">Gets all item definition metadata encountered during evaluation.</span></span></summary>
        <value><span data-ttu-id="899c5-329">Retorna todos os metadados da definição do item encontrado durante a avaliação.</span><span class="sxs-lookup"><span data-stu-id="899c5-329">Returns all item definition metadata encountered during evaluation.</span></span> <span data-ttu-id="899c5-330">Isso não inclui todos os elementos cujas condições não foram avaliada como true, nem quaisquer metadados de definição de item adicionado desde a última avaliação.</span><span class="sxs-lookup"><span data-stu-id="899c5-330">This does not include any elements whose conditions did not evaluate to true, nor any item definition metadata added since the last evaluation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-331">Metadados de item é lido durante a segunda fase de avaliação.</span><span class="sxs-lookup"><span data-stu-id="899c5-331">Item metadata is read during the second evaluation pass.</span></span> <span data-ttu-id="899c5-332">Diferentemente de metadados retornados pela propriedade ItemDefinitions, esses metadados são ordenados e incluem metadados subsequentemente substituído com o mesmo nome e tipo de item.</span><span class="sxs-lookup"><span data-stu-id="899c5-332">Unlike metadata returned by the ItemDefinitions property, this metadata is ordered, and includes any metadata subsequently overridden with the same name and item type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllEvaluatedItems">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; AllEvaluatedItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; AllEvaluatedItems" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.AllEvaluatedItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllEvaluatedItems As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ AllEvaluatedItems { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="899c5-333">Obtém um enumerador sobre todos os itens encontrados durante a avaliação.</span><span class="sxs-lookup"><span data-stu-id="899c5-333">Gets an enumerator over all items encountered during evaluation.</span></span> <span data-ttu-id="899c5-334">Estes são lidos durante a terceira passagem da avaliação.</span><span class="sxs-lookup"><span data-stu-id="899c5-334">These are read during the third evaluation pass.</span></span></summary>
        <value><span data-ttu-id="899c5-335">Retorna um enumerador sobre todos os itens encontrados durante a avaliação.</span><span class="sxs-lookup"><span data-stu-id="899c5-335">Returns an enumerator over all items encountered during evaluation.</span></span> <span data-ttu-id="899c5-336">Estes são lidos durante a terceira passagem da avaliação.</span><span class="sxs-lookup"><span data-stu-id="899c5-336">These are read during the third evaluation pass.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-337">Ao contrário os itens retornados pela propriedade Items, esses são ordenados em relação a todos os outros itens encontrados durante a avaliação, não apenas ordenada em relação a itens do mesmo tipo de item.</span><span class="sxs-lookup"><span data-stu-id="899c5-337">Unlike those items returned by the Items property, these are ordered with respect to all other items encountered during evaluation, not just ordered with respect to items of the same item type.</span></span>  
  
 <span data-ttu-id="899c5-338">Em alguns aplicativos, esta mútua completa ordem é significativa e esses hosts podem usar essa propriedade.</span><span class="sxs-lookup"><span data-stu-id="899c5-338">In some applications, this complete mutual ordering is significant, and such hosts can use this property.</span></span>  
  
 <span data-ttu-id="899c5-339">A enumeração não inclui todos os elementos cujas condições não foram avaliada como true, nem inclui quaisquer itens adicionados desde a última avaliação.</span><span class="sxs-lookup"><span data-stu-id="899c5-339">The enumeration does not include any elements whose conditions did not evaluate to true, nor does it include any items added since the last evaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllEvaluatedProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt; AllEvaluatedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectProperty&gt; AllEvaluatedProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.AllEvaluatedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllEvaluatedProperties As ICollection(Of ProjectProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectProperty ^&gt; ^ AllEvaluatedProperties { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectProperty ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="899c5-340">Obtém todas as propriedades encontradas durante a avaliação.</span><span class="sxs-lookup"><span data-stu-id="899c5-340">Gets all properties encountered during evaluation.</span></span></summary>
        <value><span data-ttu-id="899c5-341">Retorna todas as propriedades encontradas durante a avaliação.</span><span class="sxs-lookup"><span data-stu-id="899c5-341">Returns all properties encountered during evaluation.</span></span> <span data-ttu-id="899c5-342">Isso não inclui quaisquer propriedades cujas condições não foram avaliada como true, nem todas as propriedades adicionadas desde a última avaliação.</span><span class="sxs-lookup"><span data-stu-id="899c5-342">This does not include any properties whose conditions did not evaluate to true, nor any properties added since the last evaluation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-343">Essas propriedades são lidas durante a primeira fase de avaliação.</span><span class="sxs-lookup"><span data-stu-id="899c5-343">These properties are read during the first evaluation pass.</span></span> <span data-ttu-id="899c5-344">Ao contrário de propriedades retornadas pela propriedade propriedades, estes são ordenados e inclui todas as propriedades substituídas posteriormente com o mesmo nome.</span><span class="sxs-lookup"><span data-stu-id="899c5-344">Unlike properties returned by the Properties property, these are ordered, and includes any properties subsequently overridden with the same name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Build">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="899c5-345">Compila o projeto, usando os destinos padrão.</span><span class="sxs-lookup"><span data-stu-id="899c5-345">Builds this project, using the default targets.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build" />
      <MemberSignature Language="VB.NET" Value="Public Function Build () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="899c5-346">Compila o projeto, usando os destinos padrão.</span><span class="sxs-lookup"><span data-stu-id="899c5-346">Builds this project, using the default targets.</span></span></summary>
        <returns><span data-ttu-id="899c5-347">Retorna verdadeiro em caso de êxito; do contrário, falso.</span><span class="sxs-lookup"><span data-stu-id="899c5-347">Returns true on success; false otherwise.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-348">Para definir ou obter itens virtuais para fins de compilação, clonar uma instância do projeto explicitamente e compilá-la.</span><span class="sxs-lookup"><span data-stu-id="899c5-348">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="899c5-349">Este método não modifica o objeto do projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-349">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (Microsoft.Build.Framework.ILogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class Microsoft.Build.Framework.ILogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(Microsoft.Build.Framework.ILogger)" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (logger As ILogger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(Microsoft::Build::Framework::ILogger ^ logger);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Build.Framework.ILogger" />
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="899c5-350">O agente a ser usado durante o build.</span><span class="sxs-lookup"><span data-stu-id="899c5-350">The logger to be used during the build.</span></span></param>
        <summary><span data-ttu-id="899c5-351">Compila este projeto, usando os destinos padrão e o agente especificado.</span><span class="sxs-lookup"><span data-stu-id="899c5-351">Builds this project, using the default targets and the given logger.</span></span></summary>
        <returns><span data-ttu-id="899c5-352">Retorna verdadeiro em caso de êxito; do contrário, falso.</span><span class="sxs-lookup"><span data-stu-id="899c5-352">Returns true on success; false otherwise.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-353">Para definir ou obter itens virtuais para fins de compilação, clonar uma instância do projeto explicitamente e compilá-la.</span><span class="sxs-lookup"><span data-stu-id="899c5-353">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="899c5-354">Este método não modifica o objeto do projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-354">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="loggers"><span data-ttu-id="899c5-355">Um enumerador sobre todos os agentes, a ser usado durante o build.</span><span class="sxs-lookup"><span data-stu-id="899c5-355">An enumerator over all loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="899c5-356">Compila este projeto, usando os destinos padrão e os agentes especificados.</span><span class="sxs-lookup"><span data-stu-id="899c5-356">Builds this project, using the default targets and the given loggers.</span></span></summary>
        <returns><span data-ttu-id="899c5-357">Retorna verdadeiro em caso de êxito; do contrário, falso.</span><span class="sxs-lookup"><span data-stu-id="899c5-357">Returns true on success; false otherwise.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-358">Para definir ou obter itens virtuais para fins de compilação, clonar uma instância do projeto explicitamente e compilá-la.</span><span class="sxs-lookup"><span data-stu-id="899c5-358">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="899c5-359">Este método não modifica o objeto do projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-359">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="899c5-360">O destino a ser criado.</span><span class="sxs-lookup"><span data-stu-id="899c5-360">The target to be built.</span></span></param>
        <summary><span data-ttu-id="899c5-361">Compila este projeto, criando o destino especificado.</span><span class="sxs-lookup"><span data-stu-id="899c5-361">Builds this project, building the given target.</span></span></summary>
        <returns><span data-ttu-id="899c5-362">Retorna verdadeiro em caso de êxito; do contrário, falso.</span><span class="sxs-lookup"><span data-stu-id="899c5-362">Returns true on success; false otherwise.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-363">Para definir ou obter itens virtuais para fins de compilação, clonar uma instância do projeto explicitamente e compilá-la.</span><span class="sxs-lookup"><span data-stu-id="899c5-363">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="899c5-364">Este método não modifica o objeto do projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-364">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="899c5-365">Uma matriz de destinos a ser criada.</span><span class="sxs-lookup"><span data-stu-id="899c5-365">An array of targets to be built.</span></span></param>
        <summary><span data-ttu-id="899c5-366">Cria este projeto, criando os destinos fornecidos.</span><span class="sxs-lookup"><span data-stu-id="899c5-366">Builds this project, building the given targets.</span></span></summary>
        <returns><span data-ttu-id="899c5-367">Retorna verdadeiro em caso de êxito; do contrário, falso.</span><span class="sxs-lookup"><span data-stu-id="899c5-367">Returns true on success; false otherwise.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-368">Para definir ou obter itens virtuais para fins de compilação, clonar uma instância do projeto explicitamente e compilá-la.</span><span class="sxs-lookup"><span data-stu-id="899c5-368">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="899c5-369">Este método não modifica o objeto do projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-369">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="loggers"><span data-ttu-id="899c5-370">Os agentes a serem usados durante a compilação.</span><span class="sxs-lookup"><span data-stu-id="899c5-370">The loggers to be used during the build.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="899c5-371">Os agentes remotos a serem usados durante o build.</span><span class="sxs-lookup"><span data-stu-id="899c5-371">The remote loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="899c5-372">Compila este projeto, usando os destinos padrão e os agentes e agentes remotos especificados.</span><span class="sxs-lookup"><span data-stu-id="899c5-372">Builds this project, using the default targets and the given loggers and remote loggers.</span></span></summary>
        <returns><span data-ttu-id="899c5-373">Retorna verdadeiro em caso de êxito; do contrário, falso.</span><span class="sxs-lookup"><span data-stu-id="899c5-373">Returns true on success; false otherwise.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-374">Para definir ou obter itens virtuais para fins de compilação, clonar uma instância do projeto explicitamente e compilá-la.</span><span class="sxs-lookup"><span data-stu-id="899c5-374">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="899c5-375">Este método não modifica o objeto do projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-375">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String, loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="899c5-376">O destino a ser criado.</span><span class="sxs-lookup"><span data-stu-id="899c5-376">The target to be built.</span></span></param>
        <param name="loggers"><span data-ttu-id="899c5-377">Os agentes a serem usados durante a compilação.</span><span class="sxs-lookup"><span data-stu-id="899c5-377">The loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="899c5-378">Compila este projeto, criando o destino especificado e usando os agentes determinados.</span><span class="sxs-lookup"><span data-stu-id="899c5-378">Builds this project, building the given target and using the given loggers.</span></span></summary>
        <returns><span data-ttu-id="899c5-379">Retorna verdadeiro em caso de êxito; do contrário, falso.</span><span class="sxs-lookup"><span data-stu-id="899c5-379">Returns true on success; false otherwise.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-380">Para definir ou obter itens virtuais para fins de compilação, clonar uma instância do projeto explicitamente e compilá-la.</span><span class="sxs-lookup"><span data-stu-id="899c5-380">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="899c5-381">Este método não modifica o objeto do projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-381">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="899c5-382">Os destinos a serem compilados.</span><span class="sxs-lookup"><span data-stu-id="899c5-382">The targets to be built.</span></span></param>
        <param name="loggers"><span data-ttu-id="899c5-383">Os agentes a serem usados durante a compilação.</span><span class="sxs-lookup"><span data-stu-id="899c5-383">The loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="899c5-384">Compila este projeto, criando os destinos especificados e usando os agentes determinados.</span><span class="sxs-lookup"><span data-stu-id="899c5-384">Builds this project, building the given targets and using the given loggers.</span></span></summary>
        <returns><span data-ttu-id="899c5-385">Retorna verdadeiro em caso de êxito; do contrário, falso.</span><span class="sxs-lookup"><span data-stu-id="899c5-385">Returns true on success; false otherwise.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-386">Para definir ou obter itens virtuais para fins de compilação, clonar uma instância do projeto explicitamente e compilá-la.</span><span class="sxs-lookup"><span data-stu-id="899c5-386">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="899c5-387">Este método não modifica o objeto do projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-387">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String, loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="899c5-388">O destino a ser criado.</span><span class="sxs-lookup"><span data-stu-id="899c5-388">The target to be built.</span></span></param>
        <param name="loggers"><span data-ttu-id="899c5-389">Os agentes a serem usados durante a compilação.</span><span class="sxs-lookup"><span data-stu-id="899c5-389">The loggers to be used during the build.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="899c5-390">Os agentes remotos a serem usados durante o build.</span><span class="sxs-lookup"><span data-stu-id="899c5-390">The remote loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="899c5-391">Compila este projeto, criando o destino especificado e usando os agentes e agentes remotos determinados.</span><span class="sxs-lookup"><span data-stu-id="899c5-391">Builds this project, building the given target and using the given loggers and remote loggers.</span></span></summary>
        <returns><span data-ttu-id="899c5-392">Retorna verdadeiro em caso de êxito; do contrário, falso.</span><span class="sxs-lookup"><span data-stu-id="899c5-392">Returns true on success; false otherwise.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-393">Para definir ou obter itens virtuais para fins de compilação, clonar uma instância do projeto explicitamente e compilá-la.</span><span class="sxs-lookup"><span data-stu-id="899c5-393">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="899c5-394">Este método não modifica o objeto do projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-394">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="899c5-395">Os destinos a serem compilados.</span><span class="sxs-lookup"><span data-stu-id="899c5-395">The targets to be built.</span></span></param>
        <param name="loggers"><span data-ttu-id="899c5-396">Os agentes a serem usados durante a compilação.</span><span class="sxs-lookup"><span data-stu-id="899c5-396">The loggers to be used during the build.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="899c5-397">Os agentes remotos a serem usados durante o build.</span><span class="sxs-lookup"><span data-stu-id="899c5-397">The remote loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="899c5-398">Compila este projeto, criando os destinos especificados e usando os agentes e agentes remotos determinados.</span><span class="sxs-lookup"><span data-stu-id="899c5-398">Builds this project, building the given targets and using the given loggers and remote loggers.</span></span></summary>
        <returns><span data-ttu-id="899c5-399">Retorna verdadeiro em caso de êxito; do contrário, falso.</span><span class="sxs-lookup"><span data-stu-id="899c5-399">Returns true on success; false otherwise.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-400">Para definir ou obter itens virtuais para fins de compilação, clonar uma instância do projeto explicitamente e compilá-la.</span><span class="sxs-lookup"><span data-stu-id="899c5-400">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="899c5-401">Este método não modifica o objeto do projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-401">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionedProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; ConditionedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; ConditionedProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ConditionedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConditionedProperties As IDictionary(Of String, List(Of String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::Collections::Generic::List&lt;System::String ^&gt; ^&gt; ^ ConditionedProperties { System::Collections::Generic::IDictionary&lt;System::String ^, System::Collections::Generic::List&lt;System::String ^&gt; ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="899c5-402">Obtém uma coleção de valores de propriedade possíveis para as propriedades usadas para avaliar as condições encontradas nas propriedades, nos grupos de propriedades, nas importações e whens.</span><span class="sxs-lookup"><span data-stu-id="899c5-402">Gets a collection of possible property values for properties used to evaluate conditions found on properties, property groups, imports, and whens.</span></span></summary>
        <value><span data-ttu-id="899c5-403">Retorna uma coleção de valores de propriedade possíveis para as propriedades usadas para avaliar a condição encontrada nas propriedades de grupos de propriedades, importações e quando do.</span><span class="sxs-lookup"><span data-stu-id="899c5-403">Returns a collection of possible property values for properties used to evaluate conditions found on properties, property groups, imports, and whens.</span></span> <span data-ttu-id="899c5-404">A coleção está em formato canônico.</span><span class="sxs-lookup"><span data-stu-id="899c5-404">The collection is in canonical form.</span></span> <span data-ttu-id="899c5-405">O nome da entrada é o nome da propriedade a ser avaliada, e o valor é uma lista de valores de propriedade possíveis.</span><span class="sxs-lookup"><span data-stu-id="899c5-405">The name of the entry is the name of the property to be evaluated, and the value is a list of possible property values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-406">Por exemplo, se as condições a seguir existiam nas propriedades em um projeto: condition&#124;$(plataforma)' = = ' Debug&#124;x 86' "Condition ' = = 'Versão'" tabela seria preenchida com {"Configuração", {" Depurar","Versão"}} {"plataforma", {"x86"}} Essa coleção é usada pelo Visual Studio para determinar as configurações definidas no projeto</span><span class="sxs-lookup"><span data-stu-id="899c5-406">For example, if the following conditions existed on properties in a project: Condition="'$(Configuration)&#124;$(Platform)' == 'Debug&#124;x86'" Condition="'$(Configuration)' == 'Release'" the table would be populated with { "Configuration", { "Debug", "Release" }} { "Platform", { "x86" }} This collection is used by Visual Studio to determine the configurations defined in the project</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateProjectInstance">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="899c5-407">Cria uma instância de projeto com base neste projeto, mas completamente desconectada dele.</span><span class="sxs-lookup"><span data-stu-id="899c5-407">Creates a project instance based on this project, but completely disconnected from it.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-408">Pode ser usado em compilação independente.</span><span class="sxs-lookup"><span data-stu-id="899c5-408">Can be used to build independently.</span></span> <span data-ttu-id="899c5-409">O projeto original é avaliado antes de criar a instância, se necessário, para que o projeto original seja marcado como não modificado.</span><span class="sxs-lookup"><span data-stu-id="899c5-409">The original project is evaluated before creating the instance, if necessary, so that the original project is marked as unmodified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateProjectInstance">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectInstance CreateProjectInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectInstance CreateProjectInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.CreateProjectInstance" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateProjectInstance () As ProjectInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectInstance ^ CreateProjectInstance();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectInstance</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="899c5-410">Cria uma instância de projeto com base neste projeto, mas completamente desconectada dele.</span><span class="sxs-lookup"><span data-stu-id="899c5-410">Creates a project instance based on this project, but completely disconnected from it.</span></span></summary>
        <returns><span data-ttu-id="899c5-411">Retorna a instância do projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-411">Returns the project instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-412">Pode ser usado em compilação independente.</span><span class="sxs-lookup"><span data-stu-id="899c5-412">Can be used to build independently.</span></span> <span data-ttu-id="899c5-413">O projeto original é avaliado antes de criar a instância, se necessário, para que o projeto original seja marcado como não modificado.</span><span class="sxs-lookup"><span data-stu-id="899c5-413">The original project is evaluated before creating the instance, if necessary, so that the original project is marked as unmodified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateProjectInstance">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectInstance CreateProjectInstance (Microsoft.Build.Execution.ProjectInstanceSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectInstance CreateProjectInstance(valuetype Microsoft.Build.Execution.ProjectInstanceSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.CreateProjectInstance(Microsoft.Build.Execution.ProjectInstanceSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateProjectInstance (settings As ProjectInstanceSettings) As ProjectInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectInstance ^ CreateProjectInstance(Microsoft::Build::Execution::ProjectInstanceSettings settings);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="settings" Type="Microsoft.Build.Execution.ProjectInstanceSettings" />
      </Parameters>
      <Docs>
        <param name="settings"><span data-ttu-id="899c5-414">Determina se a instância de projeto criada é imutável e se ela contém uma tabela de pesquisa para melhorar o desempenho.</span><span class="sxs-lookup"><span data-stu-id="899c5-414">Determines whether created project instance is immutable and whether it contains a look up table to improve performance.</span></span></param>
        <summary><span data-ttu-id="899c5-415">Cria uma instância de projeto com base neste projeto, mas completamente desconectada dele.</span><span class="sxs-lookup"><span data-stu-id="899c5-415">Creates a project instance based on this project, but completely disconnected from it.</span></span></summary>
        <returns><span data-ttu-id="899c5-416">Retorna a instância do projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-416">Returns the project instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-417">Pode ser usado em compilação independente.</span><span class="sxs-lookup"><span data-stu-id="899c5-417">Can be used to build independently.</span></span> <span data-ttu-id="899c5-418">O projeto original é avaliado antes de criar a instância, se necessário, para que o projeto original seja marcado como não modificado.</span><span class="sxs-lookup"><span data-stu-id="899c5-418">The original project is evaluated before creating the instance, if necessary, so that the original project is marked as unmodified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectoryPath">
      <MemberSignature Language="C#" Value="public string DirectoryPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DirectoryPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.DirectoryPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectoryPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DirectoryPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="899c5-419">Obtém o diretório raiz deste projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-419">Gets the root directory for this project.</span></span></summary>
        <value><span data-ttu-id="899c5-420">Retorna o diretório raiz para este projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-420">Returns the root directory for this project.</span></span> <span data-ttu-id="899c5-421">O diretório raiz nunca é nulo. projetos na memória usam o diretório atual no momento do carregamento do projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-421">The root directory is never null; in-memory projects use the current directory at the time of project load.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableMarkDirty">
      <MemberSignature Language="C#" Value="public bool DisableMarkDirty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisableMarkDirty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.DisableMarkDirty" />
      <MemberSignature Language="VB.NET" Value="Public Property DisableMarkDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisableMarkDirty { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="899c5-422">Obtém ou define um sinalizador que determina se <see cref="M:Microsoft.Build.Evaluation.Project.MarkDirty" /> está temporariamente desabilitado.</span><span class="sxs-lookup"><span data-stu-id="899c5-422">Gets or sets a flag the determines whether <see cref="M:Microsoft.Build.Evaluation.Project.MarkDirty" /> is temporarily disabled.</span></span> <span data-ttu-id="899c5-423">Isso permite, por exemplo, que uma propriedade global seja definida sem que o projeto seja marcado como sujo para reavaliação como consequência.</span><span class="sxs-lookup"><span data-stu-id="899c5-423">This allows, for example, a global property to be set without the project getting marked dirty for reevaluation as a consequence.</span></span></summary>
        <value><span data-ttu-id="899c5-424">Retorna um sinalizador de determina se <see langword="MarkDirty" /> está temporariamente desabilitada.</span><span class="sxs-lookup"><span data-stu-id="899c5-424">Returns a flag the determines whether <see langword="MarkDirty" /> is temporarily disabled.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluationCounter">
      <MemberSignature Language="C#" Value="public int EvaluationCounter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EvaluationCounter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.EvaluationCounter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EvaluationCounter As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int EvaluationCounter { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="899c5-425">Obtém um número que é incrementado sempre que o projeto é reavaliado.</span><span class="sxs-lookup"><span data-stu-id="899c5-425">Gets a number that is incremented every time that project is re-evaluated.</span></span></summary>
        <value><span data-ttu-id="899c5-426">Retorna o valor incrementado.</span><span class="sxs-lookup"><span data-stu-id="899c5-426">Returns the incremented value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-427">Esse valor deve ser comparado com os valores anteriores para ver se o projeto tiver sido avaliado novamente.</span><span class="sxs-lookup"><span data-stu-id="899c5-427">This value should be compared with previous values to see if the project has been re-evaluated.</span></span> <span data-ttu-id="899c5-428">Ele não deve ser usado para determinar quantas vezes o projeto tiver sido avaliado novamente, desde que ele pode ser incrementado por mais de um para uma determinado reavaliação.</span><span class="sxs-lookup"><span data-stu-id="899c5-428">It should not be used to determine how many times the project has been re-evaluated since it may be incremented by more than one for a given re-evaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandString">
      <MemberSignature Language="C#" Value="public string ExpandString (string unexpandedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ExpandString(string unexpandedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.ExpandString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExpandString (unexpandedValue As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ExpandString(System::String ^ unexpandedValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unexpandedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unexpandedValue"><span data-ttu-id="899c5-429">A cadeia de caracteres a ser avaliada.</span><span class="sxs-lookup"><span data-stu-id="899c5-429">The string to be evaluated.</span></span></param>
        <summary><span data-ttu-id="899c5-430">Avalia a cadeia de caracteres determinada, através da expansão de itens e propriedades.</span><span class="sxs-lookup"><span data-stu-id="899c5-430">Evaluates the given string by expanding items and properties.</span></span> <span data-ttu-id="899c5-431">A cadeia de caracteres é avaliada como se tivesse sido encontrada no final do arquivo de projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-431">The string is evaluated as if it were found at the very end of the project file.</span></span></summary>
        <returns><span data-ttu-id="899c5-432">Retorna a cadeia de caracteres avaliada.</span><span class="sxs-lookup"><span data-stu-id="899c5-432">Returns the evaluated string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-433">Esse método pode ser usado quando a avaliação de melhor esforço é suficiente.</span><span class="sxs-lookup"><span data-stu-id="899c5-433">This method can be used when best-effort evaluation is sufficient.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullPath">
      <MemberSignature Language="C#" Value="public string FullPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.FullPath" />
      <MemberSignature Language="VB.NET" Value="Public Property FullPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="899c5-434">Obtém ou define o caminho completo para o arquivo de origem do projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-434">Gets or sets the full path to the project source file.</span></span></summary>
        <value><span data-ttu-id="899c5-435">Retorna o caminho completo para o arquivo de origem do projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-435">Returns the full path to the project source file.</span></span> <span data-ttu-id="899c5-436">Retorna uma cadeia de caracteres vazia se o projeto não foi carregado do disco.</span><span class="sxs-lookup"><span data-stu-id="899c5-436">Returns an empty string if the project was not loaded from disk.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-437">A definição dessa propriedade em um projeto em uma coleção de projeto renomeia o projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-437">Setting this property on a project in a project collection renames the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEvaluatedItemIncludeEscaped">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="899c5-438">Obtém o valor avaliado e escapado do atributo Include dos itens fornecidos.</span><span class="sxs-lookup"><span data-stu-id="899c5-438">Gets evaluated, escaped value of the Include attribute of the provided items.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEvaluatedItemIncludeEscaped">
      <MemberSignature Language="C#" Value="public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Evaluation.ProjectItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetEvaluatedItemIncludeEscaped(class Microsoft.Build.Evaluation.ProjectItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItem)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvaluatedItemIncludeEscaped (item As ProjectItem) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEvaluatedItemIncludeEscaped(Microsoft::Build::Evaluation::ProjectItem ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItem" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="899c5-439">O item a ser avaliado e escapado.</span><span class="sxs-lookup"><span data-stu-id="899c5-439">The item to be evaluated and escaped.</span></span></param>
        <summary><span data-ttu-id="899c5-440">Obtém o valor avaliado e escapado do atributo Include dos itens fornecidos.</span><span class="sxs-lookup"><span data-stu-id="899c5-440">Gets evaluated, escaped value of the Include attribute of the provided items.</span></span></summary>
        <returns><span data-ttu-id="899c5-441">Retorna o valor avaliado e escapado do atributo Include dos itens fornecidos.</span><span class="sxs-lookup"><span data-stu-id="899c5-441">Returns the evaluated, escaped value of the Include attribute of the provided items.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvaluatedItemIncludeEscaped">
      <MemberSignature Language="C#" Value="public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Evaluation.ProjectItemDefinition item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetEvaluatedItemIncludeEscaped(class Microsoft.Build.Evaluation.ProjectItemDefinition item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvaluatedItemIncludeEscaped (item As ProjectItemDefinition) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEvaluatedItemIncludeEscaped(Microsoft::Build::Evaluation::ProjectItemDefinition ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItemDefinition" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="899c5-442">A definição de item a ser avaliada e escapada.</span><span class="sxs-lookup"><span data-stu-id="899c5-442">The item definition to be evaluated and escaped.</span></span></param>
        <summary><span data-ttu-id="899c5-443">Obtém o valor de escape avaliado de atributo Include da definição do item fornecida.</span><span class="sxs-lookup"><span data-stu-id="899c5-443">Gets the evaluated, escaped value of the Include attribute of the provided item definition.</span></span></summary>
        <returns><span data-ttu-id="899c5-444">Retorna o valor do atributo Include.</span><span class="sxs-lookup"><span data-stu-id="899c5-444">Returns the value of the Include attribute.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItems">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; GetItems (string itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; GetItems(string itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetItems(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItems (itemType As String) As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ GetItems(System::String ^ itemType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="899c5-445">O tipo de item a ser recuperado.</span><span class="sxs-lookup"><span data-stu-id="899c5-445">The item type to be retrieved.</span></span></param>
        <summary><span data-ttu-id="899c5-446">Obtém, no projeto, todos os itens do tipo de item determinado.</span><span class="sxs-lookup"><span data-stu-id="899c5-446">Gets all the items in the project of the given item type.</span></span> <span data-ttu-id="899c5-447">Se não houver nenhum, retornará uma lista vazia.</span><span class="sxs-lookup"><span data-stu-id="899c5-447">If there are none, returns an empty list.</span></span> <span data-ttu-id="899c5-448">Use AddItem ou RemoveItem para modificar itens neste projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-448">Use AddItem or RemoveItem to modify items in this project.</span></span></summary>
        <returns><span data-ttu-id="899c5-449">Retorna, no projeto, todos os itens do tipo de item determinado.</span><span class="sxs-lookup"><span data-stu-id="899c5-449">Returns all the items in the project of the given item type.</span></span> <span data-ttu-id="899c5-450">Retornará uma lista vazia se não houver nenhum item com o nome de item especificado.</span><span class="sxs-lookup"><span data-stu-id="899c5-450">Returns an empty list if there are no items with the given item name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-451">Use AddItem ou RemoveItem para modificar itens neste projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-451">Use AddItem or RemoveItem to modify items in this project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemsByEvaluatedInclude">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; GetItemsByEvaluatedInclude (string evaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; GetItemsByEvaluatedInclude(string evaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetItemsByEvaluatedInclude(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemsByEvaluatedInclude (evaluatedInclude As String) As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ GetItemsByEvaluatedInclude(System::String ^ evaluatedInclude);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evaluatedInclude" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="evaluatedInclude"><span data-ttu-id="899c5-452">O atributo Include avaliado.</span><span class="sxs-lookup"><span data-stu-id="899c5-452">The evaluated Include attribute.</span></span></param>
        <summary><span data-ttu-id="899c5-453">Obtém todos os itens que têm o atributo Include determinado avaliado.</span><span class="sxs-lookup"><span data-stu-id="899c5-453">Gets all items that have the given evaluated Include attribute.</span></span></summary>
        <returns><span data-ttu-id="899c5-454">Retorna todos os itens que têm o atributo Include determinado avaliado.</span><span class="sxs-lookup"><span data-stu-id="899c5-454">Returns all items that have the given evaluated Include attribute.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-455">Por exemplo, esse método pode retornar todos os itens que têm o atributo Include avaliado "component.cpp".</span><span class="sxs-lookup"><span data-stu-id="899c5-455">For example, this method might return all items that have the evaluated Include attribute "component.cpp".</span></span> <span data-ttu-id="899c5-456">Normalmente, itens de zero ou um são retornados.</span><span class="sxs-lookup"><span data-stu-id="899c5-456">Typically zero or one items are returned.</span></span> <span data-ttu-id="899c5-457">No entanto, pode haver vários itens com o mesmo caminho e os tipos de item diferentes, ou até mesmo com os mesmos tipos de item.</span><span class="sxs-lookup"><span data-stu-id="899c5-457">However, there may be multiple items with the same path and different item types, or even with the same item types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemsIgnoringCondition">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; GetItemsIgnoringCondition (string itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; GetItemsIgnoringCondition(string itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetItemsIgnoringCondition(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemsIgnoringCondition (itemType As String) As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ GetItemsIgnoringCondition(System::String ^ itemType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="899c5-458">O tipo de item a ser recuperado.</span><span class="sxs-lookup"><span data-stu-id="899c5-458">The item type to be retrieved.</span></span></param>
        <summary><span data-ttu-id="899c5-459">Obtém todos os itens no projeto, do tipo especificado, independentemente se o atributo Condition for ou não for avaliado como true.</span><span class="sxs-lookup"><span data-stu-id="899c5-459">Gets all the items in the project of the given type, whether or not their Condition attribute evaluates to true.</span></span> <span data-ttu-id="899c5-460">Esta é uma lista somente leitura: use AddItem ou RemoveItem para modificar itens neste projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-460">This is a read-only list: use AddItem or RemoveItem to modify items in this project.</span></span></summary>
        <returns><span data-ttu-id="899c5-461">Retorna todos os itens no projeto, do tipo especificado, independentemente se o atributo Condition for ou não for avaliado como true.</span><span class="sxs-lookup"><span data-stu-id="899c5-461">Returns all the items in the project of the given type, whether or not their Condition attribute evaluates to true.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-462">Esta é uma lista somente leitura.</span><span class="sxs-lookup"><span data-stu-id="899c5-462">This is a read-only list.</span></span> <span data-ttu-id="899c5-463">Use AddItem ou RemoveItem para modificar itens neste projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-463">Use AddItem or RemoveItem to modify items in this project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLogicalProject">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Construction.ProjectElement&gt; GetLogicalProject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Construction.ProjectElement&gt; GetLogicalProject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetLogicalProject" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLogicalProject () As IEnumerable(Of ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Construction::ProjectElement ^&gt; ^ GetLogicalProject();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Construction.ProjectElement&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="899c5-464">Obtém um enumerador sobre todos os elementos do "projeto lógico".</span><span class="sxs-lookup"><span data-stu-id="899c5-464">Gets an enumerator over all the elements in the "logical project".</span></span> <span data-ttu-id="899c5-465">O projeto lógico é definido como o projeto não avaliado obtido do único arquivo de MSBuild que é o resultado do inlining do texto de todas as importações do arquivo de manifesto original do projeto do MSBuild.</span><span class="sxs-lookup"><span data-stu-id="899c5-465">The logical project is defined as the unevaluated project obtained from the single MSBuild file that is the result of inlining the text of all imports of the original MSBuild project manifest file.</span></span></summary>
        <returns><span data-ttu-id="899c5-466">Retorna um enumerador sobre todos os elementos do "projeto lógico".</span><span class="sxs-lookup"><span data-stu-id="899c5-466">Returns an enumerator over all the elements in the "logical project".</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-467">O projeto lógico é definido como o projeto não avaliado obtido do arquivo de MSBuild único que é o resultado de embutido, incluindo o texto de todas as importações do arquivo de manifesto do projeto MSBuild original.</span><span class="sxs-lookup"><span data-stu-id="899c5-467">The logical project is defined as the unevaluated project obtained from the single MSBuild file that is the result of including inline the text of all imports of the original MSBuild project manifest file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMetadataValueEscaped">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="899c5-468">Obtém o valor de escape do metadado com o nome fornecido no item fornecido.</span><span class="sxs-lookup"><span data-stu-id="899c5-468">Gets the escaped value of the metadatum with the provided name on the provided item.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Evaluation.ProjectMetadata metadatum);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Evaluation.ProjectMetadata metadatum) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectMetadata)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (metadatum As ProjectMetadata) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Evaluation::ProjectMetadata ^ metadatum);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadatum" Type="Microsoft.Build.Evaluation.ProjectMetadata" />
      </Parameters>
      <Docs>
        <param name="metadatum"><span data-ttu-id="899c5-469">O metadado a ser escapado.</span><span class="sxs-lookup"><span data-stu-id="899c5-469">The metadatum to be escaped.</span></span></param>
        <summary><span data-ttu-id="899c5-470">Obtém o valor de escape do metadado fornecido.</span><span class="sxs-lookup"><span data-stu-id="899c5-470">Gets the escaped value of the provided metadatum.</span></span></summary>
        <returns><span data-ttu-id="899c5-471">Obtém o valor de escape do metadado fornecido.</span><span class="sxs-lookup"><span data-stu-id="899c5-471">Gets the escaped value of the provided metadatum.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Evaluation.ProjectItem item, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Evaluation.ProjectItem item, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItem,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (item As ProjectItem, name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Evaluation::ProjectItem ^ item, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItem" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="899c5-472">O item cujos metadados devem ser escapados.</span><span class="sxs-lookup"><span data-stu-id="899c5-472">The item whose metadata is to be escaped.</span></span></param>
        <param name="name"><span data-ttu-id="899c5-473">O nome dos metadados a serem escapados.</span><span class="sxs-lookup"><span data-stu-id="899c5-473">The name of the metadata to be escaped.</span></span></param>
        <summary><span data-ttu-id="899c5-474">Obtém o valor de escape do metadado com o nome fornecido no item fornecido.</span><span class="sxs-lookup"><span data-stu-id="899c5-474">Gets the escaped value of the metadatum with the provided name on the provided item.</span></span></summary>
        <returns><span data-ttu-id="899c5-475">Obtém o valor de escape do metadado com o nome fornecido no item fornecido.</span><span class="sxs-lookup"><span data-stu-id="899c5-475">Gets the escaped value of the metadatum with the provided name on the provided item.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Evaluation.ProjectItemDefinition item, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Evaluation.ProjectItemDefinition item, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (item As ProjectItemDefinition, name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Evaluation::ProjectItemDefinition ^ item, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItemDefinition" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="899c5-476">A definição de item cujos metadados devem ser escapados.</span><span class="sxs-lookup"><span data-stu-id="899c5-476">The item definition whose metadata is to be escaped.</span></span></param>
        <param name="name"><span data-ttu-id="899c5-477">O nome dos metadados a serem escapados.</span><span class="sxs-lookup"><span data-stu-id="899c5-477">The name of the metadata to be escaped.</span></span></param>
        <summary><span data-ttu-id="899c5-478">Obtém o valor de escape do metadado com o nome fornecido na definição do item fornecida.</span><span class="sxs-lookup"><span data-stu-id="899c5-478">Gets the escaped value of the metadatum with the provided name on the provided item definition.</span></span></summary>
        <returns><span data-ttu-id="899c5-479">Retorna o valor de escape do metadado com o nome fornecido na definição do item fornecida.</span><span class="sxs-lookup"><span data-stu-id="899c5-479">Returns the escaped value of the metadatum with the provided name on the provided item definition.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ProjectProperty GetProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Evaluation.ProjectProperty GetProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String) As ProjectProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Evaluation::ProjectProperty ^ GetProperty(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="899c5-480">O nome da propriedade a ser recuperada.</span><span class="sxs-lookup"><span data-stu-id="899c5-480">The name of the property to retrieve.</span></span></param>
        <summary><span data-ttu-id="899c5-481">Obtém qualquer propriedade do projeto que tenha o nome especificado.</span><span class="sxs-lookup"><span data-stu-id="899c5-481">Gets any property in the project that has the specified name.</span></span></summary>
        <returns><span data-ttu-id="899c5-482">Retorna qualquer propriedade do projeto que tenha o nome especificado.</span><span class="sxs-lookup"><span data-stu-id="899c5-482">Returns any property in the project that has the specified name.</span></span> <span data-ttu-id="899c5-483">Retorna nulo se não existe nenhuma propriedade com esse nome.</span><span class="sxs-lookup"><span data-stu-id="899c5-483">Returns null if no property of that name exists.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public string GetPropertyValue (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPropertyValue(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetPropertyValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyValue (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPropertyValue(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="899c5-484">O nome da propriedade cujo valor é recuperado.</span><span class="sxs-lookup"><span data-stu-id="899c5-484">The name of the property whose value is retrieved.</span></span></param>
        <summary><span data-ttu-id="899c5-485">Obtém o valor da propriedade determinada neste projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-485">Gets the value of the given property in this project.</span></span></summary>
        <returns><span data-ttu-id="899c5-486">Retorna o valor da propriedade determinada neste projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-486">Returns the value of the given property in this project.</span></span> <span data-ttu-id="899c5-487">Retorna uma cadeia de caracteres vazia se não existe nenhuma propriedade com esse nome.</span><span class="sxs-lookup"><span data-stu-id="899c5-487">Return an empty string if no property of that name exists.</span></span> <span data-ttu-id="899c5-488">As sequências de escape são convertidas antes de retornar a cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="899c5-488">Escape sequences are converted before returning the string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-489">Uma propriedade com um valor de cadeia de caracteres vazia e nenhuma propriedade em todos os não são diferenciadas entre por este método.</span><span class="sxs-lookup"><span data-stu-id="899c5-489">A property with a value of empty string and no property at all are not distinguished between by this method.</span></span> <span data-ttu-id="899c5-490">Para determinar se uma propriedade é definida em todos os no projeto, use GetProperty (Name).</span><span class="sxs-lookup"><span data-stu-id="899c5-490">To determine if a property is set at all in the project, use GetProperty(name).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetPropertyValueEscaped (Microsoft.Build.Evaluation.ProjectProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetPropertyValueEscaped(class Microsoft.Build.Evaluation.ProjectProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetPropertyValueEscaped(Microsoft.Build.Evaluation.ProjectProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPropertyValueEscaped (property As ProjectProperty) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetPropertyValueEscaped(Microsoft::Build::Evaluation::ProjectProperty ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.Build.Evaluation.ProjectProperty" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="899c5-491">A propriedade a ser escapada.</span><span class="sxs-lookup"><span data-stu-id="899c5-491">The property to be escaped.</span></span></param>
        <summary><span data-ttu-id="899c5-492">Obtém o valor de escape da propriedade fornecida.</span><span class="sxs-lookup"><span data-stu-id="899c5-492">Get the escaped value of the provided property.</span></span></summary>
        <returns><span data-ttu-id="899c5-493">Retorna o valor de escape da propriedade fornecida.</span><span class="sxs-lookup"><span data-stu-id="899c5-493">Returns the escaped value of the provided property.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; GlobalProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GlobalProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.GlobalProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GlobalProperties As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GlobalProperties { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="899c5-494">Obtém um dicionário das propriedades globais usadas para a avaliação deste projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-494">Gets a dictionary of the global properties used for the evaluation of this project.</span></span></summary>
        <value><span data-ttu-id="899c5-495">Retorna um dicionário de propriedades globais usado para a avaliação deste projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-495">Returns a dictionary of the global properties used for the evaluation of this project.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-496">Este é o getter exposto publicamente, que converte em um IDictionary inativo somente leitura\<cadeia de caracteres, cadeia de caracteres >.</span><span class="sxs-lookup"><span data-stu-id="899c5-496">This is the publicly exposed getter, that translates into a read-only dead IDictionary\<string, string>.</span></span>  
  
 <span data-ttu-id="899c5-497">Para ver facilmente quando podemos estiver sujas, configuração e remover as propriedades globais é feito com <xref:Microsoft.Build.Evaluation.Project.SetGlobalProperty%2A> e <xref:Microsoft.Build.Evaluation.Project.RemoveGlobalProperty%2A>.</span><span class="sxs-lookup"><span data-stu-id="899c5-497">In order to easily tell when we're dirtied, setting and removing global properties is done with <xref:Microsoft.Build.Evaluation.Project.SetGlobalProperty%2A> and <xref:Microsoft.Build.Evaluation.Project.RemoveGlobalProperty%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Imports">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt; Imports { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype Microsoft.Build.Evaluation.ResolvedImport&gt; Imports" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.Imports" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Imports As IList(Of ResolvedImport)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ResolvedImport&gt; ^ Imports { System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ResolvedImport&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="899c5-498">Obtém uma lista de todos os arquivos que contribuíram para a avaliação deste projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-498">Gets a list of all the files that contributed to the evaluation of this project.</span></span></summary>
        <value><span data-ttu-id="899c5-499">Retorna uma lista de todos os arquivos que contribuíram para a avaliação deste projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-499">Returns a list of all the files that contributed to the evaluation of this project.</span></span>  
  
 <span data-ttu-id="899c5-500">O nome de cada item é o elemento de importação que fez com que o arquivo a ser importado.</span><span class="sxs-lookup"><span data-stu-id="899c5-500">The name of each item is the Import element that caused the file to be imported.</span></span> <span data-ttu-id="899c5-501">O valor de cada item é a raiz do projeto do projeto importado.</span><span class="sxs-lookup"><span data-stu-id="899c5-501">The value of each item is the project root of the imported project.</span></span> <span data-ttu-id="899c5-502">Elementos Import cujo atributo de condição avaliada como falsa não são incluídos.</span><span class="sxs-lookup"><span data-stu-id="899c5-502">Import elements whose Condition attribute evaluated to false are not included.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-503">Raiz do projeto do projeto não está incluído.</span><span class="sxs-lookup"><span data-stu-id="899c5-503">The project root of this project is not included.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportsIncludingDuplicates">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt; ImportsIncludingDuplicates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype Microsoft.Build.Evaluation.ResolvedImport&gt; ImportsIncludingDuplicates" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ImportsIncludingDuplicates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ImportsIncludingDuplicates As IList(Of ResolvedImport)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ResolvedImport&gt; ^ ImportsIncludingDuplicates { System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ResolvedImport&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="899c5-504">Obtém uma lista de importações duplicadas, caso uma importação tenha sido realizada várias vezes.</span><span class="sxs-lookup"><span data-stu-id="899c5-504">Gets a list of duplicate imports if an import was imported multiple times.</span></span> <span data-ttu-id="899c5-505">No entanto, apenas a primeira importação foi usada na avaliação.</span><span class="sxs-lookup"><span data-stu-id="899c5-505">However, only the first import was used in evaluation.</span></span></summary>
        <value><span data-ttu-id="899c5-506">Retorna uma lista de importações duplicadas.</span><span class="sxs-lookup"><span data-stu-id="899c5-506">Returns a list of duplicate imports.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBuildEnabled">
      <MemberSignature Language="C#" Value="public bool IsBuildEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBuildEnabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.IsBuildEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsBuildEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBuildEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="899c5-507">Obtém ou define uma propriedade que seleciona se os destinos e as tarefas deste projeto podem ser criados.</span><span class="sxs-lookup"><span data-stu-id="899c5-507">Gets or sets a property that selects whether the targets and tasks of this project can be built.</span></span></summary>
        <value><span data-ttu-id="899c5-508">Retorna VERDADEIRO se os destinos e tarefas do projeto podem ser criadas; FALSO caso contrário.</span><span class="sxs-lookup"><span data-stu-id="899c5-508">Returns true if the targets and tasks of this project can be built; false otherwise.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-509">Pode ser usado para fins de segurança.</span><span class="sxs-lookup"><span data-stu-id="899c5-509">Can be used for security purposes.</span></span> <span data-ttu-id="899c5-510">Por padrão, um novo projeto tem a mesma configuração de IsBuildEnabled como a coleção de projetos de pai que o contém.</span><span class="sxs-lookup"><span data-stu-id="899c5-510">By default, a new project has the same IsBuildEnabled setting as the parent project collection that contains it.</span></span> <span data-ttu-id="899c5-511">Quando IsBuildEnabled for false, o método de compilação neste projeto falhará.</span><span class="sxs-lookup"><span data-stu-id="899c5-511">When IsBuildEnabled is false, the Build method on this project fails.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="899c5-512">Obtém uma propriedade que indica se este projeto foi modificado, de modo que tenha que ser reavaliado.</span><span class="sxs-lookup"><span data-stu-id="899c5-512">Gets a property that indicates whether this project has been modified so that it must be reevaluated.</span></span></summary>
        <value><span data-ttu-id="899c5-513">Retorna uma propriedade que indica se este projeto foi modificado para que ele deve ser reavaliado.</span><span class="sxs-lookup"><span data-stu-id="899c5-513">Returns a property that indicates whether this project has been modified so that it must be reevaluated.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-514">Um projeto é modificado e deve ser reavaliado quando o código-fonte projeto subjacente, incluindo alterações para importar arquivos.</span><span class="sxs-lookup"><span data-stu-id="899c5-514">A project is modified and must be reevaluated when the underlying project source code, including changes to imported files.</span></span> <span data-ttu-id="899c5-515">Um projeto é modificado também deve ser reavaliado se a ferramenta de projeto definida alterações.</span><span class="sxs-lookup"><span data-stu-id="899c5-515">A project is also modified must be reevaluated if the project tool set changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemDefinitions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Evaluation.ProjectItemDefinition&gt; ItemDefinitions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Evaluation.ProjectItemDefinition&gt; ItemDefinitions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ItemDefinitions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemDefinitions As IDictionary(Of String, ProjectItemDefinition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Evaluation::ProjectItemDefinition ^&gt; ^ ItemDefinitions { System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Evaluation::ProjectItemDefinition ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Evaluation.ProjectItemDefinition&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="899c5-516">Obtém um dicionário de definições de item neste projeto, organizado por tipo de item.</span><span class="sxs-lookup"><span data-stu-id="899c5-516">Gets a dictionary of item definitions in this project, keyed by item type.</span></span></summary>
        <value><span data-ttu-id="899c5-517">Retorna um dicionário de definições do item no projeto, chaveado segundo o tipo de item.</span><span class="sxs-lookup"><span data-stu-id="899c5-517">Returns a dictionary of item definitions in this project, keyed by item type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; Items" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ Items { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="899c5-518">Obtém um enumerador sobre todos os itens neste projeto, ordenados em grupos de tipos de item.</span><span class="sxs-lookup"><span data-stu-id="899c5-518">Gets an enumerator over all items in this project, ordered within groups of item types.</span></span></summary>
        <value><span data-ttu-id="899c5-519">Retorna um enumerador sobre todos os itens neste projeto, ordenados dentro de grupos de tipos de item.</span><span class="sxs-lookup"><span data-stu-id="899c5-519">Returns an enumerator over all items in this project, ordered within groups of item types.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemsIgnoringCondition">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; ItemsIgnoringCondition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; ItemsIgnoringCondition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ItemsIgnoringCondition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemsIgnoringCondition As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ ItemsIgnoringCondition { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="899c5-520">Obtém um enumerador sobre todos os itens neste projeto, ordenados em grupos de tipos de item.</span><span class="sxs-lookup"><span data-stu-id="899c5-520">Gets an enumerator over all items in this project, ordered within groups of item types.</span></span></summary>
        <value><span data-ttu-id="899c5-521">Retorna um enumerador sobre todos os itens neste projeto., ordenados dentro de grupos de tipos de item, incluindo os itens cujas condições são avaliadas como false ou estão contidas em grupos de itens cuja condição for avaliada como false.</span><span class="sxs-lookup"><span data-stu-id="899c5-521">Returns an enumerator over all items in this project., ordered within groups of item types, including items whose conditions evaluate to false, or are contained within item groups whose condition evaluates to false.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-522">Pode ser usado para exibir todos os itens, mesmo se eles não fazem parte da compilação na configuração atual.</span><span class="sxs-lookup"><span data-stu-id="899c5-522">Can be used to display all items, even if they are not part of the build in the current configuration.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;string&gt; ItemTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;string&gt; ItemTypes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ItemTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemTypes As ICollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ ItemTypes { System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="899c5-523">Obtém um enumerador sobre todos os tipos de item neste projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-523">Gets an enumerator over all item types in this project.</span></span></summary>
        <value><span data-ttu-id="899c5-524">Retorna um enumerador sobre todos os tipos de item neste projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-524">Returns an enumerator over all item types in this project.</span></span> <span data-ttu-id="899c5-525">Isso é uma coleção ordenada.</span><span class="sxs-lookup"><span data-stu-id="899c5-525">This is an ordered collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkDirty">
      <MemberSignature Language="C#" Value="public void MarkDirty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MarkDirty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.MarkDirty" />
      <MemberSignature Language="VB.NET" Value="Public Sub MarkDirty ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MarkDirty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="899c5-526">Marca este projeto como modificado.</span><span class="sxs-lookup"><span data-stu-id="899c5-526">Marks this project as modified.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-527">Raramente é necessário chamar esse método explicitamente, porque todas as edições afetar um projeto automaticamente marcá-la como modificado.</span><span class="sxs-lookup"><span data-stu-id="899c5-527">It is seldom necessary to call this method explicitly, because all edits affecting a project automatically mark it as modified.</span></span>  
  
 <span data-ttu-id="899c5-528">Às vezes, no entanto, esse método deve ser chamado.</span><span class="sxs-lookup"><span data-stu-id="899c5-528">Sometimes, however, this method must be called.</span></span> <span data-ttu-id="899c5-529">Por exemplo, um projeto pode ter um elemento de importação cuja condição depende de um arquivo que existe em um disco.</span><span class="sxs-lookup"><span data-stu-id="899c5-529">For example, a project may have an Import element whose condition depends on a file that exists on a disk.</span></span> <span data-ttu-id="899c5-530">Se esse arquivo não existe no tempo de avaliação, e ele é criado após a avaliação, em seguida, o projeto deve ser explicitamente marcado como modificada.</span><span class="sxs-lookup"><span data-stu-id="899c5-530">If that file does not exist at evaluation time, and it is created after evaluation, then the project must be explicitly marked as modified.</span></span>  
  
 <span data-ttu-id="899c5-531">O <xref:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary%2A> método usa essa propriedade para determinar se uma avaliação é necessária.</span><span class="sxs-lookup"><span data-stu-id="899c5-531">The <xref:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary%2A> method uses this property to determine if an evaluation is necessary.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProjectCollection">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ProjectCollection ProjectCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Evaluation.ProjectCollection ProjectCollection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ProjectCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProjectCollection As ProjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Evaluation::ProjectCollection ^ ProjectCollection { Microsoft::Build::Evaluation::ProjectCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="899c5-532">Obtém a coleção de projetos que contém este projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-532">Gets the project collection which contains this project.</span></span></summary>
        <value><span data-ttu-id="899c5-533">Retorna a coleção de projeto que contém este projeto, que nunca é nulo.</span><span class="sxs-lookup"><span data-stu-id="899c5-533">Returns the project collection which contains this project, which is never null.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProjectFileLocation">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ElementLocation ProjectFileLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation ProjectFileLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ProjectFileLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProjectFileLocation As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ElementLocation ^ ProjectFileLocation { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="899c5-534">O local do arquivo de origem em si, não nenhum conteúdo específico nele.</span><span class="sxs-lookup"><span data-stu-id="899c5-534">The location of the originating file itself, not any specific content within it.</span></span> <span data-ttu-id="899c5-535">Se o arquivo não recebeu um nome, esse será um local vazio.</span><span class="sxs-lookup"><span data-stu-id="899c5-535">If the file has not been given a name, this is an empty location.</span></span> <span data-ttu-id="899c5-536">Esse é um caso legítimo de não ter nenhum local.</span><span class="sxs-lookup"><span data-stu-id="899c5-536">This is a legitimate case of having no location.</span></span></summary>
        <value><span data-ttu-id="899c5-537">Retorna o local do arquivo de origem ou de um local vazio.</span><span class="sxs-lookup"><span data-stu-id="899c5-537">Returns the originating file location or an empty location.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectProperty&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As ICollection(Of ProjectProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectProperty ^&gt; ^ Properties { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectProperty ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="899c5-538">Obtém um enumerador sobre todos os tipos de propriedades neste projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-538">Gets an enumerator over all properties in this project.</span></span> <span data-ttu-id="899c5-539">Esta é uma coleção não ordenada.</span><span class="sxs-lookup"><span data-stu-id="899c5-539">This is an unordered collection.</span></span></summary>
        <value><span data-ttu-id="899c5-540">Retorna um enumerador sobre todas as propriedades neste projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-540">Returns an enumerator over all properties in this project.</span></span> <span data-ttu-id="899c5-541">Como as propriedades são avaliadas como aparecem, isso é uma coleção não ordenada.</span><span class="sxs-lookup"><span data-stu-id="899c5-541">Since properties are evaluated as they appear, this is an unordered collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReevaluateIfNecessary">
      <MemberSignature Language="C#" Value="public void ReevaluateIfNecessary ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReevaluateIfNecessary() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReevaluateIfNecessary ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReevaluateIfNecessary();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="899c5-542">Reavalia o projeto para incorporar as alterações.</span><span class="sxs-lookup"><span data-stu-id="899c5-542">Reevaluates the project to incorporate any changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-543">O projeto será reavaliado somente se ela está marcada como modificada.</span><span class="sxs-lookup"><span data-stu-id="899c5-543">The project is reevaluated only if it is marked as modified.</span></span> <span data-ttu-id="899c5-544">Reavaliação incorpora todas as alterações feitas no código-fonte do projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-544">Reevaluation incorporates all changes made to the project source code.</span></span>  
  
 <span data-ttu-id="899c5-545">Lança InvalidProjectFileException caso a avaliação falhe.</span><span class="sxs-lookup"><span data-stu-id="899c5-545">Throws InvalidProjectFileException if the evaluation fails.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveGlobalProperty">
      <MemberSignature Language="C#" Value="public bool RemoveGlobalProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveGlobalProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.RemoveGlobalProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveGlobalProperty (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveGlobalProperty(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="899c5-546">O nome da propriedade global a ser removida.</span><span class="sxs-lookup"><span data-stu-id="899c5-546">The name of the global property to be removed.</span></span></param>
        <summary><span data-ttu-id="899c5-547">Remove uma propriedade global e marca o projeto como modificado.</span><span class="sxs-lookup"><span data-stu-id="899c5-547">Removes a global property and marks the project as modified.</span></span></summary>
        <returns><span data-ttu-id="899c5-548">Retorna True se o valor da propriedade global foi definido.</span><span class="sxs-lookup"><span data-stu-id="899c5-548">Returns true if the value of the global property was set.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="public bool RemoveItem (Microsoft.Build.Evaluation.ProjectItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveItem(class Microsoft.Build.Evaluation.ProjectItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.RemoveItem(Microsoft.Build.Evaluation.ProjectItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveItem (item As ProjectItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveItem(Microsoft::Build::Evaluation::ProjectItem ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItem" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="899c5-549">O item a ser removido.</span><span class="sxs-lookup"><span data-stu-id="899c5-549">The item to be removed.</span></span></param>
        <summary><span data-ttu-id="899c5-550">Remove um item do projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-550">Removes an item from the project.</span></span> <span data-ttu-id="899c5-551">O item a ser removido deve estar presente no projeto e não deve ter a origem em um arquivo importado.</span><span class="sxs-lookup"><span data-stu-id="899c5-551">The item to be removed must be present in the project, and must not originate from an imported file.</span></span></summary>
        <returns><span data-ttu-id="899c5-552">Retorna True se o item estiver presente neste projeto avaliado; caso contrário, False.</span><span class="sxs-lookup"><span data-stu-id="899c5-552">Returns true if the item is present in this evaluated project; otherwise false.</span></span> <span data-ttu-id="899c5-553">Normalmente, esse método retorna True, pois se o item solicitado não estiver presente, o método gerará uma exceção.</span><span class="sxs-lookup"><span data-stu-id="899c5-553">Normally this method returns true, since if the requested item is not present, the method throws an exception.</span></span> <span data-ttu-id="899c5-554">No entanto, se o item estiver presente somente na coleção ItemsIgnoringCondition, o método retornará False.</span><span class="sxs-lookup"><span data-stu-id="899c5-554">If the item is present only in the ItemsIgnoringCondition collection, however, the method returns false.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-555">Se o grupo de itens que contém o item estiver vazio, ele também será removido.</span><span class="sxs-lookup"><span data-stu-id="899c5-555">If the item group containing the item becomes empty, it is also removed.</span></span>  
  
 <span data-ttu-id="899c5-556">Se o item são originados de um caractere curinga ou uma expressão separada por ponto e vírgula, a expressão primeiro é expandida para vários itens.</span><span class="sxs-lookup"><span data-stu-id="899c5-556">If the item originates from a wildcard or semicolon-separated expression, the expression is first expanded into multiple items.</span></span>  
  
 <span data-ttu-id="899c5-557">O projeto é atualizado, mas sem avaliação adicional ocorre até reavaliação.</span><span class="sxs-lookup"><span data-stu-id="899c5-557">The project is updated, but no further evaluation occurs until reevaluation.</span></span> <span data-ttu-id="899c5-558">Por exemplo, se um item do tipo "i" é removido, "j", que é avaliada de "@(i)" não é modificado até reavaliação.</span><span class="sxs-lookup"><span data-stu-id="899c5-558">For example, if an item of type "i" is removed, "j" which is evaluated from "@(i)" is not modified until reevaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveItems">
      <MemberSignature Language="C#" Value="public void RemoveItems (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Evaluation.ProjectItem&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveItems(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.RemoveItems(System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.ProjectItem})" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveItems (items As IEnumerable(Of ProjectItem))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveItems(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" />
      </Parameters>
      <Docs>
        <param name="items"><span data-ttu-id="899c5-559">Os itens a serem removidos.</span><span class="sxs-lookup"><span data-stu-id="899c5-559">The items to be removed.</span></span></param>
        <summary><span data-ttu-id="899c5-560">Remove todos os itens determinados do projeto, a menos que eles tenham a origem em um projeto importado.</span><span class="sxs-lookup"><span data-stu-id="899c5-560">Removes all the given items from the project, unless they originate from an imported project.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-561">Se um item são originados de um projeto importado, ele é simplesmente ignorado.</span><span class="sxs-lookup"><span data-stu-id="899c5-561">If an item originates from an imported project, it is simply skipped.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveProperty">
      <MemberSignature Language="C#" Value="public bool RemoveProperty (Microsoft.Build.Evaluation.ProjectProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveProperty(class Microsoft.Build.Evaluation.ProjectProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.RemoveProperty(Microsoft.Build.Evaluation.ProjectProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveProperty (property As ProjectProperty) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveProperty(Microsoft::Build::Evaluation::ProjectProperty ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.Build.Evaluation.ProjectProperty" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="899c5-562">A propriedade a ser removida.</span><span class="sxs-lookup"><span data-stu-id="899c5-562">The property to remove.</span></span></param>
        <summary><span data-ttu-id="899c5-563">Remove uma propriedade do projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-563">Removes an property from the project.</span></span> <span data-ttu-id="899c5-564">A propriedade a ser removida deve estar presente no projeto e não deve ter a origem em um arquivo importado.</span><span class="sxs-lookup"><span data-stu-id="899c5-564">The property to be removed must be present in the project, and must not originate from an imported file.</span></span></summary>
        <returns><span data-ttu-id="899c5-565">Retorna True se a propriedade estiver presente neste projeto avaliado; caso contrário, False.</span><span class="sxs-lookup"><span data-stu-id="899c5-565">Returns true if the property is present in this evaluated project; otherwise false.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-566">Se o grupo de propriedade que contém a propriedade estiver vazio, ele também será removido.</span><span class="sxs-lookup"><span data-stu-id="899c5-566">If the property group containing the property becomes empty, it is also removed.</span></span>  
  
 <span data-ttu-id="899c5-567">O projeto é atualizado, mas sem avaliação adicional ocorre até reavaliação.</span><span class="sxs-lookup"><span data-stu-id="899c5-567">The project is updated, but no further evaluation occurs until reevaluation.</span></span> <span data-ttu-id="899c5-568">Por exemplo, se for removido "p", "p", que é avaliada de "$(p)" não é modificado até reavaliação.</span><span class="sxs-lookup"><span data-stu-id="899c5-568">For example, if "p" is removed, "q" which is evaluated from "$(p)" is not modified until reevaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="899c5-569">Salva o projeto no sistema de arquivos, se modificado, usando a codificação de caractere padrão.</span><span class="sxs-lookup"><span data-stu-id="899c5-569">Saves the project to the file system, if modified, using the default character encoding.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Save" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="899c5-570">Salva o projeto no sistema de arquivos, se modificado, usando a codificação de caractere padrão.</span><span class="sxs-lookup"><span data-stu-id="899c5-570">Saves the project to the file system, if modified, using the default character encoding.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Save(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::IO::TextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="899c5-571">O text writer no qual salvar o projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-571">The text writer to save the project to.</span></span></param>
        <summary><span data-ttu-id="899c5-572">Salva o projeto no text writer fornecido, independentemente se o projeto foi ou não modificado.</span><span class="sxs-lookup"><span data-stu-id="899c5-572">Saves the project to the provided text writer, whether or not the project has been modified.</span></span> <span data-ttu-id="899c5-573">Usa a codificação de caracteres do text writer e marca o projeto como não modificado.</span><span class="sxs-lookup"><span data-stu-id="899c5-573">Uses the character encoding of the text writer and marks the project as unmodified.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Save(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="899c5-574">O caminho para o código-fonte do projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-574">The path to the project source code.</span></span></param>
        <summary><span data-ttu-id="899c5-575">Salva o projeto no sistema de arquivos, caso tenha sido modificado ou se o caminho para o código-fonte do projeto tiver sido alterado, usando a codificação de caracteres padrão.</span><span class="sxs-lookup"><span data-stu-id="899c5-575">Saves the project to the file system, if modified or if the path to the project source code changes, using the default character encoding.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Save(System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::Text::Encoding ^ encoding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="encoding"><span data-ttu-id="899c5-576">A codificação de caracteres usada para salvar o projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-576">The character encoding used to save the project.</span></span></param>
        <summary><span data-ttu-id="899c5-577">Salva o projeto no sistema de arquivos, se modificado, usando a codificação de caractere especificada.</span><span class="sxs-lookup"><span data-stu-id="899c5-577">Saves the project to the file system, if modified, using the given character encoding.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string path, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string path, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Save(System.String,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ path, System::Text::Encoding ^ encoding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="899c5-578">O caminho para o código-fonte do projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-578">The path to the project source code.</span></span></param>
        <param name="encoding"><span data-ttu-id="899c5-579">A codificação de caracteres usada para salvar o projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-579">The character encoding used to save the project.</span></span></param>
        <summary><span data-ttu-id="899c5-580">Salva o projeto no sistema de arquivos, caso tenha sido modificado ou se o caminho para o código-fonte do projeto tiver sido alterado, usando a codificação de caracteres especificada.</span><span class="sxs-lookup"><span data-stu-id="899c5-580">Saves the project to the file system, if modified or if the path to the project source code changes, using the given character encoding.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveLogicalProject">
      <MemberSignature Language="C#" Value="public void SaveLogicalProject (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveLogicalProject(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.SaveLogicalProject(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveLogicalProject (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveLogicalProject(System::IO::TextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="899c5-581">O writer que salva o arquivo de projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-581">The writer that saves the project file.</span></span></param>
        <summary><span data-ttu-id="899c5-582">Salva um arquivo de projeto "lógico" ou "pré-processado", que inclui todos os arquivos importados, como se eles formassem um único arquivo.</span><span class="sxs-lookup"><span data-stu-id="899c5-582">Saves a "logical" or "preprocessed" project file, that includes all the imported files as if they formed a single file.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetGlobalProperty">
      <MemberSignature Language="C#" Value="public bool SetGlobalProperty (string name, string escapedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SetGlobalProperty(string name, string escapedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.SetGlobalProperty(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetGlobalProperty (name As String, escapedValue As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetGlobalProperty(System::String ^ name, System::String ^ escapedValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="escapedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="899c5-583">O nome da propriedade global a ser definida.</span><span class="sxs-lookup"><span data-stu-id="899c5-583">The name of the global property to set.</span></span></param>
        <param name="escapedValue"><span data-ttu-id="899c5-584">O novo valor da propriedade global.</span><span class="sxs-lookup"><span data-stu-id="899c5-584">The new value of the global property.</span></span></param>
        <summary><span data-ttu-id="899c5-585">Define uma propriedade global depois que o projeto foi avaliado.</span><span class="sxs-lookup"><span data-stu-id="899c5-585">Sets a global property after the project has been evaluated.</span></span> <span data-ttu-id="899c5-586">Se o valor for alterado, o projeto será marcado para exigir uma reavaliação.</span><span class="sxs-lookup"><span data-stu-id="899c5-586">If the value changes, the project is marked to require reevaluation.</span></span></summary>
        <returns><span data-ttu-id="899c5-587">Retornará <see langword="true" /> se o valor for alterado, caso contrário, retornará <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="899c5-587">Returns <see langword="true" /> if the value changes, otherwise returns <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ProjectProperty SetProperty (string name, string unevaluatedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Evaluation.ProjectProperty SetProperty(string name, string unevaluatedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.SetProperty(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetProperty (name As String, unevaluatedValue As String) As ProjectProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Evaluation::ProjectProperty ^ SetProperty(System::String ^ name, System::String ^ unevaluatedValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="unevaluatedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="899c5-588">O nome da propriedade a ser definida.</span><span class="sxs-lookup"><span data-stu-id="899c5-588">The name of the property to set.</span></span></param>
        <param name="unevaluatedValue"><span data-ttu-id="899c5-589">O novo valor não avaliado da propriedade.</span><span class="sxs-lookup"><span data-stu-id="899c5-589">The new unevaluated value of the property.</span></span></param>
        <summary><span data-ttu-id="899c5-590">Define ou adiciona uma propriedade com o nome e o valor fornecidos ao projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-590">Sets or adds a property with the given name and value to the project.</span></span> <span data-ttu-id="899c5-591">Substitui o valor de uma propriedade pelo mesmo nome se ela não foi originada em um arquivo importado.</span><span class="sxs-lookup"><span data-stu-id="899c5-591">Overwrites the value of a property with the same name if it did not originate in an imported file.</span></span></summary>
        <returns><span data-ttu-id="899c5-592">Retorna a propriedade.</span><span class="sxs-lookup"><span data-stu-id="899c5-592">Returns the property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-593">Se não houver nenhuma propriedade com o nome fornecido, atualiza a última propriedade existente com o nome fornecido não tem uma condição em si mesmo ou em seu grupo de propriedade, a menos que ela seja proveniente de um arquivo importado.</span><span class="sxs-lookup"><span data-stu-id="899c5-593">If there is no property with the given name, updates the last existing property with the given name that has no condition on itself or its property group, unless it originated in an imported file.</span></span>  
  
 <span data-ttu-id="899c5-594">Caso contrário, adiciona uma nova propriedade do primeiro grupo de propriedade sem uma condição, criando um grupo de propriedades se necessário após o última existente propriedade grupo ou no início do projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-594">Otherwise, adds a new property in the first property group without a condition, creating a property group if necessary after the last existing property group, else at the start of the project.</span></span>  
  
 <span data-ttu-id="899c5-595">Avaliação ocorre em uma base de melhor esforço.</span><span class="sxs-lookup"><span data-stu-id="899c5-595">Evaluation takes place on a best-effort basis.</span></span> <span data-ttu-id="899c5-596">Propriedades que são definidas na fonte de projeto a nova propriedade a seguir podem ser usadas para avaliação.</span><span class="sxs-lookup"><span data-stu-id="899c5-596">Properties that are defined in the project source following the new property may be used for evaluation.</span></span> <span data-ttu-id="899c5-597">Apenas essa propriedade é avaliada.</span><span class="sxs-lookup"><span data-stu-id="899c5-597">Only this property is evaluated.</span></span> <span data-ttu-id="899c5-598">Outras propriedades que podem depender não são afetadas.</span><span class="sxs-lookup"><span data-stu-id="899c5-598">Other properties that might depend on it are not affected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipEvaluation">
      <MemberSignature Language="C#" Value="public bool SkipEvaluation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SkipEvaluation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.SkipEvaluation" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipEvaluation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SkipEvaluation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="899c5-599">Obtém ou define um sinalizador que determina se ReevaluateIfNecessary está temporariamente desabilitado.</span><span class="sxs-lookup"><span data-stu-id="899c5-599">Gets or sets a flag the determines whether ReevaluateIfNecessary is temporarily disabled.</span></span> <span data-ttu-id="899c5-600">Isso é útil quando o host espera fazer várias leituras e gravações no projeto e deseja sacrificar temporariamente a correção em favor do desempenho.</span><span class="sxs-lookup"><span data-stu-id="899c5-600">This is useful when the host expects to make a number of reads and writes to the project, and wants to temporarily sacrifice correctness for performance.</span></span></summary>
        <value><span data-ttu-id="899c5-601">Retorna um sinalizador de determina se ReevaluateIfNecessary está temporariamente desabilitada.</span><span class="sxs-lookup"><span data-stu-id="899c5-601">Returns a flag the determines whether ReevaluateIfNecessary is temporarily disabled.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubToolsetVersion">
      <MemberSignature Language="C#" Value="public string SubToolsetVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SubToolsetVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.SubToolsetVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SubToolsetVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SubToolsetVersion { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="899c5-602">Obtém o valor do atributo SubToolsetVersion, se houver.</span><span class="sxs-lookup"><span data-stu-id="899c5-602">Gets the value of the SubToolsetVersion attribute, if any.</span></span> <span data-ttu-id="899c5-603">Esse valor foi combinado com o valor do atributo ToolsVersion para determinar as propriedades do conjunto de ferramentas para este projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-603">This value was combined with the value of the ToolsVersion attribute to determine the toolset properties for this project.</span></span></summary>
        <value><span data-ttu-id="899c5-604">Retorna o valor do atributo SubToolsetVersion.</span><span class="sxs-lookup"><span data-stu-id="899c5-604">Returns the SubToolsetVersion attribute value.</span></span> <span data-ttu-id="899c5-605">Retorna uma cadeia de caracteres vazia caso o atributo não esteja presente.</span><span class="sxs-lookup"><span data-stu-id="899c5-605">Returns an empty string if the attribute is not present.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Targets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.ProjectTargetInstance&gt; Targets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.ProjectTargetInstance&gt; Targets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.Targets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Targets As IDictionary(Of String, ProjectTargetInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectTargetInstance ^&gt; ^ Targets { System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectTargetInstance ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.ProjectTargetInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="899c5-606">Obtém um dicionário de todos os destinos neste projeto, organizado por nome de destino.</span><span class="sxs-lookup"><span data-stu-id="899c5-606">Gets a dictionary of all targets in this project, keyed by target name.</span></span></summary>
        <value><span data-ttu-id="899c5-607">Retorna um dicionário de todos os destinos neste projeto, organizado por nome de destino.</span><span class="sxs-lookup"><span data-stu-id="899c5-607">Returns a dictionary of all targets in this project, keyed by target name.</span></span> <span data-ttu-id="899c5-608">Destinos de substituição não são incluídos na coleção.</span><span class="sxs-lookup"><span data-stu-id="899c5-608">Overridden targets are not included in this collection.</span></span> <span data-ttu-id="899c5-609">Esse dicionário é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="899c5-609">This dictionary is read-only.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolsVersion">
      <MemberSignature Language="C#" Value="public string ToolsVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolsVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ToolsVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ToolsVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolsVersion { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="899c5-610">Obtém a versão das ferramentas com as quais este projeto foi avaliado, se houver.</span><span class="sxs-lookup"><span data-stu-id="899c5-610">Gets the tools version that this project was evaluated with, if any.</span></span></summary>
        <value><span data-ttu-id="899c5-611">Obtém a versão das ferramentas com as quais este projeto foi avaliado, se houver.</span><span class="sxs-lookup"><span data-stu-id="899c5-611">Gets the tools version that this project was evaluated with, if any.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-612">Definido pelo construtor.</span><span class="sxs-lookup"><span data-stu-id="899c5-612">Set by the constructor.</span></span> <span data-ttu-id="899c5-613">Isso não é necessariamente o mesmo que a versão das ferramentas na marca do projeto, se houver; ele pode ter foi externamente especificado, por exemplo com um comutador /tv na linha de comando.</span><span class="sxs-lookup"><span data-stu-id="899c5-613">This is not necessarily the same as the tools version on the Project tag, if any; it may have been externally specified, for example with a /tv switch on the command line.</span></span> <span data-ttu-id="899c5-614">A versão de ferramentas real na marca de projeto pode ser obtida <xref:Microsoft.Build.Evaluation.Project.Xml%2A>.</span><span class="sxs-lookup"><span data-stu-id="899c5-614">The actual tools version on the Project tag can be obtained from <xref:Microsoft.Build.Evaluation.Project.Xml%2A>.</span></span> <span data-ttu-id="899c5-615">A versão das ferramentas não pode ser alterada depois que o projeto foi criado.</span><span class="sxs-lookup"><span data-stu-id="899c5-615">The tools version cannot be changed once the project has been created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Xml">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectRootElement Xml { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ProjectRootElement Xml" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.Xml" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Xml As ProjectRootElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ProjectRootElement ^ Xml { Microsoft::Build::Construction::ProjectRootElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectRootElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="899c5-616">Obtém o projeto raiz associado com este projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-616">Gets the root project associated with this project.</span></span> <span data-ttu-id="899c5-617">Nunca pode ser nulo</span><span class="sxs-lookup"><span data-stu-id="899c5-617">Can never be null</span></span></summary>
        <value><span data-ttu-id="899c5-618">Retorna o projeto raiz associado a este projeto, que nunca pode ser nulo.</span><span class="sxs-lookup"><span data-stu-id="899c5-618">Returns the root project associated with this project, which can never be null.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="899c5-619">Não é possível definir essa propriedade.</span><span class="sxs-lookup"><span data-stu-id="899c5-619">There is no way to set this property.</span></span> <span data-ttu-id="899c5-620">Se você tiver uma nova raiz do projeto, avalie-o em um novo projeto.</span><span class="sxs-lookup"><span data-stu-id="899c5-620">If you have a new project root, evaluate it into a new project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>