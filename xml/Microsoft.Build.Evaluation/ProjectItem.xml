<Type Name="ProjectItem" FullName="Microsoft.Build.Evaluation.ProjectItem">
  <TypeSignature Language="C#" Value="public class ProjectItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProjectItem extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Evaluation.ProjectItem" />
  <TypeSignature Language="VB.NET" Value="Public Class ProjectItem" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProjectItem" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{ItemType}={EvaluatedInclude} [{UnevaluatedInclude}] #DirectMetadata={DirectMetadataCount}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="3068f-101">Representa um item de projeto em tempo de design avaliado.</span><span class="sxs-lookup"><span data-stu-id="3068f-101">Represents an evaluated design-time project item.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="DirectMetadata">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt; DirectMetadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Evaluation.ProjectMetadata&gt; DirectMetadata" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectItem.DirectMetadata" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectMetadata As IEnumerable(Of ProjectMetadata)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt; ^ DirectMetadata { System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3068f-102">Obtém um enumerador sobre todos os metadados de item.</span><span class="sxs-lookup"><span data-stu-id="3068f-102">Gets an enumerator over all item metadata.</span></span></summary>
        <value><span data-ttu-id="3068f-103">Retorna um enumerador sobre todos os metadados de item, que nunca pode ser nulo.</span><span class="sxs-lookup"><span data-stu-id="3068f-103">Returns an enumerator over all item metadata, which can never be null.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3068f-104">Não incluir metadados de definições de item.</span><span class="sxs-lookup"><span data-stu-id="3068f-104">Does not include metadata from item definitions.</span></span> <span data-ttu-id="3068f-105">Não inclui metadados internos como, por exemplo, “FullPath”.</span><span class="sxs-lookup"><span data-stu-id="3068f-105">Does not include built-in metadata, such as "FullPath".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectMetadataCount">
      <MemberSignature Language="C#" Value="public int DirectMetadataCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DirectMetadataCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectMetadataCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DirectMetadataCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3068f-106">Obtém a contagem de metadados para este item.</span><span class="sxs-lookup"><span data-stu-id="3068f-106">Gets the count of metadata for this item.</span></span></summary>
        <value><span data-ttu-id="3068f-107">Retorna a contagem de metadados para este item.</span><span class="sxs-lookup"><span data-stu-id="3068f-107">Returns the count of metadata for this item.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3068f-108">Não incluir metadados de definições de item.</span><span class="sxs-lookup"><span data-stu-id="3068f-108">Does not include metadata from item definitions.</span></span> <span data-ttu-id="3068f-109">Não inclui metadados internos como, por exemplo, “FullPath”.</span><span class="sxs-lookup"><span data-stu-id="3068f-109">Does not include built-in metadata, such as "FullPath".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluatedInclude">
      <MemberSignature Language="C#" Value="public string EvaluatedInclude { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EvaluatedInclude" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EvaluatedInclude As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EvaluatedInclude { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Evaluation.IItem.EvaluatedInclude</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3068f-110">Obtém o valor avaliado do atributo Include.</span><span class="sxs-lookup"><span data-stu-id="3068f-110">Gets the evaluated value of the Include attribute.</span></span></summary>
        <value><span data-ttu-id="3068f-111">Retorna o valor do atributo incluir.</span><span class="sxs-lookup"><span data-stu-id="3068f-111">Returns the evaluated value of the Include attribute.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3068f-112">Caracteres de escape não estão presentes.</span><span class="sxs-lookup"><span data-stu-id="3068f-112">Escaped characters are not present.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadata">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ProjectMetadata GetMetadata (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Evaluation.ProjectMetadata GetMetadata(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.ProjectItem.GetMetadata(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMetadata (name As String) As ProjectMetadata" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Evaluation::ProjectMetadata ^ GetMetadata(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Evaluation.IItem`1.GetMetadata(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectMetadata</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="3068f-113">O nome dos metadados cujos valores serão recuperados.</span><span class="sxs-lookup"><span data-stu-id="3068f-113">The name of the metadata whose value is retrieved.</span></span></param>
        <summary><span data-ttu-id="3068f-114">Obtém o valor avaliado dos metadados fornecidos para este item.</span><span class="sxs-lookup"><span data-stu-id="3068f-114">Gets the evaluated value of the given metadata for this item.</span></span></summary>
        <returns><span data-ttu-id="3068f-115">Obtém o valor avaliado dos metadados fornecidos para este item.</span><span class="sxs-lookup"><span data-stu-id="3068f-115">Gets the evaluated value of the given metadata for this item.</span></span> <span data-ttu-id="3068f-116">Retornará nulo se não existirem metadados com o nome fornecido.</span><span class="sxs-lookup"><span data-stu-id="3068f-116">Returns null if no metadata exists with the given name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3068f-117">Pode incluir metadados de uma definição de item.</span><span class="sxs-lookup"><span data-stu-id="3068f-117">May include metadata from an item definition.</span></span> <span data-ttu-id="3068f-118">Não inclui metadados internos como, por exemplo, “FullPath”.</span><span class="sxs-lookup"><span data-stu-id="3068f-118">Does not include built-in metadata, such as "FullPath".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataValue">
      <MemberSignature Language="C#" Value="public string GetMetadataValue (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetMetadataValue(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMetadataValue (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetMetadataValue(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Evaluation.IItem.GetMetadataValue(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="3068f-119">O nome dos metadados cujos valores serão recuperados.</span><span class="sxs-lookup"><span data-stu-id="3068f-119">The name of the metadata whose value is retrieved.</span></span></param>
        <summary><span data-ttu-id="3068f-120">Obter o valor dos metadados fornecidos para este item, incluindo metadados provenientes de uma definição de item.</span><span class="sxs-lookup"><span data-stu-id="3068f-120">Get the evaluated value of the given metadata for this item, including metadata originating from an item definition.</span></span></summary>
        <returns><span data-ttu-id="3068f-121">Retorna o valor dos metadados fornecidos para este item, incluindo metadados provenientes de uma definição de item.</span><span class="sxs-lookup"><span data-stu-id="3068f-121">Returns the evaluated value of the given metadata for this item, including metadata originating from an item definition.</span></span> <span data-ttu-id="3068f-122">Retornará uma cadeia de caracteres vazia se não houver metadados com o nome fornecido.</span><span class="sxs-lookup"><span data-stu-id="3068f-122">Returns an empty string if no metadata exists with the given name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3068f-123">Para determinar se existem metadados, se ele tem um valor ou não, use <xref:Microsoft.Build.Evaluation.ProjectItem.HasMetadata%2A>.</span><span class="sxs-lookup"><span data-stu-id="3068f-123">To determine whether metadata exist, whether it has a value or not, use <xref:Microsoft.Build.Evaluation.ProjectItem.HasMetadata%2A>.</span></span>  
  
 <span data-ttu-id="3068f-124">Esse método pode ser usado para acessar o valor de metadados internos, como "FullPath".</span><span class="sxs-lookup"><span data-stu-id="3068f-124">This method may be used to access the value of built-in metadata, such as "FullPath".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasMetadata">
      <MemberSignature Language="C#" Value="public bool HasMetadata (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasMetadata(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.ProjectItem.HasMetadata(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasMetadata (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasMetadata(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="3068f-125">O nome de metadados a ser procurado.</span><span class="sxs-lookup"><span data-stu-id="3068f-125">The name of the metadata to be searched for.</span></span></param>
        <summary><span data-ttu-id="3068f-126">Determina se os metadados com o nome fornecido estão definidos neste item.</span><span class="sxs-lookup"><span data-stu-id="3068f-126">Determines whether metadata with the given name is defined on this item.</span></span></summary>
        <returns><span data-ttu-id="3068f-127">Retornará true se metadados com o nome fornecido estiverem definidos neste item; caso contrário, false.</span><span class="sxs-lookup"><span data-stu-id="3068f-127">Returns true if metadata with the given name is defined on this item; false otherwise.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3068f-128">Inclui metadados internos e definições de item de origem.</span><span class="sxs-lookup"><span data-stu-id="3068f-128">Includes built-in metadata and metadata originating from item definitions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsImported">
      <MemberSignature Language="C#" Value="public bool IsImported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsImported" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectItem.IsImported" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsImported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsImported { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3068f-129">Determina se este item se origina de um arquivo importado.</span><span class="sxs-lookup"><span data-stu-id="3068f-129">Determines if this item originates from an imported file.</span></span></summary>
        <value><span data-ttu-id="3068f-130">Retorne verdadeiro se este item se origina de um arquivo importado. FALSO caso contrário.</span><span class="sxs-lookup"><span data-stu-id="3068f-130">Return true if this item originates from an imported file; false otherwise.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public string ItemType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ItemType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectItem.ItemType" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ItemType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3068f-131">Obtém ou define o tipo desse item.</span><span class="sxs-lookup"><span data-stu-id="3068f-131">Gets or sets the type of this item.</span></span></summary>
        <value><span data-ttu-id="3068f-132">Retorna o tipo de item.</span><span class="sxs-lookup"><span data-stu-id="3068f-132">Returns the item type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Metadata">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt; Metadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectMetadata&gt; Metadata" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectItem.Metadata" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Metadata As ICollection(Of ProjectMetadata)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt; ^ Metadata { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3068f-133">Obtém todos os metadados para este item, incluindo metadados provenientes de definições do item.</span><span class="sxs-lookup"><span data-stu-id="3068f-133">Gets all the metadata for this item, including metadata originating from item definitions.</span></span></summary>
        <value><span data-ttu-id="3068f-134">Retorna todos os metadados para este item, incluindo metadados provenientes de definições do item.</span><span class="sxs-lookup"><span data-stu-id="3068f-134">Returns all the metadata for this item, including metadata originating from item definitions.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3068f-135">Não inclui metadados internos como, por exemplo, “FullPath”.</span><span class="sxs-lookup"><span data-stu-id="3068f-135">Does not include built-in metadata, such as "FullPath".</span></span>  
  
 <span data-ttu-id="3068f-136">Para adicionar, remover, ou alterar os valores de metadados internas, use <xref:Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue%2A> e <xref:Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue%2A>.</span><span class="sxs-lookup"><span data-stu-id="3068f-136">To add, remove, or change the values of built-in metadata, use <xref:Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue%2A> and <xref:Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MetadataCount">
      <MemberSignature Language="C#" Value="public int MetadataCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MetadataCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectItem.MetadataCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MetadataCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MetadataCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3068f-137">Obtém a contagem de metadados para este item, incluindo quaisquer metadados provenientes de definições de item e quaisquer metadados internos.</span><span class="sxs-lookup"><span data-stu-id="3068f-137">Gets the count of metadata for this item, including any metadata originating from item definitions, and any built-in metadata.</span></span></summary>
        <value><span data-ttu-id="3068f-138">Retorna a contagem de metadados para este item, incluindo quaisquer metadados provenientes de definições de item e quaisquer metadados internos.</span><span class="sxs-lookup"><span data-stu-id="3068f-138">Returns the count of metadata for this item, including any metadata originating from item definitions, and any built-in metadata.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Project">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.Project Project { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Evaluation.Project Project" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectItem.Project" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Project As Project" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Evaluation::Project ^ Project { Microsoft::Build::Evaluation::Project ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Evaluation.IProjectMetadataParent.Project</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.Project</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3068f-139">Obtém o projeto que contém esse item de projeto.</span><span class="sxs-lookup"><span data-stu-id="3068f-139">Gets the project that contains this project item.</span></span></summary>
        <value><span data-ttu-id="3068f-140">Retorna o projeto que contém esse item de projeto.</span><span class="sxs-lookup"><span data-stu-id="3068f-140">Returns the project that contains this project item.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3068f-141">Itens de projeto estão sempre contidos por um projeto.</span><span class="sxs-lookup"><span data-stu-id="3068f-141">Project items are always contained by a project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMetadata">
      <MemberSignature Language="C#" Value="public bool RemoveMetadata (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveMetadata(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveMetadata (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveMetadata(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="3068f-142">O nome dos metadados a serem removidos.</span><span class="sxs-lookup"><span data-stu-id="3068f-142">The name of the metadata to remove.</span></span></param>
        <summary><span data-ttu-id="3068f-143">Remove todos os metadados com o nome fornecido.</span><span class="sxs-lookup"><span data-stu-id="3068f-143">Removes any metadata with the given name.</span></span></summary>
        <returns><span data-ttu-id="3068f-144">Retornará true se metadados com o nome fornecido já existirem antes de remoção; caso contrário, false.</span><span class="sxs-lookup"><span data-stu-id="3068f-144">Returns true if metadata with the given name exists before removal; false otherwise.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3068f-145">Gera InvalidArgumentException se o nome de metadados se refere a metadados internos, como "FullPath".</span><span class="sxs-lookup"><span data-stu-id="3068f-145">Throws InvalidArgumentException if the metadata name refers to built-in metadata, like "FullPath".</span></span>  
  
 <span data-ttu-id="3068f-146">Gera InvalidOperationException se o nome de metadados se refere a metadados que se origina de uma definição de item.</span><span class="sxs-lookup"><span data-stu-id="3068f-146">Throws InvalidOperationException if the metadata name refers to metadata that originates from an item definition.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rename">
      <MemberSignature Language="C#" Value="public void Rename (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Rename(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.ProjectItem.Rename(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rename (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rename(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="3068f-147">O novo nome do item.</span><span class="sxs-lookup"><span data-stu-id="3068f-147">The new name of the item.</span></span></param>
        <summary><span data-ttu-id="3068f-148">Renomeia o item com o nome fornecido.</span><span class="sxs-lookup"><span data-stu-id="3068f-148">Renames the item to the given name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3068f-149">Equivalente à configuração de <xref:Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude%2A> valor.</span><span class="sxs-lookup"><span data-stu-id="3068f-149">Equivalent to setting the <xref:Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude%2A> value.</span></span> <span data-ttu-id="3068f-150">Geralmente, nenhuma avaliação ocorre, porque isso resultaria em vários itens, que não tem nenhum significado no contexto de renomeação de um único item.</span><span class="sxs-lookup"><span data-stu-id="3068f-150">Generally, no evaluation occurs, because this could result in several items, which has no meaning in the context of renaming a single item.</span></span> <span data-ttu-id="3068f-151">No entanto se o item não precisa ser divididos, e o novo valor é avaliada para exatamente um item, o atributo Include avaliado é atualizado com o valor avaliado.</span><span class="sxs-lookup"><span data-stu-id="3068f-151">However if the item does not need to be split, and the new value evaluates to exactly one item, then its evaluated Include attribute is updated with the evaluated value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMetadataValue">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ProjectMetadata SetMetadataValue (string name, string unevaluatedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Evaluation.ProjectMetadata SetMetadataValue(string name, string unevaluatedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetMetadataValue (name As String, unevaluatedValue As String) As ProjectMetadata" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Evaluation::ProjectMetadata ^ SetMetadataValue(System::String ^ name, System::String ^ unevaluatedValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectMetadata</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="unevaluatedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="3068f-152">O nome dos metadados a serem adicionados.</span><span class="sxs-lookup"><span data-stu-id="3068f-152">The name of the metadata to add.</span></span></param>
        <param name="unevaluatedValue"><span data-ttu-id="3068f-153">O valor não avaliado dos metadados a adicionar.</span><span class="sxs-lookup"><span data-stu-id="3068f-153">The unevaluated value of the metadata to add.</span></span></param>
        <summary><span data-ttu-id="3068f-154">Adiciona metadados com o nome e o valor não avaliado para o item.</span><span class="sxs-lookup"><span data-stu-id="3068f-154">Adds metadata with the given name and unevaluated value to the item.</span></span></summary>
        <returns><span data-ttu-id="3068f-155">Retorna os novos metadados.</span><span class="sxs-lookup"><span data-stu-id="3068f-155">Returns the new metadata.</span></span> <span data-ttu-id="3068f-156">Se os metadados com o nome fornecido já existirem, retornará estes metadados.</span><span class="sxs-lookup"><span data-stu-id="3068f-156">If metadata with the given name already exists, returns this metadata.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3068f-157">Atualiza o valor de metadados existentes se metadados já existem com o nome especificado no item, desde que ele não é proveniente de uma definição de item.</span><span class="sxs-lookup"><span data-stu-id="3068f-157">Updates the value of existing metadata if metadata already exists with the given name on the item, as long as it does not originate from an item definition.</span></span> <span data-ttu-id="3068f-158">Atualiza o projeto avaliado, mas não afeta mais nada no projeto até reavaliação.</span><span class="sxs-lookup"><span data-stu-id="3068f-158">Updates the evaluated project, but does not affect anything else in the project until reevaluation.</span></span>  
  
 <span data-ttu-id="3068f-159">Por exemplo, se uma parte dos metadados denominados "m" é adicionada no item do tipo "i", ele não afeta "j", que é avaliada de "@(j -> '(m) %')" até que a reavaliação.</span><span class="sxs-lookup"><span data-stu-id="3068f-159">For example, if a piece of metadata named "m" is added on item of type "i", it does not affect "j" which is evaluated from "@(j->'%(m)')" until reevaluation.</span></span> <span data-ttu-id="3068f-160">Também se o valor não avaliado "m" é definido como algo que é modificada por avaliação, como "$(p)", o valor será definido para literalmente "$(p)" até que a reavaliação.</span><span class="sxs-lookup"><span data-stu-id="3068f-160">Also if the unevaluated value of "m" is set to something that is modified by evaluation, such as "$(p)", the evaluated value will be set to literally "$(p)" until reevaluation.</span></span>  
  
 <span data-ttu-id="3068f-161">Caracteres especiais no valor não avaliado devem ser convertidas para caracteres de escape.</span><span class="sxs-lookup"><span data-stu-id="3068f-161">Special characters in the unevaluated value should be converted to escape characters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnevaluatedInclude">
      <MemberSignature Language="C#" Value="public string UnevaluatedInclude { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UnevaluatedInclude" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude" />
      <MemberSignature Language="VB.NET" Value="Public Property UnevaluatedInclude As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UnevaluatedInclude { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3068f-162">Obtém ou define o valor não avaliável do atributo Include.</span><span class="sxs-lookup"><span data-stu-id="3068f-162">Gets or sets the unevaluated value of the Include attribute.</span></span></summary>
        <value><span data-ttu-id="3068f-163">Retorna o valor não avaliado do atributo Include.</span><span class="sxs-lookup"><span data-stu-id="3068f-163">Returns the unevaluated value of the Include attribute.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Xml">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectItemElement Xml { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ProjectItemElement Xml" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectItem.Xml" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Xml As ProjectItemElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ProjectItemElement ^ Xml { Microsoft::Build::Construction::ProjectItemElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectItemElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3068f-164">Obtém o elemento de item que está associado a este item.</span><span class="sxs-lookup"><span data-stu-id="3068f-164">Gets the item element that is associated with this item.</span></span></summary>
        <value><span data-ttu-id="3068f-165">Retorna o elemento de item que está associado este item, que nunca pode ser nulo.</span><span class="sxs-lookup"><span data-stu-id="3068f-165">Returns the item element that is associated with this item, which can never be null.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>