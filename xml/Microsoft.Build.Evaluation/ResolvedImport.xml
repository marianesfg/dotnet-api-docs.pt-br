<Type Name="ResolvedImport" FullName="Microsoft.Build.Evaluation.ResolvedImport">
  <Metadata><Meta Name="ms.openlocfilehash" Value="125c85763cf8f226de3c787d68e892412d8cab03" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="40000874" /></Metadata><TypeSignature Language="C#" Value="public struct ResolvedImport" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ResolvedImport extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Evaluation.ResolvedImport" />
  <TypeSignature Language="VB.NET" Value="Public Structure ResolvedImport" />
  <TypeSignature Language="C++ CLI" Value="public value class ResolvedImport" />
  <TypeSignature Language="F#" Value="type ResolvedImport = struct" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d2b97-101">Encapsula uma relação de importação em um projeto avaliado entre um ProjectImportElement e o ProjectRootElement do projeto importado.</span><span class="sxs-lookup"><span data-stu-id="d2b97-101">Encapsulates an import relationship in an evaluated project between a ProjectImportElement and the ProjectRootElement of the imported project.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ImportedProject">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectRootElement ImportedProject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ProjectRootElement ImportedProject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ResolvedImport.ImportedProject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ImportedProject As ProjectRootElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ProjectRootElement ^ ImportedProject { Microsoft::Build::Construction::ProjectRootElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ImportedProject : Microsoft.Build.Construction.ProjectRootElement" Usage="Microsoft.Build.Evaluation.ResolvedImport.ImportedProject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectRootElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2b97-102">Obtém um dos projetos importados.</span><span class="sxs-lookup"><span data-stu-id="d2b97-102">Gets one of the imported projects.</span></span></summary>
        <value><span data-ttu-id="d2b97-103">Retorna um <see cref="T:Microsoft.Build.Construction.ProjectRootElement" /> que representa o projeto importado.</span><span class="sxs-lookup"><span data-stu-id="d2b97-103">Returns a <see cref="T:Microsoft.Build.Construction.ProjectRootElement" /> representing the imported project.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportingElement">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectImportElement ImportingElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ProjectImportElement ImportingElement" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ResolvedImport.ImportingElement" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ImportingElement As ProjectImportElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ProjectImportElement ^ ImportingElement { Microsoft::Build::Construction::ProjectImportElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ImportingElement : Microsoft.Build.Construction.ProjectImportElement" Usage="Microsoft.Build.Evaluation.ResolvedImport.ImportingElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectImportElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2b97-104">Obtém o elemento fazendo a importação.</span><span class="sxs-lookup"><span data-stu-id="d2b97-104">Gets the element doing the import.</span></span></summary>
        <value><span data-ttu-id="d2b97-105">Retorna o <see cref="T:Microsoft.Build.Construction.ProjectImportElement" /> que representa o elemento fazendo a importação.</span><span class="sxs-lookup"><span data-stu-id="d2b97-105">Returns the <see cref="T:Microsoft.Build.Construction.ProjectImportElement" /> representing the element doing the import.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsImported">
      <MemberSignature Language="C#" Value="public bool IsImported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsImported" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ResolvedImport.IsImported" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsImported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsImported { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsImported : bool" Usage="Microsoft.Build.Evaluation.ResolvedImport.IsImported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2b97-106">Obtém um sinalizador que determina se o elemento de importação é importado.</span><span class="sxs-lookup"><span data-stu-id="d2b97-106">Gets a flag which determines if the importing element is itself imported.</span></span></summary>
        <value><span data-ttu-id="d2b97-107">Retorna <see langword="true" /> se o elemento for importado, <see langword="false" /> caso contrário.</span><span class="sxs-lookup"><span data-stu-id="d2b97-107">Returns <see langword="true" /> if the element is imported, <see langword="false" /> otherwise.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>