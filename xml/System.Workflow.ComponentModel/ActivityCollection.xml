<Type Name="ActivityCollection" FullName="System.Workflow.ComponentModel.ActivityCollection">
  <TypeSignature Language="C#" Value="public sealed class ActivityCollection : System.Collections.Generic.List&lt;System.Workflow.ComponentModel.Activity&gt;, System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;, System.Collections.Generic.IEnumerable&lt;System.Workflow.ComponentModel.Activity&gt;, System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;, System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ActivityCollection extends System.Collections.Generic.List`1&lt;class System.Workflow.ComponentModel.Activity&gt; implements class System.Collections.Generic.ICollection`1&lt;class System.Workflow.ComponentModel.Activity&gt;, class System.Collections.Generic.IEnumerable`1&lt;class System.Workflow.ComponentModel.Activity&gt;, class System.Collections.Generic.IList`1&lt;class System.Workflow.ComponentModel.Activity&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.ActivityCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ActivityCollection&#xA;Inherits List(Of Activity)&#xA;Implements ICollection(Of Activity), IEnumerable(Of Activity), IList, IList(Of Activity)" />
  <TypeSignature Language="C++ CLI" Value="public ref class ActivityCollection sealed : System::Collections::Generic::List&lt;System::Workflow::ComponentModel::Activity ^&gt;, System::Collections::Generic::ICollection&lt;System::Workflow::ComponentModel::Activity ^&gt;, System::Collections::Generic::IEnumerable&lt;System::Workflow::ComponentModel::Activity ^&gt;, System::Collections::Generic::IList&lt;System::Workflow::ComponentModel::Activity ^&gt;, System::Collections::IList" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.Generic.List&lt;System.Workflow.ComponentModel.Activity&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">System.Workflow.ComponentModel.Activity</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Workflow.ComponentModel.Activity&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer(typeof(System.Workflow.ComponentModel.Serialization.ActivityCollectionMarkupSerializer), typeof(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="3e2ca-101">Modela um <see cref="T:System.Collections.ICollection" /> fortemente tipado do tipo <see cref="T:System.Workflow.ComponentModel.Activity" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-101">Models a strongly typed <see cref="T:System.Collections.ICollection" /> of type <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="3e2ca-102">Essa classe é usada para representar a lista de atividades filho para um <xref:System.Workflow.ComponentModel.CompositeActivity>.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-102">This class is used to represent the list of child activities for a <xref:System.Workflow.ComponentModel.CompositeActivity>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3e2ca-103">Chamar somente métodos derivados <xref:System.Collections.Generic.IList%601> e não <xref:System.Collections.Generic.List%601>, como o uso de <xref:System.Workflow.ComponentModel.ActivityCollection.Add%2A> adicionar atividades em vez de <xref:System.Collections.Generic.List%601.AddRange%2A>.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-103">Only call methods derived from <xref:System.Collections.Generic.IList%601> and not <xref:System.Collections.Generic.List%601>, such as using <xref:System.Workflow.ComponentModel.ActivityCollection.Add%2A> to add activities instead of <xref:System.Collections.Generic.List%601.AddRange%2A>.</span></span> <span data-ttu-id="3e2ca-104">Chamando métodos derivados <xref:System.Collections.Generic.List%601> terá consequências inesperadas.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-104">Calling methods derived from <xref:System.Collections.Generic.List%601> will have unexpected consequences.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e2ca-105">O exemplo a seguir mostra o acesso a <xref:System.Workflow.ComponentModel.ActivityCollection> que é membro de uma classe de atividade composta que contém todas as atividades filho.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-105">The following example shows access of the <xref:System.Workflow.ComponentModel.ActivityCollection> which is the member of a composite activity class containing all child activities.</span></span> <span data-ttu-id="3e2ca-106">Este exemplo de código é parte da amostra do SDK usando Throw e do arquivo de ThrowWorkflow.cs.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-106">This code example is part of the Using Throw SDK Sample and is from the ThrowWorkflow.cs file.</span></span> <span data-ttu-id="3e2ca-107">Para obter mais informações, consulte [usando a atividade de ThrowActivity](http://msdn.microsoft.com/library/82bc0fef-d78a-4750-82b4-e4cb397a10f1).</span><span class="sxs-lookup"><span data-stu-id="3e2ca-107">For more information, see [Using the ThrowActivity Activity](http://msdn.microsoft.com/library/82bc0fef-d78a-4750-82b4-e4cb397a10f1).</span></span>  
  
 [!code-csharp[WF_Samples#179](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#179)]
 [!code-vb[WF_Samples#179](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#179)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActivityCollection (System.Workflow.ComponentModel.Activity owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Workflow.ComponentModel.Activity owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.#ctor(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActivityCollection(System::Workflow::ComponentModel::Activity ^ owner);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="owner"><span data-ttu-id="3e2ca-108">O <see cref="T:System.Workflow.ComponentModel.Activity" /> designada como proprietário desta instância.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-108">The <see cref="T:System.Workflow.ComponentModel.Activity" /> designated as owning this instance.</span></span></param>
        <summary><span data-ttu-id="3e2ca-109">Inicializa uma nova instância da classe <see cref="T:System.Workflow.ComponentModel.ActivityCollection" />, inicializando uma <see cref="T:System.Workflow.ComponentModel.Activity" /> proprietária.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-109">Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.ActivityCollection" /> class, initializing an owner <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e2ca-110">Exemplo</span><span class="sxs-lookup"><span data-stu-id="3e2ca-110">Example</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3e2ca-111"><paramref name="owner" /> é uma referência nula (<see langword="Nothing" /> no Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="3e2ca-111"><paramref name="owner" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3e2ca-112"><paramref name="owner" /> não é um descendente de <see cref="T:System.Workflow.ComponentModel.Activity" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-112"><paramref name="owner" /> is not a descendent of <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Workflow.ComponentModel.Activity item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Workflow.ComponentModel.Activity item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.Add(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Workflow::ComponentModel::Activity ^ item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="3e2ca-113">O <see cref="T:System.Workflow.ComponentModel.Activity" /> a ser adicionado ao <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-113">The <see cref="T:System.Workflow.ComponentModel.Activity" /> to be added to the <see cref="T:System.Collections.ICollection" />.</span></span></param>
        <summary><span data-ttu-id="3e2ca-114">Adiciona o <see cref="T:System.Workflow.ComponentModel.Activity" /> ao <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-114">Adds the <see cref="T:System.Workflow.ComponentModel.Activity" /> to the <see cref="T:System.Collections.ICollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3e2ca-115">O exemplo a seguir mostra o acesso a <xref:System.Workflow.ComponentModel.ActivityCollection> que é membro de uma classe de atividade composta que contém todas as atividades filho.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-115">The following example shows access of the <xref:System.Workflow.ComponentModel.ActivityCollection> which is the member of a composite activity class containing all child activities.</span></span> <span data-ttu-id="3e2ca-116">Este exemplo ilustra o uso de <xref:System.Workflow.ComponentModel.ActivityCollection.Add%2A>.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-116">This example illustrates the use of <xref:System.Workflow.ComponentModel.ActivityCollection.Add%2A>.</span></span> <span data-ttu-id="3e2ca-117">Este exemplo de código é parte do exemplo Throw SDK e do arquivo de ThrowWorkflow.cs.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-117">This code example is part of the Throw SDK sample and is from the ThrowWorkflow.cs file.</span></span> <span data-ttu-id="3e2ca-118">Para obter mais informações, consulte [usando a atividade de ThrowActivity](http://msdn.microsoft.com/library/82bc0fef-d78a-4750-82b4-e4cb397a10f1).</span><span class="sxs-lookup"><span data-stu-id="3e2ca-118">For more information, see [Using the ThrowActivity Activity](http://msdn.microsoft.com/library/82bc0fef-d78a-4750-82b4-e4cb397a10f1).</span></span>  
  
 [!code-csharp[WF_Samples#179](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#179)]
 [!code-vb[WF_Samples#179](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#179)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3e2ca-119">Remove cada <see cref="T:System.Workflow.ComponentModel.Activity" /> do <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-119">Removes every <see cref="T:System.Workflow.ComponentModel.Activity" /> from the <see cref="T:System.Collections.ICollection" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Workflow.ComponentModel.Activity item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Workflow.ComponentModel.Activity item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.Contains(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As Activity) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Workflow::ComponentModel::Activity ^ item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="3e2ca-120">O <see cref="T:System.Workflow.ComponentModel.Activity" /> sendo testado para a associação.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-120">The <see cref="T:System.Workflow.ComponentModel.Activity" /> being tested for membership.</span></span></param>
        <summary><span data-ttu-id="3e2ca-121">Fornece um teste para associação do <see cref="T:System.Workflow.ComponentModel.Activity" /> no <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-121">Provides a test for membership of the <see cref="T:System.Workflow.ComponentModel.Activity" /> in the <see cref="T:System.Collections.ICollection" />.</span></span></summary>
        <returns>
          <span data-ttu-id="3e2ca-122"><see langword="true" /> se o <see cref="T:System.Workflow.ComponentModel.Activity" /> pertencer a <see cref="T:System.Collections.ICollection" />, caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-122"><see langword="true" /> if the <see cref="T:System.Workflow.ComponentModel.Activity" /> belongs to the <see cref="T:System.Collections.ICollection" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e2ca-123">Isso <xref:System.Collections.ICollection> é fortemente tipado.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-123">This <xref:System.Collections.ICollection> is type-safe.</span></span> <span data-ttu-id="3e2ca-124">Uma exceção de tempo de execução é gerada se o item não é do tipo <xref:System.Workflow.ComponentModel.Activity>.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-124">A run-time exception is raised if the item is not of type <xref:System.Workflow.ComponentModel.Activity>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.ActivityCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e2ca-125">Obtém o número de membros do <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-125">Gets the number of members of the <see cref="T:System.Collections.ICollection" />.</span></span></summary>
        <value><span data-ttu-id="3e2ca-126">O número de membros a <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-126">The number of members of the <see cref="T:System.Collections.ICollection" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;System.Workflow.ComponentModel.Activity&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerator`1&lt;class System.Workflow.ComponentModel.Activity&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerator&lt;System::Workflow::ComponentModel::Activity ^&gt; ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Workflow.ComponentModel.Activity&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3e2ca-127">Implementa uma interface de enumeração para o <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-127">Implements an enumeration interface to the <see cref="T:System.Collections.ICollection" />.</span></span></summary>
        <returns><span data-ttu-id="3e2ca-128">Retorna um enumerador que pode ser iterado por meio da instância <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-128">Returns an enumerator that can iterate through the <see cref="T:System.Collections.ReadOnlyCollectionBase" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e2ca-129">Enumeradores habilite somente leitura dos dados na coleção.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-129">Enumerators only enable reading the data in the collection.</span></span> <span data-ttu-id="3e2ca-130">Você não pode usar enumeradores para modificar a coleção subjacente.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-130">You cannot use enumerators to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="3e2ca-131">Para começar, o enumerador está posicionado antes do primeiro elemento na coleção.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-131">To begin, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="3e2ca-132"><xref:System.Collections.IEnumerator.Reset%2A> também traz o enumerador de volta para essa posição.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-132"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="3e2ca-133">AT isso posicionar, chamando <xref:System.Collections.IEnumerator.Current%2A> gera uma exceção.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-133">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> raises an exception.</span></span> <span data-ttu-id="3e2ca-134">Por isso, você deve chamar <xref:System.Collections.IEnumerator.MoveNext%2A> para avançar o enumerador até o primeiro elemento da coleção antes de ler o valor de <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-134">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="3e2ca-135"><xref:System.Collections.IEnumerator.Current%2A> retorna o mesmo objeto até <xref:System.Collections.IEnumerator.MoveNext%2A> ou <xref:System.Collections.IEnumerator.Reset%2A> ser chamado.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-135"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="3e2ca-136"><xref:System.Collections.IEnumerator.MoveNext%2A> define <xref:System.Collections.IEnumerator.Current%2A> como o próximo elemento.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-136"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="3e2ca-137">Após o final da coleção for passado, o enumerador está posicionado após o último elemento da coleção e chamada <xref:System.Collections.IEnumerator.MoveNext%2A> retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-137">After the end of the collection is passed, the enumerator is positioned after the last element in the collection, and calling <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="3e2ca-138">Se a última chamada <xref:System.Collections.IEnumerator.MoveNext%2A> retornou `false`, chamar <xref:System.Collections.IEnumerator.Current%2A> gera uma exceção.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-138">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> raises an exception.</span></span>  
  
 <span data-ttu-id="3e2ca-139">Para definir `Current` como o primeiro elemento da coleção novamente, é possível chamar `Reset` seguido de <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-139">To set `Current` to the first element of the collection again, you can call `Reset` followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="3e2ca-140">Um enumerador permanece válido desde que a coleção continue inalterada.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-140">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="3e2ca-141">Se forem feitas alterações à coleção, como adicionar, modificar ou excluir elementos, o enumerador é invalidado irreversivelmente e a próxima chamada para <xref:System.Collections.IEnumerator.MoveNext%2A> ou `Reset` gera um <xref:System.InvalidOperationException> .</span><span class="sxs-lookup"><span data-stu-id="3e2ca-141">If changes are made to the collection, such as adding, modifying or deleting elements, the enumerator is irreversibly invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or `Reset` raises an <xref:System.InvalidOperationException> .</span></span> <span data-ttu-id="3e2ca-142">Se a coleção é modificada entre <xref:System.Collections.IEnumerator.MoveNext%2A> e <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> retornará o elemento que está definido como, mesmo se o enumerador já é invalidado.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-142">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> will return the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="3e2ca-143">O enumerador não tem acesso exclusivo à coleção; por isso, a enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-143">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="3e2ca-144">Mesmo quando uma coleção é sincronizada, outros threads ainda podem modificar a coleção.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-144">Even when a collection is synchronized, other threads could still modify the collection.</span></span> <span data-ttu-id="3e2ca-145">Isso faz com que o enumerador gerar uma exceção.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-145">This causes the enumerator to raise an exception.</span></span> <span data-ttu-id="3e2ca-146">Para garantir thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração ou verificar as exceções resultantes das alterações feitas por outros threads.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-146">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Workflow.ComponentModel.Activity item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Workflow.ComponentModel.Activity item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.IndexOf(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As Activity) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Workflow::ComponentModel::Activity ^ item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.IndexOf(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="3e2ca-147">A atividade para a qual adquirir o índice.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-147">The activity for which to acquire the index.</span></span></param>
        <summary><span data-ttu-id="3e2ca-148">Obtém o índice do <see cref="T:System.Workflow.ComponentModel.Activity" /> no <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-148">Gets the index of the <see cref="T:System.Workflow.ComponentModel.Activity" /> in the <see cref="T:System.Collections.ICollection" />.</span></span></summary>
        <returns><span data-ttu-id="3e2ca-149">O índice da <see cref="T:System.Workflow.ComponentModel.Activity" /> no <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-149">The index of the <see cref="T:System.Workflow.ComponentModel.Activity" /> in the <see cref="T:System.Collections.ICollection" />.</span></span> <span data-ttu-id="3e2ca-150">Caso contrário -1 (se <see cref="T:System.Workflow.ComponentModel.Activity" /> não estiver no <see cref="T:System.Collections.ICollection" />).</span><span class="sxs-lookup"><span data-stu-id="3e2ca-150">Otherwise -1 (if <see cref="T:System.Workflow.ComponentModel.Activity" /> is not in the <see cref="T:System.Collections.ICollection" />).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e2ca-151">Essa coleção está fortemente tipado.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-151">This collection is type-safe.</span></span> <span data-ttu-id="3e2ca-152">Uma exceção de tempo de execução será gerada se um item não é do tipo <xref:System.Workflow.ComponentModel.Activity>.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-152">A run-time exception will be raised if an item is not of type <xref:System.Workflow.ComponentModel.Activity>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Workflow.ComponentModel.Activity item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Workflow.ComponentModel.Activity item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.Insert(System.Int32,System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, item As Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Workflow::ComponentModel::Activity ^ item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="3e2ca-153">Índice baseado em zero da coleção na qual inserir o item.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-153">Zero-based index of the collection at which to insert the item.</span></span></param>
        <param name="item"><span data-ttu-id="3e2ca-154">O <see cref="T:System.Workflow.ComponentModel.Activity" /> a ser inserido na coleção.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-154">The <see cref="T:System.Workflow.ComponentModel.Activity" /> to be inserted into the collection.</span></span></param>
        <summary><span data-ttu-id="3e2ca-155">Insere o item no índice no <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-155">Inserts the item at the index in the <see cref="T:System.Collections.ICollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e2ca-156">Isso <xref:System.Collections.ICollection> é o tipo de segurança.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-156">This <xref:System.Collections.ICollection> is type safe.</span></span> <span data-ttu-id="3e2ca-157">Uma exceção de tempo de execução será gerada se um item não é do tipo <xref:System.Workflow.ComponentModel.Activity>.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-157">A run-time exception is raised if an item is not of type <xref:System.Workflow.ComponentModel.Activity>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3e2ca-158">Obtém um item <see cref="T:System.Workflow.ComponentModel.Activity" /> no <see cref="T:System.Collections.ICollection" /> por nome ou índice.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-158">Gets an item <see cref="T:System.Workflow.ComponentModel.Activity" /> in the <see cref="T:System.Collections.ICollection" /> by name or index.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.Activity this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Activity Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.ActivityCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::Activity ^ default[int] { System::Workflow::ComponentModel::Activity ^ get(int index); void set(int index, System::Workflow::ComponentModel::Activity ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="3e2ca-159">Índice baseado em zero na <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-159">Zero-based index into the <see cref="T:System.Collections.ICollection" />.</span></span></param>
        <summary><span data-ttu-id="3e2ca-160">Obtém ou define a atividade no <see cref="T:System.Collections.ICollection" /> com base no índice.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-160">Gets or sets the activity in the <see cref="T:System.Collections.ICollection" /> based on the index.</span></span></summary>
        <value><span data-ttu-id="3e2ca-161">Uma atividade de membro do <see cref="T:System.Collections.ICollection" />, cujo índice no <see cref="T:System.Collections.ICollection" /> foi especificado na chamada.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-161">A member activity of the <see cref="T:System.Collections.ICollection" />, whose index in the <see cref="T:System.Collections.ICollection" /> was specified in the call.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3e2ca-162"><paramref name="index" /> não é um índice válido em <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-162"><paramref name="index" /> is not a valid index in <see cref="T:System.Collections.IList" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="3e2ca-163">A propriedade é definida e o <see cref="T:System.Collections.IList" /> é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-163">The property is set and the <see cref="T:System.Collections.IList" /> is read-only.</span></span></exception>
        <exception cref="T:System.Exception"><span data-ttu-id="3e2ca-164">Uma tentativa de definir para um <see cref="T:System.Object" /> que não é um <see cref="T:System.Workflow.ComponentModel.Activity" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-164">An attempt to set to an <see cref="T:System.Object" /> that is not an <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.Activity this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Activity Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.ActivityCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(key As String) As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::Activity ^ default[System::String ^] { System::Workflow::ComponentModel::Activity ^ get(System::String ^ key); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="3e2ca-165">Identificador exclusivo para a atividade no <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-165">Unique identifier for activity in the <see cref="T:System.Collections.ICollection" />.</span></span></param>
        <summary><span data-ttu-id="3e2ca-166">Obtém a atividade no <see cref="T:System.Collections.ICollection" /> com base na cadeia de caracteres que é uma chave exclusiva.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-166">Gets the activity in the <see cref="T:System.Collections.ICollection" /> based on the string which is a unique key.</span></span></summary>
        <value><span data-ttu-id="3e2ca-167">Um membro <see cref="T:System.Workflow.ComponentModel.Activity" /> do <see cref="T:System.Collections.ICollection" />; a chave no <see cref="T:System.Collections.ICollection" /> que foi especificado na chamada.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-167">A member <see cref="T:System.Workflow.ComponentModel.Activity" /> of the <see cref="T:System.Collections.ICollection" />; the key in the <see cref="T:System.Collections.ICollection" /> which was specified in the call.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e2ca-168">Se não houver nenhum <xref:System.Workflow.ComponentModel.Activity> no <xref:System.Collections.ICollection> com a chave especificada, será gerada uma exceção.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-168">If there is no <xref:System.Workflow.ComponentModel.Activity> in the <xref:System.Collections.ICollection> with specified key, an exception is raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs&gt; ListChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs&gt; ListChanged" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.ComponentModel.ActivityCollection.ListChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event ListChanged As EventHandler(Of ActivityCollectionChangeEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::ComponentModel::ActivityCollectionChangeEventArgs ^&gt; ^ ListChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e2ca-169">Gerado sempre que uma alteração é feita para o conteúdo desse <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-169">Raised whenever a change is made to the contents of this <see cref="T:System.Collections.ICollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e2ca-170">Nesse contexto, adicionando ou removendo membros gera o evento.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-170">In this context, adding or removing members raises the event.</span></span> <span data-ttu-id="3e2ca-171">Modificar um membro não gera esse evento.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-171">Modifying a member does not raise this event.</span></span>  
  
 <span data-ttu-id="3e2ca-172">Quando você cria um <xref:System.Workflow.ComponentModel.ActivityCollection> delegado, você identificar o método que manipulará o evento.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-172">When you create an <xref:System.Workflow.ComponentModel.ActivityCollection> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="3e2ca-173">Para associar o evento com o manipulador de eventos, adicione uma instância do representante ao evento.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-173">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="3e2ca-174">O manipulador de eventos é chamado sempre que o evento ocorre, a menos que você remova o representante.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-174">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="3e2ca-175">Para obter mais informações sobre delegados de manipulador de eventos, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="3e2ca-175">For more information about event-handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.Workflow.ComponentModel.Activity item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Remove(class System.Workflow.ComponentModel.Activity item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.Remove(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As Activity) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove(System::Workflow::ComponentModel::Activity ^ item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="3e2ca-176">A atividade a ser removida do <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-176">The activity to remove from the <see cref="T:System.Collections.ICollection" />.</span></span></param>
        <summary><span data-ttu-id="3e2ca-177">Remove a atividade especificada na chamada do <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-177">Removes the activity specified in the call from the <see cref="T:System.Collections.ICollection" />.</span></span></summary>
        <returns>
          <span data-ttu-id="3e2ca-178"><see langword="true" /> se a operação for bem-sucedida, caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-178"><see langword="true" /> if the operation succeeded; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e2ca-179">Isso <xref:System.Collections.ICollection> é o tipo de segurança.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-179">This <xref:System.Collections.ICollection> is type safe.</span></span> <span data-ttu-id="3e2ca-180">Uma exceção de tempo de execução será gerada se um item não é do tipo <xref:System.Workflow.ComponentModel.Activity>.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-180">A run-time exception is raised if an item is not of type <xref:System.Workflow.ComponentModel.Activity>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="3e2ca-181">Posição em um índice com base em zero para remover a atividade da coleção.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-181">Position in a zero-based index to remove the activity from the collection.</span></span></param>
        <summary><span data-ttu-id="3e2ca-182">Remove o <see cref="T:System.Workflow.ComponentModel.Activity" /> no <see cref="T:System.Collections.ICollection" /> no <paramref name="index" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-182">Removes the <see cref="T:System.Workflow.ComponentModel.Activity" /> in the <see cref="T:System.Collections.ICollection" /> at the specified <paramref name="index" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e2ca-183">Uma exceção de tempo de execução ocorre se o índice não é válido (fora do intervalo).</span><span class="sxs-lookup"><span data-stu-id="3e2ca-183">A run-time exception occurs if the index is not valid (out of range).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Add">
      <MemberSignature Language="C#" Value="void ICollection&lt;Activity&gt;.Add (System.Workflow.ComponentModel.Activity item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Add(class System.Workflow.ComponentModel.Activity item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection&lt;System#Workflow#ComponentModel#Activity&gt;#Add(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (item As Activity) Implements ICollection(Of Activity).Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Add(System::Workflow::ComponentModel::Activity ^ item) = System::Collections::Generic::ICollection&lt;System::Workflow::ComponentModel::Activity ^&gt;::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="3e2ca-184">O <see cref="T:System.Object" /> para adicionar ao <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-184">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="3e2ca-185">Adiciona um objeto ao <see cref="T:System.Collections.IList" /> no final do <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-185">Adds an object to the <see cref="T:System.Collections.IList" /> at the end of the <see cref="T:System.Collections.IList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e2ca-186">Gera uma exceção com a mensagem de erro "Error_InvalidListItem" se o <xref:System.Object> não é do tipo <xref:System.Workflow.ComponentModel.Activity>.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-186">Raises an exception with the error message "Error_InvalidListItem" if the <xref:System.Object> is not of type <xref:System.Workflow.ComponentModel.Activity>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Clear">
      <MemberSignature Language="C#" Value="void ICollection&lt;Activity&gt;.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection&lt;System#Workflow#ComponentModel#Activity&gt;#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements ICollection(Of Activity).Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Clear() = System::Collections::Generic::ICollection&lt;System::Workflow::ComponentModel::Activity ^&gt;::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3e2ca-187">Limpa todas as atividades do <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-187">Clears all activities from the <see cref="T:System.Collections.IList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e2ca-188">O <xref:System.Collections.CollectionBase.Count%2A> propriedade é zero após essa operação é concluída.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-188">The <xref:System.Collections.CollectionBase.Count%2A> property is zero after this operation is finished.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Contains">
      <MemberSignature Language="C#" Value="bool ICollection&lt;Activity&gt;.Contains (System.Workflow.ComponentModel.Activity item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Contains(class System.Workflow.ComponentModel.Activity item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection&lt;System#Workflow#ComponentModel#Activity&gt;#Contains(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (item As Activity) As Boolean Implements ICollection(Of Activity).Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Contains(System::Workflow::ComponentModel::Activity ^ item) = System::Collections::Generic::ICollection&lt;System::Workflow::ComponentModel::Activity ^&gt;::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="3e2ca-189">O <see cref="T:System.Object" /> a ser localizado no <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-189">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="3e2ca-190">Obtém um valor que indica se o <see cref="T:System.Object" /> é um membro da coleção.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-190">Gets a value that indicates whether the <see cref="T:System.Object" /> is a member of the collection.</span></span></summary>
        <returns>
          <span data-ttu-id="3e2ca-191"><see langword="true" /> se o valor estiver na coleção, caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-191"><see langword="true" /> if value is in the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e2ca-192">Gera uma exceção com a mensagem de erro "Error_InvalidListItem" se o <xref:System.Object> não é do tipo <xref:System.Workflow.ComponentModel.Activity>.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-192">Raises an exception with the error message "Error_InvalidListItem" if the <xref:System.Object> is not of type <xref:System.Workflow.ComponentModel.Activity>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection&lt;Activity&gt;.CopyTo (System.Workflow.ComponentModel.Activity[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.CopyTo(class System.Workflow.ComponentModel.Activity[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection&lt;System#Workflow#ComponentModel#Activity&gt;#CopyTo(System.Workflow.ComponentModel.Activity[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (array As Activity(), arrayIndex As Integer) Implements ICollection(Of Activity).CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.CopyTo(cli::array &lt;System::Workflow::ComponentModel::Activity ^&gt; ^ array, int arrayIndex) = System::Collections::Generic::ICollection&lt;System::Workflow::ComponentModel::Activity ^&gt;::CopyTo;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Workflow.ComponentModel.Activity[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="3e2ca-193">O <see cref="T:System.Array" /> que é o destino da operação de cópia.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-193">The <see cref="T:System.Array" /> which is the target of the copy operation.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="3e2ca-194">O índice baseado em zero dentro do <see cref="T:System.Collections.ICollection" /> em que a cópia é iniciada.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-194">The zero-based index within the <see cref="T:System.Collections.ICollection" /> where the copy starts.</span></span></param>
        <summary><span data-ttu-id="3e2ca-195">Copia os elementos do <see cref="T:System.Collections.ICollection" /> para um <see cref="T:System.Array" />, começando em um determinado índice <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-195">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3e2ca-196"><paramref name="array" /> é uma referência nula (<see langword="Nothing" /> no Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="3e2ca-196"><paramref name="array" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3e2ca-197"><paramref name="index" /> é menor que zero.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-197"><paramref name="index" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3e2ca-198"><paramref name="array" /> é multidimensional.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-198"><paramref name="array" /> is multidimensional.</span></span>  
  
 <span data-ttu-id="3e2ca-199"><paramref name="index" /> é igual ou maior que o comprimento de <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-199"><paramref name="index" /> is equal to or greater than the length of <paramref name="array" />.</span></span>  
  
 <span data-ttu-id="3e2ca-200">O número de elementos no <see cref="T:System.Collections.ICollection" /> de origem é maior que o espaço disponível de <paramref name="index" /> até o final do matriz de destino.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-200">The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination array.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="3e2ca-201">O tipo <see cref="T:System.Workflow.ComponentModel.Activity" /> não pode ser automaticamente convertido para o tipo do <paramref name="array" /> de destino.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-201">The type <see cref="T:System.Workflow.ComponentModel.Activity" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Count">
      <MemberSignature Language="C#" Value="int System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Count" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection&lt;System#Workflow#ComponentModel#Activity&gt;#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection(Of Activity).Count" />
      <MemberSignature Language="C++ CLI" Value="property int System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e2ca-202">Obtém o número de elementos contidos no <see cref="T:System.Collections.Generic.ICollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-202">Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></summary>
        <value><span data-ttu-id="3e2ca-203">O número de elementos contidos no <see cref="T:System.Collections.Generic.ICollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-203">The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection&lt;System#Workflow#ComponentModel#Activity&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of Activity).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e2ca-204">Obtém um valor que indica se o <see cref="T:System.Collections.IList" /> é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-204">Gets a value that indicates whether the <see cref="T:System.Collections.IList" /> is read-only.</span></span></summary>
        <value>
          <span data-ttu-id="3e2ca-205"><see langword="true" /> se o <see cref="T:System.Collections.IList" /> for somente leitura; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-205"><see langword="true" /> if the <see cref="T:System.Collections.IList" /> is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e2ca-206">Uma coleção que seja somente leitura não permite a adição, a remoção ou a modificação de elementos após a coleção ser criada.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-206">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Remove">
      <MemberSignature Language="C#" Value="bool ICollection&lt;Activity&gt;.Remove (System.Workflow.ComponentModel.Activity item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Remove(class System.Workflow.ComponentModel.Activity item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection&lt;System#Workflow#ComponentModel#Activity&gt;#Remove(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Function Remove (item As Activity) As Boolean Implements ICollection(Of Activity).Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Remove(System::Workflow::ComponentModel::Activity ^ item) = System::Collections::Generic::ICollection&lt;System::Workflow::ComponentModel::Activity ^&gt;::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="3e2ca-207">O objeto a remover do <see cref="T:System.Collections.Generic.ICollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-207">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></param>
        <summary><span data-ttu-id="3e2ca-208">Remove a primeira ocorrência de um objeto específico do <see cref="T:System.Collections.Generic.ICollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-208">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></summary>
        <returns>
          <span data-ttu-id="3e2ca-209"><see langword="true" /> se <paramref name="item" /> tiver sido removido com êxito do <see cref="T:System.Collections.Generic.ICollection`1" />; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-209"><see langword="true" /> if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="3e2ca-210">Esse método também retornará <see langword="false" /> se o <paramref name="item" /> não for encontrado no <see cref="T:System.Collections.Generic.ICollection`1" /> original.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-210">This method also returns <see langword="false" /> if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e2ca-211">Implementações podem variar em como elas determinam a igualdade de objetos; Por exemplo, <xref:System.Collections.Generic.List%601> usa <xref:System.Collections.Generic.Comparer%601.Default%2A>, enquanto, <xref:System.Collections.Generic.Dictionary%602> permite que o usuário especifique o <xref:System.Collections.Generic.IComparer%601> implementação a ser usado para comparação de chaves.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-211">Implementations can vary in how they determine equality of objects; for example, <xref:System.Collections.Generic.List%601> uses <xref:System.Collections.Generic.Comparer%601.Default%2A>, whereas, <xref:System.Collections.Generic.Dictionary%602> allows the user to specify the <xref:System.Collections.Generic.IComparer%601> implementation to use for comparing keys.</span></span>  
  
 <span data-ttu-id="3e2ca-212">Em coleções de elementos contíguos, como listas, os elementos que seguem o elemento removido sobem para ocupar o ponto vazio.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-212">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="3e2ca-213">Caso a coleção seja indexada, os índices dos elementos que são movidos também são atualizados.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-213">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="3e2ca-214">Este comportamento não se aplica às coleções em que elementos sejam agrupados conceitualmente em buckets, como uma tabela de hash.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-214">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="3e2ca-215">O <see langword="ICollection" /> é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-215">The <see langword="ICollection" /> is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Workflow.ComponentModel.Activity&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Workflow.ComponentModel.Activity&gt; IEnumerable&lt;Activity&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.Workflow.ComponentModel.Activity&gt; System.Collections.Generic.IEnumerable&lt;System.Workflow.ComponentModel.Activity&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IEnumerable&lt;System#Workflow#ComponentModel#Activity&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of Activity) Implements IEnumerable(Of Activity).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Workflow::ComponentModel::Activity ^&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Workflow.ComponentModel.Activity&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Workflow::ComponentModel::Activity ^&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Workflow.ComponentModel.Activity&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3e2ca-216">Retorna um enumerador que itera pela coleção.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-216">Returns an enumerator that iterates through the collection.</span></span></summary>
        <returns><span data-ttu-id="3e2ca-217">Um <see cref="T:System.Collections.Generic.IEnumerator`1" /> que pode ser usado para iterar pela coleção.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-217">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e2ca-218">A instrução `foreach` da linguagem C# (`for each` no C++, `For Each` no Visual Basic) oculta a complexidade dos enumeradores.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-218">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="3e2ca-219">Portanto, o uso de `foreach` é recomendado, em vez de manipular diretamente o enumerador.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-219">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="3e2ca-220">Os enumeradores podem ser usados para ler os dados na coleção, mas não podem ser usados para modificar a coleção subjacente.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-220">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="3e2ca-221">Inicialmente, o enumerador é posicionado antes do primeiro elemento da coleção.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-221">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="3e2ca-222">Nesta posição, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> está indefinido.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-222">At this position, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="3e2ca-223">Por isso, você deve chamar <xref:System.Collections.IEnumerator.MoveNext%2A> para avançar o enumerador até o primeiro elemento da coleção antes de ler o valor de <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-223">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span></span>  
  
 <span data-ttu-id="3e2ca-224"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> Retorna o mesmo objeto até <xref:System.Collections.IEnumerator.MoveNext%2A> é chamado.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-224"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="3e2ca-225"><xref:System.Collections.IEnumerator.MoveNext%2A> define <xref:System.Collections.Generic.IEnumerator%601.Current%2A> como o próximo elemento.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-225"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="3e2ca-226">Se <xref:System.Collections.IEnumerator.MoveNext%2A> passa o final da coleção, o enumerador está posicionado após o último elemento da coleção e <xref:System.Collections.IEnumerator.MoveNext%2A> retorna false.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-226">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns false.</span></span> <span data-ttu-id="3e2ca-227">Quando o enumerador está nessa posição, chamadas subsequentes para <xref:System.Collections.IEnumerator.MoveNext%2A> também retornará false.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-227">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return false.</span></span> <span data-ttu-id="3e2ca-228">Se a última chamada <xref:System.Collections.IEnumerator.MoveNext%2A> retornou falso, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> é indefinido.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-228">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned false, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="3e2ca-229">Não é possível definir <xref:System.Collections.Generic.IEnumerator%601.Current%2A> como o primeiro elemento da coleção novamente; você deve criar uma nova instância de enumerador em vez disso.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-229">You cannot set <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="3e2ca-230">Um enumerador permanece válido desde que a coleção continue inalterada.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-230">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="3e2ca-231">Se forem feitas alterações na coleção, como adicionar, modificar ou excluir elementos, o enumerador será invalidado de maneira irrevogável e seu comportamento permanecerá indefinido.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-231">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="3e2ca-232">O enumerador não tem acesso exclusivo à coleção; por isso, a enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-232">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="3e2ca-233">Para garantir acesso thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-233">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span> <span data-ttu-id="3e2ca-234">Para permitir que a coleção a ser acessado por vários threads para leitura e gravação, você deve implementar sua sincronização.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-234">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="3e2ca-235">As implementações padrão de coleções no namespace <xref:System.Collections.Generic> não são sincronizadas.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-235">Default implementations of collections in the <xref:System.Collections.Generic> namespace are not synchronized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;.IndexOf">
      <MemberSignature Language="C#" Value="int IList&lt;Activity&gt;.IndexOf (System.Workflow.ComponentModel.Activity item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;.IndexOf(class System.Workflow.ComponentModel.Activity item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList&lt;System#Workflow#ComponentModel#Activity&gt;#IndexOf(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (item As Activity) As Integer Implements IList(Of Activity).IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;.IndexOf(System::Workflow::ComponentModel::Activity ^ item) = System::Collections::Generic::IList&lt;System::Workflow::ComponentModel::Activity ^&gt;::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.IndexOf(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="3e2ca-236">O objeto a ser localizado no <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-236">The object to locate in the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="3e2ca-237">Determina o índice de um item específico em <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-237">Determines the index of a specific item in the <see cref="T:System.Collections.IList" />.</span></span></summary>
        <returns><span data-ttu-id="3e2ca-238">O índice de <paramref name="item" /> se encontrado na lista; caso contrário, -1.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-238">The index of <paramref name="item" /> if found in the list; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e2ca-239">Se um objeto ocorrer várias vezes na lista, o `IndexOf` método sempre retorna a primeira instância encontrada.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-239">If an object occurs multiple times in the list, the `IndexOf` method always returns the first instance found.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;.Insert">
      <MemberSignature Language="C#" Value="void IList&lt;Activity&gt;.Insert (int index, System.Workflow.ComponentModel.Activity item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;.Insert(int32 index, class System.Workflow.ComponentModel.Activity item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList&lt;System#Workflow#ComponentModel#Activity&gt;#Insert(System.Int32,System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, item As Activity) Implements IList(Of Activity).Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;.Insert(int index, System::Workflow::ComponentModel::Activity ^ item) = System::Collections::Generic::IList&lt;System::Workflow::ComponentModel::Activity ^&gt;::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="3e2ca-240">A posição baseada em zero da inserção.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-240">The zero-based position of the insertion.</span></span></param>
        <param name="item"><span data-ttu-id="3e2ca-241">O objeto a ser inserido.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-241">The object to insert.</span></span> <span data-ttu-id="3e2ca-242">Ela deve ser do tipo <see cref="T:System.Workflow.ComponentModel.Activity" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-242">It must be of type <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></param>
        <summary><span data-ttu-id="3e2ca-243">Insere um <see cref="T:System.Object" /> no <see cref="T:System.Collections.IList" /> no índice baseado em zero especificado.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-243">Inserts an <see cref="T:System.Object" /> into the <see cref="T:System.Collections.IList" /> at the zero-based index specified.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e2ca-244">Se o <xref:System.Object> não pode ser convertido em um <xref:System.Workflow.ComponentModel.Activity>, um personalizado <xref:System.Exception> é gerado.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-244">If the <xref:System.Object> cannot be cast to an <xref:System.Workflow.ComponentModel.Activity>, a custom <xref:System.Exception> is raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;.Item">
      <MemberSignature Language="C#" Value="System.Workflow.ComponentModel.Activity System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Activity System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList&lt;System#Workflow#ComponentModel#Activity&gt;#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Activity Implements IList(Of Activity).Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Workflow::ComponentModel::Activity ^ System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;.Item[int] { System::Workflow::ComponentModel::Activity ^ get(int index); void set(int index, System::Workflow::ComponentModel::Activity ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="3e2ca-245">O índice com base em zero do elemento a ser obtido ou definido.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-245">The zero-based index of the element to get or set.</span></span></param>
        <summary><span data-ttu-id="3e2ca-246">Obtém ou define o elemento no índice especificado.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-246">Gets or sets the element at the specified index.</span></span></summary>
        <value><span data-ttu-id="3e2ca-247">O <see cref="T:System.Object" /> no índice especificado.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-247">The <see cref="T:System.Object" /> at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e2ca-248">Esta propriedade fornece a capacidade de acessar um elemento específico na coleção usando a seguinte sintaxe: myCollection [index].</span><span class="sxs-lookup"><span data-stu-id="3e2ca-248">This property provides the ability to access a specific element in the collection by using the following syntax: myCollection[index].</span></span>  
  
 <span data-ttu-id="3e2ca-249">A linguagem c# usa o `this` palavra-chave para definir os indexadores em vez de implementar o `Item` propriedade.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-249">The C# language uses the `this` keyword to define the indexers instead of implementing the `Item` property.</span></span> <span data-ttu-id="3e2ca-250">Visual Basic implementa `Item` como uma propriedade padrão, que fornece a mesma funcionalidade de indexação.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-250">Visual Basic implements `Item` as a default property, which provides the same indexing functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3e2ca-251"><paramref name="index" /> não é um índice válido no <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-251"><paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="3e2ca-252">O <see langword="ICollection" /> é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-252">The <see langword="ICollection" /> is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;.RemoveAt">
      <MemberSignature Language="C#" Value="void IList&lt;Activity&gt;.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList&lt;System#Workflow#ComponentModel#Activity&gt;#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList(Of Activity).RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;.RemoveAt(int index) = System::Collections::Generic::IList&lt;System::Workflow::ComponentModel::Activity ^&gt;::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="3e2ca-253">O índice com base em zero do item a ser removido.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-253">The zero-based index of the item to remove.</span></span></param>
        <summary><span data-ttu-id="3e2ca-254">Remove o item <see cref="T:System.Collections.IList" /> no índice especificado.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-254">Removes the <see cref="T:System.Collections.IList" /> item at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e2ca-255">Em coleções de elementos contíguos, como listas, os elementos que seguem o elemento removido sobem para ocupar o ponto vazio.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-255">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="3e2ca-256">Caso a coleção seja indexada, os índices dos elementos que são movidos também são atualizados.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-256">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="3e2ca-257">Este comportamento não se aplica às coleções em que elementos sejam agrupados conceitualmente em buckets, como uma tabela de hash.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-257">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3e2ca-258"><paramref name="index" /> não é um índice válido no <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-258"><paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="3e2ca-259">O <see langword="ICollection" /> é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-259">The <see langword="ICollection" /> is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="3e2ca-260">O <see cref="T:System.Array" /> que é o destino da operação de cópia.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-260">The <see cref="T:System.Array" /> which is the target of the copy operation.</span></span></param>
        <param name="index"><span data-ttu-id="3e2ca-261">O índice baseado em zero dentro do <see cref="T:System.Collections.ICollection" /> em que a cópia é iniciada.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-261">The zero-based index within the <see cref="T:System.Collections.ICollection" /> where the copy starts.</span></span></param>
        <summary><span data-ttu-id="3e2ca-262">Copia os elementos do <see cref="T:System.Collections.ICollection" /> para um <see cref="T:System.Array" />, começando em um determinado índice <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-262">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e2ca-263">Obtém um valor que indica se o acesso a <see cref="T:System.Collections.Generic.ICollection`1" /> é sincronizado, que é thread-safe.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-263">Gets a value that indicates whether access to the <see cref="T:System.Collections.Generic.ICollection`1" /> is synchronized, that is thread-safe.</span></span></summary>
        <value>
          <span data-ttu-id="3e2ca-264"><see langword="true" /> Se acessar para o <see cref="T:System.Collections.Generic.ICollection`1" /> é sincronizada, ou seja, thread-safe; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-264"><see langword="true" /> if access to the <see cref="T:System.Collections.Generic.ICollection`1" /> is synchronized, that is, thread-safe; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e2ca-265"><xref:System.Collections.ICollection.SyncRoot%2A> Retorna um objeto, que pode ser usado para sincronizar o acesso a <xref:System.Collections.Generic.ICollection%601>.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-265"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object, which can be used to synchronize access to the <xref:System.Collections.Generic.ICollection%601>.</span></span>  
  
 <span data-ttu-id="3e2ca-266">Coleta a maioria das classes de <xref:System.Collections?displayProperty=nameWithType> namespace também implementam um `Synchronized` método, que fornece um wrapper sincronizado para a coleção subjacente.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-266">Most collection classes in the <xref:System.Collections?displayProperty=nameWithType> namespace also implement a `Synchronized` method, which provides a synchronized wrapper around the underlying collection.</span></span>  
  
 <span data-ttu-id="3e2ca-267">A enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-267">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="3e2ca-268">Mesmo quando uma coleção está sincronizada, outros threads ainda podem modificar a coleção, o que faz o enumerador lançar uma exceção.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-268">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="3e2ca-269">Para garantir thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração ou verificar as exceções resultantes das alterações feitas por outros threads.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-269">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e2ca-270">Obtém um objeto que pode ser usado para sincronizar o acesso ao <see cref="T:System.Collections.Generic.ICollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-270">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></summary>
        <value><span data-ttu-id="3e2ca-271">Um objeto que pode ser usado para sincronizar o acesso ao <see cref="T:System.Collections.Generic.ICollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-271">An object that can be used to synchronize access to the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e2ca-272">Para coleções cujo repositório subjacente não está disponível publicamente, a implementação esperada é retornar a instância atual.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-272">For collections whose underlying store is not publicly available, the expected implementation is to return the current instance.</span></span> <span data-ttu-id="3e2ca-273">Observe que o ponteiro para a instância atual pode não ser suficiente para coleções que agrupam outras coleções; aqueles devem retornar a coleção subjacente <xref:System.Collections.ICollection.SyncRoot%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-273">Note that the pointer to the current instance might not be sufficient for collections that wrap other collections; those should return the underlying collection <xref:System.Collections.ICollection.SyncRoot%2A> property.</span></span>  
  
 <span data-ttu-id="3e2ca-274">Coleta a maioria das classes de <xref:System.Collections?displayProperty=nameWithType> namespace também implementam um `Synchronized` método, que fornece um wrapper sincronizado para a coleção subjacente.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-274">Most collection classes in the <xref:System.Collections?displayProperty=nameWithType> namespace also implement a `Synchronized` method, which provides a synchronized wrapper around the underlying collection.</span></span> <span data-ttu-id="3e2ca-275">No entanto, as classes derivadas podem fornecer sua própria versão sincronizada de coleção usando o <xref:System.Workflow.ComponentModel.ActivityCollection.System%23Collections%23ICollection%23SyncRoot> propriedade.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-275">However, derived classes can provide their own synchronized version of the collection using the <xref:System.Workflow.ComponentModel.ActivityCollection.System%23Collections%23ICollection%23SyncRoot> property.</span></span> <span data-ttu-id="3e2ca-276">O código de sincronização necessário realizar operações no <xref:System.Workflow.ComponentModel.ActivityCollection.System%23Collections%23ICollection%23SyncRoot> propriedade da coleção, não diretamente na coleção.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-276">The synchronizing code must perform operations on the <xref:System.Workflow.ComponentModel.ActivityCollection.System%23Collections%23ICollection%23SyncRoot> property of the collection, not directly on the collection.</span></span> <span data-ttu-id="3e2ca-277">Isso garante a operação apropriada das coleções que são derivadas de outros objetos.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-277">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="3e2ca-278">Especificamente, ele mantém uma sincronização adequada com outros threads que podem ser simultaneamente modificando a instância de coleção.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-278">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the collection instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3e2ca-279">Retorna um <see cref="T:System.Collections.IEnumerator" /> que itera pelo <see cref="T:System.Collections.IList" /> subjacente.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-279">Returns an <see cref="T:System.Collections.IEnumerator" /> that iterates through the underlying <see cref="T:System.Collections.IList" />.</span></span></summary>
        <returns><span data-ttu-id="3e2ca-280">Um <see cref="T:System.Collections.IEnumerator" /> que pode ser usado para iterar pela coleção.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-280">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e2ca-281">Um <xref:System.Collections.IEnumerator> somente permite ler os dados na coleção.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-281">An <xref:System.Collections.IEnumerator> only allows for reading the data in the collection.</span></span> <span data-ttu-id="3e2ca-282">Não é possível usar um <xref:System.Collections.IEnumerator> para modificar a coleção subjacente.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-282">You cannot use an <xref:System.Collections.IEnumerator> to modify the underlying collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="3e2ca-283">O <see cref="T:System.Object" /> para adicionar ao <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-283">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="3e2ca-284">Adiciona um objeto ao <see cref="T:System.Collections.IList" /> no final do <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-284">Adds an object to the <see cref="T:System.Collections.IList" /> at the end of the <see cref="T:System.Collections.IList" />.</span></span></summary>
        <returns><span data-ttu-id="3e2ca-285">Retorna <see cref="T:System.Int32" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-285">Returns <see cref="T:System.Int32" />.</span></span>  
  
 <span data-ttu-id="3e2ca-286">O índice baseado em zero do <see cref="T:System.Object" /> que acabou de ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-286">The zero-based index of the <see cref="T:System.Object" /> that was just added.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3e2ca-287">Remove todos os <see cref="T:System.Workflow.ComponentModel.Activity" /> do <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-287">Removes all <see cref="T:System.Workflow.ComponentModel.Activity" /> from the <see cref="T:System.Collections.ICollection" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="3e2ca-288">O <see cref="T:System.Object" /> a ser localizado no <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-288">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="3e2ca-289">Obtém um valor que indica se o <see cref="T:System.Object" /> é um membro da coleção.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-289">Gets a value that indicates whether the <see cref="T:System.Object" /> is a member of the collection.</span></span></summary>
        <returns><span data-ttu-id="3e2ca-290">Retorna <see cref="T:System.Boolean" /><see langword="true" /> se <paramref name="value" /> está na coleção, caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-290">Returns <see cref="T:System.Boolean" /><see langword="true" /> if <paramref name="value" /> is in the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="3e2ca-291">O <see cref="T:System.Object" /> a ser indexado.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-291">The <see cref="T:System.Object" /> to be indexed.</span></span></param>
        <summary><span data-ttu-id="3e2ca-292">Obtém o índice baseado em zero do <see cref="T:System.Object" /> na coleção de atividades subjacente.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-292">Gets the zero-based index of the <see cref="T:System.Object" /> in the underlying activities collection.</span></span></summary>
        <returns><span data-ttu-id="3e2ca-293">O índice baseado em zero de <paramref name="value" /> na coleção de atividades subjacente ou -1 se não encontrado na coleção.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-293">The zero-based index of the <paramref name="value" /> in the underlying activities collection or -1 if not found in the collection.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3e2ca-294">O <paramref name="value" /> não é do tipo <see cref="T:System.Workflow.ComponentModel.Activity" /> e o objeto de exceção contém a mensagem de erro "Error_InvalidListItem".</span><span class="sxs-lookup"><span data-stu-id="3e2ca-294">The <paramref name="value" /> is not of type <see cref="T:System.Workflow.ComponentModel.Activity" /> and the exception object contains "Error_InvalidListItem" error message.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="3e2ca-295">A posição baseada em zero da inserção.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-295">The zero-based position of the insertion.</span></span></param>
        <param name="value"><span data-ttu-id="3e2ca-296">O objeto a ser inserido.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-296">The object to insert.</span></span> <span data-ttu-id="3e2ca-297">Ela deve ser do tipo <see cref="T:System.Workflow.ComponentModel.Activity" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-297">It must be of type <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></param>
        <summary><span data-ttu-id="3e2ca-298">Insere um <see cref="T:System.Object" /> no <see cref="T:System.Collections.IList" /> no índice baseado em zero especificado.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-298">Inserts an <see cref="T:System.Object" /> into the <see cref="T:System.Collections.IList" /> at the zero-based index specified.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e2ca-299">Obtém um valor que indica se o <see cref="T:System.Collections.IList" /> tem um tamanho fixo.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-299">Gets a value indicating whether the <see cref="T:System.Collections.IList" /> has a fixed size.</span></span></summary>
        <value>
          <span data-ttu-id="3e2ca-300"><see langword="true" /> se o <see cref="T:System.Collections.IList" /> tiver um valor fixo; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-300"><see langword="true" /> if the <see cref="T:System.Collections.IList" /> has a fixed size; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e2ca-301">Uma coleção com um tamanho fixo não permite a adição ou a remoção de elementos após a coleção ser criada, mas permite a modificação de elementos existentes.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-301">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e2ca-302">Obtém um valor que indica se o <see cref="T:System.Collections.Generic.ICollection`1" /> é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-302">Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="3e2ca-303">Retorna <see cref="T:System.Boolean" /> <see langword="true" /> se o <see cref="T:System.Collections.Generic.ICollection`1" /> é somente leitura; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-303">Returns <see cref="T:System.Boolean" /><see langword="true" /> if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="3e2ca-304">Índice baseado em zero na <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-304">Zero-based index into the <see cref="T:System.Collections.ICollection" />.</span></span></param>
        <summary><span data-ttu-id="3e2ca-305">Obtém ou define a atividade no <see cref="T:System.Collections.ICollection" /> com base no índice.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-305">Gets or sets the activity in the <see cref="T:System.Collections.ICollection" /> based on the index.</span></span></summary>
        <value><span data-ttu-id="3e2ca-306">Retorna <see cref="T:System.Object" />, uma atividade de membro do <see cref="T:System.Collections.ICollection" />, cujo índice no <see cref="T:System.Collections.ICollection" /> foi especificado na chamada.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-306">Returns <see cref="T:System.Object" />, a member activity of the <see cref="T:System.Collections.ICollection" />, whose index in the <see cref="T:System.Collections.ICollection" /> was specified in the call.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="3e2ca-307">O <see cref="T:System.Object" /> a ser removido de <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-307">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="3e2ca-308">Remove a primeira ocorrência de um objeto específico do <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-308">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e2ca-309">Os elementos que seguem o elemento removido mover para cima para ocupar o ponto vagas.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-309">The elements that follow the removed element move up to occupy the vacated spot.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="3e2ca-310">O <see cref="T:System.Collections.IList" /> é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-310">The <see cref="T:System.Collections.IList" /> is read-only.</span></span>  
  
 <span data-ttu-id="3e2ca-311">O <see cref="T:System.Collections.IList" /> tem um tamanho fixo.</span><span class="sxs-lookup"><span data-stu-id="3e2ca-311"><see cref="T:System.Collections.IList" /> has a fixed size.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>