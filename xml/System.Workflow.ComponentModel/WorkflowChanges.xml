<Type Name="WorkflowChanges" FullName="System.Workflow.ComponentModel.WorkflowChanges">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="435ddeb200c892fde1ad8dc6f3e64e7bbcd6449b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30686370" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class WorkflowChanges" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WorkflowChanges extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.WorkflowChanges" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WorkflowChanges" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowChanges sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa um conjunto de alterações propostas para uma instância de fluxo de trabalho em execução.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 Todas as propostas alterações para uma instância de fluxo de trabalho em execução devem ser feitas usando um <xref:System.Workflow.ComponentModel.WorkflowChanges> objeto.  
  
 Quando um <xref:System.Workflow.ComponentModel.WorkflowChanges> objeto for construído no código do aplicativo (fora da instância de fluxo de trabalho), o <xref:System.Workflow.ComponentModel.Activity> objeto que é passado para o construtor deve ser o objeto que é retornado pelo <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowDefinition%2A> método o <xref:System.Workflow.Runtime.WorkflowInstance> classe.  
  
   
  
## Examples  
 O exemplo a seguir demonstra como criar uma nova instância de um <xref:System.Workflow.ComponentModel.WorkflowChanges> objeto. Este exemplo é do exemplo de ordenação SDK da máquina de estado. Para obter mais informações, consulte [exemplo pedido de máquina de estado](http://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c).  
  
 [!code-csharp[WF_Samples#87](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#87)]
 [!code-vb[WF_Samples#87](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#87)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowChanges (System.Workflow.ComponentModel.Activity rootActivity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Workflow.ComponentModel.Activity rootActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.WorkflowChanges.#ctor(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rootActivity As Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowChanges(System::Workflow::ComponentModel::Activity ^ rootActivity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rootActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="rootActivity">A <see cref="T:System.Workflow.ComponentModel.Activity" /> raiz do fluxo de trabalho.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Workflow.ComponentModel.WorkflowChanges" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rootActivity" /> é uma referência nula (Visual Basic <see langword="Nothing" />).</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="rootActivity" /> não é um <see cref="T:System.Workflow.ComponentModel.CompositeActivity" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="rootActivity" /> está no modo de design.</exception>
      </Docs>
    </Member>
    <Member MemberName="ConditionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty ConditionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty ConditionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.ComponentModel.WorkflowChanges.ConditionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ConditionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ ConditionProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Especifica a condição que deve ser atendida para aplicar as <see cref="T:System.Workflow.ComponentModel.WorkflowChanges" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade pode ser definida em uma atividade raiz para desabilitar atualizações dinâmicas para o fluxo de trabalho em execução.  
  
 Quando a propriedade é definida na atividade raiz e condição for avaliada como `false`, as atualizações dinâmicas não são permitidas na instância do fluxo de trabalho. Se a condição for avaliada como `true`, ou a condição não for definida, as atualizações dinâmicas são permitidas.  
  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCondition">
      <MemberSignature Language="C#" Value="public static object GetCondition (object dependencyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetCondition(object dependencyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.WorkflowChanges.GetCondition(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCondition (dependencyObject As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetCondition(System::Object ^ dependencyObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">Um <see cref="T:System.Workflow.ComponentModel.DependencyObject" /> (ou tipo derivado) que contém uma propriedade de condição, como as atividades <see cref="T:System.Workflow.Activities.SequentialWorkflowActivity" /> e <see cref="T:System.Workflow.Activities.StateMachineWorkflowActivity" />.</param>
        <summary>Obtém a propriedade de condição em um objeto de dependência.</summary>
        <returns>Um tipo de propriedade de condição, como <see cref="T:System.Workflow.ComponentModel.ActivityCondition" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Workflow.ComponentModel.WorkflowChanges.ConditionProperty> é uma propriedade de dependência anexado, ou seja, ele é declarado e usado por um tipo e definido em outro. Portanto, deve haver estático `get` e `set` métodos no tipo de declaração de propriedade.  
  
 O método auxiliar para obter <xref:System.Workflow.ComponentModel.WorkflowChanges.ConditionProperty>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dependencyObject" /> é nulo (<see langword="Nothing" /> no Visual Basic).</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="dependencyObject" /> não é um <see cref="T:System.Workflow.ComponentModel.DependencyObject" /> nem um tipo que se deriva de <see cref="T:System.Workflow.ComponentModel.DependencyObject" />.</exception>
        <altmember cref="P:System.Workflow.Activities.SequentialWorkflowActivity.DynamicUpdateCondition" />
        <altmember cref="P:System.Workflow.Activities.StateMachineWorkflowActivity.DynamicUpdateCondition" />
      </Docs>
    </Member>
    <Member MemberName="SetCondition">
      <MemberSignature Language="C#" Value="public static void SetCondition (object dependencyObject, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCondition(object dependencyObject, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.WorkflowChanges.SetCondition(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetCondition (dependencyObject As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetCondition(System::Object ^ dependencyObject, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">Um <see cref="T:System.Workflow.ComponentModel.DependencyObject" /> (ou tipo derivado) que contém uma propriedade de condição, como as atividades <see cref="T:System.Workflow.Activities.SequentialWorkflowActivity" /> e <see cref="T:System.Workflow.Activities.StateMachineWorkflowActivity" />.</param>
        <param name="value">O tipo de condição a ser definida no objeto de dependência, como uma <see cref="T:System.Workflow.ComponentModel.ActivityCondition" />.</param>
        <summary>Define a propriedade de condição em um objeto de dependência.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Workflow.ComponentModel.WorkflowChanges.ConditionProperty> é uma propriedade de dependência anexado, ou seja, ele é declarado e usado por um tipo e definido em outro. Portanto, deve haver estático `get` e `set` métodos no tipo de declaração de propriedade.  
  
 Método auxiliar para configuração <xref:System.Workflow.ComponentModel.WorkflowChanges.ConditionProperty>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Workflow.Activities.SequentialWorkflowActivity.DynamicUpdateCondition" />
        <altmember cref="P:System.Workflow.Activities.StateMachineWorkflowActivity.DynamicUpdateCondition" />
      </Docs>
    </Member>
    <Member MemberName="TransientWorkflow">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.CompositeActivity TransientWorkflow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.CompositeActivity TransientWorkflow" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.WorkflowChanges.TransientWorkflow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TransientWorkflow As CompositeActivity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::CompositeActivity ^ TransientWorkflow { System::Workflow::ComponentModel::CompositeActivity ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.CompositeActivity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retorna uma árvore de atividades clonada na qual as alterações podem ser feitas e, em seguida, aplicadas à instância de fluxo de trabalho em execução.</summary>
        <value>Um <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> que contém a atividade raiz clonado para o fluxo de trabalho.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir demonstra a adicionar atividades à propriedade TransientWorkflow. Este exemplo é do exemplo de ordenação SDK da máquina de estado. Para obter mais informações, consulte [exemplo pedido de máquina de estado](http://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c).  
  
 [!code-csharp[WF_Samples#88](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#88)]
 [!code-vb[WF_Samples#88](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#88)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.Compiler.ValidationErrorCollection Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.ComponentModel.Compiler.ValidationErrorCollection Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.WorkflowChanges.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Function Validate () As ValidationErrorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::ComponentModel::Compiler::ValidationErrorCollection ^ Validate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Compiler.ValidationErrorCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Valida o conjunto atual de alterações propostas que foram feitas na árvore de atividades representada pela propriedade <see cref="P:System.Workflow.ComponentModel.WorkflowChanges.TransientWorkflow" />.</summary>
        <returns>Um objeto <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" /> que contém todos os erros ou avisos que ocorreram durante a validação.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>