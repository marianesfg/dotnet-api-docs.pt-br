<Type Name="IVsaItem" FullName="Microsoft.Vsa.IVsaItem">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1e87f4301ae07188590d131145284b76500992a5" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52611142" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IVsaItem" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IVsaItem" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Vsa.IVsaItem" />
  <TypeSignature Language="VB.NET" Value="Public Interface IVsaItem" />
  <TypeSignature Language="C++ CLI" Value="public interface class IVsaItem" />
  <TypeSignature Language="F#" Value="type IVsaItem = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Vsa</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Obsolete("Use of this type is not recommended because it is being deprecated in Visual Studio 2005; there will be no replacement for this feature. Please see the ICodeCompiler documentation for additional help.")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Runtime.InteropServices.Guid("E0C0FFE5-7eea-4ee5-b7e4-0080c7eb0b74")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Define uma interface para todos os itens adicionados ao mecanismo de script .NET, incluindo itens de código, itens de referência e itens globais. Define métodos e propriedades genéricos que se aplicam a todos os tipos de item reconhecidos pelo mecanismo.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetOption">
      <MemberSignature Language="C#" Value="public object GetOption (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetOption(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaItem.GetOption(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOption (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetOption(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetOption : string -&gt; obj" Usage="iVsaItem.GetOption name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">O nome da opção a ser recuperada.</param>
        <summary>Obtém opções específicas de implantação para um mecanismo de script.</summary>
        <returns>Retorna o valor da opção especificada.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaItem.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirty : bool" Usage="Microsoft.Vsa.IVsaItem.IsDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retorna um valor que indica se a representação na memória atual do item é diferente da representação persistente.</summary>
        <value>Retorna VERDADEIRO se o item está sujo e, portanto, requer salvamento; retornará false se o item não está sujo.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public Microsoft.Vsa.VsaItemType ItemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Vsa.VsaItemType ItemType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaItem.ItemType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemType As VsaItemType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Vsa::VsaItemType ItemType { Microsoft::Vsa::VsaItemType get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemType : Microsoft.Vsa.VsaItemType" Usage="Microsoft.Vsa.IVsaItem.ItemType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Vsa.VsaItemType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o tipo do objeto especificado, conforme determinado pelo método <see cref="M:Microsoft.Vsa.IVsaItems.CreateItem(System.String,Microsoft.Vsa.VsaItemType,Microsoft.Vsa.VsaItemFlag)" />.</summary>
        <value>Um tipo enumerados pelo <see cref="T:Microsoft.Vsa.VsaItemType" /> enumeração.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaItem.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="Microsoft.Vsa.IVsaItem.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Define ou obtém o nome do item.</summary>
        <value>Retorna o nome de literal de cadeia de caracteres do item.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOption">
      <MemberSignature Language="C#" Value="public void SetOption (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOption(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaItem.SetOption(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOption (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOption(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetOption : string * obj -&gt; unit" Usage="iVsaItem.SetOption (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">O nome da opção a ser definida.</param>
        <param name="value">O novo valor para a opção.</param>
        <summary>Define opções específicas de implantação para um mecanismo de script.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>