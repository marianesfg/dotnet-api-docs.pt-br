<Type Name="LinearGradientBrush" FullName="System.Drawing.Drawing2D.LinearGradientBrush">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f02c59326f582455b0a4457e232d1d6bb5216cdd" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36340674" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class LinearGradientBrush : System.Drawing.Brush" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LinearGradientBrush extends System.Drawing.Brush" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Drawing2D.LinearGradientBrush" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LinearGradientBrush&#xA;Inherits Brush" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinearGradientBrush sealed : System::Drawing::Brush" />
  <TypeSignature Language="F#" Value="type LinearGradientBrush = class&#xA;    inherit Brush" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Drawing.Brush</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="6208d-101">Encapsula um <see cref="T:System.Drawing.Brush" /> com um gradiente linear.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6208d-101">Encapsulates a <see cref="T:System.Drawing.Brush" /> with a linear gradient.</span>
      </span>
      <span data-ttu-id="6208d-102">Essa classe não pode ser herdada.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6208d-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6208d-103">Essa classe encapsula gradientes duas cores e gradientes várias cores personalizadas.</span><span class="sxs-lookup"><span data-stu-id="6208d-103">This class encapsulates both two-color gradients and custom multicolor gradients.</span></span>  
  
 <span data-ttu-id="6208d-104">Todos os gradientes lineares são definidos ao longo da linha especificada pela largura de um retângulo ou por dois pontos.</span><span class="sxs-lookup"><span data-stu-id="6208d-104">All linear gradients are defined along a line specified either by the width of a rectangle or by two points.</span></span>  
  
 <span data-ttu-id="6208d-105">Por padrão, um gradiente linear de duas cores é uma combinação linear mesmo horizontal da cor inicial para a cor final ao longo da linha especificada.</span><span class="sxs-lookup"><span data-stu-id="6208d-105">By default, a two-color linear gradient is an even horizontal linear blend from the starting color to the ending color along the specified line.</span></span> <span data-ttu-id="6208d-106">Personalizar o padrão de mesclagem usando o <xref:System.Drawing.Drawing2D.Blend> classe, o <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape%2A> métodos, ou o <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="6208d-106">Customize the blend pattern using the <xref:System.Drawing.Drawing2D.Blend> class, the <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape%2A> methods, or the <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape%2A> methods.</span></span> <span data-ttu-id="6208d-107">Personalizar a direção do gradiente especificando o <xref:System.Drawing.Drawing2D.LinearGradientMode> de enumeração ou o ângulo no construtor.</span><span class="sxs-lookup"><span data-stu-id="6208d-107">Customize the direction of the gradient by specifying the <xref:System.Drawing.Drawing2D.LinearGradientMode> enumeration or the angle in the constructor.</span></span>  
  
 <span data-ttu-id="6208d-108">Use o <xref:System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors%2A> propriedade para criar um gradiente de várias cores.</span><span class="sxs-lookup"><span data-stu-id="6208d-108">Use the <xref:System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors%2A> property to create a multicolor gradient.</span></span>  
  
 <span data-ttu-id="6208d-109">O <xref:System.Drawing.Drawing2D.LinearGradientBrush.Transform%2A> propriedade especifica uma transformação geométrica local aplicada ao gradiente.</span><span class="sxs-lookup"><span data-stu-id="6208d-109">The <xref:System.Drawing.Drawing2D.LinearGradientBrush.Transform%2A> property specifies a local geometric transform applied to the gradient.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6208d-110">O exemplo a seguir cria um horizontal <xref:System.Drawing.Drawing2D.LinearGradientBrush>; os componentes de cor linearmente alteram conforme você mover de uma coordenada horizontal de 0 para uma coordenada horizontal de 200.</span><span class="sxs-lookup"><span data-stu-id="6208d-110">The following example creates a horizontal <xref:System.Drawing.Drawing2D.LinearGradientBrush>; the color components change linearly as you move from a horizontal coordinate of 0 to a horizontal coordinate of 200.</span></span> <span data-ttu-id="6208d-111">Por exemplo, um ponto cuja primeira coordenada esteja a meio caminho entre 0 e 200 terá um componente azul a meio caminho entre 0 e 255.</span><span class="sxs-lookup"><span data-stu-id="6208d-111">For example, a point whose first coordinate is halfway between 0 and 200 will have a blue component that is halfway between 0 and 255.</span></span> <span data-ttu-id="6208d-112">Este exemplo é projetado para uso com o Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="6208d-112">This example is designed for use with Windows Forms.</span></span> <span data-ttu-id="6208d-113">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer o <xref:System.Windows.Forms.PaintEventArgs> `e`, que é um parâmetro de <xref:System.Windows.Forms.PaintEventHandler>.</span><span class="sxs-lookup"><span data-stu-id="6208d-113">The following code example is designed for use with Windows Forms, and it requires the <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of <xref:System.Windows.Forms.PaintEventHandler>.</span></span>  
  
 [!code-csharp[System.Drawing.UsingaGradientBrush#21](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.UsingaGradientBrush/CS/Class1.cs#21)]
 [!code-vb[System.Drawing.UsingaGradientBrush#21](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.UsingaGradientBrush/VB/Class1.vb#21)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6208d-114">Inicializa uma nova instância da classe <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> com os pontos e as cores especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-114">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class with the specified points and colors.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinearGradientBrush (System.Drawing.Point point1, System.Drawing.Point point2, System.Drawing.Color color1, System.Drawing.Color color2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Point point1, valuetype System.Drawing.Point point2, valuetype System.Drawing.Color color1, valuetype System.Drawing.Color color2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Point,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (point1 As Point, point2 As Point, color1 As Color, color2 As Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinearGradientBrush(System::Drawing::Point point1, System::Drawing::Point point2, System::Drawing::Color color1, System::Drawing::Color color2);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.LinearGradientBrush : System.Drawing.Point * System.Drawing.Point * System.Drawing.Color * System.Drawing.Color -&gt; System.Drawing.Drawing2D.LinearGradientBrush" Usage="new System.Drawing.Drawing2D.LinearGradientBrush (point1, point2, color1, color2)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="point1" Type="System.Drawing.Point" />
        <Parameter Name="point2" Type="System.Drawing.Point" />
        <Parameter Name="color1" Type="System.Drawing.Color" />
        <Parameter Name="color2" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="point1">
          <span data-ttu-id="6208d-115">Uma estrutura <see cref="T:System.Drawing.Point" /> que representa o ponto inicial do gradiente linear.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-115">A <see cref="T:System.Drawing.Point" /> structure that represents the starting point of the linear gradient.</span>
          </span>
        </param>
        <param name="point2">
          <span data-ttu-id="6208d-116">Uma estrutura <see cref="T:System.Drawing.Point" /> que representa o ponto de extremidade do gradiente linear.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-116">A <see cref="T:System.Drawing.Point" /> structure that represents the endpoint of the linear gradient.</span>
          </span>
        </param>
        <param name="color1">
          <span data-ttu-id="6208d-117">Uma estrutura <see cref="T:System.Drawing.Color" /> que representa a cor inicial do gradiente linear.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-117">A <see cref="T:System.Drawing.Color" /> structure that represents the starting color of the linear gradient.</span>
          </span>
        </param>
        <param name="color2">
          <span data-ttu-id="6208d-118">Uma estrutura <see cref="T:System.Drawing.Color" /> que representa a cor final do gradiente linear.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-118">A <see cref="T:System.Drawing.Color" /> structure that represents the ending color of the linear gradient.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6208d-119">Inicializa uma nova instância da classe <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> com os pontos e as cores especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-119">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class with the specified points and colors.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinearGradientBrush (System.Drawing.PointF point1, System.Drawing.PointF point2, System.Drawing.Color color1, System.Drawing.Color color2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.PointF point1, valuetype System.Drawing.PointF point2, valuetype System.Drawing.Color color1, valuetype System.Drawing.Color color2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.Color,System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (point1 As PointF, point2 As PointF, color1 As Color, color2 As Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinearGradientBrush(System::Drawing::PointF point1, System::Drawing::PointF point2, System::Drawing::Color color1, System::Drawing::Color color2);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.LinearGradientBrush : System.Drawing.PointF * System.Drawing.PointF * System.Drawing.Color * System.Drawing.Color -&gt; System.Drawing.Drawing2D.LinearGradientBrush" Usage="new System.Drawing.Drawing2D.LinearGradientBrush (point1, point2, color1, color2)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="point1" Type="System.Drawing.PointF" />
        <Parameter Name="point2" Type="System.Drawing.PointF" />
        <Parameter Name="color1" Type="System.Drawing.Color" />
        <Parameter Name="color2" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="point1">
          <span data-ttu-id="6208d-120">Uma estrutura <see cref="T:System.Drawing.PointF" /> que representa o ponto inicial do gradiente linear.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-120">A <see cref="T:System.Drawing.PointF" /> structure that represents the starting point of the linear gradient.</span>
          </span>
        </param>
        <param name="point2">
          <span data-ttu-id="6208d-121">Uma estrutura <see cref="T:System.Drawing.PointF" /> que representa o ponto de extremidade do gradiente linear.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-121">A <see cref="T:System.Drawing.PointF" /> structure that represents the endpoint of the linear gradient.</span>
          </span>
        </param>
        <param name="color1">
          <span data-ttu-id="6208d-122">Uma estrutura <see cref="T:System.Drawing.Color" /> que representa a cor inicial do gradiente linear.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-122">A <see cref="T:System.Drawing.Color" /> structure that represents the starting color of the linear gradient.</span>
          </span>
        </param>
        <param name="color2">
          <span data-ttu-id="6208d-123">Uma estrutura <see cref="T:System.Drawing.Color" /> que representa a cor final do gradiente linear.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-123">A <see cref="T:System.Drawing.Color" /> structure that represents the ending color of the linear gradient.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6208d-124">Inicializa uma nova instância da classe <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> com os pontos e as cores especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-124">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class with the specified points and colors.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinearGradientBrush (System.Drawing.Rectangle rect, System.Drawing.Color color1, System.Drawing.Color color2, System.Drawing.Drawing2D.LinearGradientMode linearGradientMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Rectangle rect, valuetype System.Drawing.Color color1, valuetype System.Drawing.Color color2, valuetype System.Drawing.Drawing2D.LinearGradientMode linearGradientMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinearGradientBrush(System::Drawing::Rectangle rect, System::Drawing::Color color1, System::Drawing::Color color2, System::Drawing::Drawing2D::LinearGradientMode linearGradientMode);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.LinearGradientBrush : System.Drawing.Rectangle * System.Drawing.Color * System.Drawing.Color * System.Drawing.Drawing2D.LinearGradientMode -&gt; System.Drawing.Drawing2D.LinearGradientBrush" Usage="new System.Drawing.Drawing2D.LinearGradientBrush (rect, color1, color2, linearGradientMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="color1" Type="System.Drawing.Color" />
        <Parameter Name="color2" Type="System.Drawing.Color" />
        <Parameter Name="linearGradientMode" Type="System.Drawing.Drawing2D.LinearGradientMode" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="6208d-125">Uma estrutura <see cref="T:System.Drawing.Rectangle" /> que especifica os limites de gradiente linear.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-125">A <see cref="T:System.Drawing.Rectangle" /> structure that specifies the bounds of the linear gradient.</span>
          </span>
        </param>
        <param name="color1">
          <span data-ttu-id="6208d-126">Uma estrutura <see cref="T:System.Drawing.Color" /> que representa a cor inicial do gradiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-126">A <see cref="T:System.Drawing.Color" /> structure that represents the starting color for the gradient.</span>
          </span>
        </param>
        <param name="color2">
          <span data-ttu-id="6208d-127">Uma estrutura <see cref="T:System.Drawing.Color" /> que representa a cor final do gradiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-127">A <see cref="T:System.Drawing.Color" /> structure that represents the ending color for the gradient.</span>
          </span>
        </param>
        <param name="linearGradientMode">
          <span data-ttu-id="6208d-128">Um elemento de enumeração <see cref="T:System.Drawing.Drawing2D.LinearGradientMode" /> que especifica a orientação do gradiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-128">A <see cref="T:System.Drawing.Drawing2D.LinearGradientMode" /> enumeration element that specifies the orientation of the gradient.</span>
          </span>
          <span data-ttu-id="6208d-129">A orientação determina os pontos inicial e final do gradiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-129">The orientation determines the starting and ending points of the gradient.</span>
          </span>
          <span data-ttu-id="6208d-130">Por exemplo, <see langword="LinearGradientMode.ForwardDiagonal" /> especifica que o ponto inicial é o canto superior esquerdo do retângulo e o ponto final é o canto inferior direito do retângulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-130">For example, <see langword="LinearGradientMode.ForwardDiagonal" /> specifies that the starting point is the upper-left corner of the rectangle and the ending point is the lower-right corner of the rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6208d-131">Cria uma nova instância da classe <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> com base em um retângulo, cores de início e fim e orientação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-131">Creates a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class based on a rectangle, starting and ending colors, and orientation.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinearGradientBrush (System.Drawing.Rectangle rect, System.Drawing.Color color1, System.Drawing.Color color2, float angle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Rectangle rect, valuetype System.Drawing.Color color1, valuetype System.Drawing.Color color2, float32 angle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rect As Rectangle, color1 As Color, color2 As Color, angle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinearGradientBrush(System::Drawing::Rectangle rect, System::Drawing::Color color1, System::Drawing::Color color2, float angle);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.LinearGradientBrush : System.Drawing.Rectangle * System.Drawing.Color * System.Drawing.Color * single -&gt; System.Drawing.Drawing2D.LinearGradientBrush" Usage="new System.Drawing.Drawing2D.LinearGradientBrush (rect, color1, color2, angle)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="color1" Type="System.Drawing.Color" />
        <Parameter Name="color2" Type="System.Drawing.Color" />
        <Parameter Name="angle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="6208d-132">Uma estrutura <see cref="T:System.Drawing.Rectangle" /> que especifica os limites de gradiente linear.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-132">A <see cref="T:System.Drawing.Rectangle" /> structure that specifies the bounds of the linear gradient.</span>
          </span>
        </param>
        <param name="color1">
          <span data-ttu-id="6208d-133">Uma estrutura <see cref="T:System.Drawing.Color" /> que representa a cor inicial do gradiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-133">A <see cref="T:System.Drawing.Color" /> structure that represents the starting color for the gradient.</span>
          </span>
        </param>
        <param name="color2">
          <span data-ttu-id="6208d-134">Uma estrutura <see cref="T:System.Drawing.Color" /> que representa a cor final do gradiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-134">A <see cref="T:System.Drawing.Color" /> structure that represents the ending color for the gradient.</span>
          </span>
        </param>
        <param name="angle">
          <span data-ttu-id="6208d-135">O ângulo, medido em graus no sentido horário do eixo x da linha de orientação do gradiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-135">The angle, measured in degrees clockwise from the x-axis, of the gradient's orientation line.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6208d-136">Cria uma nova instância da classe <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> com base em um retângulo, nas cores inicial e final e em um ângulo de orientação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-136">Creates a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class based on a rectangle, starting and ending colors, and an orientation angle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6208d-137">Todos os pontos ao longo de qualquer linha perpendicular à linha de orientação são da mesma cor.</span><span class="sxs-lookup"><span data-stu-id="6208d-137">All points along any line perpendicular to the orientation line are the same color.</span></span>  
  
 <span data-ttu-id="6208d-138">A linha inicial perpendicular à linha de orientação e passa por um dos cantos do retângulo.</span><span class="sxs-lookup"><span data-stu-id="6208d-138">The starting line is perpendicular to the orientation line and passes through one of the corners of the rectangle.</span></span> <span data-ttu-id="6208d-139">Todos os pontos na linha de início são a cor inicial.</span><span class="sxs-lookup"><span data-stu-id="6208d-139">All points on the starting line are the starting color.</span></span> <span data-ttu-id="6208d-140">Terminando linha perpendicular à linha de orientação e passa por um dos cantos do retângulo.</span><span class="sxs-lookup"><span data-stu-id="6208d-140">Then ending line is perpendicular to the orientation line and passes through one of the corners of the rectangle.</span></span> <span data-ttu-id="6208d-141">Todos os pontos na linha final são a cor final.</span><span class="sxs-lookup"><span data-stu-id="6208d-141">All points on the ending line are the ending color.</span></span>  
  
 <span data-ttu-id="6208d-142">O ângulo da linha de orientação determina quais cantos o início e término linhas de passagem.</span><span class="sxs-lookup"><span data-stu-id="6208d-142">The angle of the orientation line determines which corners the starting and ending lines pass through.</span></span> <span data-ttu-id="6208d-143">Por exemplo, se o ângulo estiver entre 0 e 90 graus, a linha inicial transmite o canto superior esquerdo e a linha final transmite o canto inferior direito.</span><span class="sxs-lookup"><span data-stu-id="6208d-143">For example, if the angle is between 0 and 90 degrees, the starting line passes through the upper-left corner, and the ending line passes through the lower-right corner.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinearGradientBrush (System.Drawing.RectangleF rect, System.Drawing.Color color1, System.Drawing.Color color2, System.Drawing.Drawing2D.LinearGradientMode linearGradientMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.RectangleF rect, valuetype System.Drawing.Color color1, valuetype System.Drawing.Color color2, valuetype System.Drawing.Drawing2D.LinearGradientMode linearGradientMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinearGradientBrush(System::Drawing::RectangleF rect, System::Drawing::Color color1, System::Drawing::Color color2, System::Drawing::Drawing2D::LinearGradientMode linearGradientMode);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.LinearGradientBrush : System.Drawing.RectangleF * System.Drawing.Color * System.Drawing.Color * System.Drawing.Drawing2D.LinearGradientMode -&gt; System.Drawing.Drawing2D.LinearGradientBrush" Usage="new System.Drawing.Drawing2D.LinearGradientBrush (rect, color1, color2, linearGradientMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="color1" Type="System.Drawing.Color" />
        <Parameter Name="color2" Type="System.Drawing.Color" />
        <Parameter Name="linearGradientMode" Type="System.Drawing.Drawing2D.LinearGradientMode" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="6208d-144">Uma estrutura <see cref="T:System.Drawing.RectangleF" /> que especifica os limites de gradiente linear.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-144">A <see cref="T:System.Drawing.RectangleF" /> structure that specifies the bounds of the linear gradient.</span>
          </span>
        </param>
        <param name="color1">
          <span data-ttu-id="6208d-145">Uma estrutura <see cref="T:System.Drawing.Color" /> que representa a cor inicial do gradiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-145">A <see cref="T:System.Drawing.Color" /> structure that represents the starting color for the gradient.</span>
          </span>
        </param>
        <param name="color2">
          <span data-ttu-id="6208d-146">Uma estrutura <see cref="T:System.Drawing.Color" /> que representa a cor final do gradiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-146">A <see cref="T:System.Drawing.Color" /> structure that represents the ending color for the gradient.</span>
          </span>
        </param>
        <param name="linearGradientMode">
          <span data-ttu-id="6208d-147">Um elemento de enumeração <see cref="T:System.Drawing.Drawing2D.LinearGradientMode" /> que especifica a orientação do gradiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-147">A <see cref="T:System.Drawing.Drawing2D.LinearGradientMode" /> enumeration element that specifies the orientation of the gradient.</span>
          </span>
          <span data-ttu-id="6208d-148">A orientação determina os pontos inicial e final do gradiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-148">The orientation determines the starting and ending points of the gradient.</span>
          </span>
          <span data-ttu-id="6208d-149">Por exemplo, <see langword="LinearGradientMode.ForwardDiagonal" /> especifica que o ponto inicial é o canto superior esquerdo do retângulo e o ponto final é o canto inferior direito do retângulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-149">For example, <see langword="LinearGradientMode.ForwardDiagonal" /> specifies that the starting point is the upper-left corner of the rectangle and the ending point is the lower-right corner of the rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6208d-150">Cria uma nova instância do <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> com base em um retângulo, nas cores inicial e final e em um modo de orientação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-150">Creates a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> based on a rectangle, starting and ending colors, and an orientation mode.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinearGradientBrush (System.Drawing.RectangleF rect, System.Drawing.Color color1, System.Drawing.Color color2, float angle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.RectangleF rect, valuetype System.Drawing.Color color1, valuetype System.Drawing.Color color2, float32 angle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rect As RectangleF, color1 As Color, color2 As Color, angle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinearGradientBrush(System::Drawing::RectangleF rect, System::Drawing::Color color1, System::Drawing::Color color2, float angle);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.LinearGradientBrush : System.Drawing.RectangleF * System.Drawing.Color * System.Drawing.Color * single -&gt; System.Drawing.Drawing2D.LinearGradientBrush" Usage="new System.Drawing.Drawing2D.LinearGradientBrush (rect, color1, color2, angle)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="color1" Type="System.Drawing.Color" />
        <Parameter Name="color2" Type="System.Drawing.Color" />
        <Parameter Name="angle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="6208d-151">Uma estrutura <see cref="T:System.Drawing.RectangleF" /> que especifica os limites de gradiente linear.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-151">A <see cref="T:System.Drawing.RectangleF" /> structure that specifies the bounds of the linear gradient.</span>
          </span>
        </param>
        <param name="color1">
          <span data-ttu-id="6208d-152">Uma estrutura <see cref="T:System.Drawing.Color" /> que representa a cor inicial do gradiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-152">A <see cref="T:System.Drawing.Color" /> structure that represents the starting color for the gradient.</span>
          </span>
        </param>
        <param name="color2">
          <span data-ttu-id="6208d-153">Uma estrutura <see cref="T:System.Drawing.Color" /> que representa a cor final do gradiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-153">A <see cref="T:System.Drawing.Color" /> structure that represents the ending color for the gradient.</span>
          </span>
        </param>
        <param name="angle">
          <span data-ttu-id="6208d-154">O ângulo, medido em graus no sentido horário do eixo x da linha de orientação do gradiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-154">The angle, measured in degrees clockwise from the x-axis, of the gradient's orientation line.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6208d-155">Cria uma nova instância da classe <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> com base em um retângulo, nas cores inicial e final e em um ângulo de orientação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-155">Creates a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class based on a rectangle, starting and ending colors, and an orientation angle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6208d-156">Todos os pontos ao longo de qualquer linha perpendicular à linha de orientação são da mesma cor.</span><span class="sxs-lookup"><span data-stu-id="6208d-156">All points along any line perpendicular to the orientation line are the same color.</span></span>  
  
 <span data-ttu-id="6208d-157">A linha inicial perpendicular à linha de orientação e passa por um dos cantos do retângulo.</span><span class="sxs-lookup"><span data-stu-id="6208d-157">The starting line is perpendicular to the orientation line and passes through one of the corners of the rectangle.</span></span> <span data-ttu-id="6208d-158">Todos os pontos na linha de início são a cor inicial.</span><span class="sxs-lookup"><span data-stu-id="6208d-158">All points on the starting line are the starting color.</span></span> <span data-ttu-id="6208d-159">Terminando linha perpendicular à linha de orientação e passa por um dos cantos do retângulo.</span><span class="sxs-lookup"><span data-stu-id="6208d-159">Then ending line is perpendicular to the orientation line and passes through one of the corners of the rectangle.</span></span> <span data-ttu-id="6208d-160">Todos os pontos na linha final são a cor final.</span><span class="sxs-lookup"><span data-stu-id="6208d-160">All points on the ending line are the ending color.</span></span>  
  
 <span data-ttu-id="6208d-161">O ângulo da linha de orientação determina quais cantos o início e término linhas de passagem.</span><span class="sxs-lookup"><span data-stu-id="6208d-161">The angle of the orientation line determines which corners the starting and ending lines pass through.</span></span> <span data-ttu-id="6208d-162">Por exemplo, se o ângulo estiver entre 0 e 90 graus, a linha inicial transmite o canto superior esquerdo e a linha final transmite o canto inferior direito.</span><span class="sxs-lookup"><span data-stu-id="6208d-162">For example, if the angle is between 0 and 90 degrees, the starting line passes through the upper-left corner, and the ending line passes through the lower-right corner.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinearGradientBrush (System.Drawing.Rectangle rect, System.Drawing.Color color1, System.Drawing.Color color2, float angle, bool isAngleScaleable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Rectangle rect, valuetype System.Drawing.Color color1, valuetype System.Drawing.Color color2, float32 angle, bool isAngleScaleable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rect As Rectangle, color1 As Color, color2 As Color, angle As Single, isAngleScaleable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinearGradientBrush(System::Drawing::Rectangle rect, System::Drawing::Color color1, System::Drawing::Color color2, float angle, bool isAngleScaleable);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.LinearGradientBrush : System.Drawing.Rectangle * System.Drawing.Color * System.Drawing.Color * single * bool -&gt; System.Drawing.Drawing2D.LinearGradientBrush" Usage="new System.Drawing.Drawing2D.LinearGradientBrush (rect, color1, color2, angle, isAngleScaleable)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="color1" Type="System.Drawing.Color" />
        <Parameter Name="color2" Type="System.Drawing.Color" />
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="isAngleScaleable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="6208d-163">Uma estrutura <see cref="T:System.Drawing.Rectangle" /> que especifica os limites de gradiente linear.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-163">A <see cref="T:System.Drawing.Rectangle" /> structure that specifies the bounds of the linear gradient.</span>
          </span>
        </param>
        <param name="color1">
          <span data-ttu-id="6208d-164">Uma estrutura <see cref="T:System.Drawing.Color" /> que representa a cor inicial do gradiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-164">A <see cref="T:System.Drawing.Color" /> structure that represents the starting color for the gradient.</span>
          </span>
        </param>
        <param name="color2">
          <span data-ttu-id="6208d-165">Uma estrutura <see cref="T:System.Drawing.Color" /> que representa a cor final do gradiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-165">A <see cref="T:System.Drawing.Color" /> structure that represents the ending color for the gradient.</span>
          </span>
        </param>
        <param name="angle">
          <span data-ttu-id="6208d-166">O ângulo, medido em graus no sentido horário do eixo x da linha de orientação do gradiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-166">The angle, measured in degrees clockwise from the x-axis, of the gradient's orientation line.</span>
          </span>
        </param>
        <param name="isAngleScaleable">
          <span data-ttu-id="6208d-167">Definido como <see langword="true" /> para especificar que o ângulo é afetado pela transformação associada a este <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-167">Set to <see langword="true" /> to specify that the angle is affected by the transform associated with this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6208d-168">Cria uma nova instância da classe <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> com base em um retângulo, nas cores inicial e final e em um ângulo de orientação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-168">Creates a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class based on a rectangle, starting and ending colors, and an orientation angle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6208d-169">Todos os pontos ao longo de qualquer linha perpendicular à linha de orientação são da mesma cor.</span><span class="sxs-lookup"><span data-stu-id="6208d-169">All points along any line perpendicular to the orientation line are the same color.</span></span>  
  
 <span data-ttu-id="6208d-170">A linha inicial perpendicular à linha de orientação e passa por um dos cantos do retângulo.</span><span class="sxs-lookup"><span data-stu-id="6208d-170">The starting line is perpendicular to the orientation line and passes through one of the corners of the rectangle.</span></span> <span data-ttu-id="6208d-171">Todos os pontos na linha de início são a cor inicial.</span><span class="sxs-lookup"><span data-stu-id="6208d-171">All points on the starting line are the starting color.</span></span> <span data-ttu-id="6208d-172">Terminando linha perpendicular à linha de orientação e passa por um dos cantos do retângulo.</span><span class="sxs-lookup"><span data-stu-id="6208d-172">Then ending line is perpendicular to the orientation line and passes through one of the corners of the rectangle.</span></span> <span data-ttu-id="6208d-173">Todos os pontos na linha final são a cor final.</span><span class="sxs-lookup"><span data-stu-id="6208d-173">All points on the ending line are the ending color.</span></span>  
  
 <span data-ttu-id="6208d-174">O ângulo da linha de orientação determina quais cantos o início e término linhas de passagem.</span><span class="sxs-lookup"><span data-stu-id="6208d-174">The angle of the orientation line determines which corners the starting and ending lines pass through.</span></span> <span data-ttu-id="6208d-175">Por exemplo, se o ângulo estiver entre 0 e 90 graus, a linha inicial transmite o canto superior esquerdo e a linha final transmite o canto inferior direito.</span><span class="sxs-lookup"><span data-stu-id="6208d-175">For example, if the angle is between 0 and 90 degrees, the starting line passes through the upper-left corner, and the ending line passes through the lower-right corner.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinearGradientBrush (System.Drawing.RectangleF rect, System.Drawing.Color color1, System.Drawing.Color color2, float angle, bool isAngleScaleable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.RectangleF rect, valuetype System.Drawing.Color color1, valuetype System.Drawing.Color color2, float32 angle, bool isAngleScaleable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rect As RectangleF, color1 As Color, color2 As Color, angle As Single, isAngleScaleable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinearGradientBrush(System::Drawing::RectangleF rect, System::Drawing::Color color1, System::Drawing::Color color2, float angle, bool isAngleScaleable);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.LinearGradientBrush : System.Drawing.RectangleF * System.Drawing.Color * System.Drawing.Color * single * bool -&gt; System.Drawing.Drawing2D.LinearGradientBrush" Usage="new System.Drawing.Drawing2D.LinearGradientBrush (rect, color1, color2, angle, isAngleScaleable)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="color1" Type="System.Drawing.Color" />
        <Parameter Name="color2" Type="System.Drawing.Color" />
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="isAngleScaleable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="6208d-176">Uma estrutura <see cref="T:System.Drawing.RectangleF" /> que especifica os limites de gradiente linear.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-176">A <see cref="T:System.Drawing.RectangleF" /> structure that specifies the bounds of the linear gradient.</span>
          </span>
        </param>
        <param name="color1">
          <span data-ttu-id="6208d-177">Uma estrutura <see cref="T:System.Drawing.Color" /> que representa a cor inicial do gradiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-177">A <see cref="T:System.Drawing.Color" /> structure that represents the starting color for the gradient.</span>
          </span>
        </param>
        <param name="color2">
          <span data-ttu-id="6208d-178">Uma estrutura <see cref="T:System.Drawing.Color" /> que representa a cor final do gradiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-178">A <see cref="T:System.Drawing.Color" /> structure that represents the ending color for the gradient.</span>
          </span>
        </param>
        <param name="angle">
          <span data-ttu-id="6208d-179">O ângulo, medido em graus no sentido horário do eixo x da linha de orientação do gradiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-179">The angle, measured in degrees clockwise from the x-axis, of the gradient's orientation line.</span>
          </span>
        </param>
        <param name="isAngleScaleable">
          <span data-ttu-id="6208d-180">Definido como <see langword="true" /> para especificar que o ângulo é afetado pela transformação associada a este <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-180">Set to <see langword="true" /> to specify that the angle is affected by the transform associated with this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6208d-181">Cria uma nova instância da classe <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> com base em um retângulo, nas cores inicial e final e em um ângulo de orientação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-181">Creates a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class based on a rectangle, starting and ending colors, and an orientation angle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6208d-182">Todos os pontos ao longo de qualquer linha perpendicular à linha de orientação são da mesma cor.</span><span class="sxs-lookup"><span data-stu-id="6208d-182">All points along any line perpendicular to the orientation line are the same color.</span></span>  
  
 <span data-ttu-id="6208d-183">A linha inicial perpendicular à linha de orientação e passa por um dos cantos do retângulo.</span><span class="sxs-lookup"><span data-stu-id="6208d-183">The starting line is perpendicular to the orientation line and passes through one of the corners of the rectangle.</span></span> <span data-ttu-id="6208d-184">Todos os pontos na linha de início são a cor inicial.</span><span class="sxs-lookup"><span data-stu-id="6208d-184">All points on the starting line are the starting color.</span></span> <span data-ttu-id="6208d-185">Terminando linha perpendicular à linha de orientação e passa por um dos cantos do retângulo.</span><span class="sxs-lookup"><span data-stu-id="6208d-185">Then ending line is perpendicular to the orientation line and passes through one of the corners of the rectangle.</span></span> <span data-ttu-id="6208d-186">Todos os pontos na linha final são a cor final.</span><span class="sxs-lookup"><span data-stu-id="6208d-186">All points on the ending line are the ending color.</span></span>  
  
 <span data-ttu-id="6208d-187">O ângulo da linha de orientação determina quais cantos o início e término linhas de passagem.</span><span class="sxs-lookup"><span data-stu-id="6208d-187">The angle of the orientation line determines which corners the starting and ending lines pass through.</span></span> <span data-ttu-id="6208d-188">Por exemplo, se o ângulo estiver entre 0 e 90 graus, a linha inicial transmite o canto superior esquerdo e a linha final transmite o canto inferior direito.</span><span class="sxs-lookup"><span data-stu-id="6208d-188">For example, if the angle is between 0 and 90 degrees, the starting line passes through the upper-left corner, and the ending line passes through the lower-right corner.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Blend">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.Blend Blend { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Drawing2D.Blend Blend" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.LinearGradientBrush.Blend" />
      <MemberSignature Language="VB.NET" Value="Public Property Blend As Blend" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::Blend ^ Blend { System::Drawing::Drawing2D::Blend ^ get(); void set(System::Drawing::Drawing2D::Blend ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Blend : System.Drawing.Drawing2D.Blend with get, set" Usage="System.Drawing.Drawing2D.LinearGradientBrush.Blend" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.Blend</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6208d-189">Obtém ou define um <see cref="T:System.Drawing.Drawing2D.Blend" /> que especifica posições e fatores que definem uma queda personalizada para o gradiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-189">Gets or sets a <see cref="T:System.Drawing.Drawing2D.Blend" /> that specifies positions and factors that define a custom falloff for the gradient.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6208d-190">Um <see cref="T:System.Drawing.Drawing2D.Blend" /> que representa uma queda personalizada para o gradiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-190">A <see cref="T:System.Drawing.Drawing2D.Blend" /> that represents a custom falloff for the gradient.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6208d-191">Um <xref:System.Drawing.Drawing2D.Blend> contém matrizes correspondentes de posições e fatores de mesclagem.</span><span class="sxs-lookup"><span data-stu-id="6208d-191">A <xref:System.Drawing.Drawing2D.Blend> contains corresponding arrays of blend factors and positions.</span></span> <span data-ttu-id="6208d-192">Os fatores blend especificam as porcentagens da cor inicial e final a cor a ser usada na posição correspondente.</span><span class="sxs-lookup"><span data-stu-id="6208d-192">The blend factors specify the percentages of the starting color and ending color to use at the corresponding position.</span></span> <span data-ttu-id="6208d-193">As posições são fornecidas como uma porcentagem da distância ao longo da linha de gradação.</span><span class="sxs-lookup"><span data-stu-id="6208d-193">The positions are given as a percentage of distance along the gradient line.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; obj" Usage="linearGradientBrush.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6208d-194">Cria uma cópia exata deste <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-194">Creates an exact copy of this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6208d-195">O <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> que esse método cria, convertido como um objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-195">The <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> this method creates, cast as an object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6208d-196">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, uma <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="6208d-196">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="6208d-197">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="6208d-197">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="6208d-198">Cria um novo <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span><span class="sxs-lookup"><span data-stu-id="6208d-198">Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span></span>  
  
-   <span data-ttu-id="6208d-199">Desenha uma elipse para a tela usando esse pincel.</span><span class="sxs-lookup"><span data-stu-id="6208d-199">Draws an ellipse to the screen using this brush.</span></span>  
  
-   <span data-ttu-id="6208d-200">Clones de <xref:System.Drawing.Drawing2D.LinearGradientBrush> (`clonedLGBrush`).</span><span class="sxs-lookup"><span data-stu-id="6208d-200">Clones the <xref:System.Drawing.Drawing2D.LinearGradientBrush> (`clonedLGBrush`).</span></span>  
  
-   <span data-ttu-id="6208d-201">Desenha uma elipse na tela diretamente abaixo da primeira elipse, usando o pincel clonado.</span><span class="sxs-lookup"><span data-stu-id="6208d-201">Draws an ellipse to the screen directly below the first ellipse, using the cloned brush.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CS/form1.cs#1)]
 [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GammaCorrection">
      <MemberSignature Language="C#" Value="public bool GammaCorrection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GammaCorrection" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.LinearGradientBrush.GammaCorrection" />
      <MemberSignature Language="VB.NET" Value="Public Property GammaCorrection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GammaCorrection { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.GammaCorrection : bool with get, set" Usage="System.Drawing.Drawing2D.LinearGradientBrush.GammaCorrection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6208d-202">Obtém ou define um valor que indica se a correção gama está habilitada para este <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-202">Gets or sets a value indicating whether gamma correction is enabled for this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6208d-203">O valor é <see langword="true" /> se a correção gama está habilitada para esta <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-203">The value is <see langword="true" /> if gamma correction is enabled for this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InterpolationColors">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.ColorBlend InterpolationColors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Drawing2D.ColorBlend InterpolationColors" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors" />
      <MemberSignature Language="VB.NET" Value="Public Property InterpolationColors As ColorBlend" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::ColorBlend ^ InterpolationColors { System::Drawing::Drawing2D::ColorBlend ^ get(); void set(System::Drawing::Drawing2D::ColorBlend ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InterpolationColors : System.Drawing.Drawing2D.ColorBlend with get, set" Usage="System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.ColorBlend</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6208d-204">Obtém ou define um <see cref="T:System.Drawing.Drawing2D.ColorBlend" /> que define um gradiente linear multicolorido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-204">Gets or sets a <see cref="T:System.Drawing.Drawing2D.ColorBlend" /> that defines a multicolor linear gradient.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6208d-205">Um <see cref="T:System.Drawing.Drawing2D.ColorBlend" /> que define um gradiente linear multicolorido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-205">A <see cref="T:System.Drawing.Drawing2D.ColorBlend" /> that defines a multicolor linear gradient.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6208d-206">Um <xref:System.Drawing.Drawing2D.ColorBlend> contém matrizes correspondentes de cores e de posições.</span><span class="sxs-lookup"><span data-stu-id="6208d-206">A <xref:System.Drawing.Drawing2D.ColorBlend> contains corresponding arrays of colors and positions.</span></span> <span data-ttu-id="6208d-207">As posições são valores entre 0 e 1 que especifica a porcentagem da distância ao longo da linha de gradação onde se encontra a cor correspondente.</span><span class="sxs-lookup"><span data-stu-id="6208d-207">The positions are values from 0 through 1 that specify the percentage of the distance along the gradient line where the corresponding color is located.</span></span>  
  
 <span data-ttu-id="6208d-208">A definição dessa propriedade cria um gradiente de várias cores com uma cor em cada posição ao longo da linha de gradação.</span><span class="sxs-lookup"><span data-stu-id="6208d-208">Setting this property creates a multicolor gradient with one color at each position along the gradient line.</span></span> <span data-ttu-id="6208d-209">A definição dessa propriedade anula todas as configurações de cor, a posição e queda anteriores para este <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span><span class="sxs-lookup"><span data-stu-id="6208d-209">Setting this property nullifies all previous color, position, and falloff settings for this <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LinearColors">
      <MemberSignature Language="C#" Value="public System.Drawing.Color[] LinearColors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color[] LinearColors" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.LinearGradientBrush.LinearColors" />
      <MemberSignature Language="VB.NET" Value="Public Property LinearColors As Color()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Drawing::Color&gt; ^ LinearColors { cli::array &lt;System::Drawing::Color&gt; ^ get(); void set(cli::array &lt;System::Drawing::Color&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LinearColors : System.Drawing.Color[] with get, set" Usage="System.Drawing.Drawing2D.LinearGradientBrush.LinearColors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6208d-210">Obtém ou define as cores inicial e final do gradiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-210">Gets or sets the starting and ending colors of the gradient.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6208d-211">Uma matriz de duas estruturas <see cref="T:System.Drawing.Color" /> que representa as cores inicial e final do gradiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-211">An array of two <see cref="T:System.Drawing.Color" /> structures that represents the starting and ending colors of the gradient.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MultiplyTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6208d-212">Multiplica o <see cref="T:System.Drawing.Drawing2D.Matrix" /> que representa a transformação geométrica local deste <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> pelo <see cref="T:System.Drawing.Drawing2D.Matrix" /> especificado acrescentando o <see cref="T:System.Drawing.Drawing2D.Matrix" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-212">Multiplies the <see cref="T:System.Drawing.Drawing2D.Matrix" /> that represents the local geometric transform of this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MultiplyTransform">
      <MemberSignature Language="C#" Value="public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MultiplyTransform(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MultiplyTransform(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.MultiplyTransform : System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="linearGradientBrush.MultiplyTransform matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <span data-ttu-id="6208d-213">O <see cref="T:System.Drawing.Drawing2D.Matrix" /> pelo qual multiplicar a transformação geométrica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-213">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which to multiply the geometric transform.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6208d-214">Multiplica o <see cref="T:System.Drawing.Drawing2D.Matrix" /> que representa a transformação geométrica local deste <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> pelo <see cref="T:System.Drawing.Drawing2D.Matrix" /> especificado acrescentando o <see cref="T:System.Drawing.Drawing2D.Matrix" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-214">Multiplies the <see cref="T:System.Drawing.Drawing2D.Matrix" /> that represents the local geometric transform of this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6208d-215">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform%2A>.</span><span class="sxs-lookup"><span data-stu-id="6208d-215">For an example, see <xref:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplyTransform">
      <MemberSignature Language="C#" Value="public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MultiplyTransform(class System.Drawing.Drawing2D.Matrix matrix, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MultiplyTransform(System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.MultiplyTransform : System.Drawing.Drawing2D.Matrix * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="linearGradientBrush.MultiplyTransform (matrix, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <span data-ttu-id="6208d-216">O <see cref="T:System.Drawing.Drawing2D.Matrix" /> pelo qual multiplicar a transformação geométrica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-216">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which to multiply the geometric transform.</span>
          </span>
        </param>
        <param name="order">
          <span data-ttu-id="6208d-217">Um <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> que especifica a ordem na qual multiplicar as duas matrizes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-217">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies in which order to multiply the two matrices.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6208d-218">Multiplica o <see cref="T:System.Drawing.Drawing2D.Matrix" /> que representa a transformação geométrica local deste <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> pelo <see cref="T:System.Drawing.Drawing2D.Matrix" /> especificado na ordem especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-218">Multiplies the <see cref="T:System.Drawing.Drawing2D.Matrix" /> that represents the local geometric transform of this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the specified order.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6208d-219">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, uma <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="6208d-219">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="6208d-220">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="6208d-220">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="6208d-221">Cria um novo <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span><span class="sxs-lookup"><span data-stu-id="6208d-221">Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span></span>  
  
-   <span data-ttu-id="6208d-222">Desenha uma elipse para a tela usando esse pincel.</span><span class="sxs-lookup"><span data-stu-id="6208d-222">Draws an ellipse to the screen using this brush.</span></span>  
  
-   <span data-ttu-id="6208d-223">Chamadas de <xref:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform%2A> método para transformar o <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span><span class="sxs-lookup"><span data-stu-id="6208d-223">Calls the <xref:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform%2A> method, to transform the <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span></span>  
  
-   <span data-ttu-id="6208d-224">Desenha uma elipse na tela diretamente abaixo da primeira elipse, usando o pincel transformado.</span><span class="sxs-lookup"><span data-stu-id="6208d-224">Draws an ellipse to the screen directly below the first ellipse, using the transformed brush.</span></span>  
  
 <span data-ttu-id="6208d-225">Observe que a elipse inferior é alongada na direção horizontal, e que o gradiente é esticado para coincidir com a nova forma.</span><span class="sxs-lookup"><span data-stu-id="6208d-225">Notice that the lower ellipse is stretched in the horizontal direction, and that the gradient is stretched to match the new shape.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CS/form1.cs#2)]
 [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rectangle">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF Rectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.RectangleF Rectangle" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.LinearGradientBrush.Rectangle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rectangle As RectangleF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::RectangleF Rectangle { System::Drawing::RectangleF get(); };" />
      <MemberSignature Language="F#" Value="member this.Rectangle : System.Drawing.RectangleF" Usage="System.Drawing.Drawing2D.LinearGradientBrush.Rectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6208d-226">Obtém uma região retangular que define os pontos inicial e final do gradiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-226">Gets a rectangular region that defines the starting and ending points of the gradient.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6208d-227">Um <see cref="T:System.Drawing.RectangleF" /> estrutura que especifica o início e término pontos do gradiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-227">A <see cref="T:System.Drawing.RectangleF" /> structure that specifies the starting and ending points of the gradient.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6208d-228">O lado esquerdo do retângulo Especifica o ponto inicial do gradiente linear e à direita do retângulo Especifica o ponto de extremidade.</span><span class="sxs-lookup"><span data-stu-id="6208d-228">The left side of the rectangle specifies the starting point of the linear gradient, and the right side of the rectangle specifies the endpoint.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetTransform">
      <MemberSignature Language="C#" Value="public void ResetTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetTransform() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetTransform ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetTransform();" />
      <MemberSignature Language="F#" Value="member this.ResetTransform : unit -&gt; unit" Usage="linearGradientBrush.ResetTransform " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6208d-229">Redefine a propriedade <see cref="P:System.Drawing.Drawing2D.LinearGradientBrush.Transform" /> para a identidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-229">Resets the <see cref="P:System.Drawing.Drawing2D.LinearGradientBrush.Transform" /> property to identity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6208d-230">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, uma <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="6208d-230">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="6208d-231">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="6208d-231">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="6208d-232">Cria um novo <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span><span class="sxs-lookup"><span data-stu-id="6208d-232">Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span></span>  
  
-   <span data-ttu-id="6208d-233">Desenha uma elipse para a tela usando esse pincel.</span><span class="sxs-lookup"><span data-stu-id="6208d-233">Draws an ellipse to the screen using this brush.</span></span>  
  
-   <span data-ttu-id="6208d-234">Chamadas de <xref:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform%2A> método para transformar o <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span><span class="sxs-lookup"><span data-stu-id="6208d-234">Calls the <xref:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform%2A> method to transform the <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span></span>  
  
-   <span data-ttu-id="6208d-235">Desenha uma elipse na tela diretamente abaixo da primeira elipse, usando o pincel transformado.</span><span class="sxs-lookup"><span data-stu-id="6208d-235">Draws an ellipse to the screen directly below the first ellipse, using the transformed brush.</span></span>  
  
-   <span data-ttu-id="6208d-236">Redefine a transformação.</span><span class="sxs-lookup"><span data-stu-id="6208d-236">Resets the transform.</span></span>  
  
-   <span data-ttu-id="6208d-237">Desenha uma elipse terceira para a tela abaixo as duas primeiras.</span><span class="sxs-lookup"><span data-stu-id="6208d-237">Draws a third ellipse to the screen below the first two.</span></span>  
  
 <span data-ttu-id="6208d-238">Observe que a elipse mais baixa é desenhada do mesmo tamanho como a primeira e que, devido à chamada para o <xref:System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform%2A> método, o gradiente foi reduzido para corresponder.</span><span class="sxs-lookup"><span data-stu-id="6208d-238">Notice that the lowest ellipse is drawn the same size as the first, and that, due to the call to the <xref:System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform%2A> method, the gradient has been reduced to match.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CS/form1.cs#3)]
 [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RotateTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6208d-239">Gira a transformação geométrica local pelo valor especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-239">Rotates the local geometric transform by the specified amount.</span>
          </span>
          <span data-ttu-id="6208d-240">Esse método acrescenta a rotação ao começo da transformação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-240">This method prepends the rotation to the transform.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RotateTransform">
      <MemberSignature Language="C#" Value="public void RotateTransform (float angle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateTransform(float32 angle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateTransform (angle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateTransform(float angle);" />
      <MemberSignature Language="F#" Value="member this.RotateTransform : single -&gt; unit" Usage="linearGradientBrush.RotateTransform angle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="angle">
          <span data-ttu-id="6208d-241">O ângulo de rotação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-241">The angle of rotation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6208d-242">Gira a transformação geométrica local pelo valor especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-242">Rotates the local geometric transform by the specified amount.</span>
          </span>
          <span data-ttu-id="6208d-243">Esse método acrescenta a rotação ao começo da transformação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-243">This method prepends the rotation to the transform.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6208d-244">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform%2A>.</span><span class="sxs-lookup"><span data-stu-id="6208d-244">For an example, see <xref:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotateTransform">
      <MemberSignature Language="C#" Value="public void RotateTransform (float angle, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateTransform(float32 angle, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateTransform (angle As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateTransform(float angle, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.RotateTransform : single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="linearGradientBrush.RotateTransform (angle, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="angle">
          <span data-ttu-id="6208d-245">O ângulo de rotação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-245">The angle of rotation.</span>
          </span>
        </param>
        <param name="order">
          <span data-ttu-id="6208d-246">Um <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> que especifica se é necessário acrescentar algo ao começo ou no fim da matriz de rotação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-246">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies whether to append or prepend the rotation matrix.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6208d-247">Gira a transformação geométrica local pela quantidade especificada na ordem especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-247">Rotates the local geometric transform by the specified amount in the specified order.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6208d-248">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, uma <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="6208d-248">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="6208d-249">O código</span><span class="sxs-lookup"><span data-stu-id="6208d-249">The code</span></span>  
  
-   <span data-ttu-id="6208d-250">Cria um novo <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span><span class="sxs-lookup"><span data-stu-id="6208d-250">Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span></span>  
  
-   <span data-ttu-id="6208d-251">Desenha uma elipse para a tela usando esse pincel.</span><span class="sxs-lookup"><span data-stu-id="6208d-251">Draws an ellipse to the screen using this brush.</span></span>  
  
-   <span data-ttu-id="6208d-252">Gira o <xref:System.Drawing.Drawing2D.LinearGradientBrush> 45 graus chamando o <xref:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform%2A> método.</span><span class="sxs-lookup"><span data-stu-id="6208d-252">Rotates the <xref:System.Drawing.Drawing2D.LinearGradientBrush> 45 degrees by calling the <xref:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform%2A> method.</span></span>  
  
-   <span data-ttu-id="6208d-253">Desenha uma elipse na tela diretamente abaixo da elipse primeiro, usando o pincel girado.</span><span class="sxs-lookup"><span data-stu-id="6208d-253">Draws an ellipse to the screen directly below the first ellipse, using the rotated brush.</span></span>  
  
 <span data-ttu-id="6208d-254">Observe que o gradiente da elipse inferior é em um ângulo de 45 graus para o eixo x da elipse superior.</span><span class="sxs-lookup"><span data-stu-id="6208d-254">Notice that the gradient of the lower ellipse is at a 45 degree angle to the x-axis of the top ellipse.</span></span> <span data-ttu-id="6208d-255">Observe também que uma chamada para o <xref:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform%2A> método é usado para justificar a borda esquerda do preenchimento de gradiente com a borda esquerda da elipse inferior.</span><span class="sxs-lookup"><span data-stu-id="6208d-255">Also notice that a call to the <xref:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform%2A> method is used to justify the left edge of the gradient fill with the left edge of the lower ellipse.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CS/form1.cs#4)]
 [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ScaleTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6208d-256">Coloca a transformação geométrica local em escala pelos valores especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-256">Scales the local geometric transform by the specified amounts.</span>
          </span>
          <span data-ttu-id="6208d-257">Esse método acrescenta a matriz de colocação em escala ao começo da transformação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-257">This method prepends the scaling matrix to the transform.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ScaleTransform">
      <MemberSignature Language="C#" Value="public void ScaleTransform (float sx, float sy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScaleTransform(float32 sx, float32 sy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleTransform (sx As Single, sy As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScaleTransform(float sx, float sy);" />
      <MemberSignature Language="F#" Value="member this.ScaleTransform : single * single -&gt; unit" Usage="linearGradientBrush.ScaleTransform (sx, sy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sx" Type="System.Single" />
        <Parameter Name="sy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="sx">
          <span data-ttu-id="6208d-258">O valor pelo qual colocar a transformação em escala na direção do eixo x.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-258">The amount by which to scale the transform in the x-axis direction.</span>
          </span>
        </param>
        <param name="sy">
          <span data-ttu-id="6208d-259">O valor pelo qual colocar em escala a transformação na direção do eixo y.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-259">The amount by which to scale the transform in the y-axis direction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6208d-260">Coloca a transformação geométrica local em escala pelos valores especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-260">Scales the local geometric transform by the specified amounts.</span>
          </span>
          <span data-ttu-id="6208d-261">Esse método acrescenta a matriz de colocação em escala ao começo da transformação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-261">This method prepends the scaling matrix to the transform.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6208d-262">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform%2A>.</span><span class="sxs-lookup"><span data-stu-id="6208d-262">For an example, see <xref:System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleTransform">
      <MemberSignature Language="C#" Value="public void ScaleTransform (float sx, float sy, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScaleTransform(float32 sx, float32 sy, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleTransform (sx As Single, sy As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScaleTransform(float sx, float sy, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.ScaleTransform : single * single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="linearGradientBrush.ScaleTransform (sx, sy, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sx" Type="System.Single" />
        <Parameter Name="sy" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="sx">
          <span data-ttu-id="6208d-263">O valor pelo qual colocar a transformação em escala na direção do eixo x.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-263">The amount by which to scale the transform in the x-axis direction.</span>
          </span>
        </param>
        <param name="sy">
          <span data-ttu-id="6208d-264">O valor pelo qual colocar em escala a transformação na direção do eixo y.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-264">The amount by which to scale the transform in the y-axis direction.</span>
          </span>
        </param>
        <param name="order">
          <span data-ttu-id="6208d-265">Um <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> que especifica se o acréscimo à matriz de colocação em escala deve ser no início ou no fim.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-265">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies whether to append or prepend the scaling matrix.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6208d-266">Escalas a transformação geométrica local pelos valores especificados na ordem especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-266">Scales the local geometric transform by the specified amounts in the specified order.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6208d-267">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, uma <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="6208d-267">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="6208d-268">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="6208d-268">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="6208d-269">Cria um novo <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span><span class="sxs-lookup"><span data-stu-id="6208d-269">Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span></span>  
  
-   <span data-ttu-id="6208d-270">Desenha uma elipse à tela usando esse pincel.</span><span class="sxs-lookup"><span data-stu-id="6208d-270">Draw an ellipse to the screen using this brush.</span></span>  
  
-   <span data-ttu-id="6208d-271">Dimensiona o <xref:System.Drawing.Drawing2D.LinearGradientBrush> por um fator de dois no eixo x.</span><span class="sxs-lookup"><span data-stu-id="6208d-271">Scales the <xref:System.Drawing.Drawing2D.LinearGradientBrush> by a factor of two in the x-axis.</span></span>  
  
-   <span data-ttu-id="6208d-272">Desenha uma elipse na tela diretamente abaixo da elipse primeiro, usando o pincel em escala.</span><span class="sxs-lookup"><span data-stu-id="6208d-272">Draws an ellipse to the screen directly below the first ellipse, using the scaled brush.</span></span>  
  
 <span data-ttu-id="6208d-273">Observe que o gradiente da elipse inferior é ampliado por um fator de dois.</span><span class="sxs-lookup"><span data-stu-id="6208d-273">Notice that the gradient of the lower ellipse is stretched by a factor of two.</span></span> <span data-ttu-id="6208d-274">Observe também que uma chamada para o <xref:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform%2A> método é usado para justificar a borda esquerda do preenchimento de gradiente com a borda esquerda da elipse.</span><span class="sxs-lookup"><span data-stu-id="6208d-274">Also notice that a call to the <xref:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform%2A> method is used to justify the left edge of the gradient fill with the left edge of ellipse.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CS/form1.cs#5)]
 [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetBlendTriangularShape">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6208d-275">Cria um gradiente linear com uma cor central e uma queda linear para uma única cor em ambas as extremidades.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-275">Creates a linear gradient with a center color and a linear falloff to a single color on both ends.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetBlendTriangularShape">
      <MemberSignature Language="C#" Value="public void SetBlendTriangularShape (float focus);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBlendTriangularShape(float32 focus) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBlendTriangularShape (focus As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBlendTriangularShape(float focus);" />
      <MemberSignature Language="F#" Value="member this.SetBlendTriangularShape : single -&gt; unit" Usage="linearGradientBrush.SetBlendTriangularShape focus" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="focus" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="focus">
          <span data-ttu-id="6208d-276">Um valor entre 0 e 1 que especifica o centro do gradiente (o ponto em que o gradiente é composto apenas pela cor final).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-276">A value from 0 through 1 that specifies the center of the gradient (the point where the gradient is composed of only the ending color).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6208d-277">Cria um gradiente linear com uma cor central e uma queda linear para uma única cor em ambas as extremidades.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-277">Creates a linear gradient with a center color and a linear falloff to a single color on both ends.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6208d-278">Esse método Especifica um `focus`, que é o ponto em que o gradiente é composto apenas da cor final.</span><span class="sxs-lookup"><span data-stu-id="6208d-278">This method specifies a `focus`, which is the point where the gradient is composed only of the ending color.</span></span> <span data-ttu-id="6208d-279">O `focus` parâmetro representa um local como uma proporção da distância ao longo da linha de gradação.</span><span class="sxs-lookup"><span data-stu-id="6208d-279">The `focus` parameter represents a location as a proportion of the distance along the gradient line.</span></span> <span data-ttu-id="6208d-280">Gradiente fica para a cor inicial linearmente para ambos os lados.</span><span class="sxs-lookup"><span data-stu-id="6208d-280">The gradient falls off to the starting color linearly to either side.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6208d-281">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape%2A>.</span><span class="sxs-lookup"><span data-stu-id="6208d-281">For an example, see <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBlendTriangularShape">
      <MemberSignature Language="C#" Value="public void SetBlendTriangularShape (float focus, float scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBlendTriangularShape(float32 focus, float32 scale) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBlendTriangularShape (focus As Single, scale As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBlendTriangularShape(float focus, float scale);" />
      <MemberSignature Language="F#" Value="member this.SetBlendTriangularShape : single * single -&gt; unit" Usage="linearGradientBrush.SetBlendTriangularShape (focus, scale)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="focus" Type="System.Single" />
        <Parameter Name="scale" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="focus">
          <span data-ttu-id="6208d-282">Um valor entre 0 e 1 que especifica o centro do gradiente (o ponto em que o gradiente é composto apenas pela cor final).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-282">A value from 0 through 1 that specifies the center of the gradient (the point where the gradient is composed of only the ending color).</span>
          </span>
        </param>
        <param name="scale">
          <span data-ttu-id="6208d-283">Um valor de 0 a 1 que especifica a rapidez com da redução das cores da cor inicial para <c>foco</c> (cor final)</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-283">A value from 0 through1 that specifies how fast the colors falloff from the starting color to <c>focus</c> (ending color)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6208d-284">Cria um gradiente linear com uma cor central e uma queda linear para uma única cor em ambas as extremidades.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-284">Creates a linear gradient with a center color and a linear falloff to a single color on both ends.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6208d-285">Esse método Especifica um `focus`, que é o ponto em que o gradiente é composto apenas da cor final.</span><span class="sxs-lookup"><span data-stu-id="6208d-285">This method specifies a `focus`, which is the point where the gradient is composed only of the ending color.</span></span> <span data-ttu-id="6208d-286">O `focus` parâmetro representa um local como uma proporção da distância ao longo da linha de gradação.</span><span class="sxs-lookup"><span data-stu-id="6208d-286">The `focus` parameter represents a location as a proportion of the distance along the gradient line.</span></span> <span data-ttu-id="6208d-287">Gradiente fica para a cor inicial linearmente para ambos os lados.</span><span class="sxs-lookup"><span data-stu-id="6208d-287">The gradient falls off to the starting color linearly to either side.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6208d-288">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, uma <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="6208d-288">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="6208d-289">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="6208d-289">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="6208d-290">Cria um novo <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span><span class="sxs-lookup"><span data-stu-id="6208d-290">Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span></span>  
  
-   <span data-ttu-id="6208d-291">Usa esse pincel para desenhar uma elipse na tela que tenha uma transição linear, esquerda para direita de cores.</span><span class="sxs-lookup"><span data-stu-id="6208d-291">Uses this brush to draw an ellipse to the screen that has a linear, left-to-right transition of colors.</span></span>  
  
-   <span data-ttu-id="6208d-292">Transforma o <xref:System.Drawing.Drawing2D.LinearGradientBrush> em uma forma triangular com seu horário de pico no centro.</span><span class="sxs-lookup"><span data-stu-id="6208d-292">Transforms the <xref:System.Drawing.Drawing2D.LinearGradientBrush> into a triangular shape with its peak in the center.</span></span>  
  
-   <span data-ttu-id="6208d-293">Desenha uma elipse segundo para a tela usando o pincel transformado.</span><span class="sxs-lookup"><span data-stu-id="6208d-293">Draws a second ellipse to the screen using the transformed brush.</span></span>  
  
 <span data-ttu-id="6208d-294">Observe que o gradiente da elipse inferior faz a transição de azul para vermelho e, em seguida, voltar para azul.</span><span class="sxs-lookup"><span data-stu-id="6208d-294">Notice that the gradient of the lower ellipse transitions from blue to red and then back to blue.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CS/form1.cs#6)]
 [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetSigmaBellShape">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6208d-295">Cria uma queda de gradiente com base em uma curva em forma de sino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-295">Creates a gradient falloff based on a bell-shaped curve.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetSigmaBellShape">
      <MemberSignature Language="C#" Value="public void SetSigmaBellShape (float focus);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSigmaBellShape(float32 focus) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSigmaBellShape (focus As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSigmaBellShape(float focus);" />
      <MemberSignature Language="F#" Value="member this.SetSigmaBellShape : single -&gt; unit" Usage="linearGradientBrush.SetSigmaBellShape focus" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="focus" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="focus">
          <span data-ttu-id="6208d-296">Um valor de 0 a 1 que especifica o centro do gradiente (o ponto em que a cor inicial e cor final são mescladas igualmente).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-296">A value from 0 through 1 that specifies the center of the gradient (the point where the starting color and ending color are blended equally).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6208d-297">Cria uma queda de gradiente com base em uma curva em forma de sino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-297">Creates a gradient falloff based on a bell-shaped curve.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6208d-298">Esse método Especifica um `focus`, que é o ponto em que o gradiente é composto apenas da cor final.</span><span class="sxs-lookup"><span data-stu-id="6208d-298">This method specifies a `focus`, which is the point where the gradient is composed only of the ending color.</span></span> <span data-ttu-id="6208d-299">O `focus` parâmetro representa um local como uma proporção da distância ao longo da linha de gradação.</span><span class="sxs-lookup"><span data-stu-id="6208d-299">The `focus` parameter represents a location as a proportion of the distance along the gradient line.</span></span> <span data-ttu-id="6208d-300">Gradiente fica para a cor inicial com base em uma forma de curva de sino (distribuição normal) para um dos lados.</span><span class="sxs-lookup"><span data-stu-id="6208d-300">The gradient falls off to the starting color based on a bell curve shape (normal distribution) to either side.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6208d-301">Para obter um exemplo, consulte <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape%2A>`.`</span><span class="sxs-lookup"><span data-stu-id="6208d-301">For an example, see <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape%2A>`.`</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSigmaBellShape">
      <MemberSignature Language="C#" Value="public void SetSigmaBellShape (float focus, float scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSigmaBellShape(float32 focus, float32 scale) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSigmaBellShape (focus As Single, scale As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSigmaBellShape(float focus, float scale);" />
      <MemberSignature Language="F#" Value="member this.SetSigmaBellShape : single * single -&gt; unit" Usage="linearGradientBrush.SetSigmaBellShape (focus, scale)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="focus" Type="System.Single" />
        <Parameter Name="scale" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="focus">
          <span data-ttu-id="6208d-302">Um valor entre 0 e 1 que especifica o centro do gradiente (o ponto em que o gradiente é composto apenas pela cor final).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-302">A value from 0 through 1 that specifies the center of the gradient (the point where the gradient is composed of only the ending color).</span>
          </span>
        </param>
        <param name="scale">
          <span data-ttu-id="6208d-303">Um valor de 0 a 1 que especifica a rapidez com da redução das cores do <c>foco</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-303">A value from 0 through 1 that specifies how fast the colors falloff from the <c>focus</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6208d-304">Cria uma queda de gradiente com base em uma curva em forma de sino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-304">Creates a gradient falloff based on a bell-shaped curve.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6208d-305">Esse método Especifica um `focus`, que é o ponto em que o gradiente é composto apenas da cor final.</span><span class="sxs-lookup"><span data-stu-id="6208d-305">This method specifies a `focus`, which is the point where the gradient is composed only of the ending color.</span></span> <span data-ttu-id="6208d-306">O `focus` parâmetro representa um local como uma proporção da distância ao longo da linha de gradação.</span><span class="sxs-lookup"><span data-stu-id="6208d-306">The `focus` parameter represents a location as a proportion of the distance along the gradient line.</span></span> <span data-ttu-id="6208d-307">Gradiente fica para a cor inicial com base em uma forma de curva de sino (distribuição normal) para um dos lados.</span><span class="sxs-lookup"><span data-stu-id="6208d-307">The gradient falls off to the starting color based on a bell curve shape (normal distribution) to either side.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6208d-308">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, uma <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="6208d-308">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="6208d-309">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="6208d-309">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="6208d-310">Cria um novo <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span><span class="sxs-lookup"><span data-stu-id="6208d-310">Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span></span>  
  
-   <span data-ttu-id="6208d-311">Usa esse pincel para desenhar uma elipse na tela que tenha uma transição linear, esquerda para direita de cores.</span><span class="sxs-lookup"><span data-stu-id="6208d-311">Uses this brush to draw an ellipse to the screen that has a linear, left-to-right transition of colors.</span></span>  
  
-   <span data-ttu-id="6208d-312">Transforma o <xref:System.Drawing.Drawing2D.LinearGradientBrush> com uma curva de sino em forma com um pico no centro.</span><span class="sxs-lookup"><span data-stu-id="6208d-312">Transforms the <xref:System.Drawing.Drawing2D.LinearGradientBrush> to have a bell shaped curve with its peak in the center.</span></span>  
  
-   <span data-ttu-id="6208d-313">Desenha uma elipse segundo para a tela usando o pincel em forma de sino.</span><span class="sxs-lookup"><span data-stu-id="6208d-313">Draws a second ellipse to the screen using the bell-shaped brush.</span></span>  
  
 <span data-ttu-id="6208d-314">Observe que o gradiente da elipse inferior faz a transição de azul para vermelho e, em seguida, voltar para azul.</span><span class="sxs-lookup"><span data-stu-id="6208d-314">Notice that the gradient of the lower ellipse transitions from blue to red and then back to blue.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CS/form1.cs#7)]
 [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.Matrix Transform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Drawing2D.Matrix Transform" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.LinearGradientBrush.Transform" />
      <MemberSignature Language="VB.NET" Value="Public Property Transform As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::Matrix ^ Transform { System::Drawing::Drawing2D::Matrix ^ get(); void set(System::Drawing::Drawing2D::Matrix ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Drawing.Drawing2D.Matrix with get, set" Usage="System.Drawing.Drawing2D.LinearGradientBrush.Transform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.Matrix</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6208d-315">Obtém ou define uma cópia <see cref="T:System.Drawing.Drawing2D.Matrix" /> que define uma transformação geométrica local para este <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-315">Gets or sets a copy <see cref="T:System.Drawing.Drawing2D.Matrix" /> that defines a local geometric transform for this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6208d-316">Uma cópia do <see cref="T:System.Drawing.Drawing2D.Matrix" /> que define uma transformação geométrica que só se aplica a preenchimentos desenhados com isso <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-316">A copy of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> that defines a geometric transform that applies only to fills drawn with this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6208d-317">Uma transformação geométrica pode ser usada para traduzir, dimensionar, girar ou inclinar o preenchimento de gradiente.</span><span class="sxs-lookup"><span data-stu-id="6208d-317">A geometric transform can be used to translate, scale, rotate, or skew the gradient fill.</span></span> <span data-ttu-id="6208d-318">Porque a matriz retornada e pela <xref:System.Drawing.Drawing2D.LinearGradientBrush.Transform%2A> é uma cópia da transformação geométrica do pincel, descarte da matriz quando você não precisa mais dela.</span><span class="sxs-lookup"><span data-stu-id="6208d-318">Because the matrix returned and by the <xref:System.Drawing.Drawing2D.LinearGradientBrush.Transform%2A> property is a copy of the brush's geometric transform, you should dispose of the matrix when you no longer need it.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TranslateTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6208d-319">Converte a transformação geométrica local pelas dimensões especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-319">Translates the local geometric transform by the specified dimensions.</span>
          </span>
          <span data-ttu-id="6208d-320">Esse método precede a translação à transformação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-320">This method prepends the translation to the transform.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TranslateTransform">
      <MemberSignature Language="C#" Value="public void TranslateTransform (float dx, float dy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TranslateTransform(float32 dx, float32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TranslateTransform (dx As Single, dy As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TranslateTransform(float dx, float dy);" />
      <MemberSignature Language="F#" Value="member this.TranslateTransform : single * single -&gt; unit" Usage="linearGradientBrush.TranslateTransform (dx, dy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="dx">
          <span data-ttu-id="6208d-321">O valor da conversão em x.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-321">The value of the translation in x.</span>
          </span>
        </param>
        <param name="dy">
          <span data-ttu-id="6208d-322">O valor da conversão em y.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-322">The value of the translation in y.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6208d-323">Converte a transformação geométrica local pelas dimensões especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-323">Translates the local geometric transform by the specified dimensions.</span>
          </span>
          <span data-ttu-id="6208d-324">Esse método precede a translação à transformação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-324">This method prepends the translation to the transform.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6208d-325">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform%2A>.</span><span class="sxs-lookup"><span data-stu-id="6208d-325">For an example, see <xref:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslateTransform">
      <MemberSignature Language="C#" Value="public void TranslateTransform (float dx, float dy, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TranslateTransform(float32 dx, float32 dy, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TranslateTransform (dx As Single, dy As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TranslateTransform(float dx, float dy, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.TranslateTransform : single * single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="linearGradientBrush.TranslateTransform (dx, dy, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="dx">
          <span data-ttu-id="6208d-326">O valor da conversão em x.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-326">The value of the translation in x.</span>
          </span>
        </param>
        <param name="dy">
          <span data-ttu-id="6208d-327">O valor da conversão em y.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-327">The value of the translation in y.</span>
          </span>
        </param>
        <param name="order">
          <span data-ttu-id="6208d-328">A ordem (preceder ou acrescentar) em que a translação é aplicada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-328">The order (prepend or append) in which to apply the translation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6208d-329">Converte a transformação geométrica local pelas dimensões especificadas na ordem especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-329">Translates the local geometric transform by the specified dimensions in the specified order.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6208d-330">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, uma <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="6208d-330">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="6208d-331">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="6208d-331">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="6208d-332">Cria um novo <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span><span class="sxs-lookup"><span data-stu-id="6208d-332">Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span></span>  
  
-   <span data-ttu-id="6208d-333">Usa esse pincel para desenhar um retângulo para a tela que possui uma transição linear, esquerda para direita de cores.</span><span class="sxs-lookup"><span data-stu-id="6208d-333">Uses this brush to draw a rectangle to the screen that has a linear, left-to-right transition of colors.</span></span>  
  
-   <span data-ttu-id="6208d-334">Gira o <xref:System.Drawing.Drawing2D.LinearGradientBrush> 90 graus e dimensiona o gradiente.</span><span class="sxs-lookup"><span data-stu-id="6208d-334">Rotates the <xref:System.Drawing.Drawing2D.LinearGradientBrush> by 90 degrees and scales the gradient.</span></span>  
  
-   <span data-ttu-id="6208d-335">Desenha o retângulo, com gradiente girado e escala, para a tela.</span><span class="sxs-lookup"><span data-stu-id="6208d-335">Draws the rectangle, with the rotated and scaled gradient, to the screen.</span></span>  
  
-   <span data-ttu-id="6208d-336">Converte o retângulo para que ele tem um gradiente linear executando de cima para baixo.</span><span class="sxs-lookup"><span data-stu-id="6208d-336">Translates the rectangle so that it has a linear gradient running from top to bottom.</span></span>  
  
-   <span data-ttu-id="6208d-337">Desenha o retângulo traduzido para a tela.</span><span class="sxs-lookup"><span data-stu-id="6208d-337">Draws the translated rectangle to the screen.</span></span>  
  
 <span data-ttu-id="6208d-338">Observe que há três retângulos exibido a uma superior mostrando da esquerda para direita gradiente, um meio mostrando gradiente girado e escala e a inferior mostrando o gradiente final, traduzido.</span><span class="sxs-lookup"><span data-stu-id="6208d-338">Notice that there are three rectangles displayed the top one showing the left-to-right gradient, the middle one showing the rotated and scaled gradient, and the bottom one showing the final, translated gradient.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CS/form1.cs#8)]
 [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WrapMode">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.WrapMode WrapMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.WrapMode WrapMode" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.LinearGradientBrush.WrapMode" />
      <MemberSignature Language="VB.NET" Value="Public Property WrapMode As WrapMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::WrapMode WrapMode { System::Drawing::Drawing2D::WrapMode get(); void set(System::Drawing::Drawing2D::WrapMode value); };" />
      <MemberSignature Language="F#" Value="member this.WrapMode : System.Drawing.Drawing2D.WrapMode with get, set" Usage="System.Drawing.Drawing2D.LinearGradientBrush.WrapMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.WrapMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6208d-339">Obtém ou define uma enumeração <see cref="T:System.Drawing.Drawing2D.WrapMode" /> que indica o modo de encapsulamento para este <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-339">Gets or sets a <see cref="T:System.Drawing.Drawing2D.WrapMode" /> enumeration that indicates the wrap mode for this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6208d-340">Um <see cref="T:System.Drawing.Drawing2D.WrapMode" /> que especifica como preenchimentos desenhados com esse <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> são colocados lado a lado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6208d-340">A <see cref="T:System.Drawing.Drawing2D.WrapMode" /> that specifies how fills drawn with this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> are tiled.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>