<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Matrix.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d7c894d909e48d1bcbd0f4c91190becad156464e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d7c894d909e48d1bcbd0f4c91190becad156464e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>Encapsulates a 3-by-3 affine matrix that represents a geometric transform.</source>
          <target state="translated">Encapsula uma matriz afim 3 por 3 que representa uma transformação geométrica.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>This class cannot be inherited.</source>
          <target state="translated">Essa classe não pode ser herdada.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>In <ph id="ph1">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> you can store an affine transformation in a <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.Matrix&gt;</ph> object.</source>
          <target state="translated">Em <ph id="ph1">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> , você pode armazenar uma transformação afim de um <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.Matrix&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>Because the third column of a matrix that represents an affine transformation is always (0, 0, 1), you specify only the six numbers in the first two columns when you construct a <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix&gt;</ph> object.</source>
          <target state="translated">Como a terceira coluna de uma matriz que representa uma transformação afim sempre é (0, 0, 1), você especificar apenas os seis números nas duas primeiras colunas quando você construir um <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>The statement <ph id="ph1">`Matrix myMatrix = new Matrix(0, 1, -1, 0, 3, 4)`</ph> constructs the matrix shown in the following figure.</source>
          <target state="translated">A instrução <ph id="ph1">`Matrix myMatrix = new Matrix(0, 1, -1, 0, 3, 4)`</ph> constrói a matriz mostrada na figura a seguir.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.Matrix">
          <source><bpt id="p1">![</bpt>Transformations<ept id="p1">]</ept><bpt id="p2">(~/add/media/aboutgdip05-art10.gif "</bpt>Transformations<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>Transformações<ept id="p1">]</ept><bpt id="p2">(~/add/media/aboutgdip05-art10.gif "</bpt>transformações<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>Composite Transformations</source>
          <target state="translated">Transformações de composição</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>A composite transformation is a sequence of transformations, one followed by the other.</source>
          <target state="translated">Uma transformação de composição é uma sequência de transformações, uma seguida da outra.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>Consider the matrices and transformations in the following list:</source>
          <target state="translated">Considere as matrizes e transformações na lista a seguir:</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>Matrix A</source>
          <target state="translated">Matriz A</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>Rotate 90 degrees</source>
          <target state="translated">Girar 90 graus</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>Matrix B</source>
          <target state="translated">Matriz B</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>Scale by a factor of 2 in the x direction</source>
          <target state="translated">Dimensionar por um fator de 2 na direção x</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>Matrix C</source>
          <target state="translated">Matriz C</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>Translate 3 units in the y direction</source>
          <target state="translated">Mover 3 unidades na direção y</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>If we start with the point (2, 1) — represented by the matrix [2 1 1] — and multiply by A, then B, then C, the point (2, 1) will undergo the three transformations in the order listed.</source>
          <target state="translated">Se começar com o ponto (2, 1) — representado pela matriz [2 1 1] — e multiplicar por A, em seguida, B e C, o ponto (2, 1) passará as três transformações na ordem listada.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>[2 1 1]ABC = [-2 5 1]</source>
          <target state="translated">[2 1 1]ABC = [-2 5 1]</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>Rather than store the three parts of the composite transformation in three separate matrices, you can multiply A, B, and C together to get a single 3×3 matrix that stores the entire composite transformation.</source>
          <target state="translated">Em vez de armazenar as três partes da transformação de composição em três matrizes separadas, você pode multiplicar A, B e C juntos para obter uma única matriz 3 × 3 que armazena a transformação de composição inteira.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>Suppose ABC = D. Then a point multiplied by D gives the same result as a point multiplied by A, then B, then C.</source>
          <target state="translated">Suponha que a ABC = D. Em seguida, um ponto multiplicado por D fornece o mesmo resultado que um ponto multiplicado por A, B e, em seguida, C.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>[2 1 1]D = [-2 5 1]</source>
          <target state="translated">[2 1 1]D = [-2 5 1]</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>The following illustration shows the matrices A, B, C, and D.</source>
          <target state="translated">A ilustração a seguir mostra as matrizes A, B, C e D.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.Matrix">
          <source><bpt id="p1">![</bpt>Transformations<ept id="p1">]</ept><bpt id="p2">(~/add/media/aboutgdip05-art12.gif "</bpt>Transformations<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>Transformações<ept id="p1">]</ept><bpt id="p2">(~/add/media/aboutgdip05-art12.gif "</bpt>transformações<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>The fact that the matrix of a composite transformation can be formed by multiplying the individual transformation matrices means that any sequence of affine transformations can be stored in a single <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix&gt;</ph> object.</source>
          <target state="translated">O fato de que a matriz de uma transformação composta pode ser formada pela multiplicação de matrizes de transformação individuais significa que qualquer sequência de transformações afins pode ser armazenada em uma única <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>The order of a composite transformation is important.</source>
          <target state="translated">A ordem de uma transformação de composição é importante.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>In general, rotate, then scale, then translate is not the same as scale, then rotate, then translate.</source>
          <target state="translated">Em geral, girar, dimensionar e converter não é o mesmo que dimensionar, girar e converter.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>Similarly, the order of matrix multiplication is important.</source>
          <target state="translated">Da mesma forma, a ordem de multiplicação de matriz é importante.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>In general, ABC is not the same as BAC.</source>
          <target state="translated">Em geral, ABC não é o mesmo que BAC.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix&gt;</ph> class provides several methods for building a composite transformation: <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.Matrix.Multiply%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.Matrix.Rotate%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Drawing.Drawing2D.Matrix.RotateAt%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Drawing.Drawing2D.Matrix.Scale%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Drawing.Drawing2D.Matrix.Shear%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Drawing.Drawing2D.Matrix.Translate%2A&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix&gt;</ph> classe fornece vários métodos para criar uma transformação composta: <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.Matrix.Multiply%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.Matrix.Rotate%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Drawing.Drawing2D.Matrix.RotateAt%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Drawing.Drawing2D.Matrix.Scale%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Drawing.Drawing2D.Matrix.Shear%2A&gt;</ph>, e <ph id="ph7">&lt;xref:System.Drawing.Drawing2D.Matrix.Translate%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>The following example creates the matrix of a composite transformation that first rotates 30 degrees, then scales by a factor of 2 in the y direction, and then translates 5 units in the x direction:</source>
          <target state="translated">O exemplo a seguir cria a matriz de uma transformação de composição que primeiro gira 30 graus e, então, é dimensionada por um fator de 2 na direção y e movida em 5 unidades na direção x:</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> class as the identity matrix.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> como a matriz de identidade.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.Rectangle,System.Drawing.Point[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structure that represents the rectangle to be transformed.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que representa o retângulo a ser transformado.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.Rectangle,System.Drawing.Point[])">
          <source>An array of three <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that represents the points of a parallelogram to which the upper-left, upper-right, and lower-left corners of the rectangle is to be transformed.</source>
          <target state="translated">Uma matriz de três <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> estruturas que representa os pontos de um paralelogramo, do qual os cantos superior esquerdo, superior direito e inferior esquerdo do retângulo serão transformados.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.Rectangle,System.Drawing.Point[])">
          <source>The lower-right corner of the parallelogram is implied by the first three corners.</source>
          <target state="translated">O canto inferior direito do paralelogramo é indicado pelos três primeiros cantos.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.Rectangle,System.Drawing.Point[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> class to the geometric transform defined by the specified rectangle and array of points.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> para a transformação geométrica definida pelo retângulo e matriz de pontos especificados.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.Rectangle,System.Drawing.Point[])">
          <source>This method initializes the new Matrix such that it represents the geometric transform that maps the rectangle specified by the <ph id="ph1">`rect`</ph> parameter to the parallelogram defined by the three points in the <ph id="ph2">`plgpts`</ph> parameter.</source>
          <target state="translated">Esse método inicializa a nova matriz, de modo que ele representa a transformação geométrica que mapeia o retângulo especificado pelo <ph id="ph1">`rect`</ph> parâmetro paralelogramo definido por três pontos no <ph id="ph2">`plgpts`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.Rectangle,System.Drawing.Point[])">
          <source>The upper-left corner of the rectangle is mapped to the first point in the <ph id="ph1">`plgpts`</ph> array, the upper-right corner is mapped to the second point, and the lower-left corner is mapped to the third point.</source>
          <target state="translated">O canto superior esquerdo do retângulo é mapeado para o primeiro ponto na <ph id="ph1">`plgpts`</ph> matriz, no canto superior direito é mapeado para o segundo ponto e o canto inferior esquerdo é mapeado para o terceiro ponto.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.Rectangle,System.Drawing.Point[])">
          <source>The lower-right point of the parallelogram is implied by the first three.</source>
          <target state="translated">O ponto inferior direito do paralelogramo indicado pelas três primeiras.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.RectangleF,System.Drawing.PointF[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structure that represents the rectangle to be transformed.</source>
          <target state="translated">Uma estrutura <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> que representa o retângulo a ser transformado.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.RectangleF,System.Drawing.PointF[])">
          <source>An array of three <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that represents the points of a parallelogram to which the upper-left, upper-right, and lower-left corners of the rectangle is to be transformed.</source>
          <target state="translated">Uma matriz de três <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> estruturas que representa os pontos de um paralelogramo, do qual os cantos superior esquerdo, superior direito e inferior esquerdo do retângulo serão transformados.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.RectangleF,System.Drawing.PointF[])">
          <source>The lower-right corner of the parallelogram is implied by the first three corners.</source>
          <target state="translated">O canto inferior direito do paralelogramo é indicado pelos três primeiros cantos.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.RectangleF,System.Drawing.PointF[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> class to the geometric transform defined by the specified rectangle and array of points.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> para a transformação geométrica definida pelo retângulo e matriz de pontos especificados.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.RectangleF,System.Drawing.PointF[])">
          <source>This method initializes the new <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix&gt;</ph> such that it represents the geometric transform that maps the rectangle specified by the <ph id="ph2">`rect`</ph> parameter to the parallelogram defined by the three points in the <ph id="ph3">`plgpts`</ph> parameter.</source>
          <target state="translated">Esse método inicializa a nova <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix&gt;</ph> , de modo que ele representa a transformação geométrica que mapeia o retângulo especificado pelo <ph id="ph2">`rect`</ph> parâmetro paralelogramo definido por três pontos no <ph id="ph3">`plgpts`</ph> parâmetro.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.RectangleF,System.Drawing.PointF[])">
          <source>The upper-left corner of the rectangle is mapped to the first point in the <ph id="ph1">`plgpts`</ph> array, the upper-right corner is mapped to the second point, and the lower-left corner is mapped to the third point.</source>
          <target state="translated">O canto superior esquerdo do retângulo é mapeado para o primeiro ponto na <ph id="ph1">`plgpts`</ph> matriz, no canto superior direito é mapeado para o segundo ponto e o canto inferior esquerdo é mapeado para o terceiro ponto.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.RectangleF,System.Drawing.PointF[])">
          <source>The lower-right point of the parallelogram is implied by the first three.</source>
          <target state="translated">O ponto inferior direito do paralelogramo indicado pelas três primeiras.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The value in the first row and first column of the new <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">O valor na primeira linha e na primeira coluna do novo <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The value in the first row and second column of the new <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">O valor na primeira linha e na segunda coluna do novo <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The value in the second row and first column of the new <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">O valor na segunda linha e na primeira coluna do novo <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The value in the second row and second column of the new <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">O valor na segunda linha e na segunda coluna do novo <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The value in the third row and first column of the new <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">O valor na terceira linha e na primeira coluna do novo <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The value in the third row and second column of the new <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">O valor na terceira linha e na segunda coluna do novo <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> class with the specified elements.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> com os elementos especificados.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Clone">
          <source>Creates an exact copy of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">Cria uma cópia exata deste <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Clone">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> that this method creates.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> criado por esse método.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Dispose">
          <source>Releases all resources used by this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">Libera todos os recursos usados por este <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Dispose">
          <source>Calling <ph id="ph1">`Dispose`</ph> allows the resources used by this <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.Matrix&gt;</ph> object to be reallocated for other purposes.</source>
          <target state="translated">Chamando <ph id="ph1">`Dispose`</ph> permite que os recursos usados por este <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.Matrix&gt;</ph> objeto a ser realocada para outros fins.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="P:System.Drawing.Drawing2D.Matrix.Elements">
          <source>Gets an array of floating-point values that represents the elements of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">Obtém uma matriz de valores de ponto flutuante que representa os elementos deste <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.Matrix.Elements">
          <source>An array of floating-point values that represents the elements of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">Uma matriz de valores de ponto flutuante que representa os elementos deste <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.Matrix.Elements">
          <source>The elements m11, m12, m21, m22, dx, and dy of the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix&gt;</ph> are represented by the values in the array in that order.</source>
          <target state="translated">Os elementos m11, m12, m21, m22, dx e dy do <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix&gt;</ph> são representados pelos valores na matriz na ordem.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Equals(System.Object)">
          <source>The object to test.</source>
          <target state="translated">O objeto a ser testado.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Equals(System.Object)">
          <source>Tests whether the specified object is a <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> and is identical to this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">Testa se o objeto especificado é um <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> e é idêntico a este <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Equals(System.Object)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> is the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> identical to this <ph id="ph4">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>; otherwise, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Este método retornará <ph id="ph1">&lt;see langword="true" /&gt;</ph> se <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> o <ph id="ph3">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> especificado for idênticos a este <ph id="ph4">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>; caso contrário, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Finalize">
          <source>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</source>
          <target state="translated">Permite que um objeto tente liberar recursos e executar outras operações de limpeza antes de ser recuperado pela coleta de lixo.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.GetHashCode">
          <source>Returns a hash code.</source>
          <target state="translated">Retorna um código hash.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.GetHashCode">
          <source>The hash code for this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">O código hash deste <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Invert">
          <source>Inverts this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>, if it is invertible.</source>
          <target state="translated">Inverte esse <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>, se ele for invertível.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Invert">
          <source>The following code example creates a matrix and inverts it:</source>
          <target state="translated">O exemplo de código a seguir cria uma matriz e inverte a ela:</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.Drawing.Drawing2D.Matrix.IsIdentity">
          <source>Gets a value indicating whether this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> is the identity matrix.</source>
          <target state="translated">Obtém um valor que indica se este <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> é a matriz de identidade.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.Matrix.IsIdentity">
          <source>This property is <ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> is identity; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Esta propriedade é <ph id="ph1">&lt;see langword="true" /&gt;</ph> se este <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> é identidade; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.Drawing.Drawing2D.Matrix.IsInvertible">
          <source>Gets a value indicating whether this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> is invertible.</source>
          <target state="translated">Obtém um valor que indica se este <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> pode ser invertido.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.Matrix.IsInvertible">
          <source>This property is <ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> is invertible; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Esta propriedade é <ph id="ph1">&lt;see langword="true" /&gt;</ph> se este <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> invertível; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>Multiplies this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> by the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> by prepending the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">Multiplica este <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> pelo <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> especificado acrescentando o <ph id="ph3">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> especificado ao começo.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> by which this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> is to be multiplied.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> pelo qual este <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> deve ser multiplicado.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix)">
          <source>Multiplies this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> by the matrix specified in the <ph id="ph2">&lt;paramref name="matrix" /&gt;</ph> parameter, by prepending the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">Multiplica esse <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> pela matriz especificada no parâmetro <ph id="ph2">&lt;paramref name="matrix" /&gt;</ph>, acrescentando o <ph id="ph3">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix.Multiply%2A&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix.Multiply%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> by which this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> is to be multiplied.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> pelo qual este <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> deve ser multiplicado.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.MatrixOrder" /&gt;</ph> that represents the order of the multiplication.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.MatrixOrder" /&gt;</ph> que representa a ordem da multiplicação.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Multiplies this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> by the matrix specified in the <ph id="ph2">&lt;paramref name="matrix" /&gt;</ph> parameter, and in the order specified in the <ph id="ph3">&lt;paramref name="order" /&gt;</ph> parameter.</source>
          <target state="translated">Multiplica este <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> pela matriz especificada no parâmetro <ph id="ph2">&lt;paramref name="matrix" /&gt;</ph> e na ordem especificada no parâmetro <ph id="ph3">&lt;paramref name="order" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>If the specified order is <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.MatrixOrder.Prepend&gt;</ph>, this <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.Matrix&gt;</ph> is multiplied by the specified matrix in a prepended order.</source>
          <target state="translated">Se a ordem especificada for <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.MatrixOrder.Prepend&gt;</ph>, este <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.Matrix&gt;</ph> é multiplicada por matriz especificada em uma ordem antecedendo.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>If the specified order is <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.MatrixOrder.Append&gt;</ph>, this <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.Matrix&gt;</ph> is multiplied by the specified matrix in an appended order.</source>
          <target state="translated">Se a ordem especificada for <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.MatrixOrder.Append&gt;</ph>, este <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.Matrix&gt;</ph> é multiplicada por matriz especificada em uma ordem anexada.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event object.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, uma <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> objeto de evento.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Creates three matrices.</source>
          <target state="translated">Cria três matrizes.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Lists the contents of matrix 1 to the screen.</source>
          <target state="translated">Lista o conteúdo da matriz de 1 para a tela.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Multiplies matrix 1 by matrix 2 and stores the result in matrix 1.</source>
          <target state="translated">Multiplica matriz 1 por matriz 2 e armazena o resultado na matriz de 1.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Lists the contents of matrix 1 to the screen.</source>
          <target state="translated">Lista o conteúdo da matriz de 1 para a tela.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Multiplies the result stored in matrix 1 by matrix 3, and again stores the result in matrix 1.</source>
          <target state="translated">Multiplica o resultado armazenado na matriz 1 por matriz 3 e novamente armazena o resultado na matriz de 1.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Lists the contents of matrix 1 to the screen.</source>
          <target state="translated">Lista o conteúdo da matriz de 1 para a tela.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Draws a rectangle to the screen prior to applying the matrix 1 transform (the blue rectangle).</source>
          <target state="translated">Desenha um retângulo para a tela antes de aplicar a transformação de matriz de 1 (o retângulo azul).</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Applies the transform to the rectangle.</source>
          <target state="translated">Aplica a transformação ao retângulo.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Draws the transformed rectangle to the screen (the red rectangle), using the same coordinates as the previous rectangle.</source>
          <target state="translated">Desenha um retângulo transformado na tela (retângulo vermelho), usando as mesmas coordenadas do retângulo anterior.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Notice that the red rectangle has been scaled by a factor of two in the horizontal direction, then rotated 90 degrees, and then moved (translated) 250 points in the x direction and 50 points in the y direction.</source>
          <target state="translated">Observe que o retângulo vermelho ter sido ajustado por um fator de dois na direção horizontal, girado 90 graus e, em seguida, movidos (traduzidos) 250 pontos na direção x e 50 pontos na direção y.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="P:System.Drawing.Drawing2D.Matrix.OffsetX">
          <source>Gets the x translation value (the dx value, or the element in the third row and first column) of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">Obtém o valor de translação de x (o valor de dx ou o elemento na terceira linha e na primeira coluna) deste <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.Matrix.OffsetX">
          <source>The x translation value of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">O valor de tradução x deste <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="P:System.Drawing.Drawing2D.Matrix.OffsetY">
          <source>Gets the y translation value (the dy value, or the element in the third row and second column) of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">Obtém o valor de translação de y (o valor de dy ou o elemento na terceira linha e na segunda coluna) deste <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.Matrix.OffsetY">
          <source>The y translation value of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">O valor de tradução y deste <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Reset">
          <source>Resets this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> to have the elements of the identity matrix.</source>
          <target state="translated">Redefine este <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> para ter os elementos da matriz de identidade.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Reset">
          <source>The elements on the main diagonal of the identity matrix are 1.</source>
          <target state="translated">Os elementos na principal diagonal da matriz de identidade são 1.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Reset">
          <source>All other elements of the identity matrix are 0.</source>
          <target state="translated">Todos os outros elementos da matriz de identidade são de 0.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Reset">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event object.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, uma <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> objeto de evento.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Reset">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Reset">
          <source>Creates a scaling matrix.</source>
          <target state="translated">Cria uma matriz de colocação em escala.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Reset">
          <source>Lists the matrix elements to the screen.</source>
          <target state="translated">Lista os elementos de matriz para a tela.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Reset">
          <source>Resets the matrix to identity.</source>
          <target state="translated">Redefine a matriz de identidade.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Reset">
          <source>Lists the elements to the screen.</source>
          <target state="translated">Lista os elementos na tela.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Reset">
          <source>Translates the matrix by 50 points in the x-axis and 40 points in the y-axis.</source>
          <target state="translated">Converte a matriz em 50 pontos no eixo x e 40 pontos no eixo y.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Reset">
          <source>Lists the elements of the translated matrix to the screen.</source>
          <target state="translated">Lista os elementos da matriz traduzida para a tela.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Reset">
          <source>Draws a rectangle is drawn to the screen prior to applying the matrix transform (the blue rectangle).</source>
          <target state="translated">Desenha que um retângulo é desenhado na tela antes de aplicar a transformação de matriz (um retângulo azul).</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Reset">
          <source>Applies the transform to the rectangle.</source>
          <target state="translated">Aplica a transformação ao retângulo.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Reset">
          <source>Draws the transformed rectangle is drawn to the screen (the red rectangle), using the same coordinates as the previous rectangle.</source>
          <target state="translated">Desenha que o retângulo transformados na tela (retângulo vermelho), usando as mesmas coordenadas do retângulo anterior.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Reset">
          <source>Notice that the red rectangle was not scaled (because of the reset) but was translated in the x-axis and y-axis.</source>
          <target state="translated">Observe que o retângulo vermelho não foi dimensionado (devido a reinicialização), mas foi traduzido para o eixo x e y.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>Applies a clockwise rotation of the specified angle about the origin to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">Aplica uma rotação no sentido horário do ângulo especificado sobre a origem a este <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single)">
          <source>The angle of the rotation, in degrees.</source>
          <target state="translated">O ângulo de rotação, em graus.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single)">
          <source>Prepend to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> a clockwise rotation, around the origin and by the specified angle.</source>
          <target state="translated">Preceda a isso <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> uma rotação no sentido horário ao redor da origem e pelo ângulo especificado.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix.Rotate%28System.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix.Rotate%28System.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The angle (extent) of the rotation, in degrees.</source>
          <target state="translated">O ângulo (extensão) de rotação, em graus.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.MatrixOrder" /&gt;</ph> that specifies the order (append or prepend) in which the rotation is applied to this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.MatrixOrder" /&gt;</ph> que especifica a ordem (suceder ou preceder) em que a rotação é aplicada a este <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Applies a clockwise rotation of an amount specified in the <ph id="ph1">&lt;paramref name="angle" /&gt;</ph> parameter, around the origin (zero x and y coordinates) for this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">Aplica uma rotação no sentido horário de um valor especificado no parâmetro <ph id="ph1">&lt;paramref name="angle" /&gt;</ph>, em torno da origem (coordenadas x e y zero) para esse <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event object.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, uma <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> objeto de evento.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Draws a rectangle to the screen prior to applying a rotation transform (the blue rectangle).</source>
          <target state="translated">Desenha um retângulo para a tela antes de aplicar uma transformação de rotação (o retângulo azul).</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Creates a matrix and rotates it 45 degrees.</source>
          <target state="translated">Cria uma matriz e gira 45 graus.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Applies this matrix transform to the rectangle.</source>
          <target state="translated">Aplica-se essa transformação de matriz para o retângulo.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Draws the transformed rectangle to the screen (the red rectangle).</source>
          <target state="translated">Desenha um retângulo transformado na tela (retângulo vermelho).</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Notice that the red rectangle has been rotated around the 0, 0 screen coordinates.</source>
          <target state="translated">Observe que o retângulo vermelho foi girado em torno de 0, 0 coordenadas de tela.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>Applies a clockwise rotation about the specified point to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> by prepending the rotation.</source>
          <target state="translated">Aplica uma rotação no sentido horário sobre o ponto especificado para este <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> acrescentando a rotação no começo.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF)">
          <source>The angle (extent) of the rotation, in degrees.</source>
          <target state="translated">O ângulo (extensão) de rotação, em graus.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> that represents the center of the rotation.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que representa o centro da rotação.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF)">
          <source>Applies a clockwise rotation to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> around the point specified in the <ph id="ph2">&lt;paramref name="point" /&gt;</ph> parameter, and by prepending the rotation.</source>
          <target state="translated">Aplica uma rotação horária a esta <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> em torno do ponto especificado no parâmetro <ph id="ph2">&lt;paramref name="point" /&gt;</ph> e pela precedência da rotação.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF)">
          <source>The following code example demonstrates using a <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix&gt;</ph> and the <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Transform%2A&gt;</ph> method to rotate a string.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar um <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix&gt;</ph> e <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Transform%2A&gt;</ph> método para girar uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF)">
          <source>This example is designed to be used with Windows Forms.</source>
          <target state="translated">Este exemplo é projetado para ser usado com o Windows Forms.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF)">
          <source>Create a form and paste the following code into it.</source>
          <target state="translated">Criar um formulário e cole o seguinte código para ele.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF)">
          <source>Call the <ph id="ph1">`DrawVerticalStringFromBottomUp`</ph> method in the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler, passing <ph id="ph3">`e`</ph> as <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">Chamar o <ph id="ph1">`DrawVerticalStringFromBottomUp`</ph> método no formulário de <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> manipulador de eventos, passando <ph id="ph3">`e`</ph> como <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The angle of the rotation, in degrees.</source>
          <target state="translated">O ângulo de rotação, em graus.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF,System.Drawing.Drawing2D.MatrixOrder)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> that represents the center of the rotation.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que representa o centro da rotação.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF,System.Drawing.Drawing2D.MatrixOrder)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.MatrixOrder" /&gt;</ph> that specifies the order (append or prepend) in which the rotation is applied.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.MatrixOrder" /&gt;</ph> que especifica a ordem (suceder ou preceder) em que a rotação é aplicada.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Applies a clockwise rotation about the specified point to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> in the specified order.</source>
          <target state="translated">Aplica uma rotação horária em torno do ponto especificado para este <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> na ordem especificada.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event object.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, uma <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> objeto de evento.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Draws a rectangle to the screen prior to applying a rotation transform (the blue rectangle).</source>
          <target state="translated">Desenha um retângulo para a tela antes de aplicar uma transformação de rotação (o retângulo azul).</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Creates a matrix and rotates it 45 degrees around a specified point.</source>
          <target state="translated">Cria uma matriz e gira 45 graus em torno de um ponto especificado.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Applies this matrix transform is to the rectangle.</source>
          <target state="translated">Aplica-se a esta matriz de transformação é para o retângulo.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Draws the transformed rectangle to the screen (the red rectangle).</source>
          <target state="translated">Desenha um retângulo transformado na tela (retângulo vermelho).</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Notice that the red rectangle has been rotated around the upper left-hand corner of the rectangle (the rotation point specified the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix.RotateAt%2A&gt;</ph> method).</source>
          <target state="translated">Observe que o retângulo vermelho foi girado em torno do canto superior esquerdo do retângulo (o ponto de rotação especificado o <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix.RotateAt%2A&gt;</ph> método).</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>Applies the specified scale vector to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> by prepending the scale vector.</source>
          <target state="translated">Aplica o vetor de escala especificado a este <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> acrescentando o vetor de escala.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single)">
          <source>The value by which to scale this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> in the x-axis direction.</source>
          <target state="translated">O valor segundo o qual este <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> deve ser dimensionado na direção do eixo x.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single)">
          <source>The value by which to scale this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> in the y-axis direction.</source>
          <target state="translated">O valor segundo o qual este <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> deve ser dimensionado na direção do eixo y.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single)">
          <source>Applies the specified scale vector to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> by prepending the scale vector.</source>
          <target state="translated">Aplica o vetor de escala especificado a este <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> acrescentando o vetor de escala.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix.Scale%28System.Single%2CSystem.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix.Scale%28System.Single%2CSystem.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The value by which to scale this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> in the x-axis direction.</source>
          <target state="translated">O valor segundo o qual este <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> deve ser dimensionado na direção do eixo x.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The value by which to scale this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> in the y-axis direction.</source>
          <target state="translated">O valor segundo o qual este <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> deve ser dimensionado na direção do eixo y.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.MatrixOrder" /&gt;</ph> that specifies the order (append or prepend) in which the scale vector is applied to this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.MatrixOrder" /&gt;</ph> que especifica a ordem (suceder ou preceder) em que o vetor de escala é aplicado a este <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Applies the specified scale vector (<ph id="ph1">&lt;paramref name="scaleX" /&gt;</ph> and <ph id="ph2">&lt;paramref name="scaleY" /&gt;</ph>) to this <ph id="ph3">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> using the specified order.</source>
          <target state="translated">Aplica o vetor de escala especificado (<ph id="ph1">&lt;paramref name="scaleX" /&gt;</ph> e <ph id="ph2">&lt;paramref name="scaleY" /&gt;</ph>) a esta <ph id="ph3">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> usando a ordem especificada.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event object.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, uma <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> objeto de evento.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Draws a rectangle to the screen prior to applying a scaling transform (the blue rectangle).</source>
          <target state="translated">Desenha um retângulo para a tela antes de aplicar uma transformação de escala (o retângulo azul).</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Creates a matrix and scales it by 3 in the x-axis and 2 in the y-axis.</source>
          <target state="translated">Cria uma matriz e pode ser dimensionado por 3 no eixo x e 2 no eixo y.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Applies this matrix transform to the rectangle.</source>
          <target state="translated">Aplica-se essa transformação de matriz para o retângulo.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Draws the transformed rectangle to the screen (the red rectangle).</source>
          <target state="translated">Desenha um retângulo transformado na tela (retângulo vermelho).</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Notice that the red rectangle has been scaled by a factor of 3 in the x-axis and by 2 in the y-axis, including the upper left-hand corner of the rectangle (the beginning point of the rectangle).</source>
          <target state="translated">Observe que o retângulo vermelho foi dimensionado por um fator de 3 no eixo x e 2 no eixo y, incluindo o canto superior esquerdo do retângulo (o ponto de início do retângulo).</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>Applies the specified shear vector to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> by prepending the shear vector.</source>
          <target state="translated">Aplica o vetor de distorção especificado a este <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> acrescentando o vetor de distorção.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)">
          <source>The horizontal shear factor.</source>
          <target state="translated">O fator de distorção horizontal.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)">
          <source>The vertical shear factor.</source>
          <target state="translated">O fator de distorção vertical.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)">
          <source>Applies the specified shear vector to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> by prepending the shear transformation.</source>
          <target state="translated">Aplica o vetor de distorção especificado a este <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> acrescentando a transformação de distorção.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)">
          <source>The transformation applied in this method is a pure shear only if one of the parameters is 0.</source>
          <target state="translated">A transformação aplicada nesse método é uma distorção pura somente se um dos parâmetros é 0.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)">
          <source>Applied to a rectangle at the origin, when the <ph id="ph1">`shearY`</ph> factor is 0, the transformation moves the bottom edge horizontally by <ph id="ph2">`shearX`</ph> times the height of the rectangle.</source>
          <target state="translated">Aplicado a um retângulo na origem, quando o <ph id="ph1">`shearY`</ph> fator é 0, a transformação move a extremidade inferior horizontalmente por <ph id="ph2">`shearX`</ph> vezes a altura do retângulo.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)">
          <source>When the <ph id="ph1">`shearX`</ph> factor is 0, it moves the right edge vertically by <ph id="ph2">`shearY`</ph> times the width of the rectangle.</source>
          <target state="translated">Quando o <ph id="ph1">`shearX`</ph> fator é 0, ele move a borda direita verticalmente pelo <ph id="ph2">`shearY`</ph> vezes a largura do retângulo.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)">
          <source>Caution is in order when both parameters are nonzero, because the results are hard to predict.</source>
          <target state="translated">Cuidado está em ordem, quando ambos os parâmetros forem diferentes de zero, porque os resultados são difíceis de prever.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)">
          <source>For example, if both factors are 1, the transformation is singular (hence noninvertible), squeezing the entire plane to a single line.</source>
          <target state="translated">Por exemplo, se os dois fatores forem 1, a transformação for singular (portanto, noninvertible), apertando todo o plano para uma única linha.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event object.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, uma <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> objeto de evento.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)">
          <source>The code performs the following action:</source>
          <target state="translated">O código executa a ação a seguir:</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)">
          <source>Draws a rectangle to the screen, using a green pen, prior to applying a scaling transform.</source>
          <target state="translated">Desenha um retângulo para a tela, usando uma caneta verde, antes de aplicar uma transformação de escala.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix&gt;</ph> and uses it to set a world-coordinate transform for the <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph>.</source>
          <target state="translated">Cria um <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix&gt;</ph> e usa para definir uma transformação de coordenadas do mundo para o <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)">
          <source>Draws another rectangle using a red pen.</source>
          <target state="translated">Desenha um retângulo outra usando uma caneta vermelha.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)">
          <source>Draws an ellipse using a blue pen.</source>
          <target state="translated">Desenha uma elipse usando uma caneta azul.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)">
          <source>The result is a green rectangle, a red parallelogram and a transformed, blue ellipse.</source>
          <target state="translated">O resultado é um retângulo verde, um paralelogramo vermelho e uma elipse transformada, azul.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)">
          <source>Notice that the green rectangle (drawn prior to setting the transform) directly uses the coordinates supplied in the <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawRectangle%2A&gt;</ph> call.</source>
          <target state="translated">Observe que o retângulo verde (desenhado antes de configurar a transformação) usa diretamente as coordenadas fornecidas no <ph id="ph1">&lt;xref:System.Drawing.Graphics.DrawRectangle%2A&gt;</ph> chamar.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)">
          <source>The other two figures are transformed prior to drawing.</source>
          <target state="translated">As duas figuras são transformadas antes do desenho.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)">
          <source>The rectangle is transformed to a parallelogram (red), and the ellipse (blue) is transformed to fit into the transformed parallelogram.</source>
          <target state="translated">O retângulo é transformado em um paralelogramo (vermelho) e a elipse (azul) é transformada para se ajustar à paralelogramo transformado.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)">
          <source>Notice the bottom of the rectangle is moved (sheared) in the x-axis by a factor of two times the height of the rectangle, thus forming the parallelogram.</source>
          <target state="translated">Observe a que parte inferior do retângulo é movido no eixo x por um fator de duas vezes a altura do retângulo, assim, formando paralelogramo (distorcidos).</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The horizontal shear factor.</source>
          <target state="translated">O fator de distorção horizontal.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The vertical shear factor.</source>
          <target state="translated">O fator de distorção vertical.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.MatrixOrder" /&gt;</ph> that specifies the order (append or prepend) in which the shear is applied.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.MatrixOrder" /&gt;</ph> que especifica a ordem (acrescentar no começo ou no fim) em que a distorção é aplicada.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Applies the specified shear vector to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> in the specified order.</source>
          <target state="translated">Aplica o vetor de distorção especificado a este <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> na ordem especificada.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The transformation applied in this method is a pure shear only if one of the parameters is 0.</source>
          <target state="translated">A transformação aplicada nesse método é uma distorção pura somente se um dos parâmetros é 0.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Applied to a rectangle at the origin, when the <ph id="ph1">`shearY`</ph> factor is 0, the transformation moves the bottom edge horizontally by <ph id="ph2">`shearX`</ph> times the height of the rectangle.</source>
          <target state="translated">Aplicado a um retângulo na origem, quando o <ph id="ph1">`shearY`</ph> fator é 0, a transformação move a extremidade inferior horizontalmente por <ph id="ph2">`shearX`</ph> vezes a altura do retângulo.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>When the <ph id="ph1">`shearX`</ph> factor is 0, it moves the right edge vertically by <ph id="ph2">`shearY`</ph> times the width of the rectangle.</source>
          <target state="translated">Quando o <ph id="ph1">`shearX`</ph> fator é 0, ele move a borda direita verticalmente pelo <ph id="ph2">`shearY`</ph> vezes a largura do retângulo.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Caution is in order when both parameters are nonzero, because the results are hard to predict.</source>
          <target state="translated">Cuidado está em ordem, quando ambos os parâmetros forem diferentes de zero, porque os resultados são difíceis de prever.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>For example, if both factors are 1, the transformation is singular (hence noninvertible), squeezing the entire plane to a single line.</source>
          <target state="translated">Por exemplo, se os dois fatores forem 1, a transformação for singular (portanto, noninvertible), apertando todo o plano para uma única linha.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix.Shear%28System.Single%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix.Shear%28System.Single%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>Applies the geometric transform this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> represents to an array of points.</source>
          <target state="translated">Aplica a transformação geométrica que este <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> representa a uma matriz de pontos.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.Point[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that represents the points to transform.</source>
          <target state="translated">Uma matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que representa os pontos a serem transformados.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.Point[])">
          <source>Applies the geometric transform represented by this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> to a specified array of points.</source>
          <target state="translated">Aplica a transformação geométrica representada por este <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> a uma matriz especificada de pontos.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.Point[])">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event object.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, uma <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> objeto de evento.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.Point[])">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.Point[])">
          <source>Creates an array of points that form a rectangle.</source>
          <target state="translated">Cria uma matriz de pontos que formam um retângulo.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.Point[])">
          <source>Draws this array of points (to the screen prior to applying a scaling transform (the blue rectangle).</source>
          <target state="translated">Desenha a esta matriz de pontos (para a tela antes de aplicar uma transformação de escala (o retângulo azul).</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.Point[])">
          <source>Creates a matrix and scales it by 3 in the x-axis and 2 in the y-axis.</source>
          <target state="translated">Cria uma matriz e pode ser dimensionado por 3 no eixo x e 2 no eixo y.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.Point[])">
          <source>Applies this matrix transform to the array of points.</source>
          <target state="translated">Aplica-se essa transformação de matriz para a matriz de pontos.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.Point[])">
          <source>Draws the transformed array to the screen (the red rectangle).</source>
          <target state="translated">Desenha a matriz transformada na tela (retângulo vermelho).</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.Point[])">
          <source>Notice that the red rectangle has been scaled by a factor of 3 in the x-axis and by 2 in the y-axis, including the upper left-hand corner of the rectangle (the beginning point of the rectangle).</source>
          <target state="translated">Observe que o retângulo vermelho foi dimensionado por um fator de 3 no eixo x e 2 no eixo y, incluindo o canto superior esquerdo do retângulo (o ponto de início do retângulo).</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.PointF[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that represents the points to transform.</source>
          <target state="translated">Uma matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que representa os pontos a serem transformados.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.PointF[])">
          <source>Applies the geometric transform represented by this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> to a specified array of points.</source>
          <target state="translated">Aplica a transformação geométrica representada por este <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> a uma matriz especificada de pontos.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.PointF[])">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix.TransformPoints%28System.Drawing.Point%5B%5D%29&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix.TransformPoints%28System.Drawing.Point%5B%5D%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>Multiplies each vector in an array by the matrix.</source>
          <target state="translated">Multiplica cada vetor em uma matriz pela matriz.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>The translation elements of this matrix (third row) are ignored.</source>
          <target state="translated">Os elementos de translação da matriz (terceira linha) são ignorados.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.Point[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that represents the points to transform.</source>
          <target state="translated">Uma matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que representa os pontos a serem transformados.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.Point[])">
          <source>Applies only the scale and rotate components of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> to the specified array of points.</source>
          <target state="translated">Aplica somente os componentes de escala e rotação deste <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> à matriz especificada de pontos.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.Point[])">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event object.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, uma <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> objeto de evento.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.Point[])">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.Point[])">
          <source>Creates an array of points that form a rectangle.</source>
          <target state="translated">Cria uma matriz de pontos que formam um retângulo.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.Point[])">
          <source>Draws this array of points to the screen prior to applying a scaling transform (the blue rectangle).</source>
          <target state="translated">Desenha essa matriz de pontos na tela antes de aplicar uma transformação de escala (o retângulo azul).</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.Point[])">
          <source>Creates a matrix and scales it by 3 in the x-axis and 2 in the y-axis, and translates it by 100 in both axes.</source>
          <target state="translated">Cria uma matriz e pode ser dimensionado por 3 no eixo x e 2 no eixo y e converte-o por 100 em ambos os eixos.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.Point[])">
          <source>Lists the matrix elements to the screen.</source>
          <target state="translated">Lista os elementos de matriz para a tela.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.Point[])">
          <source>Applies this matrix transform to the array of points.</source>
          <target state="translated">Aplica-se essa transformação de matriz para a matriz de pontos.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.Point[])">
          <source>Draws the transformed array to the screen (the red rectangle).</source>
          <target state="translated">Desenha a matriz transformada na tela (retângulo vermelho).</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.Point[])">
          <source>Notice that the red rectangle has been scaled by a factor of 3 in the x-axis and by 2 in the y-axis, including the upper left-hand corner of the rectangle (the beginning point of the rectangle) but the translation vector (the last two elements of the matrix) is ignored.</source>
          <target state="translated">Observe que o retângulo vermelho ter sido ajustado por um fator de 3 no eixo x e 2 no eixo y, incluindo o canto superior esquerdo do retângulo (o ponto de início do retângulo), mas o vetor de conversão (os dois últimos elementos da matriz) é ignorado.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.PointF[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that represents the points to transform.</source>
          <target state="translated">Uma matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que representa os pontos a serem transformados.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.PointF[])">
          <source>Multiplies each vector in an array by the matrix.</source>
          <target state="translated">Multiplica cada vetor em uma matriz pela matriz.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.PointF[])">
          <source>The translation elements of this matrix (third row) are ignored.</source>
          <target state="translated">Os elementos de translação da matriz (terceira linha) são ignorados.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.PointF[])">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix.TransformVectors%28System.Drawing.Point%5B%5D%29&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix.TransformVectors%28System.Drawing.Point%5B%5D%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.Matrix">
          <source>Applies the specified translation vector to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> by prepending the translation vector.</source>
          <target state="translated">Aplica o vetor de translação especificado a este <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> acrescentando o vetor de translação.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single)">
          <source>The x value by which to translate this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">O valor de x pelo qual converter esse <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single)">
          <source>The y value by which to translate this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">O valor de y pelo qual converter esse <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single)">
          <source>Applies the specified translation vector (<ph id="ph1">&lt;paramref name="offsetX" /&gt;</ph> and <ph id="ph2">&lt;paramref name="offsetY" /&gt;</ph>) to this <ph id="ph3">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> by prepending the translation vector.</source>
          <target state="translated">Aplica-se do vetor de conversão especificado (<ph id="ph1">&lt;paramref name="offsetX" /&gt;</ph> e <ph id="ph2">&lt;paramref name="offsetY" /&gt;</ph>) a este <ph id="ph3">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> acrescentando o vetor de conversão.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix.Translate%28System.Single%2CSystem.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.Matrix.Translate%28System.Single%2CSystem.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The x value by which to translate this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">O valor de x pelo qual converter esse <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The y value by which to translate this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">O valor de y pelo qual converter esse <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.MatrixOrder" /&gt;</ph> that specifies the order (append or prepend) in which the translation is applied to this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.MatrixOrder" /&gt;</ph> que especifica a ordem (suceder ou preceder) em que a translação é aplicada a este <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Applies the specified translation vector to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> in the specified order.</source>
          <target state="translated">Aplica-se o vetor de conversão especificada a este <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> na ordem especificada.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event object.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, uma <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> objeto de evento.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Draws a rectangle to the screen prior to applying a translate transform (the blue rectangle).</source>
          <target state="translated">Desenha um retângulo para a tela antes de aplicar uma transformação de translação (o retângulo azul).</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Creates a matrix and translates it by 100 in both axes.</source>
          <target state="translated">Cria uma matriz e converte-o por 100 em ambos os eixos.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Applies this matrix transform to the rectangle,</source>
          <target state="translated">Aplica-se essa transformação de matriz para o retângulo</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Draws the transformed rectangle to the screen (the red rectangle).</source>
          <target state="translated">Desenha um retângulo transformado na tela (retângulo vermelho).</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Notice that the beginning of the red rectangle is located 100 points in both axes from the beginning of the blue triangle.</source>
          <target state="translated">Observe que o início do retângulo vermelho é localizados 100 pontos em ambos os eixos desde o início do triângulo azul.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.VectorTransformPoints(System.Drawing.Point[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that represents the points to transform.</source>
          <target state="translated">Uma matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que representa os pontos a serem transformados.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.VectorTransformPoints(System.Drawing.Point[])">
          <source>Multiplies each vector in an array by the matrix.</source>
          <target state="translated">Multiplica cada vetor em uma matriz pela matriz.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.Matrix.VectorTransformPoints(System.Drawing.Point[])">
          <source>The translation elements of this matrix (third row) are ignored.</source>
          <target state="translated">Os elementos de translação da matriz (terceira linha) são ignorados.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>