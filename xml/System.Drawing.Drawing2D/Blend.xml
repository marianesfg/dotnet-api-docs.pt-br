<Type Name="Blend" FullName="System.Drawing.Drawing2D.Blend">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d25122057fdf6c6a9858a0440bb7bc3f8e689f61" /><Meta Name="ms.sourcegitcommit" Value="d40b35262cbc997b79bf76da3a39ccf59b738efc" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="12/05/2018" /><Meta Name="ms.locfileid" Value="52904624" /></Metadata><TypeSignature Language="C#" Value="public sealed class Blend" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Blend extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Drawing2D.Blend" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Blend" />
  <TypeSignature Language="C++ CLI" Value="public ref class Blend sealed" />
  <TypeSignature Language="F#" Value="type Blend = class" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Define um padrão de mesclagem para um objeto <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />. Essa classe não pode ser herdada.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gradientes são usados para sombrear perfeitamente os interiores das formas. Um padrão de mesclagem é definido por duas matrizes (<xref:System.Drawing.Drawing2D.Blend.Factors%2A> e <xref:System.Drawing.Drawing2D.Blend.Positions%2A>) que contêm o mesmo número de elementos. Cada elemento da <xref:System.Drawing.Drawing2D.Blend.Positions%2A> matriz representa uma proporção da distância ao longo da linha de gradiente. Cada elemento do <xref:System.Drawing.Drawing2D.Blend.Factors%2A> matriz representa a proporção de cores no gradiente mistura na posição ao longo da linha gradiente representada pelo elemento correspondente na inicial e final a <xref:System.Drawing.Drawing2D.Blend.Positions%2A> matriz.  
  
 Por exemplo, se correspondente elementos do <xref:System.Drawing.Drawing2D.Blend.Positions%2A> e <xref:System.Drawing.Drawing2D.Blend.Factors%2A> matrizes são 0.2 e 0.3, respectivamente, para um gradiente linear de azul para vermelho ao longo de uma linha de 100 pixels, os pixels da cor 20 ao longo da linha (20 por cento da distância) consiste de 30 por cento 70 por cento vermelha e azul.  
  
   
  
## Examples  
 O exemplo a seguir destina-se a ser usado em um ambiente do Windows Forms. Ele demonstra como usar o <xref:System.Drawing.Drawing2D.Blend> classe junto com o <xref:System.Drawing.Drawing2D.LinearGradientBrush> classe para desenhar uma elipse na tela que possui suas cores combinados. A elipse é azul à esquerda, geométrico para vermelho no centro, e misturas de volta para azul à direita. Isso é feito por meio das configurações na `myFactors` e `myPositions` matrizes usadas no <xref:System.Drawing.Drawing2D.Blend.Factors%2A> e <xref:System.Drawing.Drawing2D.Blend.Positions%2A> propriedades. Observe que o <xref:System.Drawing.Drawing2D.Blend> propriedade do <xref:System.Drawing.Drawing2D.LinearGradientBrush> objeto denominado `lgBrush2` devem ser feitas igual ao <xref:System.Drawing.Drawing2D.Blend> objeto `myBlend`.  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMisc#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMisc/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMisc#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMisc/CS/form1.cs#3)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMisc#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMisc/VB/form1.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Drawing.Drawing2D.Blend" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Blend ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Blend.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Blend();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Drawing.Drawing2D.Blend" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O exemplo a seguir destina-se a ser usado em um ambiente do Windows Forms. Ele demonstra como usar o <xref:System.Drawing.Drawing2D.Blend> classe junto com o <xref:System.Drawing.Drawing2D.LinearGradientBrush> classe para desenhar uma elipse na tela que possui suas cores combinados. A elipse é azul à esquerda, geométrico para vermelho no centro, e misturas de volta para azul à direita. Isso é feito por meio das configurações na `myFactors` e `myPositions` matrizes usadas no <xref:System.Drawing.Drawing2D.Blend.Factors%2A> e <xref:System.Drawing.Drawing2D.Blend.Positions%2A> propriedades. Observe que o <xref:System.Drawing.Drawing2D.Blend> propriedade do <xref:System.Drawing.Drawing2D.LinearGradientBrush> objeto denominado `lgBrush2` devem ser feitas igual ao <xref:System.Drawing.Drawing2D.Blend> objeto `myBlend`.  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMisc#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMisc/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMisc#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMisc/CS/form1.cs#3)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMisc#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMisc/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Blend (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Blend.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Blend(int count);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.Blend : int -&gt; System.Drawing.Drawing2D.Blend" Usage="new System.Drawing.Drawing2D.Blend count" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count">O número de elementos nas matrizes <see cref="P:System.Drawing.Drawing2D.Blend.Factors" /> e <see cref="P:System.Drawing.Drawing2D.Blend.Positions" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Drawing.Drawing2D.Blend" /> com o número especificado de fatores e posições.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.Blend.%23ctor%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Factors">
      <MemberSignature Language="C#" Value="public float[] Factors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32[] Factors" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.Blend.Factors" />
      <MemberSignature Language="VB.NET" Value="Public Property Factors As Single()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;float&gt; ^ Factors { cli::array &lt;float&gt; ^ get(); void set(cli::array &lt;float&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Factors : single[] with get, set" Usage="System.Drawing.Drawing2D.Blend.Factors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define uma matriz de fatores de mesclagem para o gradiente.</summary>
        <value>Uma matriz de fatores de mesclagem que especificam as porcentagens de cor inicial e a cor final a ser usado na posição correspondente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalmente, os elementos dessa matriz são um valor de 0.0f por meio de 1.0f. Esses elementos especificam a posição do blend as porcentagens da cor final e a cor inicial a ser usada em correspondente. Por exemplo, um valor de 0,2 indica que, na posição especificada, a cor combinada é composta de 20 por cento da cor final do gradiente e 80 por cento de cor inicial do gradiente.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Drawing.Drawing2D.Blend> classe, definindo o <xref:System.Drawing.Drawing2D.Blend.Factors%2A> e <xref:System.Drawing.Drawing2D.Blend.Positions%2A> propriedades. Este exemplo é projetado para ser usado com o Windows Forms. Cole o código em um formulário que importa o <xref:System.Drawing.Drawing2D> namespace. Lidar com o formulário <xref:System.Windows.Forms.Control.Paint> evento e a chamada a `DemonstrateBlend` método, passando `e` como <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cpp[System.Drawing.Misc2#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Misc2/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.Misc2#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc2/CS/form1.cs#5)]
 [!code-vb[System.Drawing.Misc2#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc2/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Positions">
      <MemberSignature Language="C#" Value="public float[] Positions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32[] Positions" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.Blend.Positions" />
      <MemberSignature Language="VB.NET" Value="Public Property Positions As Single()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;float&gt; ^ Positions { cli::array &lt;float&gt; ^ get(); void set(cli::array &lt;float&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Positions : single[] with get, set" Usage="System.Drawing.Drawing2D.Blend.Positions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define uma matriz de posições de mesclagem para o gradiente.</summary>
        <value>Uma matriz de posições de mesclagem que especificam os percentuais de distância ao longo da linha do gradiente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Os elementos dessa matriz especificam percentuais de distância ao longo da linha do gradiente. Por exemplo, um valor de elemento de 0.2f Especifica que esse ponto é 20 por cento da distância total do ponto de partida. Os elementos nesta matriz são representados por valores de float entre 0.0f e 1.0f. O primeiro elemento da matriz deve ser 0.0f, e o último elemento deve ser 1.0f.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Drawing.Drawing2D.Blend> classe, definindo o <xref:System.Drawing.Drawing2D.Blend.Factors%2A> e <xref:System.Drawing.Drawing2D.Blend.Positions%2A> propriedades. Este exemplo é projetado para ser usado com o Windows Forms. Cole o código em um formulário que importa o <xref:System.Drawing.Drawing2D> namespace. Lidar com o formulário <xref:System.Windows.Forms.Control.Paint> evento e a chamada a `DemonstrateBlend` método, passando `e` como <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cpp[System.Drawing.Misc2#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Misc2/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.Misc2#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc2/CS/form1.cs#5)]
 [!code-vb[System.Drawing.Misc2#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc2/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>