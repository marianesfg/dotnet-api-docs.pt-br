<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="GraphicsPath.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5010b867d0c50e186006fea90cdbc67fefd8cfd61.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">010b867d0c50e186006fea90cdbc67fefd8cfd61</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Represents a series of connected lines and curves.</source>
          <target state="translated">Representa uma série de linhas e curvas conectadas.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>This class cannot be inherited.</source>
          <target state="translated">Essa classe não pode ser herdada.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Applications use paths to draw outlines of shapes, fill the interiors of shapes, and create clipping regions.</source>
          <target state="translated">Aplicativos usam caminhos para desenhar os contornos das formas, preencher os interiores das formas e criar regiões de recorte.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>The graphics engine maintains the coordinates of geometric shapes in a path in world coordinate space.</source>
          <target state="translated">O mecanismo de gráficos mantém as coordenadas de formas geométricas um caminho no espaço de coordenadas do mundo.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>A path may be composed of any number of figures (subpaths).</source>
          <target state="translated">Um caminho pode ser composto de qualquer número de valores (subcaminhos).</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Each figure is either composed of a sequence of connected lines and curves or a geometric shape primitive.</source>
          <target state="translated">Cada figura ou é composta de uma sequência de linhas conectadas e curvas ou uma primitivo de forma geométrica.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>The starting point of a figure is the first point in the sequence of connected lines and curves.</source>
          <target state="translated">O ponto de partida de uma figura é o primeiro ponto na sequência de linhas e curvas conectadas.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>The ending point is the last point in the sequence.</source>
          <target state="translated">O ponto final é o último ponto na sequência.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>The starting and ending points of a geometric shape primitive are defined by the primitive specification.</source>
          <target state="translated">Os pontos iniciais e final de uma forma geométrica primitivo são definidos pela especificação de primitivos.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>A figure that consists of a sequence of connected lines and curves (whose starting and ending points may be coincident) is an open figure, unless it is closed explicitly.</source>
          <target state="translated">Uma figura que consiste em uma sequência de linhas conectadas e curvas (cujos pontos inicial e final podem ser coincidentes) é uma figura aberta, a menos que ela está fechada explicitamente.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>A figure can be closed explicitly, by using the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.CloseFigure%2A&gt;</ph> method, which closes the current figure by connecting a line from the ending point to the starting point.</source>
          <target state="translated">Uma figura pode ser fechada explicitamente, usando o <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.CloseFigure%2A&gt;</ph> método, que fecha a figura atual por uma linha de conexão do ponto final para o ponto de partida.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>A figure that consists of a geometric shape primitive is a closed figure.</source>
          <target state="translated">Uma figura que consiste em um primitivo de forma geométrica é uma figura fechada.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>For purposes of filling and clipping (for example, if a path is rendered using <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph>), all open figures are closed by adding a line from the figure's first point to its last point.</source>
          <target state="translated">Para fins de preenchimento e recorte (por exemplo, se um caminho é renderizado usando <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph>), todos os valores são fechados, adicionando uma linha do primeiro ponto da figura no último ponto.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>A new figure is implicitly started when a path is created or when a figure is closed.</source>
          <target state="translated">Uma nova figura é iniciada implicitamente quando um caminho é criado ou quando uma figura está fechada.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>A new figure is explicitly created when the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.StartFigure%2A&gt;</ph> method is called.</source>
          <target state="translated">Uma nova figura explicitamente é criada quando o <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.StartFigure%2A&gt;</ph> método é chamado.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>When a geometric shape primitive is added to a path, it adds a figure containing the geometric shape, and also implicitly starts a new figure.</source>
          <target state="translated">Quando uma forma geométrica primitivo é adicionada a um caminho, adicione uma figura que contém a forma geométrica e também implicitamente inicia uma nova figura.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Consequently, there is always a current figure in a path.</source>
          <target state="translated">Consequentemente, sempre há uma figura atual em um caminho.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>When lines and curves are added to a path, an implicit line is added as needed to connect the ending point of the current figure to the starting point of the new lines and curves to form a sequence of connected lines and curves.</source>
          <target state="translated">Quando linhas e curvas são adicionadas a um caminho, uma linha implícita é adicionada, conforme necessário para conectar o ponto final da figura atual para o ponto de partida das novas linhas e curvas para formar uma sequência de linhas conectadas e curvas.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>A figure has a direction that describes how line and curve segments are traced between the starting point and the ending point.</source>
          <target state="translated">Uma figura tem uma direção que descreve como segmentos de linha e curva são rastreados entre o ponto de partida e o ponto final.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>The direction is defined in the order that lines and curves are added to a figure, or is defined by the geometric shape primitive.</source>
          <target state="translated">A direção é definida na ordem em que as linhas e curvas são adicionados a uma figura, ou é definido pela forma geométrica primitivo.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>The direction is used in determining the path interiors for clipping and fill.</source>
          <target state="translated">A direção é usada para determinar os interiores de caminho de recorte e preenchimento.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> class with a <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> enumeration of <ph id="ph3">&lt;see langword="Alternate" /&gt;</ph>.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> com uma enumeração <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> de <ph id="ph3">&lt;see langword="Alternate" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> class with a <ph id="ph2">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.FillMode" /&gt;</ph> value of <ph id="ph3">&lt;see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" /&gt;</ph>.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> com um valor <ph id="ph2">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.FillMode" /&gt;</ph> de <ph id="ph3">&lt;see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Drawing2D.FillMode)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> enumeration that determines how the interior of this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> is filled.</source>
          <target state="translated">A enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> que determina como o interior desse <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> é preenchido.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Drawing2D.FillMode)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> enumeration.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> com a enumeração <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> especificada.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that defines the coordinates of the points that make up this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Uma matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que define as coordenadas dos pontos que compõem este <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> enumeration elements that specifies the type of each corresponding point in the <bpt id="p1">&lt;c&gt;</bpt>pts<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated">Uma matriz de elementos de enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> que especifica o tipo de cada ponto correspondente na matriz <bpt id="p1">&lt;c&gt;</bpt>pts<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> arrays.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> com as matrizes <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> e <ph id="ph3">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> especificadas.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that defines the coordinates of the points that make up this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Uma matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que define as coordenadas dos pontos que compõem este <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> enumeration elements that specifies the type of each corresponding point in the <bpt id="p1">&lt;c&gt;</bpt>pts<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated">Uma matriz de elementos de enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> que especifica o tipo de cada ponto correspondente na matriz <bpt id="p1">&lt;c&gt;</bpt>pts<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> array with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> arrays.</source>
          <target state="translated">Inicializa uma nova instância da matriz <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> com as matrizes <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> e <ph id="ph3">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> especificadas.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[],System.Drawing.Drawing2D.FillMode)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that defines the coordinates of the points that make up this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Uma matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que define as coordenadas dos pontos que compõem este <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[],System.Drawing.Drawing2D.FillMode)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> enumeration elements that specifies the type of each corresponding point in the <bpt id="p1">&lt;c&gt;</bpt>pts<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated">Uma matriz de elementos de enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> que especifica o tipo de cada ponto correspondente na matriz <bpt id="p1">&lt;c&gt;</bpt>pts<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[],System.Drawing.Drawing2D.FillMode)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> enumeration that specifies how the interiors of shapes in this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> are filled.</source>
          <target state="translated">Uma enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> que especifica como os interiores das formas neste <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> são preenchidos.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[],System.Drawing.Drawing2D.FillMode)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> arrays and with the specified <ph id="ph4">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> enumeration element.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> com as matrizes <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> e <ph id="ph3">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> especificadas e com o elemento de enumeração <ph id="ph4">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[],System.Drawing.Drawing2D.FillMode)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that defines the coordinates of the points that make up this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Uma matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que define as coordenadas dos pontos que compõem este <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[],System.Drawing.Drawing2D.FillMode)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> enumeration elements that specifies the type of each corresponding point in the <bpt id="p1">&lt;c&gt;</bpt>pts<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated">Uma matriz de elementos de enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> que especifica o tipo de cada ponto correspondente na matriz <bpt id="p1">&lt;c&gt;</bpt>pts<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[],System.Drawing.Drawing2D.FillMode)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> enumeration that specifies how the interiors of shapes in this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> are filled.</source>
          <target state="translated">Uma enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> que especifica como os interiores das formas neste <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> são preenchidos.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[],System.Drawing.Drawing2D.FillMode)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> array with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> arrays and with the specified <ph id="ph4">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> enumeration element.</source>
          <target state="translated">Inicializa uma nova instância da matriz <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> com as matrizes <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> e <ph id="ph3">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> especificadas e com o elemento de enumeração <ph id="ph4">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Appends an elliptical arc to the current figure.</source>
          <target state="translated">Acrescenta um arco elíptico à figura atual.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the rectangular bounds of the ellipse from which the arc is taken.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que representa os limites retangulares da elipse da qual o arco é retirado.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>The starting angle of the arc, measured in degrees clockwise from the x-axis.</source>
          <target state="translated">O ângulo inicial do arco, medido em graus no sentido horário do eixo x.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>The angle between <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> and the end of the arc.</source>
          <target state="translated">O ângulo entre <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> e o final do arco.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>Appends an elliptical arc to the current figure.</source>
          <target state="translated">Acrescenta um arco elíptico à figura atual.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</source>
          <target state="translated">Se houver linhas anteriores ou curvas na figura, uma linha é adicionada ao conectar o ponto de extremidade do segmento anterior ao início do arco.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</source>
          <target state="translated">O arco é rastreado ao longo do perímetro da elipse delimitada pelo retângulo especificado.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</source>
          <target state="translated">O ponto de partida do arco é determinado pelo avaliar no sentido horário do eixo x da elipse (com o ângulo de graus de 0), o número de graus no ângulo inicial.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</source>
          <target state="translated">Da mesma forma, o ponto de extremidade está localizado medindo no sentido horário do ponto de partida pelo número de graus em ângulo de flecha.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</source>
          <target state="translated">Se o ângulo de flecha é maior que 360 graus ou menor que-360 graus, o arco é varridas para exatamente 360 graus ou-360 graus, respectivamente.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, uma <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objeto de evento.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>Creates a rectangle, from which the arc is defined.</source>
          <target state="translated">Cria um retângulo, do qual o arco é definido.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>Creates a path, <ph id="ph1">`myPath`</ph>.</source>
          <target state="translated">Cria um caminho, <ph id="ph1">`myPath`</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>Defines a 180-degree elliptical arc that sweeps from 0 degrees to 180 degrees and appends it to a path.</source>
          <target state="translated">Define um arco elíptico de 180 graus que varre de 0 graus a 180 graus e anexa a um caminho.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>Draws the path to screen.</source>
          <target state="translated">Desenha o caminho para a tela.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> that represents the rectangular bounds of the ellipse from which the arc is taken.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> que representa os limites retangulares da elipse da qual o arco é retirado.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)">
          <source>The starting angle of the arc, measured in degrees clockwise from the x-axis.</source>
          <target state="translated">O ângulo inicial do arco, medido em graus no sentido horário do eixo x.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)">
          <source>The angle between <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> and the end of the arc.</source>
          <target state="translated">O ângulo entre <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> e o final do arco.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)">
          <source>Appends an elliptical arc to the current figure.</source>
          <target state="translated">Acrescenta um arco elíptico à figura atual.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)">
          <source>If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</source>
          <target state="translated">Se houver linhas anteriores ou curvas na figura, uma linha é adicionada ao conectar o ponto de extremidade do segmento anterior ao início do arco.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)">
          <source>The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</source>
          <target state="translated">O arco é rastreado ao longo do perímetro da elipse delimitada pelo retângulo especificado.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)">
          <source>The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</source>
          <target state="translated">O ponto de partida do arco é determinado pelo avaliar no sentido horário do eixo x da elipse (com o ângulo de graus de 0), o número de graus no ângulo inicial.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)">
          <source>The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</source>
          <target state="translated">Da mesma forma, o ponto de extremidade está localizado medindo no sentido horário do ponto de partida pelo número de graus em ângulo de flecha.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)">
          <source>If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</source>
          <target state="translated">Se o ângulo de flecha é maior que 360 graus ou menor que-360 graus, o arco é varridas para exatamente 360 graus ou-360 graus, respectivamente.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The x-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</source>
          <target state="translated">A coordenada X do canto superior esquerdo da região retangular que define a elipse da qual o arco é retirado.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The y-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</source>
          <target state="translated">A coordenada y do canto superior esquerdo da região retangular que define a elipse da qual o arco é retirado.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The width of the rectangular region that defines the ellipse from which the arc is drawn.</source>
          <target state="translated">A largura da região retangular que define a elipse da qual o arco é retirado.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The height of the rectangular region that defines the ellipse from which the arc is drawn.</source>
          <target state="translated">A altura da região retangular que define a elipse da qual o arco é retirado.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The starting angle of the arc, measured in degrees clockwise from the x-axis.</source>
          <target state="translated">O ângulo inicial do arco, medido em graus no sentido horário do eixo x.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The angle between <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> and the end of the arc.</source>
          <target state="translated">O ângulo entre <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> e o final do arco.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>Appends an elliptical arc to the current figure.</source>
          <target state="translated">Acrescenta um arco elíptico à figura atual.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</source>
          <target state="translated">Se houver linhas anteriores ou curvas na figura, uma linha é adicionada ao conectar o ponto de extremidade do segmento anterior ao início do arco.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</source>
          <target state="translated">O arco é rastreado ao longo do perímetro da elipse delimitada pelo retângulo especificado.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</source>
          <target state="translated">O ponto de partida do arco é determinado pelo avaliar no sentido horário do eixo x da elipse (com o ângulo de graus de 0), o número de graus no ângulo inicial.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</source>
          <target state="translated">Da mesma forma, o ponto de extremidade está localizado medindo no sentido horário do ponto de partida pelo número de graus em ângulo de flecha.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</source>
          <target state="translated">Se o ângulo de flecha é maior que 360 graus ou menor que-360 graus, o arco é varridas para exatamente 360 graus ou-360 graus, respectivamente.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The x-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</source>
          <target state="translated">A coordenada X do canto superior esquerdo da região retangular que define a elipse da qual o arco é retirado.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The y-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</source>
          <target state="translated">A coordenada y do canto superior esquerdo da região retangular que define a elipse da qual o arco é retirado.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The width of the rectangular region that defines the ellipse from which the arc is drawn.</source>
          <target state="translated">A largura da região retangular que define a elipse da qual o arco é retirado.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The height of the rectangular region that defines the ellipse from which the arc is drawn.</source>
          <target state="translated">A altura da região retangular que define a elipse da qual o arco é retirado.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The starting angle of the arc, measured in degrees clockwise from the x-axis.</source>
          <target state="translated">O ângulo inicial do arco, medido em graus no sentido horário do eixo x.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The angle between <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> and the end of the arc.</source>
          <target state="translated">O ângulo entre <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> e o final do arco.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>Appends an elliptical arc to the current figure.</source>
          <target state="translated">Acrescenta um arco elíptico à figura atual.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</source>
          <target state="translated">Se houver linhas anteriores ou curvas na figura, uma linha é adicionada ao conectar o ponto de extremidade do segmento anterior ao início do arco.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</source>
          <target state="translated">O arco é rastreado ao longo do perímetro da elipse delimitada pelo retângulo especificado.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</source>
          <target state="translated">O ponto de partida do arco é determinado pelo avaliar no sentido horário do eixo x da elipse (com o ângulo de graus de 0), o número de graus no ângulo inicial.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</source>
          <target state="translated">Da mesma forma, o ponto de extremidade está localizado medindo no sentido horário do ponto de partida pelo número de graus em ângulo de flecha.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</source>
          <target state="translated">Se o ângulo de flecha é maior que 360 graus ou menor que-360 graus, o arco é varridas para exatamente 360 graus ou-360 graus, respectivamente.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Adds a cubic Bézier curve to the current figure.</source>
          <target state="translated">Adiciona uma curva de Bézier cúbica à figura atual.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the starting point of the curve.</source>
          <target state="translated">Uma <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que representa o ponto inicial da curva.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the first control point for the curve.</source>
          <target state="translated">Uma <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que representa o primeiro ponto de controle da curva.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the second control point for the curve.</source>
          <target state="translated">Uma <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que representa o segundo ponto de controle da curva.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the endpoint of the curve.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que representa o ponto de extremidade da curva.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
          <source>Adds a cubic Bézier curve to the current figure.</source>
          <target state="translated">Adiciona uma curva de Bézier cúbica à figura atual.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
          <source>The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</source>
          <target state="translated">A curva cúbica é construída do primeiro ponto até o quarto ponto usando os pontos de segundo e terceiro como pontos de controle.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
          <source>If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</source>
          <target state="translated">Se houver uma linha anterior ou um segmento de curva na figura, uma linha é adicionada ao conectar o ponto de extremidade do segmento anterior para o ponto de partida da curva cúbica.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> that represents the starting point of the curve.</source>
          <target state="translated">Uma <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que representa o ponto inicial da curva.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> that represents the first control point for the curve.</source>
          <target state="translated">Uma <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que representa o primeiro ponto de controle da curva.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> that represents the second control point for the curve.</source>
          <target state="translated">Uma <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que representa o segundo ponto de controle da curva.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> that represents the endpoint of the curve.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que representa o ponto de extremidade da curva.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
          <source>Adds a cubic Bézier curve to the current figure.</source>
          <target state="translated">Adiciona uma curva de Bézier cúbica à figura atual.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
          <source>The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</source>
          <target state="translated">A curva cúbica é construída do primeiro ponto até o quarto ponto usando os pontos de segundo e terceiro como pontos de controle.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
          <source>If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</source>
          <target state="translated">Se houver uma linha anterior ou um segmento de curva na figura, uma linha é adicionada ao conectar o ponto de extremidade do segmento anterior para o ponto de partida da curva cúbica.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The x-coordinate of the starting point of the curve.</source>
          <target state="translated">A coordenada X do ponto de partida da curva.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The y-coordinate of the starting point of the curve.</source>
          <target state="translated">A coordenada Y do ponto de partida da curva.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The x-coordinate of the first control point for the curve.</source>
          <target state="translated">A coordenada X do primeiro ponto de controle da curva.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The y-coordinate of the first control point for the curve.</source>
          <target state="translated">A coordenada Y do primeiro ponto de controle da curva.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The x-coordinate of the second control point for the curve.</source>
          <target state="translated">A coordenada X do segundo ponto de controle da curva.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The y-coordinate of the second control point for the curve.</source>
          <target state="translated">A coordenada Y do segundo ponto de controle da curva.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The x-coordinate of the endpoint of the curve.</source>
          <target state="translated">A coordenada X do ponto de extremidade da curva.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The y-coordinate of the endpoint of the curve.</source>
          <target state="translated">A coordenada Y do ponto de extremidade da curva.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Adds a cubic Bézier curve to the current figure.</source>
          <target state="translated">Adiciona uma curva de Bézier cúbica à figura atual.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</source>
          <target state="translated">A curva cúbica é construída do primeiro ponto até o quarto ponto usando os pontos de segundo e terceiro como pontos de controle.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</source>
          <target state="translated">Se houver uma linha anterior ou um segmento de curva na figura, uma linha é adicionada ao conectar o ponto de extremidade do segmento anterior para o ponto de partida da curva cúbica.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, uma <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objeto de evento.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Creates a path.</source>
          <target state="translated">Cria um caminho.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Adds a cubic Bézier curve defined by the points (50, 50), (70, 0), (100, 120), and (150, 50) to the path.</source>
          <target state="translated">Adiciona uma curva de Bézier cúbica definida por pontos (50, 50), (70, 0), (100, 120) e (150, 50) para o caminho.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Closes the curve.</source>
          <target state="translated">Fecha a curva.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Draws the path to screen.</source>
          <target state="translated">Desenha o caminho para a tela.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The x-coordinate of the starting point of the curve.</source>
          <target state="translated">A coordenada X do ponto de partida da curva.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The y-coordinate of the starting point of the curve.</source>
          <target state="translated">A coordenada Y do ponto de partida da curva.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The x-coordinate of the first control point for the curve.</source>
          <target state="translated">A coordenada X do primeiro ponto de controle da curva.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The y-coordinate of the first control point for the curve.</source>
          <target state="translated">A coordenada Y do primeiro ponto de controle da curva.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The x-coordinate of the second control point for the curve.</source>
          <target state="translated">A coordenada X do segundo ponto de controle da curva.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The y-coordinate of the second control point for the curve.</source>
          <target state="translated">A coordenada Y do segundo ponto de controle da curva.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The x-coordinate of the endpoint of the curve.</source>
          <target state="translated">A coordenada X do ponto de extremidade da curva.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The y-coordinate of the endpoint of the curve.</source>
          <target state="translated">A coordenada Y do ponto de extremidade da curva.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>Adds a cubic Bézier curve to the current figure.</source>
          <target state="translated">Adiciona uma curva de Bézier cúbica à figura atual.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</source>
          <target state="translated">A curva cúbica é construída do primeiro ponto até o quarto ponto usando os pontos de segundo e terceiro como pontos de controle.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</source>
          <target state="translated">Se houver uma linha anterior ou um segmento de curva na figura, uma linha é adicionada ao conectar o ponto de extremidade do segmento anterior para o ponto de partida da curva cúbica.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Adds a sequence of connected cubic Bézier curves to the current figure.</source>
          <target state="translated">Adiciona à figura atual uma sequência de curvas de Bézier cúbicas conectadas.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that represents the points that define the curves.</source>
          <target state="translated">Uma matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que representa os pontos que definem as curvas.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])">
          <source>Adds a sequence of connected cubic Bézier curves to the current figure.</source>
          <target state="translated">Adiciona à figura atual uma sequência de curvas de Bézier cúbicas conectadas.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])">
          <source>The <ph id="ph1">`points`</ph> parameter specifies an array of endpoints and control points of the connected curves.</source>
          <target state="translated">O <ph id="ph1">`points`</ph> parâmetro especifica uma matriz de pontos de extremidade e pontos de controle das curvas conectadas.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])">
          <source>The first curve is constructed from the first point to the fourth point in the <ph id="ph1">`points`</ph> array by using the second and third points as control points.</source>
          <target state="translated">A primeira curva é construída do primeiro ponto até o quarto ponto na <ph id="ph1">`points`</ph> matriz usando os pontos de segundo e terceiro como pontos de controle.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])">
          <source>In addition to the endpoint of the previous curve, each subsequent curve in the sequence needs exactly three more points: the next two points in the sequence are control points, and the third is the endpoint for the added curve.</source>
          <target state="translated">Além de ponto de extremidade da curva anterior, cada curva subsequente na sequência deverá exatamente três pontos mais: os dois pontos na sequência são pontos de controle e a terceira é o ponto de extremidade para a curva adicionado.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])">
          <source>If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the first cubic curve in the sequence.</source>
          <target state="translated">Se houver linhas anteriores ou curvas na figura, uma linha é adicionada para conectar o ponto de extremidade do segmento anterior para o ponto de partida da curva cúbica primeiro na sequência.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, uma <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objeto de evento.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])">
          <source>Creates an array of seven points (representing two connected Bézier curves).</source>
          <target state="translated">Cria uma matriz de sete pontos (representando duas curvas de Bézier conectadas).</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])">
          <source>Creates a path and adds the series of Bézier curve points to the path.</source>
          <target state="translated">Cria um caminho e adiciona a série de pontos de curva de Bézier no caminho.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])">
          <source>Draws the path to screen.</source>
          <target state="translated">Desenha o caminho para a tela.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that represents the points that define the curves.</source>
          <target state="translated">Uma matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que representa os pontos que definem as curvas.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])">
          <source>Adds a sequence of connected cubic Bézier curves to the current figure.</source>
          <target state="translated">Adiciona à figura atual uma sequência de curvas de Bézier cúbicas conectadas.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])">
          <source>The <ph id="ph1">`points`</ph> parameter specifies an array of endpoints and control points of the connected curves.</source>
          <target state="translated">O <ph id="ph1">`points`</ph> parâmetro especifica uma matriz de pontos de extremidade e pontos de controle das curvas conectadas.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])">
          <source>The first curve is constructed from the first point to the fourth point in the <ph id="ph1">`points`</ph> array by using the second and third points as control points.</source>
          <target state="translated">A primeira curva é construída do primeiro ponto até o quarto ponto na <ph id="ph1">`points`</ph> matriz usando os pontos de segundo e terceiro como pontos de controle.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])">
          <source>In addition to the endpoint of the previous curve, each subsequent curve in the sequence needs exactly three more points: the next two points in the sequence are control points, and the third is the endpoint for the added curve.</source>
          <target state="translated">Além de ponto de extremidade da curva anterior, cada curva subsequente na sequência deverá exatamente três pontos mais: os dois pontos na sequência são pontos de controle e a terceira é o ponto de extremidade para a curva adicionado.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])">
          <source>If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the first cubic curve in the sequence.</source>
          <target state="translated">Se houver linhas anteriores ou curvas na figura, uma linha é adicionada para conectar o ponto de extremidade do segmento anterior para o ponto de partida da curva cúbica primeiro na sequência.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])">
          <source>For an example see:</source>
          <target state="translated">Para ver um exemplo:</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Adds a closed curve to this path.</source>
          <target state="translated">Adiciona uma curva fechada a esse caminho.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>A cardinal spline curve is used because the curve travels through each of the points in the array.</source>
          <target state="translated">Uma curva de spline cardinal é usada porque a curva percorre cada um dos pontos da matriz.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that represents the points that define the curve.</source>
          <target state="translated">Uma matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que representa os pontos que definem a curva.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])">
          <source>Adds a closed curve to this path.</source>
          <target state="translated">Adiciona uma curva fechada a esse caminho.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])">
          <source>A cardinal spline curve is used because the curve travels through each of the points in the array.</source>
          <target state="translated">Uma curva de spline cardinal é usada porque a curva percorre cada um dos pontos da matriz.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])">
          <source>The user must keep the original points if they are needed.</source>
          <target state="translated">O usuário deve manter os pontos originais se forem necessários.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])">
          <source>The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</source>
          <target state="translated">Os pontos originais são convertidos em pontos de controle de Bézier cúbicos internamente, portanto, não há nenhum mecanismo para retornar os pontos originais.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])">
          <source>If the first point and the last point in the <ph id="ph1">`points`</ph> array are not the same point, the curve is closed by connecting these two points.</source>
          <target state="translated">Se o primeiro ponto e o último ponto na <ph id="ph1">`points`</ph> matriz não são o mesmo ponto, a curva é fechada por conectar-se esses dois pontos.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])">
          <source>The tension value cannot be set for this method, and defaults to a value equivalent to 0.5.</source>
          <target state="translated">O valor de tensão não pode ser definido para esse método e o padrão é um valor equivalente a 0,5.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that represents the points that define the curve.</source>
          <target state="translated">Uma matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que representa os pontos que definem a curva.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])">
          <source>Adds a closed curve to this path.</source>
          <target state="translated">Adiciona uma curva fechada a esse caminho.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])">
          <source>A cardinal spline curve is used because the curve travels through each of the points in the array.</source>
          <target state="translated">Uma curva de spline cardinal é usada porque a curva percorre cada um dos pontos da matriz.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])">
          <source>The user must keep the original points if they are needed.</source>
          <target state="translated">O usuário deve manter os pontos originais se forem necessários.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])">
          <source>The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</source>
          <target state="translated">Os pontos originais são convertidos em pontos de controle de Bézier cúbicos internamente, portanto, não há nenhum mecanismo para retornar os pontos originais.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])">
          <source>If the first point and the last point in the <ph id="ph1">`points`</ph> array are not the same point, the curve is closed by connecting these two points.</source>
          <target state="translated">Se o primeiro ponto e o último ponto na <ph id="ph1">`points`</ph> matriz não são o mesmo ponto, a curva é fechada por conectar-se esses dois pontos.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])">
          <source>The tension value cannot be set for this method, and defaults to a value equivalent to 0.5.</source>
          <target state="translated">O valor de tensão não pode ser definido para esse método e o padrão é um valor equivalente a 0,5.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that represents the points that define the curve.</source>
          <target state="translated">Uma matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que representa os pontos que definem a curva.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
          <source>A value between from 0 through 1 that specifies the amount that the curve bends between points, with 0 being the smallest curve (sharpest corner) and 1 being the smoothest curve.</source>
          <target state="translated">Um valor entre 0 e 1, que especifica o quanto a curva se dobra entre pontos, com 0 sendo a curva menor (com canto mais agudo) e 1 sendo a curva mais suave.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
          <source>Adds a closed curve to this path.</source>
          <target state="translated">Adiciona uma curva fechada a esse caminho.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
          <source>A cardinal spline curve is used because the curve travels through each of the points in the array.</source>
          <target state="translated">Uma curva de spline cardinal é usada porque a curva percorre cada um dos pontos da matriz.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
          <source>The user must keep the original points if they are needed.</source>
          <target state="translated">O usuário deve manter os pontos originais se forem necessários.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
          <source>The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</source>
          <target state="translated">Os pontos originais são convertidos em pontos de controle de Bézier cúbicos internamente, portanto, não há nenhum mecanismo para retornar os pontos originais.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
          <source>If the first point and the last point in the <ph id="ph1">`points`</ph> array are not the same point, the curve is closed by connecting these two points.</source>
          <target state="translated">Se o primeiro ponto e o último ponto na <ph id="ph1">`points`</ph> matriz não são o mesmo ponto, a curva é fechada por conectar-se esses dois pontos.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, uma <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objeto de evento.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
          <source>Creates an array of six points (representing a cardinal spline).</source>
          <target state="translated">Cria uma matriz de seis pontos (representando um spline cardeal).</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
          <source>Creates a path and adds the closed cardinal spline curves to the path (closed from the endpoint to the starting point).</source>
          <target state="translated">Cria um caminho e adiciona as curvas spline cardeal fechada ao caminho (fechado do ponto de extremidade para o ponto de partida).</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
          <source>Draws the path to screen.</source>
          <target state="translated">Desenha o caminho para a tela.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
          <source>Notice that a tension of 0.5 is used.</source>
          <target state="translated">Observe que uma tensão de 0,5 é usada.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that represents the points that define the curve.</source>
          <target state="translated">Uma matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que representa os pontos que definem a curva.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)">
          <source>A value between from 0 through 1 that specifies the amount that the curve bends between points, with 0 being the smallest curve (sharpest corner) and 1 being the smoothest curve.</source>
          <target state="translated">Um valor entre 0 e 1, que especifica o quanto a curva se dobra entre pontos, com 0 sendo a curva menor (com canto mais agudo) e 1 sendo a curva mais suave.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)">
          <source>Adds a closed curve to this path.</source>
          <target state="translated">Adiciona uma curva fechada a esse caminho.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)">
          <source>A cardinal spline curve is used because the curve travels through each of the points in the array.</source>
          <target state="translated">Uma curva de spline cardinal é usada porque a curva percorre cada um dos pontos da matriz.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)">
          <source>The user must keep the original points if they are needed.</source>
          <target state="translated">O usuário deve manter os pontos originais se forem necessários.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)">
          <source>The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</source>
          <target state="translated">Os pontos originais são convertidos em pontos de controle de Bézier cúbicos internamente, portanto, não há nenhum mecanismo para retornar os pontos originais.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)">
          <source>If the first point and the last point in the <ph id="ph1">`points`</ph> array are not the same point, the curve is closed by connecting these two points.</source>
          <target state="translated">Se o primeiro ponto e o último ponto na <ph id="ph1">`points`</ph> matriz não são o mesmo ponto, a curva é fechada por conectar-se esses dois pontos.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Adds a spline curve to the current figure.</source>
          <target state="translated">Adiciona uma curva de spline à figura atual.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>A cardinal spline curve is used because the curve travels through each of the points in the array.</source>
          <target state="translated">Uma curva de spline cardinal é usada porque a curva percorre cada um dos pontos da matriz.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that represents the points that define the curve.</source>
          <target state="translated">Uma matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que representa os pontos que definem a curva.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[])">
          <source>Adds a spline curve to the current figure.</source>
          <target state="translated">Adiciona uma curva de spline à figura atual.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[])">
          <source>A cardinal spline curve is used because the curve travels through each of the points in the array.</source>
          <target state="translated">Uma curva de spline cardinal é usada porque a curva percorre cada um dos pontos da matriz.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[])">
          <source>The user must keep the original points if they are needed.</source>
          <target state="translated">O usuário deve manter os pontos originais se forem necessários.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[])">
          <source>The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</source>
          <target state="translated">Os pontos originais são convertidos em pontos de controle de Bézier cúbicos internamente, portanto, não há nenhum mecanismo para retornar os pontos originais.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[])">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that represents the points that define the curve.</source>
          <target state="translated">Uma matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que representa os pontos que definem a curva.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[])">
          <source>Adds a spline curve to the current figure.</source>
          <target state="translated">Adiciona uma curva de spline à figura atual.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[])">
          <source>A cardinal spline curve is used because the curve travels through each of the points in the array.</source>
          <target state="translated">Uma curva de spline cardinal é usada porque a curva percorre cada um dos pontos da matriz.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[])">
          <source>The user must keep the original points if they are needed.</source>
          <target state="translated">O usuário deve manter os pontos originais se forem necessários.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[])">
          <source>The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</source>
          <target state="translated">Os pontos originais são convertidos em pontos de controle de Bézier cúbicos internamente, portanto, não há nenhum mecanismo para retornar os pontos originais.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[])">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that represents the points that define the curve.</source>
          <target state="translated">Uma matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que representa os pontos que definem a curva.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)">
          <source>A value that specifies the amount that the curve bends between control points.</source>
          <target state="translated">Um valor que especifica quanto a curva se dobra entre os pontos de controle.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)">
          <source>Values greater than 1 produce unpredictable results.</source>
          <target state="translated">Valores maiores que 1 produzem resultados imprevisíveis.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)">
          <source>Adds a spline curve to the current figure.</source>
          <target state="translated">Adiciona uma curva de spline à figura atual.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)">
          <source>The user must keep the original points if they are needed.</source>
          <target state="translated">O usuário deve manter os pontos originais se forem necessários.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)">
          <source>The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</source>
          <target state="translated">Os pontos originais são convertidos em pontos de controle de Bézier cúbicos internamente, portanto, não há nenhum mecanismo para retornar os pontos originais.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Single)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that represents the points that define the curve.</source>
          <target state="translated">Uma matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que representa os pontos que definem a curva.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Single)">
          <source>A value that specifies the amount that the curve bends between control points.</source>
          <target state="translated">Um valor que especifica quanto a curva se dobra entre os pontos de controle.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Single)">
          <source>Values greater than 1 produce unpredictable results.</source>
          <target state="translated">Valores maiores que 1 produzem resultados imprevisíveis.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Single)">
          <source>Adds a spline curve to the current figure.</source>
          <target state="translated">Adiciona uma curva de spline à figura atual.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Single)">
          <source>The user must keep the original points if they are needed.</source>
          <target state="translated">O usuário deve manter os pontos originais se forem necessários.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Single)">
          <source>The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</source>
          <target state="translated">Os pontos originais são convertidos em pontos de controle de Bézier cúbicos internamente, portanto, não há nenhum mecanismo para retornar os pontos originais.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that represents the points that define the curve.</source>
          <target state="translated">Uma matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que representa os pontos que definem a curva.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>The index of the element in the <bpt id="p1">&lt;c&gt;</bpt>points<ept id="p1">&lt;/c&gt;</ept> array that is used as the first point in the curve.</source>
          <target state="translated">O índice do elemento na matriz <bpt id="p1">&lt;c&gt;</bpt>points<ept id="p1">&lt;/c&gt;</ept> que é usada como o primeiro ponto da curva.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>A value that specifies the amount that the curve bends between control points.</source>
          <target state="translated">Um valor que especifica quanto a curva se dobra entre os pontos de controle.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>Values greater than 1 produce unpredictable results.</source>
          <target state="translated">Valores maiores que 1 produzem resultados imprevisíveis.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>A value that specifies the amount that the curve bends between control points.</source>
          <target state="translated">Um valor que especifica quanto a curva se dobra entre os pontos de controle.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>Values greater than 1 produce unpredictable results.</source>
          <target state="translated">Valores maiores que 1 produzem resultados imprevisíveis.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>Adds a spline curve to the current figure.</source>
          <target state="translated">Adiciona uma curva de spline à figura atual.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>The user must keep the original points if they are needed.</source>
          <target state="translated">O usuário deve manter os pontos originais se forem necessários.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</source>
          <target state="translated">Os pontos originais são convertidos em pontos de controle de Bézier cúbicos internamente, portanto, não há nenhum mecanismo para retornar os pontos originais.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>The curve begins at the point in the array specified by the <ph id="ph1">`offset`</ph> parameter and includes the number of points (segments) specified by <ph id="ph2">`numberOfSegments`</ph>.</source>
          <target state="translated">A curva começa no ponto na matriz especificada pelo <ph id="ph1">`offset`</ph> parâmetro e inclui o número de pontos (segmentos) especificado por <ph id="ph2">`numberOfSegments`</ph>.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, uma <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objeto de evento.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>Creates an array of four points (representing a cardinal spline).</source>
          <target state="translated">Cria uma matriz de quatro pontos (representando um spline cardeal).</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>Creates a path and using the array of points, adds the curve to the path.</source>
          <target state="translated">Cria um caminho e usando a matriz de pontos, adiciona a curva ao caminho.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>Draws the path to the screen.</source>
          <target state="translated">Desenha o caminho para a tela.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
          <source>Notice that while the array holds four points, there are only three segments, which is the number specified in the third argument of the call to <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%2A&gt;</ph>.</source>
          <target state="translated">Observe que enquanto a matriz contém quatro pontos, há apenas três segmentos, que é o número especificado no terceiro argumento da chamada para <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that represents the points that define the curve.</source>
          <target state="translated">Uma matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que representa os pontos que definem a curva.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>The index of the element in the <bpt id="p1">&lt;c&gt;</bpt>points<ept id="p1">&lt;/c&gt;</ept> array that is used as the first point in the curve.</source>
          <target state="translated">O índice do elemento na matriz <bpt id="p1">&lt;c&gt;</bpt>points<ept id="p1">&lt;/c&gt;</ept> que é usada como o primeiro ponto da curva.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>The number of segments used to draw the curve.</source>
          <target state="translated">O número de segmentos usados para desenhar a curva.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>A segment can be thought of as a line connecting two points.</source>
          <target state="translated">Um segmento pode ser pensado como uma linha conectando dois pontos.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>A value that specifies the amount that the curve bends between control points.</source>
          <target state="translated">Um valor que especifica quanto a curva se dobra entre os pontos de controle.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>Values greater than 1 produce unpredictable results.</source>
          <target state="translated">Valores maiores que 1 produzem resultados imprevisíveis.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>Adds a spline curve to the current figure.</source>
          <target state="translated">Adiciona uma curva de spline à figura atual.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>The user must keep the original points if they are needed.</source>
          <target state="translated">O usuário deve manter os pontos originais se forem necessários.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</source>
          <target state="translated">Os pontos originais são convertidos em pontos de controle de Bézier cúbicos internamente, portanto, não há nenhum mecanismo para retornar os pontos originais.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>The curve begins at the point in the array specified by <ph id="ph1">`offset`</ph>, and includes the number of points (segments) specified by <ph id="ph2">`numberOfSegments`</ph>.</source>
          <target state="translated">A curva começa no ponto na matriz especificada por <ph id="ph1">`offset`</ph>e inclui o número de pontos (segmentos) especificado por <ph id="ph2">`numberOfSegments`</ph>.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Adds an ellipse to the current path.</source>
          <target state="translated">Adiciona uma elipse ao caminho atual.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.Rectangle)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the bounding rectangle that defines the ellipse.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que representa o retângulo delimitador que define a elipse.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.Rectangle)">
          <source>Adds an ellipse to the current path.</source>
          <target state="translated">Adiciona uma elipse ao caminho atual.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.Rectangle)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, uma <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objeto de evento.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.Rectangle)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.Rectangle)">
          <source>Creates a bounding rectangle that defines an ellipse.</source>
          <target state="translated">Cria um retângulo que define uma elipse.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.Rectangle)">
          <source>Creates a path and adds the ellipse to the path.</source>
          <target state="translated">Cria um caminho e adiciona a elipse ao caminho.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.Rectangle)">
          <source>Draws the path to screen.</source>
          <target state="translated">Desenha o caminho para a tela.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.RectangleF)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> that represents the bounding rectangle that defines the ellipse.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> que representa o retângulo delimitador que define a elipse.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.RectangleF)">
          <source>Adds an ellipse to the current path.</source>
          <target state="translated">Adiciona uma elipse ao caminho atual.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.RectangleF)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</source>
          <target state="translated">A coordenada X do canto superior esquerdo do retângulo delimitador que define a elipse.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</source>
          <target state="translated">A coordenada y do canto superior esquerdo do retângulo delimitador que define a elipse.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The width of the bounding rectangle that defines the ellipse.</source>
          <target state="translated">A largura do retângulo delimitador que define a elipse.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The height of the bounding rectangle that defines the ellipse.</source>
          <target state="translated">A altura do retângulo delimitador que define a elipse.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Adds an ellipse to the current path.</source>
          <target state="translated">Adiciona uma elipse ao caminho atual.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Single,System.Single,System.Single,System.Single)">
          <source>The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</source>
          <target state="translated">A coordenada X do canto superior esquerdo do retângulo delimitador que define a elipse.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Single,System.Single,System.Single,System.Single)">
          <source>The y-coordinate of the upper left corner of the bounding rectangle that defines the ellipse.</source>
          <target state="translated">A coordenada y do canto superior esquerdo do retângulo delimitador que define a elipse.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Single,System.Single,System.Single,System.Single)">
          <source>The width of the bounding rectangle that defines the ellipse.</source>
          <target state="translated">A largura do retângulo delimitador que define a elipse.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Single,System.Single,System.Single,System.Single)">
          <source>The height of the bounding rectangle that defines the ellipse.</source>
          <target state="translated">A altura do retângulo delimitador que define a elipse.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Single,System.Single,System.Single,System.Single)">
          <source>Adds an ellipse to the current path.</source>
          <target state="translated">Adiciona uma elipse ao caminho atual.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Single,System.Single,System.Single,System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Appends a line segment to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Acrescenta um segmento de linha para esse <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.Point,System.Drawing.Point)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the starting point of the line.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que representa a posição inicial da linha.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.Point,System.Drawing.Point)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the endpoint of the line.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que representa o ponto de extremidade da linha.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.Point,System.Drawing.Point)">
          <source>Appends a line segment to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Acrescenta um segmento de linha para esse <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.Point,System.Drawing.Point)">
          <source>This method adds the line segment defined by the specified points to the end of this <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>.</source>
          <target state="translated">Este método adiciona o segmento de linha definido por pontos especificados ao final deste <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.Point,System.Drawing.Point)">
          <source>If there are previous lines or curves in the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</source>
          <target state="translated">Se houver linhas anteriores ou curvas no <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, um segmento de linha é desenhado para conectar-se o último ponto no caminho até o primeiro ponto em que o novo segmento de linha.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.Point,System.Drawing.Point)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.PointF,System.Drawing.PointF)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> that represents the starting point of the line.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que representa a posição inicial da linha.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.PointF,System.Drawing.PointF)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> that represents the endpoint of the line.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que representa o ponto de extremidade da linha.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.PointF,System.Drawing.PointF)">
          <source>Appends a line segment to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Acrescenta um segmento de linha para esse <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.PointF,System.Drawing.PointF)">
          <source>This method adds the line segment defined by the specified points to the end of this <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>.</source>
          <target state="translated">Este método adiciona o segmento de linha definido por pontos especificados ao final deste <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.PointF,System.Drawing.PointF)">
          <source>If there are previous lines or curves in the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</source>
          <target state="translated">Se houver linhas anteriores ou curvas no <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, um segmento de linha é desenhado para conectar-se o último ponto no caminho até o primeiro ponto em que o novo segmento de linha.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.PointF,System.Drawing.PointF)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The x-coordinate of the starting point of the line.</source>
          <target state="translated">A coordenada X do ponto de partida da linha.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The y-coordinate of the starting point of the line.</source>
          <target state="translated">A coordenada y do ponto de partida da linha.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The x-coordinate of the endpoint of the line.</source>
          <target state="translated">A coordenada X do ponto de extremidade da linha.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The y-coordinate of the endpoint of the line.</source>
          <target state="translated">A coordenada y do ponto de extremidade da linha.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Appends a line segment to the current figure.</source>
          <target state="translated">Acrescenta um segmento de linha para a figura atual.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>This method adds the line segment defined by the specified points to the end of the current figure.</source>
          <target state="translated">Este método adiciona o segmento de linha definido por pontos especificados ao final da figura atual.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>If there are previous lines or curves in the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</source>
          <target state="translated">Se houver linhas anteriores ou curvas no <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, um segmento de linha é desenhado para conectar-se o último ponto no caminho até o primeiro ponto em que o novo segmento de linha.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, uma <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objeto de evento.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The code creates a path, adds three lines that form a triangle, and then draws the path to the screen.</source>
          <target state="translated">O código cria um caminho, adiciona três linhas que formam um triângulo e, em seguida, desenha o caminho para a tela.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)">
          <source>The x-coordinate of the starting point of the line.</source>
          <target state="translated">A coordenada X do ponto de partida da linha.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)">
          <source>The y-coordinate of the starting point of the line.</source>
          <target state="translated">A coordenada y do ponto de partida da linha.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)">
          <source>The x-coordinate of the endpoint of the line.</source>
          <target state="translated">A coordenada X do ponto de extremidade da linha.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)">
          <source>The y-coordinate of the endpoint of the line.</source>
          <target state="translated">A coordenada y do ponto de extremidade da linha.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)">
          <source>Appends a line segment to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Acrescenta um segmento de linha para esse <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)">
          <source>This method adds the line segment defined by the specified points to the end of this <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>.</source>
          <target state="translated">Este método adiciona o segmento de linha definido por pontos especificados ao final deste <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)">
          <source>If there are previous lines or curves in the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</source>
          <target state="translated">Se houver linhas anteriores ou curvas no <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, um segmento de linha é desenhado para conectar-se o último ponto no caminho até o primeiro ponto em que o novo segmento de linha.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Appends a series of connected line segments to the end of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Acrescenta uma série de segmentos de linha conectados ao final deste <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that represents the points that define the line segments to add.</source>
          <target state="translated">Uma matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que representa os pontos que definem os segmentos de linha a serem adicionados.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
          <source>Appends a series of connected line segments to the end of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Acrescenta uma série de segmentos de linha conectados ao final deste <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
          <source>If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment the starting point of the line.</source>
          <target state="translated">Se houver linhas anteriores ou curvas na figura, uma linha é adicionada para conectar o ponto de extremidade do segmento o ponto de partida da linha anterior.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
          <source>The <ph id="ph1">`points`</ph> parameter specifies an array of endpoints.</source>
          <target state="translated">O <ph id="ph1">`points`</ph> parâmetro especifica uma matriz de pontos de extremidade.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
          <source>The first two specify the first line.</source>
          <target state="translated">Os dois primeiros especificam a primeira linha.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
          <source>Each additional point specifies the endpoint of a line segment whose starting point is the endpoint of the previous line.</source>
          <target state="translated">Cada ponto adicional que especifica o ponto de extremidade de um segmento de linha cujo ponto de partida é o ponto de extremidade da linha anterior.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, uma <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objeto de evento.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
          <source>Creates an array of four points that describe a triangle.</source>
          <target state="translated">Cria uma matriz de quatro pontos que descrevem um triângulo.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
          <source>Creates a path and adds the array of lines.</source>
          <target state="translated">Cria um caminho e adiciona o conjunto de linhas.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
          <source>Draws the path to screen.</source>
          <target state="translated">Desenha o caminho para a tela.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
          <source>Notice that each line after the first point uses the previous point as the starting point and the new point as the endpoint.</source>
          <target state="translated">Observe que cada linha após o primeiro ponto usa o ponto anterior como o ponto de partida e o novo ponto como o ponto de extremidade.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that represents the points that define the line segments to add.</source>
          <target state="translated">Uma matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que representa os pontos que definem os segmentos de linha a serem adicionados.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])">
          <source>Appends a series of connected line segments to the end of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Acrescenta uma série de segmentos de linha conectados ao final deste <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])">
          <source>If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment the starting point of the line.</source>
          <target state="translated">Se houver linhas anteriores ou curvas na figura, uma linha é adicionada para conectar o ponto de extremidade do segmento o ponto de partida da linha anterior.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])">
          <source>The <ph id="ph1">`points`</ph> parameter specifies an array of endpoints.</source>
          <target state="translated">O <ph id="ph1">`points`</ph> parâmetro especifica uma matriz de pontos de extremidade.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])">
          <source>The first two specify the first line.</source>
          <target state="translated">Os dois primeiros especificam a primeira linha.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])">
          <source>Each additional point specifies the endpoint of a line segment whose starting point is the endpoint of the previous line.</source>
          <target state="translated">Cada ponto adicional que especifica o ponto de extremidade de um segmento de linha cujo ponto de partida é o ponto de extremidade da linha anterior.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddLines%28System.Drawing.Point%5B%5D%29&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddLines%28System.Drawing.Point%5B%5D%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> to add.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> a ser adicionado.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
          <source>A Boolean value that specifies whether the first figure in the added path is part of the last figure in this path.</source>
          <target state="translated">Um valor booliano que especifica se a primeira figura no caminho adicionado faz parte da figura último nesse caminho.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
          <source>A value of <ph id="ph1">&lt;see langword="true" /&gt;</ph> specifies that (if possible) the first figure in the added path is part of the last figure in this path.</source>
          <target state="translated">Um valor de <ph id="ph1">&lt;see langword="true" /&gt;</ph> que especifica (se possível) que a primeira figura no caminho adicionado faz parte da última figura nesse caminho.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
          <source>A value of <ph id="ph1">&lt;see langword="false" /&gt;</ph> specifies that the first figure in the added path is separate from the last figure in this path.</source>
          <target state="translated">Um valor de <ph id="ph1">&lt;see langword="false" /&gt;</ph> que especifica que a primeira figura no caminho adicionado é separada da última figura nesse caminho.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
          <source>Appends the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> to this path.</source>
          <target state="translated">Acrescenta o <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> especificado a esse caminho.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, uma <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objeto de evento.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
          <source>Creates two paths one a right-side-up triangle and the other an up-side-down triangle.</source>
          <target state="translated">Cria um de dois caminhos um triângulo direito lado-o e o outro um triângulo para baixo ao lado de backup.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
          <source>Adds the second path to the first.</source>
          <target state="translated">Adiciona o segundo caminho para o primeiro.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
          <source>Draws the resultant path to the screen.</source>
          <target state="translated">Desenha o caminho resultante para a tela.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Adds the outline of a pie shape to this path.</source>
          <target state="translated">Adiciona a estrutura de tópicos de uma forma de pizza a esse caminho.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the bounding rectangle that defines the ellipse from which the pie is drawn.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que representa o retângulo delimitador que define a elipse com base na qual a pizza é desenhada.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>The starting angle for the pie section, measured in degrees clockwise from the x-axis.</source>
          <target state="translated">O ângulo inicial da fatia da pizza, medido em graus no sentido horário do eixo X.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>The angle between <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> and the end of the pie section, measured in degrees clockwise from <bpt id="p2">&lt;c&gt;</bpt>startAngle<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated">O ângulo entre <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> e o final da fatia da pizza, medido em graus no sentido horário de <bpt id="p2">&lt;c&gt;</bpt>startAngle<ept id="p2">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>Adds the outline of a pie shape to this path.</source>
          <target state="translated">Adiciona a estrutura de tópicos de uma forma de pizza a esse caminho.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>The pie shape is defined by a partial outline of an ellipse and the two radial lines that intersect the endpoints of the partial outline.</source>
          <target state="translated">A forma de pizza é definida por uma descrição parcial de uma elipse e as duas linhas radiais que cruzam os pontos de extremidade da estrutura de tópicos parcial.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>The partial outline begins at <ph id="ph1">`startAngle`</ph> (measured clockwise from the x-axis) and ends at <ph id="ph2">`startAngle`</ph><ph id="ph3"> + </ph><ph id="ph4">`sweepAngle`</ph>.</source>
          <target state="translated">A estrutura de tópicos parcial começa em <ph id="ph1">`startAngle`</ph> (medido no sentido horário do eixo x) e termina no <ph id="ph2">`startAngle`</ph> <ph id="ph3"> + </ph> <ph id="ph4">`sweepAngle`</ph>.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Drawing.Rectangle,System.Single,System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</source>
          <target state="translated">A coordenada X do canto superior esquerdo do retângulo delimitador que define a elipse com base na qual a pizza é desenhada.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</source>
          <target state="translated">A coordenada Y do canto superior esquerdo do retângulo delimitador que define a elipse com base na qual a pizza é desenhada.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The width of the bounding rectangle that defines the ellipse from which the pie is drawn.</source>
          <target state="translated">A largura do retângulo delimitador que define a elipse com base na qual a pizza é desenhada.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The height of the bounding rectangle that defines the ellipse from which the pie is drawn.</source>
          <target state="translated">A altura do retângulo delimitador que define a elipse com base na qual a pizza é desenhada.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The starting angle for the pie section, measured in degrees clockwise from the x-axis.</source>
          <target state="translated">O ângulo inicial da fatia da pizza, medido em graus no sentido horário do eixo X.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The angle between <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> and the end of the pie section, measured in degrees clockwise from <bpt id="p2">&lt;c&gt;</bpt>startAngle<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated">O ângulo entre <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> e o final da fatia da pizza, medido em graus no sentido horário de <bpt id="p2">&lt;c&gt;</bpt>startAngle<ept id="p2">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>Adds the outline of a pie shape to this path.</source>
          <target state="translated">Adiciona a estrutura de tópicos de uma forma de pizza a esse caminho.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The pie shape is defined by a partial outline of an ellipse and the two radial lines that intersect the endpoints of the partial outline.</source>
          <target state="translated">A forma de pizza é definida por uma descrição parcial de uma elipse e as duas linhas radiais que cruzam os pontos de extremidade da estrutura de tópicos parcial.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The partial outline begins at <ph id="ph1">`startAngle`</ph> (measured clockwise from the x-axis) and ends at <ph id="ph2">`startAngle`</ph><ph id="ph3"> + </ph><ph id="ph4">`sweepAngle`</ph>.</source>
          <target state="translated">A estrutura de tópicos parcial começa em <ph id="ph1">`startAngle`</ph> (medido no sentido horário do eixo x) e termina no <ph id="ph2">`startAngle`</ph> <ph id="ph3"> + </ph> <ph id="ph4">`sweepAngle`</ph>.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, uma <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objeto de evento.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
          <source>The code creates a graphics path, adds the pie shape, and then draws the path to the screen.</source>
          <target state="translated">O código cria um caminho de gráficos, adiciona a forma de pizza e, em seguida, desenha o caminho para a tela.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</source>
          <target state="translated">A coordenada X do canto superior esquerdo do retângulo delimitador que define a elipse com base na qual a pizza é desenhada.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</source>
          <target state="translated">A coordenada Y do canto superior esquerdo do retângulo delimitador que define a elipse com base na qual a pizza é desenhada.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The width of the bounding rectangle that defines the ellipse from which the pie is drawn.</source>
          <target state="translated">A largura do retângulo delimitador que define a elipse com base na qual a pizza é desenhada.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The height of the bounding rectangle that defines the ellipse from which the pie is drawn.</source>
          <target state="translated">A altura do retângulo delimitador que define a elipse com base na qual a pizza é desenhada.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The starting angle for the pie section, measured in degrees clockwise from the x-axis.</source>
          <target state="translated">O ângulo inicial da fatia da pizza, medido em graus no sentido horário do eixo X.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The angle between <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> and the end of the pie section, measured in degrees clockwise from <bpt id="p2">&lt;c&gt;</bpt>startAngle<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated">O ângulo entre <bpt id="p1">&lt;c&gt;</bpt>startAngle<ept id="p1">&lt;/c&gt;</ept> e o final da fatia da pizza, medido em graus no sentido horário de <bpt id="p2">&lt;c&gt;</bpt>startAngle<ept id="p2">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>Adds the outline of a pie shape to this path.</source>
          <target state="translated">Adiciona a estrutura de tópicos de uma forma de pizza a esse caminho.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The pie shape is defined by a partial outline of an ellipse and the two radial lines that intersect the endpoints of the partial outline.</source>
          <target state="translated">A forma de pizza é definida por uma descrição parcial de uma elipse e as duas linhas radiais que cruzam os pontos de extremidade da estrutura de tópicos parcial.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>The partial outline begins at <ph id="ph1">`startAngle`</ph> (measured clockwise from the x-axis) and ends at <ph id="ph2">`startAngle`</ph><ph id="ph3"> + </ph><ph id="ph4">`sweepAngle`</ph>.</source>
          <target state="translated">A estrutura de tópicos parcial começa em <ph id="ph1">`startAngle`</ph> (medido no sentido horário do eixo x) e termina no <ph id="ph2">`startAngle`</ph> <ph id="ph3"> + </ph> <ph id="ph4">`sweepAngle`</ph>.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Adds a polygon to this path.</source>
          <target state="translated">Adiciona um polígono a esse caminho.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> structures that defines the polygon to add.</source>
          <target state="translated">Uma matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que define o polígono a ser adicionado.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])">
          <source>Adds a polygon to this path.</source>
          <target state="translated">Adiciona um polígono a esse caminho.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])">
          <source>The points in the <ph id="ph1">`points`</ph> array specify the vertices of a polygon.</source>
          <target state="translated">Os pontos de <ph id="ph1">`points`</ph> matriz especifique os vértices de um polígono.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])">
          <source>If the first point in the array is not the same as the last point, those two points are connected to close the polygon.</source>
          <target state="translated">Se o primeiro ponto na matriz não é o mesmo que o último ponto, os dois pontos são conectados para fechar o polígono.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, uma <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objeto de evento.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])">
          <source>Creates an array of points that defines a polygon.</source>
          <target state="translated">Cria uma matriz de pontos que define um polígono.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])">
          <source>Creates a path and adds the polygon to the path.</source>
          <target state="translated">Cria um caminho e adiciona o polígono ao caminho.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])">
          <source>Draws the path to the screen.</source>
          <target state="translated">Desenha o caminho para a tela.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.PointF[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that defines the polygon to add.</source>
          <target state="translated">Uma matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que define o polígono a ser adicionado.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.PointF[])">
          <source>Adds a polygon to this path.</source>
          <target state="translated">Adiciona um polígono a esse caminho.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.PointF[])">
          <source>The points in the <ph id="ph1">`points`</ph> array specify the vertices of a polygon.</source>
          <target state="translated">Os pontos de <ph id="ph1">`points`</ph> matriz especifique os vértices de um polígono.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.PointF[])">
          <source>If the first point in the array is not the same as the last point, those two points are connected to close the polygon.</source>
          <target state="translated">Se o primeiro ponto na matriz não é o mesmo que o último ponto, os dois pontos são conectados para fechar o polígono.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.PointF[])">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddPolygon%28System.Drawing.Point%5B%5D%29&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddPolygon%28System.Drawing.Point%5B%5D%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Adds a rectangle to this path.</source>
          <target state="translated">Adiciona um retângulo a esse caminho.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.Rectangle)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the rectangle to add.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que representa o retângulo a ser adicionado.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.Rectangle)">
          <source>Adds a rectangle to this path.</source>
          <target state="translated">Adiciona um retângulo a esse caminho.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.Rectangle)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, uma <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objeto de evento.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.Rectangle)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.Rectangle)">
          <source>Creates a path.</source>
          <target state="translated">Cria um caminho.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.Rectangle)">
          <source>Creates a rectangle and adds the rectangle to the path.</source>
          <target state="translated">Cria um retângulo e adiciona o retângulo para o caminho.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.Rectangle)">
          <source>Draws the path to the screen.</source>
          <target state="translated">Desenha o caminho para a tela.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.RectangleF)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> that represents the rectangle to add.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> que representa o retângulo a ser adicionado.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.RectangleF)">
          <source>Adds a rectangle to this path.</source>
          <target state="translated">Adiciona um retângulo a esse caminho.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.RectangleF)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangle%28System.Drawing.Rectangle%29&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangle%28System.Drawing.Rectangle%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Adds a series of rectangles to this path.</source>
          <target state="translated">Adiciona uma série de retângulos a este caminho.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> structures that represents the rectangles to add.</source>
          <target state="translated">Uma matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que representa os retângulos a serem adicionados.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])">
          <source>Adds a series of rectangles to this path.</source>
          <target state="translated">Adiciona uma série de retângulos a este caminho.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, uma <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objeto de evento.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])">
          <source>Creates a path.</source>
          <target state="translated">Cria um caminho.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])">
          <source>Creates an array of rectangles and adds the rectangles to the path.</source>
          <target state="translated">Cria uma matriz de retângulos e adiciona os retângulos ao caminho.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])">
          <source>Draws the path to the screen.</source>
          <target state="translated">Desenha o caminho para a tela.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.RectangleF[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> structures that represents the rectangles to add.</source>
          <target state="translated">Uma matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> que representa os retângulos a serem adicionados.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.RectangleF[])">
          <source>Adds a series of rectangles to this path.</source>
          <target state="translated">Adiciona uma série de retângulos a este caminho.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.RectangleF[])">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangles%28System.Drawing.Rectangle%5B%5D%29&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangles%28System.Drawing.Rectangle%5B%5D%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Adds a text string to this path.</source>
          <target state="translated">Adiciona uma cadeia de texto nesse caminho.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> to add.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> a ser adicionado.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.FontFamily" /&gt;</ph> that represents the name of the font with which the test is drawn.</source>
          <target state="translated">Uma <ph id="ph1">&lt;see cref="T:System.Drawing.FontFamily" /&gt;</ph> que representa o nome da fonte com a qual o teste é desenhado.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.FontStyle" /&gt;</ph> enumeration that represents style information about the text (bold, italic, and so on).</source>
          <target state="translated">Um enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.FontStyle" /&gt;</ph> que representa as informações de estilo sobre o texto (negrito, itálico e assim por diante).</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>This must be cast as an integer (see the example code later in this section).</source>
          <target state="translated">Isso deve ser transmitido como um inteiro (consulte o código de exemplo mais à frente nesta seção).</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>The height of the em square box that bounds the character.</source>
          <target state="translated">A altura da caixa quadrada em que delimita o caractere.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the point where the text starts.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que representa o ponto em que o texto começa.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph> that specifies text formatting information, such as line spacing and alignment.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph> que especifica as informações de formatação de texto, como o espaçamento entre linhas e o alinhamento.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>Adds a text string to this path.</source>
          <target state="translated">Adiciona uma cadeia de texto nesse caminho.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, uma <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objeto de evento.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>Creates a path.</source>
          <target state="translated">Cria um caminho.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>Sets up string and font arguments.</source>
          <target state="translated">Define os argumentos de cadeia de caracteres e fonte.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>Adds the string to the path.</source>
          <target state="translated">Adiciona a cadeia de caracteres para o caminho.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>Draws the string to the screen.</source>
          <target state="translated">Desenha a cadeia de caracteres para a tela.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>There are two important things to be pointed out. First, notice that the <ph id="ph1">`fontStyle`</ph> argument is cast as an integer.</source>
          <target state="translated">Há dois aspectos importantes a ser indicadas. Primeiro, observe que o <ph id="ph1">`fontStyle`</ph> argumento é convertido como um inteiro.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddString%2A&gt;</ph> method requires this so that two or more <ph id="ph2">&lt;xref:System.Drawing.FontStyle&gt;</ph> members can be combined to create the desired font style (in this case, <ph id="ph3">&lt;xref:System.Drawing.FontStyle.Italic&gt;</ph> and <ph id="ph4">&lt;xref:System.Drawing.FontStyle.Underline&gt;</ph>).</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddString%2A&gt;</ph> método requer isso assim que dois ou mais <ph id="ph2">&lt;xref:System.Drawing.FontStyle&gt;</ph> membros podem ser combinados para criar o estilo de fonte desejado (nesse caso, <ph id="ph3">&lt;xref:System.Drawing.FontStyle.Italic&gt;</ph> e <ph id="ph4">&lt;xref:System.Drawing.FontStyle.Underline&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>Secondly, notice that the <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph> method is used rather than the <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawPath%2A&gt;</ph> method.</source>
          <target state="translated">Em segundo lugar, observe que o <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph> método é usado em vez de <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawPath%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
          <source>If <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph> is used, solid text is rendered, whereas if <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawPath%2A&gt;</ph> is used, the text will be an outline style.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph> for usado, sólido texto é renderizado, enquanto se <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawPath%2A&gt;</ph> for usado, o texto será um estilo de estrutura de tópicos.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> to add.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> a ser adicionado.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.FontFamily" /&gt;</ph> that represents the name of the font with which the test is drawn.</source>
          <target state="translated">Uma <ph id="ph1">&lt;see cref="T:System.Drawing.FontFamily" /&gt;</ph> que representa o nome da fonte com a qual o teste é desenhado.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.FontStyle" /&gt;</ph> enumeration that represents style information about the text (bold, italic, and so on).</source>
          <target state="translated">Um enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.FontStyle" /&gt;</ph> que representa as informações de estilo sobre o texto (negrito, itálico e assim por diante).</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>This must be cast as an integer (see the example code later in this section).</source>
          <target state="translated">Isso deve ser transmitido como um inteiro (consulte o código de exemplo mais à frente nesta seção).</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>The height of the em square box that bounds the character.</source>
          <target state="translated">A altura da caixa quadrada em que delimita o caractere.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> that represents the point where the text starts.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que representa o ponto em que o texto começa.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph> that specifies text formatting information, such as line spacing and alignment.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph> que especifica as informações de formatação de texto, como o espaçamento entre linhas e o alinhamento.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>Adds a text string to this path.</source>
          <target state="translated">Adiciona uma cadeia de texto nesse caminho.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> to add.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> a ser adicionado.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.FontFamily" /&gt;</ph> that represents the name of the font with which the test is drawn.</source>
          <target state="translated">Uma <ph id="ph1">&lt;see cref="T:System.Drawing.FontFamily" /&gt;</ph> que representa o nome da fonte com a qual o teste é desenhado.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.FontStyle" /&gt;</ph> enumeration that represents style information about the text (bold, italic, and so on).</source>
          <target state="translated">Um enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.FontStyle" /&gt;</ph> que representa as informações de estilo sobre o texto (negrito, itálico e assim por diante).</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)">
          <source>This must be cast as an integer (see the example code later in this section).</source>
          <target state="translated">Isso deve ser transmitido como um inteiro (consulte o código de exemplo mais à frente nesta seção).</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)">
          <source>The height of the em square box that bounds the character.</source>
          <target state="translated">A altura da caixa quadrada em que delimita o caractere.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the rectangle that bounds the text.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> que representa o retângulo que limita o texto.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph> that specifies text formatting information, such as line spacing and alignment.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph> que especifica as informações de formatação de texto, como o espaçamento entre linhas e o alinhamento.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)">
          <source>Adds a text string to this path.</source>
          <target state="translated">Adiciona uma cadeia de texto nesse caminho.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> to add.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> a ser adicionado.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.FontFamily" /&gt;</ph> that represents the name of the font with which the test is drawn.</source>
          <target state="translated">Uma <ph id="ph1">&lt;see cref="T:System.Drawing.FontFamily" /&gt;</ph> que representa o nome da fonte com a qual o teste é desenhado.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.FontStyle" /&gt;</ph> enumeration that represents style information about the text (bold, italic, and so on).</source>
          <target state="translated">Um enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.FontStyle" /&gt;</ph> que representa as informações de estilo sobre o texto (negrito, itálico e assim por diante).</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>This must be cast as an integer (see the example code later in this section).</source>
          <target state="translated">Isso deve ser transmitido como um inteiro (consulte o código de exemplo mais à frente nesta seção).</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>The height of the em square box that bounds the character.</source>
          <target state="translated">A altura da caixa quadrada em que delimita o caractere.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> that represents the rectangle that bounds the text.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> que representa o retângulo que limita o texto.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph> that specifies text formatting information, such as line spacing and alignment.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.StringFormat" /&gt;</ph> que especifica as informações de formatação de texto, como o espaçamento entre linhas e o alinhamento.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>Adds a text string to this path.</source>
          <target state="translated">Adiciona uma cadeia de texto nesse caminho.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
          <source>Clears all markers from this path.</source>
          <target state="translated">Limpa todos os marcadores desse caminho.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
          <source>Use the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A&gt;</ph> method to create a marker at the current location in a <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A&gt;</ph> método para criar um marcador no local atual em um <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
          <source>Use the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A&gt;</ph> method to iterate through the existing markers in a path.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A&gt;</ph> método para iterar os marcadores existentes em um caminho.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
          <source>Markers are used to separate groups of subpaths.</source>
          <target state="translated">Marcadores são usados para separar grupos de subcaminhos.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
          <source>One or more subpaths can be contained between two markers.</source>
          <target state="translated">Um ou mais subcaminhos podem estar contidos entre dois marcadores.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, uma <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objeto de evento.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
          <source>Creates a path.</source>
          <target state="translated">Cria um caminho.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
          <source>Adds several objects to the path.</source>
          <target state="translated">Adiciona vários objetos ao caminho.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
          <source>Adds markers to the path.</source>
          <target state="translated">Adiciona marcadores para o caminho.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
          <source>Clears all markers from the path.</source>
          <target state="translated">Limpa todos os marcadores do caminho.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
          <source>Draws the path to the screen.</source>
          <target state="translated">Desenha o caminho para a tela.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Clone">
          <source>Creates an exact copy of this path.</source>
          <target state="translated">Cria uma cópia exata desse caminho.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Clone">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> this method creates, cast as an object.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> que esse método cria, convertido como um objeto.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Clone">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, uma <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objeto de evento.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Clone">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Clone">
          <source>Creates a path.</source>
          <target state="translated">Cria um caminho.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Clone">
          <source>Adds several figures to the path.</source>
          <target state="translated">Adiciona vários valores para o caminho.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Clone">
          <source>Draws the path to the screen.</source>
          <target state="translated">Desenha o caminho para a tela.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Clone">
          <source>Clones a copy of that path.</source>
          <target state="translated">Clona uma cópia desse caminho.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Clone">
          <source>Draws the new path to the screen.</source>
          <target state="translated">Desenha o novo caminho para a tela.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Clone">
          <source>Notice that the call the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Clone%2A&gt;</ph> method must be cast as a <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>.</source>
          <target state="translated">Observe que a chamada a <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Clone%2A&gt;</ph> método deve ser convertido como um <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures">
          <source>Closes all open figures in this path and starts a new figure.</source>
          <target state="translated">Fecha todos os valores nesse caminho e inicia uma nova figura.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures">
          <source>It closes each open figure by connecting a line from its endpoint to its starting point.</source>
          <target state="translated">Ele fecha cada figura aberta conectando uma linha de seu ponto de extremidade a seu ponto inicial.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, uma <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objeto de evento.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures">
          <source>Creates a path.</source>
          <target state="translated">Cria um caminho.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures">
          <source>Adds several open figures to the path.</source>
          <target state="translated">Adiciona várias figuras abertas para o caminho.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures">
          <source>Closes all figures in the path.</source>
          <target state="translated">Fecha todos os números no caminho.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures">
          <source>Draws the path to the screen.</source>
          <target state="translated">Desenha o caminho para a tela.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.CloseFigure">
          <source>Closes the current figure and starts a new figure.</source>
          <target state="translated">Fecha a figura atual e inicia uma nova figura.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.CloseFigure">
          <source>If the current figure contains a sequence of connected lines and curves, the method closes the loop by connecting a line from the endpoint to the starting point.</source>
          <target state="translated">Se a figura atual contiver uma sequência de linhas e curvas conectadas, o método fechará o loop conectando uma linha do ponto de extremidade ao ponto de partida.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.CloseFigure">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, uma <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objeto de evento.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.CloseFigure">
          <source>The code creates a triangle by creating a new path, starting a figure, adding two intersecting lines to the figure, and then closing the figure to form a triangle.</source>
          <target state="translated">O código cria um triângulo, criando um novo caminho, iniciando uma figura, adicionando linhas de interseção de dois a figura e fechando a figura para formar um triângulo.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.CloseFigure">
          <source>The path is then drawn to the screen.</source>
          <target state="translated">Em seguida, o caminho é desenhado na tela.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Dispose">
          <source>Releases all resources used by this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Libera todos os recursos usados por este <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Dispose">
          <source>Calling <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Dispose%2A&gt;</ph> allows the resources used by this <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> to be reallocated for other purposes.</source>
          <target state="translated">Chamando <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Dispose%2A&gt;</ph> permite que os recursos usados por este <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> sejam realocadas para outras finalidades.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" uid="P:System.Drawing.Drawing2D.GraphicsPath.FillMode">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> enumeration that determines how the interiors of shapes in this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> are filled.</source>
          <target state="translated">Obtém ou define uma enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> que determina como os interiores das formas neste <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> são preenchidos.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.FillMode">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> enumeration that specifies how the interiors of shapes in this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> are filled.</source>
          <target state="translated">Uma enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> que especifica como os interiores das formas neste <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> são preenchidos.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Finalize">
          <source>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</source>
          <target state="translated">Permite que um objeto tente liberar recursos e executar outras operações de limpeza antes de ser recuperado pela coleta de lixo.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Converts each curve in this path into a sequence of connected line segments.</source>
          <target state="translated">Converte cada curva neste caminho em uma sequência de segmentos de linha conectados.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten">
          <source>Converts each curve in this path into a sequence of connected line segments.</source>
          <target state="translated">Converte cada curva neste caminho em uma sequência de segmentos de linha conectados.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> by which to transform this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> before flattening.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> pelo qual transformar esse <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> antes de mesclar.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix)">
          <source>Applies the specified transform and then converts each curve in this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> into a sequence of connected line segments.</source>
          <target state="translated">Aplica a transformação especificada e então converte cada curva neste <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> em uma sequência de segmentos de linha conectados.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> by which to transform this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> before flattening.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> pelo qual transformar esse <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> antes de mesclar.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Specifies the maximum permitted error between the curve and its flattened approximation.</source>
          <target state="translated">Especifica o erro máximo permitido entre a curva e sua aproximação plana.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>A value of 0.25 is the default.</source>
          <target state="translated">Um valor de 0,25 é o padrão.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Reducing the flatness value will increase the number of line segments in the approximation.</source>
          <target state="translated">Reduzir o valor de planeza aumentará o número de segmentos de linha na aproximação.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Converts each curve in this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> into a sequence of connected line segments.</source>
          <target state="translated">Converte cada curva neste <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> em uma sequência de segmentos de linha conectados.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, uma <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objeto de evento.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Creates a graphics path and a translation matrix.</source>
          <target state="translated">Cria um caminho de gráfico e uma matriz de tradução.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Adds a curve to the path using four points.</source>
          <target state="translated">Adiciona uma curva para o caminho usando quatro pontos.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Draws the path (curve) to the screen, using a black pen.</source>
          <target state="translated">Desenha o caminho (curva) para a tela, usando uma caneta preta.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Shifts the curve down 10 pixels and flattens it.</source>
          <target state="translated">Desloca a curva para 10 pixels e mescla a ele.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Draws the curve to the screen using, a red pen.</source>
          <target state="translated">Desenha a curva à tela usando uma caneta vermelha.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Notice that the red curve has flattened lines connecting the points.</source>
          <target state="translated">Observe que a curva vermelha tem nivelados linhas que conectam os pontos.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Returns a rectangle that bounds this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Retorna um retângulo que circunda esse <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>Returns a rectangle that bounds this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Retorna um retângulo que circunda esse <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> that represents a rectangle that bounds this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> que representa um retângulo que circunda esse <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>The size of the returned bounding rectangle is influenced by the type of end caps, pen width, and pen miter limit, and therefore produces a "loose fit" to the bounded path.</source>
          <target state="translated">O tamanho do retângulo delimitador retornado é influenciado pelo tipo de delimitada, a largura de caneta e o limite de esquadria caneta e, portanto, gera um "ajuste flexível" para o caminho associado.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>The approximate formula is: the initial bounding rectangle is inflated by pen width, and this result is multiplied by the miter limit, plus some additional margin to allow for end caps.</source>
          <target state="translated">A fórmula aproximada é: o retângulo delimitador inicial é inflado pela largura de caneta e esse resultado é multiplicado pelo limite de esquadria, além de algumas margem adicional para permitir tampas.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, uma <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objeto de evento.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>Creates a graphics path.</source>
          <target state="translated">Cria um caminho de gráficos.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>Adds an ellipse (circle) to it and draws it to the screen.</source>
          <target state="translated">Adiciona uma elipse (círculo) a ele e desenha na tela.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>Retrieves the bounding rectangle for the circle with a call to <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds%2A&gt;</ph> and draws the rectangle to the screen.</source>
          <target state="translated">Recupera o retângulo delimitador para o círculo com uma chamada para <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds%2A&gt;</ph> e desenha um retângulo para a tela.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>Creates a second graphics path.</source>
          <target state="translated">Cria um segundo caminho de gráficos.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>Adds a circle and widens the path to a width of 10.</source>
          <target state="translated">Adiciona um círculo e amplia o caminho para uma largura de 10.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>Draws the path to the screen.</source>
          <target state="translated">Desenha o caminho para a tela.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>Retrieves the bounding rectangle for the second circle.</source>
          <target state="translated">Recupera o retângulo delimitador para o segundo círculo.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>Draws the bounding rectangle to the screen.</source>
          <target state="translated">Desenha o retângulo delimitador para a tela.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>Displays the rectangle size in a dialog box.</source>
          <target state="translated">Exibe o tamanho do retângulo em uma caixa de diálogo.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
          <source>Notice that the bounding rectangle on the right is larger (to account for the extra width of the line).</source>
          <target state="translated">Observe que o retângulo delimitador à direita (para a conta para a extra largura da linha).</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> that specifies a transformation to be applied to this path before the bounding rectangle is calculated.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> que especifica uma transformação a ser aplicada a esse caminho antes do retângulo delimitador ser calculado.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix)">
          <source>This path is not permanently transformed; the transformation is used only during the process of calculating the bounding rectangle.</source>
          <target state="translated">Esse caminho não é transformado permanentemente; a transformação é usada somente durante o processo de cálculo do retângulo delimitador.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix)">
          <source>Returns a rectangle that bounds this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when this path is transformed by the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">Retorna um retângulo que delimita este <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> quando este caminho é transformado pelo <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> that represents a rectangle that bounds this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> que representa um retângulo que circunda esse <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix)">
          <source>The size of the returned bounding rectangle is influenced by the type of end caps, pen width, and pen miter limit, and therefore produces a "loose fit" to the bounded path.</source>
          <target state="translated">O tamanho do retângulo delimitador retornado é influenciado pelo tipo de delimitada, a largura de caneta e o limite de esquadria caneta e, portanto, gera um "ajuste flexível" para o caminho associado.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix)">
          <source>The approximate formula is: the initial bounding rectangle is inflated by pen width, and this result is multiplied by the miter limit, plus some additional margin to allow for end caps.</source>
          <target state="translated">A fórmula aproximada é: o retângulo delimitador inicial é inflado pela largura de caneta e esse resultado é multiplicado pelo limite de esquadria, além de algumas margem adicional para permitir tampas.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> that specifies a transformation to be applied to this path before the bounding rectangle is calculated.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> que especifica uma transformação a ser aplicada a esse caminho antes do retângulo delimitador ser calculado.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)">
          <source>This path is not permanently transformed; the transformation is used only during the process of calculating the bounding rectangle.</source>
          <target state="translated">Esse caminho não é transformado permanentemente; a transformação é usada somente durante o processo de cálculo do retângulo delimitador.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> with which to draw the <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> com a qual desenhar o <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)">
          <source>Returns a rectangle that bounds this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when the current path is transformed by the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> and drawn with the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Retorna um retângulo que delimita este <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> quando o caminho atual é transformado pelo <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> especificado e desenhado com a <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> especificada.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> that represents a rectangle that bounds this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> que representa um retângulo que circunda esse <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)">
          <source>The size of the returned bounding rectangle is influenced by the type of end caps, pen width, and pen miter limit, and therefore produces a "loose fit" to the bounded path.</source>
          <target state="translated">O tamanho do retângulo delimitador retornado é influenciado pelo tipo de delimitada, a largura de caneta e o limite de esquadria caneta e, portanto, gera um "ajuste flexível" para o caminho associado.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)">
          <source>The approximate formula is: the initial bounding rectangle is inflated by pen width, and this result is multiplied by the miter limit, plus some additional margin to allow for end caps.</source>
          <target state="translated">A fórmula aproximada é: o retângulo delimitador inicial é inflado pela largura de caneta e esse resultado é multiplicado pelo limite de esquadria, além de algumas margem adicional para permitir tampas.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetLastPoint">
          <source>Gets the last point in the <ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph> array of this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Obtém o último ponto na matriz <ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph> deste <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetLastPoint">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> that represents the last point in this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que representa o último ponto neste <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetLastPoint">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, uma <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objeto de evento.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.GetLastPoint">
          <source>The code creates a path, adds a line to the path, and then gets the last point in the path.</source>
          <target state="translated">O código cria um caminho, adiciona uma linha para o caminho e, em seguida, obtém o último ponto no caminho.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Indicates whether the specified point is contained within (under) the outline of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when drawn with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Indica se o ponto especificado está contido dentro de (sob) o contorno deste <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> quando desenhado com a <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> especificada.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that specifies the location to test.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que especifica o local a testar.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> to test.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> a ser testado.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen)">
          <source>Indicates whether the specified point is contained within (under) the outline of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when drawn with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Indica se o ponto especificado está contido dentro de (sob) o contorno deste <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> quando desenhado com a <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> especificada.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within the outline of this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when drawn with the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Este método retorna <ph id="ph1">&lt;see langword="true" /&gt;</ph> se o ponto especificado está contido no contorno deste <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> quando desenhado com a <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> especificada; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen)">
          <source>This method tests to see if the outline of a given path is rendered visible at the specified point.</source>
          <target state="translated">Esse método verifica se a estrutura de tópicos de um determinado caminho será renderizada visível no ponto especificado.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> that specifies the location to test.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que especifica o local a testar.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> to test.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> a ser testado.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen)">
          <source>Indicates whether the specified point is contained within (under) the outline of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when drawn with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Indica se o ponto especificado está contido dentro de (sob) o contorno deste <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> quando desenhado com a <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> especificada.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within the outline of this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when drawn with the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Este método retorna <ph id="ph1">&lt;see langword="true" /&gt;</ph> se o ponto especificado está contido no contorno deste <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> quando desenhado com a <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> especificada; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen)">
          <source>This method tests to see if the outline of a given path is rendered visible at the specified point.</source>
          <target state="translated">Esse método verifica se a estrutura de tópicos de um determinado caminho será renderizada visível no ponto especificado.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that specifies the location to test.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que especifica o local a testar.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> to test.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> a ser testado.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> for which to test visibility.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> do qual a visibilidade será testada.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>Indicates whether the specified point is contained within (under) the outline of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when drawn with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> and using the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Indica se o ponto especificado está contido dentro de (sob) o contorno deste <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> quando desenhado com a <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> especificada e usando o <ph id="ph3">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within the outline of this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> as drawn with the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Este método retorna <ph id="ph1">&lt;see langword="true" /&gt;</ph> se o ponto especificado está contido no contorno deste <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> quando desenhado com a <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> especificada; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>This method tests to see if the outline of a given path is rendered visible at the specified point.</source>
          <target state="translated">Esse método verifica se a estrutura de tópicos de um determinado caminho será renderizada visível no ponto especificado.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The coordinates of the point to be tested are given in world coordinates.</source>
          <target state="translated">As coordenadas do ponto a ser testada são fornecidas nas coordenadas do mundo.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The transform matrix of <ph id="ph1">`graphics`</ph> is temporarily applied before testing for visibility.</source>
          <target state="translated">A matriz de transformação de <ph id="ph1">`graphics`</ph> temporariamente é aplicada antes de testar para visibilidade.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> that specifies the location to test.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que especifica o local a testar.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> to test.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> a ser testado.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> for which to test visibility.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> do qual a visibilidade será testada.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>Indicates whether the specified point is contained within (under) the outline of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when drawn with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> and using the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Indica se o ponto especificado está contido dentro de (sob) o contorno deste <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> quando desenhado com a <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> especificada e usando o <ph id="ph3">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within (under) the outline of this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> as drawn with the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Este método retorna <ph id="ph1">&lt;see langword="true" /&gt;</ph> se o ponto especificado está contido em (sob) o contorno deste <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> quando desenhado com a <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> especificada; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>This method tests to see if the outline of a given path is rendered visible at the specified point.</source>
          <target state="translated">Esse método verifica se a estrutura de tópicos de um determinado caminho será renderizada visível no ponto especificado.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The coordinates of the point to be tested are given in world coordinates.</source>
          <target state="translated">As coordenadas do ponto a ser testada são fornecidas nas coordenadas do mundo.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The transform matrix of <ph id="ph1">`graphics`</ph> is temporarily applied before testing for visibility.</source>
          <target state="translated">A matriz de transformação de <ph id="ph1">`graphics`</ph> temporariamente é aplicada antes de testar para visibilidade.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)">
          <source>The x-coordinate of the point to test.</source>
          <target state="translated">A coordenada X do ponto a ser testado.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)">
          <source>The y-coordinate of the point to test.</source>
          <target state="translated">A coordenada Y do ponto a ser testado.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> to test.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> a ser testado.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)">
          <source>Indicates whether the specified point is contained within (under) the outline of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when drawn with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Indica se o ponto especificado está contido dentro de (sob) o contorno deste <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> quando desenhado com a <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> especificada.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within the outline of this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when drawn with the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Este método retorna <ph id="ph1">&lt;see langword="true" /&gt;</ph> se o ponto especificado está contido no contorno deste <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> quando desenhado com a <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> especificada; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)">
          <source>This method tests to see if the outline of a given path is rendered visible at the specified point.</source>
          <target state="translated">Esse método verifica se a estrutura de tópicos de um determinado caminho será renderizada visível no ponto especificado.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)">
          <source>The x-coordinate of the point to test.</source>
          <target state="translated">A coordenada X do ponto a ser testado.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)">
          <source>The y-coordinate of the point to test.</source>
          <target state="translated">A coordenada Y do ponto a ser testado.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> to test.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> a ser testado.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)">
          <source>Indicates whether the specified point is contained within (under) the outline of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when drawn with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Indica se o ponto especificado está contido dentro de (sob) o contorno deste <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> quando desenhado com a <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> especificada.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within the outline of this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when drawn with the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Este método retorna <ph id="ph1">&lt;see langword="true" /&gt;</ph> se o ponto especificado está contido no contorno deste <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> quando desenhado com a <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> especificada; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)">
          <source>This method tests to see if the outline of a given path is rendered visible at the specified point.</source>
          <target state="translated">Esse método verifica se a estrutura de tópicos de um determinado caminho será renderizada visível no ponto especificado.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The x-coordinate of the point to test.</source>
          <target state="translated">A coordenada X do ponto a ser testado.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The y-coordinate of the point to test.</source>
          <target state="translated">A coordenada Y do ponto a ser testado.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> to test.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> a ser testado.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> for which to test visibility.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> do qual a visibilidade será testada.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>Indicates whether the specified point is contained within (under) the outline of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when drawn with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> and using the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Indica se o ponto especificado está contido dentro de (sob) o contorno deste <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> quando desenhado com a <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> especificada e usando o <ph id="ph3">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within the outline of this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> as drawn with the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Este método retorna <ph id="ph1">&lt;see langword="true" /&gt;</ph> se o ponto especificado está contido no contorno deste <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> quando desenhado com a <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> especificada; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>This method tests to see if the outline of a given path is rendered visible at the specified point.</source>
          <target state="translated">Esse método verifica se a estrutura de tópicos de um determinado caminho será renderizada visível no ponto especificado.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The coordinates of the point to be tested are given in world coordinates.</source>
          <target state="translated">As coordenadas do ponto a ser testada são fornecidas nas coordenadas do mundo.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The transform matrix of <ph id="ph1">`graphics`</ph> is temporarily applied before testing for visibility.</source>
          <target state="translated">A matriz de transformação de <ph id="ph1">`graphics`</ph> temporariamente é aplicada antes de testar para visibilidade.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, um <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>Creates a path.</source>
          <target state="translated">Cria um caminho.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>Adds a rectangle to the path.</source>
          <target state="translated">Adiciona um retângulo ao caminho.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>Creates a wide pen and widens the path with that pen (to make the example clearer),</source>
          <target state="translated">Cria uma caneta ampla e amplia o caminho com esse caneta (para tornar o exemplo mais claro),</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>Tests a point (100, 50) to see if it lies within (under) one of the edges of the rectangle by calling <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%2A&gt;</ph>.</source>
          <target state="translated">Testes de um ponto (100, 50) para ver se ela está dentro de (em) um das bordas do retângulo chamando <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The result is shown in the message box (in this case, true).</source>
          <target state="translated">O resultado é mostrado na caixa de mensagem (nesse caso, true).</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>In other words the edge is rendered over that point.</source>
          <target state="translated">Em outras palavras, a borda é renderizada através desse ponto.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The x-coordinate of the point to test.</source>
          <target state="translated">A coordenada X do ponto a ser testado.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The y-coordinate of the point to test.</source>
          <target state="translated">A coordenada Y do ponto a ser testado.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> to test.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> a ser testado.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> for which to test visibility.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> do qual a visibilidade será testada.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>Indicates whether the specified point is contained within (under) the outline of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> when drawn with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> and using the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Indica se o ponto especificado está contido dentro de (sob) o contorno deste <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> quando desenhado com a <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> especificada e usando o <ph id="ph3">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within (under) the outline of this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> as drawn with the specified <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Este método retorna <ph id="ph1">&lt;see langword="true" /&gt;</ph> se o ponto especificado está contido em (sob) o contorno deste <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> quando desenhado com a <ph id="ph3">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> especificada; caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>This method tests to see if the outline of a given path is rendered visible at the specified point.</source>
          <target state="translated">Esse método verifica se a estrutura de tópicos de um determinado caminho será renderizada visível no ponto especificado.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The coordinates of the point to be tested are given in world coordinates.</source>
          <target state="translated">As coordenadas do ponto a ser testada são fornecidas nas coordenadas do mundo.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>The transform matrix of the <ph id="ph1">`graphics`</ph> parameter is temporarily applied before testing for visibility.</source>
          <target state="translated">A matriz de transformação do <ph id="ph1">`graphics`</ph> parâmetro temporariamente é aplicado antes de testar para visibilidade.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Indicates whether the specified point is contained within this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Indica se o ponto especificado está contido neste <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the point to test.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que representa o ponto a testar.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point)">
          <source>Indicates whether the specified point is contained within this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Indica se o ponto especificado está contido neste <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Esse método retornará <ph id="ph1">&lt;see langword="true" /&gt;</ph> se o ponto especificado estiver contido neste <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point)">
          <source>For an example, see <ph id="ph1">`GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">`GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`</ph>.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> that represents the point to test.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que representa o ponto a testar.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF)">
          <source>Indicates whether the specified point is contained within this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Indica se o ponto especificado está contido neste <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Esse método retornará <ph id="ph1">&lt;see langword="true" /&gt;</ph> se o ponto especificado estiver contido neste <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point,System.Drawing.Graphics)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the point to test.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> que representa o ponto a testar.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point,System.Drawing.Graphics)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> for which to test visibility.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> do qual a visibilidade será testada.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point,System.Drawing.Graphics)">
          <source>Indicates whether the specified point is contained within this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Indica se o ponto especificado está contido neste <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point,System.Drawing.Graphics)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Esse método retornará <ph id="ph1">&lt;see langword="true" /&gt;</ph> se o ponto especificado estiver contido neste <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point,System.Drawing.Graphics)">
          <source>The coordinates of the point to be tested are given in world coordinates.</source>
          <target state="translated">As coordenadas do ponto a ser testada são fornecidas nas coordenadas do mundo.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point,System.Drawing.Graphics)">
          <source>The transform matrix of the <ph id="ph1">`graphics`</ph> parameter is temporarily applied before testing for visibility.</source>
          <target state="translated">A matriz de transformação do <ph id="ph1">`graphics`</ph> parâmetro temporariamente é aplicado antes de testar para visibilidade.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point,System.Drawing.Graphics)">
          <source>For an example, see <ph id="ph1">`GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">`GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`</ph>.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> that represents the point to test.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que representa o ponto a testar.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> for which to test visibility.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> do qual a visibilidade será testada.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)">
          <source>Indicates whether the specified point is contained within this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Indica se o ponto especificado está contido neste <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within this; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Esse método retornará <ph id="ph1">&lt;see langword="true" /&gt;</ph> se o ponto especificado estiver contido nisso; caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)">
          <source>The coordinates of the point to be tested are given in world coordinates.</source>
          <target state="translated">As coordenadas do ponto a ser testada são fornecidas nas coordenadas do mundo.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)">
          <source>The transform matrix of the <ph id="ph1">`graphics`</ph> parameter is temporarily applied before testing for visibility.</source>
          <target state="translated">A matriz de transformação do <ph id="ph1">`graphics`</ph> parâmetro temporariamente é aplicado antes de testar para visibilidade.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32)">
          <source>The x-coordinate of the point to test.</source>
          <target state="translated">A coordenada X do ponto a ser testado.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32)">
          <source>The y-coordinate of the point to test.</source>
          <target state="translated">A coordenada Y do ponto a ser testado.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32)">
          <source>Indicates whether the specified point is contained within this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Indica se o ponto especificado está contido neste <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Esse método retornará <ph id="ph1">&lt;see langword="true" /&gt;</ph> se o ponto especificado estiver contido neste <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single)">
          <source>The x-coordinate of the point to test.</source>
          <target state="translated">A coordenada X do ponto a ser testado.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single)">
          <source>The y-coordinate of the point to test.</source>
          <target state="translated">A coordenada Y do ponto a ser testado.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single)">
          <source>Indicates whether the specified point is contained within this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Indica se o ponto especificado está contido neste <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Esse método retornará <ph id="ph1">&lt;see langword="true" /&gt;</ph> se o ponto especificado estiver contido neste <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
          <source>The x-coordinate of the point to test.</source>
          <target state="translated">A coordenada X do ponto a ser testado.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
          <source>The y-coordinate of the point to test.</source>
          <target state="translated">A coordenada Y do ponto a ser testado.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> for which to test visibility.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> do qual a visibilidade será testada.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
          <source>Indicates whether the specified point is contained within this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>, using the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Indica se o ponto especificado está contido neste <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>, usando o <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Esse método retornará <ph id="ph1">&lt;see langword="true" /&gt;</ph> se o ponto especificado estiver contido neste <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
          <source>The coordinates of the point to be tested are given in world coordinates.</source>
          <target state="translated">As coordenadas do ponto a ser testada são fornecidas nas coordenadas do mundo.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
          <source>The transform matrix of <ph id="ph1">`graphics`</ph> is temporarily applied before testing for visibility.</source>
          <target state="translated">A matriz de transformação de <ph id="ph1">`graphics`</ph> temporariamente é aplicada antes de testar para visibilidade.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, uma <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objeto de evento.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
          <source>Creates a path and adds an ellipse to the path.</source>
          <target state="translated">Cria um caminho e adiciona uma elipse ao caminho.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
          <source>Tests whether the specified point is contained within the path.</source>
          <target state="translated">Testa se o ponto especificado está contido dentro do caminho.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
          <source>Displays the result in a dialog box.</source>
          <target state="translated">Exibe o resultado em uma caixa de diálogo.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)">
          <source>The x-coordinate of the point to test.</source>
          <target state="translated">A coordenada X do ponto a ser testado.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)">
          <source>The y-coordinate of the point to test.</source>
          <target state="translated">A coordenada Y do ponto a ser testado.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> for which to test visibility.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> do qual a visibilidade será testada.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)">
          <source>Indicates whether the specified point is contained within this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> in the visible clip region of the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">Indica se o ponto especificado está contido neste <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>, na região de recorte visível do <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified point is contained within this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Esse método retornará <ph id="ph1">&lt;see langword="true" /&gt;</ph> se o ponto especificado estiver contido neste <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)">
          <source>The coordinates of the point to be tested are given in world coordinates.</source>
          <target state="translated">As coordenadas do ponto a ser testada são fornecidas nas coordenadas do mundo.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)">
          <source>The transform matrix of the <ph id="ph1">`graphics`</ph> parameter is temporarily applied before testing for visibility.</source>
          <target state="translated">A matriz de transformação do <ph id="ph1">`graphics`</ph> parâmetro temporariamente é aplicado antes de testar para visibilidade.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathData">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PathData" /&gt;</ph> that encapsulates arrays of points (<ph id="ph2">&lt;paramref name="points" /&gt;</ph>) and types (<ph id="ph3">&lt;paramref name="types" /&gt;</ph>) for this <ph id="ph4">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Obtém um <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PathData" /&gt;</ph> que encapsula matrizes de pontos (<ph id="ph2">&lt;paramref name="points" /&gt;</ph>) e tipos (<ph id="ph3">&lt;paramref name="types" /&gt;</ph>) para este <ph id="ph4">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathData">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PathData" /&gt;</ph> that encapsulates arrays for both the points and types for this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PathData" /&gt;</ph> que encapsula matrizes para os pontos e os tipos deste <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints">
          <source>Gets the points in the path.</source>
          <target state="translated">Obtém os pontos no caminho.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> objects that represent the path.</source>
          <target state="translated">Uma matriz de objetos <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que representam o caminho.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>Gets the types of the corresponding points in the <ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph> array.</source>
          <target state="translated">Obtém os tipos dos pontos correspondentes na matriz <ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>An array of bytes that specifies the types of the corresponding points in the path.</source>
          <target state="translated">Uma matriz de bytes que especifica os tipos dos pontos correspondentes no caminho.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>The array of bytes returned by the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.PathTypes%2A&gt;</ph> property specifies point types and flags for the data points in a path.</source>
          <target state="translated">A matriz de bytes retornado pelo <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.PathTypes%2A&gt;</ph> propriedade especifica sinalizadores para os pontos de dados e tipos de pontos em um caminho.</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>For each point, bits 0 through 2 indicate the type of a point, and bits 3 through 7 hold a set of flags that specify the attributes of a point.</source>
          <target state="translated">Para cada ponto, bits de 0 a 2 indicam o tipo de um ponto e bits de 3 a 7 manter um conjunto de sinalizadores que especificam os atributos de um ponto.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>The following table shows possible values and their meanings.</source>
          <target state="translated">A tabela a seguir mostra os valores possíveis e seus significados.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>Value</source>
          <target state="translated">Valor</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>Meaning</source>
          <target state="translated">Significado</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>Indicates that the point is the start of a figure.</source>
          <target state="translated">Indica que o ponto de início de uma figura.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>Indicates that the point is one of the two endpoints of a line.</source>
          <target state="translated">Indica que o ponto é um dos dois pontos de extremidade de uma linha.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>3</source>
          <target state="translated">3</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>Indicates that the point is an endpoint or control point of a cubic Bézier spline.</source>
          <target state="translated">Indica que o ponto é um ponto de extremidade ou ponto de controle de uma spline de Bézier cúbica.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>0x7</source>
          <target state="translated">0x7</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>Masks all bits except for the three low-order bits, which indicate the point type.</source>
          <target state="translated">Máscaras de todos os bits, exceto os três bits de ordem inferior que indicam o tipo de ponto.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>0x20</source>
          <target state="translated">0x20</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>Specifies that the point is a marker.</source>
          <target state="translated">Especifica que o ponto de um marcador.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>0x80</source>
          <target state="translated">0x80</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
          <source>Specifies that the point is the last point in a closed subpath (figure).</source>
          <target state="translated">Especifica que o ponto é o último ponto em um subcaminho fechado (Figura).</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" uid="P:System.Drawing.Drawing2D.GraphicsPath.PointCount">
          <source>Gets the number of elements in the <ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph> or the <ph id="ph2">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /&gt;</ph> array.</source>
          <target state="translated">Obtém o número de elementos na <ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph> ou na matriz <ph id="ph2">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPath.PointCount">
          <source>An integer that specifies the number of elements in the <ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph> or the <ph id="ph2">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /&gt;</ph> array.</source>
          <target state="translated">Um inteiro que especifica o número de elementos no <ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph> ou <ph id="ph2">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /&gt;</ph> matriz.</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reset">
          <source>Empties the <ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /&gt;</ph> arrays and sets the <ph id="ph3">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> to <ph id="ph4">&lt;see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" /&gt;</ph>.</source>
          <target state="translated">Esvazia as matrizes <ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph> e <ph id="ph2">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /&gt;</ph> e define o <ph id="ph3">&lt;see cref="T:System.Drawing.Drawing2D.FillMode" /&gt;</ph> como <ph id="ph4">&lt;see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reset">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, uma <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objeto de evento.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reset">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reset">
          <source>Creates a path.</source>
          <target state="translated">Cria um caminho.</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reset">
          <source>Adds several primitives to it.</source>
          <target state="translated">Adiciona várias primitivos a ele.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reset">
          <source>Draws the path's points array to the screen.</source>
          <target state="translated">Desenha a matriz de pontos do caminho para a tela.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reset">
          <source>Resets the path to an empty state.</source>
          <target state="translated">Redefine o caminho para um estado vazio.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reset">
          <source>Re-acquires the points array (if it exists).</source>
          <target state="translated">Adquire novamente a matriz de pontos (se houver).</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reset">
          <source>Draws the array to the screen.</source>
          <target state="translated">Desenha a matriz para a tela.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reset">
          <source>Notice that it finds no array following the reset call.</source>
          <target state="translated">Observe que ele encontrar nenhuma matriz após a chamada de redefinição.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reverse">
          <source>Reverses the order of points in the <ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph> array of this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Inverte a ordem dos pontos na matriz <ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph> desse <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reverse">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, uma <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objeto de evento.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reverse">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reverse">
          <source>Creates a path and adds several primitives to the path.</source>
          <target state="translated">Cria um caminho e adiciona várias primitivos para o caminho.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reverse">
          <source>Draws the path's points array to the screen.</source>
          <target state="translated">Desenha a matriz de pontos do caminho para a tela.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reverse">
          <source>Draws the reversed points array to the screen.</source>
          <target state="translated">Desenha a matriz de pontos revertida para a tela.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Reverse">
          <source>Notice that the second listing of points is in reverse order from the first.</source>
          <target state="translated">Observe que a segunda listagem de pontos na ordem inversa da primeira.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.SetMarkers">
          <source>Sets a marker on this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Define um marcador neste <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.SetMarkers">
          <source>This method creates a marker on the path that can be used to separate sections of the path.</source>
          <target state="translated">Esse método cria um marcador no caminho que pode ser usado para separar seções do caminho.</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.SetMarkers">
          <source>You can then use the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A&gt;</ph> methods to iterate through the markers in the path.</source>
          <target state="translated">Você pode usar o <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A&gt;</ph> métodos para iterar os marcadores no caminho.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.SetMarkers">
          <source>Markers are used to separate groups of subpaths.</source>
          <target state="translated">Marcadores são usados para separar grupos de subcaminhos.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.SetMarkers">
          <source>One or more subpaths can be contained between two markers in the path.</source>
          <target state="translated">Subcaminhos de um ou mais podem estar contidos entre dois marcadores no caminho.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.SetMarkers">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, uma <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objeto de evento.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.SetMarkers">
          <source>The code creates a path and adds several primitives to the path separated by markers, and draws the path to the screen.</source>
          <target state="translated">O código cria um caminho e adiciona várias primitivos para o caminho separado por marcadores e desenha o caminho para a tela.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>Starts a new figure without closing the current figure.</source>
          <target state="translated">Inicia uma nova figura sem fechar a figura atual.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>All subsequent points added to the path are added to this new figure.</source>
          <target state="translated">Todos os pontos subsequentes adicionados ao caminho são adicionados a essa nova figura.</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>The user must keep the original points if they are needed.</source>
          <target state="translated">O usuário deve manter os pontos originais se forem necessários.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</source>
          <target state="translated">Os pontos originais são convertidos em pontos de controle de Bézier cúbicos internamente, portanto, não há nenhum mecanismo para retornar os pontos originais.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>This method starts a new subpath in the path.</source>
          <target state="translated">Esse método inicia um subcaminho de novo no caminho.</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>Subpaths allow you to separate a path into sections and use the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator&gt;</ph> class to iterate through the subpaths.</source>
          <target state="translated">Subcaminhos permitem que você separar um caminho em seções e usar o <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator&gt;</ph> classe para iterar por meio de subcaminhos.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, uma <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objeto de evento.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>Creates a path.</source>
          <target state="translated">Cria um caminho.</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>Adds two sets of figures.</source>
          <target state="translated">Adiciona dois conjuntos de valores.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>The first set of figures combines four primitives into two figures.</source>
          <target state="translated">O primeiro conjunto de figuras combina quatro primitivas em duas figuras.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>The second set of figures combines the same four primitives (except that they are offset in the y-axis) into three figures.</source>
          <target state="translated">O segundo conjunto de figuras combina as mesmas primitivas de quatro (exceto que eles são deslocados no eixo y) em três números.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>Draws all the figures to the screen.</source>
          <target state="translated">Desenha todos os valores para a tela.</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
          <source>Notice the difference in the appearance between the two sets of figures.</source>
          <target state="translated">Observe a diferença de aparência entre os dois conjuntos de valores.</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> that represents the transformation to apply.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> que representa a transformação a ser aplicada.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)">
          <source>Applies a transform matrix to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Aplica a uma matriz de transformação a este <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)">
          <source>The transformation can scale, translate, rotate, or skew the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>.</source>
          <target state="translated">A transformação pode dimensionar, traduzir, girar ou inclinar o <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, uma <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objeto de evento.</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)">
          <source>Creates a path and adds an ellipse to the path.</source>
          <target state="translated">Cria um caminho e adiciona uma elipse ao caminho.</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)">
          <source>Draws path to the screen.</source>
          <target state="translated">Desenha o caminho para a tela.</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)">
          <source>Creates a transform matrix to translate the path 100 units in the x-axis direction.</source>
          <target state="translated">Cria uma matriz de transformação para converter as 100 unidades de caminho na direção do eixo x.</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)">
          <source>Draws the transformed path to the screen.</source>
          <target state="translated">Desenha o caminho transformado na tela.</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)">
          <source>Notice that the original ellipse is drawn in black and the transformed ellipse is drawn in red.</source>
          <target state="translated">Observe que a elipse original é desenhada em preto e transformado elipse é desenhada em vermelho.</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Applies a warp transform, defined by a rectangle and a parallelogram, to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Aplica uma transformação de distorção, definida por um retângulo e um paralelogramo, a este <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that define a parallelogram to which the rectangle defined by <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept> is transformed.</source>
          <target state="translated">Uma matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que definem um paralelogramo no qual o retângulo definido por <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept> é transformado.</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF)">
          <source>The array can contain either three or four elements.</source>
          <target state="translated">A matriz pode conter três ou quatro elementos.</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF)">
          <source>If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</source>
          <target state="translated">Se a matriz contiver três elementos, o canto inferior direito do paralelogramo será inferido pelos três primeiros pontos.</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> that represents the rectangle that is transformed to the parallelogram defined by <bpt id="p1">&lt;c&gt;</bpt>destPoints<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> que representa o retângulo que é transformado no paralelogramo definido por <bpt id="p1">&lt;c&gt;</bpt>destPoints<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF)">
          <source>Applies a warp transform, defined by a rectangle and a parallelogram, to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Aplica uma transformação de distorção, definida por um retângulo e um paralelogramo, a este <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that define a parallelogram to which the rectangle defined by <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept> is transformed.</source>
          <target state="translated">Uma matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que definem um paralelogramo no qual o retângulo definido por <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept> é transformado.</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)">
          <source>The array can contain either three or four elements.</source>
          <target state="translated">A matriz pode conter três ou quatro elementos.</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)">
          <source>If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</source>
          <target state="translated">Se a matriz contiver três elementos, o canto inferior direito do paralelogramo será inferido pelos três primeiros pontos.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> that represents the rectangle that is transformed to the parallelogram defined by <bpt id="p1">&lt;c&gt;</bpt>destPoints<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> que representa o retângulo que é transformado no paralelogramo definido por <bpt id="p1">&lt;c&gt;</bpt>destPoints<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> that specifies a geometric transform to apply to the path.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> que especifica uma transformação geométrica a ser aplicada ao caminho.</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)">
          <source>Applies a warp transform, defined by a rectangle and a parallelogram, to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Aplica uma transformação de distorção, definida por um retângulo e um paralelogramo, a este <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that defines a parallelogram to which the rectangle defined by <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept> is transformed.</source>
          <target state="translated">Uma matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que define um paralelogramo no qual o retângulo definido por <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept> é transformado.</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)">
          <source>The array can contain either three or four elements.</source>
          <target state="translated">A matriz pode conter três ou quatro elementos.</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)">
          <source>If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</source>
          <target state="translated">Se a matriz contiver três elementos, o canto inferior direito do paralelogramo será inferido pelos três primeiros pontos.</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> that represents the rectangle that is transformed to the parallelogram defined by <bpt id="p1">&lt;c&gt;</bpt>destPoints<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> que representa o retângulo que é transformado no paralelogramo definido por <bpt id="p1">&lt;c&gt;</bpt>destPoints<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> that specifies a geometric transform to apply to the path.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> que especifica uma transformação geométrica a ser aplicada ao caminho.</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.WarpMode" /&gt;</ph> enumeration that specifies whether this warp operation uses perspective or bilinear mode.</source>
          <target state="translated">Uma enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.WarpMode" /&gt;</ph> que especifica se essa operação de distorção usa o modo bilinear ou de perspectiva.</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)">
          <source>Applies a warp transform, defined by a rectangle and a parallelogram, to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Aplica uma transformação de distorção, definida por um retângulo e um paralelogramo, a este <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that define a parallelogram to which the rectangle defined by <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept> is transformed.</source>
          <target state="translated">Uma matriz de estruturas <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> que definem um paralelogramo no qual o retângulo definido por <bpt id="p1">&lt;c&gt;</bpt>srcRect<ept id="p1">&lt;/c&gt;</ept> é transformado.</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>The array can contain either three or four elements.</source>
          <target state="translated">A matriz pode conter três ou quatro elementos.</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</source>
          <target state="translated">Se a matriz contiver três elementos, o canto inferior direito do paralelogramo será inferido pelos três primeiros pontos.</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> that represents the rectangle that is transformed to the parallelogram defined by <bpt id="p1">&lt;c&gt;</bpt>destPoints<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.RectangleF" /&gt;</ph> que representa o retângulo que é transformado no paralelogramo definido por <bpt id="p1">&lt;c&gt;</bpt>destPoints<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> that specifies a geometric transform to apply to the path.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> que especifica uma transformação geométrica a ser aplicada ao caminho.</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.WarpMode" /&gt;</ph> enumeration that specifies whether this warp operation uses perspective or bilinear mode.</source>
          <target state="translated">Uma enumeração <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.WarpMode" /&gt;</ph> que especifica se essa operação de distorção usa o modo bilinear ou de perspectiva.</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>A value from 0 through 1 that specifies how flat the resulting path is.</source>
          <target state="translated">Um valor de 0 a 1 que especifica a planeza do caminho resultante.</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>For more information, see the <ph id="ph1">&lt;see cref="M:System.Drawing.Drawing2D.GraphicsPath.Flatten" /&gt;</ph> methods.</source>
          <target state="translated">Para obter mais informações, consulte os métodos <ph id="ph1">&lt;see cref="M:System.Drawing.Drawing2D.GraphicsPath.Flatten" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>Applies a warp transform, defined by a rectangle and a parallelogram, to this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Aplica uma transformação de distorção, definida por um retângulo e um paralelogramo, a este <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, uma <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objeto de evento.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>Creates a path and adds a rectangle to the path.</source>
          <target state="translated">Cria um caminho e adiciona um retângulo ao caminho.</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>Draws that rectangle to the screen in black.</source>
          <target state="translated">Desenha um retângulo para a tela em preto.</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>Warps the path with a perspective warp.</source>
          <target state="translated">Deforma o caminho com uma distorção de perspectiva.</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
          <source>Draws the warped rectangle (path) to the screen in red.</source>
          <target state="translated">Desenha o retângulo distorcido (caminho) para a tela em vermelho.</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPath">
          <source>Replaces this path with curves that enclose the area that is filled when this path is drawn by the specified pen.</source>
          <target state="translated">Substitui este caminho por curvas que circunscrevem a área preenchida quando esse caminho é desenhado pela caneta especificada.</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> that specifies the width between the original outline of the path and the new outline this method creates.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> que especifica a largura entre a estrutura de tópicos original do caminho e a nova estrutura de tópicos criada por esse método.</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen)">
          <source>Adds an additional outline to the path.</source>
          <target state="translated">Adiciona um contorno adicional ao caminho.</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen)">
          <source>This method creates an outline around the original lines in this <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, with a distance between the existing lines and the new outline equal to that of the width of the <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> used in the call to <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A&gt;</ph>.</source>
          <target state="translated">Esse método cria uma estrutura de tópicos em torno de linhas original na <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, com uma distância entre as linhas existentes e os novos tópicos igual a que a largura do <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> usado na chamada para <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen)">
          <source>If you want to fill the space between the lines you must use the <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph> rather then the <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawPath%2A&gt;</ph>.</source>
          <target state="translated">Se você deseja preencher o espaço entre as linhas que você deve usar o <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph> em vez de <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawPath%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> that specifies the width between the original outline of the path and the new outline this method creates.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> que especifica a largura entre a estrutura de tópicos original do caminho e a nova estrutura de tópicos criada por esse método.</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> that specifies a transform to apply to the path before widening.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> que especifica uma transformação a ser aplicada ao caminho antes da ampliação.</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix)">
          <source>Adds an additional outline to the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Adiciona um contorno adicional ao <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix)">
          <source>This method creates an outline around the original lines in this <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, with a distance between the existing lines and the new outline equal to that of the width of the <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> used in the call to <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A&gt;</ph>.</source>
          <target state="translated">Esse método cria uma estrutura de tópicos em torno de linhas original na <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, com uma distância entre as linhas existentes e os novos tópicos igual a que a largura do <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> usado na chamada para <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix)">
          <source>If you want to fill the space between the lines you must use the <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph> rather then the <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawPath%2A&gt;</ph>.</source>
          <target state="translated">Se você deseja preencher o espaço entre as linhas que você deve usar o <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph> em vez de <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawPath%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix)">
          <source>For an example, see <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29&gt;</ph>.</source>
          <target state="translated">Para ver um exemplo, consulte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> that specifies the width between the original outline of the path and the new outline this method creates.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> que especifica a largura entre a estrutura de tópicos original do caminho e a nova estrutura de tópicos criada por esse método.</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> that specifies a transform to apply to the path before widening.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> que especifica uma transformação a ser aplicada ao caminho antes da ampliação.</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>A value that specifies the flatness for curves.</source>
          <target state="translated">Um valor que especifica a planeza das curvas.</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Replaces this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> with curves that enclose the area that is filled when this path is drawn by the specified pen.</source>
          <target state="translated">Substitui este <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> por curvas que circunscrevem a área preenchida quando esse caminho é desenhado pela caneta especificada.</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>This method creates an outline around the original lines in this <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, with a distance between the existing lines and the new outline equal to that of the width of the <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> used in the call to <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A&gt;</ph>.</source>
          <target state="translated">Esse método cria uma estrutura de tópicos em torno de linhas original na <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>, com uma distância entre as linhas existentes e os novos tópicos igual a que a largura do <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> usado na chamada para <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>If you want to fill the space between the lines you must use the <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph> rather then the <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawPath%2A&gt;</ph>.</source>
          <target state="translated">Se você deseja preencher o espaço entre as linhas que você deve usar o <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph> em vez de <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawPath%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, uma <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> objeto de evento.</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">O código executa as seguintes ações:</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Creates a path and adds two ellipses to the path.</source>
          <target state="translated">Cria um caminho e adiciona duas elipses no caminho.</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Draws the path in black.</source>
          <target state="translated">Desenha o caminho em preto.</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Widens the path.</source>
          <target state="translated">Amplia o caminho.</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Draws the path in red.</source>
          <target state="translated">Desenha o caminho em vermelho.</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
          <source>Notice that the second rendering uses <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph> instead of <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawPath%2A&gt;</ph>, and hence the rendered figure has the outline filled.</source>
          <target state="translated">Observe que o processamento de segundo usa <ph id="ph1">&lt;xref:System.Drawing.Graphics.FillPath%2A&gt;</ph> em vez de <ph id="ph2">&lt;xref:System.Drawing.Graphics.DrawPath%2A&gt;</ph>, e, portanto, a Figura renderizada tem a estrutura de tópicos preenchida.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>