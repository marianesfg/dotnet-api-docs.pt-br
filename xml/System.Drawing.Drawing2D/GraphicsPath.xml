<Type Name="GraphicsPath" FullName="System.Drawing.Drawing2D.GraphicsPath">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3d5eebe33dd2bf291d3fe75b60e5ef6db1f1ea4f" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55307688" /></Metadata><TypeSignature Language="C#" Value="public sealed class GraphicsPath : MarshalByRefObject, ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit GraphicsPath extends System.MarshalByRefObject implements class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Drawing2D.GraphicsPath" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class GraphicsPath&#xA;Inherits MarshalByRefObject&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class GraphicsPath sealed : MarshalByRefObject, ICloneable, IDisposable" />
  <TypeSignature Language="F#" Value="type GraphicsPath = class&#xA;    inherit MarshalByRefObject&#xA;    interface ICloneable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="b423e-101">Representa uma série de linhas e curvas conectadas.</span><span class="sxs-lookup"><span data-stu-id="b423e-101">Represents a series of connected lines and curves.</span></span> <span data-ttu-id="b423e-102">Essa classe não pode ser herdada.</span><span class="sxs-lookup"><span data-stu-id="b423e-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-103">Aplicativos usam caminhos para desenhar os contornos de formas, preencher os interiores das formas e criar regiões de recorte.</span><span class="sxs-lookup"><span data-stu-id="b423e-103">Applications use paths to draw outlines of shapes, fill the interiors of shapes, and create clipping regions.</span></span> <span data-ttu-id="b423e-104">O mecanismo de gráficos mantém as coordenadas de formas geométricas um caminho no espaço de coordenadas de mundo.</span><span class="sxs-lookup"><span data-stu-id="b423e-104">The graphics engine maintains the coordinates of geometric shapes in a path in world coordinate space.</span></span>  
  
 <span data-ttu-id="b423e-105">Um caminho pode ser composto de qualquer número de figuras (subcaminhos).</span><span class="sxs-lookup"><span data-stu-id="b423e-105">A path may be composed of any number of figures (subpaths).</span></span> <span data-ttu-id="b423e-106">Cada figura ou é composta de uma sequência de linhas conectadas e curvas ou uma forma geométrica primitiva.</span><span class="sxs-lookup"><span data-stu-id="b423e-106">Each figure is either composed of a sequence of connected lines and curves or a geometric shape primitive.</span></span> <span data-ttu-id="b423e-107">O ponto de partida de uma figura é o primeiro ponto na sequência de linhas e curvas conectadas.</span><span class="sxs-lookup"><span data-stu-id="b423e-107">The starting point of a figure is the first point in the sequence of connected lines and curves.</span></span> <span data-ttu-id="b423e-108">O ponto final é o último ponto na sequência.</span><span class="sxs-lookup"><span data-stu-id="b423e-108">The ending point is the last point in the sequence.</span></span> <span data-ttu-id="b423e-109">Os pontos inicial e finais de uma forma geométrica primitivo são definidos pela especificação do primitiva.</span><span class="sxs-lookup"><span data-stu-id="b423e-109">The starting and ending points of a geometric shape primitive are defined by the primitive specification.</span></span>  
  
 <span data-ttu-id="b423e-110">Uma figura que consiste em uma sequência de linhas conectadas e curvas (cujos pontos inicial e final podem ser coincidentes) é uma figura aberta, a menos que ela é fechada explicitamente.</span><span class="sxs-lookup"><span data-stu-id="b423e-110">A figure that consists of a sequence of connected lines and curves (whose starting and ending points may be coincident) is an open figure, unless it is closed explicitly.</span></span> <span data-ttu-id="b423e-111">Uma figura pode ser fechada explicitamente, usando o <xref:System.Drawing.Drawing2D.GraphicsPath.CloseFigure%2A> método, que fecha a figura atual conectando uma linha do ponto final para o ponto de partida.</span><span class="sxs-lookup"><span data-stu-id="b423e-111">A figure can be closed explicitly, by using the <xref:System.Drawing.Drawing2D.GraphicsPath.CloseFigure%2A> method, which closes the current figure by connecting a line from the ending point to the starting point.</span></span> <span data-ttu-id="b423e-112">Uma figura que consiste em um primitivo de forma geométrica é uma figura fechada.</span><span class="sxs-lookup"><span data-stu-id="b423e-112">A figure that consists of a geometric shape primitive is a closed figure.</span></span>  
  
 <span data-ttu-id="b423e-113">Para fins de preenchimento e recorte (por exemplo, se um caminho é renderizado utilizando <xref:System.Drawing.Graphics.FillPath%2A>), abra todas as figuras são fechadas, adicionando uma linha no primeiro ponto da figura para seu último ponto.</span><span class="sxs-lookup"><span data-stu-id="b423e-113">For purposes of filling and clipping (for example, if a path is rendered using <xref:System.Drawing.Graphics.FillPath%2A>), all open figures are closed by adding a line from the figure's first point to its last point.</span></span>  
  
 <span data-ttu-id="b423e-114">Uma nova figura é iniciada implicitamente quando um caminho é criado ou quando uma figura está fechada.</span><span class="sxs-lookup"><span data-stu-id="b423e-114">A new figure is implicitly started when a path is created or when a figure is closed.</span></span> <span data-ttu-id="b423e-115">Uma nova figura explicitamente é criada quando o <xref:System.Drawing.Drawing2D.GraphicsPath.StartFigure%2A> método é chamado.</span><span class="sxs-lookup"><span data-stu-id="b423e-115">A new figure is explicitly created when the <xref:System.Drawing.Drawing2D.GraphicsPath.StartFigure%2A> method is called.</span></span>  
  
 <span data-ttu-id="b423e-116">Quando uma forma geométrica primitiva é adicionada a um caminho, ele adiciona uma figura que contém a forma geométrica e também implicitamente inicia uma nova figura.</span><span class="sxs-lookup"><span data-stu-id="b423e-116">When a geometric shape primitive is added to a path, it adds a figure containing the geometric shape, and also implicitly starts a new figure.</span></span> <span data-ttu-id="b423e-117">Consequentemente, há sempre uma figura atual em um caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-117">Consequently, there is always a current figure in a path.</span></span> <span data-ttu-id="b423e-118">Quando linhas e curvas são adicionadas a um caminho, uma linha implícita é adicionada, conforme necessário para conectar-se o ponto final da figura atual para o ponto de partida das novas linhas e curvas para formar uma sequência de linhas conectadas e curvas.</span><span class="sxs-lookup"><span data-stu-id="b423e-118">When lines and curves are added to a path, an implicit line is added as needed to connect the ending point of the current figure to the starting point of the new lines and curves to form a sequence of connected lines and curves.</span></span>  
  
 <span data-ttu-id="b423e-119">Uma figura tem uma direção que descreve como os segmentos de linha e a curva são rastreados entre o ponto de partida e o ponto final.</span><span class="sxs-lookup"><span data-stu-id="b423e-119">A figure has a direction that describes how line and curve segments are traced between the starting point and the ending point.</span></span> <span data-ttu-id="b423e-120">A direção é definida na ordem em que as linhas e curvas são adicionados a uma figura, ou é definido pela forma geométrica primitiva.</span><span class="sxs-lookup"><span data-stu-id="b423e-120">The direction is defined in the order that lines and curves are added to a figure, or is defined by the geometric shape primitive.</span></span> <span data-ttu-id="b423e-121">A direção é usada para determinar os interiores de caminho de recorte e preenchimento.</span><span class="sxs-lookup"><span data-stu-id="b423e-121">The direction is used in determining the path interiors for clipping and fill.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/f16ec921-56cf-46d1-9741-d7316ad06b23"><span data-ttu-id="b423e-122">Construindo e desenhando demarcadores</span><span class="sxs-lookup"><span data-stu-id="b423e-122">Constructing and Drawing Paths</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b423e-123">Inicializa uma nova instância da classe <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> com uma enumeração <see cref="T:System.Drawing.Drawing2D.FillMode" /> de <see langword="Alternate" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-123">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with a <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration of <see langword="Alternate" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b423e-124">Inicializa uma nova instância da classe <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> com um valor <see cref="P:System.Drawing.Drawing2D.GraphicsPath.FillMode" /> de <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-124">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with a <see cref="P:System.Drawing.Drawing2D.GraphicsPath.FillMode" /> value of <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.Drawing2D.FillMode fillMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Drawing2D.FillMode fillMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Drawing2D.FillMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(System::Drawing::Drawing2D::FillMode fillMode);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.GraphicsPath : System.Drawing.Drawing2D.FillMode -&gt; System.Drawing.Drawing2D.GraphicsPath" Usage="new System.Drawing.Drawing2D.GraphicsPath fillMode" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fillMode" Type="System.Drawing.Drawing2D.FillMode" />
      </Parameters>
      <Docs>
        <param name="fillMode"><span data-ttu-id="b423e-125">A enumeração <see cref="T:System.Drawing.Drawing2D.FillMode" /> que determina como o interior desse <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> é preenchido.</span><span class="sxs-lookup"><span data-stu-id="b423e-125">The <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the interior of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> is filled.</span></span></param>
        <summary><span data-ttu-id="b423e-126">Inicializa uma nova instância da classe <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> com a enumeração <see cref="T:System.Drawing.Drawing2D.FillMode" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="b423e-126">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with the specified <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.Point[] pts, byte[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Point[] pts, unsigned int8[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pts As Point(), types As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(cli::array &lt;System::Drawing::Point&gt; ^ pts, cli::array &lt;System::Byte&gt; ^ types);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.GraphicsPath : System.Drawing.Point[] * byte[] -&gt; System.Drawing.Drawing2D.GraphicsPath" Usage="new System.Drawing.Drawing2D.GraphicsPath (pts, types)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.Point[]" />
        <Parameter Name="types" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="pts"><span data-ttu-id="b423e-127">Uma matriz de estruturas <see cref="T:System.Drawing.Point" /> que define as coordenadas dos pontos que compõem este <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-127">An array of <see cref="T:System.Drawing.Point" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></param>
        <param name="types"><span data-ttu-id="b423e-128">Uma matriz de elementos de enumeração <see cref="T:System.Drawing.Drawing2D.PathPointType" /> que especifica o tipo de cada ponto correspondente na matriz <paramref name="pts" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-128">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <paramref name="pts" /> array.</span></span></param>
        <summary><span data-ttu-id="b423e-129">Inicializa uma nova instância da classe <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> com as matrizes <see cref="T:System.Drawing.Drawing2D.PathPointType" /> e <see cref="T:System.Drawing.Point" /> especificadas.</span><span class="sxs-lookup"><span data-stu-id="b423e-129">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.Point" /> arrays.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.PointF[] pts, byte[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.PointF[] pts, unsigned int8[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pts As PointF(), types As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(cli::array &lt;System::Drawing::PointF&gt; ^ pts, cli::array &lt;System::Byte&gt; ^ types);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.GraphicsPath : System.Drawing.PointF[] * byte[] -&gt; System.Drawing.Drawing2D.GraphicsPath" Usage="new System.Drawing.Drawing2D.GraphicsPath (pts, types)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.PointF[]" />
        <Parameter Name="types" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="pts"><span data-ttu-id="b423e-130">Uma matriz de estruturas <see cref="T:System.Drawing.PointF" /> que define as coordenadas dos pontos que compõem este <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-130">An array of <see cref="T:System.Drawing.PointF" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></param>
        <param name="types"><span data-ttu-id="b423e-131">Uma matriz de elementos de enumeração <see cref="T:System.Drawing.Drawing2D.PathPointType" /> que especifica o tipo de cada ponto correspondente na matriz <paramref name="pts" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-131">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <paramref name="pts" /> array.</span></span></param>
        <summary><span data-ttu-id="b423e-132">Inicializa uma nova instância da matriz <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> com as matrizes <see cref="T:System.Drawing.Drawing2D.PathPointType" /> e <see cref="T:System.Drawing.PointF" /> especificadas.</span><span class="sxs-lookup"><span data-stu-id="b423e-132">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> array with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.PointF" /> arrays.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.Point[] pts, byte[] types, System.Drawing.Drawing2D.FillMode fillMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Point[] pts, unsigned int8[] types, valuetype System.Drawing.Drawing2D.FillMode fillMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[],System.Drawing.Drawing2D.FillMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(cli::array &lt;System::Drawing::Point&gt; ^ pts, cli::array &lt;System::Byte&gt; ^ types, System::Drawing::Drawing2D::FillMode fillMode);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.GraphicsPath : System.Drawing.Point[] * byte[] * System.Drawing.Drawing2D.FillMode -&gt; System.Drawing.Drawing2D.GraphicsPath" Usage="new System.Drawing.Drawing2D.GraphicsPath (pts, types, fillMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.Point[]" />
        <Parameter Name="types" Type="System.Byte[]" />
        <Parameter Name="fillMode" Type="System.Drawing.Drawing2D.FillMode" />
      </Parameters>
      <Docs>
        <param name="pts"><span data-ttu-id="b423e-133">Uma matriz de estruturas <see cref="T:System.Drawing.Point" /> que define as coordenadas dos pontos que compõem este <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-133">An array of <see cref="T:System.Drawing.Point" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></param>
        <param name="types"><span data-ttu-id="b423e-134">Uma matriz de elementos de enumeração <see cref="T:System.Drawing.Drawing2D.PathPointType" /> que especifica o tipo de cada ponto correspondente na matriz <paramref name="pts" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-134">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <paramref name="pts" /> array.</span></span></param>
        <param name="fillMode"><span data-ttu-id="b423e-135">Uma enumeração <see cref="T:System.Drawing.Drawing2D.FillMode" /> que especifica como os interiores das formas neste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> são preenchidos.</span><span class="sxs-lookup"><span data-stu-id="b423e-135">A <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that specifies how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.</span></span></param>
        <summary><span data-ttu-id="b423e-136">Inicializa uma nova instância da classe <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> com as matrizes <see cref="T:System.Drawing.Drawing2D.PathPointType" /> e <see cref="T:System.Drawing.Point" /> especificadas e com o elemento de enumeração <see cref="T:System.Drawing.Drawing2D.FillMode" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="b423e-136">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.Point" /> arrays and with the specified <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.PointF[] pts, byte[] types, System.Drawing.Drawing2D.FillMode fillMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.PointF[] pts, unsigned int8[] types, valuetype System.Drawing.Drawing2D.FillMode fillMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[],System.Drawing.Drawing2D.FillMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(cli::array &lt;System::Drawing::PointF&gt; ^ pts, cli::array &lt;System::Byte&gt; ^ types, System::Drawing::Drawing2D::FillMode fillMode);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.GraphicsPath : System.Drawing.PointF[] * byte[] * System.Drawing.Drawing2D.FillMode -&gt; System.Drawing.Drawing2D.GraphicsPath" Usage="new System.Drawing.Drawing2D.GraphicsPath (pts, types, fillMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.PointF[]" />
        <Parameter Name="types" Type="System.Byte[]" />
        <Parameter Name="fillMode" Type="System.Drawing.Drawing2D.FillMode" />
      </Parameters>
      <Docs>
        <param name="pts"><span data-ttu-id="b423e-137">Uma matriz de estruturas <see cref="T:System.Drawing.PointF" /> que define as coordenadas dos pontos que compõem este <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-137">An array of <see cref="T:System.Drawing.PointF" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></param>
        <param name="types"><span data-ttu-id="b423e-138">Uma matriz de elementos de enumeração <see cref="T:System.Drawing.Drawing2D.PathPointType" /> que especifica o tipo de cada ponto correspondente na matriz <paramref name="pts" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-138">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <paramref name="pts" /> array.</span></span></param>
        <param name="fillMode"><span data-ttu-id="b423e-139">Uma enumeração <see cref="T:System.Drawing.Drawing2D.FillMode" /> que especifica como os interiores das formas neste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> são preenchidos.</span><span class="sxs-lookup"><span data-stu-id="b423e-139">A <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that specifies how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.</span></span></param>
        <summary><span data-ttu-id="b423e-140">Inicializa uma nova instância da matriz <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> com as matrizes <see cref="T:System.Drawing.Drawing2D.PathPointType" /> e <see cref="T:System.Drawing.PointF" /> especificadas e com o elemento de enumeração <see cref="T:System.Drawing.Drawing2D.FillMode" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="b423e-140">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> array with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.PointF" /> arrays and with the specified <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddArc">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b423e-141">Acrescenta um arco elíptico à figura atual.</span><span class="sxs-lookup"><span data-stu-id="b423e-141">Appends an elliptical arc to the current figure.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddArc">
      <MemberSignature Language="C#" Value="public void AddArc (System.Drawing.Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArc(valuetype System.Drawing.Rectangle rect, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArc (rect As Rectangle, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArc(System::Drawing::Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddArc : System.Drawing.Rectangle * single * single -&gt; unit" Usage="graphicsPath.AddArc (rect, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="b423e-142">Um <see cref="T:System.Drawing.Rectangle" /> que representa os limites retangulares da elipse da qual o arco é retirado.</span><span class="sxs-lookup"><span data-stu-id="b423e-142">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangular bounds of the ellipse from which the arc is taken.</span></span></param>
        <param name="startAngle"><span data-ttu-id="b423e-143">O ângulo inicial do arco, medido em graus no sentido horário do eixo x.</span><span class="sxs-lookup"><span data-stu-id="b423e-143">The starting angle of the arc, measured in degrees clockwise from the x-axis.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="b423e-144">O ângulo entre <paramref name="startAngle" /> e o final do arco.</span><span class="sxs-lookup"><span data-stu-id="b423e-144">The angle between <paramref name="startAngle" /> and the end of the arc.</span></span></param>
        <summary><span data-ttu-id="b423e-145">Acrescenta um arco elíptico à figura atual.</span><span class="sxs-lookup"><span data-stu-id="b423e-145">Appends an elliptical arc to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-146">Se houver linhas anteriores ou curvas na figura, uma linha é adicionada para conectar-se o ponto de extremidade do segmento anterior ao início do arco.</span><span class="sxs-lookup"><span data-stu-id="b423e-146">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</span></span>  
  
 <span data-ttu-id="b423e-147">O arco é rastreado ao longo do perímetro da elipse limitado pelo retângulo especificado.</span><span class="sxs-lookup"><span data-stu-id="b423e-147">The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</span></span> <span data-ttu-id="b423e-148">O ponto de partida do arco é determinado pela medição no sentido horário do eixo x da elipse (com o ângulo de 0 graus) pelo número de graus no ângulo inicial.</span><span class="sxs-lookup"><span data-stu-id="b423e-148">The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</span></span> <span data-ttu-id="b423e-149">Da mesma forma, o ponto de extremidade está localizado, medindo no sentido horário do ponto de partida pelo número de graus em que o ângulo de flecha.</span><span class="sxs-lookup"><span data-stu-id="b423e-149">The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</span></span> <span data-ttu-id="b423e-150">Se o ângulo de flecha é maior que 360 graus ou menor que-360 graus, o arco é limpo por exatamente 360 graus ou -360 graus, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="b423e-150">If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b423e-151">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, um <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="b423e-151">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="b423e-152">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="b423e-152">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b423e-153">Cria um retângulo no qual o arco é definido.</span><span class="sxs-lookup"><span data-stu-id="b423e-153">Creates a rectangle, from which the arc is defined.</span></span>  
  
-   <span data-ttu-id="b423e-154">Cria um caminho, `myPath`.</span><span class="sxs-lookup"><span data-stu-id="b423e-154">Creates a path, `myPath`.</span></span>  
  
-   <span data-ttu-id="b423e-155">Define um arco elíptico de 180 graus que varre de graus de 0 a 180 graus e acrescenta-o em um caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-155">Defines a 180-degree elliptical arc that sweeps from 0 degrees to 180 degrees and appends it to a path.</span></span>  
  
-   <span data-ttu-id="b423e-156">Desenha o caminho para a tela.</span><span class="sxs-lookup"><span data-stu-id="b423e-156">Draws the path to screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#1)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddArc">
      <MemberSignature Language="C#" Value="public void AddArc (System.Drawing.RectangleF rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArc(valuetype System.Drawing.RectangleF rect, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArc (rect As RectangleF, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArc(System::Drawing::RectangleF rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddArc : System.Drawing.RectangleF * single * single -&gt; unit" Usage="graphicsPath.AddArc (rect, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="b423e-157">Um <see cref="T:System.Drawing.RectangleF" /> que representa os limites retangulares da elipse da qual o arco é retirado.</span><span class="sxs-lookup"><span data-stu-id="b423e-157">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangular bounds of the ellipse from which the arc is taken.</span></span></param>
        <param name="startAngle"><span data-ttu-id="b423e-158">O ângulo inicial do arco, medido em graus no sentido horário do eixo x.</span><span class="sxs-lookup"><span data-stu-id="b423e-158">The starting angle of the arc, measured in degrees clockwise from the x-axis.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="b423e-159">O ângulo entre <paramref name="startAngle" /> e o final do arco.</span><span class="sxs-lookup"><span data-stu-id="b423e-159">The angle between <paramref name="startAngle" /> and the end of the arc.</span></span></param>
        <summary><span data-ttu-id="b423e-160">Acrescenta um arco elíptico à figura atual.</span><span class="sxs-lookup"><span data-stu-id="b423e-160">Appends an elliptical arc to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-161">Se houver linhas anteriores ou curvas na figura, uma linha é adicionada para conectar-se o ponto de extremidade do segmento anterior ao início do arco.</span><span class="sxs-lookup"><span data-stu-id="b423e-161">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</span></span>  
  
 <span data-ttu-id="b423e-162">O arco é rastreado ao longo do perímetro da elipse limitado pelo retângulo especificado.</span><span class="sxs-lookup"><span data-stu-id="b423e-162">The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</span></span> <span data-ttu-id="b423e-163">O ponto de partida do arco é determinado pela medição no sentido horário do eixo x da elipse (com o ângulo de 0 graus) pelo número de graus no ângulo inicial.</span><span class="sxs-lookup"><span data-stu-id="b423e-163">The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</span></span> <span data-ttu-id="b423e-164">Da mesma forma, o ponto de extremidade está localizado, medindo no sentido horário do ponto de partida pelo número de graus em que o ângulo de flecha.</span><span class="sxs-lookup"><span data-stu-id="b423e-164">The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</span></span> <span data-ttu-id="b423e-165">Se o ângulo de flecha é maior que 360 graus ou menor que-360 graus, o arco é limpo por exatamente 360 graus ou -360 graus, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="b423e-165">If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b423e-166">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="b423e-166">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddArc">
      <MemberSignature Language="C#" Value="public void AddArc (int x, int y, int width, int height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArc(int32 x, int32 y, int32 width, int32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArc (x As Integer, y As Integer, width As Integer, height As Integer, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArc(int x, int y, int width, int height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddArc : int * int * int * int * single * single -&gt; unit" Usage="graphicsPath.AddArc (x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="b423e-167">A coordenada X do canto superior esquerdo da região retangular que define a elipse da qual o arco é retirado.</span><span class="sxs-lookup"><span data-stu-id="b423e-167">The x-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</span></span></param>
        <param name="y"><span data-ttu-id="b423e-168">A coordenada y do canto superior esquerdo da região retangular que define a elipse da qual o arco é retirado.</span><span class="sxs-lookup"><span data-stu-id="b423e-168">The y-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</span></span></param>
        <param name="width"><span data-ttu-id="b423e-169">A largura da região retangular que define a elipse da qual o arco é retirado.</span><span class="sxs-lookup"><span data-stu-id="b423e-169">The width of the rectangular region that defines the ellipse from which the arc is drawn.</span></span></param>
        <param name="height"><span data-ttu-id="b423e-170">A altura da região retangular que define a elipse da qual o arco é retirado.</span><span class="sxs-lookup"><span data-stu-id="b423e-170">The height of the rectangular region that defines the ellipse from which the arc is drawn.</span></span></param>
        <param name="startAngle"><span data-ttu-id="b423e-171">O ângulo inicial do arco, medido em graus no sentido horário do eixo x.</span><span class="sxs-lookup"><span data-stu-id="b423e-171">The starting angle of the arc, measured in degrees clockwise from the x-axis.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="b423e-172">O ângulo entre <paramref name="startAngle" /> e o final do arco.</span><span class="sxs-lookup"><span data-stu-id="b423e-172">The angle between <paramref name="startAngle" /> and the end of the arc.</span></span></param>
        <summary><span data-ttu-id="b423e-173">Acrescenta um arco elíptico à figura atual.</span><span class="sxs-lookup"><span data-stu-id="b423e-173">Appends an elliptical arc to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-174">Se houver linhas anteriores ou curvas na figura, uma linha é adicionada para conectar-se o ponto de extremidade do segmento anterior ao início do arco.</span><span class="sxs-lookup"><span data-stu-id="b423e-174">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</span></span>  
  
 <span data-ttu-id="b423e-175">O arco é rastreado ao longo do perímetro da elipse limitado pelo retângulo especificado.</span><span class="sxs-lookup"><span data-stu-id="b423e-175">The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</span></span> <span data-ttu-id="b423e-176">O ponto de partida do arco é determinado pela medição no sentido horário do eixo x da elipse (com o ângulo de 0 graus) pelo número de graus no ângulo inicial.</span><span class="sxs-lookup"><span data-stu-id="b423e-176">The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</span></span> <span data-ttu-id="b423e-177">Da mesma forma, o ponto de extremidade está localizado, medindo no sentido horário do ponto de partida pelo número de graus em que o ângulo de flecha.</span><span class="sxs-lookup"><span data-stu-id="b423e-177">The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</span></span> <span data-ttu-id="b423e-178">Se o ângulo de flecha é maior que 360 graus ou menor que-360 graus, o arco é limpo por exatamente 360 graus ou -360 graus, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="b423e-178">If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b423e-179">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="b423e-179">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddArc">
      <MemberSignature Language="C#" Value="public void AddArc (float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArc(float32 x, float32 y, float32 width, float32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArc (x As Single, y As Single, width As Single, height As Single, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArc(float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddArc : single * single * single * single * single * single -&gt; unit" Usage="graphicsPath.AddArc (x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="b423e-180">A coordenada X do canto superior esquerdo da região retangular que define a elipse da qual o arco é retirado.</span><span class="sxs-lookup"><span data-stu-id="b423e-180">The x-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</span></span></param>
        <param name="y"><span data-ttu-id="b423e-181">A coordenada y do canto superior esquerdo da região retangular que define a elipse da qual o arco é retirado.</span><span class="sxs-lookup"><span data-stu-id="b423e-181">The y-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</span></span></param>
        <param name="width"><span data-ttu-id="b423e-182">A largura da região retangular que define a elipse da qual o arco é retirado.</span><span class="sxs-lookup"><span data-stu-id="b423e-182">The width of the rectangular region that defines the ellipse from which the arc is drawn.</span></span></param>
        <param name="height"><span data-ttu-id="b423e-183">A altura da região retangular que define a elipse da qual o arco é retirado.</span><span class="sxs-lookup"><span data-stu-id="b423e-183">The height of the rectangular region that defines the ellipse from which the arc is drawn.</span></span></param>
        <param name="startAngle"><span data-ttu-id="b423e-184">O ângulo inicial do arco, medido em graus no sentido horário do eixo x.</span><span class="sxs-lookup"><span data-stu-id="b423e-184">The starting angle of the arc, measured in degrees clockwise from the x-axis.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="b423e-185">O ângulo entre <paramref name="startAngle" /> e o final do arco.</span><span class="sxs-lookup"><span data-stu-id="b423e-185">The angle between <paramref name="startAngle" /> and the end of the arc.</span></span></param>
        <summary><span data-ttu-id="b423e-186">Acrescenta um arco elíptico à figura atual.</span><span class="sxs-lookup"><span data-stu-id="b423e-186">Appends an elliptical arc to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-187">Se houver linhas anteriores ou curvas na figura, uma linha é adicionada para conectar-se o ponto de extremidade do segmento anterior ao início do arco.</span><span class="sxs-lookup"><span data-stu-id="b423e-187">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</span></span>  
  
 <span data-ttu-id="b423e-188">O arco é rastreado ao longo do perímetro da elipse limitado pelo retângulo especificado.</span><span class="sxs-lookup"><span data-stu-id="b423e-188">The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</span></span> <span data-ttu-id="b423e-189">O ponto de partida do arco é determinado pela medição no sentido horário do eixo x da elipse (com o ângulo de 0 graus) pelo número de graus no ângulo inicial.</span><span class="sxs-lookup"><span data-stu-id="b423e-189">The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</span></span> <span data-ttu-id="b423e-190">Da mesma forma, o ponto de extremidade está localizado, medindo no sentido horário do ponto de partida pelo número de graus em que o ângulo de flecha.</span><span class="sxs-lookup"><span data-stu-id="b423e-190">The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</span></span> <span data-ttu-id="b423e-191">Se o ângulo de flecha é maior que 360 graus ou menor que-360 graus, o arco é limpo por exatamente 360 graus ou -360 graus, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="b423e-191">If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b423e-192">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="b423e-192">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddBezier">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b423e-193">Adiciona uma curva de Bézier cúbica à figura atual.</span><span class="sxs-lookup"><span data-stu-id="b423e-193">Adds a cubic Bézier curve to the current figure.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddBezier">
      <MemberSignature Language="C#" Value="public void AddBezier (System.Drawing.Point pt1, System.Drawing.Point pt2, System.Drawing.Point pt3, System.Drawing.Point pt4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBezier(valuetype System.Drawing.Point pt1, valuetype System.Drawing.Point pt2, valuetype System.Drawing.Point pt3, valuetype System.Drawing.Point pt4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBezier (pt1 As Point, pt2 As Point, pt3 As Point, pt4 As Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBezier(System::Drawing::Point pt1, System::Drawing::Point pt2, System::Drawing::Point pt3, System::Drawing::Point pt4);" />
      <MemberSignature Language="F#" Value="member this.AddBezier : System.Drawing.Point * System.Drawing.Point * System.Drawing.Point * System.Drawing.Point -&gt; unit" Usage="graphicsPath.AddBezier (pt1, pt2, pt3, pt4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt1" Type="System.Drawing.Point" />
        <Parameter Name="pt2" Type="System.Drawing.Point" />
        <Parameter Name="pt3" Type="System.Drawing.Point" />
        <Parameter Name="pt4" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt1"><span data-ttu-id="b423e-194">Uma <see cref="T:System.Drawing.Point" /> que representa o ponto inicial da curva.</span><span class="sxs-lookup"><span data-stu-id="b423e-194">A <see cref="T:System.Drawing.Point" /> that represents the starting point of the curve.</span></span></param>
        <param name="pt2"><span data-ttu-id="b423e-195">Uma <see cref="T:System.Drawing.Point" /> que representa o primeiro ponto de controle da curva.</span><span class="sxs-lookup"><span data-stu-id="b423e-195">A <see cref="T:System.Drawing.Point" /> that represents the first control point for the curve.</span></span></param>
        <param name="pt3"><span data-ttu-id="b423e-196">Uma <see cref="T:System.Drawing.Point" /> que representa o segundo ponto de controle da curva.</span><span class="sxs-lookup"><span data-stu-id="b423e-196">A <see cref="T:System.Drawing.Point" /> that represents the second control point for the curve.</span></span></param>
        <param name="pt4"><span data-ttu-id="b423e-197">Um <see cref="T:System.Drawing.Point" /> que representa o ponto de extremidade da curva.</span><span class="sxs-lookup"><span data-stu-id="b423e-197">A <see cref="T:System.Drawing.Point" /> that represents the endpoint of the curve.</span></span></param>
        <summary><span data-ttu-id="b423e-198">Adiciona uma curva de Bézier cúbica à figura atual.</span><span class="sxs-lookup"><span data-stu-id="b423e-198">Adds a cubic Bézier curve to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-199">A curva cúbica é construída com o primeiro ponto até o quarto ponto usando os pontos do segundo e terceiro como pontos de controle.</span><span class="sxs-lookup"><span data-stu-id="b423e-199">The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</span></span>  
  
 <span data-ttu-id="b423e-200">Se houver uma linha anterior ou um segmento de curva na figura, uma linha é adicionada para conectar-se o ponto de extremidade do segmento anterior ao ponto de partida da curva cúbica.</span><span class="sxs-lookup"><span data-stu-id="b423e-200">If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b423e-201">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="b423e-201">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBezier">
      <MemberSignature Language="C#" Value="public void AddBezier (System.Drawing.PointF pt1, System.Drawing.PointF pt2, System.Drawing.PointF pt3, System.Drawing.PointF pt4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBezier(valuetype System.Drawing.PointF pt1, valuetype System.Drawing.PointF pt2, valuetype System.Drawing.PointF pt3, valuetype System.Drawing.PointF pt4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBezier (pt1 As PointF, pt2 As PointF, pt3 As PointF, pt4 As PointF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBezier(System::Drawing::PointF pt1, System::Drawing::PointF pt2, System::Drawing::PointF pt3, System::Drawing::PointF pt4);" />
      <MemberSignature Language="F#" Value="member this.AddBezier : System.Drawing.PointF * System.Drawing.PointF * System.Drawing.PointF * System.Drawing.PointF -&gt; unit" Usage="graphicsPath.AddBezier (pt1, pt2, pt3, pt4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt1" Type="System.Drawing.PointF" />
        <Parameter Name="pt2" Type="System.Drawing.PointF" />
        <Parameter Name="pt3" Type="System.Drawing.PointF" />
        <Parameter Name="pt4" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="pt1"><span data-ttu-id="b423e-202">Uma <see cref="T:System.Drawing.PointF" /> que representa o ponto inicial da curva.</span><span class="sxs-lookup"><span data-stu-id="b423e-202">A <see cref="T:System.Drawing.PointF" /> that represents the starting point of the curve.</span></span></param>
        <param name="pt2"><span data-ttu-id="b423e-203">Uma <see cref="T:System.Drawing.PointF" /> que representa o primeiro ponto de controle da curva.</span><span class="sxs-lookup"><span data-stu-id="b423e-203">A <see cref="T:System.Drawing.PointF" /> that represents the first control point for the curve.</span></span></param>
        <param name="pt3"><span data-ttu-id="b423e-204">Uma <see cref="T:System.Drawing.PointF" /> que representa o segundo ponto de controle da curva.</span><span class="sxs-lookup"><span data-stu-id="b423e-204">A <see cref="T:System.Drawing.PointF" /> that represents the second control point for the curve.</span></span></param>
        <param name="pt4"><span data-ttu-id="b423e-205">Um <see cref="T:System.Drawing.PointF" /> que representa o ponto de extremidade da curva.</span><span class="sxs-lookup"><span data-stu-id="b423e-205">A <see cref="T:System.Drawing.PointF" /> that represents the endpoint of the curve.</span></span></param>
        <summary><span data-ttu-id="b423e-206">Adiciona uma curva de Bézier cúbica à figura atual.</span><span class="sxs-lookup"><span data-stu-id="b423e-206">Adds a cubic Bézier curve to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-207">A curva cúbica é construída com o primeiro ponto até o quarto ponto usando os pontos do segundo e terceiro como pontos de controle.</span><span class="sxs-lookup"><span data-stu-id="b423e-207">The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</span></span>  
  
 <span data-ttu-id="b423e-208">Se houver uma linha anterior ou um segmento de curva na figura, uma linha é adicionada para conectar-se o ponto de extremidade do segmento anterior ao ponto de partida da curva cúbica.</span><span class="sxs-lookup"><span data-stu-id="b423e-208">If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b423e-209">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="b423e-209">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBezier">
      <MemberSignature Language="C#" Value="public void AddBezier (int x1, int y1, int x2, int y2, int x3, int y3, int x4, int y4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBezier(int32 x1, int32 y1, int32 x2, int32 y2, int32 x3, int32 y3, int32 x4, int32 y4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBezier (x1 As Integer, y1 As Integer, x2 As Integer, y2 As Integer, x3 As Integer, y3 As Integer, x4 As Integer, y4 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBezier(int x1, int y1, int x2, int y2, int x3, int y3, int x4, int y4);" />
      <MemberSignature Language="F#" Value="member this.AddBezier : int * int * int * int * int * int * int * int -&gt; unit" Usage="graphicsPath.AddBezier (x1, y1, x2, y2, x3, y3, x4, y4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Int32" />
        <Parameter Name="y1" Type="System.Int32" />
        <Parameter Name="x2" Type="System.Int32" />
        <Parameter Name="y2" Type="System.Int32" />
        <Parameter Name="x3" Type="System.Int32" />
        <Parameter Name="y3" Type="System.Int32" />
        <Parameter Name="x4" Type="System.Int32" />
        <Parameter Name="y4" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x1"><span data-ttu-id="b423e-210">A coordenada X do ponto de partida da curva.</span><span class="sxs-lookup"><span data-stu-id="b423e-210">The x-coordinate of the starting point of the curve.</span></span></param>
        <param name="y1"><span data-ttu-id="b423e-211">A coordenada Y do ponto de partida da curva.</span><span class="sxs-lookup"><span data-stu-id="b423e-211">The y-coordinate of the starting point of the curve.</span></span></param>
        <param name="x2"><span data-ttu-id="b423e-212">A coordenada X do primeiro ponto de controle da curva.</span><span class="sxs-lookup"><span data-stu-id="b423e-212">The x-coordinate of the first control point for the curve.</span></span></param>
        <param name="y2"><span data-ttu-id="b423e-213">A coordenada Y do primeiro ponto de controle da curva.</span><span class="sxs-lookup"><span data-stu-id="b423e-213">The y-coordinate of the first control point for the curve.</span></span></param>
        <param name="x3"><span data-ttu-id="b423e-214">A coordenada X do segundo ponto de controle da curva.</span><span class="sxs-lookup"><span data-stu-id="b423e-214">The x-coordinate of the second control point for the curve.</span></span></param>
        <param name="y3"><span data-ttu-id="b423e-215">A coordenada Y do segundo ponto de controle da curva.</span><span class="sxs-lookup"><span data-stu-id="b423e-215">The y-coordinate of the second control point for the curve.</span></span></param>
        <param name="x4"><span data-ttu-id="b423e-216">A coordenada X do ponto de extremidade da curva.</span><span class="sxs-lookup"><span data-stu-id="b423e-216">The x-coordinate of the endpoint of the curve.</span></span></param>
        <param name="y4"><span data-ttu-id="b423e-217">A coordenada Y do ponto de extremidade da curva.</span><span class="sxs-lookup"><span data-stu-id="b423e-217">The y-coordinate of the endpoint of the curve.</span></span></param>
        <summary><span data-ttu-id="b423e-218">Adiciona uma curva de Bézier cúbica à figura atual.</span><span class="sxs-lookup"><span data-stu-id="b423e-218">Adds a cubic Bézier curve to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-219">A curva cúbica é construída com o primeiro ponto até o quarto ponto usando os pontos do segundo e terceiro como pontos de controle.</span><span class="sxs-lookup"><span data-stu-id="b423e-219">The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</span></span>  
  
 <span data-ttu-id="b423e-220">Se houver uma linha anterior ou um segmento de curva na figura, uma linha é adicionada para conectar-se o ponto de extremidade do segmento anterior ao ponto de partida da curva cúbica.</span><span class="sxs-lookup"><span data-stu-id="b423e-220">If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b423e-221">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, um <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="b423e-221">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="b423e-222">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="b423e-222">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b423e-223">Cria um caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-223">Creates a path.</span></span>  
  
-   <span data-ttu-id="b423e-224">Adiciona uma curva de Bézier cúbica definida pelos pontos (50, 50), (70, 0), (100, 120) e (150, 50) para o caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-224">Adds a cubic Bézier curve defined by the points (50, 50), (70, 0), (100, 120), and (150, 50) to the path.</span></span>  
  
-   <span data-ttu-id="b423e-225">Fecha a curva.</span><span class="sxs-lookup"><span data-stu-id="b423e-225">Closes the curve.</span></span>  
  
-   <span data-ttu-id="b423e-226">Desenha o caminho para a tela.</span><span class="sxs-lookup"><span data-stu-id="b423e-226">Draws the path to screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#2)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBezier">
      <MemberSignature Language="C#" Value="public void AddBezier (float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBezier(float32 x1, float32 y1, float32 x2, float32 y2, float32 x3, float32 y3, float32 x4, float32 y4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBezier (x1 As Single, y1 As Single, x2 As Single, y2 As Single, x3 As Single, y3 As Single, x4 As Single, y4 As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBezier(float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4);" />
      <MemberSignature Language="F#" Value="member this.AddBezier : single * single * single * single * single * single * single * single -&gt; unit" Usage="graphicsPath.AddBezier (x1, y1, x2, y2, x3, y3, x4, y4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Single" />
        <Parameter Name="y1" Type="System.Single" />
        <Parameter Name="x2" Type="System.Single" />
        <Parameter Name="y2" Type="System.Single" />
        <Parameter Name="x3" Type="System.Single" />
        <Parameter Name="y3" Type="System.Single" />
        <Parameter Name="x4" Type="System.Single" />
        <Parameter Name="y4" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x1"><span data-ttu-id="b423e-227">A coordenada X do ponto de partida da curva.</span><span class="sxs-lookup"><span data-stu-id="b423e-227">The x-coordinate of the starting point of the curve.</span></span></param>
        <param name="y1"><span data-ttu-id="b423e-228">A coordenada Y do ponto de partida da curva.</span><span class="sxs-lookup"><span data-stu-id="b423e-228">The y-coordinate of the starting point of the curve.</span></span></param>
        <param name="x2"><span data-ttu-id="b423e-229">A coordenada X do primeiro ponto de controle da curva.</span><span class="sxs-lookup"><span data-stu-id="b423e-229">The x-coordinate of the first control point for the curve.</span></span></param>
        <param name="y2"><span data-ttu-id="b423e-230">A coordenada Y do primeiro ponto de controle da curva.</span><span class="sxs-lookup"><span data-stu-id="b423e-230">The y-coordinate of the first control point for the curve.</span></span></param>
        <param name="x3"><span data-ttu-id="b423e-231">A coordenada X do segundo ponto de controle da curva.</span><span class="sxs-lookup"><span data-stu-id="b423e-231">The x-coordinate of the second control point for the curve.</span></span></param>
        <param name="y3"><span data-ttu-id="b423e-232">A coordenada Y do segundo ponto de controle da curva.</span><span class="sxs-lookup"><span data-stu-id="b423e-232">The y-coordinate of the second control point for the curve.</span></span></param>
        <param name="x4"><span data-ttu-id="b423e-233">A coordenada X do ponto de extremidade da curva.</span><span class="sxs-lookup"><span data-stu-id="b423e-233">The x-coordinate of the endpoint of the curve.</span></span></param>
        <param name="y4"><span data-ttu-id="b423e-234">A coordenada Y do ponto de extremidade da curva.</span><span class="sxs-lookup"><span data-stu-id="b423e-234">The y-coordinate of the endpoint of the curve.</span></span></param>
        <summary><span data-ttu-id="b423e-235">Adiciona uma curva de Bézier cúbica à figura atual.</span><span class="sxs-lookup"><span data-stu-id="b423e-235">Adds a cubic Bézier curve to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-236">A curva cúbica é construída com o primeiro ponto até o quarto ponto usando os pontos do segundo e terceiro como pontos de controle.</span><span class="sxs-lookup"><span data-stu-id="b423e-236">The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</span></span>  
  
 <span data-ttu-id="b423e-237">Se houver uma linha anterior ou um segmento de curva na figura, uma linha é adicionada para conectar-se o ponto de extremidade do segmento anterior ao ponto de partida da curva cúbica.</span><span class="sxs-lookup"><span data-stu-id="b423e-237">If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b423e-238">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="b423e-238">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddBeziers">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b423e-239">Adiciona à figura atual uma sequência de curvas de Bézier cúbicas conectadas.</span><span class="sxs-lookup"><span data-stu-id="b423e-239">Adds a sequence of connected cubic Bézier curves to the current figure.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddBeziers">
      <MemberSignature Language="C#" Value="public void AddBeziers (params System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBeziers(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBeziers (ParamArray points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBeziers(... cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddBeziers : System.Drawing.Point[] -&gt; unit" Usage="graphicsPath.AddBeziers points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="b423e-240">Uma matriz de estruturas <see cref="T:System.Drawing.Point" /> que representa os pontos que definem as curvas.</span><span class="sxs-lookup"><span data-stu-id="b423e-240">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curves.</span></span></param>
        <summary><span data-ttu-id="b423e-241">Adiciona à figura atual uma sequência de curvas de Bézier cúbicas conectadas.</span><span class="sxs-lookup"><span data-stu-id="b423e-241">Adds a sequence of connected cubic Bézier curves to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-242">O `points` parâmetro especifica uma matriz de pontos de extremidade e pontos de controle de curvas conectadas.</span><span class="sxs-lookup"><span data-stu-id="b423e-242">The `points` parameter specifies an array of endpoints and control points of the connected curves.</span></span> <span data-ttu-id="b423e-243">A curva a primeira é construída do primeiro ponto para o quarto ponto no `points` matriz usando os pontos do segundo e terceiro como pontos de controle.</span><span class="sxs-lookup"><span data-stu-id="b423e-243">The first curve is constructed from the first point to the fourth point in the `points` array by using the second and third points as control points.</span></span> <span data-ttu-id="b423e-244">Além do ponto de extremidade da curva anterior, cada curva subsequente na sequência precisa exatamente três pontos mais: os dois pontos na sequência são pontos de controle e o terceiro é o ponto de extremidade da curva adicionado.</span><span class="sxs-lookup"><span data-stu-id="b423e-244">In addition to the endpoint of the previous curve, each subsequent curve in the sequence needs exactly three more points: the next two points in the sequence are control points, and the third is the endpoint for the added curve.</span></span>  
  
 <span data-ttu-id="b423e-245">Se houver linhas anteriores ou curvas na figura, uma linha é adicionada para conectar-se o ponto de extremidade do segmento anterior ao ponto de partida da curva cúbica primeiro na sequência.</span><span class="sxs-lookup"><span data-stu-id="b423e-245">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the first cubic curve in the sequence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b423e-246">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, um <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="b423e-246">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="b423e-247">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="b423e-247">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b423e-248">Cria uma matriz de sete pontos (representando duas curvas de Bézier conectadas).</span><span class="sxs-lookup"><span data-stu-id="b423e-248">Creates an array of seven points (representing two connected Bézier curves).</span></span>  
  
-   <span data-ttu-id="b423e-249">Cria um caminho e adiciona a série de pontos de curva de Bézier para o caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-249">Creates a path and adds the series of Bézier curve points to the path.</span></span>  
  
-   <span data-ttu-id="b423e-250">Desenha o caminho para a tela.</span><span class="sxs-lookup"><span data-stu-id="b423e-250">Draws the path to screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#3)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBeziers">
      <MemberSignature Language="C#" Value="public void AddBeziers (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBeziers(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBeziers (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBeziers(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddBeziers : System.Drawing.PointF[] -&gt; unit" Usage="graphicsPath.AddBeziers points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="b423e-251">Uma matriz de estruturas <see cref="T:System.Drawing.PointF" /> que representa os pontos que definem as curvas.</span><span class="sxs-lookup"><span data-stu-id="b423e-251">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curves.</span></span></param>
        <summary><span data-ttu-id="b423e-252">Adiciona à figura atual uma sequência de curvas de Bézier cúbicas conectadas.</span><span class="sxs-lookup"><span data-stu-id="b423e-252">Adds a sequence of connected cubic Bézier curves to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-253">O `points` parâmetro especifica uma matriz de pontos de extremidade e pontos de controle de curvas conectadas.</span><span class="sxs-lookup"><span data-stu-id="b423e-253">The `points` parameter specifies an array of endpoints and control points of the connected curves.</span></span> <span data-ttu-id="b423e-254">A curva a primeira é construída do primeiro ponto para o quarto ponto no `points` matriz usando os pontos do segundo e terceiro como pontos de controle.</span><span class="sxs-lookup"><span data-stu-id="b423e-254">The first curve is constructed from the first point to the fourth point in the `points` array by using the second and third points as control points.</span></span> <span data-ttu-id="b423e-255">Além do ponto de extremidade da curva anterior, cada curva subsequente na sequência precisa exatamente três pontos mais: os dois pontos na sequência são pontos de controle e o terceiro é o ponto de extremidade da curva adicionado.</span><span class="sxs-lookup"><span data-stu-id="b423e-255">In addition to the endpoint of the previous curve, each subsequent curve in the sequence needs exactly three more points: the next two points in the sequence are control points, and the third is the endpoint for the added curve.</span></span>  
  
 <span data-ttu-id="b423e-256">Se houver linhas anteriores ou curvas na figura, uma linha é adicionada para conectar-se o ponto de extremidade do segmento anterior ao ponto de partida da curva cúbica primeiro na sequência.</span><span class="sxs-lookup"><span data-stu-id="b423e-256">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the first cubic curve in the sequence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b423e-257">Para ver um exemplo:</span><span class="sxs-lookup"><span data-stu-id="b423e-257">For an example see:</span></span>  
  
 <xref:System.Drawing.Drawing2D.GraphicsPath.AddBeziers%28System.Drawing.Point%5B%5D%29>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddClosedCurve">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b423e-258">Adiciona uma curva fechada a esse caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-258">Adds a closed curve to this path.</span></span> <span data-ttu-id="b423e-259">Uma curva de spline cardinal é usada porque a curva percorre cada um dos pontos da matriz.</span><span class="sxs-lookup"><span data-stu-id="b423e-259">A cardinal spline curve is used because the curve travels through each of the points in the array.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddClosedCurve">
      <MemberSignature Language="C#" Value="public void AddClosedCurve (System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddClosedCurve(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddClosedCurve (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddClosedCurve(cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddClosedCurve : System.Drawing.Point[] -&gt; unit" Usage="graphicsPath.AddClosedCurve points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="b423e-260">Uma matriz de estruturas <see cref="T:System.Drawing.Point" /> que representa os pontos que definem a curva.</span><span class="sxs-lookup"><span data-stu-id="b423e-260">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span></span></param>
        <summary><span data-ttu-id="b423e-261">Adiciona uma curva fechada a esse caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-261">Adds a closed curve to this path.</span></span> <span data-ttu-id="b423e-262">Uma curva de spline cardinal é usada porque a curva percorre cada um dos pontos da matriz.</span><span class="sxs-lookup"><span data-stu-id="b423e-262">A cardinal spline curve is used because the curve travels through each of the points in the array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-263">O usuário deve manter os pontos originais se forem necessários.</span><span class="sxs-lookup"><span data-stu-id="b423e-263">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="b423e-264">Os pontos originais são convertidos em pontos de controle de Bézier cúbicos internamente, portanto não há nenhum mecanismo para retornar os pontos originais.</span><span class="sxs-lookup"><span data-stu-id="b423e-264">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span> <span data-ttu-id="b423e-265">Se o primeiro ponto e o último ponto no `points` matriz não são o mesmo ponto, a curva é fechada conectando-se esses dois pontos.</span><span class="sxs-lookup"><span data-stu-id="b423e-265">If the first point and the last point in the `points` array are not the same point, the curve is closed by connecting these two points.</span></span> <span data-ttu-id="b423e-266">O valor de tensão não pode ser definido para esse método e assume como padrão um valor equivalente como 0,5.</span><span class="sxs-lookup"><span data-stu-id="b423e-266">The tension value cannot be set for this method, and defaults to a value equivalent to 0.5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b423e-267">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="b423e-267">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddClosedCurve">
      <MemberSignature Language="C#" Value="public void AddClosedCurve (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddClosedCurve(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddClosedCurve (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddClosedCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddClosedCurve : System.Drawing.PointF[] -&gt; unit" Usage="graphicsPath.AddClosedCurve points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="b423e-268">Uma matriz de estruturas <see cref="T:System.Drawing.PointF" /> que representa os pontos que definem a curva.</span><span class="sxs-lookup"><span data-stu-id="b423e-268">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span></span></param>
        <summary><span data-ttu-id="b423e-269">Adiciona uma curva fechada a esse caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-269">Adds a closed curve to this path.</span></span> <span data-ttu-id="b423e-270">Uma curva de spline cardinal é usada porque a curva percorre cada um dos pontos da matriz.</span><span class="sxs-lookup"><span data-stu-id="b423e-270">A cardinal spline curve is used because the curve travels through each of the points in the array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-271">O usuário deve manter os pontos originais se forem necessários.</span><span class="sxs-lookup"><span data-stu-id="b423e-271">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="b423e-272">Os pontos originais são convertidos em pontos de controle de Bézier cúbicos internamente, portanto não há nenhum mecanismo para retornar os pontos originais.</span><span class="sxs-lookup"><span data-stu-id="b423e-272">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span> <span data-ttu-id="b423e-273">Se o primeiro ponto e o último ponto no `points` matriz não são o mesmo ponto, a curva é fechada conectando-se esses dois pontos.</span><span class="sxs-lookup"><span data-stu-id="b423e-273">If the first point and the last point in the `points` array are not the same point, the curve is closed by connecting these two points.</span></span> <span data-ttu-id="b423e-274">O valor de tensão não pode ser definido para esse método e assume como padrão um valor equivalente como 0,5.</span><span class="sxs-lookup"><span data-stu-id="b423e-274">The tension value cannot be set for this method, and defaults to a value equivalent to 0.5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b423e-275">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="b423e-275">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddClosedCurve">
      <MemberSignature Language="C#" Value="public void AddClosedCurve (System.Drawing.Point[] points, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddClosedCurve(valuetype System.Drawing.Point[] points, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddClosedCurve (points As Point(), tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddClosedCurve(cli::array &lt;System::Drawing::Point&gt; ^ points, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddClosedCurve : System.Drawing.Point[] * single -&gt; unit" Usage="graphicsPath.AddClosedCurve (points, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="b423e-276">Uma matriz de estruturas <see cref="T:System.Drawing.Point" /> que representa os pontos que definem a curva.</span><span class="sxs-lookup"><span data-stu-id="b423e-276">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span></span></param>
        <param name="tension"><span data-ttu-id="b423e-277">Um valor entre 0 e 1, que especifica o quanto a curva se dobra entre pontos, com 0 sendo a curva menor (com canto mais agudo) e 1 sendo a curva mais suave.</span><span class="sxs-lookup"><span data-stu-id="b423e-277">A value between from 0 through 1 that specifies the amount that the curve bends between points, with 0 being the smallest curve (sharpest corner) and 1 being the smoothest curve.</span></span></param>
        <summary><span data-ttu-id="b423e-278">Adiciona uma curva fechada a esse caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-278">Adds a closed curve to this path.</span></span> <span data-ttu-id="b423e-279">Uma curva de spline cardinal é usada porque a curva percorre cada um dos pontos da matriz.</span><span class="sxs-lookup"><span data-stu-id="b423e-279">A cardinal spline curve is used because the curve travels through each of the points in the array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-280">O usuário deve manter os pontos originais se forem necessários.</span><span class="sxs-lookup"><span data-stu-id="b423e-280">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="b423e-281">Os pontos originais são convertidos em pontos de controle de Bézier cúbicos internamente, portanto não há nenhum mecanismo para retornar os pontos originais.</span><span class="sxs-lookup"><span data-stu-id="b423e-281">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span> <span data-ttu-id="b423e-282">Se o primeiro ponto e o último ponto no `points` matriz não são o mesmo ponto, a curva é fechada conectando-se esses dois pontos.</span><span class="sxs-lookup"><span data-stu-id="b423e-282">If the first point and the last point in the `points` array are not the same point, the curve is closed by connecting these two points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b423e-283">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, um <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="b423e-283">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="b423e-284">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="b423e-284">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b423e-285">Cria uma matriz de seis pontos (representando um spline cardinal).</span><span class="sxs-lookup"><span data-stu-id="b423e-285">Creates an array of six points (representing a cardinal spline).</span></span>  
  
-   <span data-ttu-id="b423e-286">Cria um caminho e adiciona as curvas spline cardinal fechado para o caminho (fechado do ponto de extremidade para o ponto de partida).</span><span class="sxs-lookup"><span data-stu-id="b423e-286">Creates a path and adds the closed cardinal spline curves to the path (closed from the endpoint to the starting point).</span></span>  
  
-   <span data-ttu-id="b423e-287">Desenha o caminho para a tela.</span><span class="sxs-lookup"><span data-stu-id="b423e-287">Draws the path to screen.</span></span>  
  
 <span data-ttu-id="b423e-288">Observe que uma tensão de 0,5 é usada.</span><span class="sxs-lookup"><span data-stu-id="b423e-288">Notice that a tension of 0.5 is used.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#4)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddClosedCurve">
      <MemberSignature Language="C#" Value="public void AddClosedCurve (System.Drawing.PointF[] points, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddClosedCurve(valuetype System.Drawing.PointF[] points, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddClosedCurve (points As PointF(), tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddClosedCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddClosedCurve : System.Drawing.PointF[] * single -&gt; unit" Usage="graphicsPath.AddClosedCurve (points, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="b423e-289">Uma matriz de estruturas <see cref="T:System.Drawing.PointF" /> que representa os pontos que definem a curva.</span><span class="sxs-lookup"><span data-stu-id="b423e-289">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span></span></param>
        <param name="tension"><span data-ttu-id="b423e-290">Um valor entre 0 e 1, que especifica o quanto a curva se dobra entre pontos, com 0 sendo a curva menor (com canto mais agudo) e 1 sendo a curva mais suave.</span><span class="sxs-lookup"><span data-stu-id="b423e-290">A value between from 0 through 1 that specifies the amount that the curve bends between points, with 0 being the smallest curve (sharpest corner) and 1 being the smoothest curve.</span></span></param>
        <summary><span data-ttu-id="b423e-291">Adiciona uma curva fechada a esse caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-291">Adds a closed curve to this path.</span></span> <span data-ttu-id="b423e-292">Uma curva de spline cardinal é usada porque a curva percorre cada um dos pontos da matriz.</span><span class="sxs-lookup"><span data-stu-id="b423e-292">A cardinal spline curve is used because the curve travels through each of the points in the array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-293">O usuário deve manter os pontos originais se forem necessários.</span><span class="sxs-lookup"><span data-stu-id="b423e-293">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="b423e-294">Os pontos originais são convertidos em pontos de controle de Bézier cúbicos internamente, portanto não há nenhum mecanismo para retornar os pontos originais.</span><span class="sxs-lookup"><span data-stu-id="b423e-294">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span> <span data-ttu-id="b423e-295">Se o primeiro ponto e o último ponto no `points` matriz não são o mesmo ponto, a curva é fechada conectando-se esses dois pontos.</span><span class="sxs-lookup"><span data-stu-id="b423e-295">If the first point and the last point in the `points` array are not the same point, the curve is closed by connecting these two points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b423e-296">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="b423e-296">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddCurve">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b423e-297">Adiciona uma curva de spline à figura atual.</span><span class="sxs-lookup"><span data-stu-id="b423e-297">Adds a spline curve to the current figure.</span></span> <span data-ttu-id="b423e-298">Uma curva de spline cardinal é usada porque a curva percorre cada um dos pontos da matriz.</span><span class="sxs-lookup"><span data-stu-id="b423e-298">A cardinal spline curve is used because the curve travels through each of the points in the array.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.Point[] -&gt; unit" Usage="graphicsPath.AddCurve points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="b423e-299">Uma matriz de estruturas <see cref="T:System.Drawing.Point" /> que representa os pontos que definem a curva.</span><span class="sxs-lookup"><span data-stu-id="b423e-299">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span></span></param>
        <summary><span data-ttu-id="b423e-300">Adiciona uma curva de spline à figura atual.</span><span class="sxs-lookup"><span data-stu-id="b423e-300">Adds a spline curve to the current figure.</span></span> <span data-ttu-id="b423e-301">Uma curva de spline cardinal é usada porque a curva percorre cada um dos pontos da matriz.</span><span class="sxs-lookup"><span data-stu-id="b423e-301">A cardinal spline curve is used because the curve travels through each of the points in the array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-302">O usuário deve manter os pontos originais se forem necessários.</span><span class="sxs-lookup"><span data-stu-id="b423e-302">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="b423e-303">Os pontos originais são convertidos em pontos de controle de Bézier cúbicos internamente, portanto não há nenhum mecanismo para retornar os pontos originais.</span><span class="sxs-lookup"><span data-stu-id="b423e-303">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b423e-304">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="b423e-304">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.PointF[] -&gt; unit" Usage="graphicsPath.AddCurve points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="b423e-305">Uma matriz de estruturas <see cref="T:System.Drawing.PointF" /> que representa os pontos que definem a curva.</span><span class="sxs-lookup"><span data-stu-id="b423e-305">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span></span></param>
        <summary><span data-ttu-id="b423e-306">Adiciona uma curva de spline à figura atual.</span><span class="sxs-lookup"><span data-stu-id="b423e-306">Adds a spline curve to the current figure.</span></span> <span data-ttu-id="b423e-307">Uma curva de spline cardinal é usada porque a curva percorre cada um dos pontos da matriz.</span><span class="sxs-lookup"><span data-stu-id="b423e-307">A cardinal spline curve is used because the curve travels through each of the points in the array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-308">O usuário deve manter os pontos originais se forem necessários.</span><span class="sxs-lookup"><span data-stu-id="b423e-308">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="b423e-309">Os pontos originais são convertidos em pontos de controle de Bézier cúbicos internamente, portanto não há nenhum mecanismo para retornar os pontos originais.</span><span class="sxs-lookup"><span data-stu-id="b423e-309">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b423e-310">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="b423e-310">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.Point[] points, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.Point[] points, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As Point(), tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::Point&gt; ^ points, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.Point[] * single -&gt; unit" Usage="graphicsPath.AddCurve (points, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="b423e-311">Uma matriz de estruturas <see cref="T:System.Drawing.Point" /> que representa os pontos que definem a curva.</span><span class="sxs-lookup"><span data-stu-id="b423e-311">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span></span></param>
        <param name="tension"><span data-ttu-id="b423e-312">Um valor que especifica quanto a curva se dobra entre os pontos de controle.</span><span class="sxs-lookup"><span data-stu-id="b423e-312">A value that specifies the amount that the curve bends between control points.</span></span> <span data-ttu-id="b423e-313">Valores maiores que 1 produzem resultados imprevisíveis.</span><span class="sxs-lookup"><span data-stu-id="b423e-313">Values greater than 1 produce unpredictable results.</span></span></param>
        <summary><span data-ttu-id="b423e-314">Adiciona uma curva de spline à figura atual.</span><span class="sxs-lookup"><span data-stu-id="b423e-314">Adds a spline curve to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-315">O usuário deve manter os pontos originais se forem necessários.</span><span class="sxs-lookup"><span data-stu-id="b423e-315">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="b423e-316">Os pontos originais são convertidos em pontos de controle de Bézier cúbicos internamente, portanto não há nenhum mecanismo para retornar os pontos originais.</span><span class="sxs-lookup"><span data-stu-id="b423e-316">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b423e-317">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="b423e-317">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.PointF[] points, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.PointF[] points, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As PointF(), tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.PointF[] * single -&gt; unit" Usage="graphicsPath.AddCurve (points, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="b423e-318">Uma matriz de estruturas <see cref="T:System.Drawing.PointF" /> que representa os pontos que definem a curva.</span><span class="sxs-lookup"><span data-stu-id="b423e-318">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span></span></param>
        <param name="tension"><span data-ttu-id="b423e-319">Um valor que especifica quanto a curva se dobra entre os pontos de controle.</span><span class="sxs-lookup"><span data-stu-id="b423e-319">A value that specifies the amount that the curve bends between control points.</span></span> <span data-ttu-id="b423e-320">Valores maiores que 1 produzem resultados imprevisíveis.</span><span class="sxs-lookup"><span data-stu-id="b423e-320">Values greater than 1 produce unpredictable results.</span></span></param>
        <summary><span data-ttu-id="b423e-321">Adiciona uma curva de spline à figura atual.</span><span class="sxs-lookup"><span data-stu-id="b423e-321">Adds a spline curve to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-322">O usuário deve manter os pontos originais se forem necessários.</span><span class="sxs-lookup"><span data-stu-id="b423e-322">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="b423e-323">Os pontos originais são convertidos em pontos de controle de Bézier cúbicos internamente, portanto não há nenhum mecanismo para retornar os pontos originais.</span><span class="sxs-lookup"><span data-stu-id="b423e-323">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b423e-324">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="b423e-324">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.Point[] points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.Point[] points, int32 offset, int32 numberOfSegments, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As Point(), offset As Integer, numberOfSegments As Integer, tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::Point&gt; ^ points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.Point[] * int * int * single -&gt; unit" Usage="graphicsPath.AddCurve (points, offset, numberOfSegments, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="numberOfSegments" Type="System.Int32" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="b423e-325">Uma matriz de estruturas <see cref="T:System.Drawing.Point" /> que representa os pontos que definem a curva.</span><span class="sxs-lookup"><span data-stu-id="b423e-325">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span></span></param>
        <param name="offset"><span data-ttu-id="b423e-326">O índice do elemento na matriz <paramref name="points" /> que é usada como o primeiro ponto da curva.</span><span class="sxs-lookup"><span data-stu-id="b423e-326">The index of the element in the <paramref name="points" /> array that is used as the first point in the curve.</span></span></param>
        <param name="numberOfSegments"><span data-ttu-id="b423e-327">Um valor que especifica quanto a curva se dobra entre os pontos de controle.</span><span class="sxs-lookup"><span data-stu-id="b423e-327">A value that specifies the amount that the curve bends between control points.</span></span> <span data-ttu-id="b423e-328">Valores maiores que 1 produzem resultados imprevisíveis.</span><span class="sxs-lookup"><span data-stu-id="b423e-328">Values greater than 1 produce unpredictable results.</span></span></param>
        <param name="tension"><span data-ttu-id="b423e-329">Um valor que especifica quanto a curva se dobra entre os pontos de controle.</span><span class="sxs-lookup"><span data-stu-id="b423e-329">A value that specifies the amount that the curve bends between control points.</span></span> <span data-ttu-id="b423e-330">Valores maiores que 1 produzem resultados imprevisíveis.</span><span class="sxs-lookup"><span data-stu-id="b423e-330">Values greater than 1 produce unpredictable results.</span></span></param>
        <summary><span data-ttu-id="b423e-331">Adiciona uma curva de spline à figura atual.</span><span class="sxs-lookup"><span data-stu-id="b423e-331">Adds a spline curve to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-332">O usuário deve manter os pontos originais se forem necessários.</span><span class="sxs-lookup"><span data-stu-id="b423e-332">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="b423e-333">Os pontos originais são convertidos em pontos de controle de Bézier cúbicos internamente, portanto não há nenhum mecanismo para retornar os pontos originais.</span><span class="sxs-lookup"><span data-stu-id="b423e-333">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
 <span data-ttu-id="b423e-334">A curva começa no ponto na matriz especificada o `offset` parâmetro e inclui o número de pontos (segmentos) especificado por `numberOfSegments`.</span><span class="sxs-lookup"><span data-stu-id="b423e-334">The curve begins at the point in the array specified by the `offset` parameter and includes the number of points (segments) specified by `numberOfSegments`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b423e-335">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, um <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="b423e-335">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="b423e-336">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="b423e-336">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b423e-337">Cria uma matriz de quatro pontos (representando um spline cardinal).</span><span class="sxs-lookup"><span data-stu-id="b423e-337">Creates an array of four points (representing a cardinal spline).</span></span>  
  
-   <span data-ttu-id="b423e-338">Cria um caminho e usando a matriz de pontos, adiciona a curva ao caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-338">Creates a path and using the array of points, adds the curve to the path.</span></span>  
  
-   <span data-ttu-id="b423e-339">Desenha o caminho para a tela.</span><span class="sxs-lookup"><span data-stu-id="b423e-339">Draws the path to the screen.</span></span>  
  
 <span data-ttu-id="b423e-340">Observe que enquanto a matriz contém quatro pontos, há apenas três segmentos, que é o número especificado no terceiro argumento da chamada para <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%2A>.</span><span class="sxs-lookup"><span data-stu-id="b423e-340">Notice that while the array holds four points, there are only three segments, which is the number specified in the third argument of the call to <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%2A>.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#5)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.PointF[] points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.PointF[] points, int32 offset, int32 numberOfSegments, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As PointF(), offset As Integer, numberOfSegments As Integer, tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.PointF[] * int * int * single -&gt; unit" Usage="graphicsPath.AddCurve (points, offset, numberOfSegments, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="numberOfSegments" Type="System.Int32" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="b423e-341">Uma matriz de estruturas <see cref="T:System.Drawing.PointF" /> que representa os pontos que definem a curva.</span><span class="sxs-lookup"><span data-stu-id="b423e-341">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span></span></param>
        <param name="offset"><span data-ttu-id="b423e-342">O índice do elemento na matriz <paramref name="points" /> que é usada como o primeiro ponto da curva.</span><span class="sxs-lookup"><span data-stu-id="b423e-342">The index of the element in the <paramref name="points" /> array that is used as the first point in the curve.</span></span></param>
        <param name="numberOfSegments"><span data-ttu-id="b423e-343">O número de segmentos usados para desenhar a curva.</span><span class="sxs-lookup"><span data-stu-id="b423e-343">The number of segments used to draw the curve.</span></span> <span data-ttu-id="b423e-344">Um segmento pode ser pensado como uma linha conectando dois pontos.</span><span class="sxs-lookup"><span data-stu-id="b423e-344">A segment can be thought of as a line connecting two points.</span></span></param>
        <param name="tension"><span data-ttu-id="b423e-345">Um valor que especifica quanto a curva se dobra entre os pontos de controle.</span><span class="sxs-lookup"><span data-stu-id="b423e-345">A value that specifies the amount that the curve bends between control points.</span></span> <span data-ttu-id="b423e-346">Valores maiores que 1 produzem resultados imprevisíveis.</span><span class="sxs-lookup"><span data-stu-id="b423e-346">Values greater than 1 produce unpredictable results.</span></span></param>
        <summary><span data-ttu-id="b423e-347">Adiciona uma curva de spline à figura atual.</span><span class="sxs-lookup"><span data-stu-id="b423e-347">Adds a spline curve to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-348">O usuário deve manter os pontos originais se forem necessários.</span><span class="sxs-lookup"><span data-stu-id="b423e-348">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="b423e-349">Os pontos originais são convertidos em pontos de controle de Bézier cúbicos internamente, portanto não há nenhum mecanismo para retornar os pontos originais.</span><span class="sxs-lookup"><span data-stu-id="b423e-349">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
 <span data-ttu-id="b423e-350">A curva começa no ponto na matriz especificada por `offset`e inclui o número de pontos (segmentos) especificado por `numberOfSegments`.</span><span class="sxs-lookup"><span data-stu-id="b423e-350">The curve begins at the point in the array specified by `offset`, and includes the number of points (segments) specified by `numberOfSegments`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b423e-351">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="b423e-351">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddEllipse">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b423e-352">Adiciona uma elipse ao caminho atual.</span><span class="sxs-lookup"><span data-stu-id="b423e-352">Adds an ellipse to the current path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddEllipse">
      <MemberSignature Language="C#" Value="public void AddEllipse (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEllipse(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEllipse (rect As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEllipse(System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.AddEllipse : System.Drawing.Rectangle -&gt; unit" Usage="graphicsPath.AddEllipse rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="b423e-353">Um <see cref="T:System.Drawing.Rectangle" /> que representa o retângulo delimitador que define a elipse.</span><span class="sxs-lookup"><span data-stu-id="b423e-353">A <see cref="T:System.Drawing.Rectangle" /> that represents the bounding rectangle that defines the ellipse.</span></span></param>
        <summary><span data-ttu-id="b423e-354">Adiciona uma elipse ao caminho atual.</span><span class="sxs-lookup"><span data-stu-id="b423e-354">Adds an ellipse to the current path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b423e-355">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, um <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="b423e-355">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="b423e-356">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="b423e-356">The code performs the following actions:</span></span>  
  
 <span data-ttu-id="b423e-357">Cria um retângulo delimitador que define uma elipse.</span><span class="sxs-lookup"><span data-stu-id="b423e-357">Creates a bounding rectangle that defines an ellipse.</span></span>  
  
 <span data-ttu-id="b423e-358">Cria um caminho e adiciona a elipse ao caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-358">Creates a path and adds the ellipse to the path.</span></span>  
  
 <span data-ttu-id="b423e-359">Desenha o caminho para a tela.</span><span class="sxs-lookup"><span data-stu-id="b423e-359">Draws the path to screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#6)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEllipse">
      <MemberSignature Language="C#" Value="public void AddEllipse (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEllipse(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEllipse (rect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEllipse(System::Drawing::RectangleF rect);" />
      <MemberSignature Language="F#" Value="member this.AddEllipse : System.Drawing.RectangleF -&gt; unit" Usage="graphicsPath.AddEllipse rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="b423e-360">Um <see cref="T:System.Drawing.RectangleF" /> que representa o retângulo delimitador que define a elipse.</span><span class="sxs-lookup"><span data-stu-id="b423e-360">A <see cref="T:System.Drawing.RectangleF" /> that represents the bounding rectangle that defines the ellipse.</span></span></param>
        <summary><span data-ttu-id="b423e-361">Adiciona uma elipse ao caminho atual.</span><span class="sxs-lookup"><span data-stu-id="b423e-361">Adds an ellipse to the current path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b423e-362">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span><span class="sxs-lookup"><span data-stu-id="b423e-362">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEllipse">
      <MemberSignature Language="C#" Value="public void AddEllipse (int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEllipse(int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEllipse (x As Integer, y As Integer, width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEllipse(int x, int y, int width, int height);" />
      <MemberSignature Language="F#" Value="member this.AddEllipse : int * int * int * int -&gt; unit" Usage="graphicsPath.AddEllipse (x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="b423e-363">A coordenada X do canto superior esquerdo do retângulo delimitador que define a elipse.</span><span class="sxs-lookup"><span data-stu-id="b423e-363">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="y"><span data-ttu-id="b423e-364">A coordenada y do canto superior esquerdo do retângulo delimitador que define a elipse.</span><span class="sxs-lookup"><span data-stu-id="b423e-364">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="width"><span data-ttu-id="b423e-365">A largura do retângulo delimitador que define a elipse.</span><span class="sxs-lookup"><span data-stu-id="b423e-365">The width of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="height"><span data-ttu-id="b423e-366">A altura do retângulo delimitador que define a elipse.</span><span class="sxs-lookup"><span data-stu-id="b423e-366">The height of the bounding rectangle that defines the ellipse.</span></span></param>
        <summary><span data-ttu-id="b423e-367">Adiciona uma elipse ao caminho atual.</span><span class="sxs-lookup"><span data-stu-id="b423e-367">Adds an ellipse to the current path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b423e-368">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span><span class="sxs-lookup"><span data-stu-id="b423e-368">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEllipse">
      <MemberSignature Language="C#" Value="public void AddEllipse (float x, float y, float width, float height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEllipse(float32 x, float32 y, float32 width, float32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEllipse (x As Single, y As Single, width As Single, height As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEllipse(float x, float y, float width, float height);" />
      <MemberSignature Language="F#" Value="member this.AddEllipse : single * single * single * single -&gt; unit" Usage="graphicsPath.AddEllipse (x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="b423e-369">A coordenada X do canto superior esquerdo do retângulo delimitador que define a elipse.</span><span class="sxs-lookup"><span data-stu-id="b423e-369">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="y"><span data-ttu-id="b423e-370">A coordenada y do canto superior esquerdo do retângulo delimitador que define a elipse.</span><span class="sxs-lookup"><span data-stu-id="b423e-370">The y-coordinate of the upper left corner of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="width"><span data-ttu-id="b423e-371">A largura do retângulo delimitador que define a elipse.</span><span class="sxs-lookup"><span data-stu-id="b423e-371">The width of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="height"><span data-ttu-id="b423e-372">A altura do retângulo delimitador que define a elipse.</span><span class="sxs-lookup"><span data-stu-id="b423e-372">The height of the bounding rectangle that defines the ellipse.</span></span></param>
        <summary><span data-ttu-id="b423e-373">Adiciona uma elipse ao caminho atual.</span><span class="sxs-lookup"><span data-stu-id="b423e-373">Adds an ellipse to the current path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b423e-374">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span><span class="sxs-lookup"><span data-stu-id="b423e-374">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddLine">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b423e-375">Acrescenta um segmento de linha para esse <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-375">Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddLine">
      <MemberSignature Language="C#" Value="public void AddLine (System.Drawing.Point pt1, System.Drawing.Point pt2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLine(valuetype System.Drawing.Point pt1, valuetype System.Drawing.Point pt2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.Point,System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLine (pt1 As Point, pt2 As Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLine(System::Drawing::Point pt1, System::Drawing::Point pt2);" />
      <MemberSignature Language="F#" Value="member this.AddLine : System.Drawing.Point * System.Drawing.Point -&gt; unit" Usage="graphicsPath.AddLine (pt1, pt2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt1" Type="System.Drawing.Point" />
        <Parameter Name="pt2" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt1"><span data-ttu-id="b423e-376">Um <see cref="T:System.Drawing.Point" /> que representa a posição inicial da linha.</span><span class="sxs-lookup"><span data-stu-id="b423e-376">A <see cref="T:System.Drawing.Point" /> that represents the starting point of the line.</span></span></param>
        <param name="pt2"><span data-ttu-id="b423e-377">Um <see cref="T:System.Drawing.Point" /> que representa o ponto de extremidade da linha.</span><span class="sxs-lookup"><span data-stu-id="b423e-377">A <see cref="T:System.Drawing.Point" /> that represents the endpoint of the line.</span></span></param>
        <summary><span data-ttu-id="b423e-378">Acrescenta um segmento de linha para esse <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-378">Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-379">Esse método adiciona o segmento de linha definido pelos pontos especificados ao final deste <xref:System.Drawing.Drawing2D.GraphicsPath>.</span><span class="sxs-lookup"><span data-stu-id="b423e-379">This method adds the line segment defined by the specified points to the end of this <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span> <span data-ttu-id="b423e-380">Se houver linhas anteriores ou curvas no <xref:System.Drawing.Drawing2D.GraphicsPath>, um segmento de linha é desenhado para conectar-se o último ponto no caminho até o primeiro ponto em que o novo segmento de linha.</span><span class="sxs-lookup"><span data-stu-id="b423e-380">If there are previous lines or curves in the <xref:System.Drawing.Drawing2D.GraphicsPath>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b423e-381">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="b423e-381">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLine">
      <MemberSignature Language="C#" Value="public void AddLine (System.Drawing.PointF pt1, System.Drawing.PointF pt2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLine(valuetype System.Drawing.PointF pt1, valuetype System.Drawing.PointF pt2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.PointF,System.Drawing.PointF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLine (pt1 As PointF, pt2 As PointF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLine(System::Drawing::PointF pt1, System::Drawing::PointF pt2);" />
      <MemberSignature Language="F#" Value="member this.AddLine : System.Drawing.PointF * System.Drawing.PointF -&gt; unit" Usage="graphicsPath.AddLine (pt1, pt2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt1" Type="System.Drawing.PointF" />
        <Parameter Name="pt2" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="pt1"><span data-ttu-id="b423e-382">Um <see cref="T:System.Drawing.PointF" /> que representa a posição inicial da linha.</span><span class="sxs-lookup"><span data-stu-id="b423e-382">A <see cref="T:System.Drawing.PointF" /> that represents the starting point of the line.</span></span></param>
        <param name="pt2"><span data-ttu-id="b423e-383">Um <see cref="T:System.Drawing.PointF" /> que representa o ponto de extremidade da linha.</span><span class="sxs-lookup"><span data-stu-id="b423e-383">A <see cref="T:System.Drawing.PointF" /> that represents the endpoint of the line.</span></span></param>
        <summary><span data-ttu-id="b423e-384">Acrescenta um segmento de linha para esse <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-384">Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-385">Esse método adiciona o segmento de linha definido pelos pontos especificados ao final deste <xref:System.Drawing.Drawing2D.GraphicsPath>.</span><span class="sxs-lookup"><span data-stu-id="b423e-385">This method adds the line segment defined by the specified points to the end of this <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span> <span data-ttu-id="b423e-386">Se houver linhas anteriores ou curvas no <xref:System.Drawing.Drawing2D.GraphicsPath>, um segmento de linha é desenhado para conectar-se o último ponto no caminho até o primeiro ponto em que o novo segmento de linha.</span><span class="sxs-lookup"><span data-stu-id="b423e-386">If there are previous lines or curves in the <xref:System.Drawing.Drawing2D.GraphicsPath>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b423e-387">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="b423e-387">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLine">
      <MemberSignature Language="C#" Value="public void AddLine (int x1, int y1, int x2, int y2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLine(int32 x1, int32 y1, int32 x2, int32 y2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLine (x1 As Integer, y1 As Integer, x2 As Integer, y2 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLine(int x1, int y1, int x2, int y2);" />
      <MemberSignature Language="F#" Value="member this.AddLine : int * int * int * int -&gt; unit" Usage="graphicsPath.AddLine (x1, y1, x2, y2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Int32" />
        <Parameter Name="y1" Type="System.Int32" />
        <Parameter Name="x2" Type="System.Int32" />
        <Parameter Name="y2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x1"><span data-ttu-id="b423e-388">A coordenada X do ponto de partida da linha.</span><span class="sxs-lookup"><span data-stu-id="b423e-388">The x-coordinate of the starting point of the line.</span></span></param>
        <param name="y1"><span data-ttu-id="b423e-389">A coordenada y do ponto de partida da linha.</span><span class="sxs-lookup"><span data-stu-id="b423e-389">The y-coordinate of the starting point of the line.</span></span></param>
        <param name="x2"><span data-ttu-id="b423e-390">A coordenada X do ponto de extremidade da linha.</span><span class="sxs-lookup"><span data-stu-id="b423e-390">The x-coordinate of the endpoint of the line.</span></span></param>
        <param name="y2"><span data-ttu-id="b423e-391">A coordenada y do ponto de extremidade da linha.</span><span class="sxs-lookup"><span data-stu-id="b423e-391">The y-coordinate of the endpoint of the line.</span></span></param>
        <summary><span data-ttu-id="b423e-392">Acrescenta um segmento de linha para a figura atual.</span><span class="sxs-lookup"><span data-stu-id="b423e-392">Appends a line segment to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-393">Esse método adiciona o segmento de linha definido pelos pontos especificados ao final da figura atual.</span><span class="sxs-lookup"><span data-stu-id="b423e-393">This method adds the line segment defined by the specified points to the end of the current figure.</span></span> <span data-ttu-id="b423e-394">Se houver linhas anteriores ou curvas no <xref:System.Drawing.Drawing2D.GraphicsPath>, um segmento de linha é desenhado para conectar-se o último ponto no caminho até o primeiro ponto em que o novo segmento de linha.</span><span class="sxs-lookup"><span data-stu-id="b423e-394">If there are previous lines or curves in the <xref:System.Drawing.Drawing2D.GraphicsPath>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b423e-395">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, um <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="b423e-395">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="b423e-396">O código cria um caminho, adiciona três linhas que formam um triângulo e, em seguida, desenha o caminho para a tela.</span><span class="sxs-lookup"><span data-stu-id="b423e-396">The code creates a path, adds three lines that form a triangle, and then draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#7)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLine">
      <MemberSignature Language="C#" Value="public void AddLine (float x1, float y1, float x2, float y2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLine(float32 x1, float32 y1, float32 x2, float32 y2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLine (x1 As Single, y1 As Single, x2 As Single, y2 As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLine(float x1, float y1, float x2, float y2);" />
      <MemberSignature Language="F#" Value="member this.AddLine : single * single * single * single -&gt; unit" Usage="graphicsPath.AddLine (x1, y1, x2, y2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Single" />
        <Parameter Name="y1" Type="System.Single" />
        <Parameter Name="x2" Type="System.Single" />
        <Parameter Name="y2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x1"><span data-ttu-id="b423e-397">A coordenada X do ponto de partida da linha.</span><span class="sxs-lookup"><span data-stu-id="b423e-397">The x-coordinate of the starting point of the line.</span></span></param>
        <param name="y1"><span data-ttu-id="b423e-398">A coordenada y do ponto de partida da linha.</span><span class="sxs-lookup"><span data-stu-id="b423e-398">The y-coordinate of the starting point of the line.</span></span></param>
        <param name="x2"><span data-ttu-id="b423e-399">A coordenada X do ponto de extremidade da linha.</span><span class="sxs-lookup"><span data-stu-id="b423e-399">The x-coordinate of the endpoint of the line.</span></span></param>
        <param name="y2"><span data-ttu-id="b423e-400">A coordenada y do ponto de extremidade da linha.</span><span class="sxs-lookup"><span data-stu-id="b423e-400">The y-coordinate of the endpoint of the line.</span></span></param>
        <summary><span data-ttu-id="b423e-401">Acrescenta um segmento de linha para esse <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-401">Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-402">Esse método adiciona o segmento de linha definido pelos pontos especificados ao final deste <xref:System.Drawing.Drawing2D.GraphicsPath>.</span><span class="sxs-lookup"><span data-stu-id="b423e-402">This method adds the line segment defined by the specified points to the end of this <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span> <span data-ttu-id="b423e-403">Se houver linhas anteriores ou curvas no <xref:System.Drawing.Drawing2D.GraphicsPath>, um segmento de linha é desenhado para conectar-se o último ponto no caminho até o primeiro ponto em que o novo segmento de linha.</span><span class="sxs-lookup"><span data-stu-id="b423e-403">If there are previous lines or curves in the <xref:System.Drawing.Drawing2D.GraphicsPath>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b423e-404">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="b423e-404">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddLines">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b423e-405">Acrescenta uma série de segmentos de linha conectados ao final deste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-405">Appends a series of connected line segments to the end of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddLines">
      <MemberSignature Language="C#" Value="public void AddLines (System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLines(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLines (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLines(cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddLines : System.Drawing.Point[] -&gt; unit" Usage="graphicsPath.AddLines points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="b423e-406">Uma matriz de estruturas <see cref="T:System.Drawing.Point" /> que representa os pontos que definem os segmentos de linha a serem adicionados.</span><span class="sxs-lookup"><span data-stu-id="b423e-406">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the line segments to add.</span></span></param>
        <summary><span data-ttu-id="b423e-407">Acrescenta uma série de segmentos de linha conectados ao final deste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-407">Appends a series of connected line segments to the end of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-408">Se houver linhas anteriores ou curvas na figura, uma linha é adicionada para conectar-se o ponto de extremidade do segmento anterior, o ponto de partida da linha.</span><span class="sxs-lookup"><span data-stu-id="b423e-408">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment the starting point of the line.</span></span> <span data-ttu-id="b423e-409">O `points` parâmetro especifica uma matriz de pontos de extremidade.</span><span class="sxs-lookup"><span data-stu-id="b423e-409">The `points` parameter specifies an array of endpoints.</span></span> <span data-ttu-id="b423e-410">Os dois primeiros especificam a primeira linha.</span><span class="sxs-lookup"><span data-stu-id="b423e-410">The first two specify the first line.</span></span> <span data-ttu-id="b423e-411">Cada ponto adicional que especifica o ponto de extremidade de um segmento de linha cujo ponto de partida é o ponto de extremidade da linha anterior.</span><span class="sxs-lookup"><span data-stu-id="b423e-411">Each additional point specifies the endpoint of a line segment whose starting point is the endpoint of the previous line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b423e-412">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, um <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="b423e-412">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="b423e-413">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="b423e-413">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b423e-414">Cria uma matriz de quatro pontos que descrevem um triângulo.</span><span class="sxs-lookup"><span data-stu-id="b423e-414">Creates an array of four points that describe a triangle.</span></span>  
  
-   <span data-ttu-id="b423e-415">Cria um caminho e adiciona a matriz de linhas.</span><span class="sxs-lookup"><span data-stu-id="b423e-415">Creates a path and adds the array of lines.</span></span>  
  
-   <span data-ttu-id="b423e-416">Desenha o caminho para a tela.</span><span class="sxs-lookup"><span data-stu-id="b423e-416">Draws the path to screen.</span></span>  
  
 <span data-ttu-id="b423e-417">Observe que cada linha após o primeiro ponto usa o ponto anterior como o ponto de partida e o novo ponto como o ponto de extremidade.</span><span class="sxs-lookup"><span data-stu-id="b423e-417">Notice that each line after the first point uses the previous point as the starting point and the new point as the endpoint.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#8)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLines">
      <MemberSignature Language="C#" Value="public void AddLines (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLines(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLines (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLines(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddLines : System.Drawing.PointF[] -&gt; unit" Usage="graphicsPath.AddLines points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="b423e-418">Uma matriz de estruturas <see cref="T:System.Drawing.PointF" /> que representa os pontos que definem os segmentos de linha a serem adicionados.</span><span class="sxs-lookup"><span data-stu-id="b423e-418">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the line segments to add.</span></span></param>
        <summary><span data-ttu-id="b423e-419">Acrescenta uma série de segmentos de linha conectados ao final deste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-419">Appends a series of connected line segments to the end of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-420">Se houver linhas anteriores ou curvas na figura, uma linha é adicionada para conectar-se o ponto de extremidade do segmento anterior, o ponto de partida da linha.</span><span class="sxs-lookup"><span data-stu-id="b423e-420">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment the starting point of the line.</span></span> <span data-ttu-id="b423e-421">O `points` parâmetro especifica uma matriz de pontos de extremidade.</span><span class="sxs-lookup"><span data-stu-id="b423e-421">The `points` parameter specifies an array of endpoints.</span></span> <span data-ttu-id="b423e-422">Os dois primeiros especificam a primeira linha.</span><span class="sxs-lookup"><span data-stu-id="b423e-422">The first two specify the first line.</span></span> <span data-ttu-id="b423e-423">Cada ponto adicional que especifica o ponto de extremidade de um segmento de linha cujo ponto de partida é o ponto de extremidade da linha anterior.</span><span class="sxs-lookup"><span data-stu-id="b423e-423">Each additional point specifies the endpoint of a line segment whose starting point is the endpoint of the previous line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b423e-424">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddLines%28System.Drawing.Point%5B%5D%29>.</span><span class="sxs-lookup"><span data-stu-id="b423e-424">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddLines%28System.Drawing.Point%5B%5D%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPath">
      <MemberSignature Language="C#" Value="public void AddPath (System.Drawing.Drawing2D.GraphicsPath addingPath, bool connect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPath(class System.Drawing.Drawing2D.GraphicsPath addingPath, bool connect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPath (addingPath As GraphicsPath, connect As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPath(System::Drawing::Drawing2D::GraphicsPath ^ addingPath, bool connect);" />
      <MemberSignature Language="F#" Value="member this.AddPath : System.Drawing.Drawing2D.GraphicsPath * bool -&gt; unit" Usage="graphicsPath.AddPath (addingPath, connect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addingPath" Type="System.Drawing.Drawing2D.GraphicsPath" />
        <Parameter Name="connect" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="addingPath"><span data-ttu-id="b423e-425">O <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="b423e-425">The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> to add.</span></span></param>
        <param name="connect"><span data-ttu-id="b423e-426">Um valor booliano que especifica se a primeira figura no caminho adicionado faz parte da figura último nesse caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-426">A Boolean value that specifies whether the first figure in the added path is part of the last figure in this path.</span></span> <span data-ttu-id="b423e-427">Um valor de <see langword="true" /> que especifica (se possível) que a primeira figura no caminho adicionado faz parte da última figura nesse caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-427">A value of <see langword="true" /> specifies that (if possible) the first figure in the added path is part of the last figure in this path.</span></span> <span data-ttu-id="b423e-428">Um valor de <see langword="false" /> que especifica que a primeira figura no caminho adicionado é separada da última figura nesse caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-428">A value of <see langword="false" /> specifies that the first figure in the added path is separate from the last figure in this path.</span></span></param>
        <summary><span data-ttu-id="b423e-429">Acrescenta o <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> especificado a esse caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-429">Appends the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b423e-430">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, um <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="b423e-430">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="b423e-431">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="b423e-431">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b423e-432">Cria um de dois caminhos, um triângulo direito-lado-up e o outro um triângulo para baixo ao lado de cima.</span><span class="sxs-lookup"><span data-stu-id="b423e-432">Creates two paths one a right-side-up triangle and the other an up-side-down triangle.</span></span>  
  
-   <span data-ttu-id="b423e-433">Adiciona o caminho do segundo ao primeiro.</span><span class="sxs-lookup"><span data-stu-id="b423e-433">Adds the second path to the first.</span></span>  
  
-   <span data-ttu-id="b423e-434">Desenha o caminho resultante para a tela.</span><span class="sxs-lookup"><span data-stu-id="b423e-434">Draws the resultant path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#9)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#9)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddPie">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b423e-435">Adiciona a estrutura de tópicos de uma forma de pizza a esse caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-435">Adds the outline of a pie shape to this path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddPie">
      <MemberSignature Language="C#" Value="public void AddPie (System.Drawing.Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPie(valuetype System.Drawing.Rectangle rect, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Drawing.Rectangle,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPie (rect As Rectangle, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPie(System::Drawing::Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddPie : System.Drawing.Rectangle * single * single -&gt; unit" Usage="graphicsPath.AddPie (rect, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="b423e-436">Um <see cref="T:System.Drawing.Rectangle" /> que representa o retângulo delimitador que define a elipse com base na qual a pizza é desenhada.</span><span class="sxs-lookup"><span data-stu-id="b423e-436">A <see cref="T:System.Drawing.Rectangle" /> that represents the bounding rectangle that defines the ellipse from which the pie is drawn.</span></span></param>
        <param name="startAngle"><span data-ttu-id="b423e-437">O ângulo inicial da fatia da pizza, medido em graus no sentido horário do eixo X.</span><span class="sxs-lookup"><span data-stu-id="b423e-437">The starting angle for the pie section, measured in degrees clockwise from the x-axis.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="b423e-438">O ângulo entre <paramref name="startAngle" /> e o final da fatia da pizza, medido em graus no sentido horário de <paramref name="startAngle" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-438">The angle between <paramref name="startAngle" /> and the end of the pie section, measured in degrees clockwise from <paramref name="startAngle" />.</span></span></param>
        <summary><span data-ttu-id="b423e-439">Adiciona a estrutura de tópicos de uma forma de pizza a esse caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-439">Adds the outline of a pie shape to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-440">A forma de pizza é definida por uma estrutura de tópicos parcial de uma elipse e as duas linhas radiais que se cruzam os pontos de extremidade da estrutura de tópicos parcial.</span><span class="sxs-lookup"><span data-stu-id="b423e-440">The pie shape is defined by a partial outline of an ellipse and the two radial lines that intersect the endpoints of the partial outline.</span></span> <span data-ttu-id="b423e-441">A estrutura de tópicos parcial começa em `startAngle` (medido no sentido horário do eixo x) e termina no `startAngle`  +  `sweepAngle`.</span><span class="sxs-lookup"><span data-stu-id="b423e-441">The partial outline begins at `startAngle` (measured clockwise from the x-axis) and ends at `startAngle` + `sweepAngle`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b423e-442">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="b423e-442">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPie">
      <MemberSignature Language="C#" Value="public void AddPie (int x, int y, int width, int height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPie(int32 x, int32 y, int32 width, int32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPie (x As Integer, y As Integer, width As Integer, height As Integer, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPie(int x, int y, int width, int height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddPie : int * int * int * int * single * single -&gt; unit" Usage="graphicsPath.AddPie (x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="b423e-443">A coordenada X do canto superior esquerdo do retângulo delimitador que define a elipse com base na qual a pizza é desenhada.</span><span class="sxs-lookup"><span data-stu-id="b423e-443">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</span></span></param>
        <param name="y"><span data-ttu-id="b423e-444">A coordenada Y do canto superior esquerdo do retângulo delimitador que define a elipse com base na qual a pizza é desenhada.</span><span class="sxs-lookup"><span data-stu-id="b423e-444">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</span></span></param>
        <param name="width"><span data-ttu-id="b423e-445">A largura do retângulo delimitador que define a elipse com base na qual a pizza é desenhada.</span><span class="sxs-lookup"><span data-stu-id="b423e-445">The width of the bounding rectangle that defines the ellipse from which the pie is drawn.</span></span></param>
        <param name="height"><span data-ttu-id="b423e-446">A altura do retângulo delimitador que define a elipse com base na qual a pizza é desenhada.</span><span class="sxs-lookup"><span data-stu-id="b423e-446">The height of the bounding rectangle that defines the ellipse from which the pie is drawn.</span></span></param>
        <param name="startAngle"><span data-ttu-id="b423e-447">O ângulo inicial da fatia da pizza, medido em graus no sentido horário do eixo X.</span><span class="sxs-lookup"><span data-stu-id="b423e-447">The starting angle for the pie section, measured in degrees clockwise from the x-axis.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="b423e-448">O ângulo entre <paramref name="startAngle" /> e o final da fatia da pizza, medido em graus no sentido horário de <paramref name="startAngle" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-448">The angle between <paramref name="startAngle" /> and the end of the pie section, measured in degrees clockwise from <paramref name="startAngle" />.</span></span></param>
        <summary><span data-ttu-id="b423e-449">Adiciona a estrutura de tópicos de uma forma de pizza a esse caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-449">Adds the outline of a pie shape to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-450">A forma de pizza é definida por uma estrutura de tópicos parcial de uma elipse e as duas linhas radiais que se cruzam os pontos de extremidade da estrutura de tópicos parcial.</span><span class="sxs-lookup"><span data-stu-id="b423e-450">The pie shape is defined by a partial outline of an ellipse and the two radial lines that intersect the endpoints of the partial outline.</span></span> <span data-ttu-id="b423e-451">A estrutura de tópicos parcial começa em `startAngle` (medido no sentido horário do eixo x) e termina no `startAngle`  +  `sweepAngle`.</span><span class="sxs-lookup"><span data-stu-id="b423e-451">The partial outline begins at `startAngle` (measured clockwise from the x-axis) and ends at `startAngle` + `sweepAngle`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b423e-452">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, um <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="b423e-452">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="b423e-453">O código cria um caminho de gráficos, adiciona a forma de pizza e, em seguida, desenha o caminho para a tela.</span><span class="sxs-lookup"><span data-stu-id="b423e-453">The code creates a graphics path, adds the pie shape, and then draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#10)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#10)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPie">
      <MemberSignature Language="C#" Value="public void AddPie (float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPie(float32 x, float32 y, float32 width, float32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPie (x As Single, y As Single, width As Single, height As Single, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPie(float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddPie : single * single * single * single * single * single -&gt; unit" Usage="graphicsPath.AddPie (x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="b423e-454">A coordenada X do canto superior esquerdo do retângulo delimitador que define a elipse com base na qual a pizza é desenhada.</span><span class="sxs-lookup"><span data-stu-id="b423e-454">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</span></span></param>
        <param name="y"><span data-ttu-id="b423e-455">A coordenada Y do canto superior esquerdo do retângulo delimitador que define a elipse com base na qual a pizza é desenhada.</span><span class="sxs-lookup"><span data-stu-id="b423e-455">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</span></span></param>
        <param name="width"><span data-ttu-id="b423e-456">A largura do retângulo delimitador que define a elipse com base na qual a pizza é desenhada.</span><span class="sxs-lookup"><span data-stu-id="b423e-456">The width of the bounding rectangle that defines the ellipse from which the pie is drawn.</span></span></param>
        <param name="height"><span data-ttu-id="b423e-457">A altura do retângulo delimitador que define a elipse com base na qual a pizza é desenhada.</span><span class="sxs-lookup"><span data-stu-id="b423e-457">The height of the bounding rectangle that defines the ellipse from which the pie is drawn.</span></span></param>
        <param name="startAngle"><span data-ttu-id="b423e-458">O ângulo inicial da fatia da pizza, medido em graus no sentido horário do eixo X.</span><span class="sxs-lookup"><span data-stu-id="b423e-458">The starting angle for the pie section, measured in degrees clockwise from the x-axis.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="b423e-459">O ângulo entre <paramref name="startAngle" /> e o final da fatia da pizza, medido em graus no sentido horário de <paramref name="startAngle" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-459">The angle between <paramref name="startAngle" /> and the end of the pie section, measured in degrees clockwise from <paramref name="startAngle" />.</span></span></param>
        <summary><span data-ttu-id="b423e-460">Adiciona a estrutura de tópicos de uma forma de pizza a esse caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-460">Adds the outline of a pie shape to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-461">A forma de pizza é definida por uma estrutura de tópicos parcial de uma elipse e as duas linhas radiais que se cruzam os pontos de extremidade da estrutura de tópicos parcial.</span><span class="sxs-lookup"><span data-stu-id="b423e-461">The pie shape is defined by a partial outline of an ellipse and the two radial lines that intersect the endpoints of the partial outline.</span></span> <span data-ttu-id="b423e-462">A estrutura de tópicos parcial começa em `startAngle` (medido no sentido horário do eixo x) e termina no `startAngle`  +  `sweepAngle`.</span><span class="sxs-lookup"><span data-stu-id="b423e-462">The partial outline begins at `startAngle` (measured clockwise from the x-axis) and ends at `startAngle` + `sweepAngle`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b423e-463">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="b423e-463">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddPolygon">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b423e-464">Adiciona um polígono a esse caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-464">Adds a polygon to this path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddPolygon">
      <MemberSignature Language="C#" Value="public void AddPolygon (System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPolygon(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPolygon (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPolygon(cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddPolygon : System.Drawing.Point[] -&gt; unit" Usage="graphicsPath.AddPolygon points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="b423e-465">Uma matriz de estruturas <see cref="T:System.Drawing.Point" /> que define o polígono a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="b423e-465">An array of <see cref="T:System.Drawing.Point" /> structures that defines the polygon to add.</span></span></param>
        <summary><span data-ttu-id="b423e-466">Adiciona um polígono a esse caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-466">Adds a polygon to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-467">Os pontos no `points` matriz especificar os vértices de um polígono.</span><span class="sxs-lookup"><span data-stu-id="b423e-467">The points in the `points` array specify the vertices of a polygon.</span></span> <span data-ttu-id="b423e-468">Se o primeiro ponto na matriz não é o mesmo que o último ponto, esses dois pontos são conectados para fechar o polígono.</span><span class="sxs-lookup"><span data-stu-id="b423e-468">If the first point in the array is not the same as the last point, those two points are connected to close the polygon.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b423e-469">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, um <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="b423e-469">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="b423e-470">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="b423e-470">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b423e-471">Cria uma matriz de pontos que define um polígono.</span><span class="sxs-lookup"><span data-stu-id="b423e-471">Creates an array of points that defines a polygon.</span></span>  
  
-   <span data-ttu-id="b423e-472">Cria um caminho e adiciona o polígono no caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-472">Creates a path and adds the polygon to the path.</span></span>  
  
-   <span data-ttu-id="b423e-473">Desenha o caminho para a tela.</span><span class="sxs-lookup"><span data-stu-id="b423e-473">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#11](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#11)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#11)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPolygon">
      <MemberSignature Language="C#" Value="public void AddPolygon (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPolygon(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPolygon (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPolygon(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddPolygon : System.Drawing.PointF[] -&gt; unit" Usage="graphicsPath.AddPolygon points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="b423e-474">Uma matriz de estruturas <see cref="T:System.Drawing.PointF" /> que define o polígono a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="b423e-474">An array of <see cref="T:System.Drawing.PointF" /> structures that defines the polygon to add.</span></span></param>
        <summary><span data-ttu-id="b423e-475">Adiciona um polígono a esse caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-475">Adds a polygon to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-476">Os pontos no `points` matriz especificar os vértices de um polígono.</span><span class="sxs-lookup"><span data-stu-id="b423e-476">The points in the `points` array specify the vertices of a polygon.</span></span> <span data-ttu-id="b423e-477">Se o primeiro ponto na matriz não é o mesmo que o último ponto, esses dois pontos são conectados para fechar o polígono.</span><span class="sxs-lookup"><span data-stu-id="b423e-477">If the first point in the array is not the same as the last point, those two points are connected to close the polygon.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b423e-478">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddPolygon%28System.Drawing.Point%5B%5D%29>.</span><span class="sxs-lookup"><span data-stu-id="b423e-478">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddPolygon%28System.Drawing.Point%5B%5D%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRectangle">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b423e-479">Adiciona um retângulo a esse caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-479">Adds a rectangle to this path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRectangle">
      <MemberSignature Language="C#" Value="public void AddRectangle (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRectangle(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRectangle (rect As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRectangle(System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.AddRectangle : System.Drawing.Rectangle -&gt; unit" Usage="graphicsPath.AddRectangle rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="b423e-480">Um <see cref="T:System.Drawing.Rectangle" /> que representa o retângulo a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="b423e-480">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle to add.</span></span></param>
        <summary><span data-ttu-id="b423e-481">Adiciona um retângulo a esse caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-481">Adds a rectangle to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b423e-482">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, um <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="b423e-482">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="b423e-483">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="b423e-483">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b423e-484">Cria um caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-484">Creates a path.</span></span>  
  
-   <span data-ttu-id="b423e-485">Cria um retângulo e adiciona o retângulo para o caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-485">Creates a rectangle and adds the rectangle to the path.</span></span>  
  
-   <span data-ttu-id="b423e-486">Desenha o caminho para a tela.</span><span class="sxs-lookup"><span data-stu-id="b423e-486">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#12](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#12)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#12)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRectangle">
      <MemberSignature Language="C#" Value="public void AddRectangle (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRectangle(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRectangle (rect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRectangle(System::Drawing::RectangleF rect);" />
      <MemberSignature Language="F#" Value="member this.AddRectangle : System.Drawing.RectangleF -&gt; unit" Usage="graphicsPath.AddRectangle rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="b423e-487">Um <see cref="T:System.Drawing.RectangleF" /> que representa o retângulo a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="b423e-487">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle to add.</span></span></param>
        <summary><span data-ttu-id="b423e-488">Adiciona um retângulo a esse caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-488">Adds a rectangle to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b423e-489">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangle%28System.Drawing.Rectangle%29>.</span><span class="sxs-lookup"><span data-stu-id="b423e-489">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangle%28System.Drawing.Rectangle%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRectangles">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b423e-490">Adiciona uma série de retângulos a este caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-490">Adds a series of rectangles to this path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRectangles">
      <MemberSignature Language="C#" Value="public void AddRectangles (System.Drawing.Rectangle[] rects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRectangles(valuetype System.Drawing.Rectangle[] rects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRectangles (rects As Rectangle())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRectangles(cli::array &lt;System::Drawing::Rectangle&gt; ^ rects);" />
      <MemberSignature Language="F#" Value="member this.AddRectangles : System.Drawing.Rectangle[] -&gt; unit" Usage="graphicsPath.AddRectangles rects" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rects" Type="System.Drawing.Rectangle[]" />
      </Parameters>
      <Docs>
        <param name="rects"><span data-ttu-id="b423e-491">Uma matriz de estruturas <see cref="T:System.Drawing.Rectangle" /> que representa os retângulos a serem adicionados.</span><span class="sxs-lookup"><span data-stu-id="b423e-491">An array of <see cref="T:System.Drawing.Rectangle" /> structures that represents the rectangles to add.</span></span></param>
        <summary><span data-ttu-id="b423e-492">Adiciona uma série de retângulos a este caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-492">Adds a series of rectangles to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b423e-493">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, um <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="b423e-493">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="b423e-494">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="b423e-494">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b423e-495">Cria um caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-495">Creates a path.</span></span>  
  
-   <span data-ttu-id="b423e-496">Cria uma matriz de retângulos e adiciona os retângulos ao caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-496">Creates an array of rectangles and adds the rectangles to the path.</span></span>  
  
-   <span data-ttu-id="b423e-497">Desenha o caminho para a tela.</span><span class="sxs-lookup"><span data-stu-id="b423e-497">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#13](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#13)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#13](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#13)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#13](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRectangles">
      <MemberSignature Language="C#" Value="public void AddRectangles (System.Drawing.RectangleF[] rects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRectangles(valuetype System.Drawing.RectangleF[] rects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.RectangleF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRectangles (rects As RectangleF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRectangles(cli::array &lt;System::Drawing::RectangleF&gt; ^ rects);" />
      <MemberSignature Language="F#" Value="member this.AddRectangles : System.Drawing.RectangleF[] -&gt; unit" Usage="graphicsPath.AddRectangles rects" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rects" Type="System.Drawing.RectangleF[]" />
      </Parameters>
      <Docs>
        <param name="rects"><span data-ttu-id="b423e-498">Uma matriz de estruturas <see cref="T:System.Drawing.RectangleF" /> que representa os retângulos a serem adicionados.</span><span class="sxs-lookup"><span data-stu-id="b423e-498">An array of <see cref="T:System.Drawing.RectangleF" /> structures that represents the rectangles to add.</span></span></param>
        <summary><span data-ttu-id="b423e-499">Adiciona uma série de retângulos a este caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-499">Adds a series of rectangles to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b423e-500">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangles%28System.Drawing.Rectangle%5B%5D%29>.</span><span class="sxs-lookup"><span data-stu-id="b423e-500">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangles%28System.Drawing.Rectangle%5B%5D%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddString">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b423e-501">Adiciona uma cadeia de texto nesse caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-501">Adds a text string to this path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddString">
      <MemberSignature Language="C#" Value="public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.Point origin, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddString(string s, class System.Drawing.FontFamily family, int32 style, float32 emSize, valuetype System.Drawing.Point origin, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddString (s As String, family As FontFamily, style As Integer, emSize As Single, origin As Point, format As StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddString(System::String ^ s, System::Drawing::FontFamily ^ family, int style, float emSize, System::Drawing::Point origin, System::Drawing::StringFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.AddString : string * System.Drawing.FontFamily * int * single * System.Drawing.Point * System.Drawing.StringFormat -&gt; unit" Usage="graphicsPath.AddString (s, family, style, emSize, origin, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="origin" Type="System.Drawing.Point" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="b423e-502">O <see cref="T:System.String" /> a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="b423e-502">The <see cref="T:System.String" /> to add.</span></span></param>
        <param name="family"><span data-ttu-id="b423e-503">Uma <see cref="T:System.Drawing.FontFamily" /> que representa o nome da fonte com a qual o teste é desenhado.</span><span class="sxs-lookup"><span data-stu-id="b423e-503">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn.</span></span></param>
        <param name="style"><span data-ttu-id="b423e-504">Um enumeração <see cref="T:System.Drawing.FontStyle" /> que representa as informações de estilo sobre o texto (negrito, itálico e assim por diante).</span><span class="sxs-lookup"><span data-stu-id="b423e-504">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on).</span></span> <span data-ttu-id="b423e-505">Isso deve ser transmitido como um inteiro (consulte o código de exemplo mais à frente nesta seção).</span><span class="sxs-lookup"><span data-stu-id="b423e-505">This must be cast as an integer (see the example code later in this section).</span></span></param>
        <param name="emSize"><span data-ttu-id="b423e-506">A altura da caixa quadrada em que delimita o caractere.</span><span class="sxs-lookup"><span data-stu-id="b423e-506">The height of the em square box that bounds the character.</span></span></param>
        <param name="origin"><span data-ttu-id="b423e-507">Um <see cref="T:System.Drawing.Point" /> que representa o ponto em que o texto começa.</span><span class="sxs-lookup"><span data-stu-id="b423e-507">A <see cref="T:System.Drawing.Point" /> that represents the point where the text starts.</span></span></param>
        <param name="format"><span data-ttu-id="b423e-508">Um <see cref="T:System.Drawing.StringFormat" /> que especifica as informações de formatação de texto, como o espaçamento entre linhas e o alinhamento.</span><span class="sxs-lookup"><span data-stu-id="b423e-508">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment.</span></span></param>
        <summary><span data-ttu-id="b423e-509">Adiciona uma cadeia de texto nesse caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-509">Adds a text string to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b423e-510">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, um <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="b423e-510">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="b423e-511">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="b423e-511">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b423e-512">Cria um caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-512">Creates a path.</span></span>  
  
-   <span data-ttu-id="b423e-513">Define os argumentos de cadeia de caracteres e a fonte.</span><span class="sxs-lookup"><span data-stu-id="b423e-513">Sets up string and font arguments.</span></span>  
  
-   <span data-ttu-id="b423e-514">Adiciona a cadeia de caracteres para o caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-514">Adds the string to the path.</span></span>  
  
-   <span data-ttu-id="b423e-515">Desenha a cadeia de caracteres na tela.</span><span class="sxs-lookup"><span data-stu-id="b423e-515">Draws the string to the screen.</span></span>  
  
 <span data-ttu-id="b423e-516">Há duas coisas importantes a serem apontadas. Primeiro, observe que o `fontStyle` argumento é convertido como um número inteiro.</span><span class="sxs-lookup"><span data-stu-id="b423e-516">There are two important things to be pointed out. First, notice that the `fontStyle` argument is cast as an integer.</span></span> <span data-ttu-id="b423e-517">O <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%2A> método requer isso, portanto, se duas ou mais <xref:System.Drawing.FontStyle> membros podem ser combinados para criar o estilo da fonte desejada (neste caso, <xref:System.Drawing.FontStyle.Italic> e <xref:System.Drawing.FontStyle.Underline>).</span><span class="sxs-lookup"><span data-stu-id="b423e-517">The <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%2A> method requires this so that two or more <xref:System.Drawing.FontStyle> members can be combined to create the desired font style (in this case, <xref:System.Drawing.FontStyle.Italic> and <xref:System.Drawing.FontStyle.Underline>).</span></span> <span data-ttu-id="b423e-518">Em segundo lugar, observe que o <xref:System.Drawing.Graphics.FillPath%2A> método é usado em vez de <xref:System.Drawing.Graphics.DrawPath%2A> método.</span><span class="sxs-lookup"><span data-stu-id="b423e-518">Secondly, notice that the <xref:System.Drawing.Graphics.FillPath%2A> method is used rather than the <xref:System.Drawing.Graphics.DrawPath%2A> method.</span></span> <span data-ttu-id="b423e-519">Se <xref:System.Drawing.Graphics.FillPath%2A> é usado, texto sólido é renderizado, enquanto se <xref:System.Drawing.Graphics.DrawPath%2A> é usado, o texto será um estilo de estrutura de tópicos.</span><span class="sxs-lookup"><span data-stu-id="b423e-519">If <xref:System.Drawing.Graphics.FillPath%2A> is used, solid text is rendered, whereas if <xref:System.Drawing.Graphics.DrawPath%2A> is used, the text will be an outline style.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#14](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#14)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#14](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#14)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#14](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddString">
      <MemberSignature Language="C#" Value="public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.PointF origin, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddString(string s, class System.Drawing.FontFamily family, int32 style, float32 emSize, valuetype System.Drawing.PointF origin, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddString (s As String, family As FontFamily, style As Integer, emSize As Single, origin As PointF, format As StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddString(System::String ^ s, System::Drawing::FontFamily ^ family, int style, float emSize, System::Drawing::PointF origin, System::Drawing::StringFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.AddString : string * System.Drawing.FontFamily * int * single * System.Drawing.PointF * System.Drawing.StringFormat -&gt; unit" Usage="graphicsPath.AddString (s, family, style, emSize, origin, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="origin" Type="System.Drawing.PointF" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="b423e-520">O <see cref="T:System.String" /> a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="b423e-520">The <see cref="T:System.String" /> to add.</span></span></param>
        <param name="family"><span data-ttu-id="b423e-521">Uma <see cref="T:System.Drawing.FontFamily" /> que representa o nome da fonte com a qual o teste é desenhado.</span><span class="sxs-lookup"><span data-stu-id="b423e-521">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn.</span></span></param>
        <param name="style"><span data-ttu-id="b423e-522">Um enumeração <see cref="T:System.Drawing.FontStyle" /> que representa as informações de estilo sobre o texto (negrito, itálico e assim por diante).</span><span class="sxs-lookup"><span data-stu-id="b423e-522">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on).</span></span> <span data-ttu-id="b423e-523">Isso deve ser transmitido como um inteiro (consulte o código de exemplo mais à frente nesta seção).</span><span class="sxs-lookup"><span data-stu-id="b423e-523">This must be cast as an integer (see the example code later in this section).</span></span></param>
        <param name="emSize"><span data-ttu-id="b423e-524">A altura da caixa quadrada em que delimita o caractere.</span><span class="sxs-lookup"><span data-stu-id="b423e-524">The height of the em square box that bounds the character.</span></span></param>
        <param name="origin"><span data-ttu-id="b423e-525">Um <see cref="T:System.Drawing.PointF" /> que representa o ponto em que o texto começa.</span><span class="sxs-lookup"><span data-stu-id="b423e-525">A <see cref="T:System.Drawing.PointF" /> that represents the point where the text starts.</span></span></param>
        <param name="format"><span data-ttu-id="b423e-526">Um <see cref="T:System.Drawing.StringFormat" /> que especifica as informações de formatação de texto, como o espaçamento entre linhas e o alinhamento.</span><span class="sxs-lookup"><span data-stu-id="b423e-526">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment.</span></span></param>
        <summary><span data-ttu-id="b423e-527">Adiciona uma cadeia de texto nesse caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-527">Adds a text string to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b423e-528">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span><span class="sxs-lookup"><span data-stu-id="b423e-528">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddString">
      <MemberSignature Language="C#" Value="public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.Rectangle layoutRect, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddString(string s, class System.Drawing.FontFamily family, int32 style, float32 emSize, valuetype System.Drawing.Rectangle layoutRect, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddString (s As String, family As FontFamily, style As Integer, emSize As Single, layoutRect As Rectangle, format As StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddString(System::String ^ s, System::Drawing::FontFamily ^ family, int style, float emSize, System::Drawing::Rectangle layoutRect, System::Drawing::StringFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.AddString : string * System.Drawing.FontFamily * int * single * System.Drawing.Rectangle * System.Drawing.StringFormat -&gt; unit" Usage="graphicsPath.AddString (s, family, style, emSize, layoutRect, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="layoutRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="b423e-529">O <see cref="T:System.String" /> a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="b423e-529">The <see cref="T:System.String" /> to add.</span></span></param>
        <param name="family"><span data-ttu-id="b423e-530">Uma <see cref="T:System.Drawing.FontFamily" /> que representa o nome da fonte com a qual o teste é desenhado.</span><span class="sxs-lookup"><span data-stu-id="b423e-530">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn.</span></span></param>
        <param name="style"><span data-ttu-id="b423e-531">Um enumeração <see cref="T:System.Drawing.FontStyle" /> que representa as informações de estilo sobre o texto (negrito, itálico e assim por diante).</span><span class="sxs-lookup"><span data-stu-id="b423e-531">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on).</span></span> <span data-ttu-id="b423e-532">Isso deve ser transmitido como um inteiro (consulte o código de exemplo mais à frente nesta seção).</span><span class="sxs-lookup"><span data-stu-id="b423e-532">This must be cast as an integer (see the example code later in this section).</span></span></param>
        <param name="emSize"><span data-ttu-id="b423e-533">A altura da caixa quadrada em que delimita o caractere.</span><span class="sxs-lookup"><span data-stu-id="b423e-533">The height of the em square box that bounds the character.</span></span></param>
        <param name="layoutRect"><span data-ttu-id="b423e-534">Um <see cref="T:System.Drawing.Rectangle" /> que representa o retângulo que limita o texto.</span><span class="sxs-lookup"><span data-stu-id="b423e-534">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle that bounds the text.</span></span></param>
        <param name="format"><span data-ttu-id="b423e-535">Um <see cref="T:System.Drawing.StringFormat" /> que especifica as informações de formatação de texto, como o espaçamento entre linhas e o alinhamento.</span><span class="sxs-lookup"><span data-stu-id="b423e-535">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment.</span></span></param>
        <summary><span data-ttu-id="b423e-536">Adiciona uma cadeia de texto nesse caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-536">Adds a text string to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b423e-537">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span><span class="sxs-lookup"><span data-stu-id="b423e-537">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddString">
      <MemberSignature Language="C#" Value="public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.RectangleF layoutRect, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddString(string s, class System.Drawing.FontFamily family, int32 style, float32 emSize, valuetype System.Drawing.RectangleF layoutRect, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddString (s As String, family As FontFamily, style As Integer, emSize As Single, layoutRect As RectangleF, format As StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddString(System::String ^ s, System::Drawing::FontFamily ^ family, int style, float emSize, System::Drawing::RectangleF layoutRect, System::Drawing::StringFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.AddString : string * System.Drawing.FontFamily * int * single * System.Drawing.RectangleF * System.Drawing.StringFormat -&gt; unit" Usage="graphicsPath.AddString (s, family, style, emSize, layoutRect, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="layoutRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="b423e-538">O <see cref="T:System.String" /> a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="b423e-538">The <see cref="T:System.String" /> to add.</span></span></param>
        <param name="family"><span data-ttu-id="b423e-539">Uma <see cref="T:System.Drawing.FontFamily" /> que representa o nome da fonte com a qual o teste é desenhado.</span><span class="sxs-lookup"><span data-stu-id="b423e-539">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn.</span></span></param>
        <param name="style"><span data-ttu-id="b423e-540">Um enumeração <see cref="T:System.Drawing.FontStyle" /> que representa as informações de estilo sobre o texto (negrito, itálico e assim por diante).</span><span class="sxs-lookup"><span data-stu-id="b423e-540">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on).</span></span> <span data-ttu-id="b423e-541">Isso deve ser transmitido como um inteiro (consulte o código de exemplo mais à frente nesta seção).</span><span class="sxs-lookup"><span data-stu-id="b423e-541">This must be cast as an integer (see the example code later in this section).</span></span></param>
        <param name="emSize"><span data-ttu-id="b423e-542">A altura da caixa quadrada em que delimita o caractere.</span><span class="sxs-lookup"><span data-stu-id="b423e-542">The height of the em square box that bounds the character.</span></span></param>
        <param name="layoutRect"><span data-ttu-id="b423e-543">Um <see cref="T:System.Drawing.RectangleF" /> que representa o retângulo que limita o texto.</span><span class="sxs-lookup"><span data-stu-id="b423e-543">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that bounds the text.</span></span></param>
        <param name="format"><span data-ttu-id="b423e-544">Um <see cref="T:System.Drawing.StringFormat" /> que especifica as informações de formatação de texto, como o espaçamento entre linhas e o alinhamento.</span><span class="sxs-lookup"><span data-stu-id="b423e-544">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment.</span></span></param>
        <summary><span data-ttu-id="b423e-545">Adiciona uma cadeia de texto nesse caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-545">Adds a text string to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b423e-546">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span><span class="sxs-lookup"><span data-stu-id="b423e-546">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearMarkers">
      <MemberSignature Language="C#" Value="public void ClearMarkers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearMarkers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearMarkers ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearMarkers();" />
      <MemberSignature Language="F#" Value="member this.ClearMarkers : unit -&gt; unit" Usage="graphicsPath.ClearMarkers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b423e-547">Limpa todos os marcadores desse caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-547">Clears all markers from this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-548">Use o <xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A> método para criar um marcador no local atual em um <xref:System.Drawing.Drawing2D.GraphicsPath>.</span><span class="sxs-lookup"><span data-stu-id="b423e-548">Use the <xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A> method to create a marker at the current location in a <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span> <span data-ttu-id="b423e-549">Use o <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> método para iterar os marcadores existentes em um caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-549">Use the <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> method to iterate through the existing markers in a path.</span></span>  
  
 <span data-ttu-id="b423e-550">Marcadores são usados para separar grupos de subcaminhos.</span><span class="sxs-lookup"><span data-stu-id="b423e-550">Markers are used to separate groups of subpaths.</span></span> <span data-ttu-id="b423e-551">Um ou mais subcaminhos podem estar contidos entre dois marcadores.</span><span class="sxs-lookup"><span data-stu-id="b423e-551">One or more subpaths can be contained between two markers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b423e-552">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, um <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="b423e-552">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="b423e-553">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="b423e-553">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b423e-554">Cria um caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-554">Creates a path.</span></span>  
  
-   <span data-ttu-id="b423e-555">Adiciona vários objetos ao caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-555">Adds several objects to the path.</span></span>  
  
-   <span data-ttu-id="b423e-556">Adiciona os marcadores para o caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-556">Adds markers to the path.</span></span>  
  
-   <span data-ttu-id="b423e-557">Limpa todos os marcadores do caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-557">Clears all markers from the path.</span></span>  
  
-   <span data-ttu-id="b423e-558">Desenha o caminho para a tela.</span><span class="sxs-lookup"><span data-stu-id="b423e-558">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#15](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#15)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#15)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="graphicsPath.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b423e-559">Cria uma cópia exata desse caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-559">Creates an exact copy of this path.</span></span></summary>
        <returns><span data-ttu-id="b423e-560">O <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> que esse método cria, convertido como um objeto.</span><span class="sxs-lookup"><span data-stu-id="b423e-560">The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> this method creates, cast as an object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b423e-561">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, um <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="b423e-561">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="b423e-562">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="b423e-562">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b423e-563">Cria um caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-563">Creates a path.</span></span>  
  
-   <span data-ttu-id="b423e-564">Adiciona várias figuras ao caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-564">Adds several figures to the path.</span></span>  
  
-   <span data-ttu-id="b423e-565">Desenha o caminho para a tela.</span><span class="sxs-lookup"><span data-stu-id="b423e-565">Draws the path to the screen.</span></span>  
  
-   <span data-ttu-id="b423e-566">Clona uma cópia desse caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-566">Clones a copy of that path.</span></span>  
  
-   <span data-ttu-id="b423e-567">Desenha o novo caminho para a tela.</span><span class="sxs-lookup"><span data-stu-id="b423e-567">Draws the new path to the screen.</span></span>  
  
 <span data-ttu-id="b423e-568">Observe que a chamada a <xref:System.Drawing.Drawing2D.GraphicsPath.Clone%2A> método deve ser convertido como um <xref:System.Drawing.Drawing2D.GraphicsPath>.</span><span class="sxs-lookup"><span data-stu-id="b423e-568">Notice that the call the <xref:System.Drawing.Drawing2D.GraphicsPath.Clone%2A> method must be cast as a <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#16](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#16)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#16](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#16)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#16](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseAllFigures">
      <MemberSignature Language="C#" Value="public void CloseAllFigures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CloseAllFigures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures" />
      <MemberSignature Language="VB.NET" Value="Public Sub CloseAllFigures ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseAllFigures();" />
      <MemberSignature Language="F#" Value="member this.CloseAllFigures : unit -&gt; unit" Usage="graphicsPath.CloseAllFigures " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b423e-569">Fecha todos os valores nesse caminho e inicia uma nova figura.</span><span class="sxs-lookup"><span data-stu-id="b423e-569">Closes all open figures in this path and starts a new figure.</span></span> <span data-ttu-id="b423e-570">Ele fecha cada figura aberta conectando uma linha de seu ponto de extremidade a seu ponto inicial.</span><span class="sxs-lookup"><span data-stu-id="b423e-570">It closes each open figure by connecting a line from its endpoint to its starting point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b423e-571">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, um <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="b423e-571">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="b423e-572">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="b423e-572">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b423e-573">Cria um caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-573">Creates a path.</span></span>  
  
-   <span data-ttu-id="b423e-574">Adiciona várias figuras abertas para o caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-574">Adds several open figures to the path.</span></span>  
  
-   <span data-ttu-id="b423e-575">Fecha todos os números no caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-575">Closes all figures in the path.</span></span>  
  
-   <span data-ttu-id="b423e-576">Desenha o caminho para a tela.</span><span class="sxs-lookup"><span data-stu-id="b423e-576">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#17](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#17)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#17](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#17)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#17](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseFigure">
      <MemberSignature Language="C#" Value="public void CloseFigure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CloseFigure() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.CloseFigure" />
      <MemberSignature Language="VB.NET" Value="Public Sub CloseFigure ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseFigure();" />
      <MemberSignature Language="F#" Value="member this.CloseFigure : unit -&gt; unit" Usage="graphicsPath.CloseFigure " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b423e-577">Fecha a figura atual e inicia uma nova figura.</span><span class="sxs-lookup"><span data-stu-id="b423e-577">Closes the current figure and starts a new figure.</span></span> <span data-ttu-id="b423e-578">Se a figura atual contiver uma sequência de linhas e curvas conectadas, o método fechará o loop conectando uma linha do ponto de extremidade ao ponto de partida.</span><span class="sxs-lookup"><span data-stu-id="b423e-578">If the current figure contains a sequence of connected lines and curves, the method closes the loop by connecting a line from the endpoint to the starting point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b423e-579">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, um <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="b423e-579">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="b423e-580">O código cria um triângulo criando um novo caminho, iniciar uma figura, adicionando linhas de interseção de duas a figura, e, em seguida, fechar a figura para formar um triângulo.</span><span class="sxs-lookup"><span data-stu-id="b423e-580">The code creates a triangle by creating a new path, starting a figure, adding two intersecting lines to the figure, and then closing the figure to form a triangle.</span></span> <span data-ttu-id="b423e-581">O caminho, em seguida, é desenhado na tela.</span><span class="sxs-lookup"><span data-stu-id="b423e-581">The path is then drawn to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#18](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#18)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#18](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#18)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#18](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="graphicsPath.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b423e-582">Libera todos os recursos usados por este <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-582">Releases all resources used by this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-583">Chamando <xref:System.Drawing.Drawing2D.GraphicsPath.Dispose%2A> permite que os recursos usados por este <xref:System.Drawing.Drawing2D.GraphicsPath> sejam realocados para outras finalidades.</span><span class="sxs-lookup"><span data-stu-id="b423e-583">Calling <xref:System.Drawing.Drawing2D.GraphicsPath.Dispose%2A> allows the resources used by this <xref:System.Drawing.Drawing2D.GraphicsPath> to be reallocated for other purposes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillMode">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.FillMode FillMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.FillMode FillMode" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.FillMode" />
      <MemberSignature Language="VB.NET" Value="Public Property FillMode As FillMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::FillMode FillMode { System::Drawing::Drawing2D::FillMode get(); void set(System::Drawing::Drawing2D::FillMode value); };" />
      <MemberSignature Language="F#" Value="member this.FillMode : System.Drawing.Drawing2D.FillMode with get, set" Usage="System.Drawing.Drawing2D.GraphicsPath.FillMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.FillMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b423e-584">Obtém ou define uma enumeração <see cref="T:System.Drawing.Drawing2D.FillMode" /> que determina como os interiores das formas neste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> são preenchidos.</span><span class="sxs-lookup"><span data-stu-id="b423e-584">Gets or sets a <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.</span></span></summary>
        <value><span data-ttu-id="b423e-585">Uma enumeração <see cref="T:System.Drawing.Drawing2D.FillMode" /> que especifica como os interiores das formas neste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> são preenchidos.</span><span class="sxs-lookup"><span data-stu-id="b423e-585">A <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that specifies how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~GraphicsPath ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!GraphicsPath ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="graphicsPath.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b423e-586">Permite que um objeto tente liberar recursos e executar outras operações de limpeza antes de ser recuperado pela coleta de lixo.</span><span class="sxs-lookup"><span data-stu-id="b423e-586">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Flatten">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b423e-587">Converte cada curva neste caminho em uma sequência de segmentos de linha conectados.</span><span class="sxs-lookup"><span data-stu-id="b423e-587">Converts each curve in this path into a sequence of connected line segments.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Flatten">
      <MemberSignature Language="C#" Value="public void Flatten ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flatten() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Flatten" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flatten ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flatten();" />
      <MemberSignature Language="F#" Value="member this.Flatten : unit -&gt; unit" Usage="graphicsPath.Flatten " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b423e-588">Converte cada curva neste caminho em uma sequência de segmentos de linha conectados.</span><span class="sxs-lookup"><span data-stu-id="b423e-588">Converts each curve in this path into a sequence of connected line segments.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b423e-589">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="b423e-589">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flatten">
      <MemberSignature Language="C#" Value="public void Flatten (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flatten(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flatten(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.Flatten : System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="graphicsPath.Flatten matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="b423e-590">Um <see cref="T:System.Drawing.Drawing2D.Matrix" /> pelo qual transformar esse <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> antes de mesclar.</span><span class="sxs-lookup"><span data-stu-id="b423e-590">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which to transform this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> before flattening.</span></span></param>
        <summary><span data-ttu-id="b423e-591">Aplica a transformação especificada e então converte cada curva neste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> em uma sequência de segmentos de linha conectados.</span><span class="sxs-lookup"><span data-stu-id="b423e-591">Applies the specified transform and then converts each curve in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> into a sequence of connected line segments.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b423e-592">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="b423e-592">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flatten">
      <MemberSignature Language="C#" Value="public void Flatten (System.Drawing.Drawing2D.Matrix matrix, float flatness);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flatten(class System.Drawing.Drawing2D.Matrix matrix, float32 flatness) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flatten(System::Drawing::Drawing2D::Matrix ^ matrix, float flatness);" />
      <MemberSignature Language="F#" Value="member this.Flatten : System.Drawing.Drawing2D.Matrix * single -&gt; unit" Usage="graphicsPath.Flatten (matrix, flatness)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="flatness" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="b423e-593">Um <see cref="T:System.Drawing.Drawing2D.Matrix" /> pelo qual transformar esse <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> antes de mesclar.</span><span class="sxs-lookup"><span data-stu-id="b423e-593">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which to transform this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> before flattening.</span></span></param>
        <param name="flatness"><span data-ttu-id="b423e-594">Especifica o erro máximo permitido entre a curva e sua aproximação plana.</span><span class="sxs-lookup"><span data-stu-id="b423e-594">Specifies the maximum permitted error between the curve and its flattened approximation.</span></span> <span data-ttu-id="b423e-595">Um valor de 0,25 é o padrão.</span><span class="sxs-lookup"><span data-stu-id="b423e-595">A value of 0.25 is the default.</span></span> <span data-ttu-id="b423e-596">Reduzir o valor de planeza aumentará o número de segmentos de linha na aproximação.</span><span class="sxs-lookup"><span data-stu-id="b423e-596">Reducing the flatness value will increase the number of line segments in the approximation.</span></span></param>
        <summary><span data-ttu-id="b423e-597">Converte cada curva neste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> em uma sequência de segmentos de linha conectados.</span><span class="sxs-lookup"><span data-stu-id="b423e-597">Converts each curve in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> into a sequence of connected line segments.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b423e-598">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, um <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="b423e-598">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="b423e-599">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="b423e-599">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b423e-600">Cria um caminho de gráficos e uma matriz de translação.</span><span class="sxs-lookup"><span data-stu-id="b423e-600">Creates a graphics path and a translation matrix.</span></span>  
  
-   <span data-ttu-id="b423e-601">Adiciona uma curva para o caminho usando quatro pontos.</span><span class="sxs-lookup"><span data-stu-id="b423e-601">Adds a curve to the path using four points.</span></span>  
  
-   <span data-ttu-id="b423e-602">Desenha o caminho (curva) para a tela, usando uma caneta preta.</span><span class="sxs-lookup"><span data-stu-id="b423e-602">Draws the path (curve) to the screen, using a black pen.</span></span>  
  
-   <span data-ttu-id="b423e-603">Desloca a curva para baixo de 10 pixels e nivela a ele.</span><span class="sxs-lookup"><span data-stu-id="b423e-603">Shifts the curve down 10 pixels and flattens it.</span></span>  
  
-   <span data-ttu-id="b423e-604">Desenha a curva na tela usando uma caneta de vermelha.</span><span class="sxs-lookup"><span data-stu-id="b423e-604">Draws the curve to the screen using, a red pen.</span></span>  
  
 <span data-ttu-id="b423e-605">Observe que a curva vermelha tem nivelados linhas que conectam os pontos.</span><span class="sxs-lookup"><span data-stu-id="b423e-605">Notice that the red curve has flattened lines connecting the points.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#19](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#19)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#19](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#19)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#19](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBounds">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b423e-606">Retorna um retângulo que circunda esse <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-606">Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF GetBounds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.RectangleF GetBounds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBounds () As RectangleF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::RectangleF GetBounds();" />
      <MemberSignature Language="F#" Value="member this.GetBounds : unit -&gt; System.Drawing.RectangleF" Usage="graphicsPath.GetBounds " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b423e-607">Retorna um retângulo que circunda esse <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-607">Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <returns><span data-ttu-id="b423e-608">Um <see cref="T:System.Drawing.RectangleF" /> que representa um retângulo que circunda esse <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-608">A <see cref="T:System.Drawing.RectangleF" /> that represents a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-609">O tamanho do retângulo delimitador retornado é influenciado pelo tipo de delimitada, largura da caneta e limite de Malhete de caneta e, portanto, produz um "ajuste flexível" para o caminho associado.</span><span class="sxs-lookup"><span data-stu-id="b423e-609">The size of the returned bounding rectangle is influenced by the type of end caps, pen width, and pen miter limit, and therefore produces a "loose fit" to the bounded path.</span></span> <span data-ttu-id="b423e-610">A fórmula aproximada é: o retângulo delimitador inicial seja inflacionado pelos largura da caneta e esse resultado é multiplicado pelo limite de Malhete, além de alguma margem adicional para permitir a delimitada.</span><span class="sxs-lookup"><span data-stu-id="b423e-610">The approximate formula is: the initial bounding rectangle is inflated by pen width, and this result is multiplied by the miter limit, plus some additional margin to allow for end caps.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b423e-611">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, um <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="b423e-611">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="b423e-612">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="b423e-612">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b423e-613">Cria um caminho de gráficos.</span><span class="sxs-lookup"><span data-stu-id="b423e-613">Creates a graphics path.</span></span>  
  
-   <span data-ttu-id="b423e-614">Adiciona uma elipse (círculo) a ele e desenha na tela.</span><span class="sxs-lookup"><span data-stu-id="b423e-614">Adds an ellipse (circle) to it and draws it to the screen.</span></span>  
  
-   <span data-ttu-id="b423e-615">Recupera o retângulo delimitador para o círculo com uma chamada para <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds%2A> e desenha o retângulo para a tela.</span><span class="sxs-lookup"><span data-stu-id="b423e-615">Retrieves the bounding rectangle for the circle with a call to <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds%2A> and draws the rectangle to the screen.</span></span>  
  
-   <span data-ttu-id="b423e-616">Cria um segundo caminho de gráficos.</span><span class="sxs-lookup"><span data-stu-id="b423e-616">Creates a second graphics path.</span></span>  
  
-   <span data-ttu-id="b423e-617">Adiciona um círculo e amplia o caminho para uma largura de 10.</span><span class="sxs-lookup"><span data-stu-id="b423e-617">Adds a circle and widens the path to a width of 10.</span></span>  
  
-   <span data-ttu-id="b423e-618">Desenha o caminho para a tela.</span><span class="sxs-lookup"><span data-stu-id="b423e-618">Draws the path to the screen.</span></span>  
  
-   <span data-ttu-id="b423e-619">Recupera o retângulo delimitador para o círculo de segundo.</span><span class="sxs-lookup"><span data-stu-id="b423e-619">Retrieves the bounding rectangle for the second circle.</span></span>  
  
-   <span data-ttu-id="b423e-620">Desenha o retângulo delimitador para a tela.</span><span class="sxs-lookup"><span data-stu-id="b423e-620">Draws the bounding rectangle to the screen.</span></span>  
  
-   <span data-ttu-id="b423e-621">Exibe o tamanho do retângulo em uma caixa de diálogo.</span><span class="sxs-lookup"><span data-stu-id="b423e-621">Displays the rectangle size in a dialog box.</span></span>  
  
 <span data-ttu-id="b423e-622">Observe que o retângulo delimitador à direita é maior (a conta para a largura extra da linha).</span><span class="sxs-lookup"><span data-stu-id="b423e-622">Notice that the bounding rectangle on the right is larger (to account for the extra width of the line).</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#20](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#20)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#20)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF GetBounds (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.RectangleF GetBounds(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::RectangleF GetBounds(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.GetBounds : System.Drawing.Drawing2D.Matrix -&gt; System.Drawing.RectangleF" Usage="graphicsPath.GetBounds matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="b423e-623">O <see cref="T:System.Drawing.Drawing2D.Matrix" /> que especifica uma transformação a ser aplicada a esse caminho antes do retângulo delimitador ser calculado.</span><span class="sxs-lookup"><span data-stu-id="b423e-623">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transformation to be applied to this path before the bounding rectangle is calculated.</span></span> <span data-ttu-id="b423e-624">Esse caminho não é transformado permanentemente; a transformação é usada somente durante o processo de cálculo do retângulo delimitador.</span><span class="sxs-lookup"><span data-stu-id="b423e-624">This path is not permanently transformed; the transformation is used only during the process of calculating the bounding rectangle.</span></span></param>
        <summary><span data-ttu-id="b423e-625">Retorna um retângulo que delimita este <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> quando este caminho é transformado pelo <see cref="T:System.Drawing.Drawing2D.Matrix" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="b423e-625">Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when this path is transformed by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
        <returns><span data-ttu-id="b423e-626">Um <see cref="T:System.Drawing.RectangleF" /> que representa um retângulo que circunda esse <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-626">A <see cref="T:System.Drawing.RectangleF" /> that represents a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-627">O tamanho do retângulo delimitador retornado é influenciado pelo tipo de delimitada, largura da caneta e limite de Malhete de caneta e, portanto, produz um "ajuste flexível" para o caminho associado.</span><span class="sxs-lookup"><span data-stu-id="b423e-627">The size of the returned bounding rectangle is influenced by the type of end caps, pen width, and pen miter limit, and therefore produces a "loose fit" to the bounded path.</span></span> <span data-ttu-id="b423e-628">A fórmula aproximada é: o retângulo delimitador inicial seja inflacionado pelos largura da caneta e esse resultado é multiplicado pelo limite de Malhete, além de alguma margem adicional para permitir a delimitada.</span><span class="sxs-lookup"><span data-stu-id="b423e-628">The approximate formula is: the initial bounding rectangle is inflated by pen width, and this result is multiplied by the miter limit, plus some additional margin to allow for end caps.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b423e-629">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds>.</span><span class="sxs-lookup"><span data-stu-id="b423e-629">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF GetBounds (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.RectangleF GetBounds(class System.Drawing.Drawing2D.Matrix matrix, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::RectangleF GetBounds(System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.GetBounds : System.Drawing.Drawing2D.Matrix * System.Drawing.Pen -&gt; System.Drawing.RectangleF" Usage="graphicsPath.GetBounds (matrix, pen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="b423e-630">O <see cref="T:System.Drawing.Drawing2D.Matrix" /> que especifica uma transformação a ser aplicada a esse caminho antes do retângulo delimitador ser calculado.</span><span class="sxs-lookup"><span data-stu-id="b423e-630">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transformation to be applied to this path before the bounding rectangle is calculated.</span></span> <span data-ttu-id="b423e-631">Esse caminho não é transformado permanentemente; a transformação é usada somente durante o processo de cálculo do retângulo delimitador.</span><span class="sxs-lookup"><span data-stu-id="b423e-631">This path is not permanently transformed; the transformation is used only during the process of calculating the bounding rectangle.</span></span></param>
        <param name="pen"><span data-ttu-id="b423e-632">A <see cref="T:System.Drawing.Pen" /> com a qual desenhar o <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-632">The <see cref="T:System.Drawing.Pen" /> with which to draw the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></param>
        <summary><span data-ttu-id="b423e-633">Retorna um retângulo que delimita este <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> quando o caminho atual é transformado pelo <see cref="T:System.Drawing.Drawing2D.Matrix" /> especificado e desenhado com a <see cref="T:System.Drawing.Pen" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="b423e-633">Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when the current path is transformed by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> and drawn with the specified <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <returns><span data-ttu-id="b423e-634">Um <see cref="T:System.Drawing.RectangleF" /> que representa um retângulo que circunda esse <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-634">A <see cref="T:System.Drawing.RectangleF" /> that represents a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-635">O tamanho do retângulo delimitador retornado é influenciado pelo tipo de delimitada, largura da caneta e limite de Malhete de caneta e, portanto, produz um "ajuste flexível" para o caminho associado.</span><span class="sxs-lookup"><span data-stu-id="b423e-635">The size of the returned bounding rectangle is influenced by the type of end caps, pen width, and pen miter limit, and therefore produces a "loose fit" to the bounded path.</span></span> <span data-ttu-id="b423e-636">A fórmula aproximada é: o retângulo delimitador inicial seja inflacionado pelos largura da caneta e esse resultado é multiplicado pelo limite de Malhete, além de alguma margem adicional para permitir a delimitada.</span><span class="sxs-lookup"><span data-stu-id="b423e-636">The approximate formula is: the initial bounding rectangle is inflated by pen width, and this result is multiplied by the miter limit, plus some additional margin to allow for end caps.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b423e-637">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds>.</span><span class="sxs-lookup"><span data-stu-id="b423e-637">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLastPoint">
      <MemberSignature Language="C#" Value="public System.Drawing.PointF GetLastPoint ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.PointF GetLastPoint() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.GetLastPoint" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLastPoint () As PointF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::PointF GetLastPoint();" />
      <MemberSignature Language="F#" Value="member this.GetLastPoint : unit -&gt; System.Drawing.PointF" Usage="graphicsPath.GetLastPoint " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.PointF</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b423e-638">Obtém o último ponto na matriz <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> deste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-638">Gets the last point in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> array of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <returns><span data-ttu-id="b423e-639">Um <see cref="T:System.Drawing.PointF" /> que representa o último ponto neste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-639">A <see cref="T:System.Drawing.PointF" /> that represents the last point in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b423e-640">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, um <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="b423e-640">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="b423e-641">O código cria um caminho, adiciona uma linha para o caminho e, em seguida, obtém o último ponto no caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-641">The code creates a path, adds a line to the path, and then gets the last point in the path.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#21](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#21)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#21](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#21)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#21](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsOutlineVisible">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b423e-642">Indica se o ponto especificado está contido dentro de (sob) o contorno deste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> quando desenhado com a <see cref="T:System.Drawing.Pen" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="b423e-642">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (System.Drawing.Point point, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(valuetype System.Drawing.Point point, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(System::Drawing::Point point, System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : System.Drawing.Point * System.Drawing.Pen -&gt; bool" Usage="graphicsPath.IsOutlineVisible (point, pen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="b423e-643">Um <see cref="T:System.Drawing.Point" /> que especifica o local a testar.</span><span class="sxs-lookup"><span data-stu-id="b423e-643">A <see cref="T:System.Drawing.Point" /> that specifies the location to test.</span></span></param>
        <param name="pen"><span data-ttu-id="b423e-644">O <see cref="T:System.Drawing.Pen" /> a ser testado.</span><span class="sxs-lookup"><span data-stu-id="b423e-644">The <see cref="T:System.Drawing.Pen" /> to test.</span></span></param>
        <summary><span data-ttu-id="b423e-645">Indica se o ponto especificado está contido dentro de (sob) o contorno deste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> quando desenhado com a <see cref="T:System.Drawing.Pen" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="b423e-645">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <returns><span data-ttu-id="b423e-646">Este método retorna <see langword="true" /> se o ponto especificado está contido no contorno deste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> quando desenhado com a <see cref="T:System.Drawing.Pen" /> especificada; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-646">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-647">Este método testa para ver se a estrutura de tópicos de um determinado caminho será renderizada visível no ponto especificado.</span><span class="sxs-lookup"><span data-stu-id="b423e-647">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b423e-648">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="b423e-648">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (System.Drawing.PointF point, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(valuetype System.Drawing.PointF point, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(System::Drawing::PointF point, System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : System.Drawing.PointF * System.Drawing.Pen -&gt; bool" Usage="graphicsPath.IsOutlineVisible (point, pen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.PointF" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="b423e-649">Um <see cref="T:System.Drawing.PointF" /> que especifica o local a testar.</span><span class="sxs-lookup"><span data-stu-id="b423e-649">A <see cref="T:System.Drawing.PointF" /> that specifies the location to test.</span></span></param>
        <param name="pen"><span data-ttu-id="b423e-650">O <see cref="T:System.Drawing.Pen" /> a ser testado.</span><span class="sxs-lookup"><span data-stu-id="b423e-650">The <see cref="T:System.Drawing.Pen" /> to test.</span></span></param>
        <summary><span data-ttu-id="b423e-651">Indica se o ponto especificado está contido dentro de (sob) o contorno deste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> quando desenhado com a <see cref="T:System.Drawing.Pen" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="b423e-651">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <returns><span data-ttu-id="b423e-652">Este método retorna <see langword="true" /> se o ponto especificado está contido no contorno deste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> quando desenhado com a <see cref="T:System.Drawing.Pen" /> especificada; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-652">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-653">Este método testa para ver se a estrutura de tópicos de um determinado caminho será renderizada visível no ponto especificado.</span><span class="sxs-lookup"><span data-stu-id="b423e-653">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b423e-654">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="b423e-654">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (System.Drawing.Point pt, System.Drawing.Pen pen, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(valuetype System.Drawing.Point pt, class System.Drawing.Pen pen, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(System::Drawing::Point pt, System::Drawing::Pen ^ pen, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : System.Drawing.Point * System.Drawing.Pen * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsOutlineVisible (pt, pen, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="pt"><span data-ttu-id="b423e-655">Um <see cref="T:System.Drawing.Point" /> que especifica o local a testar.</span><span class="sxs-lookup"><span data-stu-id="b423e-655">A <see cref="T:System.Drawing.Point" /> that specifies the location to test.</span></span></param>
        <param name="pen"><span data-ttu-id="b423e-656">O <see cref="T:System.Drawing.Pen" /> a ser testado.</span><span class="sxs-lookup"><span data-stu-id="b423e-656">The <see cref="T:System.Drawing.Pen" /> to test.</span></span></param>
        <param name="graphics"><span data-ttu-id="b423e-657">O <see cref="T:System.Drawing.Graphics" /> do qual a visibilidade será testada.</span><span class="sxs-lookup"><span data-stu-id="b423e-657">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span></span></param>
        <summary><span data-ttu-id="b423e-658">Indica se o ponto especificado está contido dentro de (sob) o contorno deste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> quando desenhado com a <see cref="T:System.Drawing.Pen" /> especificada e usando o <see cref="T:System.Drawing.Graphics" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="b423e-658">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="b423e-659">Este método retorna <see langword="true" /> se o ponto especificado está contido no contorno deste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> quando desenhado com a <see cref="T:System.Drawing.Pen" /> especificada; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-659">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-660">Este método testa para ver se a estrutura de tópicos de um determinado caminho será renderizada visível no ponto especificado.</span><span class="sxs-lookup"><span data-stu-id="b423e-660">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span> <span data-ttu-id="b423e-661">As coordenadas do ponto a ser testado são fornecidas nas coordenadas de mundo.</span><span class="sxs-lookup"><span data-stu-id="b423e-661">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="b423e-662">A matriz de transformação de `graphics` temporariamente é aplicada antes de testar quanto à visibilidade.</span><span class="sxs-lookup"><span data-stu-id="b423e-662">The transform matrix of `graphics` is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b423e-663">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="b423e-663">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (System.Drawing.PointF pt, System.Drawing.Pen pen, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(valuetype System.Drawing.PointF pt, class System.Drawing.Pen pen, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(System::Drawing::PointF pt, System::Drawing::Pen ^ pen, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : System.Drawing.PointF * System.Drawing.Pen * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsOutlineVisible (pt, pen, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.PointF" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="pt"><span data-ttu-id="b423e-664">Um <see cref="T:System.Drawing.PointF" /> que especifica o local a testar.</span><span class="sxs-lookup"><span data-stu-id="b423e-664">A <see cref="T:System.Drawing.PointF" /> that specifies the location to test.</span></span></param>
        <param name="pen"><span data-ttu-id="b423e-665">O <see cref="T:System.Drawing.Pen" /> a ser testado.</span><span class="sxs-lookup"><span data-stu-id="b423e-665">The <see cref="T:System.Drawing.Pen" /> to test.</span></span></param>
        <param name="graphics"><span data-ttu-id="b423e-666">O <see cref="T:System.Drawing.Graphics" /> do qual a visibilidade será testada.</span><span class="sxs-lookup"><span data-stu-id="b423e-666">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span></span></param>
        <summary><span data-ttu-id="b423e-667">Indica se o ponto especificado está contido dentro de (sob) o contorno deste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> quando desenhado com a <see cref="T:System.Drawing.Pen" /> especificada e usando o <see cref="T:System.Drawing.Graphics" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="b423e-667">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="b423e-668">Este método retorna <see langword="true" /> se o ponto especificado está contido em (sob) o contorno deste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> quando desenhado com a <see cref="T:System.Drawing.Pen" /> especificada; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-668">This method returns <see langword="true" /> if the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-669">Este método testa para ver se a estrutura de tópicos de um determinado caminho será renderizada visível no ponto especificado.</span><span class="sxs-lookup"><span data-stu-id="b423e-669">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span> <span data-ttu-id="b423e-670">As coordenadas do ponto a ser testado são fornecidas nas coordenadas de mundo.</span><span class="sxs-lookup"><span data-stu-id="b423e-670">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="b423e-671">A matriz de transformação de `graphics` temporariamente é aplicada antes de testar quanto à visibilidade.</span><span class="sxs-lookup"><span data-stu-id="b423e-671">The transform matrix of `graphics` is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b423e-672">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="b423e-672">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (int x, int y, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(int32 x, int32 y, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(int x, int y, System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : int * int * System.Drawing.Pen -&gt; bool" Usage="graphicsPath.IsOutlineVisible (x, y, pen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="b423e-673">A coordenada X do ponto a ser testado.</span><span class="sxs-lookup"><span data-stu-id="b423e-673">The x-coordinate of the point to test.</span></span></param>
        <param name="y"><span data-ttu-id="b423e-674">A coordenada Y do ponto a ser testado.</span><span class="sxs-lookup"><span data-stu-id="b423e-674">The y-coordinate of the point to test.</span></span></param>
        <param name="pen"><span data-ttu-id="b423e-675">O <see cref="T:System.Drawing.Pen" /> a ser testado.</span><span class="sxs-lookup"><span data-stu-id="b423e-675">The <see cref="T:System.Drawing.Pen" /> to test.</span></span></param>
        <summary><span data-ttu-id="b423e-676">Indica se o ponto especificado está contido dentro de (sob) o contorno deste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> quando desenhado com a <see cref="T:System.Drawing.Pen" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="b423e-676">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <returns><span data-ttu-id="b423e-677">Este método retorna <see langword="true" /> se o ponto especificado está contido no contorno deste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> quando desenhado com a <see cref="T:System.Drawing.Pen" /> especificada; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-677">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-678">Este método testa para ver se a estrutura de tópicos de um determinado caminho será renderizada visível no ponto especificado.</span><span class="sxs-lookup"><span data-stu-id="b423e-678">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b423e-679">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="b423e-679">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (float x, float y, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(float32 x, float32 y, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(float x, float y, System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : single * single * System.Drawing.Pen -&gt; bool" Usage="graphicsPath.IsOutlineVisible (x, y, pen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="b423e-680">A coordenada X do ponto a ser testado.</span><span class="sxs-lookup"><span data-stu-id="b423e-680">The x-coordinate of the point to test.</span></span></param>
        <param name="y"><span data-ttu-id="b423e-681">A coordenada Y do ponto a ser testado.</span><span class="sxs-lookup"><span data-stu-id="b423e-681">The y-coordinate of the point to test.</span></span></param>
        <param name="pen"><span data-ttu-id="b423e-682">O <see cref="T:System.Drawing.Pen" /> a ser testado.</span><span class="sxs-lookup"><span data-stu-id="b423e-682">The <see cref="T:System.Drawing.Pen" /> to test.</span></span></param>
        <summary><span data-ttu-id="b423e-683">Indica se o ponto especificado está contido dentro de (sob) o contorno deste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> quando desenhado com a <see cref="T:System.Drawing.Pen" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="b423e-683">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <returns><span data-ttu-id="b423e-684">Este método retorna <see langword="true" /> se o ponto especificado está contido no contorno deste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> quando desenhado com a <see cref="T:System.Drawing.Pen" /> especificada; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-684">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-685">Este método testa para ver se a estrutura de tópicos de um determinado caminho será renderizada visível no ponto especificado.</span><span class="sxs-lookup"><span data-stu-id="b423e-685">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b423e-686">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="b423e-686">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (int x, int y, System.Drawing.Pen pen, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(int32 x, int32 y, class System.Drawing.Pen pen, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(int x, int y, System::Drawing::Pen ^ pen, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : int * int * System.Drawing.Pen * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsOutlineVisible (x, y, pen, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="b423e-687">A coordenada X do ponto a ser testado.</span><span class="sxs-lookup"><span data-stu-id="b423e-687">The x-coordinate of the point to test.</span></span></param>
        <param name="y"><span data-ttu-id="b423e-688">A coordenada Y do ponto a ser testado.</span><span class="sxs-lookup"><span data-stu-id="b423e-688">The y-coordinate of the point to test.</span></span></param>
        <param name="pen"><span data-ttu-id="b423e-689">O <see cref="T:System.Drawing.Pen" /> a ser testado.</span><span class="sxs-lookup"><span data-stu-id="b423e-689">The <see cref="T:System.Drawing.Pen" /> to test.</span></span></param>
        <param name="graphics"><span data-ttu-id="b423e-690">O <see cref="T:System.Drawing.Graphics" /> do qual a visibilidade será testada.</span><span class="sxs-lookup"><span data-stu-id="b423e-690">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span></span></param>
        <summary><span data-ttu-id="b423e-691">Indica se o ponto especificado está contido dentro de (sob) o contorno deste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> quando desenhado com a <see cref="T:System.Drawing.Pen" /> especificada e usando o <see cref="T:System.Drawing.Graphics" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="b423e-691">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="b423e-692">Este método retorna <see langword="true" /> se o ponto especificado está contido no contorno deste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> quando desenhado com a <see cref="T:System.Drawing.Pen" /> especificada; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-692">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-693">Este método testa para ver se a estrutura de tópicos de um determinado caminho será renderizada visível no ponto especificado.</span><span class="sxs-lookup"><span data-stu-id="b423e-693">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span> <span data-ttu-id="b423e-694">As coordenadas do ponto a ser testado são fornecidas nas coordenadas de mundo.</span><span class="sxs-lookup"><span data-stu-id="b423e-694">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="b423e-695">A matriz de transformação de `graphics` temporariamente é aplicada antes de testar quanto à visibilidade.</span><span class="sxs-lookup"><span data-stu-id="b423e-695">The transform matrix of `graphics` is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b423e-696">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, um <xref:System.Windows.Forms.Form.OnPaint%2A> eventos.</span><span class="sxs-lookup"><span data-stu-id="b423e-696">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event.</span></span> <span data-ttu-id="b423e-697">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="b423e-697">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b423e-698">Cria um caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-698">Creates a path.</span></span>  
  
-   <span data-ttu-id="b423e-699">Adiciona um retângulo ao caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-699">Adds a rectangle to the path.</span></span>  
  
-   <span data-ttu-id="b423e-700">Cria uma caneta ampla e amplia o caminho com essa caneta (para tornar o exemplo mais claro),</span><span class="sxs-lookup"><span data-stu-id="b423e-700">Creates a wide pen and widens the path with that pen (to make the example clearer),</span></span>  
  
-   <span data-ttu-id="b423e-701">Testa um ponto (100, 50) para ver se ele está dentro de (sob) uma das bordas do retângulo chamando <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%2A>.</span><span class="sxs-lookup"><span data-stu-id="b423e-701">Tests a point (100, 50) to see if it lies within (under) one of the edges of the rectangle by calling <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%2A>.</span></span>  
  
 <span data-ttu-id="b423e-702">O resultado é mostrado na caixa de mensagem (nesse caso, VERDADEIRO).</span><span class="sxs-lookup"><span data-stu-id="b423e-702">The result is shown in the message box (in this case, true).</span></span> <span data-ttu-id="b423e-703">Em outras palavras, a borda é renderizada sobre esse ponto.</span><span class="sxs-lookup"><span data-stu-id="b423e-703">In other words the edge is rendered over that point.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#22](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#22)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#22](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#22)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#22](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (float x, float y, System.Drawing.Pen pen, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(float32 x, float32 y, class System.Drawing.Pen pen, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(float x, float y, System::Drawing::Pen ^ pen, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : single * single * System.Drawing.Pen * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsOutlineVisible (x, y, pen, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="b423e-704">A coordenada X do ponto a ser testado.</span><span class="sxs-lookup"><span data-stu-id="b423e-704">The x-coordinate of the point to test.</span></span></param>
        <param name="y"><span data-ttu-id="b423e-705">A coordenada Y do ponto a ser testado.</span><span class="sxs-lookup"><span data-stu-id="b423e-705">The y-coordinate of the point to test.</span></span></param>
        <param name="pen"><span data-ttu-id="b423e-706">O <see cref="T:System.Drawing.Pen" /> a ser testado.</span><span class="sxs-lookup"><span data-stu-id="b423e-706">The <see cref="T:System.Drawing.Pen" /> to test.</span></span></param>
        <param name="graphics"><span data-ttu-id="b423e-707">O <see cref="T:System.Drawing.Graphics" /> do qual a visibilidade será testada.</span><span class="sxs-lookup"><span data-stu-id="b423e-707">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span></span></param>
        <summary><span data-ttu-id="b423e-708">Indica se o ponto especificado está contido dentro de (sob) o contorno deste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> quando desenhado com a <see cref="T:System.Drawing.Pen" /> especificada e usando o <see cref="T:System.Drawing.Graphics" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="b423e-708">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="b423e-709">Este método retorna <see langword="true" /> se o ponto especificado está contido em (sob) o contorno deste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> quando desenhado com a <see cref="T:System.Drawing.Pen" /> especificada; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-709">This method returns <see langword="true" /> if the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-710">Este método testa para ver se a estrutura de tópicos de um determinado caminho será renderizada visível no ponto especificado.</span><span class="sxs-lookup"><span data-stu-id="b423e-710">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span> <span data-ttu-id="b423e-711">As coordenadas do ponto a ser testado são fornecidas nas coordenadas de mundo.</span><span class="sxs-lookup"><span data-stu-id="b423e-711">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="b423e-712">A matriz de transformação do `graphics` parâmetro temporariamente é aplicado antes de testar quanto à visibilidade.</span><span class="sxs-lookup"><span data-stu-id="b423e-712">The transform matrix of the `graphics` parameter is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b423e-713">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="b423e-713">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsVisible">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b423e-714">Indica se o ponto especificado está contido neste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-714">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::Point point);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.Point -&gt; bool" Usage="graphicsPath.IsVisible point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="b423e-715">Um <see cref="T:System.Drawing.Point" /> que representa o ponto a testar.</span><span class="sxs-lookup"><span data-stu-id="b423e-715">A <see cref="T:System.Drawing.Point" /> that represents the point to test.</span></span></param>
        <summary><span data-ttu-id="b423e-716">Indica se o ponto especificado está contido neste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-716">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <returns><span data-ttu-id="b423e-717">Esse método retornará <see langword="true" /> se o ponto especificado estiver contido neste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-717">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b423e-718">Para ver um exemplo, consulte `GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`.</span><span class="sxs-lookup"><span data-stu-id="b423e-718">For an example, see `GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.PointF point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.PointF point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (point As PointF) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::PointF point);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.PointF -&gt; bool" Usage="graphicsPath.IsVisible point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="b423e-719">Um <see cref="T:System.Drawing.PointF" /> que representa o ponto a testar.</span><span class="sxs-lookup"><span data-stu-id="b423e-719">A <see cref="T:System.Drawing.PointF" /> that represents the point to test.</span></span></param>
        <summary><span data-ttu-id="b423e-720">Indica se o ponto especificado está contido neste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-720">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <returns><span data-ttu-id="b423e-721">Esse método retornará <see langword="true" /> se o ponto especificado estiver contido neste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-721">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b423e-722">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="b423e-722">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.Point pt, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.Point pt, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::Point pt, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.Point * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsVisible (pt, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="pt"><span data-ttu-id="b423e-723">Um <see cref="T:System.Drawing.Point" /> que representa o ponto a testar.</span><span class="sxs-lookup"><span data-stu-id="b423e-723">A <see cref="T:System.Drawing.Point" /> that represents the point to test.</span></span></param>
        <param name="graphics"><span data-ttu-id="b423e-724">O <see cref="T:System.Drawing.Graphics" /> do qual a visibilidade será testada.</span><span class="sxs-lookup"><span data-stu-id="b423e-724">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span></span></param>
        <summary><span data-ttu-id="b423e-725">Indica se o ponto especificado está contido neste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-725">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <returns><span data-ttu-id="b423e-726">Esse método retornará <see langword="true" /> se o ponto especificado estiver contido neste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-726">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-727">As coordenadas do ponto a ser testado são fornecidas nas coordenadas de mundo.</span><span class="sxs-lookup"><span data-stu-id="b423e-727">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="b423e-728">A matriz de transformação do `graphics` parâmetro temporariamente é aplicado antes de testar quanto à visibilidade.</span><span class="sxs-lookup"><span data-stu-id="b423e-728">The transform matrix of the `graphics` parameter is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b423e-729">Para ver um exemplo, consulte `GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`.</span><span class="sxs-lookup"><span data-stu-id="b423e-729">For an example, see `GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.PointF pt, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.PointF pt, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::PointF pt, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.PointF * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsVisible (pt, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.PointF" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="pt"><span data-ttu-id="b423e-730">Um <see cref="T:System.Drawing.PointF" /> que representa o ponto a testar.</span><span class="sxs-lookup"><span data-stu-id="b423e-730">A <see cref="T:System.Drawing.PointF" /> that represents the point to test.</span></span></param>
        <param name="graphics"><span data-ttu-id="b423e-731">O <see cref="T:System.Drawing.Graphics" /> do qual a visibilidade será testada.</span><span class="sxs-lookup"><span data-stu-id="b423e-731">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span></span></param>
        <summary><span data-ttu-id="b423e-732">Indica se o ponto especificado está contido neste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-732">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <returns><span data-ttu-id="b423e-733">Esse método retornará <see langword="true" /> se o ponto especificado estiver contido nisso; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-733">This method returns <see langword="true" /> if the specified point is contained within this; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-734">As coordenadas do ponto a ser testado são fornecidas nas coordenadas de mundo.</span><span class="sxs-lookup"><span data-stu-id="b423e-734">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="b423e-735">A matriz de transformação do `graphics` parâmetro temporariamente é aplicado antes de testar quanto à visibilidade.</span><span class="sxs-lookup"><span data-stu-id="b423e-735">The transform matrix of the `graphics` parameter is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b423e-736">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="b423e-736">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Integer, y As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : int * int -&gt; bool" Usage="graphicsPath.IsVisible (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="b423e-737">A coordenada X do ponto a ser testado.</span><span class="sxs-lookup"><span data-stu-id="b423e-737">The x-coordinate of the point to test.</span></span></param>
        <param name="y"><span data-ttu-id="b423e-738">A coordenada Y do ponto a ser testado.</span><span class="sxs-lookup"><span data-stu-id="b423e-738">The y-coordinate of the point to test.</span></span></param>
        <summary><span data-ttu-id="b423e-739">Indica se o ponto especificado está contido neste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-739">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <returns><span data-ttu-id="b423e-740">Esse método retornará <see langword="true" /> se o ponto especificado estiver contido neste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-740">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b423e-741">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="b423e-741">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Single, y As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(float x, float y);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : single * single -&gt; bool" Usage="graphicsPath.IsVisible (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="b423e-742">A coordenada X do ponto a ser testado.</span><span class="sxs-lookup"><span data-stu-id="b423e-742">The x-coordinate of the point to test.</span></span></param>
        <param name="y"><span data-ttu-id="b423e-743">A coordenada Y do ponto a ser testado.</span><span class="sxs-lookup"><span data-stu-id="b423e-743">The y-coordinate of the point to test.</span></span></param>
        <summary><span data-ttu-id="b423e-744">Indica se o ponto especificado está contido neste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-744">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <returns><span data-ttu-id="b423e-745">Esse método retornará <see langword="true" /> se o ponto especificado estiver contido neste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-745">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b423e-746">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="b423e-746">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (int x, int y, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(int32 x, int32 y, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(int x, int y, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : int * int * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsVisible (x, y, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="b423e-747">A coordenada X do ponto a ser testado.</span><span class="sxs-lookup"><span data-stu-id="b423e-747">The x-coordinate of the point to test.</span></span></param>
        <param name="y"><span data-ttu-id="b423e-748">A coordenada Y do ponto a ser testado.</span><span class="sxs-lookup"><span data-stu-id="b423e-748">The y-coordinate of the point to test.</span></span></param>
        <param name="graphics"><span data-ttu-id="b423e-749">O <see cref="T:System.Drawing.Graphics" /> do qual a visibilidade será testada.</span><span class="sxs-lookup"><span data-stu-id="b423e-749">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span></span></param>
        <summary><span data-ttu-id="b423e-750">Indica se o ponto especificado está contido neste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />, usando o <see cref="T:System.Drawing.Graphics" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="b423e-750">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />, using the specified <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="b423e-751">Esse método retornará <see langword="true" /> se o ponto especificado estiver contido neste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-751">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-752">As coordenadas do ponto a ser testado são fornecidas nas coordenadas de mundo.</span><span class="sxs-lookup"><span data-stu-id="b423e-752">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="b423e-753">A matriz de transformação de `graphics` temporariamente é aplicada antes de testar quanto à visibilidade.</span><span class="sxs-lookup"><span data-stu-id="b423e-753">The transform matrix of `graphics` is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b423e-754">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, um <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="b423e-754">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="b423e-755">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="b423e-755">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b423e-756">Cria um caminho e adiciona uma elipse ao caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-756">Creates a path and adds an ellipse to the path.</span></span>  
  
-   <span data-ttu-id="b423e-757">Testa se o ponto especificado está contido dentro do caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-757">Tests whether the specified point is contained within the path.</span></span>  
  
-   <span data-ttu-id="b423e-758">Exibe o resultado em uma caixa de diálogo.</span><span class="sxs-lookup"><span data-stu-id="b423e-758">Displays the result in a dialog box.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#23](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#23)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#23](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#23)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#23](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (float x, float y, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(float32 x, float32 y, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(float x, float y, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : single * single * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsVisible (x, y, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="b423e-759">A coordenada X do ponto a ser testado.</span><span class="sxs-lookup"><span data-stu-id="b423e-759">The x-coordinate of the point to test.</span></span></param>
        <param name="y"><span data-ttu-id="b423e-760">A coordenada Y do ponto a ser testado.</span><span class="sxs-lookup"><span data-stu-id="b423e-760">The y-coordinate of the point to test.</span></span></param>
        <param name="graphics"><span data-ttu-id="b423e-761">O <see cref="T:System.Drawing.Graphics" /> do qual a visibilidade será testada.</span><span class="sxs-lookup"><span data-stu-id="b423e-761">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span></span></param>
        <summary><span data-ttu-id="b423e-762">Indica se o ponto especificado está contido neste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />, na região de recorte visível do <see cref="T:System.Drawing.Graphics" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="b423e-762">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> in the visible clip region of the specified <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="b423e-763">Esse método retornará <see langword="true" /> se o ponto especificado estiver contido neste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-763">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-764">As coordenadas do ponto a ser testado são fornecidas nas coordenadas de mundo.</span><span class="sxs-lookup"><span data-stu-id="b423e-764">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="b423e-765">A matriz de transformação do `graphics` parâmetro temporariamente é aplicado antes de testar quanto à visibilidade.</span><span class="sxs-lookup"><span data-stu-id="b423e-765">The transform matrix of the `graphics` parameter is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b423e-766">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="b423e-766">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PathData">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.PathData PathData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Drawing2D.PathData PathData" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.PathData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathData As PathData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::PathData ^ PathData { System::Drawing::Drawing2D::PathData ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathData : System.Drawing.Drawing2D.PathData" Usage="System.Drawing.Drawing2D.GraphicsPath.PathData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.PathData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b423e-767">Obtém um <see cref="T:System.Drawing.Drawing2D.PathData" /> que encapsula matrizes de pontos (<paramref name="points" />) e tipos (<paramref name="types" />) para este <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-767">Gets a <see cref="T:System.Drawing.Drawing2D.PathData" /> that encapsulates arrays of points (<paramref name="points" />) and types (<paramref name="types" />) for this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <value><span data-ttu-id="b423e-768">Um <see cref="T:System.Drawing.Drawing2D.PathData" /> que encapsula matrizes para os pontos e os tipos deste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-768">A <see cref="T:System.Drawing.Drawing2D.PathData" /> that encapsulates arrays for both the points and types for this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathPoints">
      <MemberSignature Language="C#" Value="public System.Drawing.PointF[] PathPoints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.PointF[] PathPoints" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathPoints As PointF()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Drawing::PointF&gt; ^ PathPoints { cli::array &lt;System::Drawing::PointF&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathPoints : System.Drawing.PointF[]" Usage="System.Drawing.Drawing2D.GraphicsPath.PathPoints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.PointF[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b423e-769">Obtém os pontos no caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-769">Gets the points in the path.</span></span></summary>
        <value><span data-ttu-id="b423e-770">Uma matriz de objetos <see cref="T:System.Drawing.PointF" /> que representam o caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-770">An array of <see cref="T:System.Drawing.PointF" /> objects that represent the path.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathTypes">
      <MemberSignature Language="C#" Value="public byte[] PathTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] PathTypes" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathTypes As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ PathTypes { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathTypes : byte[]" Usage="System.Drawing.Drawing2D.GraphicsPath.PathTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b423e-771">Obtém os tipos dos pontos correspondentes na matriz <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-771">Gets the types of the corresponding points in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> array.</span></span></summary>
        <value><span data-ttu-id="b423e-772">Uma matriz de bytes que especifica os tipos dos pontos correspondentes no caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-772">An array of bytes that specifies the types of the corresponding points in the path.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-773">A matriz de bytes retornados pelo <xref:System.Drawing.Drawing2D.GraphicsPath.PathTypes%2A> propriedade especifica os tipos de ponto e os sinalizadores para os pontos de dados em um caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-773">The array of bytes returned by the <xref:System.Drawing.Drawing2D.GraphicsPath.PathTypes%2A> property specifies point types and flags for the data points in a path.</span></span> <span data-ttu-id="b423e-774">Para cada ponto, bits de 0 a 2 indicam o tipo de um ponto e bits de 3 a 7 mantêm um conjunto de sinalizadores que especificam os atributos de um ponto.</span><span class="sxs-lookup"><span data-stu-id="b423e-774">For each point, bits 0 through 2 indicate the type of a point, and bits 3 through 7 hold a set of flags that specify the attributes of a point.</span></span> <span data-ttu-id="b423e-775">A tabela a seguir mostra os valores possíveis e seus significados.</span><span class="sxs-lookup"><span data-stu-id="b423e-775">The following table shows possible values and their meanings.</span></span>  
  
|<span data-ttu-id="b423e-776">Valor</span><span class="sxs-lookup"><span data-stu-id="b423e-776">Value</span></span>|<span data-ttu-id="b423e-777">Significado</span><span class="sxs-lookup"><span data-stu-id="b423e-777">Meaning</span></span>|  
|-----------|-------------|  
|<span data-ttu-id="b423e-778">0</span><span class="sxs-lookup"><span data-stu-id="b423e-778">0</span></span>|<span data-ttu-id="b423e-779">Indica que o ponto de início de uma figura.</span><span class="sxs-lookup"><span data-stu-id="b423e-779">Indicates that the point is the start of a figure.</span></span>|  
|<span data-ttu-id="b423e-780">1</span><span class="sxs-lookup"><span data-stu-id="b423e-780">1</span></span>|<span data-ttu-id="b423e-781">Indica que o ponto é um dos dois pontos de extremidade de uma linha.</span><span class="sxs-lookup"><span data-stu-id="b423e-781">Indicates that the point is one of the two endpoints of a line.</span></span>|  
|<span data-ttu-id="b423e-782">3</span><span class="sxs-lookup"><span data-stu-id="b423e-782">3</span></span>|<span data-ttu-id="b423e-783">Indica que o ponto é um ponto de extremidade ou ponto de controle de uma spline de Bézier cúbica.</span><span class="sxs-lookup"><span data-stu-id="b423e-783">Indicates that the point is an endpoint or control point of a cubic Bézier spline.</span></span>|  
|<span data-ttu-id="b423e-784">0x7</span><span class="sxs-lookup"><span data-stu-id="b423e-784">0x7</span></span>|<span data-ttu-id="b423e-785">Máscaras de todos os bits, exceto para os três bits de ordem inferior, que indicam o tipo de ponto.</span><span class="sxs-lookup"><span data-stu-id="b423e-785">Masks all bits except for the three low-order bits, which indicate the point type.</span></span>|  
|<span data-ttu-id="b423e-786">0x20</span><span class="sxs-lookup"><span data-stu-id="b423e-786">0x20</span></span>|<span data-ttu-id="b423e-787">Especifica que o ponto é um marcador.</span><span class="sxs-lookup"><span data-stu-id="b423e-787">Specifies that the point is a marker.</span></span>|  
|<span data-ttu-id="b423e-788">0x80</span><span class="sxs-lookup"><span data-stu-id="b423e-788">0x80</span></span>|<span data-ttu-id="b423e-789">Especifica que o ponto é o último ponto em um subcaminho fechado (Figura).</span><span class="sxs-lookup"><span data-stu-id="b423e-789">Specifies that the point is the last point in a closed subpath (figure).</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PointCount">
      <MemberSignature Language="C#" Value="public int PointCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PointCount" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.PointCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PointCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PointCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PointCount : int" Usage="System.Drawing.Drawing2D.GraphicsPath.PointCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b423e-790">Obtém o número de elementos na <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> ou na matriz <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-790">Gets the number of elements in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> or the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> array.</span></span></summary>
        <value><span data-ttu-id="b423e-791">Um inteiro que especifica o número de elementos na <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> ou o <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> matriz.</span><span class="sxs-lookup"><span data-stu-id="b423e-791">An integer that specifies the number of elements in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> or the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> array.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="graphicsPath.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b423e-792">Esvazia as matrizes <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> e <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> e define o <see cref="T:System.Drawing.Drawing2D.FillMode" /> como <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-792">Empties the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> and <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> arrays and sets the <see cref="T:System.Drawing.Drawing2D.FillMode" /> to <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b423e-793">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, um <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="b423e-793">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="b423e-794">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="b423e-794">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b423e-795">Cria um caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-795">Creates a path.</span></span>  
  
-   <span data-ttu-id="b423e-796">Adiciona vários primitivos a ele.</span><span class="sxs-lookup"><span data-stu-id="b423e-796">Adds several primitives to it.</span></span>  
  
-   <span data-ttu-id="b423e-797">Desenha a matriz de pontos do caminho para a tela.</span><span class="sxs-lookup"><span data-stu-id="b423e-797">Draws the path's points array to the screen.</span></span>  
  
-   <span data-ttu-id="b423e-798">Redefine o caminho para um estado vazio.</span><span class="sxs-lookup"><span data-stu-id="b423e-798">Resets the path to an empty state.</span></span>  
  
-   <span data-ttu-id="b423e-799">Adquire novamente os pontos da matriz (se houver).</span><span class="sxs-lookup"><span data-stu-id="b423e-799">Re-acquires the points array (if it exists).</span></span>  
  
-   <span data-ttu-id="b423e-800">Desenha a matriz para a tela.</span><span class="sxs-lookup"><span data-stu-id="b423e-800">Draws the array to the screen.</span></span>  
  
 <span data-ttu-id="b423e-801">Observe que ele encontrar nenhuma matriz após a chamada de redefinição.</span><span class="sxs-lookup"><span data-stu-id="b423e-801">Notice that it finds no array following the reset call.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#24](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#24)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#24](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#24)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#24](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public void Reverse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reverse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Reverse" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reverse ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reverse();" />
      <MemberSignature Language="F#" Value="member this.Reverse : unit -&gt; unit" Usage="graphicsPath.Reverse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b423e-802">Inverte a ordem dos pontos na matriz <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> desse <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-802">Reverses the order of points in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> array of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b423e-803">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, um <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="b423e-803">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="b423e-804">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="b423e-804">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b423e-805">Cria um caminho e adiciona vários primitivos ao caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-805">Creates a path and adds several primitives to the path.</span></span>  
  
-   <span data-ttu-id="b423e-806">Desenha a matriz de pontos do caminho para a tela.</span><span class="sxs-lookup"><span data-stu-id="b423e-806">Draws the path's points array to the screen.</span></span>  
  
-   <span data-ttu-id="b423e-807">Desenha a matriz invertida pontos na tela.</span><span class="sxs-lookup"><span data-stu-id="b423e-807">Draws the reversed points array to the screen.</span></span>  
  
 <span data-ttu-id="b423e-808">Observe que a segunda listagem de pontos na ordem inversa da primeira.</span><span class="sxs-lookup"><span data-stu-id="b423e-808">Notice that the second listing of points is in reverse order from the first.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#25](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#25)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#25](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#25)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#25](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMarkers">
      <MemberSignature Language="C#" Value="public void SetMarkers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetMarkers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.SetMarkers" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetMarkers ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetMarkers();" />
      <MemberSignature Language="F#" Value="member this.SetMarkers : unit -&gt; unit" Usage="graphicsPath.SetMarkers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b423e-809">Define um marcador neste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-809">Sets a marker on this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-810">Esse método cria um marcador no caminho que pode ser usado para separar as seções do caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-810">This method creates a marker on the path that can be used to separate sections of the path.</span></span> <span data-ttu-id="b423e-811">Você pode usar o <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> métodos para iterar os marcadores no caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-811">You can then use the <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> methods to iterate through the markers in the path.</span></span>  
  
 <span data-ttu-id="b423e-812">Marcadores são usados para separar grupos de subcaminhos.</span><span class="sxs-lookup"><span data-stu-id="b423e-812">Markers are used to separate groups of subpaths.</span></span> <span data-ttu-id="b423e-813">Um ou mais subcaminhos podem estar contidos entre dois marcadores no caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-813">One or more subpaths can be contained between two markers in the path.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b423e-814">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, um <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="b423e-814">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="b423e-815">O código cria um caminho e adiciona vários primitivos ao caminho separado por marcadores e desenha o caminho para a tela.</span><span class="sxs-lookup"><span data-stu-id="b423e-815">The code creates a path and adds several primitives to the path separated by markers, and draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#26](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#26)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#26](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#26)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#26](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartFigure">
      <MemberSignature Language="C#" Value="public void StartFigure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartFigure() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartFigure ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartFigure();" />
      <MemberSignature Language="F#" Value="member this.StartFigure : unit -&gt; unit" Usage="graphicsPath.StartFigure " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b423e-816">Inicia uma nova figura sem fechar a figura atual.</span><span class="sxs-lookup"><span data-stu-id="b423e-816">Starts a new figure without closing the current figure.</span></span> <span data-ttu-id="b423e-817">Todos os pontos subsequentes adicionados ao caminho são adicionados a essa nova figura.</span><span class="sxs-lookup"><span data-stu-id="b423e-817">All subsequent points added to the path are added to this new figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-818">O usuário deve manter os pontos originais se forem necessários.</span><span class="sxs-lookup"><span data-stu-id="b423e-818">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="b423e-819">Os pontos originais são convertidos em pontos de controle de Bézier cúbicos internamente, portanto não há nenhum mecanismo para retornar os pontos originais.</span><span class="sxs-lookup"><span data-stu-id="b423e-819">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
 <span data-ttu-id="b423e-820">Esse método inicia um subcaminho de novo no caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-820">This method starts a new subpath in the path.</span></span> <span data-ttu-id="b423e-821">Subcaminhos permitem separar um caminho em seções e usar o <xref:System.Drawing.Drawing2D.GraphicsPathIterator> classe para iterar por subcaminhos.</span><span class="sxs-lookup"><span data-stu-id="b423e-821">Subpaths allow you to separate a path into sections and use the <xref:System.Drawing.Drawing2D.GraphicsPathIterator> class to iterate through the subpaths.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b423e-822">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, um <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="b423e-822">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="b423e-823">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="b423e-823">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b423e-824">Cria um caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-824">Creates a path.</span></span>  
  
-   <span data-ttu-id="b423e-825">Adiciona dois conjuntos de números.</span><span class="sxs-lookup"><span data-stu-id="b423e-825">Adds two sets of figures.</span></span> <span data-ttu-id="b423e-826">O primeiro conjunto de figuras combina quatro primitivos em duas figuras.</span><span class="sxs-lookup"><span data-stu-id="b423e-826">The first set of figures combines four primitives into two figures.</span></span> <span data-ttu-id="b423e-827">O segundo conjunto de figuras combina os mesmos primitivos de quatro (exceto que eles são deslocados no eixo y) em três números.</span><span class="sxs-lookup"><span data-stu-id="b423e-827">The second set of figures combines the same four primitives (except that they are offset in the y-axis) into three figures.</span></span>  
  
-   <span data-ttu-id="b423e-828">Desenha todos os valores para a tela.</span><span class="sxs-lookup"><span data-stu-id="b423e-828">Draws all the figures to the screen.</span></span>  
  
 <span data-ttu-id="b423e-829">Observe a diferença na aparência entre os dois conjuntos de números.</span><span class="sxs-lookup"><span data-stu-id="b423e-829">Notice the difference in the appearance between the two sets of figures.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#27](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#27)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#27](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#27)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#27](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="graphicsPath.Transform matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="b423e-830">Um <see cref="T:System.Drawing.Drawing2D.Matrix" /> que representa a transformação a ser aplicada.</span><span class="sxs-lookup"><span data-stu-id="b423e-830">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that represents the transformation to apply.</span></span></param>
        <summary><span data-ttu-id="b423e-831">Aplica a uma matriz de transformação a este <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-831">Applies a transform matrix to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-832">A transformação pode dimensionar, traduzir, girar ou inclinar o <xref:System.Drawing.Drawing2D.GraphicsPath>.</span><span class="sxs-lookup"><span data-stu-id="b423e-832">The transformation can scale, translate, rotate, or skew the <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b423e-833">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, um <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="b423e-833">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="b423e-834">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="b423e-834">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b423e-835">Cria um caminho e adiciona uma elipse ao caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-835">Creates a path and adds an ellipse to the path.</span></span>  
  
-   <span data-ttu-id="b423e-836">Desenha o caminho para a tela.</span><span class="sxs-lookup"><span data-stu-id="b423e-836">Draws path to the screen.</span></span>  
  
-   <span data-ttu-id="b423e-837">Cria uma matriz de transformação para converter as caminho de 100 unidades na direção do eixo x.</span><span class="sxs-lookup"><span data-stu-id="b423e-837">Creates a transform matrix to translate the path 100 units in the x-axis direction.</span></span>  
  
-   <span data-ttu-id="b423e-838">Desenha o caminho transformado na tela.</span><span class="sxs-lookup"><span data-stu-id="b423e-838">Draws the transformed path to the screen.</span></span>  
  
 <span data-ttu-id="b423e-839">Observe que a elipse original é desenhada em preto e transformado elipse é desenhada em vermelho.</span><span class="sxs-lookup"><span data-stu-id="b423e-839">Notice that the original ellipse is drawn in black and the transformed ellipse is drawn in red.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#28](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#28)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#28](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#28)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#28](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Warp">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b423e-840">Aplica uma transformação de distorção, definida por um retângulo e um paralelogramo, a este <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-840">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Warp">
      <MemberSignature Language="C#" Value="public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warp(valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Warp (destPoints As PointF(), srcRect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warp(cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect);" />
      <MemberSignature Language="F#" Value="member this.Warp : System.Drawing.PointF[] * System.Drawing.RectangleF -&gt; unit" Usage="graphicsPath.Warp (destPoints, srcRect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="destPoints"><span data-ttu-id="b423e-841">Uma matriz de estruturas <see cref="T:System.Drawing.PointF" /> que define um paralelogramo no qual o retângulo definido por <paramref name="srcRect" /> é transformado.</span><span class="sxs-lookup"><span data-stu-id="b423e-841">An array of <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram to which the rectangle defined by <paramref name="srcRect" /> is transformed.</span></span> <span data-ttu-id="b423e-842">A matriz pode conter três ou quatro elementos.</span><span class="sxs-lookup"><span data-stu-id="b423e-842">The array can contain either three or four elements.</span></span> <span data-ttu-id="b423e-843">Se a matriz contiver três elementos, o canto inferior direito do paralelogramo será inferido pelos três primeiros pontos.</span><span class="sxs-lookup"><span data-stu-id="b423e-843">If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</span></span></param>
        <param name="srcRect"><span data-ttu-id="b423e-844">Um <see cref="T:System.Drawing.RectangleF" /> que representa o retângulo que é transformado no paralelogramo definido por <paramref name="destPoints" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-844">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <paramref name="destPoints" />.</span></span></param>
        <summary><span data-ttu-id="b423e-845">Aplica uma transformação de distorção, definida por um retângulo e um paralelogramo, a este <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-845">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b423e-846">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="b423e-846">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Warp">
      <MemberSignature Language="C#" Value="public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warp(valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warp(cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.Warp : System.Drawing.PointF[] * System.Drawing.RectangleF * System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="graphicsPath.Warp (destPoints, srcRect, matrix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="destPoints"><span data-ttu-id="b423e-847">Uma matriz de estruturas <see cref="T:System.Drawing.PointF" /> que define um paralelogramo no qual o retângulo definido por <paramref name="srcRect" /> é transformado.</span><span class="sxs-lookup"><span data-stu-id="b423e-847">An array of <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram to which the rectangle defined by <paramref name="srcRect" /> is transformed.</span></span> <span data-ttu-id="b423e-848">A matriz pode conter três ou quatro elementos.</span><span class="sxs-lookup"><span data-stu-id="b423e-848">The array can contain either three or four elements.</span></span> <span data-ttu-id="b423e-849">Se a matriz contiver três elementos, o canto inferior direito do paralelogramo será inferido pelos três primeiros pontos.</span><span class="sxs-lookup"><span data-stu-id="b423e-849">If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</span></span></param>
        <param name="srcRect"><span data-ttu-id="b423e-850">Um <see cref="T:System.Drawing.RectangleF" /> que representa o retângulo que é transformado no paralelogramo definido por <paramref name="destPoints" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-850">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <paramref name="destPoints" />.</span></span></param>
        <param name="matrix"><span data-ttu-id="b423e-851">Um <see cref="T:System.Drawing.Drawing2D.Matrix" /> que especifica uma transformação geométrica a ser aplicada ao caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-851">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a geometric transform to apply to the path.</span></span></param>
        <summary><span data-ttu-id="b423e-852">Aplica uma transformação de distorção, definida por um retângulo e um paralelogramo, a este <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-852">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b423e-853">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="b423e-853">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Warp">
      <MemberSignature Language="C#" Value="public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.WarpMode warpMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warp(valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, class System.Drawing.Drawing2D.Matrix matrix, valuetype System.Drawing.Drawing2D.WarpMode warpMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warp(cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Drawing2D::WarpMode warpMode);" />
      <MemberSignature Language="F#" Value="member this.Warp : System.Drawing.PointF[] * System.Drawing.RectangleF * System.Drawing.Drawing2D.Matrix * System.Drawing.Drawing2D.WarpMode -&gt; unit" Usage="graphicsPath.Warp (destPoints, srcRect, matrix, warpMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="warpMode" Type="System.Drawing.Drawing2D.WarpMode" />
      </Parameters>
      <Docs>
        <param name="destPoints"><span data-ttu-id="b423e-854">Uma matriz de estruturas <see cref="T:System.Drawing.PointF" /> que define um paralelogramo no qual o retângulo definido por <paramref name="srcRect" /> é transformado.</span><span class="sxs-lookup"><span data-stu-id="b423e-854">An array of <see cref="T:System.Drawing.PointF" /> structures that defines a parallelogram to which the rectangle defined by <paramref name="srcRect" /> is transformed.</span></span> <span data-ttu-id="b423e-855">A matriz pode conter três ou quatro elementos.</span><span class="sxs-lookup"><span data-stu-id="b423e-855">The array can contain either three or four elements.</span></span> <span data-ttu-id="b423e-856">Se a matriz contiver três elementos, o canto inferior direito do paralelogramo será inferido pelos três primeiros pontos.</span><span class="sxs-lookup"><span data-stu-id="b423e-856">If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</span></span></param>
        <param name="srcRect"><span data-ttu-id="b423e-857">Um <see cref="T:System.Drawing.RectangleF" /> que representa o retângulo que é transformado no paralelogramo definido por <paramref name="destPoints" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-857">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <paramref name="destPoints" />.</span></span></param>
        <param name="matrix"><span data-ttu-id="b423e-858">Um <see cref="T:System.Drawing.Drawing2D.Matrix" /> que especifica uma transformação geométrica a ser aplicada ao caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-858">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a geometric transform to apply to the path.</span></span></param>
        <param name="warpMode"><span data-ttu-id="b423e-859">Uma enumeração <see cref="T:System.Drawing.Drawing2D.WarpMode" /> que especifica se essa operação de distorção usa o modo bilinear ou de perspectiva.</span><span class="sxs-lookup"><span data-stu-id="b423e-859">A <see cref="T:System.Drawing.Drawing2D.WarpMode" /> enumeration that specifies whether this warp operation uses perspective or bilinear mode.</span></span></param>
        <summary><span data-ttu-id="b423e-860">Aplica uma transformação de distorção, definida por um retângulo e um paralelogramo, a este <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-860">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b423e-861">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="b423e-861">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Warp">
      <MemberSignature Language="C#" Value="public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.WarpMode warpMode, float flatness);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warp(valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, class System.Drawing.Drawing2D.Matrix matrix, valuetype System.Drawing.Drawing2D.WarpMode warpMode, float32 flatness) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warp(cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Drawing2D::WarpMode warpMode, float flatness);" />
      <MemberSignature Language="F#" Value="member this.Warp : System.Drawing.PointF[] * System.Drawing.RectangleF * System.Drawing.Drawing2D.Matrix * System.Drawing.Drawing2D.WarpMode * single -&gt; unit" Usage="graphicsPath.Warp (destPoints, srcRect, matrix, warpMode, flatness)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="warpMode" Type="System.Drawing.Drawing2D.WarpMode" />
        <Parameter Name="flatness" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="destPoints"><span data-ttu-id="b423e-862">Uma matriz de estruturas <see cref="T:System.Drawing.PointF" /> que define um paralelogramo no qual o retângulo definido por <paramref name="srcRect" /> é transformado.</span><span class="sxs-lookup"><span data-stu-id="b423e-862">An array of <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram to which the rectangle defined by <paramref name="srcRect" /> is transformed.</span></span> <span data-ttu-id="b423e-863">A matriz pode conter três ou quatro elementos.</span><span class="sxs-lookup"><span data-stu-id="b423e-863">The array can contain either three or four elements.</span></span> <span data-ttu-id="b423e-864">Se a matriz contiver três elementos, o canto inferior direito do paralelogramo será inferido pelos três primeiros pontos.</span><span class="sxs-lookup"><span data-stu-id="b423e-864">If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</span></span></param>
        <param name="srcRect"><span data-ttu-id="b423e-865">Um <see cref="T:System.Drawing.RectangleF" /> que representa o retângulo que é transformado no paralelogramo definido por <paramref name="destPoints" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-865">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <paramref name="destPoints" />.</span></span></param>
        <param name="matrix"><span data-ttu-id="b423e-866">Um <see cref="T:System.Drawing.Drawing2D.Matrix" /> que especifica uma transformação geométrica a ser aplicada ao caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-866">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a geometric transform to apply to the path.</span></span></param>
        <param name="warpMode"><span data-ttu-id="b423e-867">Uma enumeração <see cref="T:System.Drawing.Drawing2D.WarpMode" /> que especifica se essa operação de distorção usa o modo bilinear ou de perspectiva.</span><span class="sxs-lookup"><span data-stu-id="b423e-867">A <see cref="T:System.Drawing.Drawing2D.WarpMode" /> enumeration that specifies whether this warp operation uses perspective or bilinear mode.</span></span></param>
        <param name="flatness"><span data-ttu-id="b423e-868">Um valor de 0 a 1 que especifica a planeza do caminho resultante.</span><span class="sxs-lookup"><span data-stu-id="b423e-868">A value from 0 through 1 that specifies how flat the resulting path is.</span></span> <span data-ttu-id="b423e-869">Para obter mais informações, consulte os métodos <see cref="M:System.Drawing.Drawing2D.GraphicsPath.Flatten" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-869">For more information, see the <see cref="M:System.Drawing.Drawing2D.GraphicsPath.Flatten" /> methods.</span></span></param>
        <summary><span data-ttu-id="b423e-870">Aplica uma transformação de distorção, definida por um retângulo e um paralelogramo, a este <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-870">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b423e-871">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, um <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="b423e-871">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="b423e-872">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="b423e-872">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b423e-873">Cria um caminho e adiciona um retângulo ao caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-873">Creates a path and adds a rectangle to the path.</span></span>  
  
-   <span data-ttu-id="b423e-874">Desenha um retângulo para a tela em preto.</span><span class="sxs-lookup"><span data-stu-id="b423e-874">Draws that rectangle to the screen in black.</span></span>  
  
-   <span data-ttu-id="b423e-875">Encurvamentos o caminho com uma distorção de perspectiva.</span><span class="sxs-lookup"><span data-stu-id="b423e-875">Warps the path with a perspective warp.</span></span>  
  
-   <span data-ttu-id="b423e-876">Desenha o retângulo distorcido (caminho) para a tela em vermelho.</span><span class="sxs-lookup"><span data-stu-id="b423e-876">Draws the warped rectangle (path) to the screen in red.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#29](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#29)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#29](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#29)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#29](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#29)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Widen">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b423e-877">Substitui este caminho por curvas que circunscrevem a área preenchida quando esse caminho é desenhado pela caneta especificada.</span><span class="sxs-lookup"><span data-stu-id="b423e-877">Replaces this path with curves that enclose the area that is filled when this path is drawn by the specified pen.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Widen">
      <MemberSignature Language="C#" Value="public void Widen (System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Widen(class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Widen(System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.Widen : System.Drawing.Pen -&gt; unit" Usage="graphicsPath.Widen pen" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="b423e-878">Um <see cref="T:System.Drawing.Pen" /> que especifica a largura entre a estrutura de tópicos original do caminho e a nova estrutura de tópicos criada por esse método.</span><span class="sxs-lookup"><span data-stu-id="b423e-878">A <see cref="T:System.Drawing.Pen" /> that specifies the width between the original outline of the path and the new outline this method creates.</span></span></param>
        <summary><span data-ttu-id="b423e-879">Adiciona um contorno adicional ao caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-879">Adds an additional outline to the path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-880">Esse método cria uma estrutura de tópicos em torno das linhas originais desta <xref:System.Drawing.Drawing2D.GraphicsPath>, com uma distância entre as linhas existentes e a nova estrutura de tópicos igual da largura do <xref:System.Drawing.Pen> usado na chamada para <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span><span class="sxs-lookup"><span data-stu-id="b423e-880">This method creates an outline around the original lines in this <xref:System.Drawing.Drawing2D.GraphicsPath>, with a distance between the existing lines and the new outline equal to that of the width of the <xref:System.Drawing.Pen> used in the call to <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span></span> <span data-ttu-id="b423e-881">Se você quiser preencher o espaço entre as linhas que você deve usar o <xref:System.Drawing.Graphics.FillPath%2A> , em seguida, em vez disso, o <xref:System.Drawing.Graphics.DrawPath%2A>.</span><span class="sxs-lookup"><span data-stu-id="b423e-881">If you want to fill the space between the lines you must use the <xref:System.Drawing.Graphics.FillPath%2A> rather then the <xref:System.Drawing.Graphics.DrawPath%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b423e-882">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="b423e-882">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Widen">
      <MemberSignature Language="C#" Value="public void Widen (System.Drawing.Pen pen, System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Widen(class System.Drawing.Pen pen, class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Widen(System::Drawing::Pen ^ pen, System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.Widen : System.Drawing.Pen * System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="graphicsPath.Widen (pen, matrix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="b423e-883">Um <see cref="T:System.Drawing.Pen" /> que especifica a largura entre a estrutura de tópicos original do caminho e a nova estrutura de tópicos criada por esse método.</span><span class="sxs-lookup"><span data-stu-id="b423e-883">A <see cref="T:System.Drawing.Pen" /> that specifies the width between the original outline of the path and the new outline this method creates.</span></span></param>
        <param name="matrix"><span data-ttu-id="b423e-884">Um <see cref="T:System.Drawing.Drawing2D.Matrix" /> que especifica uma transformação a ser aplicada ao caminho antes da ampliação.</span><span class="sxs-lookup"><span data-stu-id="b423e-884">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transform to apply to the path before widening.</span></span></param>
        <summary><span data-ttu-id="b423e-885">Adiciona um contorno adicional ao <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="b423e-885">Adds an additional outline to the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-886">Esse método cria uma estrutura de tópicos em torno das linhas originais desta <xref:System.Drawing.Drawing2D.GraphicsPath>, com uma distância entre as linhas existentes e a nova estrutura de tópicos igual da largura do <xref:System.Drawing.Pen> usado na chamada para <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span><span class="sxs-lookup"><span data-stu-id="b423e-886">This method creates an outline around the original lines in this <xref:System.Drawing.Drawing2D.GraphicsPath>, with a distance between the existing lines and the new outline equal to that of the width of the <xref:System.Drawing.Pen> used in the call to <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span></span> <span data-ttu-id="b423e-887">Se você quiser preencher o espaço entre as linhas que você deve usar o <xref:System.Drawing.Graphics.FillPath%2A> , em seguida, em vez disso, o <xref:System.Drawing.Graphics.DrawPath%2A>.</span><span class="sxs-lookup"><span data-stu-id="b423e-887">If you want to fill the space between the lines you must use the <xref:System.Drawing.Graphics.FillPath%2A> rather then the <xref:System.Drawing.Graphics.DrawPath%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b423e-888">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="b423e-888">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Widen">
      <MemberSignature Language="C#" Value="public void Widen (System.Drawing.Pen pen, System.Drawing.Drawing2D.Matrix matrix, float flatness);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Widen(class System.Drawing.Pen pen, class System.Drawing.Drawing2D.Matrix matrix, float32 flatness) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Widen(System::Drawing::Pen ^ pen, System::Drawing::Drawing2D::Matrix ^ matrix, float flatness);" />
      <MemberSignature Language="F#" Value="member this.Widen : System.Drawing.Pen * System.Drawing.Drawing2D.Matrix * single -&gt; unit" Usage="graphicsPath.Widen (pen, matrix, flatness)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="flatness" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="b423e-889">Um <see cref="T:System.Drawing.Pen" /> que especifica a largura entre a estrutura de tópicos original do caminho e a nova estrutura de tópicos criada por esse método.</span><span class="sxs-lookup"><span data-stu-id="b423e-889">A <see cref="T:System.Drawing.Pen" /> that specifies the width between the original outline of the path and the new outline this method creates.</span></span></param>
        <param name="matrix"><span data-ttu-id="b423e-890">Um <see cref="T:System.Drawing.Drawing2D.Matrix" /> que especifica uma transformação a ser aplicada ao caminho antes da ampliação.</span><span class="sxs-lookup"><span data-stu-id="b423e-890">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transform to apply to the path before widening.</span></span></param>
        <param name="flatness"><span data-ttu-id="b423e-891">Um valor que especifica a planeza das curvas.</span><span class="sxs-lookup"><span data-stu-id="b423e-891">A value that specifies the flatness for curves.</span></span></param>
        <summary><span data-ttu-id="b423e-892">Substitui este <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> por curvas que circunscrevem a área preenchida quando esse caminho é desenhado pela caneta especificada.</span><span class="sxs-lookup"><span data-stu-id="b423e-892">Replaces this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> with curves that enclose the area that is filled when this path is drawn by the specified pen.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b423e-893">Esse método cria uma estrutura de tópicos em torno das linhas originais desta <xref:System.Drawing.Drawing2D.GraphicsPath>, com uma distância entre as linhas existentes e a nova estrutura de tópicos igual da largura do <xref:System.Drawing.Pen> usado na chamada para <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span><span class="sxs-lookup"><span data-stu-id="b423e-893">This method creates an outline around the original lines in this <xref:System.Drawing.Drawing2D.GraphicsPath>, with a distance between the existing lines and the new outline equal to that of the width of the <xref:System.Drawing.Pen> used in the call to <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span></span> <span data-ttu-id="b423e-894">Se você quiser preencher o espaço entre as linhas que você deve usar o <xref:System.Drawing.Graphics.FillPath%2A> , em seguida, em vez disso, o <xref:System.Drawing.Graphics.DrawPath%2A>.</span><span class="sxs-lookup"><span data-stu-id="b423e-894">If you want to fill the space between the lines you must use the <xref:System.Drawing.Graphics.FillPath%2A> rather then the <xref:System.Drawing.Graphics.DrawPath%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b423e-895">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, um <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="b423e-895">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="b423e-896">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="b423e-896">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b423e-897">Cria um caminho e adiciona duas elipses ao caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-897">Creates a path and adds two ellipses to the path.</span></span>  
  
-   <span data-ttu-id="b423e-898">Desenha o caminho em preto.</span><span class="sxs-lookup"><span data-stu-id="b423e-898">Draws the path in black.</span></span>  
  
-   <span data-ttu-id="b423e-899">Amplia o caminho.</span><span class="sxs-lookup"><span data-stu-id="b423e-899">Widens the path.</span></span>  
  
-   <span data-ttu-id="b423e-900">Desenha o caminho em vermelho.</span><span class="sxs-lookup"><span data-stu-id="b423e-900">Draws the path in red.</span></span>  
  
 <span data-ttu-id="b423e-901">Observe que a renderização a segunda usa <xref:System.Drawing.Graphics.FillPath%2A> em vez de <xref:System.Drawing.Graphics.DrawPath%2A>, e, portanto, a Figura renderizada tem a estrutura de tópicos preenchida.</span><span class="sxs-lookup"><span data-stu-id="b423e-901">Notice that the second rendering uses <xref:System.Drawing.Graphics.FillPath%2A> instead of <xref:System.Drawing.Graphics.DrawPath%2A>, and hence the rendered figure has the outline filled.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#30](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#30)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#30)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#30)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>