<Type Name="GraphicsPath" FullName="System.Drawing.Drawing2D.GraphicsPath">
  <TypeSignature Language="C#" Value="public sealed class GraphicsPath : MarshalByRefObject, ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit GraphicsPath extends System.MarshalByRefObject implements class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Drawing2D.GraphicsPath" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class GraphicsPath&#xA;Inherits MarshalByRefObject&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class GraphicsPath sealed : MarshalByRefObject, ICloneable, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="a41fd-101">Representa uma série de linhas e curvas conectadas.</span><span class="sxs-lookup"><span data-stu-id="a41fd-101">Represents a series of connected lines and curves.</span></span> <span data-ttu-id="a41fd-102">Essa classe não pode ser herdada.</span><span class="sxs-lookup"><span data-stu-id="a41fd-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-103">Aplicativos usam caminhos para desenhar os contornos das formas, preencher os interiores das formas e criar regiões de recorte.</span><span class="sxs-lookup"><span data-stu-id="a41fd-103">Applications use paths to draw outlines of shapes, fill the interiors of shapes, and create clipping regions.</span></span> <span data-ttu-id="a41fd-104">O mecanismo de gráficos mantém as coordenadas de formas geométricas um caminho no espaço de coordenadas do mundo.</span><span class="sxs-lookup"><span data-stu-id="a41fd-104">The graphics engine maintains the coordinates of geometric shapes in a path in world coordinate space.</span></span>  
  
 <span data-ttu-id="a41fd-105">Um caminho pode ser composto de qualquer número de valores (subcaminhos).</span><span class="sxs-lookup"><span data-stu-id="a41fd-105">A path may be composed of any number of figures (subpaths).</span></span> <span data-ttu-id="a41fd-106">Cada figura ou é composta de uma sequência de linhas conectadas e curvas ou uma primitivo de forma geométrica.</span><span class="sxs-lookup"><span data-stu-id="a41fd-106">Each figure is either composed of a sequence of connected lines and curves or a geometric shape primitive.</span></span> <span data-ttu-id="a41fd-107">O ponto de partida de uma figura é o primeiro ponto na sequência de linhas e curvas conectadas.</span><span class="sxs-lookup"><span data-stu-id="a41fd-107">The starting point of a figure is the first point in the sequence of connected lines and curves.</span></span> <span data-ttu-id="a41fd-108">O ponto final é o último ponto na sequência.</span><span class="sxs-lookup"><span data-stu-id="a41fd-108">The ending point is the last point in the sequence.</span></span> <span data-ttu-id="a41fd-109">Os pontos iniciais e final de uma forma geométrica primitivo são definidos pela especificação de primitivos.</span><span class="sxs-lookup"><span data-stu-id="a41fd-109">The starting and ending points of a geometric shape primitive are defined by the primitive specification.</span></span>  
  
 <span data-ttu-id="a41fd-110">Uma figura que consiste em uma sequência de linhas conectadas e curvas (cujos pontos inicial e final podem ser coincidentes) é uma figura aberta, a menos que ela está fechada explicitamente.</span><span class="sxs-lookup"><span data-stu-id="a41fd-110">A figure that consists of a sequence of connected lines and curves (whose starting and ending points may be coincident) is an open figure, unless it is closed explicitly.</span></span> <span data-ttu-id="a41fd-111">Uma figura pode ser fechada explicitamente, usando o <xref:System.Drawing.Drawing2D.GraphicsPath.CloseFigure%2A> método, que fecha a figura atual por uma linha de conexão do ponto final para o ponto de partida.</span><span class="sxs-lookup"><span data-stu-id="a41fd-111">A figure can be closed explicitly, by using the <xref:System.Drawing.Drawing2D.GraphicsPath.CloseFigure%2A> method, which closes the current figure by connecting a line from the ending point to the starting point.</span></span> <span data-ttu-id="a41fd-112">Uma figura que consiste em um primitivo de forma geométrica é uma figura fechada.</span><span class="sxs-lookup"><span data-stu-id="a41fd-112">A figure that consists of a geometric shape primitive is a closed figure.</span></span>  
  
 <span data-ttu-id="a41fd-113">Para fins de preenchimento e recorte (por exemplo, se um caminho é renderizado usando <xref:System.Drawing.Graphics.FillPath%2A>), todos os valores são fechados, adicionando uma linha do primeiro ponto da figura no último ponto.</span><span class="sxs-lookup"><span data-stu-id="a41fd-113">For purposes of filling and clipping (for example, if a path is rendered using <xref:System.Drawing.Graphics.FillPath%2A>), all open figures are closed by adding a line from the figure's first point to its last point.</span></span>  
  
 <span data-ttu-id="a41fd-114">Uma nova figura é iniciada implicitamente quando um caminho é criado ou quando uma figura está fechada.</span><span class="sxs-lookup"><span data-stu-id="a41fd-114">A new figure is implicitly started when a path is created or when a figure is closed.</span></span> <span data-ttu-id="a41fd-115">Uma nova figura explicitamente é criada quando o <xref:System.Drawing.Drawing2D.GraphicsPath.StartFigure%2A> método é chamado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-115">A new figure is explicitly created when the <xref:System.Drawing.Drawing2D.GraphicsPath.StartFigure%2A> method is called.</span></span>  
  
 <span data-ttu-id="a41fd-116">Quando uma forma geométrica primitivo é adicionada a um caminho, adicione uma figura que contém a forma geométrica e também implicitamente inicia uma nova figura.</span><span class="sxs-lookup"><span data-stu-id="a41fd-116">When a geometric shape primitive is added to a path, it adds a figure containing the geometric shape, and also implicitly starts a new figure.</span></span> <span data-ttu-id="a41fd-117">Consequentemente, sempre há uma figura atual em um caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-117">Consequently, there is always a current figure in a path.</span></span> <span data-ttu-id="a41fd-118">Quando linhas e curvas são adicionadas a um caminho, uma linha implícita é adicionada, conforme necessário para conectar o ponto final da figura atual para o ponto de partida das novas linhas e curvas para formar uma sequência de linhas conectadas e curvas.</span><span class="sxs-lookup"><span data-stu-id="a41fd-118">When lines and curves are added to a path, an implicit line is added as needed to connect the ending point of the current figure to the starting point of the new lines and curves to form a sequence of connected lines and curves.</span></span>  
  
 <span data-ttu-id="a41fd-119">Uma figura tem uma direção que descreve como segmentos de linha e curva são rastreados entre o ponto de partida e o ponto final.</span><span class="sxs-lookup"><span data-stu-id="a41fd-119">A figure has a direction that describes how line and curve segments are traced between the starting point and the ending point.</span></span> <span data-ttu-id="a41fd-120">A direção é definida na ordem em que as linhas e curvas são adicionados a uma figura, ou é definido pela forma geométrica primitivo.</span><span class="sxs-lookup"><span data-stu-id="a41fd-120">The direction is defined in the order that lines and curves are added to a figure, or is defined by the geometric shape primitive.</span></span> <span data-ttu-id="a41fd-121">A direção é usada para determinar os interiores de caminho de recorte e preenchimento.</span><span class="sxs-lookup"><span data-stu-id="a41fd-121">The direction is used in determining the path interiors for clipping and fill.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a41fd-122">Inicializa uma nova instância da classe <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> com uma enumeração <see cref="T:System.Drawing.Drawing2D.FillMode" /> de <see langword="Alternate" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-122">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with a <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration of <see langword="Alternate" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a41fd-123">Inicializa uma nova instância da classe <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> com um valor <see cref="P:System.Drawing.Drawing2D.GraphicsPath.FillMode" /> de <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-123">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with a <see cref="P:System.Drawing.Drawing2D.GraphicsPath.FillMode" /> value of <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.Drawing2D.FillMode fillMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Drawing2D.FillMode fillMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Drawing2D.FillMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(System::Drawing::Drawing2D::FillMode fillMode);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fillMode" Type="System.Drawing.Drawing2D.FillMode" />
      </Parameters>
      <Docs>
        <param name="fillMode"><span data-ttu-id="a41fd-124">A enumeração <see cref="T:System.Drawing.Drawing2D.FillMode" /> que determina como o interior desse <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> é preenchido.</span><span class="sxs-lookup"><span data-stu-id="a41fd-124">The <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the interior of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> is filled.</span></span></param>
        <summary><span data-ttu-id="a41fd-125">Inicializa uma nova instância da classe <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> com a enumeração <see cref="T:System.Drawing.Drawing2D.FillMode" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="a41fd-125">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with the specified <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.Point[] pts, byte[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Point[] pts, unsigned int8[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pts As Point(), types As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(cli::array &lt;System::Drawing::Point&gt; ^ pts, cli::array &lt;System::Byte&gt; ^ types);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.Point[]" />
        <Parameter Name="types" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="pts"><span data-ttu-id="a41fd-126">Uma matriz de estruturas <see cref="T:System.Drawing.Point" /> que define as coordenadas dos pontos que compõem este <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-126">An array of <see cref="T:System.Drawing.Point" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></param>
        <param name="types"><span data-ttu-id="a41fd-127">Uma matriz de elementos de enumeração <see cref="T:System.Drawing.Drawing2D.PathPointType" /> que especifica o tipo de cada ponto correspondente na matriz <c>pts</c>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-127">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <c>pts</c> array.</span></span></param>
        <summary><span data-ttu-id="a41fd-128">Inicializa uma nova instância da classe <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> com as matrizes <see cref="T:System.Drawing.Drawing2D.PathPointType" /> e <see cref="T:System.Drawing.Point" /> especificadas.</span><span class="sxs-lookup"><span data-stu-id="a41fd-128">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.Point" /> arrays.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.PointF[] pts, byte[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.PointF[] pts, unsigned int8[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pts As PointF(), types As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(cli::array &lt;System::Drawing::PointF&gt; ^ pts, cli::array &lt;System::Byte&gt; ^ types);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.PointF[]" />
        <Parameter Name="types" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="pts"><span data-ttu-id="a41fd-129">Uma matriz de estruturas <see cref="T:System.Drawing.PointF" /> que define as coordenadas dos pontos que compõem este <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-129">An array of <see cref="T:System.Drawing.PointF" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></param>
        <param name="types"><span data-ttu-id="a41fd-130">Uma matriz de elementos de enumeração <see cref="T:System.Drawing.Drawing2D.PathPointType" /> que especifica o tipo de cada ponto correspondente na matriz <c>pts</c>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-130">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <c>pts</c> array.</span></span></param>
        <summary><span data-ttu-id="a41fd-131">Inicializa uma nova instância da matriz <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> com as matrizes <see cref="T:System.Drawing.Drawing2D.PathPointType" /> e <see cref="T:System.Drawing.PointF" /> especificadas.</span><span class="sxs-lookup"><span data-stu-id="a41fd-131">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> array with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.PointF" /> arrays.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.Point[] pts, byte[] types, System.Drawing.Drawing2D.FillMode fillMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Point[] pts, unsigned int8[] types, valuetype System.Drawing.Drawing2D.FillMode fillMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[],System.Drawing.Drawing2D.FillMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(cli::array &lt;System::Drawing::Point&gt; ^ pts, cli::array &lt;System::Byte&gt; ^ types, System::Drawing::Drawing2D::FillMode fillMode);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.Point[]" />
        <Parameter Name="types" Type="System.Byte[]" />
        <Parameter Name="fillMode" Type="System.Drawing.Drawing2D.FillMode" />
      </Parameters>
      <Docs>
        <param name="pts"><span data-ttu-id="a41fd-132">Uma matriz de estruturas <see cref="T:System.Drawing.Point" /> que define as coordenadas dos pontos que compõem este <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-132">An array of <see cref="T:System.Drawing.Point" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></param>
        <param name="types"><span data-ttu-id="a41fd-133">Uma matriz de elementos de enumeração <see cref="T:System.Drawing.Drawing2D.PathPointType" /> que especifica o tipo de cada ponto correspondente na matriz <c>pts</c>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-133">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <c>pts</c> array.</span></span></param>
        <param name="fillMode"><span data-ttu-id="a41fd-134">Uma enumeração <see cref="T:System.Drawing.Drawing2D.FillMode" /> que especifica como os interiores das formas neste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> são preenchidos.</span><span class="sxs-lookup"><span data-stu-id="a41fd-134">A <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that specifies how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.</span></span></param>
        <summary><span data-ttu-id="a41fd-135">Inicializa uma nova instância da classe <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> com as matrizes <see cref="T:System.Drawing.Drawing2D.PathPointType" /> e <see cref="T:System.Drawing.Point" /> especificadas e com o elemento de enumeração <see cref="T:System.Drawing.Drawing2D.FillMode" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-135">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.Point" /> arrays and with the specified <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.PointF[] pts, byte[] types, System.Drawing.Drawing2D.FillMode fillMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.PointF[] pts, unsigned int8[] types, valuetype System.Drawing.Drawing2D.FillMode fillMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[],System.Drawing.Drawing2D.FillMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(cli::array &lt;System::Drawing::PointF&gt; ^ pts, cli::array &lt;System::Byte&gt; ^ types, System::Drawing::Drawing2D::FillMode fillMode);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.PointF[]" />
        <Parameter Name="types" Type="System.Byte[]" />
        <Parameter Name="fillMode" Type="System.Drawing.Drawing2D.FillMode" />
      </Parameters>
      <Docs>
        <param name="pts"><span data-ttu-id="a41fd-136">Uma matriz de estruturas <see cref="T:System.Drawing.PointF" /> que define as coordenadas dos pontos que compõem este <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-136">An array of <see cref="T:System.Drawing.PointF" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></param>
        <param name="types"><span data-ttu-id="a41fd-137">Uma matriz de elementos de enumeração <see cref="T:System.Drawing.Drawing2D.PathPointType" /> que especifica o tipo de cada ponto correspondente na matriz <c>pts</c>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-137">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <c>pts</c> array.</span></span></param>
        <param name="fillMode"><span data-ttu-id="a41fd-138">Uma enumeração <see cref="T:System.Drawing.Drawing2D.FillMode" /> que especifica como os interiores das formas neste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> são preenchidos.</span><span class="sxs-lookup"><span data-stu-id="a41fd-138">A <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that specifies how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.</span></span></param>
        <summary><span data-ttu-id="a41fd-139">Inicializa uma nova instância da matriz <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> com as matrizes <see cref="T:System.Drawing.Drawing2D.PathPointType" /> e <see cref="T:System.Drawing.PointF" /> especificadas e com o elemento de enumeração <see cref="T:System.Drawing.Drawing2D.FillMode" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-139">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> array with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.PointF" /> arrays and with the specified <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddArc">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a41fd-140">Acrescenta um arco elíptico à figura atual.</span><span class="sxs-lookup"><span data-stu-id="a41fd-140">Appends an elliptical arc to the current figure.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddArc">
      <MemberSignature Language="C#" Value="public void AddArc (System.Drawing.Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArc(valuetype System.Drawing.Rectangle rect, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArc (rect As Rectangle, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArc(System::Drawing::Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="a41fd-141">Um <see cref="T:System.Drawing.Rectangle" /> que representa os limites retangulares da elipse da qual o arco é retirado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-141">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangular bounds of the ellipse from which the arc is taken.</span></span></param>
        <param name="startAngle"><span data-ttu-id="a41fd-142">O ângulo inicial do arco, medido em graus no sentido horário do eixo x.</span><span class="sxs-lookup"><span data-stu-id="a41fd-142">The starting angle of the arc, measured in degrees clockwise from the x-axis.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="a41fd-143">O ângulo entre <c>startAngle</c> e o final do arco.</span><span class="sxs-lookup"><span data-stu-id="a41fd-143">The angle between <c>startAngle</c> and the end of the arc.</span></span></param>
        <summary><span data-ttu-id="a41fd-144">Acrescenta um arco elíptico à figura atual.</span><span class="sxs-lookup"><span data-stu-id="a41fd-144">Appends an elliptical arc to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-145">Se houver linhas anteriores ou curvas na figura, uma linha é adicionada ao conectar o ponto de extremidade do segmento anterior ao início do arco.</span><span class="sxs-lookup"><span data-stu-id="a41fd-145">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</span></span>  
  
 <span data-ttu-id="a41fd-146">O arco é rastreado ao longo do perímetro da elipse delimitada pelo retângulo especificado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-146">The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</span></span> <span data-ttu-id="a41fd-147">O ponto de partida do arco é determinado pelo avaliar no sentido horário do eixo x da elipse (com o ângulo de graus de 0), o número de graus no ângulo inicial.</span><span class="sxs-lookup"><span data-stu-id="a41fd-147">The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</span></span> <span data-ttu-id="a41fd-148">Da mesma forma, o ponto de extremidade está localizado medindo no sentido horário do ponto de partida pelo número de graus em ângulo de flecha.</span><span class="sxs-lookup"><span data-stu-id="a41fd-148">The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</span></span> <span data-ttu-id="a41fd-149">Se o ângulo de flecha é maior que 360 graus ou menor que-360 graus, o arco é varridas para exatamente 360 graus ou-360 graus, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="a41fd-149">If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a41fd-150">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, uma <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="a41fd-150">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="a41fd-151">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="a41fd-151">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="a41fd-152">Cria um retângulo, do qual o arco é definido.</span><span class="sxs-lookup"><span data-stu-id="a41fd-152">Creates a rectangle, from which the arc is defined.</span></span>  
  
-   <span data-ttu-id="a41fd-153">Cria um caminho, `myPath`.</span><span class="sxs-lookup"><span data-stu-id="a41fd-153">Creates a path, `myPath`.</span></span>  
  
-   <span data-ttu-id="a41fd-154">Define um arco elíptico de 180 graus que varre de 0 graus a 180 graus e anexa a um caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-154">Defines a 180-degree elliptical arc that sweeps from 0 degrees to 180 degrees and appends it to a path.</span></span>  
  
-   <span data-ttu-id="a41fd-155">Desenha o caminho para a tela.</span><span class="sxs-lookup"><span data-stu-id="a41fd-155">Draws the path to screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#1)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddArc">
      <MemberSignature Language="C#" Value="public void AddArc (System.Drawing.RectangleF rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArc(valuetype System.Drawing.RectangleF rect, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArc (rect As RectangleF, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArc(System::Drawing::RectangleF rect, float startAngle, float sweepAngle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="a41fd-156">Um <see cref="T:System.Drawing.RectangleF" /> que representa os limites retangulares da elipse da qual o arco é retirado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-156">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangular bounds of the ellipse from which the arc is taken.</span></span></param>
        <param name="startAngle"><span data-ttu-id="a41fd-157">O ângulo inicial do arco, medido em graus no sentido horário do eixo x.</span><span class="sxs-lookup"><span data-stu-id="a41fd-157">The starting angle of the arc, measured in degrees clockwise from the x-axis.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="a41fd-158">O ângulo entre <c>startAngle</c> e o final do arco.</span><span class="sxs-lookup"><span data-stu-id="a41fd-158">The angle between <c>startAngle</c> and the end of the arc.</span></span></param>
        <summary><span data-ttu-id="a41fd-159">Acrescenta um arco elíptico à figura atual.</span><span class="sxs-lookup"><span data-stu-id="a41fd-159">Appends an elliptical arc to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-160">Se houver linhas anteriores ou curvas na figura, uma linha é adicionada ao conectar o ponto de extremidade do segmento anterior ao início do arco.</span><span class="sxs-lookup"><span data-stu-id="a41fd-160">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</span></span>  
  
 <span data-ttu-id="a41fd-161">O arco é rastreado ao longo do perímetro da elipse delimitada pelo retângulo especificado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-161">The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</span></span> <span data-ttu-id="a41fd-162">O ponto de partida do arco é determinado pelo avaliar no sentido horário do eixo x da elipse (com o ângulo de graus de 0), o número de graus no ângulo inicial.</span><span class="sxs-lookup"><span data-stu-id="a41fd-162">The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</span></span> <span data-ttu-id="a41fd-163">Da mesma forma, o ponto de extremidade está localizado medindo no sentido horário do ponto de partida pelo número de graus em ângulo de flecha.</span><span class="sxs-lookup"><span data-stu-id="a41fd-163">The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</span></span> <span data-ttu-id="a41fd-164">Se o ângulo de flecha é maior que 360 graus ou menor que-360 graus, o arco é varridas para exatamente 360 graus ou-360 graus, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="a41fd-164">If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a41fd-165">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-165">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddArc">
      <MemberSignature Language="C#" Value="public void AddArc (int x, int y, int width, int height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArc(int32 x, int32 y, int32 width, int32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArc (x As Integer, y As Integer, width As Integer, height As Integer, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArc(int x, int y, int width, int height, float startAngle, float sweepAngle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="a41fd-166">A coordenada X do canto superior esquerdo da região retangular que define a elipse da qual o arco é retirado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-166">The x-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</span></span></param>
        <param name="y"><span data-ttu-id="a41fd-167">A coordenada y do canto superior esquerdo da região retangular que define a elipse da qual o arco é retirado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-167">The y-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</span></span></param>
        <param name="width"><span data-ttu-id="a41fd-168">A largura da região retangular que define a elipse da qual o arco é retirado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-168">The width of the rectangular region that defines the ellipse from which the arc is drawn.</span></span></param>
        <param name="height"><span data-ttu-id="a41fd-169">A altura da região retangular que define a elipse da qual o arco é retirado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-169">The height of the rectangular region that defines the ellipse from which the arc is drawn.</span></span></param>
        <param name="startAngle"><span data-ttu-id="a41fd-170">O ângulo inicial do arco, medido em graus no sentido horário do eixo x.</span><span class="sxs-lookup"><span data-stu-id="a41fd-170">The starting angle of the arc, measured in degrees clockwise from the x-axis.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="a41fd-171">O ângulo entre <c>startAngle</c> e o final do arco.</span><span class="sxs-lookup"><span data-stu-id="a41fd-171">The angle between <c>startAngle</c> and the end of the arc.</span></span></param>
        <summary><span data-ttu-id="a41fd-172">Acrescenta um arco elíptico à figura atual.</span><span class="sxs-lookup"><span data-stu-id="a41fd-172">Appends an elliptical arc to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-173">Se houver linhas anteriores ou curvas na figura, uma linha é adicionada ao conectar o ponto de extremidade do segmento anterior ao início do arco.</span><span class="sxs-lookup"><span data-stu-id="a41fd-173">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</span></span>  
  
 <span data-ttu-id="a41fd-174">O arco é rastreado ao longo do perímetro da elipse delimitada pelo retângulo especificado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-174">The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</span></span> <span data-ttu-id="a41fd-175">O ponto de partida do arco é determinado pelo avaliar no sentido horário do eixo x da elipse (com o ângulo de graus de 0), o número de graus no ângulo inicial.</span><span class="sxs-lookup"><span data-stu-id="a41fd-175">The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</span></span> <span data-ttu-id="a41fd-176">Da mesma forma, o ponto de extremidade está localizado medindo no sentido horário do ponto de partida pelo número de graus em ângulo de flecha.</span><span class="sxs-lookup"><span data-stu-id="a41fd-176">The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</span></span> <span data-ttu-id="a41fd-177">Se o ângulo de flecha é maior que 360 graus ou menor que-360 graus, o arco é varridas para exatamente 360 graus ou-360 graus, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="a41fd-177">If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a41fd-178">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-178">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddArc">
      <MemberSignature Language="C#" Value="public void AddArc (float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArc(float32 x, float32 y, float32 width, float32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArc (x As Single, y As Single, width As Single, height As Single, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArc(float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="a41fd-179">A coordenada X do canto superior esquerdo da região retangular que define a elipse da qual o arco é retirado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-179">The x-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</span></span></param>
        <param name="y"><span data-ttu-id="a41fd-180">A coordenada y do canto superior esquerdo da região retangular que define a elipse da qual o arco é retirado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-180">The y-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</span></span></param>
        <param name="width"><span data-ttu-id="a41fd-181">A largura da região retangular que define a elipse da qual o arco é retirado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-181">The width of the rectangular region that defines the ellipse from which the arc is drawn.</span></span></param>
        <param name="height"><span data-ttu-id="a41fd-182">A altura da região retangular que define a elipse da qual o arco é retirado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-182">The height of the rectangular region that defines the ellipse from which the arc is drawn.</span></span></param>
        <param name="startAngle"><span data-ttu-id="a41fd-183">O ângulo inicial do arco, medido em graus no sentido horário do eixo x.</span><span class="sxs-lookup"><span data-stu-id="a41fd-183">The starting angle of the arc, measured in degrees clockwise from the x-axis.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="a41fd-184">O ângulo entre <c>startAngle</c> e o final do arco.</span><span class="sxs-lookup"><span data-stu-id="a41fd-184">The angle between <c>startAngle</c> and the end of the arc.</span></span></param>
        <summary><span data-ttu-id="a41fd-185">Acrescenta um arco elíptico à figura atual.</span><span class="sxs-lookup"><span data-stu-id="a41fd-185">Appends an elliptical arc to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-186">Se houver linhas anteriores ou curvas na figura, uma linha é adicionada ao conectar o ponto de extremidade do segmento anterior ao início do arco.</span><span class="sxs-lookup"><span data-stu-id="a41fd-186">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</span></span>  
  
 <span data-ttu-id="a41fd-187">O arco é rastreado ao longo do perímetro da elipse delimitada pelo retângulo especificado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-187">The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</span></span> <span data-ttu-id="a41fd-188">O ponto de partida do arco é determinado pelo avaliar no sentido horário do eixo x da elipse (com o ângulo de graus de 0), o número de graus no ângulo inicial.</span><span class="sxs-lookup"><span data-stu-id="a41fd-188">The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</span></span> <span data-ttu-id="a41fd-189">Da mesma forma, o ponto de extremidade está localizado medindo no sentido horário do ponto de partida pelo número de graus em ângulo de flecha.</span><span class="sxs-lookup"><span data-stu-id="a41fd-189">The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</span></span> <span data-ttu-id="a41fd-190">Se o ângulo de flecha é maior que 360 graus ou menor que-360 graus, o arco é varridas para exatamente 360 graus ou-360 graus, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="a41fd-190">If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a41fd-191">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-191">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddBezier">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a41fd-192">Adiciona uma curva de Bézier cúbica à figura atual.</span><span class="sxs-lookup"><span data-stu-id="a41fd-192">Adds a cubic Bézier curve to the current figure.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddBezier">
      <MemberSignature Language="C#" Value="public void AddBezier (System.Drawing.Point pt1, System.Drawing.Point pt2, System.Drawing.Point pt3, System.Drawing.Point pt4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBezier(valuetype System.Drawing.Point pt1, valuetype System.Drawing.Point pt2, valuetype System.Drawing.Point pt3, valuetype System.Drawing.Point pt4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBezier (pt1 As Point, pt2 As Point, pt3 As Point, pt4 As Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBezier(System::Drawing::Point pt1, System::Drawing::Point pt2, System::Drawing::Point pt3, System::Drawing::Point pt4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt1" Type="System.Drawing.Point" />
        <Parameter Name="pt2" Type="System.Drawing.Point" />
        <Parameter Name="pt3" Type="System.Drawing.Point" />
        <Parameter Name="pt4" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt1"><span data-ttu-id="a41fd-193">Uma <see cref="T:System.Drawing.Point" /> que representa o ponto inicial da curva.</span><span class="sxs-lookup"><span data-stu-id="a41fd-193">A <see cref="T:System.Drawing.Point" /> that represents the starting point of the curve.</span></span></param>
        <param name="pt2"><span data-ttu-id="a41fd-194">Uma <see cref="T:System.Drawing.Point" /> que representa o primeiro ponto de controle da curva.</span><span class="sxs-lookup"><span data-stu-id="a41fd-194">A <see cref="T:System.Drawing.Point" /> that represents the first control point for the curve.</span></span></param>
        <param name="pt3"><span data-ttu-id="a41fd-195">Uma <see cref="T:System.Drawing.Point" /> que representa o segundo ponto de controle da curva.</span><span class="sxs-lookup"><span data-stu-id="a41fd-195">A <see cref="T:System.Drawing.Point" /> that represents the second control point for the curve.</span></span></param>
        <param name="pt4"><span data-ttu-id="a41fd-196">Um <see cref="T:System.Drawing.Point" /> que representa o ponto de extremidade da curva.</span><span class="sxs-lookup"><span data-stu-id="a41fd-196">A <see cref="T:System.Drawing.Point" /> that represents the endpoint of the curve.</span></span></param>
        <summary><span data-ttu-id="a41fd-197">Adiciona uma curva de Bézier cúbica à figura atual.</span><span class="sxs-lookup"><span data-stu-id="a41fd-197">Adds a cubic Bézier curve to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-198">A curva cúbica é construída do primeiro ponto até o quarto ponto usando os pontos de segundo e terceiro como pontos de controle.</span><span class="sxs-lookup"><span data-stu-id="a41fd-198">The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</span></span>  
  
 <span data-ttu-id="a41fd-199">Se houver uma linha anterior ou um segmento de curva na figura, uma linha é adicionada ao conectar o ponto de extremidade do segmento anterior para o ponto de partida da curva cúbica.</span><span class="sxs-lookup"><span data-stu-id="a41fd-199">If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a41fd-200">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-200">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBezier">
      <MemberSignature Language="C#" Value="public void AddBezier (System.Drawing.PointF pt1, System.Drawing.PointF pt2, System.Drawing.PointF pt3, System.Drawing.PointF pt4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBezier(valuetype System.Drawing.PointF pt1, valuetype System.Drawing.PointF pt2, valuetype System.Drawing.PointF pt3, valuetype System.Drawing.PointF pt4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBezier (pt1 As PointF, pt2 As PointF, pt3 As PointF, pt4 As PointF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBezier(System::Drawing::PointF pt1, System::Drawing::PointF pt2, System::Drawing::PointF pt3, System::Drawing::PointF pt4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt1" Type="System.Drawing.PointF" />
        <Parameter Name="pt2" Type="System.Drawing.PointF" />
        <Parameter Name="pt3" Type="System.Drawing.PointF" />
        <Parameter Name="pt4" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="pt1"><span data-ttu-id="a41fd-201">Uma <see cref="T:System.Drawing.PointF" /> que representa o ponto inicial da curva.</span><span class="sxs-lookup"><span data-stu-id="a41fd-201">A <see cref="T:System.Drawing.PointF" /> that represents the starting point of the curve.</span></span></param>
        <param name="pt2"><span data-ttu-id="a41fd-202">Uma <see cref="T:System.Drawing.PointF" /> que representa o primeiro ponto de controle da curva.</span><span class="sxs-lookup"><span data-stu-id="a41fd-202">A <see cref="T:System.Drawing.PointF" /> that represents the first control point for the curve.</span></span></param>
        <param name="pt3"><span data-ttu-id="a41fd-203">Uma <see cref="T:System.Drawing.PointF" /> que representa o segundo ponto de controle da curva.</span><span class="sxs-lookup"><span data-stu-id="a41fd-203">A <see cref="T:System.Drawing.PointF" /> that represents the second control point for the curve.</span></span></param>
        <param name="pt4"><span data-ttu-id="a41fd-204">Um <see cref="T:System.Drawing.PointF" /> que representa o ponto de extremidade da curva.</span><span class="sxs-lookup"><span data-stu-id="a41fd-204">A <see cref="T:System.Drawing.PointF" /> that represents the endpoint of the curve.</span></span></param>
        <summary><span data-ttu-id="a41fd-205">Adiciona uma curva de Bézier cúbica à figura atual.</span><span class="sxs-lookup"><span data-stu-id="a41fd-205">Adds a cubic Bézier curve to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-206">A curva cúbica é construída do primeiro ponto até o quarto ponto usando os pontos de segundo e terceiro como pontos de controle.</span><span class="sxs-lookup"><span data-stu-id="a41fd-206">The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</span></span>  
  
 <span data-ttu-id="a41fd-207">Se houver uma linha anterior ou um segmento de curva na figura, uma linha é adicionada ao conectar o ponto de extremidade do segmento anterior para o ponto de partida da curva cúbica.</span><span class="sxs-lookup"><span data-stu-id="a41fd-207">If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a41fd-208">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-208">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBezier">
      <MemberSignature Language="C#" Value="public void AddBezier (int x1, int y1, int x2, int y2, int x3, int y3, int x4, int y4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBezier(int32 x1, int32 y1, int32 x2, int32 y2, int32 x3, int32 y3, int32 x4, int32 y4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBezier (x1 As Integer, y1 As Integer, x2 As Integer, y2 As Integer, x3 As Integer, y3 As Integer, x4 As Integer, y4 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBezier(int x1, int y1, int x2, int y2, int x3, int y3, int x4, int y4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Int32" />
        <Parameter Name="y1" Type="System.Int32" />
        <Parameter Name="x2" Type="System.Int32" />
        <Parameter Name="y2" Type="System.Int32" />
        <Parameter Name="x3" Type="System.Int32" />
        <Parameter Name="y3" Type="System.Int32" />
        <Parameter Name="x4" Type="System.Int32" />
        <Parameter Name="y4" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x1"><span data-ttu-id="a41fd-209">A coordenada X do ponto de partida da curva.</span><span class="sxs-lookup"><span data-stu-id="a41fd-209">The x-coordinate of the starting point of the curve.</span></span></param>
        <param name="y1"><span data-ttu-id="a41fd-210">A coordenada Y do ponto de partida da curva.</span><span class="sxs-lookup"><span data-stu-id="a41fd-210">The y-coordinate of the starting point of the curve.</span></span></param>
        <param name="x2"><span data-ttu-id="a41fd-211">A coordenada X do primeiro ponto de controle da curva.</span><span class="sxs-lookup"><span data-stu-id="a41fd-211">The x-coordinate of the first control point for the curve.</span></span></param>
        <param name="y2"><span data-ttu-id="a41fd-212">A coordenada Y do primeiro ponto de controle da curva.</span><span class="sxs-lookup"><span data-stu-id="a41fd-212">The y-coordinate of the first control point for the curve.</span></span></param>
        <param name="x3"><span data-ttu-id="a41fd-213">A coordenada X do segundo ponto de controle da curva.</span><span class="sxs-lookup"><span data-stu-id="a41fd-213">The x-coordinate of the second control point for the curve.</span></span></param>
        <param name="y3"><span data-ttu-id="a41fd-214">A coordenada Y do segundo ponto de controle da curva.</span><span class="sxs-lookup"><span data-stu-id="a41fd-214">The y-coordinate of the second control point for the curve.</span></span></param>
        <param name="x4"><span data-ttu-id="a41fd-215">A coordenada X do ponto de extremidade da curva.</span><span class="sxs-lookup"><span data-stu-id="a41fd-215">The x-coordinate of the endpoint of the curve.</span></span></param>
        <param name="y4"><span data-ttu-id="a41fd-216">A coordenada Y do ponto de extremidade da curva.</span><span class="sxs-lookup"><span data-stu-id="a41fd-216">The y-coordinate of the endpoint of the curve.</span></span></param>
        <summary><span data-ttu-id="a41fd-217">Adiciona uma curva de Bézier cúbica à figura atual.</span><span class="sxs-lookup"><span data-stu-id="a41fd-217">Adds a cubic Bézier curve to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-218">A curva cúbica é construída do primeiro ponto até o quarto ponto usando os pontos de segundo e terceiro como pontos de controle.</span><span class="sxs-lookup"><span data-stu-id="a41fd-218">The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</span></span>  
  
 <span data-ttu-id="a41fd-219">Se houver uma linha anterior ou um segmento de curva na figura, uma linha é adicionada ao conectar o ponto de extremidade do segmento anterior para o ponto de partida da curva cúbica.</span><span class="sxs-lookup"><span data-stu-id="a41fd-219">If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a41fd-220">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, uma <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="a41fd-220">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="a41fd-221">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="a41fd-221">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="a41fd-222">Cria um caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-222">Creates a path.</span></span>  
  
-   <span data-ttu-id="a41fd-223">Adiciona uma curva de Bézier cúbica definida por pontos (50, 50), (70, 0), (100, 120) e (150, 50) para o caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-223">Adds a cubic Bézier curve defined by the points (50, 50), (70, 0), (100, 120), and (150, 50) to the path.</span></span>  
  
-   <span data-ttu-id="a41fd-224">Fecha a curva.</span><span class="sxs-lookup"><span data-stu-id="a41fd-224">Closes the curve.</span></span>  
  
-   <span data-ttu-id="a41fd-225">Desenha o caminho para a tela.</span><span class="sxs-lookup"><span data-stu-id="a41fd-225">Draws the path to screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#2)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBezier">
      <MemberSignature Language="C#" Value="public void AddBezier (float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBezier(float32 x1, float32 y1, float32 x2, float32 y2, float32 x3, float32 y3, float32 x4, float32 y4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBezier (x1 As Single, y1 As Single, x2 As Single, y2 As Single, x3 As Single, y3 As Single, x4 As Single, y4 As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBezier(float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Single" />
        <Parameter Name="y1" Type="System.Single" />
        <Parameter Name="x2" Type="System.Single" />
        <Parameter Name="y2" Type="System.Single" />
        <Parameter Name="x3" Type="System.Single" />
        <Parameter Name="y3" Type="System.Single" />
        <Parameter Name="x4" Type="System.Single" />
        <Parameter Name="y4" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x1"><span data-ttu-id="a41fd-226">A coordenada X do ponto de partida da curva.</span><span class="sxs-lookup"><span data-stu-id="a41fd-226">The x-coordinate of the starting point of the curve.</span></span></param>
        <param name="y1"><span data-ttu-id="a41fd-227">A coordenada Y do ponto de partida da curva.</span><span class="sxs-lookup"><span data-stu-id="a41fd-227">The y-coordinate of the starting point of the curve.</span></span></param>
        <param name="x2"><span data-ttu-id="a41fd-228">A coordenada X do primeiro ponto de controle da curva.</span><span class="sxs-lookup"><span data-stu-id="a41fd-228">The x-coordinate of the first control point for the curve.</span></span></param>
        <param name="y2"><span data-ttu-id="a41fd-229">A coordenada Y do primeiro ponto de controle da curva.</span><span class="sxs-lookup"><span data-stu-id="a41fd-229">The y-coordinate of the first control point for the curve.</span></span></param>
        <param name="x3"><span data-ttu-id="a41fd-230">A coordenada X do segundo ponto de controle da curva.</span><span class="sxs-lookup"><span data-stu-id="a41fd-230">The x-coordinate of the second control point for the curve.</span></span></param>
        <param name="y3"><span data-ttu-id="a41fd-231">A coordenada Y do segundo ponto de controle da curva.</span><span class="sxs-lookup"><span data-stu-id="a41fd-231">The y-coordinate of the second control point for the curve.</span></span></param>
        <param name="x4"><span data-ttu-id="a41fd-232">A coordenada X do ponto de extremidade da curva.</span><span class="sxs-lookup"><span data-stu-id="a41fd-232">The x-coordinate of the endpoint of the curve.</span></span></param>
        <param name="y4"><span data-ttu-id="a41fd-233">A coordenada Y do ponto de extremidade da curva.</span><span class="sxs-lookup"><span data-stu-id="a41fd-233">The y-coordinate of the endpoint of the curve.</span></span></param>
        <summary><span data-ttu-id="a41fd-234">Adiciona uma curva de Bézier cúbica à figura atual.</span><span class="sxs-lookup"><span data-stu-id="a41fd-234">Adds a cubic Bézier curve to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-235">A curva cúbica é construída do primeiro ponto até o quarto ponto usando os pontos de segundo e terceiro como pontos de controle.</span><span class="sxs-lookup"><span data-stu-id="a41fd-235">The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</span></span>  
  
 <span data-ttu-id="a41fd-236">Se houver uma linha anterior ou um segmento de curva na figura, uma linha é adicionada ao conectar o ponto de extremidade do segmento anterior para o ponto de partida da curva cúbica.</span><span class="sxs-lookup"><span data-stu-id="a41fd-236">If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a41fd-237">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-237">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddBeziers">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a41fd-238">Adiciona à figura atual uma sequência de curvas de Bézier cúbicas conectadas.</span><span class="sxs-lookup"><span data-stu-id="a41fd-238">Adds a sequence of connected cubic Bézier curves to the current figure.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddBeziers">
      <MemberSignature Language="C#" Value="public void AddBeziers (params System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBeziers(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBeziers (ParamArray points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBeziers(... cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="a41fd-239">Uma matriz de estruturas <see cref="T:System.Drawing.Point" /> que representa os pontos que definem as curvas.</span><span class="sxs-lookup"><span data-stu-id="a41fd-239">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curves.</span></span></param>
        <summary><span data-ttu-id="a41fd-240">Adiciona à figura atual uma sequência de curvas de Bézier cúbicas conectadas.</span><span class="sxs-lookup"><span data-stu-id="a41fd-240">Adds a sequence of connected cubic Bézier curves to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-241">O `points` parâmetro especifica uma matriz de pontos de extremidade e pontos de controle das curvas conectadas.</span><span class="sxs-lookup"><span data-stu-id="a41fd-241">The `points` parameter specifies an array of endpoints and control points of the connected curves.</span></span> <span data-ttu-id="a41fd-242">A primeira curva é construída do primeiro ponto até o quarto ponto na `points` matriz usando os pontos de segundo e terceiro como pontos de controle.</span><span class="sxs-lookup"><span data-stu-id="a41fd-242">The first curve is constructed from the first point to the fourth point in the `points` array by using the second and third points as control points.</span></span> <span data-ttu-id="a41fd-243">Além de ponto de extremidade da curva anterior, cada curva subsequente na sequência deverá exatamente três pontos mais: os dois pontos na sequência são pontos de controle e a terceira é o ponto de extremidade para a curva adicionado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-243">In addition to the endpoint of the previous curve, each subsequent curve in the sequence needs exactly three more points: the next two points in the sequence are control points, and the third is the endpoint for the added curve.</span></span>  
  
 <span data-ttu-id="a41fd-244">Se houver linhas anteriores ou curvas na figura, uma linha é adicionada para conectar o ponto de extremidade do segmento anterior para o ponto de partida da curva cúbica primeiro na sequência.</span><span class="sxs-lookup"><span data-stu-id="a41fd-244">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the first cubic curve in the sequence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a41fd-245">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, uma <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="a41fd-245">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="a41fd-246">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="a41fd-246">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="a41fd-247">Cria uma matriz de sete pontos (representando duas curvas de Bézier conectadas).</span><span class="sxs-lookup"><span data-stu-id="a41fd-247">Creates an array of seven points (representing two connected Bézier curves).</span></span>  
  
-   <span data-ttu-id="a41fd-248">Cria um caminho e adiciona a série de pontos de curva de Bézier no caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-248">Creates a path and adds the series of Bézier curve points to the path.</span></span>  
  
-   <span data-ttu-id="a41fd-249">Desenha o caminho para a tela.</span><span class="sxs-lookup"><span data-stu-id="a41fd-249">Draws the path to screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#3)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBeziers">
      <MemberSignature Language="C#" Value="public void AddBeziers (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBeziers(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBeziers (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBeziers(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="a41fd-250">Uma matriz de estruturas <see cref="T:System.Drawing.PointF" /> que representa os pontos que definem as curvas.</span><span class="sxs-lookup"><span data-stu-id="a41fd-250">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curves.</span></span></param>
        <summary><span data-ttu-id="a41fd-251">Adiciona à figura atual uma sequência de curvas de Bézier cúbicas conectadas.</span><span class="sxs-lookup"><span data-stu-id="a41fd-251">Adds a sequence of connected cubic Bézier curves to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-252">O `points` parâmetro especifica uma matriz de pontos de extremidade e pontos de controle das curvas conectadas.</span><span class="sxs-lookup"><span data-stu-id="a41fd-252">The `points` parameter specifies an array of endpoints and control points of the connected curves.</span></span> <span data-ttu-id="a41fd-253">A primeira curva é construída do primeiro ponto até o quarto ponto na `points` matriz usando os pontos de segundo e terceiro como pontos de controle.</span><span class="sxs-lookup"><span data-stu-id="a41fd-253">The first curve is constructed from the first point to the fourth point in the `points` array by using the second and third points as control points.</span></span> <span data-ttu-id="a41fd-254">Além de ponto de extremidade da curva anterior, cada curva subsequente na sequência deverá exatamente três pontos mais: os dois pontos na sequência são pontos de controle e a terceira é o ponto de extremidade para a curva adicionado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-254">In addition to the endpoint of the previous curve, each subsequent curve in the sequence needs exactly three more points: the next two points in the sequence are control points, and the third is the endpoint for the added curve.</span></span>  
  
 <span data-ttu-id="a41fd-255">Se houver linhas anteriores ou curvas na figura, uma linha é adicionada para conectar o ponto de extremidade do segmento anterior para o ponto de partida da curva cúbica primeiro na sequência.</span><span class="sxs-lookup"><span data-stu-id="a41fd-255">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the first cubic curve in the sequence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a41fd-256">Para ver um exemplo:</span><span class="sxs-lookup"><span data-stu-id="a41fd-256">For an example see:</span></span>  
  
 <xref:System.Drawing.Drawing2D.GraphicsPath.AddBeziers%28System.Drawing.Point%5B%5D%29>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddClosedCurve">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a41fd-257">Adiciona uma curva fechada a esse caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-257">Adds a closed curve to this path.</span></span> <span data-ttu-id="a41fd-258">Uma curva de spline cardinal é usada porque a curva percorre cada um dos pontos da matriz.</span><span class="sxs-lookup"><span data-stu-id="a41fd-258">A cardinal spline curve is used because the curve travels through each of the points in the array.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddClosedCurve">
      <MemberSignature Language="C#" Value="public void AddClosedCurve (System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddClosedCurve(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddClosedCurve (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddClosedCurve(cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="a41fd-259">Uma matriz de estruturas <see cref="T:System.Drawing.Point" /> que representa os pontos que definem a curva.</span><span class="sxs-lookup"><span data-stu-id="a41fd-259">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span></span></param>
        <summary><span data-ttu-id="a41fd-260">Adiciona uma curva fechada a esse caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-260">Adds a closed curve to this path.</span></span> <span data-ttu-id="a41fd-261">Uma curva de spline cardinal é usada porque a curva percorre cada um dos pontos da matriz.</span><span class="sxs-lookup"><span data-stu-id="a41fd-261">A cardinal spline curve is used because the curve travels through each of the points in the array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-262">O usuário deve manter os pontos originais se forem necessários.</span><span class="sxs-lookup"><span data-stu-id="a41fd-262">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="a41fd-263">Os pontos originais são convertidos em pontos de controle de Bézier cúbicos internamente, portanto, não há nenhum mecanismo para retornar os pontos originais.</span><span class="sxs-lookup"><span data-stu-id="a41fd-263">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span> <span data-ttu-id="a41fd-264">Se o primeiro ponto e o último ponto na `points` matriz não são o mesmo ponto, a curva é fechada por conectar-se esses dois pontos.</span><span class="sxs-lookup"><span data-stu-id="a41fd-264">If the first point and the last point in the `points` array are not the same point, the curve is closed by connecting these two points.</span></span> <span data-ttu-id="a41fd-265">O valor de tensão não pode ser definido para esse método e o padrão é um valor equivalente a 0,5.</span><span class="sxs-lookup"><span data-stu-id="a41fd-265">The tension value cannot be set for this method, and defaults to a value equivalent to 0.5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a41fd-266">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-266">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddClosedCurve">
      <MemberSignature Language="C#" Value="public void AddClosedCurve (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddClosedCurve(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddClosedCurve (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddClosedCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="a41fd-267">Uma matriz de estruturas <see cref="T:System.Drawing.PointF" /> que representa os pontos que definem a curva.</span><span class="sxs-lookup"><span data-stu-id="a41fd-267">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span></span></param>
        <summary><span data-ttu-id="a41fd-268">Adiciona uma curva fechada a esse caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-268">Adds a closed curve to this path.</span></span> <span data-ttu-id="a41fd-269">Uma curva de spline cardinal é usada porque a curva percorre cada um dos pontos da matriz.</span><span class="sxs-lookup"><span data-stu-id="a41fd-269">A cardinal spline curve is used because the curve travels through each of the points in the array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-270">O usuário deve manter os pontos originais se forem necessários.</span><span class="sxs-lookup"><span data-stu-id="a41fd-270">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="a41fd-271">Os pontos originais são convertidos em pontos de controle de Bézier cúbicos internamente, portanto, não há nenhum mecanismo para retornar os pontos originais.</span><span class="sxs-lookup"><span data-stu-id="a41fd-271">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span> <span data-ttu-id="a41fd-272">Se o primeiro ponto e o último ponto na `points` matriz não são o mesmo ponto, a curva é fechada por conectar-se esses dois pontos.</span><span class="sxs-lookup"><span data-stu-id="a41fd-272">If the first point and the last point in the `points` array are not the same point, the curve is closed by connecting these two points.</span></span> <span data-ttu-id="a41fd-273">O valor de tensão não pode ser definido para esse método e o padrão é um valor equivalente a 0,5.</span><span class="sxs-lookup"><span data-stu-id="a41fd-273">The tension value cannot be set for this method, and defaults to a value equivalent to 0.5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a41fd-274">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-274">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddClosedCurve">
      <MemberSignature Language="C#" Value="public void AddClosedCurve (System.Drawing.Point[] points, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddClosedCurve(valuetype System.Drawing.Point[] points, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddClosedCurve (points As Point(), tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddClosedCurve(cli::array &lt;System::Drawing::Point&gt; ^ points, float tension);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="a41fd-275">Uma matriz de estruturas <see cref="T:System.Drawing.Point" /> que representa os pontos que definem a curva.</span><span class="sxs-lookup"><span data-stu-id="a41fd-275">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span></span></param>
        <param name="tension"><span data-ttu-id="a41fd-276">Um valor entre 0 e 1, que especifica o quanto a curva se dobra entre pontos, com 0 sendo a curva menor (com canto mais agudo) e 1 sendo a curva mais suave.</span><span class="sxs-lookup"><span data-stu-id="a41fd-276">A value between from 0 through 1 that specifies the amount that the curve bends between points, with 0 being the smallest curve (sharpest corner) and 1 being the smoothest curve.</span></span></param>
        <summary><span data-ttu-id="a41fd-277">Adiciona uma curva fechada a esse caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-277">Adds a closed curve to this path.</span></span> <span data-ttu-id="a41fd-278">Uma curva de spline cardinal é usada porque a curva percorre cada um dos pontos da matriz.</span><span class="sxs-lookup"><span data-stu-id="a41fd-278">A cardinal spline curve is used because the curve travels through each of the points in the array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-279">O usuário deve manter os pontos originais se forem necessários.</span><span class="sxs-lookup"><span data-stu-id="a41fd-279">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="a41fd-280">Os pontos originais são convertidos em pontos de controle de Bézier cúbicos internamente, portanto, não há nenhum mecanismo para retornar os pontos originais.</span><span class="sxs-lookup"><span data-stu-id="a41fd-280">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span> <span data-ttu-id="a41fd-281">Se o primeiro ponto e o último ponto na `points` matriz não são o mesmo ponto, a curva é fechada por conectar-se esses dois pontos.</span><span class="sxs-lookup"><span data-stu-id="a41fd-281">If the first point and the last point in the `points` array are not the same point, the curve is closed by connecting these two points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a41fd-282">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, uma <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="a41fd-282">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="a41fd-283">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="a41fd-283">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="a41fd-284">Cria uma matriz de seis pontos (representando um spline cardeal).</span><span class="sxs-lookup"><span data-stu-id="a41fd-284">Creates an array of six points (representing a cardinal spline).</span></span>  
  
-   <span data-ttu-id="a41fd-285">Cria um caminho e adiciona as curvas spline cardeal fechada ao caminho (fechado do ponto de extremidade para o ponto de partida).</span><span class="sxs-lookup"><span data-stu-id="a41fd-285">Creates a path and adds the closed cardinal spline curves to the path (closed from the endpoint to the starting point).</span></span>  
  
-   <span data-ttu-id="a41fd-286">Desenha o caminho para a tela.</span><span class="sxs-lookup"><span data-stu-id="a41fd-286">Draws the path to screen.</span></span>  
  
 <span data-ttu-id="a41fd-287">Observe que uma tensão de 0,5 é usada.</span><span class="sxs-lookup"><span data-stu-id="a41fd-287">Notice that a tension of 0.5 is used.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#4)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddClosedCurve">
      <MemberSignature Language="C#" Value="public void AddClosedCurve (System.Drawing.PointF[] points, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddClosedCurve(valuetype System.Drawing.PointF[] points, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddClosedCurve (points As PointF(), tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddClosedCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points, float tension);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="a41fd-288">Uma matriz de estruturas <see cref="T:System.Drawing.PointF" /> que representa os pontos que definem a curva.</span><span class="sxs-lookup"><span data-stu-id="a41fd-288">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span></span></param>
        <param name="tension"><span data-ttu-id="a41fd-289">Um valor entre 0 e 1, que especifica o quanto a curva se dobra entre pontos, com 0 sendo a curva menor (com canto mais agudo) e 1 sendo a curva mais suave.</span><span class="sxs-lookup"><span data-stu-id="a41fd-289">A value between from 0 through 1 that specifies the amount that the curve bends between points, with 0 being the smallest curve (sharpest corner) and 1 being the smoothest curve.</span></span></param>
        <summary><span data-ttu-id="a41fd-290">Adiciona uma curva fechada a esse caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-290">Adds a closed curve to this path.</span></span> <span data-ttu-id="a41fd-291">Uma curva de spline cardinal é usada porque a curva percorre cada um dos pontos da matriz.</span><span class="sxs-lookup"><span data-stu-id="a41fd-291">A cardinal spline curve is used because the curve travels through each of the points in the array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-292">O usuário deve manter os pontos originais se forem necessários.</span><span class="sxs-lookup"><span data-stu-id="a41fd-292">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="a41fd-293">Os pontos originais são convertidos em pontos de controle de Bézier cúbicos internamente, portanto, não há nenhum mecanismo para retornar os pontos originais.</span><span class="sxs-lookup"><span data-stu-id="a41fd-293">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span> <span data-ttu-id="a41fd-294">Se o primeiro ponto e o último ponto na `points` matriz não são o mesmo ponto, a curva é fechada por conectar-se esses dois pontos.</span><span class="sxs-lookup"><span data-stu-id="a41fd-294">If the first point and the last point in the `points` array are not the same point, the curve is closed by connecting these two points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a41fd-295">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-295">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddCurve">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a41fd-296">Adiciona uma curva de spline à figura atual.</span><span class="sxs-lookup"><span data-stu-id="a41fd-296">Adds a spline curve to the current figure.</span></span> <span data-ttu-id="a41fd-297">Uma curva de spline cardinal é usada porque a curva percorre cada um dos pontos da matriz.</span><span class="sxs-lookup"><span data-stu-id="a41fd-297">A cardinal spline curve is used because the curve travels through each of the points in the array.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="a41fd-298">Uma matriz de estruturas <see cref="T:System.Drawing.Point" /> que representa os pontos que definem a curva.</span><span class="sxs-lookup"><span data-stu-id="a41fd-298">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span></span></param>
        <summary><span data-ttu-id="a41fd-299">Adiciona uma curva de spline à figura atual.</span><span class="sxs-lookup"><span data-stu-id="a41fd-299">Adds a spline curve to the current figure.</span></span> <span data-ttu-id="a41fd-300">Uma curva de spline cardinal é usada porque a curva percorre cada um dos pontos da matriz.</span><span class="sxs-lookup"><span data-stu-id="a41fd-300">A cardinal spline curve is used because the curve travels through each of the points in the array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-301">O usuário deve manter os pontos originais se forem necessários.</span><span class="sxs-lookup"><span data-stu-id="a41fd-301">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="a41fd-302">Os pontos originais são convertidos em pontos de controle de Bézier cúbicos internamente, portanto, não há nenhum mecanismo para retornar os pontos originais.</span><span class="sxs-lookup"><span data-stu-id="a41fd-302">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a41fd-303">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-303">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="a41fd-304">Uma matriz de estruturas <see cref="T:System.Drawing.PointF" /> que representa os pontos que definem a curva.</span><span class="sxs-lookup"><span data-stu-id="a41fd-304">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span></span></param>
        <summary><span data-ttu-id="a41fd-305">Adiciona uma curva de spline à figura atual.</span><span class="sxs-lookup"><span data-stu-id="a41fd-305">Adds a spline curve to the current figure.</span></span> <span data-ttu-id="a41fd-306">Uma curva de spline cardinal é usada porque a curva percorre cada um dos pontos da matriz.</span><span class="sxs-lookup"><span data-stu-id="a41fd-306">A cardinal spline curve is used because the curve travels through each of the points in the array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-307">O usuário deve manter os pontos originais se forem necessários.</span><span class="sxs-lookup"><span data-stu-id="a41fd-307">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="a41fd-308">Os pontos originais são convertidos em pontos de controle de Bézier cúbicos internamente, portanto, não há nenhum mecanismo para retornar os pontos originais.</span><span class="sxs-lookup"><span data-stu-id="a41fd-308">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a41fd-309">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-309">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.Point[] points, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.Point[] points, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As Point(), tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::Point&gt; ^ points, float tension);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="a41fd-310">Uma matriz de estruturas <see cref="T:System.Drawing.Point" /> que representa os pontos que definem a curva.</span><span class="sxs-lookup"><span data-stu-id="a41fd-310">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span></span></param>
        <param name="tension"><span data-ttu-id="a41fd-311">Um valor que especifica quanto a curva se dobra entre os pontos de controle.</span><span class="sxs-lookup"><span data-stu-id="a41fd-311">A value that specifies the amount that the curve bends between control points.</span></span> <span data-ttu-id="a41fd-312">Valores maiores que 1 produzem resultados imprevisíveis.</span><span class="sxs-lookup"><span data-stu-id="a41fd-312">Values greater than 1 produce unpredictable results.</span></span></param>
        <summary><span data-ttu-id="a41fd-313">Adiciona uma curva de spline à figura atual.</span><span class="sxs-lookup"><span data-stu-id="a41fd-313">Adds a spline curve to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-314">O usuário deve manter os pontos originais se forem necessários.</span><span class="sxs-lookup"><span data-stu-id="a41fd-314">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="a41fd-315">Os pontos originais são convertidos em pontos de controle de Bézier cúbicos internamente, portanto, não há nenhum mecanismo para retornar os pontos originais.</span><span class="sxs-lookup"><span data-stu-id="a41fd-315">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a41fd-316">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-316">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.PointF[] points, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.PointF[] points, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As PointF(), tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points, float tension);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="a41fd-317">Uma matriz de estruturas <see cref="T:System.Drawing.PointF" /> que representa os pontos que definem a curva.</span><span class="sxs-lookup"><span data-stu-id="a41fd-317">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span></span></param>
        <param name="tension"><span data-ttu-id="a41fd-318">Um valor que especifica quanto a curva se dobra entre os pontos de controle.</span><span class="sxs-lookup"><span data-stu-id="a41fd-318">A value that specifies the amount that the curve bends between control points.</span></span> <span data-ttu-id="a41fd-319">Valores maiores que 1 produzem resultados imprevisíveis.</span><span class="sxs-lookup"><span data-stu-id="a41fd-319">Values greater than 1 produce unpredictable results.</span></span></param>
        <summary><span data-ttu-id="a41fd-320">Adiciona uma curva de spline à figura atual.</span><span class="sxs-lookup"><span data-stu-id="a41fd-320">Adds a spline curve to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-321">O usuário deve manter os pontos originais se forem necessários.</span><span class="sxs-lookup"><span data-stu-id="a41fd-321">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="a41fd-322">Os pontos originais são convertidos em pontos de controle de Bézier cúbicos internamente, portanto, não há nenhum mecanismo para retornar os pontos originais.</span><span class="sxs-lookup"><span data-stu-id="a41fd-322">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a41fd-323">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-323">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.Point[] points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.Point[] points, int32 offset, int32 numberOfSegments, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As Point(), offset As Integer, numberOfSegments As Integer, tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::Point&gt; ^ points, int offset, int numberOfSegments, float tension);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="numberOfSegments" Type="System.Int32" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="a41fd-324">Uma matriz de estruturas <see cref="T:System.Drawing.Point" /> que representa os pontos que definem a curva.</span><span class="sxs-lookup"><span data-stu-id="a41fd-324">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span></span></param>
        <param name="offset"><span data-ttu-id="a41fd-325">O índice do elemento na matriz <c>points</c> que é usada como o primeiro ponto da curva.</span><span class="sxs-lookup"><span data-stu-id="a41fd-325">The index of the element in the <c>points</c> array that is used as the first point in the curve.</span></span></param>
        <param name="numberOfSegments"><span data-ttu-id="a41fd-326">Um valor que especifica quanto a curva se dobra entre os pontos de controle.</span><span class="sxs-lookup"><span data-stu-id="a41fd-326">A value that specifies the amount that the curve bends between control points.</span></span> <span data-ttu-id="a41fd-327">Valores maiores que 1 produzem resultados imprevisíveis.</span><span class="sxs-lookup"><span data-stu-id="a41fd-327">Values greater than 1 produce unpredictable results.</span></span></param>
        <param name="tension"><span data-ttu-id="a41fd-328">Um valor que especifica quanto a curva se dobra entre os pontos de controle.</span><span class="sxs-lookup"><span data-stu-id="a41fd-328">A value that specifies the amount that the curve bends between control points.</span></span> <span data-ttu-id="a41fd-329">Valores maiores que 1 produzem resultados imprevisíveis.</span><span class="sxs-lookup"><span data-stu-id="a41fd-329">Values greater than 1 produce unpredictable results.</span></span></param>
        <summary><span data-ttu-id="a41fd-330">Adiciona uma curva de spline à figura atual.</span><span class="sxs-lookup"><span data-stu-id="a41fd-330">Adds a spline curve to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-331">O usuário deve manter os pontos originais se forem necessários.</span><span class="sxs-lookup"><span data-stu-id="a41fd-331">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="a41fd-332">Os pontos originais são convertidos em pontos de controle de Bézier cúbicos internamente, portanto, não há nenhum mecanismo para retornar os pontos originais.</span><span class="sxs-lookup"><span data-stu-id="a41fd-332">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
 <span data-ttu-id="a41fd-333">A curva começa no ponto na matriz especificada pelo `offset` parâmetro e inclui o número de pontos (segmentos) especificado por `numberOfSegments`.</span><span class="sxs-lookup"><span data-stu-id="a41fd-333">The curve begins at the point in the array specified by the `offset` parameter and includes the number of points (segments) specified by `numberOfSegments`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a41fd-334">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, uma <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="a41fd-334">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="a41fd-335">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="a41fd-335">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="a41fd-336">Cria uma matriz de quatro pontos (representando um spline cardeal).</span><span class="sxs-lookup"><span data-stu-id="a41fd-336">Creates an array of four points (representing a cardinal spline).</span></span>  
  
-   <span data-ttu-id="a41fd-337">Cria um caminho e usando a matriz de pontos, adiciona a curva ao caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-337">Creates a path and using the array of points, adds the curve to the path.</span></span>  
  
-   <span data-ttu-id="a41fd-338">Desenha o caminho para a tela.</span><span class="sxs-lookup"><span data-stu-id="a41fd-338">Draws the path to the screen.</span></span>  
  
 <span data-ttu-id="a41fd-339">Observe que enquanto a matriz contém quatro pontos, há apenas três segmentos, que é o número especificado no terceiro argumento da chamada para <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%2A>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-339">Notice that while the array holds four points, there are only three segments, which is the number specified in the third argument of the call to <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%2A>.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#5)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.PointF[] points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.PointF[] points, int32 offset, int32 numberOfSegments, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As PointF(), offset As Integer, numberOfSegments As Integer, tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points, int offset, int numberOfSegments, float tension);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="numberOfSegments" Type="System.Int32" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="a41fd-340">Uma matriz de estruturas <see cref="T:System.Drawing.PointF" /> que representa os pontos que definem a curva.</span><span class="sxs-lookup"><span data-stu-id="a41fd-340">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span></span></param>
        <param name="offset"><span data-ttu-id="a41fd-341">O índice do elemento na matriz <c>points</c> que é usada como o primeiro ponto da curva.</span><span class="sxs-lookup"><span data-stu-id="a41fd-341">The index of the element in the <c>points</c> array that is used as the first point in the curve.</span></span></param>
        <param name="numberOfSegments"><span data-ttu-id="a41fd-342">O número de segmentos usados para desenhar a curva.</span><span class="sxs-lookup"><span data-stu-id="a41fd-342">The number of segments used to draw the curve.</span></span> <span data-ttu-id="a41fd-343">Um segmento pode ser pensado como uma linha conectando dois pontos.</span><span class="sxs-lookup"><span data-stu-id="a41fd-343">A segment can be thought of as a line connecting two points.</span></span></param>
        <param name="tension"><span data-ttu-id="a41fd-344">Um valor que especifica quanto a curva se dobra entre os pontos de controle.</span><span class="sxs-lookup"><span data-stu-id="a41fd-344">A value that specifies the amount that the curve bends between control points.</span></span> <span data-ttu-id="a41fd-345">Valores maiores que 1 produzem resultados imprevisíveis.</span><span class="sxs-lookup"><span data-stu-id="a41fd-345">Values greater than 1 produce unpredictable results.</span></span></param>
        <summary><span data-ttu-id="a41fd-346">Adiciona uma curva de spline à figura atual.</span><span class="sxs-lookup"><span data-stu-id="a41fd-346">Adds a spline curve to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-347">O usuário deve manter os pontos originais se forem necessários.</span><span class="sxs-lookup"><span data-stu-id="a41fd-347">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="a41fd-348">Os pontos originais são convertidos em pontos de controle de Bézier cúbicos internamente, portanto, não há nenhum mecanismo para retornar os pontos originais.</span><span class="sxs-lookup"><span data-stu-id="a41fd-348">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
 <span data-ttu-id="a41fd-349">A curva começa no ponto na matriz especificada por `offset`e inclui o número de pontos (segmentos) especificado por `numberOfSegments`.</span><span class="sxs-lookup"><span data-stu-id="a41fd-349">The curve begins at the point in the array specified by `offset`, and includes the number of points (segments) specified by `numberOfSegments`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a41fd-350">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-350">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddEllipse">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a41fd-351">Adiciona uma elipse ao caminho atual.</span><span class="sxs-lookup"><span data-stu-id="a41fd-351">Adds an ellipse to the current path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddEllipse">
      <MemberSignature Language="C#" Value="public void AddEllipse (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEllipse(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEllipse (rect As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEllipse(System::Drawing::Rectangle rect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="a41fd-352">Um <see cref="T:System.Drawing.Rectangle" /> que representa o retângulo delimitador que define a elipse.</span><span class="sxs-lookup"><span data-stu-id="a41fd-352">A <see cref="T:System.Drawing.Rectangle" /> that represents the bounding rectangle that defines the ellipse.</span></span></param>
        <summary><span data-ttu-id="a41fd-353">Adiciona uma elipse ao caminho atual.</span><span class="sxs-lookup"><span data-stu-id="a41fd-353">Adds an ellipse to the current path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a41fd-354">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, uma <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="a41fd-354">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="a41fd-355">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="a41fd-355">The code performs the following actions:</span></span>  
  
 <span data-ttu-id="a41fd-356">Cria um retângulo que define uma elipse.</span><span class="sxs-lookup"><span data-stu-id="a41fd-356">Creates a bounding rectangle that defines an ellipse.</span></span>  
  
 <span data-ttu-id="a41fd-357">Cria um caminho e adiciona a elipse ao caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-357">Creates a path and adds the ellipse to the path.</span></span>  
  
 <span data-ttu-id="a41fd-358">Desenha o caminho para a tela.</span><span class="sxs-lookup"><span data-stu-id="a41fd-358">Draws the path to screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#6)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEllipse">
      <MemberSignature Language="C#" Value="public void AddEllipse (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEllipse(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEllipse (rect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEllipse(System::Drawing::RectangleF rect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="a41fd-359">Um <see cref="T:System.Drawing.RectangleF" /> que representa o retângulo delimitador que define a elipse.</span><span class="sxs-lookup"><span data-stu-id="a41fd-359">A <see cref="T:System.Drawing.RectangleF" /> that represents the bounding rectangle that defines the ellipse.</span></span></param>
        <summary><span data-ttu-id="a41fd-360">Adiciona uma elipse ao caminho atual.</span><span class="sxs-lookup"><span data-stu-id="a41fd-360">Adds an ellipse to the current path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a41fd-361">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-361">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEllipse">
      <MemberSignature Language="C#" Value="public void AddEllipse (int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEllipse(int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEllipse (x As Integer, y As Integer, width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEllipse(int x, int y, int width, int height);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="a41fd-362">A coordenada X do canto superior esquerdo do retângulo delimitador que define a elipse.</span><span class="sxs-lookup"><span data-stu-id="a41fd-362">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="y"><span data-ttu-id="a41fd-363">A coordenada y do canto superior esquerdo do retângulo delimitador que define a elipse.</span><span class="sxs-lookup"><span data-stu-id="a41fd-363">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="width"><span data-ttu-id="a41fd-364">A largura do retângulo delimitador que define a elipse.</span><span class="sxs-lookup"><span data-stu-id="a41fd-364">The width of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="height"><span data-ttu-id="a41fd-365">A altura do retângulo delimitador que define a elipse.</span><span class="sxs-lookup"><span data-stu-id="a41fd-365">The height of the bounding rectangle that defines the ellipse.</span></span></param>
        <summary><span data-ttu-id="a41fd-366">Adiciona uma elipse ao caminho atual.</span><span class="sxs-lookup"><span data-stu-id="a41fd-366">Adds an ellipse to the current path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a41fd-367">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-367">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEllipse">
      <MemberSignature Language="C#" Value="public void AddEllipse (float x, float y, float width, float height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEllipse(float32 x, float32 y, float32 width, float32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEllipse (x As Single, y As Single, width As Single, height As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEllipse(float x, float y, float width, float height);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="a41fd-368">A coordenada X do canto superior esquerdo do retângulo delimitador que define a elipse.</span><span class="sxs-lookup"><span data-stu-id="a41fd-368">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="y"><span data-ttu-id="a41fd-369">A coordenada y do canto superior esquerdo do retângulo delimitador que define a elipse.</span><span class="sxs-lookup"><span data-stu-id="a41fd-369">The y-coordinate of the upper left corner of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="width"><span data-ttu-id="a41fd-370">A largura do retângulo delimitador que define a elipse.</span><span class="sxs-lookup"><span data-stu-id="a41fd-370">The width of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="height"><span data-ttu-id="a41fd-371">A altura do retângulo delimitador que define a elipse.</span><span class="sxs-lookup"><span data-stu-id="a41fd-371">The height of the bounding rectangle that defines the ellipse.</span></span></param>
        <summary><span data-ttu-id="a41fd-372">Adiciona uma elipse ao caminho atual.</span><span class="sxs-lookup"><span data-stu-id="a41fd-372">Adds an ellipse to the current path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a41fd-373">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-373">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddLine">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a41fd-374">Acrescenta um segmento de linha para esse <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-374">Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddLine">
      <MemberSignature Language="C#" Value="public void AddLine (System.Drawing.Point pt1, System.Drawing.Point pt2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLine(valuetype System.Drawing.Point pt1, valuetype System.Drawing.Point pt2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.Point,System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLine (pt1 As Point, pt2 As Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLine(System::Drawing::Point pt1, System::Drawing::Point pt2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt1" Type="System.Drawing.Point" />
        <Parameter Name="pt2" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt1"><span data-ttu-id="a41fd-375">Um <see cref="T:System.Drawing.Point" /> que representa a posição inicial da linha.</span><span class="sxs-lookup"><span data-stu-id="a41fd-375">A <see cref="T:System.Drawing.Point" /> that represents the starting point of the line.</span></span></param>
        <param name="pt2"><span data-ttu-id="a41fd-376">Um <see cref="T:System.Drawing.Point" /> que representa o ponto de extremidade da linha.</span><span class="sxs-lookup"><span data-stu-id="a41fd-376">A <see cref="T:System.Drawing.Point" /> that represents the endpoint of the line.</span></span></param>
        <summary><span data-ttu-id="a41fd-377">Acrescenta um segmento de linha para esse <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-377">Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-378">Este método adiciona o segmento de linha definido por pontos especificados ao final deste <xref:System.Drawing.Drawing2D.GraphicsPath>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-378">This method adds the line segment defined by the specified points to the end of this <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span> <span data-ttu-id="a41fd-379">Se houver linhas anteriores ou curvas no <xref:System.Drawing.Drawing2D.GraphicsPath>, um segmento de linha é desenhado para conectar-se o último ponto no caminho até o primeiro ponto em que o novo segmento de linha.</span><span class="sxs-lookup"><span data-stu-id="a41fd-379">If there are previous lines or curves in the <xref:System.Drawing.Drawing2D.GraphicsPath>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a41fd-380">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-380">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLine">
      <MemberSignature Language="C#" Value="public void AddLine (System.Drawing.PointF pt1, System.Drawing.PointF pt2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLine(valuetype System.Drawing.PointF pt1, valuetype System.Drawing.PointF pt2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.PointF,System.Drawing.PointF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLine (pt1 As PointF, pt2 As PointF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLine(System::Drawing::PointF pt1, System::Drawing::PointF pt2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt1" Type="System.Drawing.PointF" />
        <Parameter Name="pt2" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="pt1"><span data-ttu-id="a41fd-381">Um <see cref="T:System.Drawing.PointF" /> que representa a posição inicial da linha.</span><span class="sxs-lookup"><span data-stu-id="a41fd-381">A <see cref="T:System.Drawing.PointF" /> that represents the starting point of the line.</span></span></param>
        <param name="pt2"><span data-ttu-id="a41fd-382">Um <see cref="T:System.Drawing.PointF" /> que representa o ponto de extremidade da linha.</span><span class="sxs-lookup"><span data-stu-id="a41fd-382">A <see cref="T:System.Drawing.PointF" /> that represents the endpoint of the line.</span></span></param>
        <summary><span data-ttu-id="a41fd-383">Acrescenta um segmento de linha para esse <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-383">Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-384">Este método adiciona o segmento de linha definido por pontos especificados ao final deste <xref:System.Drawing.Drawing2D.GraphicsPath>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-384">This method adds the line segment defined by the specified points to the end of this <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span> <span data-ttu-id="a41fd-385">Se houver linhas anteriores ou curvas no <xref:System.Drawing.Drawing2D.GraphicsPath>, um segmento de linha é desenhado para conectar-se o último ponto no caminho até o primeiro ponto em que o novo segmento de linha.</span><span class="sxs-lookup"><span data-stu-id="a41fd-385">If there are previous lines or curves in the <xref:System.Drawing.Drawing2D.GraphicsPath>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a41fd-386">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-386">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLine">
      <MemberSignature Language="C#" Value="public void AddLine (int x1, int y1, int x2, int y2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLine(int32 x1, int32 y1, int32 x2, int32 y2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLine (x1 As Integer, y1 As Integer, x2 As Integer, y2 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLine(int x1, int y1, int x2, int y2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Int32" />
        <Parameter Name="y1" Type="System.Int32" />
        <Parameter Name="x2" Type="System.Int32" />
        <Parameter Name="y2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x1"><span data-ttu-id="a41fd-387">A coordenada X do ponto de partida da linha.</span><span class="sxs-lookup"><span data-stu-id="a41fd-387">The x-coordinate of the starting point of the line.</span></span></param>
        <param name="y1"><span data-ttu-id="a41fd-388">A coordenada y do ponto de partida da linha.</span><span class="sxs-lookup"><span data-stu-id="a41fd-388">The y-coordinate of the starting point of the line.</span></span></param>
        <param name="x2"><span data-ttu-id="a41fd-389">A coordenada X do ponto de extremidade da linha.</span><span class="sxs-lookup"><span data-stu-id="a41fd-389">The x-coordinate of the endpoint of the line.</span></span></param>
        <param name="y2"><span data-ttu-id="a41fd-390">A coordenada y do ponto de extremidade da linha.</span><span class="sxs-lookup"><span data-stu-id="a41fd-390">The y-coordinate of the endpoint of the line.</span></span></param>
        <summary><span data-ttu-id="a41fd-391">Acrescenta um segmento de linha para a figura atual.</span><span class="sxs-lookup"><span data-stu-id="a41fd-391">Appends a line segment to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-392">Este método adiciona o segmento de linha definido por pontos especificados ao final da figura atual.</span><span class="sxs-lookup"><span data-stu-id="a41fd-392">This method adds the line segment defined by the specified points to the end of the current figure.</span></span> <span data-ttu-id="a41fd-393">Se houver linhas anteriores ou curvas no <xref:System.Drawing.Drawing2D.GraphicsPath>, um segmento de linha é desenhado para conectar-se o último ponto no caminho até o primeiro ponto em que o novo segmento de linha.</span><span class="sxs-lookup"><span data-stu-id="a41fd-393">If there are previous lines or curves in the <xref:System.Drawing.Drawing2D.GraphicsPath>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a41fd-394">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, uma <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="a41fd-394">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="a41fd-395">O código cria um caminho, adiciona três linhas que formam um triângulo e, em seguida, desenha o caminho para a tela.</span><span class="sxs-lookup"><span data-stu-id="a41fd-395">The code creates a path, adds three lines that form a triangle, and then draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#7)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLine">
      <MemberSignature Language="C#" Value="public void AddLine (float x1, float y1, float x2, float y2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLine(float32 x1, float32 y1, float32 x2, float32 y2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLine (x1 As Single, y1 As Single, x2 As Single, y2 As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLine(float x1, float y1, float x2, float y2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Single" />
        <Parameter Name="y1" Type="System.Single" />
        <Parameter Name="x2" Type="System.Single" />
        <Parameter Name="y2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x1"><span data-ttu-id="a41fd-396">A coordenada X do ponto de partida da linha.</span><span class="sxs-lookup"><span data-stu-id="a41fd-396">The x-coordinate of the starting point of the line.</span></span></param>
        <param name="y1"><span data-ttu-id="a41fd-397">A coordenada y do ponto de partida da linha.</span><span class="sxs-lookup"><span data-stu-id="a41fd-397">The y-coordinate of the starting point of the line.</span></span></param>
        <param name="x2"><span data-ttu-id="a41fd-398">A coordenada X do ponto de extremidade da linha.</span><span class="sxs-lookup"><span data-stu-id="a41fd-398">The x-coordinate of the endpoint of the line.</span></span></param>
        <param name="y2"><span data-ttu-id="a41fd-399">A coordenada y do ponto de extremidade da linha.</span><span class="sxs-lookup"><span data-stu-id="a41fd-399">The y-coordinate of the endpoint of the line.</span></span></param>
        <summary><span data-ttu-id="a41fd-400">Acrescenta um segmento de linha para esse <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-400">Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-401">Este método adiciona o segmento de linha definido por pontos especificados ao final deste <xref:System.Drawing.Drawing2D.GraphicsPath>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-401">This method adds the line segment defined by the specified points to the end of this <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span> <span data-ttu-id="a41fd-402">Se houver linhas anteriores ou curvas no <xref:System.Drawing.Drawing2D.GraphicsPath>, um segmento de linha é desenhado para conectar-se o último ponto no caminho até o primeiro ponto em que o novo segmento de linha.</span><span class="sxs-lookup"><span data-stu-id="a41fd-402">If there are previous lines or curves in the <xref:System.Drawing.Drawing2D.GraphicsPath>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a41fd-403">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-403">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddLines">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a41fd-404">Acrescenta uma série de segmentos de linha conectados ao final deste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-404">Appends a series of connected line segments to the end of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddLines">
      <MemberSignature Language="C#" Value="public void AddLines (System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLines(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLines (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLines(cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="a41fd-405">Uma matriz de estruturas <see cref="T:System.Drawing.Point" /> que representa os pontos que definem os segmentos de linha a serem adicionados.</span><span class="sxs-lookup"><span data-stu-id="a41fd-405">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the line segments to add.</span></span></param>
        <summary><span data-ttu-id="a41fd-406">Acrescenta uma série de segmentos de linha conectados ao final deste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-406">Appends a series of connected line segments to the end of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-407">Se houver linhas anteriores ou curvas na figura, uma linha é adicionada para conectar o ponto de extremidade do segmento o ponto de partida da linha anterior.</span><span class="sxs-lookup"><span data-stu-id="a41fd-407">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment the starting point of the line.</span></span> <span data-ttu-id="a41fd-408">O `points` parâmetro especifica uma matriz de pontos de extremidade.</span><span class="sxs-lookup"><span data-stu-id="a41fd-408">The `points` parameter specifies an array of endpoints.</span></span> <span data-ttu-id="a41fd-409">Os dois primeiros especificam a primeira linha.</span><span class="sxs-lookup"><span data-stu-id="a41fd-409">The first two specify the first line.</span></span> <span data-ttu-id="a41fd-410">Cada ponto adicional que especifica o ponto de extremidade de um segmento de linha cujo ponto de partida é o ponto de extremidade da linha anterior.</span><span class="sxs-lookup"><span data-stu-id="a41fd-410">Each additional point specifies the endpoint of a line segment whose starting point is the endpoint of the previous line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a41fd-411">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, uma <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="a41fd-411">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="a41fd-412">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="a41fd-412">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="a41fd-413">Cria uma matriz de quatro pontos que descrevem um triângulo.</span><span class="sxs-lookup"><span data-stu-id="a41fd-413">Creates an array of four points that describe a triangle.</span></span>  
  
-   <span data-ttu-id="a41fd-414">Cria um caminho e adiciona o conjunto de linhas.</span><span class="sxs-lookup"><span data-stu-id="a41fd-414">Creates a path and adds the array of lines.</span></span>  
  
-   <span data-ttu-id="a41fd-415">Desenha o caminho para a tela.</span><span class="sxs-lookup"><span data-stu-id="a41fd-415">Draws the path to screen.</span></span>  
  
 <span data-ttu-id="a41fd-416">Observe que cada linha após o primeiro ponto usa o ponto anterior como o ponto de partida e o novo ponto como o ponto de extremidade.</span><span class="sxs-lookup"><span data-stu-id="a41fd-416">Notice that each line after the first point uses the previous point as the starting point and the new point as the endpoint.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#8)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLines">
      <MemberSignature Language="C#" Value="public void AddLines (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLines(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLines (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLines(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="a41fd-417">Uma matriz de estruturas <see cref="T:System.Drawing.PointF" /> que representa os pontos que definem os segmentos de linha a serem adicionados.</span><span class="sxs-lookup"><span data-stu-id="a41fd-417">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the line segments to add.</span></span></param>
        <summary><span data-ttu-id="a41fd-418">Acrescenta uma série de segmentos de linha conectados ao final deste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-418">Appends a series of connected line segments to the end of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-419">Se houver linhas anteriores ou curvas na figura, uma linha é adicionada para conectar o ponto de extremidade do segmento o ponto de partida da linha anterior.</span><span class="sxs-lookup"><span data-stu-id="a41fd-419">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment the starting point of the line.</span></span> <span data-ttu-id="a41fd-420">O `points` parâmetro especifica uma matriz de pontos de extremidade.</span><span class="sxs-lookup"><span data-stu-id="a41fd-420">The `points` parameter specifies an array of endpoints.</span></span> <span data-ttu-id="a41fd-421">Os dois primeiros especificam a primeira linha.</span><span class="sxs-lookup"><span data-stu-id="a41fd-421">The first two specify the first line.</span></span> <span data-ttu-id="a41fd-422">Cada ponto adicional que especifica o ponto de extremidade de um segmento de linha cujo ponto de partida é o ponto de extremidade da linha anterior.</span><span class="sxs-lookup"><span data-stu-id="a41fd-422">Each additional point specifies the endpoint of a line segment whose starting point is the endpoint of the previous line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a41fd-423">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddLines%28System.Drawing.Point%5B%5D%29>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-423">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddLines%28System.Drawing.Point%5B%5D%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPath">
      <MemberSignature Language="C#" Value="public void AddPath (System.Drawing.Drawing2D.GraphicsPath addingPath, bool connect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPath(class System.Drawing.Drawing2D.GraphicsPath addingPath, bool connect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPath (addingPath As GraphicsPath, connect As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPath(System::Drawing::Drawing2D::GraphicsPath ^ addingPath, bool connect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addingPath" Type="System.Drawing.Drawing2D.GraphicsPath" />
        <Parameter Name="connect" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="addingPath"><span data-ttu-id="a41fd-424">O <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-424">The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> to add.</span></span></param>
        <param name="connect"><span data-ttu-id="a41fd-425">Um valor booliano que especifica se a primeira figura no caminho adicionado faz parte da figura último nesse caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-425">A Boolean value that specifies whether the first figure in the added path is part of the last figure in this path.</span></span> <span data-ttu-id="a41fd-426">Um valor de <see langword="true" /> que especifica (se possível) que a primeira figura no caminho adicionado faz parte da última figura nesse caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-426">A value of <see langword="true" /> specifies that (if possible) the first figure in the added path is part of the last figure in this path.</span></span> <span data-ttu-id="a41fd-427">Um valor de <see langword="false" /> que especifica que a primeira figura no caminho adicionado é separada da última figura nesse caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-427">A value of <see langword="false" /> specifies that the first figure in the added path is separate from the last figure in this path.</span></span></param>
        <summary><span data-ttu-id="a41fd-428">Acrescenta o <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> especificado a esse caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-428">Appends the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a41fd-429">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, uma <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="a41fd-429">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="a41fd-430">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="a41fd-430">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="a41fd-431">Cria um de dois caminhos um triângulo direito lado-o e o outro um triângulo para baixo ao lado de backup.</span><span class="sxs-lookup"><span data-stu-id="a41fd-431">Creates two paths one a right-side-up triangle and the other an up-side-down triangle.</span></span>  
  
-   <span data-ttu-id="a41fd-432">Adiciona o segundo caminho para o primeiro.</span><span class="sxs-lookup"><span data-stu-id="a41fd-432">Adds the second path to the first.</span></span>  
  
-   <span data-ttu-id="a41fd-433">Desenha o caminho resultante para a tela.</span><span class="sxs-lookup"><span data-stu-id="a41fd-433">Draws the resultant path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#9)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#9)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddPie">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a41fd-434">Adiciona a estrutura de tópicos de uma forma de pizza a esse caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-434">Adds the outline of a pie shape to this path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddPie">
      <MemberSignature Language="C#" Value="public void AddPie (System.Drawing.Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPie(valuetype System.Drawing.Rectangle rect, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Drawing.Rectangle,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPie (rect As Rectangle, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPie(System::Drawing::Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="a41fd-435">Um <see cref="T:System.Drawing.Rectangle" /> que representa o retângulo delimitador que define a elipse com base na qual a pizza é desenhada.</span><span class="sxs-lookup"><span data-stu-id="a41fd-435">A <see cref="T:System.Drawing.Rectangle" /> that represents the bounding rectangle that defines the ellipse from which the pie is drawn.</span></span></param>
        <param name="startAngle"><span data-ttu-id="a41fd-436">O ângulo inicial da fatia da pizza, medido em graus no sentido horário do eixo X.</span><span class="sxs-lookup"><span data-stu-id="a41fd-436">The starting angle for the pie section, measured in degrees clockwise from the x-axis.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="a41fd-437">O ângulo entre <c>startAngle</c> e o final da fatia da pizza, medido em graus no sentido horário de <c>startAngle</c>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-437">The angle between <c>startAngle</c> and the end of the pie section, measured in degrees clockwise from <c>startAngle</c>.</span></span></param>
        <summary><span data-ttu-id="a41fd-438">Adiciona a estrutura de tópicos de uma forma de pizza a esse caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-438">Adds the outline of a pie shape to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-439">A forma de pizza é definida por uma descrição parcial de uma elipse e as duas linhas radiais que cruzam os pontos de extremidade da estrutura de tópicos parcial.</span><span class="sxs-lookup"><span data-stu-id="a41fd-439">The pie shape is defined by a partial outline of an ellipse and the two radial lines that intersect the endpoints of the partial outline.</span></span> <span data-ttu-id="a41fd-440">A estrutura de tópicos parcial começa em `startAngle` (medido no sentido horário do eixo x) e termina no `startAngle`  +  `sweepAngle`.</span><span class="sxs-lookup"><span data-stu-id="a41fd-440">The partial outline begins at `startAngle` (measured clockwise from the x-axis) and ends at `startAngle` + `sweepAngle`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a41fd-441">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-441">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPie">
      <MemberSignature Language="C#" Value="public void AddPie (int x, int y, int width, int height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPie(int32 x, int32 y, int32 width, int32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPie (x As Integer, y As Integer, width As Integer, height As Integer, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPie(int x, int y, int width, int height, float startAngle, float sweepAngle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="a41fd-442">A coordenada X do canto superior esquerdo do retângulo delimitador que define a elipse com base na qual a pizza é desenhada.</span><span class="sxs-lookup"><span data-stu-id="a41fd-442">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</span></span></param>
        <param name="y"><span data-ttu-id="a41fd-443">A coordenada Y do canto superior esquerdo do retângulo delimitador que define a elipse com base na qual a pizza é desenhada.</span><span class="sxs-lookup"><span data-stu-id="a41fd-443">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</span></span></param>
        <param name="width"><span data-ttu-id="a41fd-444">A largura do retângulo delimitador que define a elipse com base na qual a pizza é desenhada.</span><span class="sxs-lookup"><span data-stu-id="a41fd-444">The width of the bounding rectangle that defines the ellipse from which the pie is drawn.</span></span></param>
        <param name="height"><span data-ttu-id="a41fd-445">A altura do retângulo delimitador que define a elipse com base na qual a pizza é desenhada.</span><span class="sxs-lookup"><span data-stu-id="a41fd-445">The height of the bounding rectangle that defines the ellipse from which the pie is drawn.</span></span></param>
        <param name="startAngle"><span data-ttu-id="a41fd-446">O ângulo inicial da fatia da pizza, medido em graus no sentido horário do eixo X.</span><span class="sxs-lookup"><span data-stu-id="a41fd-446">The starting angle for the pie section, measured in degrees clockwise from the x-axis.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="a41fd-447">O ângulo entre <c>startAngle</c> e o final da fatia da pizza, medido em graus no sentido horário de <c>startAngle</c>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-447">The angle between <c>startAngle</c> and the end of the pie section, measured in degrees clockwise from <c>startAngle</c>.</span></span></param>
        <summary><span data-ttu-id="a41fd-448">Adiciona a estrutura de tópicos de uma forma de pizza a esse caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-448">Adds the outline of a pie shape to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-449">A forma de pizza é definida por uma descrição parcial de uma elipse e as duas linhas radiais que cruzam os pontos de extremidade da estrutura de tópicos parcial.</span><span class="sxs-lookup"><span data-stu-id="a41fd-449">The pie shape is defined by a partial outline of an ellipse and the two radial lines that intersect the endpoints of the partial outline.</span></span> <span data-ttu-id="a41fd-450">A estrutura de tópicos parcial começa em `startAngle` (medido no sentido horário do eixo x) e termina no `startAngle`  +  `sweepAngle`.</span><span class="sxs-lookup"><span data-stu-id="a41fd-450">The partial outline begins at `startAngle` (measured clockwise from the x-axis) and ends at `startAngle` + `sweepAngle`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a41fd-451">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, uma <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="a41fd-451">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="a41fd-452">O código cria um caminho de gráficos, adiciona a forma de pizza e, em seguida, desenha o caminho para a tela.</span><span class="sxs-lookup"><span data-stu-id="a41fd-452">The code creates a graphics path, adds the pie shape, and then draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#10)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#10)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPie">
      <MemberSignature Language="C#" Value="public void AddPie (float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPie(float32 x, float32 y, float32 width, float32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPie (x As Single, y As Single, width As Single, height As Single, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPie(float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="a41fd-453">A coordenada X do canto superior esquerdo do retângulo delimitador que define a elipse com base na qual a pizza é desenhada.</span><span class="sxs-lookup"><span data-stu-id="a41fd-453">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</span></span></param>
        <param name="y"><span data-ttu-id="a41fd-454">A coordenada Y do canto superior esquerdo do retângulo delimitador que define a elipse com base na qual a pizza é desenhada.</span><span class="sxs-lookup"><span data-stu-id="a41fd-454">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</span></span></param>
        <param name="width"><span data-ttu-id="a41fd-455">A largura do retângulo delimitador que define a elipse com base na qual a pizza é desenhada.</span><span class="sxs-lookup"><span data-stu-id="a41fd-455">The width of the bounding rectangle that defines the ellipse from which the pie is drawn.</span></span></param>
        <param name="height"><span data-ttu-id="a41fd-456">A altura do retângulo delimitador que define a elipse com base na qual a pizza é desenhada.</span><span class="sxs-lookup"><span data-stu-id="a41fd-456">The height of the bounding rectangle that defines the ellipse from which the pie is drawn.</span></span></param>
        <param name="startAngle"><span data-ttu-id="a41fd-457">O ângulo inicial da fatia da pizza, medido em graus no sentido horário do eixo X.</span><span class="sxs-lookup"><span data-stu-id="a41fd-457">The starting angle for the pie section, measured in degrees clockwise from the x-axis.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="a41fd-458">O ângulo entre <c>startAngle</c> e o final da fatia da pizza, medido em graus no sentido horário de <c>startAngle</c>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-458">The angle between <c>startAngle</c> and the end of the pie section, measured in degrees clockwise from <c>startAngle</c>.</span></span></param>
        <summary><span data-ttu-id="a41fd-459">Adiciona a estrutura de tópicos de uma forma de pizza a esse caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-459">Adds the outline of a pie shape to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-460">A forma de pizza é definida por uma descrição parcial de uma elipse e as duas linhas radiais que cruzam os pontos de extremidade da estrutura de tópicos parcial.</span><span class="sxs-lookup"><span data-stu-id="a41fd-460">The pie shape is defined by a partial outline of an ellipse and the two radial lines that intersect the endpoints of the partial outline.</span></span> <span data-ttu-id="a41fd-461">A estrutura de tópicos parcial começa em `startAngle` (medido no sentido horário do eixo x) e termina no `startAngle`  +  `sweepAngle`.</span><span class="sxs-lookup"><span data-stu-id="a41fd-461">The partial outline begins at `startAngle` (measured clockwise from the x-axis) and ends at `startAngle` + `sweepAngle`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a41fd-462">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-462">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddPolygon">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a41fd-463">Adiciona um polígono a esse caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-463">Adds a polygon to this path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddPolygon">
      <MemberSignature Language="C#" Value="public void AddPolygon (System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPolygon(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPolygon (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPolygon(cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="a41fd-464">Uma matriz de estruturas <see cref="T:System.Drawing.Point" /> que define o polígono a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-464">An array of <see cref="T:System.Drawing.Point" /> structures that defines the polygon to add.</span></span></param>
        <summary><span data-ttu-id="a41fd-465">Adiciona um polígono a esse caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-465">Adds a polygon to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-466">Os pontos de `points` matriz especifique os vértices de um polígono.</span><span class="sxs-lookup"><span data-stu-id="a41fd-466">The points in the `points` array specify the vertices of a polygon.</span></span> <span data-ttu-id="a41fd-467">Se o primeiro ponto na matriz não é o mesmo que o último ponto, os dois pontos são conectados para fechar o polígono.</span><span class="sxs-lookup"><span data-stu-id="a41fd-467">If the first point in the array is not the same as the last point, those two points are connected to close the polygon.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a41fd-468">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, uma <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="a41fd-468">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="a41fd-469">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="a41fd-469">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="a41fd-470">Cria uma matriz de pontos que define um polígono.</span><span class="sxs-lookup"><span data-stu-id="a41fd-470">Creates an array of points that defines a polygon.</span></span>  
  
-   <span data-ttu-id="a41fd-471">Cria um caminho e adiciona o polígono ao caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-471">Creates a path and adds the polygon to the path.</span></span>  
  
-   <span data-ttu-id="a41fd-472">Desenha o caminho para a tela.</span><span class="sxs-lookup"><span data-stu-id="a41fd-472">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#11](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#11)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#11)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPolygon">
      <MemberSignature Language="C#" Value="public void AddPolygon (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPolygon(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPolygon (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPolygon(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="a41fd-473">Uma matriz de estruturas <see cref="T:System.Drawing.PointF" /> que define o polígono a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-473">An array of <see cref="T:System.Drawing.PointF" /> structures that defines the polygon to add.</span></span></param>
        <summary><span data-ttu-id="a41fd-474">Adiciona um polígono a esse caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-474">Adds a polygon to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-475">Os pontos de `points` matriz especifique os vértices de um polígono.</span><span class="sxs-lookup"><span data-stu-id="a41fd-475">The points in the `points` array specify the vertices of a polygon.</span></span> <span data-ttu-id="a41fd-476">Se o primeiro ponto na matriz não é o mesmo que o último ponto, os dois pontos são conectados para fechar o polígono.</span><span class="sxs-lookup"><span data-stu-id="a41fd-476">If the first point in the array is not the same as the last point, those two points are connected to close the polygon.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a41fd-477">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddPolygon%28System.Drawing.Point%5B%5D%29>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-477">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddPolygon%28System.Drawing.Point%5B%5D%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRectangle">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a41fd-478">Adiciona um retângulo a esse caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-478">Adds a rectangle to this path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRectangle">
      <MemberSignature Language="C#" Value="public void AddRectangle (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRectangle(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRectangle (rect As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRectangle(System::Drawing::Rectangle rect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="a41fd-479">Um <see cref="T:System.Drawing.Rectangle" /> que representa o retângulo a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-479">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle to add.</span></span></param>
        <summary><span data-ttu-id="a41fd-480">Adiciona um retângulo a esse caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-480">Adds a rectangle to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a41fd-481">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, uma <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="a41fd-481">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="a41fd-482">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="a41fd-482">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="a41fd-483">Cria um caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-483">Creates a path.</span></span>  
  
-   <span data-ttu-id="a41fd-484">Cria um retângulo e adiciona o retângulo para o caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-484">Creates a rectangle and adds the rectangle to the path.</span></span>  
  
-   <span data-ttu-id="a41fd-485">Desenha o caminho para a tela.</span><span class="sxs-lookup"><span data-stu-id="a41fd-485">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#12](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#12)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#12)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRectangle">
      <MemberSignature Language="C#" Value="public void AddRectangle (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRectangle(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRectangle (rect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRectangle(System::Drawing::RectangleF rect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="a41fd-486">Um <see cref="T:System.Drawing.RectangleF" /> que representa o retângulo a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-486">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle to add.</span></span></param>
        <summary><span data-ttu-id="a41fd-487">Adiciona um retângulo a esse caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-487">Adds a rectangle to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a41fd-488">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangle%28System.Drawing.Rectangle%29>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-488">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangle%28System.Drawing.Rectangle%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRectangles">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a41fd-489">Adiciona uma série de retângulos a este caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-489">Adds a series of rectangles to this path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRectangles">
      <MemberSignature Language="C#" Value="public void AddRectangles (System.Drawing.Rectangle[] rects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRectangles(valuetype System.Drawing.Rectangle[] rects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRectangles (rects As Rectangle())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRectangles(cli::array &lt;System::Drawing::Rectangle&gt; ^ rects);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rects" Type="System.Drawing.Rectangle[]" />
      </Parameters>
      <Docs>
        <param name="rects"><span data-ttu-id="a41fd-490">Uma matriz de estruturas <see cref="T:System.Drawing.Rectangle" /> que representa os retângulos a serem adicionados.</span><span class="sxs-lookup"><span data-stu-id="a41fd-490">An array of <see cref="T:System.Drawing.Rectangle" /> structures that represents the rectangles to add.</span></span></param>
        <summary><span data-ttu-id="a41fd-491">Adiciona uma série de retângulos a este caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-491">Adds a series of rectangles to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a41fd-492">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, uma <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="a41fd-492">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="a41fd-493">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="a41fd-493">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="a41fd-494">Cria um caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-494">Creates a path.</span></span>  
  
-   <span data-ttu-id="a41fd-495">Cria uma matriz de retângulos e adiciona os retângulos ao caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-495">Creates an array of rectangles and adds the rectangles to the path.</span></span>  
  
-   <span data-ttu-id="a41fd-496">Desenha o caminho para a tela.</span><span class="sxs-lookup"><span data-stu-id="a41fd-496">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#13](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#13)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#13](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#13)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#13](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRectangles">
      <MemberSignature Language="C#" Value="public void AddRectangles (System.Drawing.RectangleF[] rects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRectangles(valuetype System.Drawing.RectangleF[] rects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.RectangleF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRectangles (rects As RectangleF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRectangles(cli::array &lt;System::Drawing::RectangleF&gt; ^ rects);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rects" Type="System.Drawing.RectangleF[]" />
      </Parameters>
      <Docs>
        <param name="rects"><span data-ttu-id="a41fd-497">Uma matriz de estruturas <see cref="T:System.Drawing.RectangleF" /> que representa os retângulos a serem adicionados.</span><span class="sxs-lookup"><span data-stu-id="a41fd-497">An array of <see cref="T:System.Drawing.RectangleF" /> structures that represents the rectangles to add.</span></span></param>
        <summary><span data-ttu-id="a41fd-498">Adiciona uma série de retângulos a este caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-498">Adds a series of rectangles to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a41fd-499">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangles%28System.Drawing.Rectangle%5B%5D%29>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-499">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangles%28System.Drawing.Rectangle%5B%5D%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddString">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a41fd-500">Adiciona uma cadeia de texto nesse caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-500">Adds a text string to this path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddString">
      <MemberSignature Language="C#" Value="public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.Point origin, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddString(string s, class System.Drawing.FontFamily family, int32 style, float32 emSize, valuetype System.Drawing.Point origin, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddString (s As String, family As FontFamily, style As Integer, emSize As Single, origin As Point, format As StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddString(System::String ^ s, System::Drawing::FontFamily ^ family, int style, float emSize, System::Drawing::Point origin, System::Drawing::StringFormat ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="origin" Type="System.Drawing.Point" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="a41fd-501">O <see cref="T:System.String" /> a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-501">The <see cref="T:System.String" /> to add.</span></span></param>
        <param name="family"><span data-ttu-id="a41fd-502">Uma <see cref="T:System.Drawing.FontFamily" /> que representa o nome da fonte com a qual o teste é desenhado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-502">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn.</span></span></param>
        <param name="style"><span data-ttu-id="a41fd-503">Um enumeração <see cref="T:System.Drawing.FontStyle" /> que representa as informações de estilo sobre o texto (negrito, itálico e assim por diante).</span><span class="sxs-lookup"><span data-stu-id="a41fd-503">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on).</span></span> <span data-ttu-id="a41fd-504">Isso deve ser transmitido como um inteiro (consulte o código de exemplo mais à frente nesta seção).</span><span class="sxs-lookup"><span data-stu-id="a41fd-504">This must be cast as an integer (see the example code later in this section).</span></span></param>
        <param name="emSize"><span data-ttu-id="a41fd-505">A altura da caixa quadrada em que delimita o caractere.</span><span class="sxs-lookup"><span data-stu-id="a41fd-505">The height of the em square box that bounds the character.</span></span></param>
        <param name="origin"><span data-ttu-id="a41fd-506">Um <see cref="T:System.Drawing.Point" /> que representa o ponto em que o texto começa.</span><span class="sxs-lookup"><span data-stu-id="a41fd-506">A <see cref="T:System.Drawing.Point" /> that represents the point where the text starts.</span></span></param>
        <param name="format"><span data-ttu-id="a41fd-507">Um <see cref="T:System.Drawing.StringFormat" /> que especifica as informações de formatação de texto, como o espaçamento entre linhas e o alinhamento.</span><span class="sxs-lookup"><span data-stu-id="a41fd-507">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment.</span></span></param>
        <summary><span data-ttu-id="a41fd-508">Adiciona uma cadeia de texto nesse caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-508">Adds a text string to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a41fd-509">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, uma <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="a41fd-509">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="a41fd-510">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="a41fd-510">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="a41fd-511">Cria um caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-511">Creates a path.</span></span>  
  
-   <span data-ttu-id="a41fd-512">Define os argumentos de cadeia de caracteres e fonte.</span><span class="sxs-lookup"><span data-stu-id="a41fd-512">Sets up string and font arguments.</span></span>  
  
-   <span data-ttu-id="a41fd-513">Adiciona a cadeia de caracteres para o caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-513">Adds the string to the path.</span></span>  
  
-   <span data-ttu-id="a41fd-514">Desenha a cadeia de caracteres para a tela.</span><span class="sxs-lookup"><span data-stu-id="a41fd-514">Draws the string to the screen.</span></span>  
  
 <span data-ttu-id="a41fd-515">Há dois aspectos importantes a ser indicadas. Primeiro, observe que o `fontStyle` argumento é convertido como um inteiro.</span><span class="sxs-lookup"><span data-stu-id="a41fd-515">There are two important things to be pointed out. First, notice that the `fontStyle` argument is cast as an integer.</span></span> <span data-ttu-id="a41fd-516">O <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%2A> método requer isso assim que dois ou mais <xref:System.Drawing.FontStyle> membros podem ser combinados para criar o estilo de fonte desejado (nesse caso, <xref:System.Drawing.FontStyle.Italic> e <xref:System.Drawing.FontStyle.Underline>).</span><span class="sxs-lookup"><span data-stu-id="a41fd-516">The <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%2A> method requires this so that two or more <xref:System.Drawing.FontStyle> members can be combined to create the desired font style (in this case, <xref:System.Drawing.FontStyle.Italic> and <xref:System.Drawing.FontStyle.Underline>).</span></span> <span data-ttu-id="a41fd-517">Em segundo lugar, observe que o <xref:System.Drawing.Graphics.FillPath%2A> método é usado em vez de <xref:System.Drawing.Graphics.DrawPath%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a41fd-517">Secondly, notice that the <xref:System.Drawing.Graphics.FillPath%2A> method is used rather than the <xref:System.Drawing.Graphics.DrawPath%2A> method.</span></span> <span data-ttu-id="a41fd-518">Se <xref:System.Drawing.Graphics.FillPath%2A> for usado, sólido texto é renderizado, enquanto se <xref:System.Drawing.Graphics.DrawPath%2A> for usado, o texto será um estilo de estrutura de tópicos.</span><span class="sxs-lookup"><span data-stu-id="a41fd-518">If <xref:System.Drawing.Graphics.FillPath%2A> is used, solid text is rendered, whereas if <xref:System.Drawing.Graphics.DrawPath%2A> is used, the text will be an outline style.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#14](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#14)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#14](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#14)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#14](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddString">
      <MemberSignature Language="C#" Value="public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.PointF origin, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddString(string s, class System.Drawing.FontFamily family, int32 style, float32 emSize, valuetype System.Drawing.PointF origin, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddString (s As String, family As FontFamily, style As Integer, emSize As Single, origin As PointF, format As StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddString(System::String ^ s, System::Drawing::FontFamily ^ family, int style, float emSize, System::Drawing::PointF origin, System::Drawing::StringFormat ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="origin" Type="System.Drawing.PointF" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="a41fd-519">O <see cref="T:System.String" /> a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-519">The <see cref="T:System.String" /> to add.</span></span></param>
        <param name="family"><span data-ttu-id="a41fd-520">Uma <see cref="T:System.Drawing.FontFamily" /> que representa o nome da fonte com a qual o teste é desenhado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-520">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn.</span></span></param>
        <param name="style"><span data-ttu-id="a41fd-521">Um enumeração <see cref="T:System.Drawing.FontStyle" /> que representa as informações de estilo sobre o texto (negrito, itálico e assim por diante).</span><span class="sxs-lookup"><span data-stu-id="a41fd-521">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on).</span></span> <span data-ttu-id="a41fd-522">Isso deve ser transmitido como um inteiro (consulte o código de exemplo mais à frente nesta seção).</span><span class="sxs-lookup"><span data-stu-id="a41fd-522">This must be cast as an integer (see the example code later in this section).</span></span></param>
        <param name="emSize"><span data-ttu-id="a41fd-523">A altura da caixa quadrada em que delimita o caractere.</span><span class="sxs-lookup"><span data-stu-id="a41fd-523">The height of the em square box that bounds the character.</span></span></param>
        <param name="origin"><span data-ttu-id="a41fd-524">Um <see cref="T:System.Drawing.PointF" /> que representa o ponto em que o texto começa.</span><span class="sxs-lookup"><span data-stu-id="a41fd-524">A <see cref="T:System.Drawing.PointF" /> that represents the point where the text starts.</span></span></param>
        <param name="format"><span data-ttu-id="a41fd-525">Um <see cref="T:System.Drawing.StringFormat" /> que especifica as informações de formatação de texto, como o espaçamento entre linhas e o alinhamento.</span><span class="sxs-lookup"><span data-stu-id="a41fd-525">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment.</span></span></param>
        <summary><span data-ttu-id="a41fd-526">Adiciona uma cadeia de texto nesse caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-526">Adds a text string to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a41fd-527">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-527">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddString">
      <MemberSignature Language="C#" Value="public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.Rectangle layoutRect, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddString(string s, class System.Drawing.FontFamily family, int32 style, float32 emSize, valuetype System.Drawing.Rectangle layoutRect, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddString (s As String, family As FontFamily, style As Integer, emSize As Single, layoutRect As Rectangle, format As StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddString(System::String ^ s, System::Drawing::FontFamily ^ family, int style, float emSize, System::Drawing::Rectangle layoutRect, System::Drawing::StringFormat ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="layoutRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="a41fd-528">O <see cref="T:System.String" /> a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-528">The <see cref="T:System.String" /> to add.</span></span></param>
        <param name="family"><span data-ttu-id="a41fd-529">Uma <see cref="T:System.Drawing.FontFamily" /> que representa o nome da fonte com a qual o teste é desenhado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-529">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn.</span></span></param>
        <param name="style"><span data-ttu-id="a41fd-530">Um enumeração <see cref="T:System.Drawing.FontStyle" /> que representa as informações de estilo sobre o texto (negrito, itálico e assim por diante).</span><span class="sxs-lookup"><span data-stu-id="a41fd-530">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on).</span></span> <span data-ttu-id="a41fd-531">Isso deve ser transmitido como um inteiro (consulte o código de exemplo mais à frente nesta seção).</span><span class="sxs-lookup"><span data-stu-id="a41fd-531">This must be cast as an integer (see the example code later in this section).</span></span></param>
        <param name="emSize"><span data-ttu-id="a41fd-532">A altura da caixa quadrada em que delimita o caractere.</span><span class="sxs-lookup"><span data-stu-id="a41fd-532">The height of the em square box that bounds the character.</span></span></param>
        <param name="layoutRect"><span data-ttu-id="a41fd-533">Um <see cref="T:System.Drawing.Rectangle" /> que representa o retângulo que limita o texto.</span><span class="sxs-lookup"><span data-stu-id="a41fd-533">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle that bounds the text.</span></span></param>
        <param name="format"><span data-ttu-id="a41fd-534">Um <see cref="T:System.Drawing.StringFormat" /> que especifica as informações de formatação de texto, como o espaçamento entre linhas e o alinhamento.</span><span class="sxs-lookup"><span data-stu-id="a41fd-534">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment.</span></span></param>
        <summary><span data-ttu-id="a41fd-535">Adiciona uma cadeia de texto nesse caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-535">Adds a text string to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a41fd-536">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-536">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddString">
      <MemberSignature Language="C#" Value="public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.RectangleF layoutRect, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddString(string s, class System.Drawing.FontFamily family, int32 style, float32 emSize, valuetype System.Drawing.RectangleF layoutRect, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddString (s As String, family As FontFamily, style As Integer, emSize As Single, layoutRect As RectangleF, format As StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddString(System::String ^ s, System::Drawing::FontFamily ^ family, int style, float emSize, System::Drawing::RectangleF layoutRect, System::Drawing::StringFormat ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="layoutRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="a41fd-537">O <see cref="T:System.String" /> a ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-537">The <see cref="T:System.String" /> to add.</span></span></param>
        <param name="family"><span data-ttu-id="a41fd-538">Uma <see cref="T:System.Drawing.FontFamily" /> que representa o nome da fonte com a qual o teste é desenhado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-538">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn.</span></span></param>
        <param name="style"><span data-ttu-id="a41fd-539">Um enumeração <see cref="T:System.Drawing.FontStyle" /> que representa as informações de estilo sobre o texto (negrito, itálico e assim por diante).</span><span class="sxs-lookup"><span data-stu-id="a41fd-539">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on).</span></span> <span data-ttu-id="a41fd-540">Isso deve ser transmitido como um inteiro (consulte o código de exemplo mais à frente nesta seção).</span><span class="sxs-lookup"><span data-stu-id="a41fd-540">This must be cast as an integer (see the example code later in this section).</span></span></param>
        <param name="emSize"><span data-ttu-id="a41fd-541">A altura da caixa quadrada em que delimita o caractere.</span><span class="sxs-lookup"><span data-stu-id="a41fd-541">The height of the em square box that bounds the character.</span></span></param>
        <param name="layoutRect"><span data-ttu-id="a41fd-542">Um <see cref="T:System.Drawing.RectangleF" /> que representa o retângulo que limita o texto.</span><span class="sxs-lookup"><span data-stu-id="a41fd-542">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that bounds the text.</span></span></param>
        <param name="format"><span data-ttu-id="a41fd-543">Um <see cref="T:System.Drawing.StringFormat" /> que especifica as informações de formatação de texto, como o espaçamento entre linhas e o alinhamento.</span><span class="sxs-lookup"><span data-stu-id="a41fd-543">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment.</span></span></param>
        <summary><span data-ttu-id="a41fd-544">Adiciona uma cadeia de texto nesse caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-544">Adds a text string to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a41fd-545">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-545">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearMarkers">
      <MemberSignature Language="C#" Value="public void ClearMarkers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearMarkers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearMarkers ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearMarkers();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a41fd-546">Limpa todos os marcadores desse caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-546">Clears all markers from this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-547">Use o <xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A> método para criar um marcador no local atual em um <xref:System.Drawing.Drawing2D.GraphicsPath>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-547">Use the <xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A> method to create a marker at the current location in a <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span> <span data-ttu-id="a41fd-548">Use o <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> método para iterar os marcadores existentes em um caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-548">Use the <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> method to iterate through the existing markers in a path.</span></span>  
  
 <span data-ttu-id="a41fd-549">Marcadores são usados para separar grupos de subcaminhos.</span><span class="sxs-lookup"><span data-stu-id="a41fd-549">Markers are used to separate groups of subpaths.</span></span> <span data-ttu-id="a41fd-550">Um ou mais subcaminhos podem estar contidos entre dois marcadores.</span><span class="sxs-lookup"><span data-stu-id="a41fd-550">One or more subpaths can be contained between two markers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a41fd-551">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, uma <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="a41fd-551">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="a41fd-552">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="a41fd-552">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="a41fd-553">Cria um caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-553">Creates a path.</span></span>  
  
-   <span data-ttu-id="a41fd-554">Adiciona vários objetos ao caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-554">Adds several objects to the path.</span></span>  
  
-   <span data-ttu-id="a41fd-555">Adiciona marcadores para o caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-555">Adds markers to the path.</span></span>  
  
-   <span data-ttu-id="a41fd-556">Limpa todos os marcadores do caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-556">Clears all markers from the path.</span></span>  
  
-   <span data-ttu-id="a41fd-557">Desenha o caminho para a tela.</span><span class="sxs-lookup"><span data-stu-id="a41fd-557">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#15](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#15)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#15)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a41fd-558">Cria uma cópia exata desse caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-558">Creates an exact copy of this path.</span></span></summary>
        <returns><span data-ttu-id="a41fd-559">O <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> que esse método cria, convertido como um objeto.</span><span class="sxs-lookup"><span data-stu-id="a41fd-559">The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> this method creates, cast as an object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a41fd-560">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, uma <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="a41fd-560">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="a41fd-561">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="a41fd-561">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="a41fd-562">Cria um caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-562">Creates a path.</span></span>  
  
-   <span data-ttu-id="a41fd-563">Adiciona vários valores para o caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-563">Adds several figures to the path.</span></span>  
  
-   <span data-ttu-id="a41fd-564">Desenha o caminho para a tela.</span><span class="sxs-lookup"><span data-stu-id="a41fd-564">Draws the path to the screen.</span></span>  
  
-   <span data-ttu-id="a41fd-565">Clona uma cópia desse caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-565">Clones a copy of that path.</span></span>  
  
-   <span data-ttu-id="a41fd-566">Desenha o novo caminho para a tela.</span><span class="sxs-lookup"><span data-stu-id="a41fd-566">Draws the new path to the screen.</span></span>  
  
 <span data-ttu-id="a41fd-567">Observe que a chamada a <xref:System.Drawing.Drawing2D.GraphicsPath.Clone%2A> método deve ser convertido como um <xref:System.Drawing.Drawing2D.GraphicsPath>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-567">Notice that the call the <xref:System.Drawing.Drawing2D.GraphicsPath.Clone%2A> method must be cast as a <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#16](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#16)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#16](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#16)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#16](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseAllFigures">
      <MemberSignature Language="C#" Value="public void CloseAllFigures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CloseAllFigures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures" />
      <MemberSignature Language="VB.NET" Value="Public Sub CloseAllFigures ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseAllFigures();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a41fd-568">Fecha todos os valores nesse caminho e inicia uma nova figura.</span><span class="sxs-lookup"><span data-stu-id="a41fd-568">Closes all open figures in this path and starts a new figure.</span></span> <span data-ttu-id="a41fd-569">Ele fecha cada figura aberta conectando uma linha de seu ponto de extremidade a seu ponto inicial.</span><span class="sxs-lookup"><span data-stu-id="a41fd-569">It closes each open figure by connecting a line from its endpoint to its starting point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a41fd-570">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, uma <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="a41fd-570">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="a41fd-571">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="a41fd-571">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="a41fd-572">Cria um caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-572">Creates a path.</span></span>  
  
-   <span data-ttu-id="a41fd-573">Adiciona várias figuras abertas para o caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-573">Adds several open figures to the path.</span></span>  
  
-   <span data-ttu-id="a41fd-574">Fecha todos os números no caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-574">Closes all figures in the path.</span></span>  
  
-   <span data-ttu-id="a41fd-575">Desenha o caminho para a tela.</span><span class="sxs-lookup"><span data-stu-id="a41fd-575">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#17](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#17)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#17](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#17)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#17](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseFigure">
      <MemberSignature Language="C#" Value="public void CloseFigure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CloseFigure() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.CloseFigure" />
      <MemberSignature Language="VB.NET" Value="Public Sub CloseFigure ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseFigure();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a41fd-576">Fecha a figura atual e inicia uma nova figura.</span><span class="sxs-lookup"><span data-stu-id="a41fd-576">Closes the current figure and starts a new figure.</span></span> <span data-ttu-id="a41fd-577">Se a figura atual contiver uma sequência de linhas e curvas conectadas, o método fechará o loop conectando uma linha do ponto de extremidade ao ponto de partida.</span><span class="sxs-lookup"><span data-stu-id="a41fd-577">If the current figure contains a sequence of connected lines and curves, the method closes the loop by connecting a line from the endpoint to the starting point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a41fd-578">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, uma <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="a41fd-578">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="a41fd-579">O código cria um triângulo, criando um novo caminho, iniciando uma figura, adicionando linhas de interseção de dois a figura e fechando a figura para formar um triângulo.</span><span class="sxs-lookup"><span data-stu-id="a41fd-579">The code creates a triangle by creating a new path, starting a figure, adding two intersecting lines to the figure, and then closing the figure to form a triangle.</span></span> <span data-ttu-id="a41fd-580">Em seguida, o caminho é desenhado na tela.</span><span class="sxs-lookup"><span data-stu-id="a41fd-580">The path is then drawn to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#18](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#18)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#18](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#18)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#18](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a41fd-581">Libera todos os recursos usados por este <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-581">Releases all resources used by this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-582">Chamando <xref:System.Drawing.Drawing2D.GraphicsPath.Dispose%2A> permite que os recursos usados por este <xref:System.Drawing.Drawing2D.GraphicsPath> sejam realocadas para outras finalidades.</span><span class="sxs-lookup"><span data-stu-id="a41fd-582">Calling <xref:System.Drawing.Drawing2D.GraphicsPath.Dispose%2A> allows the resources used by this <xref:System.Drawing.Drawing2D.GraphicsPath> to be reallocated for other purposes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillMode">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.FillMode FillMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.FillMode FillMode" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.FillMode" />
      <MemberSignature Language="VB.NET" Value="Public Property FillMode As FillMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::FillMode FillMode { System::Drawing::Drawing2D::FillMode get(); void set(System::Drawing::Drawing2D::FillMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.FillMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a41fd-583">Obtém ou define uma enumeração <see cref="T:System.Drawing.Drawing2D.FillMode" /> que determina como os interiores das formas neste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> são preenchidos.</span><span class="sxs-lookup"><span data-stu-id="a41fd-583">Gets or sets a <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.</span></span></summary>
        <value><span data-ttu-id="a41fd-584">Uma enumeração <see cref="T:System.Drawing.Drawing2D.FillMode" /> que especifica como os interiores das formas neste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> são preenchidos.</span><span class="sxs-lookup"><span data-stu-id="a41fd-584">A <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that specifies how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~GraphicsPath ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!GraphicsPath ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a41fd-585">Permite que um objeto tente liberar recursos e executar outras operações de limpeza antes de ser recuperado pela coleta de lixo.</span><span class="sxs-lookup"><span data-stu-id="a41fd-585">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Flatten">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a41fd-586">Converte cada curva neste caminho em uma sequência de segmentos de linha conectados.</span><span class="sxs-lookup"><span data-stu-id="a41fd-586">Converts each curve in this path into a sequence of connected line segments.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Flatten">
      <MemberSignature Language="C#" Value="public void Flatten ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flatten() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Flatten" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flatten ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flatten();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a41fd-587">Converte cada curva neste caminho em uma sequência de segmentos de linha conectados.</span><span class="sxs-lookup"><span data-stu-id="a41fd-587">Converts each curve in this path into a sequence of connected line segments.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a41fd-588">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-588">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flatten">
      <MemberSignature Language="C#" Value="public void Flatten (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flatten(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flatten(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="a41fd-589">Um <see cref="T:System.Drawing.Drawing2D.Matrix" /> pelo qual transformar esse <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> antes de mesclar.</span><span class="sxs-lookup"><span data-stu-id="a41fd-589">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which to transform this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> before flattening.</span></span></param>
        <summary><span data-ttu-id="a41fd-590">Aplica a transformação especificada e então converte cada curva neste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> em uma sequência de segmentos de linha conectados.</span><span class="sxs-lookup"><span data-stu-id="a41fd-590">Applies the specified transform and then converts each curve in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> into a sequence of connected line segments.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a41fd-591">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-591">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flatten">
      <MemberSignature Language="C#" Value="public void Flatten (System.Drawing.Drawing2D.Matrix matrix, float flatness);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flatten(class System.Drawing.Drawing2D.Matrix matrix, float32 flatness) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flatten(System::Drawing::Drawing2D::Matrix ^ matrix, float flatness);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="flatness" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="a41fd-592">Um <see cref="T:System.Drawing.Drawing2D.Matrix" /> pelo qual transformar esse <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> antes de mesclar.</span><span class="sxs-lookup"><span data-stu-id="a41fd-592">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which to transform this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> before flattening.</span></span></param>
        <param name="flatness"><span data-ttu-id="a41fd-593">Especifica o erro máximo permitido entre a curva e sua aproximação plana.</span><span class="sxs-lookup"><span data-stu-id="a41fd-593">Specifies the maximum permitted error between the curve and its flattened approximation.</span></span> <span data-ttu-id="a41fd-594">Um valor de 0,25 é o padrão.</span><span class="sxs-lookup"><span data-stu-id="a41fd-594">A value of 0.25 is the default.</span></span> <span data-ttu-id="a41fd-595">Reduzir o valor de planeza aumentará o número de segmentos de linha na aproximação.</span><span class="sxs-lookup"><span data-stu-id="a41fd-595">Reducing the flatness value will increase the number of line segments in the approximation.</span></span></param>
        <summary><span data-ttu-id="a41fd-596">Converte cada curva neste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> em uma sequência de segmentos de linha conectados.</span><span class="sxs-lookup"><span data-stu-id="a41fd-596">Converts each curve in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> into a sequence of connected line segments.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a41fd-597">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, uma <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="a41fd-597">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="a41fd-598">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="a41fd-598">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="a41fd-599">Cria um caminho de gráfico e uma matriz de tradução.</span><span class="sxs-lookup"><span data-stu-id="a41fd-599">Creates a graphics path and a translation matrix.</span></span>  
  
-   <span data-ttu-id="a41fd-600">Adiciona uma curva para o caminho usando quatro pontos.</span><span class="sxs-lookup"><span data-stu-id="a41fd-600">Adds a curve to the path using four points.</span></span>  
  
-   <span data-ttu-id="a41fd-601">Desenha o caminho (curva) para a tela, usando uma caneta preta.</span><span class="sxs-lookup"><span data-stu-id="a41fd-601">Draws the path (curve) to the screen, using a black pen.</span></span>  
  
-   <span data-ttu-id="a41fd-602">Desloca a curva para 10 pixels e mescla a ele.</span><span class="sxs-lookup"><span data-stu-id="a41fd-602">Shifts the curve down 10 pixels and flattens it.</span></span>  
  
-   <span data-ttu-id="a41fd-603">Desenha a curva à tela usando uma caneta vermelha.</span><span class="sxs-lookup"><span data-stu-id="a41fd-603">Draws the curve to the screen using, a red pen.</span></span>  
  
 <span data-ttu-id="a41fd-604">Observe que a curva vermelha tem nivelados linhas que conectam os pontos.</span><span class="sxs-lookup"><span data-stu-id="a41fd-604">Notice that the red curve has flattened lines connecting the points.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#19](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#19)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#19](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#19)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#19](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBounds">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a41fd-605">Retorna um retângulo que circunda esse <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-605">Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF GetBounds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.RectangleF GetBounds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBounds () As RectangleF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::RectangleF GetBounds();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a41fd-606">Retorna um retângulo que circunda esse <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-606">Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <returns><span data-ttu-id="a41fd-607">Um <see cref="T:System.Drawing.RectangleF" /> que representa um retângulo que circunda esse <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-607">A <see cref="T:System.Drawing.RectangleF" /> that represents a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-608">O tamanho do retângulo delimitador retornado é influenciado pelo tipo de delimitada, a largura de caneta e o limite de esquadria caneta e, portanto, gera um "ajuste flexível" para o caminho associado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-608">The size of the returned bounding rectangle is influenced by the type of end caps, pen width, and pen miter limit, and therefore produces a "loose fit" to the bounded path.</span></span> <span data-ttu-id="a41fd-609">A fórmula aproximada é: o retângulo delimitador inicial é inflado pela largura de caneta e esse resultado é multiplicado pelo limite de esquadria, além de algumas margem adicional para permitir tampas.</span><span class="sxs-lookup"><span data-stu-id="a41fd-609">The approximate formula is: the initial bounding rectangle is inflated by pen width, and this result is multiplied by the miter limit, plus some additional margin to allow for end caps.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a41fd-610">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, uma <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="a41fd-610">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="a41fd-611">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="a41fd-611">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="a41fd-612">Cria um caminho de gráficos.</span><span class="sxs-lookup"><span data-stu-id="a41fd-612">Creates a graphics path.</span></span>  
  
-   <span data-ttu-id="a41fd-613">Adiciona uma elipse (círculo) a ele e desenha na tela.</span><span class="sxs-lookup"><span data-stu-id="a41fd-613">Adds an ellipse (circle) to it and draws it to the screen.</span></span>  
  
-   <span data-ttu-id="a41fd-614">Recupera o retângulo delimitador para o círculo com uma chamada para <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds%2A> e desenha um retângulo para a tela.</span><span class="sxs-lookup"><span data-stu-id="a41fd-614">Retrieves the bounding rectangle for the circle with a call to <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds%2A> and draws the rectangle to the screen.</span></span>  
  
-   <span data-ttu-id="a41fd-615">Cria um segundo caminho de gráficos.</span><span class="sxs-lookup"><span data-stu-id="a41fd-615">Creates a second graphics path.</span></span>  
  
-   <span data-ttu-id="a41fd-616">Adiciona um círculo e amplia o caminho para uma largura de 10.</span><span class="sxs-lookup"><span data-stu-id="a41fd-616">Adds a circle and widens the path to a width of 10.</span></span>  
  
-   <span data-ttu-id="a41fd-617">Desenha o caminho para a tela.</span><span class="sxs-lookup"><span data-stu-id="a41fd-617">Draws the path to the screen.</span></span>  
  
-   <span data-ttu-id="a41fd-618">Recupera o retângulo delimitador para o segundo círculo.</span><span class="sxs-lookup"><span data-stu-id="a41fd-618">Retrieves the bounding rectangle for the second circle.</span></span>  
  
-   <span data-ttu-id="a41fd-619">Desenha o retângulo delimitador para a tela.</span><span class="sxs-lookup"><span data-stu-id="a41fd-619">Draws the bounding rectangle to the screen.</span></span>  
  
-   <span data-ttu-id="a41fd-620">Exibe o tamanho do retângulo em uma caixa de diálogo.</span><span class="sxs-lookup"><span data-stu-id="a41fd-620">Displays the rectangle size in a dialog box.</span></span>  
  
 <span data-ttu-id="a41fd-621">Observe que o retângulo delimitador à direita (para a conta para a extra largura da linha).</span><span class="sxs-lookup"><span data-stu-id="a41fd-621">Notice that the bounding rectangle on the right is larger (to account for the extra width of the line).</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#20](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#20)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#20)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF GetBounds (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.RectangleF GetBounds(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::RectangleF GetBounds(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="a41fd-622">O <see cref="T:System.Drawing.Drawing2D.Matrix" /> que especifica uma transformação a ser aplicada a esse caminho antes do retângulo delimitador ser calculado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-622">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transformation to be applied to this path before the bounding rectangle is calculated.</span></span> <span data-ttu-id="a41fd-623">Esse caminho não é transformado permanentemente; a transformação é usada somente durante o processo de cálculo do retângulo delimitador.</span><span class="sxs-lookup"><span data-stu-id="a41fd-623">This path is not permanently transformed; the transformation is used only during the process of calculating the bounding rectangle.</span></span></param>
        <summary><span data-ttu-id="a41fd-624">Retorna um retângulo que delimita este <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> quando este caminho é transformado pelo <see cref="T:System.Drawing.Drawing2D.Matrix" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-624">Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when this path is transformed by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
        <returns><span data-ttu-id="a41fd-625">Um <see cref="T:System.Drawing.RectangleF" /> que representa um retângulo que circunda esse <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-625">A <see cref="T:System.Drawing.RectangleF" /> that represents a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-626">O tamanho do retângulo delimitador retornado é influenciado pelo tipo de delimitada, a largura de caneta e o limite de esquadria caneta e, portanto, gera um "ajuste flexível" para o caminho associado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-626">The size of the returned bounding rectangle is influenced by the type of end caps, pen width, and pen miter limit, and therefore produces a "loose fit" to the bounded path.</span></span> <span data-ttu-id="a41fd-627">A fórmula aproximada é: o retângulo delimitador inicial é inflado pela largura de caneta e esse resultado é multiplicado pelo limite de esquadria, além de algumas margem adicional para permitir tampas.</span><span class="sxs-lookup"><span data-stu-id="a41fd-627">The approximate formula is: the initial bounding rectangle is inflated by pen width, and this result is multiplied by the miter limit, plus some additional margin to allow for end caps.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a41fd-628">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-628">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF GetBounds (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.RectangleF GetBounds(class System.Drawing.Drawing2D.Matrix matrix, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::RectangleF GetBounds(System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Pen ^ pen);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="a41fd-629">O <see cref="T:System.Drawing.Drawing2D.Matrix" /> que especifica uma transformação a ser aplicada a esse caminho antes do retângulo delimitador ser calculado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-629">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transformation to be applied to this path before the bounding rectangle is calculated.</span></span> <span data-ttu-id="a41fd-630">Esse caminho não é transformado permanentemente; a transformação é usada somente durante o processo de cálculo do retângulo delimitador.</span><span class="sxs-lookup"><span data-stu-id="a41fd-630">This path is not permanently transformed; the transformation is used only during the process of calculating the bounding rectangle.</span></span></param>
        <param name="pen"><span data-ttu-id="a41fd-631">A <see cref="T:System.Drawing.Pen" /> com a qual desenhar o <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-631">The <see cref="T:System.Drawing.Pen" /> with which to draw the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></param>
        <summary><span data-ttu-id="a41fd-632">Retorna um retângulo que delimita este <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> quando o caminho atual é transformado pelo <see cref="T:System.Drawing.Drawing2D.Matrix" /> especificado e desenhado com a <see cref="T:System.Drawing.Pen" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="a41fd-632">Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when the current path is transformed by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> and drawn with the specified <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <returns><span data-ttu-id="a41fd-633">Um <see cref="T:System.Drawing.RectangleF" /> que representa um retângulo que circunda esse <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-633">A <see cref="T:System.Drawing.RectangleF" /> that represents a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-634">O tamanho do retângulo delimitador retornado é influenciado pelo tipo de delimitada, a largura de caneta e o limite de esquadria caneta e, portanto, gera um "ajuste flexível" para o caminho associado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-634">The size of the returned bounding rectangle is influenced by the type of end caps, pen width, and pen miter limit, and therefore produces a "loose fit" to the bounded path.</span></span> <span data-ttu-id="a41fd-635">A fórmula aproximada é: o retângulo delimitador inicial é inflado pela largura de caneta e esse resultado é multiplicado pelo limite de esquadria, além de algumas margem adicional para permitir tampas.</span><span class="sxs-lookup"><span data-stu-id="a41fd-635">The approximate formula is: the initial bounding rectangle is inflated by pen width, and this result is multiplied by the miter limit, plus some additional margin to allow for end caps.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a41fd-636">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-636">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLastPoint">
      <MemberSignature Language="C#" Value="public System.Drawing.PointF GetLastPoint ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.PointF GetLastPoint() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.GetLastPoint" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLastPoint () As PointF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::PointF GetLastPoint();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.PointF</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a41fd-637">Obtém o último ponto na matriz <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> deste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-637">Gets the last point in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> array of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <returns><span data-ttu-id="a41fd-638">Um <see cref="T:System.Drawing.PointF" /> que representa o último ponto neste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-638">A <see cref="T:System.Drawing.PointF" /> that represents the last point in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a41fd-639">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, uma <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="a41fd-639">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="a41fd-640">O código cria um caminho, adiciona uma linha para o caminho e, em seguida, obtém o último ponto no caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-640">The code creates a path, adds a line to the path, and then gets the last point in the path.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#21](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#21)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#21](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#21)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#21](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsOutlineVisible">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a41fd-641">Indica se o ponto especificado está contido dentro de (sob) o contorno deste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> quando desenhado com a <see cref="T:System.Drawing.Pen" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="a41fd-641">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (System.Drawing.Point point, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(valuetype System.Drawing.Point point, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(System::Drawing::Point point, System::Drawing::Pen ^ pen);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="a41fd-642">Um <see cref="T:System.Drawing.Point" /> que especifica o local a testar.</span><span class="sxs-lookup"><span data-stu-id="a41fd-642">A <see cref="T:System.Drawing.Point" /> that specifies the location to test.</span></span></param>
        <param name="pen"><span data-ttu-id="a41fd-643">O <see cref="T:System.Drawing.Pen" /> a ser testado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-643">The <see cref="T:System.Drawing.Pen" /> to test.</span></span></param>
        <summary><span data-ttu-id="a41fd-644">Indica se o ponto especificado está contido dentro de (sob) o contorno deste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> quando desenhado com a <see cref="T:System.Drawing.Pen" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="a41fd-644">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <returns><span data-ttu-id="a41fd-645">Este método retorna <see langword="true" /> se o ponto especificado está contido no contorno deste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> quando desenhado com a <see cref="T:System.Drawing.Pen" /> especificada; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-645">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-646">Esse método verifica se a estrutura de tópicos de um determinado caminho será renderizada visível no ponto especificado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-646">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a41fd-647">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-647">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (System.Drawing.PointF point, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(valuetype System.Drawing.PointF point, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(System::Drawing::PointF point, System::Drawing::Pen ^ pen);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.PointF" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="a41fd-648">Um <see cref="T:System.Drawing.PointF" /> que especifica o local a testar.</span><span class="sxs-lookup"><span data-stu-id="a41fd-648">A <see cref="T:System.Drawing.PointF" /> that specifies the location to test.</span></span></param>
        <param name="pen"><span data-ttu-id="a41fd-649">O <see cref="T:System.Drawing.Pen" /> a ser testado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-649">The <see cref="T:System.Drawing.Pen" /> to test.</span></span></param>
        <summary><span data-ttu-id="a41fd-650">Indica se o ponto especificado está contido dentro de (sob) o contorno deste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> quando desenhado com a <see cref="T:System.Drawing.Pen" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="a41fd-650">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <returns><span data-ttu-id="a41fd-651">Este método retorna <see langword="true" /> se o ponto especificado está contido no contorno deste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> quando desenhado com a <see cref="T:System.Drawing.Pen" /> especificada; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-651">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-652">Esse método verifica se a estrutura de tópicos de um determinado caminho será renderizada visível no ponto especificado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-652">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a41fd-653">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-653">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (System.Drawing.Point pt, System.Drawing.Pen pen, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(valuetype System.Drawing.Point pt, class System.Drawing.Pen pen, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(System::Drawing::Point pt, System::Drawing::Pen ^ pen, System::Drawing::Graphics ^ graphics);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="pt"><span data-ttu-id="a41fd-654">Um <see cref="T:System.Drawing.Point" /> que especifica o local a testar.</span><span class="sxs-lookup"><span data-stu-id="a41fd-654">A <see cref="T:System.Drawing.Point" /> that specifies the location to test.</span></span></param>
        <param name="pen"><span data-ttu-id="a41fd-655">O <see cref="T:System.Drawing.Pen" /> a ser testado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-655">The <see cref="T:System.Drawing.Pen" /> to test.</span></span></param>
        <param name="graphics"><span data-ttu-id="a41fd-656">O <see cref="T:System.Drawing.Graphics" /> do qual a visibilidade será testada.</span><span class="sxs-lookup"><span data-stu-id="a41fd-656">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span></span></param>
        <summary><span data-ttu-id="a41fd-657">Indica se o ponto especificado está contido dentro de (sob) o contorno deste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> quando desenhado com a <see cref="T:System.Drawing.Pen" /> especificada e usando o <see cref="T:System.Drawing.Graphics" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-657">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="a41fd-658">Este método retorna <see langword="true" /> se o ponto especificado está contido no contorno deste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> quando desenhado com a <see cref="T:System.Drawing.Pen" /> especificada; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-658">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-659">Esse método verifica se a estrutura de tópicos de um determinado caminho será renderizada visível no ponto especificado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-659">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span> <span data-ttu-id="a41fd-660">As coordenadas do ponto a ser testada são fornecidas nas coordenadas do mundo.</span><span class="sxs-lookup"><span data-stu-id="a41fd-660">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="a41fd-661">A matriz de transformação de `graphics` temporariamente é aplicada antes de testar para visibilidade.</span><span class="sxs-lookup"><span data-stu-id="a41fd-661">The transform matrix of `graphics` is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a41fd-662">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-662">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (System.Drawing.PointF pt, System.Drawing.Pen pen, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(valuetype System.Drawing.PointF pt, class System.Drawing.Pen pen, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(System::Drawing::PointF pt, System::Drawing::Pen ^ pen, System::Drawing::Graphics ^ graphics);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.PointF" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="pt"><span data-ttu-id="a41fd-663">Um <see cref="T:System.Drawing.PointF" /> que especifica o local a testar.</span><span class="sxs-lookup"><span data-stu-id="a41fd-663">A <see cref="T:System.Drawing.PointF" /> that specifies the location to test.</span></span></param>
        <param name="pen"><span data-ttu-id="a41fd-664">O <see cref="T:System.Drawing.Pen" /> a ser testado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-664">The <see cref="T:System.Drawing.Pen" /> to test.</span></span></param>
        <param name="graphics"><span data-ttu-id="a41fd-665">O <see cref="T:System.Drawing.Graphics" /> do qual a visibilidade será testada.</span><span class="sxs-lookup"><span data-stu-id="a41fd-665">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span></span></param>
        <summary><span data-ttu-id="a41fd-666">Indica se o ponto especificado está contido dentro de (sob) o contorno deste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> quando desenhado com a <see cref="T:System.Drawing.Pen" /> especificada e usando o <see cref="T:System.Drawing.Graphics" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-666">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="a41fd-667">Este método retorna <see langword="true" /> se o ponto especificado está contido em (sob) o contorno deste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> quando desenhado com a <see cref="T:System.Drawing.Pen" /> especificada; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-667">This method returns <see langword="true" /> if the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-668">Esse método verifica se a estrutura de tópicos de um determinado caminho será renderizada visível no ponto especificado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-668">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span> <span data-ttu-id="a41fd-669">As coordenadas do ponto a ser testada são fornecidas nas coordenadas do mundo.</span><span class="sxs-lookup"><span data-stu-id="a41fd-669">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="a41fd-670">A matriz de transformação de `graphics` temporariamente é aplicada antes de testar para visibilidade.</span><span class="sxs-lookup"><span data-stu-id="a41fd-670">The transform matrix of `graphics` is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a41fd-671">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-671">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (int x, int y, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(int32 x, int32 y, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(int x, int y, System::Drawing::Pen ^ pen);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="a41fd-672">A coordenada X do ponto a ser testado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-672">The x-coordinate of the point to test.</span></span></param>
        <param name="y"><span data-ttu-id="a41fd-673">A coordenada Y do ponto a ser testado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-673">The y-coordinate of the point to test.</span></span></param>
        <param name="pen"><span data-ttu-id="a41fd-674">O <see cref="T:System.Drawing.Pen" /> a ser testado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-674">The <see cref="T:System.Drawing.Pen" /> to test.</span></span></param>
        <summary><span data-ttu-id="a41fd-675">Indica se o ponto especificado está contido dentro de (sob) o contorno deste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> quando desenhado com a <see cref="T:System.Drawing.Pen" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="a41fd-675">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <returns><span data-ttu-id="a41fd-676">Este método retorna <see langword="true" /> se o ponto especificado está contido no contorno deste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> quando desenhado com a <see cref="T:System.Drawing.Pen" /> especificada; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-676">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-677">Esse método verifica se a estrutura de tópicos de um determinado caminho será renderizada visível no ponto especificado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-677">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a41fd-678">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-678">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (float x, float y, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(float32 x, float32 y, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(float x, float y, System::Drawing::Pen ^ pen);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="a41fd-679">A coordenada X do ponto a ser testado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-679">The x-coordinate of the point to test.</span></span></param>
        <param name="y"><span data-ttu-id="a41fd-680">A coordenada Y do ponto a ser testado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-680">The y-coordinate of the point to test.</span></span></param>
        <param name="pen"><span data-ttu-id="a41fd-681">O <see cref="T:System.Drawing.Pen" /> a ser testado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-681">The <see cref="T:System.Drawing.Pen" /> to test.</span></span></param>
        <summary><span data-ttu-id="a41fd-682">Indica se o ponto especificado está contido dentro de (sob) o contorno deste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> quando desenhado com a <see cref="T:System.Drawing.Pen" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="a41fd-682">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <returns><span data-ttu-id="a41fd-683">Este método retorna <see langword="true" /> se o ponto especificado está contido no contorno deste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> quando desenhado com a <see cref="T:System.Drawing.Pen" /> especificada; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-683">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-684">Esse método verifica se a estrutura de tópicos de um determinado caminho será renderizada visível no ponto especificado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-684">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a41fd-685">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-685">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (int x, int y, System.Drawing.Pen pen, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(int32 x, int32 y, class System.Drawing.Pen pen, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(int x, int y, System::Drawing::Pen ^ pen, System::Drawing::Graphics ^ graphics);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="a41fd-686">A coordenada X do ponto a ser testado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-686">The x-coordinate of the point to test.</span></span></param>
        <param name="y"><span data-ttu-id="a41fd-687">A coordenada Y do ponto a ser testado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-687">The y-coordinate of the point to test.</span></span></param>
        <param name="pen"><span data-ttu-id="a41fd-688">O <see cref="T:System.Drawing.Pen" /> a ser testado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-688">The <see cref="T:System.Drawing.Pen" /> to test.</span></span></param>
        <param name="graphics"><span data-ttu-id="a41fd-689">O <see cref="T:System.Drawing.Graphics" /> do qual a visibilidade será testada.</span><span class="sxs-lookup"><span data-stu-id="a41fd-689">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span></span></param>
        <summary><span data-ttu-id="a41fd-690">Indica se o ponto especificado está contido dentro de (sob) o contorno deste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> quando desenhado com a <see cref="T:System.Drawing.Pen" /> especificada e usando o <see cref="T:System.Drawing.Graphics" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-690">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="a41fd-691">Este método retorna <see langword="true" /> se o ponto especificado está contido no contorno deste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> quando desenhado com a <see cref="T:System.Drawing.Pen" /> especificada; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-691">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-692">Esse método verifica se a estrutura de tópicos de um determinado caminho será renderizada visível no ponto especificado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-692">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span> <span data-ttu-id="a41fd-693">As coordenadas do ponto a ser testada são fornecidas nas coordenadas do mundo.</span><span class="sxs-lookup"><span data-stu-id="a41fd-693">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="a41fd-694">A matriz de transformação de `graphics` temporariamente é aplicada antes de testar para visibilidade.</span><span class="sxs-lookup"><span data-stu-id="a41fd-694">The transform matrix of `graphics` is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a41fd-695">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, um <xref:System.Windows.Forms.Form.OnPaint%2A> eventos.</span><span class="sxs-lookup"><span data-stu-id="a41fd-695">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event.</span></span> <span data-ttu-id="a41fd-696">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="a41fd-696">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="a41fd-697">Cria um caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-697">Creates a path.</span></span>  
  
-   <span data-ttu-id="a41fd-698">Adiciona um retângulo ao caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-698">Adds a rectangle to the path.</span></span>  
  
-   <span data-ttu-id="a41fd-699">Cria uma caneta ampla e amplia o caminho com esse caneta (para tornar o exemplo mais claro),</span><span class="sxs-lookup"><span data-stu-id="a41fd-699">Creates a wide pen and widens the path with that pen (to make the example clearer),</span></span>  
  
-   <span data-ttu-id="a41fd-700">Testes de um ponto (100, 50) para ver se ela está dentro de (em) um das bordas do retângulo chamando <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%2A>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-700">Tests a point (100, 50) to see if it lies within (under) one of the edges of the rectangle by calling <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%2A>.</span></span>  
  
 <span data-ttu-id="a41fd-701">O resultado é mostrado na caixa de mensagem (nesse caso, true).</span><span class="sxs-lookup"><span data-stu-id="a41fd-701">The result is shown in the message box (in this case, true).</span></span> <span data-ttu-id="a41fd-702">Em outras palavras, a borda é renderizada através desse ponto.</span><span class="sxs-lookup"><span data-stu-id="a41fd-702">In other words the edge is rendered over that point.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#22](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#22)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#22](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#22)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#22](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (float x, float y, System.Drawing.Pen pen, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(float32 x, float32 y, class System.Drawing.Pen pen, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(float x, float y, System::Drawing::Pen ^ pen, System::Drawing::Graphics ^ graphics);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="a41fd-703">A coordenada X do ponto a ser testado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-703">The x-coordinate of the point to test.</span></span></param>
        <param name="y"><span data-ttu-id="a41fd-704">A coordenada Y do ponto a ser testado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-704">The y-coordinate of the point to test.</span></span></param>
        <param name="pen"><span data-ttu-id="a41fd-705">O <see cref="T:System.Drawing.Pen" /> a ser testado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-705">The <see cref="T:System.Drawing.Pen" /> to test.</span></span></param>
        <param name="graphics"><span data-ttu-id="a41fd-706">O <see cref="T:System.Drawing.Graphics" /> do qual a visibilidade será testada.</span><span class="sxs-lookup"><span data-stu-id="a41fd-706">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span></span></param>
        <summary><span data-ttu-id="a41fd-707">Indica se o ponto especificado está contido dentro de (sob) o contorno deste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> quando desenhado com a <see cref="T:System.Drawing.Pen" /> especificada e usando o <see cref="T:System.Drawing.Graphics" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-707">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="a41fd-708">Este método retorna <see langword="true" /> se o ponto especificado está contido em (sob) o contorno deste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> quando desenhado com a <see cref="T:System.Drawing.Pen" /> especificada; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-708">This method returns <see langword="true" /> if the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-709">Esse método verifica se a estrutura de tópicos de um determinado caminho será renderizada visível no ponto especificado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-709">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span> <span data-ttu-id="a41fd-710">As coordenadas do ponto a ser testada são fornecidas nas coordenadas do mundo.</span><span class="sxs-lookup"><span data-stu-id="a41fd-710">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="a41fd-711">A matriz de transformação do `graphics` parâmetro temporariamente é aplicado antes de testar para visibilidade.</span><span class="sxs-lookup"><span data-stu-id="a41fd-711">The transform matrix of the `graphics` parameter is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a41fd-712">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-712">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsVisible">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a41fd-713">Indica se o ponto especificado está contido neste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-713">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::Point point);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="a41fd-714">Um <see cref="T:System.Drawing.Point" /> que representa o ponto a testar.</span><span class="sxs-lookup"><span data-stu-id="a41fd-714">A <see cref="T:System.Drawing.Point" /> that represents the point to test.</span></span></param>
        <summary><span data-ttu-id="a41fd-715">Indica se o ponto especificado está contido neste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-715">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <returns><span data-ttu-id="a41fd-716">Esse método retornará <see langword="true" /> se o ponto especificado estiver contido neste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-716">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a41fd-717">Para ver um exemplo, consulte `GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`.</span><span class="sxs-lookup"><span data-stu-id="a41fd-717">For an example, see `GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.PointF point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.PointF point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (point As PointF) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::PointF point);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="a41fd-718">Um <see cref="T:System.Drawing.PointF" /> que representa o ponto a testar.</span><span class="sxs-lookup"><span data-stu-id="a41fd-718">A <see cref="T:System.Drawing.PointF" /> that represents the point to test.</span></span></param>
        <summary><span data-ttu-id="a41fd-719">Indica se o ponto especificado está contido neste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-719">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <returns><span data-ttu-id="a41fd-720">Esse método retornará <see langword="true" /> se o ponto especificado estiver contido neste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-720">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a41fd-721">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-721">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.Point pt, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.Point pt, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::Point pt, System::Drawing::Graphics ^ graphics);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="pt"><span data-ttu-id="a41fd-722">Um <see cref="T:System.Drawing.Point" /> que representa o ponto a testar.</span><span class="sxs-lookup"><span data-stu-id="a41fd-722">A <see cref="T:System.Drawing.Point" /> that represents the point to test.</span></span></param>
        <param name="graphics"><span data-ttu-id="a41fd-723">O <see cref="T:System.Drawing.Graphics" /> do qual a visibilidade será testada.</span><span class="sxs-lookup"><span data-stu-id="a41fd-723">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span></span></param>
        <summary><span data-ttu-id="a41fd-724">Indica se o ponto especificado está contido neste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-724">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <returns><span data-ttu-id="a41fd-725">Esse método retornará <see langword="true" /> se o ponto especificado estiver contido neste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-725">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-726">As coordenadas do ponto a ser testada são fornecidas nas coordenadas do mundo.</span><span class="sxs-lookup"><span data-stu-id="a41fd-726">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="a41fd-727">A matriz de transformação do `graphics` parâmetro temporariamente é aplicado antes de testar para visibilidade.</span><span class="sxs-lookup"><span data-stu-id="a41fd-727">The transform matrix of the `graphics` parameter is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a41fd-728">Para ver um exemplo, consulte `GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`.</span><span class="sxs-lookup"><span data-stu-id="a41fd-728">For an example, see `GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.PointF pt, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.PointF pt, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::PointF pt, System::Drawing::Graphics ^ graphics);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.PointF" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="pt"><span data-ttu-id="a41fd-729">Um <see cref="T:System.Drawing.PointF" /> que representa o ponto a testar.</span><span class="sxs-lookup"><span data-stu-id="a41fd-729">A <see cref="T:System.Drawing.PointF" /> that represents the point to test.</span></span></param>
        <param name="graphics"><span data-ttu-id="a41fd-730">O <see cref="T:System.Drawing.Graphics" /> do qual a visibilidade será testada.</span><span class="sxs-lookup"><span data-stu-id="a41fd-730">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span></span></param>
        <summary><span data-ttu-id="a41fd-731">Indica se o ponto especificado está contido neste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-731">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <returns><span data-ttu-id="a41fd-732">Esse método retornará <see langword="true" /> se o ponto especificado estiver contido nisso; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-732">This method returns <see langword="true" /> if the specified point is contained within this; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-733">As coordenadas do ponto a ser testada são fornecidas nas coordenadas do mundo.</span><span class="sxs-lookup"><span data-stu-id="a41fd-733">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="a41fd-734">A matriz de transformação do `graphics` parâmetro temporariamente é aplicado antes de testar para visibilidade.</span><span class="sxs-lookup"><span data-stu-id="a41fd-734">The transform matrix of the `graphics` parameter is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a41fd-735">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-735">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Integer, y As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(int x, int y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="a41fd-736">A coordenada X do ponto a ser testado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-736">The x-coordinate of the point to test.</span></span></param>
        <param name="y"><span data-ttu-id="a41fd-737">A coordenada Y do ponto a ser testado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-737">The y-coordinate of the point to test.</span></span></param>
        <summary><span data-ttu-id="a41fd-738">Indica se o ponto especificado está contido neste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-738">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <returns><span data-ttu-id="a41fd-739">Esse método retornará <see langword="true" /> se o ponto especificado estiver contido neste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-739">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a41fd-740">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-740">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Single, y As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(float x, float y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="a41fd-741">A coordenada X do ponto a ser testado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-741">The x-coordinate of the point to test.</span></span></param>
        <param name="y"><span data-ttu-id="a41fd-742">A coordenada Y do ponto a ser testado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-742">The y-coordinate of the point to test.</span></span></param>
        <summary><span data-ttu-id="a41fd-743">Indica se o ponto especificado está contido neste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-743">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <returns><span data-ttu-id="a41fd-744">Esse método retornará <see langword="true" /> se o ponto especificado estiver contido neste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-744">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a41fd-745">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-745">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (int x, int y, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(int32 x, int32 y, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(int x, int y, System::Drawing::Graphics ^ graphics);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="a41fd-746">A coordenada X do ponto a ser testado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-746">The x-coordinate of the point to test.</span></span></param>
        <param name="y"><span data-ttu-id="a41fd-747">A coordenada Y do ponto a ser testado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-747">The y-coordinate of the point to test.</span></span></param>
        <param name="graphics"><span data-ttu-id="a41fd-748">O <see cref="T:System.Drawing.Graphics" /> do qual a visibilidade será testada.</span><span class="sxs-lookup"><span data-stu-id="a41fd-748">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span></span></param>
        <summary><span data-ttu-id="a41fd-749">Indica se o ponto especificado está contido neste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />, usando o <see cref="T:System.Drawing.Graphics" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-749">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />, using the specified <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="a41fd-750">Esse método retornará <see langword="true" /> se o ponto especificado estiver contido neste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-750">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-751">As coordenadas do ponto a ser testada são fornecidas nas coordenadas do mundo.</span><span class="sxs-lookup"><span data-stu-id="a41fd-751">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="a41fd-752">A matriz de transformação de `graphics` temporariamente é aplicada antes de testar para visibilidade.</span><span class="sxs-lookup"><span data-stu-id="a41fd-752">The transform matrix of `graphics` is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a41fd-753">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, uma <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="a41fd-753">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="a41fd-754">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="a41fd-754">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="a41fd-755">Cria um caminho e adiciona uma elipse ao caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-755">Creates a path and adds an ellipse to the path.</span></span>  
  
-   <span data-ttu-id="a41fd-756">Testa se o ponto especificado está contido dentro do caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-756">Tests whether the specified point is contained within the path.</span></span>  
  
-   <span data-ttu-id="a41fd-757">Exibe o resultado em uma caixa de diálogo.</span><span class="sxs-lookup"><span data-stu-id="a41fd-757">Displays the result in a dialog box.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#23](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#23)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#23](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#23)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#23](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (float x, float y, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(float32 x, float32 y, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(float x, float y, System::Drawing::Graphics ^ graphics);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="a41fd-758">A coordenada X do ponto a ser testado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-758">The x-coordinate of the point to test.</span></span></param>
        <param name="y"><span data-ttu-id="a41fd-759">A coordenada Y do ponto a ser testado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-759">The y-coordinate of the point to test.</span></span></param>
        <param name="graphics"><span data-ttu-id="a41fd-760">O <see cref="T:System.Drawing.Graphics" /> do qual a visibilidade será testada.</span><span class="sxs-lookup"><span data-stu-id="a41fd-760">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span></span></param>
        <summary><span data-ttu-id="a41fd-761">Indica se o ponto especificado está contido neste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />, na região de recorte visível do <see cref="T:System.Drawing.Graphics" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-761">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> in the visible clip region of the specified <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="a41fd-762">Esse método retornará <see langword="true" /> se o ponto especificado estiver contido neste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-762">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-763">As coordenadas do ponto a ser testada são fornecidas nas coordenadas do mundo.</span><span class="sxs-lookup"><span data-stu-id="a41fd-763">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="a41fd-764">A matriz de transformação do `graphics` parâmetro temporariamente é aplicado antes de testar para visibilidade.</span><span class="sxs-lookup"><span data-stu-id="a41fd-764">The transform matrix of the `graphics` parameter is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a41fd-765">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-765">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PathData">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.PathData PathData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Drawing2D.PathData PathData" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.PathData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathData As PathData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::PathData ^ PathData { System::Drawing::Drawing2D::PathData ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.PathData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a41fd-766">Obtém um <see cref="T:System.Drawing.Drawing2D.PathData" /> que encapsula matrizes de pontos (<paramref name="points" />) e tipos (<paramref name="types" />) para este <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-766">Gets a <see cref="T:System.Drawing.Drawing2D.PathData" /> that encapsulates arrays of points (<paramref name="points" />) and types (<paramref name="types" />) for this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <value><span data-ttu-id="a41fd-767">Um <see cref="T:System.Drawing.Drawing2D.PathData" /> que encapsula matrizes para os pontos e os tipos deste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-767">A <see cref="T:System.Drawing.Drawing2D.PathData" /> that encapsulates arrays for both the points and types for this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathPoints">
      <MemberSignature Language="C#" Value="public System.Drawing.PointF[] PathPoints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.PointF[] PathPoints" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathPoints As PointF()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Drawing::PointF&gt; ^ PathPoints { cli::array &lt;System::Drawing::PointF&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.PointF[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a41fd-768">Obtém os pontos no caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-768">Gets the points in the path.</span></span></summary>
        <value><span data-ttu-id="a41fd-769">Uma matriz de objetos <see cref="T:System.Drawing.PointF" /> que representam o caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-769">An array of <see cref="T:System.Drawing.PointF" /> objects that represent the path.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathTypes">
      <MemberSignature Language="C#" Value="public byte[] PathTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] PathTypes" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathTypes As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ PathTypes { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a41fd-770">Obtém os tipos dos pontos correspondentes na matriz <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-770">Gets the types of the corresponding points in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> array.</span></span></summary>
        <value><span data-ttu-id="a41fd-771">Uma matriz de bytes que especifica os tipos dos pontos correspondentes no caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-771">An array of bytes that specifies the types of the corresponding points in the path.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-772">A matriz de bytes retornado pelo <xref:System.Drawing.Drawing2D.GraphicsPath.PathTypes%2A> propriedade especifica sinalizadores para os pontos de dados e tipos de pontos em um caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-772">The array of bytes returned by the <xref:System.Drawing.Drawing2D.GraphicsPath.PathTypes%2A> property specifies point types and flags for the data points in a path.</span></span> <span data-ttu-id="a41fd-773">Para cada ponto, bits de 0 a 2 indicam o tipo de um ponto e bits de 3 a 7 manter um conjunto de sinalizadores que especificam os atributos de um ponto.</span><span class="sxs-lookup"><span data-stu-id="a41fd-773">For each point, bits 0 through 2 indicate the type of a point, and bits 3 through 7 hold a set of flags that specify the attributes of a point.</span></span> <span data-ttu-id="a41fd-774">A tabela a seguir mostra os valores possíveis e seus significados.</span><span class="sxs-lookup"><span data-stu-id="a41fd-774">The following table shows possible values and their meanings.</span></span>  
  
|<span data-ttu-id="a41fd-775">Valor</span><span class="sxs-lookup"><span data-stu-id="a41fd-775">Value</span></span>|<span data-ttu-id="a41fd-776">Significado</span><span class="sxs-lookup"><span data-stu-id="a41fd-776">Meaning</span></span>|  
|-----------|-------------|  
|<span data-ttu-id="a41fd-777">0</span><span class="sxs-lookup"><span data-stu-id="a41fd-777">0</span></span>|<span data-ttu-id="a41fd-778">Indica que o ponto de início de uma figura.</span><span class="sxs-lookup"><span data-stu-id="a41fd-778">Indicates that the point is the start of a figure.</span></span>|  
|<span data-ttu-id="a41fd-779">1</span><span class="sxs-lookup"><span data-stu-id="a41fd-779">1</span></span>|<span data-ttu-id="a41fd-780">Indica que o ponto é um dos dois pontos de extremidade de uma linha.</span><span class="sxs-lookup"><span data-stu-id="a41fd-780">Indicates that the point is one of the two endpoints of a line.</span></span>|  
|<span data-ttu-id="a41fd-781">3</span><span class="sxs-lookup"><span data-stu-id="a41fd-781">3</span></span>|<span data-ttu-id="a41fd-782">Indica que o ponto é um ponto de extremidade ou ponto de controle de uma spline de Bézier cúbica.</span><span class="sxs-lookup"><span data-stu-id="a41fd-782">Indicates that the point is an endpoint or control point of a cubic Bézier spline.</span></span>|  
|<span data-ttu-id="a41fd-783">0x7</span><span class="sxs-lookup"><span data-stu-id="a41fd-783">0x7</span></span>|<span data-ttu-id="a41fd-784">Máscaras de todos os bits, exceto os três bits de ordem inferior que indicam o tipo de ponto.</span><span class="sxs-lookup"><span data-stu-id="a41fd-784">Masks all bits except for the three low-order bits, which indicate the point type.</span></span>|  
|<span data-ttu-id="a41fd-785">0x20</span><span class="sxs-lookup"><span data-stu-id="a41fd-785">0x20</span></span>|<span data-ttu-id="a41fd-786">Especifica que o ponto de um marcador.</span><span class="sxs-lookup"><span data-stu-id="a41fd-786">Specifies that the point is a marker.</span></span>|  
|<span data-ttu-id="a41fd-787">0x80</span><span class="sxs-lookup"><span data-stu-id="a41fd-787">0x80</span></span>|<span data-ttu-id="a41fd-788">Especifica que o ponto é o último ponto em um subcaminho fechado (Figura).</span><span class="sxs-lookup"><span data-stu-id="a41fd-788">Specifies that the point is the last point in a closed subpath (figure).</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PointCount">
      <MemberSignature Language="C#" Value="public int PointCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PointCount" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.PointCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PointCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PointCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a41fd-789">Obtém o número de elementos na <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> ou na matriz <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-789">Gets the number of elements in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> or the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> array.</span></span></summary>
        <value><span data-ttu-id="a41fd-790">Um inteiro que especifica o número de elementos no <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> ou <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> matriz.</span><span class="sxs-lookup"><span data-stu-id="a41fd-790">An integer that specifies the number of elements in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> or the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> array.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a41fd-791">Esvazia as matrizes <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> e <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> e define o <see cref="T:System.Drawing.Drawing2D.FillMode" /> como <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-791">Empties the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> and <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> arrays and sets the <see cref="T:System.Drawing.Drawing2D.FillMode" /> to <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a41fd-792">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, uma <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="a41fd-792">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="a41fd-793">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="a41fd-793">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="a41fd-794">Cria um caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-794">Creates a path.</span></span>  
  
-   <span data-ttu-id="a41fd-795">Adiciona várias primitivos a ele.</span><span class="sxs-lookup"><span data-stu-id="a41fd-795">Adds several primitives to it.</span></span>  
  
-   <span data-ttu-id="a41fd-796">Desenha a matriz de pontos do caminho para a tela.</span><span class="sxs-lookup"><span data-stu-id="a41fd-796">Draws the path's points array to the screen.</span></span>  
  
-   <span data-ttu-id="a41fd-797">Redefine o caminho para um estado vazio.</span><span class="sxs-lookup"><span data-stu-id="a41fd-797">Resets the path to an empty state.</span></span>  
  
-   <span data-ttu-id="a41fd-798">Adquire novamente a matriz de pontos (se houver).</span><span class="sxs-lookup"><span data-stu-id="a41fd-798">Re-acquires the points array (if it exists).</span></span>  
  
-   <span data-ttu-id="a41fd-799">Desenha a matriz para a tela.</span><span class="sxs-lookup"><span data-stu-id="a41fd-799">Draws the array to the screen.</span></span>  
  
 <span data-ttu-id="a41fd-800">Observe que ele encontrar nenhuma matriz após a chamada de redefinição.</span><span class="sxs-lookup"><span data-stu-id="a41fd-800">Notice that it finds no array following the reset call.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#24](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#24)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#24](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#24)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#24](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public void Reverse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reverse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Reverse" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reverse ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reverse();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a41fd-801">Inverte a ordem dos pontos na matriz <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> desse <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-801">Reverses the order of points in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> array of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a41fd-802">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, uma <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="a41fd-802">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="a41fd-803">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="a41fd-803">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="a41fd-804">Cria um caminho e adiciona várias primitivos para o caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-804">Creates a path and adds several primitives to the path.</span></span>  
  
-   <span data-ttu-id="a41fd-805">Desenha a matriz de pontos do caminho para a tela.</span><span class="sxs-lookup"><span data-stu-id="a41fd-805">Draws the path's points array to the screen.</span></span>  
  
-   <span data-ttu-id="a41fd-806">Desenha a matriz de pontos revertida para a tela.</span><span class="sxs-lookup"><span data-stu-id="a41fd-806">Draws the reversed points array to the screen.</span></span>  
  
 <span data-ttu-id="a41fd-807">Observe que a segunda listagem de pontos na ordem inversa da primeira.</span><span class="sxs-lookup"><span data-stu-id="a41fd-807">Notice that the second listing of points is in reverse order from the first.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#25](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#25)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#25](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#25)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#25](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMarkers">
      <MemberSignature Language="C#" Value="public void SetMarkers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetMarkers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.SetMarkers" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetMarkers ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetMarkers();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a41fd-808">Define um marcador neste <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-808">Sets a marker on this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-809">Esse método cria um marcador no caminho que pode ser usado para separar seções do caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-809">This method creates a marker on the path that can be used to separate sections of the path.</span></span> <span data-ttu-id="a41fd-810">Você pode usar o <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> métodos para iterar os marcadores no caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-810">You can then use the <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> methods to iterate through the markers in the path.</span></span>  
  
 <span data-ttu-id="a41fd-811">Marcadores são usados para separar grupos de subcaminhos.</span><span class="sxs-lookup"><span data-stu-id="a41fd-811">Markers are used to separate groups of subpaths.</span></span> <span data-ttu-id="a41fd-812">Subcaminhos de um ou mais podem estar contidos entre dois marcadores no caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-812">One or more subpaths can be contained between two markers in the path.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a41fd-813">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, uma <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="a41fd-813">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="a41fd-814">O código cria um caminho e adiciona várias primitivos para o caminho separado por marcadores e desenha o caminho para a tela.</span><span class="sxs-lookup"><span data-stu-id="a41fd-814">The code creates a path and adds several primitives to the path separated by markers, and draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#26](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#26)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#26](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#26)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#26](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartFigure">
      <MemberSignature Language="C#" Value="public void StartFigure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartFigure() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartFigure ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartFigure();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a41fd-815">Inicia uma nova figura sem fechar a figura atual.</span><span class="sxs-lookup"><span data-stu-id="a41fd-815">Starts a new figure without closing the current figure.</span></span> <span data-ttu-id="a41fd-816">Todos os pontos subsequentes adicionados ao caminho são adicionados a essa nova figura.</span><span class="sxs-lookup"><span data-stu-id="a41fd-816">All subsequent points added to the path are added to this new figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-817">O usuário deve manter os pontos originais se forem necessários.</span><span class="sxs-lookup"><span data-stu-id="a41fd-817">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="a41fd-818">Os pontos originais são convertidos em pontos de controle de Bézier cúbicos internamente, portanto, não há nenhum mecanismo para retornar os pontos originais.</span><span class="sxs-lookup"><span data-stu-id="a41fd-818">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
 <span data-ttu-id="a41fd-819">Esse método inicia um subcaminho de novo no caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-819">This method starts a new subpath in the path.</span></span> <span data-ttu-id="a41fd-820">Subcaminhos permitem que você separar um caminho em seções e usar o <xref:System.Drawing.Drawing2D.GraphicsPathIterator> classe para iterar por meio de subcaminhos.</span><span class="sxs-lookup"><span data-stu-id="a41fd-820">Subpaths allow you to separate a path into sections and use the <xref:System.Drawing.Drawing2D.GraphicsPathIterator> class to iterate through the subpaths.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a41fd-821">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, uma <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="a41fd-821">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="a41fd-822">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="a41fd-822">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="a41fd-823">Cria um caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-823">Creates a path.</span></span>  
  
-   <span data-ttu-id="a41fd-824">Adiciona dois conjuntos de valores.</span><span class="sxs-lookup"><span data-stu-id="a41fd-824">Adds two sets of figures.</span></span> <span data-ttu-id="a41fd-825">O primeiro conjunto de figuras combina quatro primitivas em duas figuras.</span><span class="sxs-lookup"><span data-stu-id="a41fd-825">The first set of figures combines four primitives into two figures.</span></span> <span data-ttu-id="a41fd-826">O segundo conjunto de figuras combina as mesmas primitivas de quatro (exceto que eles são deslocados no eixo y) em três números.</span><span class="sxs-lookup"><span data-stu-id="a41fd-826">The second set of figures combines the same four primitives (except that they are offset in the y-axis) into three figures.</span></span>  
  
-   <span data-ttu-id="a41fd-827">Desenha todos os valores para a tela.</span><span class="sxs-lookup"><span data-stu-id="a41fd-827">Draws all the figures to the screen.</span></span>  
  
 <span data-ttu-id="a41fd-828">Observe a diferença de aparência entre os dois conjuntos de valores.</span><span class="sxs-lookup"><span data-stu-id="a41fd-828">Notice the difference in the appearance between the two sets of figures.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#27](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#27)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#27](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#27)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#27](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="a41fd-829">Um <see cref="T:System.Drawing.Drawing2D.Matrix" /> que representa a transformação a ser aplicada.</span><span class="sxs-lookup"><span data-stu-id="a41fd-829">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that represents the transformation to apply.</span></span></param>
        <summary><span data-ttu-id="a41fd-830">Aplica a uma matriz de transformação a este <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-830">Applies a transform matrix to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-831">A transformação pode dimensionar, traduzir, girar ou inclinar o <xref:System.Drawing.Drawing2D.GraphicsPath>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-831">The transformation can scale, translate, rotate, or skew the <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a41fd-832">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, uma <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="a41fd-832">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="a41fd-833">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="a41fd-833">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="a41fd-834">Cria um caminho e adiciona uma elipse ao caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-834">Creates a path and adds an ellipse to the path.</span></span>  
  
-   <span data-ttu-id="a41fd-835">Desenha o caminho para a tela.</span><span class="sxs-lookup"><span data-stu-id="a41fd-835">Draws path to the screen.</span></span>  
  
-   <span data-ttu-id="a41fd-836">Cria uma matriz de transformação para converter as 100 unidades de caminho na direção do eixo x.</span><span class="sxs-lookup"><span data-stu-id="a41fd-836">Creates a transform matrix to translate the path 100 units in the x-axis direction.</span></span>  
  
-   <span data-ttu-id="a41fd-837">Desenha o caminho transformado na tela.</span><span class="sxs-lookup"><span data-stu-id="a41fd-837">Draws the transformed path to the screen.</span></span>  
  
 <span data-ttu-id="a41fd-838">Observe que a elipse original é desenhada em preto e transformado elipse é desenhada em vermelho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-838">Notice that the original ellipse is drawn in black and the transformed ellipse is drawn in red.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#28](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#28)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#28](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#28)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#28](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Warp">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a41fd-839">Aplica uma transformação de distorção, definida por um retângulo e um paralelogramo, a este <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-839">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Warp">
      <MemberSignature Language="C#" Value="public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warp(valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Warp (destPoints As PointF(), srcRect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warp(cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="destPoints"><span data-ttu-id="a41fd-840">Uma matriz de estruturas <see cref="T:System.Drawing.PointF" /> que definem um paralelogramo no qual o retângulo definido por <c>srcRect</c> é transformado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-840">An array of <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram to which the rectangle defined by <c>srcRect</c> is transformed.</span></span> <span data-ttu-id="a41fd-841">A matriz pode conter três ou quatro elementos.</span><span class="sxs-lookup"><span data-stu-id="a41fd-841">The array can contain either three or four elements.</span></span> <span data-ttu-id="a41fd-842">Se a matriz contiver três elementos, o canto inferior direito do paralelogramo será inferido pelos três primeiros pontos.</span><span class="sxs-lookup"><span data-stu-id="a41fd-842">If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</span></span></param>
        <param name="srcRect"><span data-ttu-id="a41fd-843">Um <see cref="T:System.Drawing.RectangleF" /> que representa o retângulo que é transformado no paralelogramo definido por <c>destPoints</c>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-843">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <c>destPoints</c>.</span></span></param>
        <summary><span data-ttu-id="a41fd-844">Aplica uma transformação de distorção, definida por um retângulo e um paralelogramo, a este <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-844">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a41fd-845">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-845">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Warp">
      <MemberSignature Language="C#" Value="public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warp(valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warp(cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="destPoints"><span data-ttu-id="a41fd-846">Uma matriz de estruturas <see cref="T:System.Drawing.PointF" /> que definem um paralelogramo no qual o retângulo definido por <c>srcRect</c> é transformado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-846">An array of <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram to which the rectangle defined by <c>srcRect</c> is transformed.</span></span> <span data-ttu-id="a41fd-847">A matriz pode conter três ou quatro elementos.</span><span class="sxs-lookup"><span data-stu-id="a41fd-847">The array can contain either three or four elements.</span></span> <span data-ttu-id="a41fd-848">Se a matriz contiver três elementos, o canto inferior direito do paralelogramo será inferido pelos três primeiros pontos.</span><span class="sxs-lookup"><span data-stu-id="a41fd-848">If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</span></span></param>
        <param name="srcRect"><span data-ttu-id="a41fd-849">Um <see cref="T:System.Drawing.RectangleF" /> que representa o retângulo que é transformado no paralelogramo definido por <c>destPoints</c>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-849">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <c>destPoints</c>.</span></span></param>
        <param name="matrix"><span data-ttu-id="a41fd-850">Um <see cref="T:System.Drawing.Drawing2D.Matrix" /> que especifica uma transformação geométrica a ser aplicada ao caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-850">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a geometric transform to apply to the path.</span></span></param>
        <summary><span data-ttu-id="a41fd-851">Aplica uma transformação de distorção, definida por um retângulo e um paralelogramo, a este <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-851">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a41fd-852">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-852">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Warp">
      <MemberSignature Language="C#" Value="public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.WarpMode warpMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warp(valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, class System.Drawing.Drawing2D.Matrix matrix, valuetype System.Drawing.Drawing2D.WarpMode warpMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warp(cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Drawing2D::WarpMode warpMode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="warpMode" Type="System.Drawing.Drawing2D.WarpMode" />
      </Parameters>
      <Docs>
        <param name="destPoints"><span data-ttu-id="a41fd-853">Uma matriz de estruturas <see cref="T:System.Drawing.PointF" /> que define um paralelogramo no qual o retângulo definido por <c>srcRect</c> é transformado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-853">An array of <see cref="T:System.Drawing.PointF" /> structures that defines a parallelogram to which the rectangle defined by <c>srcRect</c> is transformed.</span></span> <span data-ttu-id="a41fd-854">A matriz pode conter três ou quatro elementos.</span><span class="sxs-lookup"><span data-stu-id="a41fd-854">The array can contain either three or four elements.</span></span> <span data-ttu-id="a41fd-855">Se a matriz contiver três elementos, o canto inferior direito do paralelogramo será inferido pelos três primeiros pontos.</span><span class="sxs-lookup"><span data-stu-id="a41fd-855">If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</span></span></param>
        <param name="srcRect"><span data-ttu-id="a41fd-856">Um <see cref="T:System.Drawing.RectangleF" /> que representa o retângulo que é transformado no paralelogramo definido por <c>destPoints</c>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-856">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <c>destPoints</c>.</span></span></param>
        <param name="matrix"><span data-ttu-id="a41fd-857">Um <see cref="T:System.Drawing.Drawing2D.Matrix" /> que especifica uma transformação geométrica a ser aplicada ao caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-857">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a geometric transform to apply to the path.</span></span></param>
        <param name="warpMode"><span data-ttu-id="a41fd-858">Uma enumeração <see cref="T:System.Drawing.Drawing2D.WarpMode" /> que especifica se essa operação de distorção usa o modo bilinear ou de perspectiva.</span><span class="sxs-lookup"><span data-stu-id="a41fd-858">A <see cref="T:System.Drawing.Drawing2D.WarpMode" /> enumeration that specifies whether this warp operation uses perspective or bilinear mode.</span></span></param>
        <summary><span data-ttu-id="a41fd-859">Aplica uma transformação de distorção, definida por um retângulo e um paralelogramo, a este <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-859">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a41fd-860">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-860">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Warp">
      <MemberSignature Language="C#" Value="public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.WarpMode warpMode, float flatness);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warp(valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, class System.Drawing.Drawing2D.Matrix matrix, valuetype System.Drawing.Drawing2D.WarpMode warpMode, float32 flatness) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warp(cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Drawing2D::WarpMode warpMode, float flatness);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="warpMode" Type="System.Drawing.Drawing2D.WarpMode" />
        <Parameter Name="flatness" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="destPoints"><span data-ttu-id="a41fd-861">Uma matriz de estruturas <see cref="T:System.Drawing.PointF" /> que definem um paralelogramo no qual o retângulo definido por <c>srcRect</c> é transformado.</span><span class="sxs-lookup"><span data-stu-id="a41fd-861">An array of <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram to which the rectangle defined by <c>srcRect</c> is transformed.</span></span> <span data-ttu-id="a41fd-862">A matriz pode conter três ou quatro elementos.</span><span class="sxs-lookup"><span data-stu-id="a41fd-862">The array can contain either three or four elements.</span></span> <span data-ttu-id="a41fd-863">Se a matriz contiver três elementos, o canto inferior direito do paralelogramo será inferido pelos três primeiros pontos.</span><span class="sxs-lookup"><span data-stu-id="a41fd-863">If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</span></span></param>
        <param name="srcRect"><span data-ttu-id="a41fd-864">Um <see cref="T:System.Drawing.RectangleF" /> que representa o retângulo que é transformado no paralelogramo definido por <c>destPoints</c>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-864">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <c>destPoints</c>.</span></span></param>
        <param name="matrix"><span data-ttu-id="a41fd-865">Um <see cref="T:System.Drawing.Drawing2D.Matrix" /> que especifica uma transformação geométrica a ser aplicada ao caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-865">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a geometric transform to apply to the path.</span></span></param>
        <param name="warpMode"><span data-ttu-id="a41fd-866">Uma enumeração <see cref="T:System.Drawing.Drawing2D.WarpMode" /> que especifica se essa operação de distorção usa o modo bilinear ou de perspectiva.</span><span class="sxs-lookup"><span data-stu-id="a41fd-866">A <see cref="T:System.Drawing.Drawing2D.WarpMode" /> enumeration that specifies whether this warp operation uses perspective or bilinear mode.</span></span></param>
        <param name="flatness"><span data-ttu-id="a41fd-867">Um valor de 0 a 1 que especifica a planeza do caminho resultante.</span><span class="sxs-lookup"><span data-stu-id="a41fd-867">A value from 0 through 1 that specifies how flat the resulting path is.</span></span> <span data-ttu-id="a41fd-868">Para obter mais informações, consulte os métodos <see cref="M:System.Drawing.Drawing2D.GraphicsPath.Flatten" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-868">For more information, see the <see cref="M:System.Drawing.Drawing2D.GraphicsPath.Flatten" /> methods.</span></span></param>
        <summary><span data-ttu-id="a41fd-869">Aplica uma transformação de distorção, definida por um retângulo e um paralelogramo, a este <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-869">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a41fd-870">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, uma <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="a41fd-870">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="a41fd-871">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="a41fd-871">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="a41fd-872">Cria um caminho e adiciona um retângulo ao caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-872">Creates a path and adds a rectangle to the path.</span></span>  
  
-   <span data-ttu-id="a41fd-873">Desenha um retângulo para a tela em preto.</span><span class="sxs-lookup"><span data-stu-id="a41fd-873">Draws that rectangle to the screen in black.</span></span>  
  
-   <span data-ttu-id="a41fd-874">Deforma o caminho com uma distorção de perspectiva.</span><span class="sxs-lookup"><span data-stu-id="a41fd-874">Warps the path with a perspective warp.</span></span>  
  
-   <span data-ttu-id="a41fd-875">Desenha o retângulo distorcido (caminho) para a tela em vermelho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-875">Draws the warped rectangle (path) to the screen in red.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#29](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#29)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#29](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#29)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#29](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#29)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Widen">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a41fd-876">Substitui este caminho por curvas que circunscrevem a área preenchida quando esse caminho é desenhado pela caneta especificada.</span><span class="sxs-lookup"><span data-stu-id="a41fd-876">Replaces this path with curves that enclose the area that is filled when this path is drawn by the specified pen.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Widen">
      <MemberSignature Language="C#" Value="public void Widen (System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Widen(class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Widen(System::Drawing::Pen ^ pen);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="a41fd-877">Um <see cref="T:System.Drawing.Pen" /> que especifica a largura entre a estrutura de tópicos original do caminho e a nova estrutura de tópicos criada por esse método.</span><span class="sxs-lookup"><span data-stu-id="a41fd-877">A <see cref="T:System.Drawing.Pen" /> that specifies the width between the original outline of the path and the new outline this method creates.</span></span></param>
        <summary><span data-ttu-id="a41fd-878">Adiciona um contorno adicional ao caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-878">Adds an additional outline to the path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-879">Esse método cria uma estrutura de tópicos em torno de linhas original na <xref:System.Drawing.Drawing2D.GraphicsPath>, com uma distância entre as linhas existentes e os novos tópicos igual a que a largura do <xref:System.Drawing.Pen> usado na chamada para <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-879">This method creates an outline around the original lines in this <xref:System.Drawing.Drawing2D.GraphicsPath>, with a distance between the existing lines and the new outline equal to that of the width of the <xref:System.Drawing.Pen> used in the call to <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span></span> <span data-ttu-id="a41fd-880">Se você deseja preencher o espaço entre as linhas que você deve usar o <xref:System.Drawing.Graphics.FillPath%2A> em vez de <xref:System.Drawing.Graphics.DrawPath%2A>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-880">If you want to fill the space between the lines you must use the <xref:System.Drawing.Graphics.FillPath%2A> rather then the <xref:System.Drawing.Graphics.DrawPath%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a41fd-881">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-881">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Widen">
      <MemberSignature Language="C#" Value="public void Widen (System.Drawing.Pen pen, System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Widen(class System.Drawing.Pen pen, class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Widen(System::Drawing::Pen ^ pen, System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="a41fd-882">Um <see cref="T:System.Drawing.Pen" /> que especifica a largura entre a estrutura de tópicos original do caminho e a nova estrutura de tópicos criada por esse método.</span><span class="sxs-lookup"><span data-stu-id="a41fd-882">A <see cref="T:System.Drawing.Pen" /> that specifies the width between the original outline of the path and the new outline this method creates.</span></span></param>
        <param name="matrix"><span data-ttu-id="a41fd-883">Um <see cref="T:System.Drawing.Drawing2D.Matrix" /> que especifica uma transformação a ser aplicada ao caminho antes da ampliação.</span><span class="sxs-lookup"><span data-stu-id="a41fd-883">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transform to apply to the path before widening.</span></span></param>
        <summary><span data-ttu-id="a41fd-884">Adiciona um contorno adicional ao <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="a41fd-884">Adds an additional outline to the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-885">Esse método cria uma estrutura de tópicos em torno de linhas original na <xref:System.Drawing.Drawing2D.GraphicsPath>, com uma distância entre as linhas existentes e os novos tópicos igual a que a largura do <xref:System.Drawing.Pen> usado na chamada para <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-885">This method creates an outline around the original lines in this <xref:System.Drawing.Drawing2D.GraphicsPath>, with a distance between the existing lines and the new outline equal to that of the width of the <xref:System.Drawing.Pen> used in the call to <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span></span> <span data-ttu-id="a41fd-886">Se você deseja preencher o espaço entre as linhas que você deve usar o <xref:System.Drawing.Graphics.FillPath%2A> em vez de <xref:System.Drawing.Graphics.DrawPath%2A>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-886">If you want to fill the space between the lines you must use the <xref:System.Drawing.Graphics.FillPath%2A> rather then the <xref:System.Drawing.Graphics.DrawPath%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a41fd-887">Para ver um exemplo, consulte <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-887">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Widen">
      <MemberSignature Language="C#" Value="public void Widen (System.Drawing.Pen pen, System.Drawing.Drawing2D.Matrix matrix, float flatness);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Widen(class System.Drawing.Pen pen, class System.Drawing.Drawing2D.Matrix matrix, float32 flatness) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Widen(System::Drawing::Pen ^ pen, System::Drawing::Drawing2D::Matrix ^ matrix, float flatness);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="flatness" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="a41fd-888">Um <see cref="T:System.Drawing.Pen" /> que especifica a largura entre a estrutura de tópicos original do caminho e a nova estrutura de tópicos criada por esse método.</span><span class="sxs-lookup"><span data-stu-id="a41fd-888">A <see cref="T:System.Drawing.Pen" /> that specifies the width between the original outline of the path and the new outline this method creates.</span></span></param>
        <param name="matrix"><span data-ttu-id="a41fd-889">Um <see cref="T:System.Drawing.Drawing2D.Matrix" /> que especifica uma transformação a ser aplicada ao caminho antes da ampliação.</span><span class="sxs-lookup"><span data-stu-id="a41fd-889">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transform to apply to the path before widening.</span></span></param>
        <param name="flatness"><span data-ttu-id="a41fd-890">Um valor que especifica a planeza das curvas.</span><span class="sxs-lookup"><span data-stu-id="a41fd-890">A value that specifies the flatness for curves.</span></span></param>
        <summary><span data-ttu-id="a41fd-891">Substitui este <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> por curvas que circunscrevem a área preenchida quando esse caminho é desenhado pela caneta especificada.</span><span class="sxs-lookup"><span data-stu-id="a41fd-891">Replaces this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> with curves that enclose the area that is filled when this path is drawn by the specified pen.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a41fd-892">Esse método cria uma estrutura de tópicos em torno de linhas original na <xref:System.Drawing.Drawing2D.GraphicsPath>, com uma distância entre as linhas existentes e os novos tópicos igual a que a largura do <xref:System.Drawing.Pen> usado na chamada para <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-892">This method creates an outline around the original lines in this <xref:System.Drawing.Drawing2D.GraphicsPath>, with a distance between the existing lines and the new outline equal to that of the width of the <xref:System.Drawing.Pen> used in the call to <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span></span> <span data-ttu-id="a41fd-893">Se você deseja preencher o espaço entre as linhas que você deve usar o <xref:System.Drawing.Graphics.FillPath%2A> em vez de <xref:System.Drawing.Graphics.DrawPath%2A>.</span><span class="sxs-lookup"><span data-stu-id="a41fd-893">If you want to fill the space between the lines you must use the <xref:System.Drawing.Graphics.FillPath%2A> rather then the <xref:System.Drawing.Graphics.DrawPath%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a41fd-894">O exemplo de código a seguir foi projetado para uso com o Windows Forms e requer <xref:System.Windows.Forms.PaintEventArgs> `e`, uma <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="a41fd-894">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="a41fd-895">O código executa as seguintes ações:</span><span class="sxs-lookup"><span data-stu-id="a41fd-895">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="a41fd-896">Cria um caminho e adiciona duas elipses no caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-896">Creates a path and adds two ellipses to the path.</span></span>  
  
-   <span data-ttu-id="a41fd-897">Desenha o caminho em preto.</span><span class="sxs-lookup"><span data-stu-id="a41fd-897">Draws the path in black.</span></span>  
  
-   <span data-ttu-id="a41fd-898">Amplia o caminho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-898">Widens the path.</span></span>  
  
-   <span data-ttu-id="a41fd-899">Desenha o caminho em vermelho.</span><span class="sxs-lookup"><span data-stu-id="a41fd-899">Draws the path in red.</span></span>  
  
 <span data-ttu-id="a41fd-900">Observe que o processamento de segundo usa <xref:System.Drawing.Graphics.FillPath%2A> em vez de <xref:System.Drawing.Graphics.DrawPath%2A>, e, portanto, a Figura renderizada tem a estrutura de tópicos preenchida.</span><span class="sxs-lookup"><span data-stu-id="a41fd-900">Notice that the second rendering uses <xref:System.Drawing.Graphics.FillPath%2A> instead of <xref:System.Drawing.Graphics.DrawPath%2A>, and hence the rendered figure has the outline filled.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#30](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#30)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#30)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#30)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>