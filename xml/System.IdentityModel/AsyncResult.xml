<Type Name="AsyncResult" FullName="System.IdentityModel.AsyncResult">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="23d8860c780243a3a6d8738333fbea20284fb841" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class AsyncResult : IAsyncResult, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AsyncResult extends System.Object implements class System.IAsyncResult, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.AsyncResult" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class AsyncResult&#xA;Implements IAsyncResult, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class AsyncResult abstract : IAsyncResult, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IAsyncResult</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="e7087-101">Uma classe base abstrata que implementa a interface <see cref="T:System.IAsyncResult" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e7087-101">An abstract base class that implements the <see cref="T:System.IAsyncResult" /> interface.</span>
      </span>
      <span data-ttu-id="e7087-102">Serve como uma classe base da qual derivar objetos <see cref="T:System.IAsyncResult" /> que podem ser usados para cenários comuns de programação assíncrona.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e7087-102">Serves as a base class from which to derive <see cref="T:System.IAsyncResult" /> objects that can be used for common asynchronous programming scenarios.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7087-103">Para obter mais informações, consulte o <xref:System.IAsyncResult?displayProperty=nameWithType> interface.</span><span class="sxs-lookup"><span data-stu-id="e7087-103">For more information see the <xref:System.IAsyncResult?displayProperty=nameWithType> interface.</span></span>  
  
 <span data-ttu-id="e7087-104">O <xref:System.IdentityModel.TypedAsyncResult%601> classe deriva de <xref:System.IdentityModel.AsyncResult>.</span><span class="sxs-lookup"><span data-stu-id="e7087-104">The <xref:System.IdentityModel.TypedAsyncResult%601> class derives from <xref:System.IdentityModel.AsyncResult>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7087-105">Chamado de construtores em classes derivadas para inicializar a classe <see cref="T:System.IdentityModel.AsyncResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7087-105">Called from constructors in derived classes to initialize the <see cref="T:System.IdentityModel.AsyncResult" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AsyncResult ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.AsyncResult.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AsyncResult();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e7087-106">Chamado de construtores em classes derivadas para inicializar uma instância da classe <see cref="T:System.IdentityModel.AsyncResult" /> que não tem um delegado de retorno de chamada ou um objeto de estado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7087-106">Called from constructors in derived classes to initialize an instance of the <see cref="T:System.IdentityModel.AsyncResult" /> class that does not have a callback delegate or  a state object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AsyncResult (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.AsyncResult.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AsyncResult(System::Object ^ state);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">
          <span data-ttu-id="e7087-107">Um objeto definido pelo usuário que qualifica ou contém informações sobre uma operação assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7087-107">A user-defined object that qualifies or contains information about an asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7087-108">Chamado de construtores em classes derivadas para inicializar uma instância da classe <see cref="T:System.IdentityModel.AsyncResult" /> que não tem um delegado de retorno de chamada, mas tem um objeto de estado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7087-108">Called from constructors in derived classes to initialize an instance of the <see cref="T:System.IdentityModel.AsyncResult" /> class that does not have a callback delegate but does have  a state object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AsyncResult (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.AsyncResult.#ctor(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (callback As AsyncCallback, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AsyncResult(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="e7087-109">O método a ser chamado quando a operação assíncrona é concluída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7087-109">The method to be called when the asynchronous operation completes.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="e7087-110">Um objeto definido pelo usuário que qualifica ou contém informações sobre uma operação assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7087-110">A user-defined object that qualifies or contains information about an asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7087-111">Chamado de construtores em classes derivadas para inicializar uma instância da classe <see cref="T:System.IdentityModel.AsyncResult" /> que tem um delegado de retorno de chamada e um objeto de estado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7087-111">Called from constructors in derived classes to initialize an instance of the <see cref="T:System.IdentityModel.AsyncResult" /> class that has a callback delegate and  a state object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncState">
      <MemberSignature Language="C#" Value="public object AsyncState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AsyncState" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.AsyncResult.AsyncState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AsyncState As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ AsyncState { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.AsyncState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7087-112">Obtém um objeto definido pelo usuário que qualifica ou contém informações sobre uma operação assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7087-112">Gets a user-defined object that qualifies or contains information about an asynchronous operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7087-113">Um objeto definido pelo usuário que qualifica ou contém informações sobre uma operação assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7087-113">A user-defined object that qualifies or contains information about an asynchronous operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7087-114">Para obter mais informações, consulte o <xref:System.IAsyncResult.AsyncState%2A?displayProperty=nameWithType> propriedade.</span><span class="sxs-lookup"><span data-stu-id="e7087-114">For more information see the <xref:System.IAsyncResult.AsyncState%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncWaitHandle">
      <MemberSignature Language="C#" Value="public virtual System.Threading.WaitHandle AsyncWaitHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.WaitHandle AsyncWaitHandle" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.AsyncResult.AsyncWaitHandle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AsyncWaitHandle As WaitHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Threading::WaitHandle ^ AsyncWaitHandle { System::Threading::WaitHandle ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.AsyncWaitHandle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.WaitHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7087-115">Obtém um <see cref="T:System.Threading.WaitHandle" /> que é usado para aguardar a conclusão de uma operação assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7087-115">Gets a <see cref="T:System.Threading.WaitHandle" /> that is used to wait for an asynchronous operation to complete.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7087-116">Um <see cref="T:System.Threading.WaitHandle" /> que é usado para aguardar a conclusão de uma operação assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7087-116">A <see cref="T:System.Threading.WaitHandle" /> that is used to wait for an asynchronous operation to complete.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7087-117">Para obter mais informações, consulte o <xref:System.IAsyncResult.AsyncWaitHandle%2A?displayProperty=nameWithType> propriedade.</span><span class="sxs-lookup"><span data-stu-id="e7087-117">For more information see the <xref:System.IAsyncResult.AsyncWaitHandle%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Complete">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7087-118">Chamado para concluir a operação assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7087-118">Called to complete the asynchronous operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="protected void Complete (bool completedSynchronously);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Complete(bool completedSynchronously) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.AsyncResult.Complete(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Complete (completedSynchronously As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Complete(bool completedSynchronously);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="completedSynchronously" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="completedSynchronously">
          <span data-ttu-id="e7087-119">
            <see langword="true" /> se a operação assíncrona for concluída de maneira síncrona; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7087-119">
              <see langword="true" /> if the asynchronous operation completed synchronously; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7087-120">Chame esta versão de concluída quando a operação assíncrona tiver sido concluída e nenhuma exceção tiver sido encontrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7087-120">Call this version of complete when your asynchronous operation is complete and no exception was encountered.</span>
          </span>
          <span data-ttu-id="e7087-121">Atualiza o estado da operação e notifica o retorno de chamada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7087-121">It updates the state of the operation and notifies the callback.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="protected void Complete (bool completedSynchronously, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Complete(bool completedSynchronously, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.AsyncResult.Complete(System.Boolean,System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Complete(bool completedSynchronously, Exception ^ exception);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="completedSynchronously" Type="System.Boolean" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="completedSynchronously">
          <span data-ttu-id="e7087-122">
            <see langword="true" /> se a operação assíncrona for concluída de maneira síncrona; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7087-122">
              <see langword="true" /> if the asynchronous operation completed synchronously; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <param name="exception">
          <span data-ttu-id="e7087-123">A exceção que ocorreu durante o processamento da operação assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7087-123">The exception that occurred during the processing of the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7087-124">Chame esta versão de concluída se você gerar uma exceção durante o processamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7087-124">Call this version of complete if you raise an exception during processing.</span>
          </span>
          <span data-ttu-id="e7087-125">Além de notificar o retorno de chamada, captura a exceção e armazena-a para ser gerada durante a chamada para o método <see cref="M:System.IdentityModel.AsyncResult.End(System.IAsyncResult)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7087-125">In addition to notifying the callback, it captures the exception and stores it to be thrown during the call to the <see cref="M:System.IdentityModel.AsyncResult.End(System.IAsyncResult)" /> method.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompletedSynchronously">
      <MemberSignature Language="C#" Value="public bool CompletedSynchronously { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CompletedSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.AsyncResult.CompletedSynchronously" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompletedSynchronously As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CompletedSynchronously { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.CompletedSynchronously</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7087-126">Obtém um valor que indica se a operação assíncrona foi concluída de forma síncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7087-126">Gets a value that indicates whether the asynchronous operation completed synchronously.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7087-127">
            <see langword="true" /> se a operação assíncrona é concluída de forma síncrona; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7087-127">
              <see langword="true" /> if the asynchronous operation completed synchronously; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7087-128">Para obter mais informações, consulte o <xref:System.IAsyncResult.CompletedSynchronously%2A?displayProperty=nameWithType> propriedade.</span><span class="sxs-lookup"><span data-stu-id="e7087-128">For more information see the <xref:System.IAsyncResult.CompletedSynchronously%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7087-129">Libera os recursos usados pela instância atual da classe <see cref="T:System.IdentityModel.AsyncResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7087-129">Releases the resources used by the current instance of the <see cref="T:System.IdentityModel.AsyncResult" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.AsyncResult.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e7087-130">Libera os recursos usados pela instância atual da classe <see cref="T:System.IdentityModel.AsyncResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7087-130">Releases the resources used by the current instance of the <see cref="T:System.IdentityModel.AsyncResult" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool isExplicitDispose);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool isExplicitDispose) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.AsyncResult.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (isExplicitDispose As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool isExplicitDispose);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isExplicitDispose" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isExplicitDispose">
          <span data-ttu-id="e7087-131">
            <see langword="true" /> para liberar recursos gerenciados e não gerenciados, <see langword="false" /> para liberar apenas recursos não gerenciados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7087-131">
              <see langword="true" /> to release managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
          <span data-ttu-id="e7087-132">
            <see langword="true" /> indica que essa é uma chamada explícita para Descartar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7087-132">
              <see langword="true" /> indicates that this is an explicit call to Dispose.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7087-133">Chamado pelos métodos <see cref="M:System.IdentityModel.AsyncResult.Dispose" /> e <see cref="M:System.IdentityModel.AsyncResult.Finalize" /> para liberar os recursos gerenciados e não gerenciados usados pela instância atual da classe <see cref="T:System.IdentityModel.AsyncResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7087-133">Called by the <see cref="M:System.IdentityModel.AsyncResult.Dispose" /> and <see cref="M:System.IdentityModel.AsyncResult.Finalize" /> methods to release the managed and unmanaged resources used by the current instance of the <see cref="T:System.IdentityModel.AsyncResult" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="End">
      <MemberSignature Language="C#" Value="public static void End (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void End(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.AsyncResult.End(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub End (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void End(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="e7087-134">O <see cref="T:System.IAsyncResult" /> que representa o status da operação assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7087-134">The <see cref="T:System.IAsyncResult" /> representing the status of the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7087-135">Chame este método quando a função <c>Final</c> para a operação assíncrona for concluída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7087-135">Call this method when the <c>End</c> function for the asynchronous operation is complete.</span>
          </span>
          <span data-ttu-id="e7087-136">Garante que a operação assíncrona seja concluída e faz alguma validação comum.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7087-136">It ensures that the asynchronous operation is complete, and does some common validation.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~AsyncResult ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.AsyncResult.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!AsyncResult ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e7087-137">Permite que o objeto <see cref="T:System.IdentityModel.AsyncResult" /> tente liberar recursos e executar outras operações de limpeza antes de ser recuperado pela coleta de lixo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7087-137">Allows the <see cref="T:System.IdentityModel.AsyncResult" /> object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCompleted">
      <MemberSignature Language="C#" Value="public bool IsCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompleted" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.AsyncResult.IsCompleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCompleted { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.IsCompleted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7087-138">Obtém um valor que indica se a operação assíncrona foi concluída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7087-138">Gets a value that indicates whether the asynchronous operation has completed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7087-139">
            <see langword="true" /> se a operação for concluída; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7087-139">
              <see langword="true" /> if the operation is complete; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>