<Type Name="ElapsedEventArgs" FullName="System.Timers.ElapsedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="259e978f771800c3c1d60d9f3db63683b042b49d" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39829420" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ElapsedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ElapsedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Timers.ElapsedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ElapsedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ElapsedEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type ElapsedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="19f50-101">Fornece dados para o evento de <see cref="E:System.Timers.Timer.Elapsed" /> .</span>
      <span class="sxs-lookup">
        <span data-stu-id="19f50-101">Provides data for the <see cref="E:System.Timers.Timer.Elapsed" /> event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19f50-102">O exemplo a seguir instancia um <xref:System.Timers.Timer> objeto que aciona seu <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> eventos a cada dois segundos (2000 milissegundos), configura um manipulador de eventos para o evento e inicia o temporizador.</span><span class="sxs-lookup"><span data-stu-id="19f50-102">The following example instantiates a <xref:System.Timers.Timer> object that fires its <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event every two seconds (2000 milliseconds), sets up an event handler for the  event, and starts the timer.</span></span> <span data-ttu-id="19f50-103">O manipulador de eventos exibe o valor da <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> propriedade cada vez que ele é acionado.</span><span class="sxs-lookup"><span data-stu-id="19f50-103">The event handler displays the value of the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> property each time it is raised.</span></span>  
  
 [!code-cpp[System.Timers.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.timers.timer/cpp/timer1.cpp#1)]
 [!code-csharp[System.Timers.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/timer1.cs#1)]
 [!code-vb[System.Timers.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/timer1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="SignalTime">
      <MemberSignature Language="C#" Value="public DateTime SignalTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime SignalTime" />
      <MemberSignature Language="DocId" Value="P:System.Timers.ElapsedEventArgs.SignalTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignalTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime SignalTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.SignalTime : DateTime" Usage="System.Timers.ElapsedEventArgs.SignalTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19f50-104">Obtém a data/hora quando o <see cref="E:System.Timers.Timer.Elapsed" /> evento foi gerado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19f50-104">Gets the date/time when the <see cref="E:System.Timers.Timer.Elapsed" /> event was raised.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19f50-105">A hora que o <see cref="E:System.Timers.Timer.Elapsed" /> evento foi gerado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19f50-105">The time the <see cref="E:System.Timers.Timer.Elapsed" /> event was raised.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19f50-106">O <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> evento é gerado em um <xref:System.Threading.ThreadPool> thread, portanto o método de manipulação de eventos pode ser executado em um thread ao mesmo tempo que uma chamada para o <xref:System.Timers.Timer.Stop%2A?displayProperty=nameWithType> método é executado em outro thread.</span><span class="sxs-lookup"><span data-stu-id="19f50-106">The <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event is raised on a <xref:System.Threading.ThreadPool> thread, so the event-handling method might run on one thread at the same time that a call to the <xref:System.Timers.Timer.Stop%2A?displayProperty=nameWithType> method runs on another thread.</span></span> <span data-ttu-id="19f50-107">Isso pode resultar no <xref:System.Timers.Timer.Elapsed> evento sendo gerado após o <xref:System.Timers.Timer.Stop%2A> método é chamado.</span><span class="sxs-lookup"><span data-stu-id="19f50-107">This might result in the <xref:System.Timers.Timer.Elapsed> event being raised after the <xref:System.Timers.Timer.Stop%2A> method is called.</span></span> <span data-ttu-id="19f50-108">Essa condição de corrida que não pode ser impedida simplesmente comparando a <xref:System.Timers.ElapsedEventArgs.SignalTime%2A> propriedade com a hora de quando o <xref:System.Timers.Timer.Stop%2A> método é chamado, porque o método de manipulação de eventos pode já estar em execução quando o <xref:System.Timers.Timer.Stop%2A> método é chamado, ou pode começar execução entre o momento em que quando o <xref:System.Timers.Timer.Stop%2A> método é chamado e o momento quando a hora de parada é salva.</span><span class="sxs-lookup"><span data-stu-id="19f50-108">This race condition cannot be prevented simply by comparing the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A> property with the time when the <xref:System.Timers.Timer.Stop%2A> method is called, because the event-handling method might already be executing when the <xref:System.Timers.Timer.Stop%2A> method is called, or might begin executing between the moment when the <xref:System.Timers.Timer.Stop%2A> method is called and the moment when the stop time is saved.</span></span> <span data-ttu-id="19f50-109">Se ele for essencial para impedir que o thread que chama o <xref:System.Timers.Timer.Stop%2A> método de continuar enquanto o método de manipulação de eventos ainda está em execução, use um mecanismo de sincronização mais robusto, como o <xref:System.Threading.Monitor> classe ou o <xref:System.Threading.Interlocked.CompareExchange%2A> método.</span><span class="sxs-lookup"><span data-stu-id="19f50-109">If it is critical to prevent the thread that calls the <xref:System.Timers.Timer.Stop%2A> method from proceeding while the event-handling method is still executing, use a more robust synchronization mechanism such as the <xref:System.Threading.Monitor> class or the <xref:System.Threading.Interlocked.CompareExchange%2A> method.</span></span> <span data-ttu-id="19f50-110">O código que usa o <xref:System.Threading.Interlocked.CompareExchange%2A> método pode ser encontrado no exemplo para o <xref:System.Timers.Timer.Stop%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="19f50-110">Code that uses the <xref:System.Threading.Interlocked.CompareExchange%2A> method can be found in the example for the <xref:System.Timers.Timer.Stop%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19f50-111">O exemplo a seguir instancia um <xref:System.Timers.Timer> objeto que aciona seu <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> eventos a cada dois segundos (2000 milissegundos), configura um manipulador de eventos para o evento e inicia o temporizador.</span><span class="sxs-lookup"><span data-stu-id="19f50-111">The following example instantiates a <xref:System.Timers.Timer> object that fires its <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event every two seconds (2000 milliseconds), sets up an event handler for the  event, and starts the timer.</span></span> <span data-ttu-id="19f50-112">O manipulador de eventos exibe o valor da <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> propriedade cada vez que ele é acionado.</span><span class="sxs-lookup"><span data-stu-id="19f50-112">The event handler displays the value of the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> property each time it is raised.</span></span>  
  
 [!code-cpp[System.Timers.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.timers.timer/cpp/timer1.cpp#1)]
 [!code-csharp[System.Timers.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/timer1.cs#1)]
 [!code-vb[System.Timers.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/timer1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Timers.Timer.Stop" />
      </Docs>
    </Member>
  </Members>
</Type>