<Type Name="ImportConventionBuilder" FullName="System.Composition.Convention.ImportConventionBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fd84de4dfb9617ecfff0370b4c6a0abcb903567b" /><Meta Name="ms.sourcegitcommit" Value="0d6aa6694f157a08fe52cd25b4d9d3dcf913e812" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="10/12/2018" /><Meta Name="ms.locfileid" Value="49148756" /></Metadata><TypeSignature Language="C#" Value="public sealed class ImportConventionBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ImportConventionBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Composition.Convention.ImportConventionBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ImportConventionBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImportConventionBuilder sealed" />
  <TypeSignature Language="F#" Value="type ImportConventionBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Composition.Convention</AssemblyName>
    <AssemblyVersion>1.0.31.0</AssemblyVersion>
    <AssemblyVersion>1.0.32.0</AssemblyVersion>
    <AssemblyVersion>1.0.33.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="19ee7-101">Configura uma importação que está associada uma parte.</span><span class="sxs-lookup"><span data-stu-id="19ee7-101">Configures an import that is associated with a part.</span></span></summary>
    <remarks></remarks>
  </Docs>
  <Members>
    <Member MemberName="AddMetadataConstraint">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.ImportConventionBuilder AddMetadataConstraint (string name, Func&lt;Type,object&gt; getConstraintValueFromPartType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.ImportConventionBuilder AddMetadataConstraint(string name, class System.Func`2&lt;class System.Type, object&gt; getConstraintValueFromPartType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.ImportConventionBuilder.AddMetadataConstraint(System.String,System.Func{System.Type,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMetadataConstraint (name As String, getConstraintValueFromPartType As Func(Of Type, Object)) As ImportConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::ImportConventionBuilder ^ AddMetadataConstraint(System::String ^ name, Func&lt;Type ^, System::Object ^&gt; ^ getConstraintValueFromPartType);" />
      <MemberSignature Language="F#" Value="member this.AddMetadataConstraint : string * Func&lt;Type, obj&gt; -&gt; System.Composition.Convention.ImportConventionBuilder" Usage="importConventionBuilder.AddMetadataConstraint (name, getConstraintValueFromPartType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.ImportConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="getConstraintValueFromPartType" Type="System.Func&lt;System.Type,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="19ee7-102">O nome de metadados necessários.</span><span class="sxs-lookup"><span data-stu-id="19ee7-102">The required metadata name.</span></span></param>
        <param name="getConstraintValueFromPartType"><span data-ttu-id="19ee7-103">Uma função que fornece o valor de metadados necessários.</span><span class="sxs-lookup"><span data-stu-id="19ee7-103">A function that provides the required metadata value.</span></span></param>
        <summary><span data-ttu-id="19ee7-104">Adiciona uma restrição à importação que exige o nome dos metadados especificados e o valor fornecido pela função definida no tipo de parte.</span><span class="sxs-lookup"><span data-stu-id="19ee7-104">Adds a constraint to the import requiring the specified metadata name and the value provided by the specified function on the part type.</span></span></summary>
        <returns><span data-ttu-id="19ee7-105">Um construtor de importação que contém a restrição que permite uma configuração adicional.</span><span class="sxs-lookup"><span data-stu-id="19ee7-105">An import builder containing the constraint that allows for further configuration.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMetadataConstraint">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.ImportConventionBuilder AddMetadataConstraint (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.ImportConventionBuilder AddMetadataConstraint(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.ImportConventionBuilder.AddMetadataConstraint(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMetadataConstraint (name As String, value As Object) As ImportConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::ImportConventionBuilder ^ AddMetadataConstraint(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddMetadataConstraint : string * obj -&gt; System.Composition.Convention.ImportConventionBuilder" Usage="importConventionBuilder.AddMetadataConstraint (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.ImportConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="19ee7-106">O nome de metadados necessários.</span><span class="sxs-lookup"><span data-stu-id="19ee7-106">The required metadata name.</span></span></param>
        <param name="value"><span data-ttu-id="19ee7-107">O valor dos metadados necessários.</span><span class="sxs-lookup"><span data-stu-id="19ee7-107">The required metadata value.</span></span></param>
        <summary><span data-ttu-id="19ee7-108">Adiciona uma restrição à importação que exige o valor e nome dos metadados especificados.</span><span class="sxs-lookup"><span data-stu-id="19ee7-108">Adds a constraint to the import requiring the specified metadata name and value.</span></span></summary>
        <returns><span data-ttu-id="19ee7-109">Um construtor de importação que contém a restrição que permite uma configuração adicional.</span><span class="sxs-lookup"><span data-stu-id="19ee7-109">An import builder containing the constraint that allows for further configuration.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDefault">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.ImportConventionBuilder AllowDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.ImportConventionBuilder AllowDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.ImportConventionBuilder.AllowDefault" />
      <MemberSignature Language="VB.NET" Value="Public Function AllowDefault () As ImportConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::ImportConventionBuilder ^ AllowDefault();" />
      <MemberSignature Language="F#" Value="member this.AllowDefault : unit -&gt; System.Composition.Convention.ImportConventionBuilder" Usage="importConventionBuilder.AllowDefault " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.ImportConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="19ee7-110">Permite que a importação receba o valor padrão do seu tipo se o contrato não puder ser fornecido por outra parte.</span><span class="sxs-lookup"><span data-stu-id="19ee7-110">Allows the import to receive the default value for its type if the contract cannot be supplied by another part.</span></span></summary>
        <returns><span data-ttu-id="19ee7-111">Um construtor de importação que permite valores padrão e permite configuração adicional.</span><span class="sxs-lookup"><span data-stu-id="19ee7-111">An import builder that allows default values and can be further configured.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="AsContractName">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.ImportConventionBuilder AsContractName (Func&lt;Type,string&gt; getContractNameFromPartType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.ImportConventionBuilder AsContractName(class System.Func`2&lt;class System.Type, string&gt; getContractNameFromPartType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.ImportConventionBuilder.AsContractName(System.Func{System.Type,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function AsContractName (getContractNameFromPartType As Func(Of Type, String)) As ImportConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::ImportConventionBuilder ^ AsContractName(Func&lt;Type ^, System::String ^&gt; ^ getContractNameFromPartType);" />
      <MemberSignature Language="F#" Value="member this.AsContractName : Func&lt;Type, string&gt; -&gt; System.Composition.Convention.ImportConventionBuilder" Usage="importConventionBuilder.AsContractName getContractNameFromPartType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.ImportConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getContractNameFromPartType" Type="System.Func&lt;System.Type,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="getContractNameFromPartType"><span data-ttu-id="19ee7-112">Uma função que fornece o nome do contrato da importação.</span><span class="sxs-lookup"><span data-stu-id="19ee7-112">A function that provides the contract name of the import.</span></span></param>
        <summary><span data-ttu-id="19ee7-113">Define o nome do contrato da importação para o valor fornecido pela função especificada no tipo de parte.</span><span class="sxs-lookup"><span data-stu-id="19ee7-113">Sets the contract name of the import to the value provided by the specified function on the part type.</span></span></summary>
        <returns><span data-ttu-id="19ee7-114">Um construtor de importação que contém o nome do contrato que permite configuração adicional.</span><span class="sxs-lookup"><span data-stu-id="19ee7-114">An import builder containing the contract name that allows for further configuration.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="AsContractName">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.ImportConventionBuilder AsContractName (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.ImportConventionBuilder AsContractName(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.ImportConventionBuilder.AsContractName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AsContractName (contractName As String) As ImportConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::ImportConventionBuilder ^ AsContractName(System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="member this.AsContractName : string -&gt; System.Composition.Convention.ImportConventionBuilder" Usage="importConventionBuilder.AsContractName contractName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.ImportConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contractName"><span data-ttu-id="19ee7-115">O nome do contrato da importação.</span><span class="sxs-lookup"><span data-stu-id="19ee7-115">The contract name of the import.</span></span></param>
        <summary><span data-ttu-id="19ee7-116">Define o nome do contrato da importação para a cadeia de caracteres especificada.</span><span class="sxs-lookup"><span data-stu-id="19ee7-116">Sets the contract name of the import to the specified string.</span></span></summary>
        <returns><span data-ttu-id="19ee7-117">Um construtor de importação que contém o nome do contrato que permite configuração adicional.</span><span class="sxs-lookup"><span data-stu-id="19ee7-117">An import builder containing the contract name that allows for further configuration.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="AsMany">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.ImportConventionBuilder AsMany ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.ImportConventionBuilder AsMany() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.ImportConventionBuilder.AsMany" />
      <MemberSignature Language="VB.NET" Value="Public Function AsMany () As ImportConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::ImportConventionBuilder ^ AsMany();" />
      <MemberSignature Language="F#" Value="member this.AsMany : unit -&gt; System.Composition.Convention.ImportConventionBuilder" Usage="importConventionBuilder.AsMany " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.ImportConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="19ee7-118">Configura a importação para receber uma coleção de exportações.</span><span class="sxs-lookup"><span data-stu-id="19ee7-118">Configures the import to receive a collection of exports.</span></span></summary>
        <returns><span data-ttu-id="19ee7-119">Um construtor de importação que pode receber uma coleção de exportações e permite configuração adicional.</span><span class="sxs-lookup"><span data-stu-id="19ee7-119">An import builder that can receive a collection of exports and allows for further configuration.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="AsMany">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.ImportConventionBuilder AsMany (bool isMany);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.ImportConventionBuilder AsMany(bool isMany) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.ImportConventionBuilder.AsMany(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function AsMany (isMany As Boolean) As ImportConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::ImportConventionBuilder ^ AsMany(bool isMany);" />
      <MemberSignature Language="F#" Value="member this.AsMany : bool -&gt; System.Composition.Convention.ImportConventionBuilder" Usage="importConventionBuilder.AsMany isMany" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.ImportConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isMany" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isMany"><span data-ttu-id="19ee7-120"><see langword="true" /> para fornecer todas as exportações correspondentes disponíveis; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="19ee7-120"><see langword="true" /> to provide all available matching exports; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="19ee7-121">Configura a importação para receber uma coleção de exportações, possivelmente representando todas as exportações correspondentes disponíveis.</span><span class="sxs-lookup"><span data-stu-id="19ee7-121">Configures the import to receive a collection of exports, possibly representing all available matching exports.</span></span></summary>
        <returns><span data-ttu-id="19ee7-122">Um construtor de importação que pode receber uma coleção de exportações e permite configuração adicional.</span><span class="sxs-lookup"><span data-stu-id="19ee7-122">An import builder that can receive a collection of exports and allows for further configuration.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
  </Members>
</Type>