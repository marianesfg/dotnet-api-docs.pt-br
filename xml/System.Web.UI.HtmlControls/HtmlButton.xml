<Type Name="HtmlButton" FullName="System.Web.UI.HtmlControls.HtmlButton">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5345c9642e8573d65ad35b59aee475971fa892a0" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36588776" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HtmlButton : System.Web.UI.HtmlControls.HtmlContainerControl, System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlButton extends System.Web.UI.HtmlControls.HtmlContainerControl implements class System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlButton" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlButton&#xA;Inherits HtmlContainerControl&#xA;Implements IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlButton : System::Web::UI::HtmlControls::HtmlContainerControl, System::Web::UI::IPostBackEventHandler" />
  <TypeSignature Language="F#" Value="type HtmlButton = class&#xA;    inherit HtmlContainerControl&#xA;    interface IPostBackEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlContainerControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("ServerClick")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Permite o acesso programático à tag <see langword="&lt;button&gt;" /> HTML no servidor.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `<button>` elemento permite que os desenvolvedores da Web criar botões de formulário de interface de usuário que podem ser composto de elementos HTML incorporados, incluindo outros controles de servidor.  
  
> [!NOTE]
>  O `<button>` elemento é definido na especificação do HTML 4.0 e tem suporte apenas no Microsoft Internet Explorer versão 4.0 e posterior. Para criar botões de formulário de interface do usuário para uso em outros navegadores, considere o uso de <xref:System.Web.UI.HtmlControls.HtmlInputImage> classe.  
  
 Para executar um conjunto de instruções personalizadas quando o <xref:System.Web.UI.HtmlControls.HtmlButton> controle é clicado, forneça um manipulador de eventos personalizados para o <xref:System.Web.UI.HtmlControls.HtmlButton.ServerClick> evento.  
  
> [!NOTE]
>  O <xref:System.Web.UI.HtmlControls.HtmlButton> controle renderiza ECMAScript para o navegador do cliente. O navegador do cliente deve ter ECMAScript habilitado para este controle para funcionar corretamente. Para obter mais informações sobre o script de cliente, consulte [Script de cliente em páginas da Web do ASP.NET](http://msdn.microsoft.com/library/13edb6b9-2dea-43c6-b8c1-a47207de19aa).  
  
 Para obter uma lista de valores de propriedade inicial para uma instância do <xref:System.Web.UI.HtmlControls.HtmlButton>, consulte o <xref:System.Web.UI.HtmlControls.HtmlButton.%23ctor%2A> construtor.  
  
> [!CAUTION]
>  Este controle pode ser usado para exibir a entrada do usuário, que pode incluir um script de cliente mal-intencionado. Verifique todas as informações que são enviadas de um cliente para o script executável, instruções SQL ou outro código antes de exibi-lo em seu aplicativo. O ASP.NET fornece um recurso de validação de solicitação de entrada para o bloco de script e HTML na entrada do usuário. Controles de servidor de validação também são fornecidos para avaliar a entrada do usuário. Para obter mais informações, consulte [sintaxe de controle de servidor de validação](http://msdn.microsoft.com/library/96d2c59e-693c-4079-9b53-b3ff0d9e9133).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.HtmlControls.HtmlButton.ServerClick> evento para exibir o nome digitado na caixa de texto.  
  
 [!code-aspx-csharp[Classic HtmlButton Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlButton Example/cs/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlButton Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" />
    <altmember cref="E:System.Web.UI.HtmlControls.HtmlButton.ServerClick" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlButton ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlButton.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlButton();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.UI.HtmlControls.HtmlButton" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use este construtor para criar e inicializar uma nova instância do <xref:System.Web.UI.HtmlControls.HtmlButton> controle.  
  
 A tabela a seguir mostra o valor da propriedade inicial para uma instância do <xref:System.Web.UI.HtmlControls.HtmlButton>.  
  
|Propriedade|Valor inicial|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlControl.TagName%2A>|Cadeia de caracteres literal a "button".|  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como adicionar dinamicamente um <xref:System.Web.UI.HtmlControls.HtmlButton> controle para a página de Web Forms.  
  
 [!code-aspx-csharp[HtmlButtonConstructor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlButtonConstructor/CS/htmlbuttonconstructorcs.aspx#1)]
 [!code-aspx-vb[HtmlButtonConstructor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlButtonConstructor/VB/htmlbuttonconstructorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CausesValidation">
      <MemberSignature Language="C#" Value="public virtual bool CausesValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CausesValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlButton.CausesValidation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CausesValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CausesValidation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CausesValidation : bool with get, set" Usage="System.Web.UI.HtmlControls.HtmlButton.CausesValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se a validação é executada quando o controle <see cref="T:System.Web.UI.HtmlControls.HtmlButton" /> é acionado.</summary>
        <value>
          <see langword="true" /> se a validação for executada quando o controle <see cref="T:System.Web.UI.HtmlControls.HtmlButton" /> é acionado; caso contrário, <see langword="false" />. O valor padrão é <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Por padrão, a validação de página é executada quando um <xref:System.Web.UI.HtmlControls.HtmlButton> controle é clicado. Validação de página determina se os controles de entrada associado com um controle de validação na página de que todos os passam as regras de validação especificadas pelo controle de validação.  
  
 Você pode especificar ou determinar se a validação é executada no cliente e o servidor quando uma <xref:System.Web.UI.HtmlControls.HtmlButton> controle é clicado, usando o <xref:System.Web.UI.HtmlControls.HtmlButton.CausesValidation%2A> propriedade. Para impedir a validação do que está sendo executada, defina o <xref:System.Web.UI.HtmlControls.HtmlButton.CausesValidation%2A> propriedade `false`.  
  
 Essa propriedade normalmente é usada no manipulador de eventos para o <xref:System.Web.UI.HtmlControls.HtmlButton.ServerClick> evento para impedir que a validação de página quando um botão Cancelar ou redefinir é clicado.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.HtmlControls.HtmlButton.CausesValidation%2A> propriedade para evitar a validação de página ocorra. Observe que o <xref:System.Web.UI.WebControls.BaseValidator.Validate%2A> método ativa cada controle de validação de forma independente.  
  
 [!code-aspx-csharp[HtmlButtonCausesValidation#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlButtonCausesValidation/CS/htmlbuttoncausesvalidationcs.aspx#1)]
 [!code-aspx-vb[HtmlButtonCausesValidation#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlButtonCausesValidation/VB/htmlbuttoncausesvalidationvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.Validate" />
        <altmember cref="E:System.Web.UI.HtmlControls.HtmlButton.ServerClick" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlButton.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="htmlButton.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.EventArgs" /> que contém dados do evento.</param>
        <summary>Gera o evento <see cref="E:System.Web.UI.Control.PreRender" /> e registra o script de cliente para gerar um postback.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.HtmlControls.HtmlButton.OnPreRender%2A> método é usado principalmente por desenvolvedores de controle estender a funcionalidade do <xref:System.Web.UI.HtmlControls.HtmlButton> controle.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como substituir o <xref:System.Web.UI.HtmlControls.HtmlButton.OnPreRender%2A> método em um servidor personalizado de controle para que ele sempre exibe o <xref:System.Web.UI.HtmlControls.HtmlButton> com texto em negrito.  
  
 [!code-aspx-csharp[CustomHtmlButtonOnPreRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlButtonOnPreRender/CS/custom_htmlbutton_onprerendercs.aspx#1)]
 [!code-aspx-vb[CustomHtmlButtonOnPreRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlButtonOnPreRender/VB/custom_htmlbutton_onprerendervb.aspx#1)]  
  
 [!code-csharp[CustomHtmlButtonOnPreRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlButtonOnPreRender/CS/custom_htmlbutton_onprerender.cs#2)]
 [!code-vb[CustomHtmlButtonOnPreRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlButtonOnPreRender/VB/custom_htmlbutton_onprerender.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnServerClick">
      <MemberSignature Language="C#" Value="protected virtual void OnServerClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnServerClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlButton.OnServerClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnServerClick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnServerClick(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnServerClick : EventArgs -&gt; unit&#xA;override this.OnServerClick : EventArgs -&gt; unit" Usage="htmlButton.OnServerClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Web.UI.HtmlControls.HtmlButton.ServerClick" />. Isso permite que você forneça um manipulador personalizado para o evento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.HtmlControls.HtmlButton.ServerClick> é gerado quando o <xref:System.Web.UI.HtmlControls.HtmlButton> controle é clicado. Esse evento faz com que o processamento ocorra do cliente para o servidor e vice-versa. Ele é deliberadamente diferente do lado do cliente `OnClick` eventos. Se houver um conflito entre o código executado com um <xref:System.Web.UI.HtmlControls.HtmlButton.ServerClick> evento e o código executado por um cliente `OnClick` evento, o evento do lado do servidor instruções substituirá o código do lado do cliente.  
  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [tratamento e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Web.UI.HtmlControls.HtmlButton.OnServerClick%2A> método também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como especificar declarativamente e código de um manipulador de eventos para o <xref:System.Web.UI.HtmlControls.HtmlButton.ServerClick> evento. Quando o <xref:System.Web.UI.HtmlControls.HtmlButton> controle é clicado, o valor inserido na caixa de texto é exibido.  
  
 [!code-aspx-csharp[Classic HtmlButton Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlButton Example/cs/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlButton Example/VB/sourcevb.aspx#1)]  
  
 O exemplo de código a seguir demonstra como especificar e código de um manipulador de eventos programaticamente o <xref:System.Web.UI.HtmlControls.HtmlButton.ServerClick> evento.  
  
 [!code-aspx-csharp[HtmlButtonConstructor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlButtonConstructor/CS/htmlbuttonconstructorcs.aspx#1)]
 [!code-aspx-vb[HtmlButtonConstructor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlButtonConstructor/VB/htmlbuttonconstructorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ao substituir <see cref="M:System.Web.UI.HtmlControls.HtmlButton.OnServerClick(System.EventArgs)" /> em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Web.UI.HtmlControls.HtmlButton.OnServerClick(System.EventArgs)" /> método para que registrado delegados receber o evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.HtmlControls.HtmlButton.ServerClick" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlButton.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit&#xA;override this.RaisePostBackEvent : string -&gt; unit" Usage="htmlButton.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">O argumento para o evento.</param>
        <summary>Aciona eventos para o controle <see cref="T:System.Web.UI.HtmlControls.HtmlButton" /> quando ele executa um postback para o servidor.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.HtmlControls.HtmlButton.RaisePostBackEvent%2A> método é usado pelo <xref:System.Web.UI.HtmlControls.HtmlButton> controle, quando clicado, para gerar um <xref:System.Web.UI.HtmlControls.HtmlButton.ServerClick> eventos.  
  
 Se o <xref:System.Web.UI.HtmlControls.HtmlButton.CausesValidation%2A> é de propriedade `true`, o <xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType> método é chamado usando o grupo de controles especificados no <xref:System.Web.UI.HtmlControls.HtmlButton.ValidationGroup%2A> propriedade.  
  
 Esse método é usado principalmente por desenvolvedores de controle estender a funcionalidade do <xref:System.Web.UI.HtmlControls.HtmlButton> controle.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlButton.ValidationGroup" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlButton.CausesValidation" />
      </Docs>
    </Member>
    <Member MemberName="RenderAttributes">
      <MemberSignature Language="C#" Value="protected override void RenderAttributes (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderAttributes(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlButton.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderAttributes (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderAttributes(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderAttributes : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlButton.RenderAttributes writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">O <see cref="T:System.Web.UI.HtmlTextWriter" /> que contém o fluxo de saída que será renderizado no cliente.</param>
        <summary>Renderiza os atributos do controle <see cref="T:System.Web.UI.HtmlControls.HtmlButton" /> no objeto <see cref="T:System.Web.UI.HtmlTextWriter" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.HtmlControls.HtmlButton.RenderAttributes%2A> método gravações a `onclick` atributo de renderizado <xref:System.Web.UI.HtmlControls.HtmlButton> de controle e, em seguida, chama a base de <xref:System.Web.UI.HtmlControls.HtmlControl.RenderAttributes%2A?displayProperty=nameWithType> método.  
  
 O <xref:System.Web.UI.HtmlControls.HtmlButton.RenderAttributes%2A> método é usado principalmente por desenvolvedores de controle estender a funcionalidade do <xref:System.Web.UI.HtmlControls.HtmlButton> controle.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como substituir o <xref:System.Web.UI.HtmlControls.HtmlButton.RenderAttributes%2A> método em um servidor personalizado de controle para que um título sempre é exibido para o <xref:System.Web.UI.HtmlControls.HtmlButton> controle.  
  
 [!code-aspx-csharp[CustomHtmlButtonRenderAttributes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlButtonRenderAttributes/CS/custom_htmlbutton_renderattributescs.aspx#1)]
 [!code-aspx-vb[CustomHtmlButtonRenderAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlButtonRenderAttributes/VB/custom_htmlbutton_renderattributesvb.aspx#1)]  
  
 [!code-csharp[CustomHtmlButtonRenderAttributes#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlButtonRenderAttributes/CS/custom_htmlbutton_renderattributes.cs#2)]
 [!code-vb[CustomHtmlButtonRenderAttributes#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlButtonRenderAttributes/VB/custom_htmlbutton_renderattributes.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlControl.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="ServerClick">
      <MemberSignature Language="C#" Value="public event EventHandler ServerClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ServerClick" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.HtmlControls.HtmlButton.ServerClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ServerClick As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ServerClick;" />
      <MemberSignature Language="F#" Value="member this.ServerClick : EventHandler " Usage="member this.ServerClick : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ocorre quando o usuário clica em um controle <see cref="T:System.Web.UI.HtmlControls.HtmlButton" /> na página da Web do cliente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.HtmlControls.HtmlButton.ServerClick> é gerado quando o <xref:System.Web.UI.HtmlControls.HtmlButton> controle é clicado. Esse evento de servidor faz com que o processamento ocorra do cliente para o servidor e vice-versa. Ele é deliberadamente diferente do lado do cliente `OnClick` eventos. Se houver um conflito entre o código executado com um <xref:System.Web.UI.HtmlControls.HtmlButton.ServerClick> evento e o código executado por um cliente `OnClick` evento, o evento do lado do servidor instruções substituirá o código do lado do cliente.  
  
 Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como especificar declarativamente e código de um manipulador de eventos para o <xref:System.Web.UI.HtmlControls.HtmlButton.ServerClick> evento. Quando o <xref:System.Web.UI.HtmlControls.HtmlButton> controle é clicado, o valor inserido na caixa de texto é exibido.  
  
 [!code-aspx-csharp[Classic HtmlButton Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlButton Example/cs/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlButton Example/VB/sourcevb.aspx#1)]  
  
 O exemplo de código a seguir demonstra como especificar e código de um manipulador de eventos programaticamente o <xref:System.Web.UI.HtmlControls.HtmlButton.ServerClick> evento.  
  
 [!code-aspx-csharp[HtmlButtonConstructor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlButtonConstructor/CS/htmlbuttonconstructorcs.aspx#1)]
 [!code-aspx-vb[HtmlButtonConstructor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlButtonConstructor/VB/htmlbuttonconstructorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlButton.OnServerClick(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlButton.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Os argumentos de evento.</param>
        <summary>Aciona eventos para o controle <see cref="T:System.Web.UI.HtmlControls.HtmlButton" /> quando ele executa um postback para o servidor.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationGroup">
      <MemberSignature Language="C#" Value="public virtual string ValidationGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationGroup" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlButton.ValidationGroup" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ValidationGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ValidationGroup { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationGroup : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlButton.ValidationGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o grupo de controles para o qual o <see cref="T:System.Web.UI.HtmlControls.HtmlButton" /> causa a validação quando ele executa um postback para o servidor.</summary>
        <value>O grupo de controles para os quais o controle <see cref="T:System.Web.UI.HtmlControls.HtmlButton" /> aciona a validação quando posta de volta no servidor. O valor padrão é uma cadeia de caracteres vazia ("") que indica que essa propriedade não está definida.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Grupos de validação permitem atribuir controles de validação em uma página a uma categoria específica. Cada grupo de validação pode ser validado independentemente de outros grupos de validação na página. Use o <xref:System.Web.UI.HtmlControls.HtmlButton.ValidationGroup%2A> propriedade para especificar o nome do grupo de validação para o qual o <xref:System.Web.UI.HtmlControls.HtmlButton> controle aciona a validação quando ele envia de volta para o servidor.  
  
 Essa propriedade tem um efeito somente quando o valor da <xref:System.Web.UI.HtmlControls.HtmlButton.CausesValidation%2A> está definida como `true`. Quando você especificar um valor para o <xref:System.Web.UI.HtmlControls.HtmlButton.ValidationGroup%2A> , somente os controles de validação que fazem parte do grupo especificado são validadas quando o <xref:System.Web.UI.HtmlControls.HtmlButton> controle envia de volta para o servidor. Se você não especificar um valor para essa propriedade e o <xref:System.Web.UI.HtmlControls.HtmlButton.CausesValidation%2A> está definida como `true`, todos os controles de validação na página que não estão atribuídos a um grupo de validação são validados quando o controle envia de volta para o servidor.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.HtmlControls.HtmlButton.ValidationGroup%2A> propriedade para especificar os controles para validar quando um <xref:System.Web.UI.HtmlControls.HtmlButton> controle envia de volta para o servidor. A página contém duas caixas de texto para capturar dados de usuário e dois <xref:System.Web.UI.WebControls.RequiredFieldValidator> controles para garantir que o usuário não deixe uma caixa de texto em branco. O <xref:System.Web.UI.WebControls.RequiredFieldValidator> controlar para a primeira caixa de texto está no `CityInfoGroup` grupo de validação e o <xref:System.Web.UI.WebControls.RequiredFieldValidator> controlar para a segunda caixa é no `StateInfoGroup` grupo de validação. Quando o `CityQueryButton` é clicado, somente o controle no `CityInfoGroup` grupo de validação é validado. Quando o `StateQueryButton` é clicado, somente o controle no `StateInfoGroup` grupo de validação é validado.  
  
 [!code-aspx-csharp[HtmlButtonValidationGroup#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlButtonValidationGroup/CS/htmlbuttonvalidationgroupcs.aspx#1)]
 [!code-aspx-vb[HtmlButtonValidationGroup#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlButtonValidationGroup/VB/htmlbuttonvalidationgroupvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlButton.CausesValidation" />
      </Docs>
    </Member>
  </Members>
</Type>