<Type Name="HtmlForm" FullName="System.Web.UI.HtmlControls.HtmlForm">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5457da7de11e9693b86269c3733655974699f3b1" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51937660" /></Metadata><TypeSignature Language="C#" Value="public class HtmlForm : System.Web.UI.HtmlControls.HtmlContainerControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlForm extends System.Web.UI.HtmlControls.HtmlContainerControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlForm" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlForm&#xA;Inherits HtmlContainerControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlForm : System::Web::UI::HtmlControls::HtmlContainerControl" />
  <TypeSignature Language="F#" Value="type HtmlForm = class&#xA;    inherit HtmlContainerControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlContainerControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Oferece acesso programático ao elemento <see langword="&lt;form&gt;" /> HTML no servidor.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.HtmlControls.HtmlForm> controle é um contêiner para controles de servidor em uma página Web Forms. Todos os controles de servidor que postagem de volta para o servidor devem ser colocados entre as marcas de abertura e fechamento de um <xref:System.Web.UI.HtmlControls.HtmlForm> controle.  
  
> [!NOTE]
>  O ASP.NET permite que um único <xref:System.Web.UI.HtmlControls.HtmlForm> controle ativos em uma página Web Forms. Se houver mais de um Active Directory <xref:System.Web.UI.HtmlControls.HtmlForm> controle em uma página de Web Forms, o common language runtime lançará uma <xref:System.Web.HttpException?displayProperty=nameWithType> quando você solicita a página de exceção. No entanto, você pode usar um <xref:System.Web.UI.WebControls.MultiView> controlam onde cada <xref:System.Web.UI.WebControls.View> objeto contém uma <xref:System.Web.UI.HtmlControls.HtmlForm> controle, porque apenas um <xref:System.Web.UI.WebControls.View> está ativa em um determinado momento.  
  
 Você pode controlar o comportamento do <xref:System.Web.UI.HtmlControls.HtmlForm> controle definindo suas propriedades. Para especificar o tipo de codificação para os dados do formulário, defina o <xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A> propriedade. O método (`GET` ou `POST`) que um navegador usa postar os dados de formulário para o servidor para processamento é especificado, definindo o <xref:System.Web.UI.HtmlControls.HtmlForm.Method%2A> propriedade.  
  
> [!CAUTION]
>  Por padrão, o <xref:System.Web.UI.HtmlControls.HtmlForm.Method%2A> estiver definida como `POST`. Você pode modificar o valor dessa propriedade como `GET`, mas isso pode interromper o estado interno e os serviços fornecidos pela estrutura de página ASP.NET de postback.  
  
 Você pode configurar os controles que implementam o <xref:System.Web.UI.WebControls.IButtonControl> interface para postar em uma página de destino diferente. Isso é chamado de postagem entre as páginas. Para obter mais informações, consulte [entre páginas de lançamento no Web Forms do ASP.NET](https://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b).  
  
 Para obter uma lista de valores de propriedade inicial para uma instância do <xref:System.Web.UI.HtmlControls.HtmlForm>, consulte o <xref:System.Web.UI.HtmlControls.HtmlForm.%23ctor%2A> construtor.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.HtmlControls.HtmlForm> classe para criar um formulário simples.  
  
 [!code-aspx-csharp[HtmlForm#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm/CS/htmlformcs.aspx#1)]
 [!code-aspx-vb[HtmlForm#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm/VB/htmlformvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Enctype" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Method" />
    <related type="Article" href="https://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b">Postagem em uma página da Web entre páginas</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlForm ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlForm();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use esse construtor para criar e inicializar uma nova instância do <xref:System.Web.UI.HtmlControls.HtmlForm> classe.  
  
 A tabela a seguir mostra o valor da propriedade inicial para uma instância do <xref:System.Web.UI.HtmlControls.HtmlForm>.  
  
|Propriedade|Valor inicial|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlControl.TagName%2A>|"Formulário" cadeia de caracteres literal.|  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como criar uma nova instância do <xref:System.Web.UI.HtmlControls.HtmlForm> controlar e colocá-lo na página da Web.  
  
 [!code-aspx-csharp[HtmlFormCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlFormCtor/CS/htmlformctorcs.aspx#1)]
 [!code-aspx-vb[HtmlFormCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlFormCtor/VB/htmlformctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.TagName" />
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public string Action { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Action" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Action" />
      <MemberSignature Language="VB.NET" Value="Public Property Action As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Action { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Action : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.Action" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o atributo de ação do formulário HTML.</summary>
        <value>O atributo de ação do formulário HTML. O valor padrão é <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Você usa o <xref:System.Web.UI.HtmlControls.HtmlForm.Action%2A> propriedade quando você regravar a URL da solicitação original, mas deseja manter a URL original para o atributo de ação do formulário HTML. Defina o <xref:System.Web.UI.HtmlControls.HtmlForm.Action%2A> propriedade para o valor da URL que você deseja manter.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpContext.RewritePath(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ClientID">
      <MemberSignature Language="C#" Value="public override string ClientID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.ClientID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ClientID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ClientID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientID : string" Usage="System.Web.UI.HtmlControls.HtmlForm.ClientID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o identificador de controle que é gerado por [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] para o controle <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /></summary>
        <value>O identificador de controle gerado pelo [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] para o <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> controle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para evitar conflitos de nomenclatura quando várias instâncias de um controle são renderizadas, [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] gera automaticamente uma única <xref:System.Web.UI.HtmlControls.HtmlForm.ClientID%2A> valor para cada controle em uma página. Para obter mais informações, consulte a propriedade <xref:System.Web.UI.Control.ClientID%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/45a8c3ef-5ac7-48f1-862a-0cd5073742e7">Identificação do controle do ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="htmlForm.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cria uma nova coleção <see cref="T:System.Web.UI.ControlCollection" /> para o controle <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />.</summary>
        <returns>Um <see cref="T:System.Web.UI.ControlCollection" /> que contém os controles de servidor filhos do controle <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="DefaultButton">
      <MemberSignature Language="C#" Value="public string DefaultButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultButton As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultButton { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultButton : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o controle filho do controle <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> que causa o postback quando a tecla ENTER é pressionada.</summary>
        <value>O <see cref="P:System.Web.UI.Control.ID" /> do controle de botão para ser exibido como o botão padrão quando o <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> é carregado. O valor padrão é uma cadeia de caracteres vazia ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> propriedade permite que você especifique que os usuários podem causar um postback, pressionando ENTER em um controle de entrada no formulário (por exemplo, uma caixa de texto). Você pode especificar como um botão padrão qualquer controle que deriva de <xref:System.Web.UI.WebControls.IButtonControl> interface, exceto o <xref:System.Web.UI.WebControls.LinkButton> controle. Se o controle que é referenciado pela <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> propriedade não é derivado de <xref:System.Web.UI.WebControls.IButtonControl>, um <xref:System.InvalidOperationException> exceção é lançada.  
  
 Se você estiver usando páginas mestras e definir as <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> propriedade de uma página de conteúdo, use o <xref:System.Web.UI.Control.UniqueID%2A> propriedade do <xref:System.Web.UI.WebControls.IButtonControl> botão. Para obter mais informações sobre páginas mestras, consulte [páginas mestras do ASP.NET](https://msdn.microsoft.com/library/4e53eedf-8304-4e7a-aed1-691a2623b28b).  
  
 O <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> propriedade não pode causar um postback nos seguintes cenários:  
  
-   Pressionar ENTER quando o foco está fora dos controles no formulário de entrada. A ação padrão não é garantida para ser disparado.  
  
-   Quando o foco estiver dentro de uma caixa de texto de várias linhas, pressionando ENTER. Em uma caixa de texto de várias linhas, o comportamento esperado é que pressionar ENTER cria uma nova linha na caixa de texto. Em alguns navegadores, pressionando ENTER dentro de um gatilhos de caixa de texto de várias linhas um postback. Nesse caso, se você quiser ENTER para criar uma nova linha em vez disso, você pode anexar uma função de JavaScript para o controle de entrada. O script deve capturar a tecla ENTER e parar o postback. Por exemplo, você pode usar o <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> coleção de propriedades para adicionar o script de cliente para o `onKeyPress` eventos.  
  
-   Especificando um <xref:System.Web.UI.WebControls.LinkButton> controle como um botão padrão. Somente <xref:System.Web.UI.WebControls.Button> e <xref:System.Web.UI.WebControls.ImageButton> controles têm suporte.  
  
-   Alterando o <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> propriedade por meio de programação durante um postback assíncrono. Postbacks assíncronos podem ser habilitados em uma página com a adição de um ou mais <xref:System.Web.UI.UpdatePanel> controles à página. Para obter mais informações, consulte [visão geral do controle UpdatePanel](https://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a) e [visão geral de renderização parcial da página](https://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).  
  
   
  
## Examples  
 O exemplo a seguir mostra como definir o <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> propriedade para definir o controle padrão que faz com que um postback.  
  
 [!code-aspx-csharp[HtmlForm.DefaultButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.DefaultButton/CS/htmlform.defaultbuttoncs.aspx#1)]
 [!code-aspx-vb[HtmlForm.DefaultButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.DefaultButton/VB/htmlform.defaultbuttonvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">O controle referenciado como o botão padrão não é do tipo <see cref="T:System.Web.UI.WebControls.IButtonControl" />.</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus" />
        <altmember cref="P:System.Web.UI.Control.ID" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
        <related type="Article" href="https://msdn.microsoft.com/library/4e53eedf-8304-4e7a-aed1-691a2623b28b">Visão geral de páginas mestras do ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="DefaultFocus">
      <MemberSignature Language="C#" Value="public string DefaultFocus { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultFocus" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultFocus As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultFocus { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultFocus : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.DefaultFocus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o controle no formulário a ser exibido como o controle com o foco de entrada quando o controle <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> é carregado.</summary>
        <value>O <see cref="P:System.Web.UI.Control.ClientID" /> do controle no formulário a ser exibido como o controle com o foco de entrada quando o <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> é carregado. O valor padrão é uma cadeia de caracteres vazia ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> propriedade para acessar o controle no formulário para exibir como o controle com a entrada do foco quando o <xref:System.Web.UI.HtmlControls.HtmlForm> controle for carregado. Controles que podem ser selecionados são exibidos com uma indicação visual que indica que eles têm o foco. Por exemplo, um <xref:System.Web.UI.WebControls.TextBox> controle com o foco é exibido com o ponto de inserção posicionado dentro dele.  
  
 O controle com foco também pode ser definido usando o <xref:System.Web.UI.Control.Focus%2A> ou <xref:System.Web.UI.Page.SetFocus%2A> métodos. Esses métodos têm precedência sobre o <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> propriedade. Se qualquer um desses métodos é chamado para definir o controle com foco, o valor da <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> propriedade será ignorada.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como definir o <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> propriedade para exibir um controle especificado em um formulário como o controle com o foco de entrada quando o formulário é carregado. Quando `Form1` renderizações, observe que o ponto de inserção é posicionado na `TextBox1`, indicando que `TextBox1` é o controle com foco.  
  
 [!code-aspx-csharp[HtmlForm.DefaultButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.DefaultButton/CS/htmlform.defaultbuttoncs.aspx#1)]
 [!code-aspx-vb[HtmlForm.DefaultButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.DefaultButton/VB/htmlform.defaultbuttonvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />
        <altmember cref="P:System.Web.UI.Control.ID" />
        <altmember cref="M:System.Web.UI.Control.Focus" />
        <altmember cref="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="Enctype">
      <MemberSignature Language="C#" Value="public string Enctype { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Enctype" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Enctype" />
      <MemberSignature Language="VB.NET" Value="Public Property Enctype As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Enctype { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Enctype : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.Enctype" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o tipo de codificação que um navegador usa postar os dados do formulário para o servidor.</summary>
        <value>Uma cadeia de caracteres que contém o tipo de codificação. O valor padrão é uma cadeia de caracteres vazia (""), indicando que o tipo de conteúdo padrão do navegador é usado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A> propriedade para especificar o tipo de codificação um navegador usa postar os dados de volta para o servidor.  
  
 A tabela a seguir mostra os tipos de codificação comuns.  
  
|Tipo de codificação|Descrição|  
|-------------------|-----------------|  
|application/x-www-form-urlencoded|Dados de formulário são codificados como pares nome/valor. Este é o formato de codificação padrão.|  
|multipart/form-data|Dados de formulário são codificados como uma mensagem com uma parte separada para cada controle na página.|  
|texto/simples|Dados de formulário estão codificados em texto sem formatação, sem qualquer controle ou caracteres de formatação.|  
  
 Para obter mais informações sobre tipos de codificação, consulte a [World Wide Web Consortium (W3C Web site](https://go.microsoft.com/fwlink/?linkid=37125).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A> propriedade para especificar o tipo de codificação do navegador usa para enviar dados de volta para o servidor.  
  
 [!code-aspx-csharp[HtmlForm#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm/CS/htmlformcs.aspx#1)]
 [!code-aspx-vb[HtmlForm#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm/VB/htmlformvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Method" />
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public string Method { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Method" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Method" />
      <MemberSignature Language="VB.NET" Value="Public Property Method As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Method { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Method : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.Method" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica como um navegador envia dados de formulário para o servidor para processamento.</summary>
        <value>Uma cadeia de caracteres que indica como um navegador envia dados de formulário para o servidor. O valor padrão é <see langword="POST" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use essa propriedade para especificar como o navegador envia dados de formulário para o servidor para processamento. Os dois métodos comuns compatíveis com todos os navegadores são `GET` e `POST`.  
  
> [!CAUTION]
>  Você pode substituir o valor padrão dessa propriedade e use o `GET` método em vez de `POST`. No entanto, porque `GET` solicitações são limitadas na quantidade de dados que eles podem incluir, usando o `GET` método pode, em alguns casos, fazer com que os recursos de gerenciamento de postback e de estado fornecidos pela estrutura de página ASP.NET falhe.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.HtmlControls.HtmlForm.Method%2A> propriedade para especificar que os dados de formulário são postados no servidor.  
  
 [!code-aspx-csharp[HtmlForm#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm/CS/htmlformcs.aspx#1)]
 [!code-aspx-vb[HtmlForm#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm/VB/htmlformvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Enctype" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o nome do identificador para o controle <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />.</summary>
        <value>Uma cadeia de caracteres que contém o nome do identificador para o <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> propriedade para determinar o nome de identificador exclusivo para um <xref:System.Web.UI.HtmlControls.HtmlForm> controle. Nessa implementação, obter essa propriedade retorna o valor da <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> propriedade. No entanto, a configuração da propriedade não atribuir um valor à propriedade. Definindo a propriedade não atribui um valor para essa propriedade como o <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> propriedade deve ter o mesmo valor que o <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> propriedade.  
  
> [!NOTE]
>  O `name` atributo não é um atributo compatível com XHTML e não é processado pelo ASP.NET, independentemente do `xhtmlConformance` configuração.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.UniqueID" />
        <related type="Article" href="https://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97">ASP.NET e compatibilidade com XHTML</related>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="htmlForm.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.EventArgs" /> que contém dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Web.UI.Control.Init" /> do controle <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quando notificado pelo <xref:System.Web.UI.HtmlControls.HtmlForm.OnInit%2A> método, controles de servidor Web devem executar as etapas de inicialização que são necessárias para criar e configurar uma instância. Neste estágio do ciclo de vida do controle de servidor, o estado de exibição do controle ainda precisa ser preenchido. Além disso, você não pode acessar outros controles de servidor quando este método é chamado, independentemente de ser um filho ou pai para esse controle. Outros controles de servidor não são garantidos para ser criado e estará pronto para acesso.  
  
 A geração de um evento invoca o manipulador de eventos por meio de um delegado. Para obter mais informações, consulte [tratando e gerando eventos](~/docs/standard/events/index.md).  
  
 O <xref:System.Web.UI.WebControls.GridView.OnInit%2A> método também permite que classes derivadas manipular o evento sem anexar um delegado. Essa é a técnica preferencial para manipular o evento em uma classe derivada.  
  
 O <xref:System.Web.UI.HtmlControls.HtmlForm.OnInit%2A> método é usado principalmente por desenvolvedores de controle estender a funcionalidade do <xref:System.Web.UI.HtmlControls.HtmlForm> controle.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Ao substituir a <see cref="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" /> método em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" /> , de modo que delegados registrados recebam o evento. Além disso, chamar a classe base <see cref="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" /> método garante que o <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> controle corretamente é definido como o formulário da página da Web e o estado de exibição da página é persistido.</para></block>
        <altmember cref="M:System.Web.UI.Page.RegisterViewStateHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="htmlForm.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Um <see cref="T:System.EventArgs" /> que contém os dados do evento.</param>
        <summary>Aciona o evento <see cref="E:System.Web.UI.Control.PreRender" /> do controle <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.HtmlControls.HtmlForm.OnPreRender%2A> método é chamado apenas antes da renderização de <xref:System.Web.UI.HtmlControls.HtmlForm> controle. Se o <xref:System.Web.UI.Page.SmartNavigation%2A?displayProperty=nameWithType> estiver definida como `true`, o <xref:System.Web.UI.HtmlControls.HtmlForm.OnPreRender%2A> método registra a referência de arquivo de script de navegação inteligente para que ele é renderizado.  
  
> [!NOTE]
>  O <xref:System.Web.UI.Page.SmartNavigation%2A?displayProperty=nameWithType> propriedade foi preterida no ASP.NET 2.0.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.SmartNavigation" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (output As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ output);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlForm.Render output" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="output">O <see cref="T:System.Web.UI.HtmlTextWriter" /> que recebe o conteúdo renderizado.</param>
        <summary>Renderiza o controle <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> no objeto <see cref="T:System.Web.UI.HtmlTextWriter" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.HtmlControls.HtmlForm.Render%2A> método renderiza um HTML `<iframe>` elemento se o <xref:System.Web.UI.Page.SmartNavigation%2A> estiver definida como `true`. O <xref:System.Web.UI.HtmlControls.HtmlForm.Render%2A> chama o método base <xref:System.Web.UI.Control.Render%2A> método.  
  
 O <xref:System.Web.UI.HtmlControls.HtmlForm.Render%2A> método é usado principalmente por desenvolvedores de controle estender a funcionalidade do <xref:System.Web.UI.HtmlControls.HtmlForm> controle.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">O controle <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> não é renderizado sem uma referência à instância de <see cref="T:System.Web.UI.Page" />.</exception>
        <block subset="none" type="overrides"><para>Ao substituir a <see cref="M:System.Web.UI.HtmlControls.HtmlForm.Render(System.Web.UI.HtmlTextWriter)" /> método em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Web.UI.HtmlControls.HtmlForm.Render(System.Web.UI.HtmlTextWriter)" /> método para que o <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> controles filho do controle são renderizados corretamente.</para></block>
        <altmember cref="T:System.Web.HttpException" />
        <altmember cref="P:System.Web.UI.Page.SmartNavigation" />
        <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderAttributes">
      <MemberSignature Language="C#" Value="protected override void RenderAttributes (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderAttributes(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderAttributes (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderAttributes(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderAttributes : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlForm.RenderAttributes writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">O <see cref="T:System.Web.UI.HtmlTextWriter" /> que recebe o conteúdo renderizado.</param>
        <summary>Renderiza os atributos do controle <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> no objeto <see cref="T:System.Web.UI.HtmlTextWriter" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes%2A> usa o <xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A> método para verificar a <xref:System.Web.UI.HtmlControls.HtmlForm> atributos do controle para garantir que eles podem ser renderizados na marca de abertura de um `<form>` elemento HTML.  
  
 Além disso, o <xref:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes%2A> método renderiza a `method`, `action`, e `onsubmit` atributos do <xref:System.Web.UI.HtmlControls.HtmlForm> controle. Se a ID do controle definido na <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> não implementa a propriedade de <xref:System.Web.UI.WebControls.IButtonControl> interface, um <xref:System.InvalidOperationException> exceção é lançada.  
  
 O <xref:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes%2A> método é usado principalmente por desenvolvedores de controle estender a funcionalidade do <xref:System.Web.UI.HtmlControls.HtmlForm> controle.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">A ID de controle definida na propriedade <see cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" /> não é do tipo <see cref="T:System.Web.UI.WebControls.IButtonControl" />.</exception>
        <block subset="none" type="overrides"><para>Ao substituir a <see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" /> método em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" /> método para que o <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> atributos do controle são renderizados corretamente.</para></block>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlControl.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
        <altmember cref="T:System.InvalidOperationException" />
      </Docs>
    </Member>
    <Member MemberName="RenderChildren">
      <MemberSignature Language="C#" Value="protected internal override void RenderChildren (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderChildren(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.RenderChildren(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderChildren (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderChildren(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderChildren : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlForm.RenderChildren writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">O <see cref="T:System.Web.UI.HtmlTextWriter" /> que recebe o conteúdo renderizado.</param>
        <summary>Renderiza os controles filho do controle <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.HtmlControls.HtmlForm.RenderChildren%2A> método processa o script de cliente para garantir que o foco do navegador está definido para o controle especificado no <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> propriedade.  
  
> [!NOTE]
>  Um controle especificado pela <xref:System.Web.UI.Page.SetFocus%2A?displayProperty=nameWithType> propriedade tem precedência sobre um controle especificado pelo <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> propriedade.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">A página da Web tem mais de uma marca <see langword="&lt;form&gt;" /> do lado do servidor.</exception>
        <block subset="none" type="overrides"><para>Ao substituir a <see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderChildren(System.Web.UI.HtmlTextWriter)" /> método em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderChildren(System.Web.UI.HtmlTextWriter)" /> método para que o <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> controles filho do controle são renderizados corretamente.</para></block>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus" />
        <altmember cref="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.Control.Focus" />
      </Docs>
    </Member>
    <Member MemberName="RenderControl">
      <MemberSignature Language="C#" Value="public override void RenderControl (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderControl(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.RenderControl(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderControl (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderControl(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderControl : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlForm.RenderControl writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">O <see cref="T:System.Web.UI.HtmlTextWriter" /> que recebe o conteúdo do controle de formulário.</param>
        <summary>Renderiza o controle <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> no objeto <see cref="T:System.Web.UI.HtmlTextWriter" /> especificado.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>Ao substituir a <see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderControl(System.Web.UI.HtmlTextWriter)" /> método em uma classe derivada, certifique-se de chamar a classe base <see cref="M:System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)" /> método para que o <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> controle seja renderizado corretamente.</para></block>
        <altmember cref="P:System.Web.UI.Control.DesignMode" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SubmitDisabledControls">
      <MemberSignature Language="C#" Value="public virtual bool SubmitDisabledControls { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SubmitDisabledControls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SubmitDisabledControls As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SubmitDisabledControls { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SubmitDisabledControls : bool with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor booliano indicando se deseja forçar controles desabilitados no cliente para enviar seus valores, o que lhes permite preservar seus valores depois que a página envia de volta para o servidor.</summary>
        <value><see langword="true" /> se os controles desabilitados no cliente são forçados a enviar seus valores. Caso contrário, <see langword="false" />. O valor padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> propriedade para especificar se deseja forçar controles desabilitados no cliente para enviar seus valores quando a página é postada. Isso permite que os controles de desabilitado preservar seus valores depois que a página envia de volta para o servidor. Quando o <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> estiver definida como `false`, controles no formulário que foram desabilitados usando script de cliente não serão enviados ao servidor na próxima vez em que a página é postada. Como resultado, quaisquer valores armazenados pelos controles desabilitados são perdidas. Para permitir que os controles de desabilitado preservar seus valores depois que a página envia de volta para o servidor, defina as <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> propriedade para `true`.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como definir a <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> propriedade em um formulário para `true` para fazer com que controles desabilitados pelo script de cliente para manter seus valores depois que a página envia de volta para o servidor. Neste exemplo, se você definir a <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> propriedade para `false` e, em seguida, clique no **realiza um postback** botão, o texto na caixa de texto HTML é perdido e a caixa de seleção HTML não será mais selecionada.  
  
 [!code-aspx-csharp[HtmlForm.SubmitDisabledControls#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.SubmitDisabledControls/CS/htmlform.submitdisabledcontrolscs.aspx#1)]
 [!code-aspx-vb[HtmlForm.SubmitDisabledControls#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.SubmitDisabledControls/VB/htmlform.submitdisabledcontrolsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Target { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Target : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o quadro ou janela em que renderizar os resultados de informações postadas no servidor.</summary>
        <value>A janela do navegador ou o quadro que exibe os resultados das informações postadas no servidor. O padrão é uma cadeia de caracteres vazia (""), que atualiza a janela ou quadro com o foco.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A> para especificar a janela de destino ou quadro que exibe os resultados das informações que é lançada para o servidor. Redirecionar os resultados das informações para o servidor é uma tarefa avançada. Não é recomendável usar essa propriedade simplesmente para postar de volta.  
  
> [!NOTE]
>  O <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A> propriedade renderiza como um `target` atributo. O `target` atributo `form` elementos não é permitido em XHTML 1.1. Portanto, se a marcação renderizada deve estar em conformidade com padrões XHTML ou deve estar em conformidade com padrões de acessibilidade, não defina o <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A> propriedade. Para obter mais informações, consulte [padrões XHTML no Visual Studio e ASP.NET](https://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97) e [acessibilidade no Visual Studio e o ASP.NET](https://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13).  
  
 O <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A> valor deve começar com uma letra no intervalo de À Z (diferencia maiusculas de minúsculas), exceto para os seguintes valores especiais que começam com um sublinhado.  
  
|Valor de destino|Descrição|  
|------------------|-----------------|  
|`_blank`|Renderiza o conteúdo em uma nova janela sem quadros.|  
|`_parent`|Renderiza o conteúdo no conjunto de quadros pai.|  
|`_search`|Renderiza o conteúdo no painel de pesquisa.|  
|`_self`|Renderiza o conteúdo do quadro com foco.|  
|`_top`|Renderiza o conteúdo na janela inteira sem quadros.|  
  
> [!NOTE]
>  Verifique a documentação do navegador para determinar se o `_search` valor é suportado.  Por exemplo, Microsoft Internet Explorer 5.0 e posteriores dão suporte à `_search` valor de destino.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A> lançadas de propriedade para especificar uma nova janela sem quadros para exibir os resultados das informações de volta para o servidor.  
  
 [!code-aspx-csharp[HtmlFormTarget#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlFormTarget/CS/htmlformtargetcs.aspx#1)]
 [!code-aspx-vb[HtmlFormTarget#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlFormTarget/VB/htmlformtargetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97">ASP.NET e compatibilidade com XHTML</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13">Acessibilidade no Visual Studio 2010 e o ASP.NET 4</related>
      </Docs>
    </Member>
    <Member MemberName="UniqueID">
      <MemberSignature Language="C#" Value="public override string UniqueID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UniqueID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.UniqueID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property UniqueID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UniqueID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UniqueID : string" Usage="System.Web.UI.HtmlControls.HtmlForm.UniqueID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém o identificador programático exclusivo atribuído ao controle <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />.</summary>
        <value>O identificador programático exclusivo atribuído para o <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> controle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> propriedade para obter o identificador programático exclusivo atribuído para o <xref:System.Web.UI.HtmlControls.HtmlForm> controle. Essa propriedade substitui a implementação base para retornar um valor constante, quando o controle está contido em um <xref:System.Web.UI.INamingContainer>-objeto que não seja uma página, como um controle de servidor personalizado implementado. Se o contêiner de nomenclatura é uma página, o valor de <xref:System.Web.UI.HtmlControls.HtmlForm> do controle <xref:System.Web.UI.Control.ID%2A> propriedade é retornada.  
  
 O <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> propriedade e o <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> propriedade sempre retornará o mesmo valor. Isso é útil quando o <xref:System.Web.UI.HtmlControls.HtmlForm> controle é renderizado em um navegador que exige as <xref:System.Web.UI.HtmlControls.HtmlForm> do controle <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> e <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> propriedades para ser o mesmo. Para manter essas propriedades sincronizadas, o <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> propriedade sempre retorna o valor da <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> propriedade.  
  
> [!NOTE]
>  O `name` atributo não é um atributo compatível com XHTML e por padrão não é processado pelo ASP.NET.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> propriedade para recuperar o identificador exclusivo para um <xref:System.Web.UI.HtmlControls.HtmlForm> controle.  
  
 [!code-aspx-csharp[HtmlForm.UniqueID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.UniqueID/CS/htmlform.uniqueidcs.aspx#1)]
 [!code-aspx-vb[HtmlForm.UniqueID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.UniqueID/VB/htmlform.uniqueidvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Name" />
        <related type="Article" href="https://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97">ASP.NET e compatibilidade com XHTML</related>
      </Docs>
    </Member>
  </Members>
</Type>