<Type Name="HtmlTableCell" FullName="System.Web.UI.HtmlControls.HtmlTableCell">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="87b930d3b9e39fbfd53c9e92c5acd294238fafad" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36389031" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HtmlTableCell : System.Web.UI.HtmlControls.HtmlContainerControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlTableCell extends System.Web.UI.HtmlControls.HtmlContainerControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlTableCell" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlTableCell&#xA;Inherits HtmlContainerControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlTableCell : System::Web::UI::HtmlControls::HtmlContainerControl" />
  <TypeSignature Language="F#" Value="type HtmlTableCell = class&#xA;    inherit HtmlContainerControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlContainerControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.ConstructorNeedsTag(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa os elementos HTML <see langword="&lt;td&gt;" /> e <see langword="&lt;th&gt;" /> em um objeto <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `<td>` elemento representa uma célula de dados em uma tabela, enquanto o `<th>` elemento representa uma célula de cabeçalho de tabela. Use o <xref:System.Web.UI.HtmlControls.HtmlTableCell> classe para controlar programaticamente o `<td>` e `<th>` elementos HTML em uma <xref:System.Web.UI.HtmlControls.HtmlTableRow> objeto.  
  
 O <xref:System.Web.UI.HtmlControls.HtmlTableCell> classe permite que você personalize a aparência de uma célula em uma tabela especificando a cor de plano de fundo, a cor da borda, a altura e a largura. Esses atributos são definidos usando o <xref:System.Web.UI.HtmlControls.HtmlTableCell.BgColor%2A>, <xref:System.Web.UI.HtmlControls.HtmlTableCell.BorderColor%2A>, <xref:System.Web.UI.HtmlControls.HtmlTableCell.Height%2A>, e <xref:System.Web.UI.HtmlControls.HtmlTableCell.Width%2A> propriedades.  
  
 Você pode controlar como o conteúdo de uma célula é exibido, especificando o alinhamento vertical e horizontal do conteúdo. Você também pode especificar se o conteúdo continua automaticamente na próxima linha quando é atingido o fim da célula. O alinhamento horizontal é controlado pelo <xref:System.Web.UI.HtmlControls.HtmlTableCell.Align%2A> propriedade, enquanto o <xref:System.Web.UI.HtmlControls.HtmlTableCell.VAlign%2A> propriedade controla o alinhamento vertical. O <xref:System.Web.UI.HtmlControls.HtmlTableCell.NoWrap%2A> propriedade indica se a quebra de texto está desabilitada.  
  
 Usando o <xref:System.Web.UI.HtmlControls.HtmlTableCell.ColSpan%2A> ou <xref:System.Web.UI.HtmlControls.HtmlTableCell.RowSpan%2A> propriedade, você pode controlar o número de colunas ou linhas que ocupa uma célula. Por exemplo, você pode criar uma célula que ocupa duas colunas em uma tabela, definindo o <xref:System.Web.UI.HtmlControls.HtmlTableCell.ColSpan%2A> propriedade `2`.  
  
 Para obter uma lista de valores de propriedade inicial para uma instância do <xref:System.Web.UI.HtmlControls.HtmlTableCell>, consulte o <xref:System.Web.UI.HtmlControls.HtmlTableCell.%23ctor%2A> construtor.  
  
> [!CAUTION]
>  Este controle pode ser usado para exibir a entrada do usuário, que pode incluir um script de cliente mal-intencionado. Verifique todas as informações que são enviadas de um cliente para o script executável, instruções SQL ou outro código antes de exibi-lo em seu aplicativo. O ASP.NET fornece um recurso de validação de solicitação de entrada para o bloco de script e HTML na entrada do usuário. Controles de servidor de validação também são fornecidos para avaliar a entrada do usuário. Para obter mais informações, consulte [sintaxe de controle de servidor de validação](http://msdn.microsoft.com/library/96d2c59e-693c-4079-9b53-b3ff0d9e9133).  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar um <xref:System.Web.UI.HtmlControls.HtmlTableCell> para modificar o conteúdo de uma célula em uma tabela. Observe que o <xref:System.Web.UI.HtmlControls.HtmlTable.Rows%2A> coleção de um <xref:System.Web.UI.HtmlControls.HtmlTable> controle contém um conjunto de linhas (<xref:System.Web.UI.HtmlControls.HtmlTableRow> objetos) na tabela. O <xref:System.Web.UI.HtmlControls.HtmlTableRow.Cells%2A> coleção de um <xref:System.Web.UI.HtmlControls.HtmlTableRow> objeto é uma coleção de células (<xref:System.Web.UI.HtmlControls.HtmlTableCell> objetos) em uma linha.  
  
 [!code-aspx-csharp[HtmlTblCell#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTblCell/CS/htmltablecellcs.aspx#1)]
 [!code-aspx-vb[HtmlTblCell#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTblCell/VB/htmltablecellvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlTable" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTable.Rows" />
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableRow.Cells" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.Align" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.BgColor" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.BorderColor" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.ColSpan" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.Height" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.NoWrap" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.RowSpan" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.VAlign" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.Width" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlTableCell ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTableCell.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlTableCell();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> usando valores padrão.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use este construtor para criar e inicializar uma nova instância do <xref:System.Web.UI.HtmlControls.HtmlTableCell> classe. Este construtor é usado para criar um <xref:System.Web.UI.HtmlControls.HtmlTableCell> objeto que representa o `<td>` elemento para uma célula de dados de tabela.  
  
 A tabela a seguir mostra o valor da propriedade inicial para uma instância do <xref:System.Web.UI.HtmlControls.HtmlTableCell>.  
  
|Propriedade|Valor inicial|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlControl.TagName%2A>|Cadeia de caracteres literal a "td".|  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como criar uma instância de um <xref:System.Web.UI.HtmlControls.HtmlTable> controlar com <xref:System.Web.UI.HtmlControls.HtmlTableCell> controla e coloque a tabela na página da Web. Observe como o <xref:System.Web.UI.HtmlControls.HtmlTableCell> construtor padrão de controle é usado para criar um `<td>` elemento, enquanto seu construtor sobrecarregado que usa um parâmetro de cadeia de caracteres é usado com a cadeia de caracteres literal "th" para criar um `<th>` elemento.  
  
 [!code-aspx-csharp[HtmlTableCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCtor/CS/htmltablectorcs.aspx#1)]
 [!code-aspx-vb[HtmlTableCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCtor/VB/htmltablectorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.TagName" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlTableRow.#ctor" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlTable.#ctor" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlTableCell (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTableCell.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlTableCell(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.HtmlControls.HtmlTableCell : string -&gt; System.Web.UI.HtmlControls.HtmlTableCell" Usage="new System.Web.UI.HtmlControls.HtmlTableCell tagName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName">O nome do elemento da marca.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />, usando o nome da marca especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use este construtor para criar e inicializar uma nova instância do <xref:System.Web.UI.HtmlControls.HtmlTableCell> classe. Permite que você crie um <xref:System.Web.UI.HtmlControls.HtmlTableCell> objeto que representa uma célula em uma <xref:System.Web.UI.HtmlControls.HtmlTable> controle. Ele costuma ser usado para criar um <xref:System.Web.UI.HtmlControls.HtmlTableCell> objeto que representa um `<th>` elemento para uma célula de cabeçalho de tabela. Embora você possa usar o construtor para criar um `<td>` elemento para uma célula de dados de tabela, você normalmente usar o construtor padrão.  
  
> [!NOTE]
>  Embora esse construtor permite que você especifique o elemento de célula para criar, o `<th>` elemento é o único elemento de célula de suporte. Para compatibilidade futura, este construtor permite que você crie outros elementos de célula HTML que podem se tornar disponíveis.  
  
 A tabela a seguir mostra o valor da propriedade inicial para uma instância do <xref:System.Web.UI.HtmlControls.HtmlTableCell>.  
  
|Propriedade|Valor inicial|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlControl.TagName%2A>|O valor de `tagName` parâmetro.|  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como criar uma instância de um <xref:System.Web.UI.HtmlControls.HtmlTable> controlar com <xref:System.Web.UI.HtmlControls.HtmlTableCell> controla e coloque a tabela na página da Web. Observe como o <xref:System.Web.UI.HtmlControls.HtmlTableCell> construtor padrão de controle é usado para criar um `<td>` elemento, enquanto seu construtor sobrecarregado que usa um parâmetro de cadeia de caracteres é usado com o literal "th" para criar um `<th>` elemento.  
  
 [!code-aspx-csharp[HtmlTableCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCtor/CS/htmltablectorcs.aspx#1)]
 [!code-aspx-vb[HtmlTableCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCtor/VB/htmltablectorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.TagName" />
      </Docs>
    </Member>
    <Member MemberName="Align">
      <MemberSignature Language="C#" Value="public string Align { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Align" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCell.Align" />
      <MemberSignature Language="VB.NET" Value="Public Property Align As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Align { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Align : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlTableCell.Align" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o alinhamento horizontal do conteúdo na célula representada por uma instância da classe <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />.</summary>
        <value>O alinhamento horizontal do conteúdo da célula representada por uma instância de <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />. O valor padrão é <see cref="F:System.String.Empty" />, que indica que essa propriedade não está definida.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.HtmlControls.HtmlTableCell.Align%2A> propriedade para especificar o alinhamento horizontal do conteúdo em uma célula representada por uma instância de <xref:System.Web.UI.HtmlControls.HtmlTableCell> classe.  
  
> [!NOTE]
>  A definição dessa propriedade afeta apenas a célula representada por uma instância do <xref:System.Web.UI.HtmlControls.HtmlTableCell> classe. Para aplicar o mesmo alinhamento para as células de uma linha inteira na tabela, defina o <xref:System.Web.UI.HtmlControls.HtmlTableRow.Align%2A> propriedade da linha representada por uma instância de <xref:System.Web.UI.HtmlControls.HtmlTableRow> classe.  
  
 A tabela a seguir lista os valores que podem ser usados para essa propriedade.  
  
|Valor|Descrição|  
|-----------|-----------------|  
|`Left`|Alinhamento do conteúdo de uma célula com a borda esquerda da célula.|  
|`Center`|Alinhamento do conteúdo de uma célula no meio da célula.|  
|`Right`|Alinhamento do conteúdo de uma célula com a borda direita da célula.|  
  
> [!NOTE]
>  Você também pode usar `Justify` e `Char` como valores para essa propriedade; no entanto, nem todos os navegadores dão suporte a esses recursos.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.HtmlControls.HtmlTableCell.Align%2A> propriedade para controlar programaticamente o alinhamento do conteúdo das células em uma <xref:System.Web.UI.HtmlControls.HtmlTable> controle.  
  
 [!code-aspx-csharp[HtmlTblCellBehavior#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTblCellBehavior/CS/htmltablecellbehaviorcs.aspx#1)]
 [!code-aspx-vb[HtmlTblCellBehavior#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTblCellBehavior/VB/htmltablecellbehaviorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTable" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.ColSpan" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.NoWrap" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.RowSpan" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.VAlign" />
      </Docs>
    </Member>
    <Member MemberName="BgColor">
      <MemberSignature Language="C#" Value="public string BgColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BgColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCell.BgColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BgColor As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BgColor { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BgColor : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlTableCell.BgColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a cor da tela de fundo da célula representada por uma instância da classe <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />.</summary>
        <value>A cor da tela de fundo da célula representada por uma instância da <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.HtmlControls.HtmlTableCell.BgColor%2A> propriedade para especificar a cor de plano de fundo da célula representada por uma instância do <xref:System.Web.UI.HtmlControls.HtmlTableCell> classe. Você pode especificar uma cor pelo nome ou usando um valor hexadecimal, precedido pelo caractere de libra (#), no formato #RRGGBB. RR, GG e BB representam valores hexadecimais de 0 a 255 que indicam os componentes vermelhos, verdes e azuis da cor, respectivamente. Por exemplo, o valor #0000FF representa a cor azul. Especifica o valor mínimo (00) para os componentes vermelhos e verdes, ao especificar o valor máximo (FF) para o componente azul.  
  
 A tabela a seguir mostra a dezesseis predefinidos nomes de cores HTML e os valores hexadecimais correspondentes que podem ser usados para o <xref:System.Web.UI.HtmlControls.HtmlTableCell.BgColor%2A> propriedade. Para obter mais informações sobre as cores HTML, consulte o [World Wide Web Consortium (W3C) Web site](http://go.microsoft.com/fwlink/?linkid=37125).  
  
|Nome de cor|Valor hexadecimal|  
|----------------|-----------------------|  
|Azul-piscina|#00FFFF|  
|Preto|#000000|  
|Azul|#0000FF|  
|Fúcsia|#FF00FF|  
|Cinza|#808080|  
|Verde|#008000|  
|Verde-limão|#00FF00|  
|Bordô|#800000|  
|Azul marinho|#000080|  
|Oliva|#808000|  
|Roxo|#800080|  
|Vermelho|#FF0000|  
|Prata|#C0C0C0|  
|Azul-petróleo|#008080|  
|Branco|#FFFFFF|  
|Amarelo|#FFFF00|  
  
 As cores disponíveis para uso com o <xref:System.Web.UI.HtmlControls.HtmlTableCell.BgColor%2A> propriedade pode ser determinada a partir de <xref:System.Drawing.KnownColor> enumeração.  
  
 Nomes de cores diferenciam maiusculas de minúsculas.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.HtmlControls.HtmlTableCell.BgColor%2A> propriedade para controlar programaticamente a cor de fundo das células em uma <xref:System.Web.UI.HtmlControls.HtmlTable> controle.  
  
 [!code-aspx-csharp[HtmlTblCellAppearance#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTblCellAppearance/CS/htmltablecellappearancecs.aspx#1)]
 [!code-aspx-vb[HtmlTblCellAppearance#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTblCellAppearance/VB/htmltablecellappearancevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTable" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.BorderColor" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.Height" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.Width" />
        <altmember cref="T:System.Drawing.KnownColor" />
      </Docs>
    </Member>
    <Member MemberName="BorderColor">
      <MemberSignature Language="C#" Value="public string BorderColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BorderColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCell.BorderColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderColor As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BorderColor { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BorderColor : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlTableCell.BorderColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a cor da borda da célula representada por uma instância da classe <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />.</summary>
        <value>A cor da borda da célula representada por uma instância de <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.HtmlControls.HtmlTableCell.BorderColor%2A> propriedade para especificar a cor da borda da célula representada por uma instância de <xref:System.Web.UI.HtmlControls.HtmlTableCell> classe. Você pode especificar uma cor pelo nome ou usando um valor hexadecimal, precedido pelo caractere de libra (#), no formato #RRGGBB. RR, GG e BB representam valores hexadecimais de 0 a 255 que indicam os componentes vermelhos, verdes e azuis da cor, respectivamente. Por exemplo, o valor #0000FF representa a cor azul. Especifica o valor mínimo (00) para os componentes vermelhos e verdes, ao especificar o valor máximo (FF) para o componente azul.  
  
 A tabela a seguir mostra a dezesseis predefinidos nomes de cores HTML e os valores hexadecimais correspondentes que podem ser usados para o <xref:System.Web.UI.HtmlControls.HtmlTableCell.BorderColor%2A> propriedade. Para obter mais informações sobre as cores HTML, consulte o [da World Wide Web Consortium (W3C)](http://go.microsoft.com/fwlink/?linkid=37125) site.  
  
|Nome de cor|Valor hexadecimal|  
|----------------|-----------------------|  
|Azul-piscina|#00FFFF|  
|Preto|#000000|  
|Azul|#0000FF|  
|Fúcsia|#FF00FF|  
|Cinza|#808080|  
|Verde|#008000|  
|Verde-limão|#00FF00|  
|Bordô|#800000|  
|Azul marinho|#000080|  
|Oliva|#808000|  
|Roxo|#800080|  
|Vermelho|#FF0000|  
|Prata|#C0C0C0|  
|Azul-petróleo|#008080|  
|Branco|#FFFFFF|  
|Amarelo|#FFFF00|  
  
 As cores disponíveis para uso com o <xref:System.Web.UI.HtmlControls.HtmlTableCell.BorderColor%2A> propriedade pode ser determinada a partir de <xref:System.Drawing.KnownColor> enumeração.  
  
 Nomes de cores diferenciam maiusculas de minúsculas.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.HtmlControls.HtmlTableCell.BorderColor%2A> propriedade para controlar programaticamente a cor da borda das células em uma <xref:System.Web.UI.HtmlControls.HtmlTable> controle.  
  
 [!code-aspx-csharp[HtmlTblCellAppearance#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTblCellAppearance/CS/htmltablecellappearancecs.aspx#1)]
 [!code-aspx-vb[HtmlTblCellAppearance#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTblCellAppearance/VB/htmltablecellappearancevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTable" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.BgColor" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.Height" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.Width" />
        <altmember cref="T:System.Drawing.KnownColor" />
      </Docs>
    </Member>
    <Member MemberName="ColSpan">
      <MemberSignature Language="C#" Value="public int ColSpan { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColSpan" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCell.ColSpan" />
      <MemberSignature Language="VB.NET" Value="Public Property ColSpan As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ColSpan { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ColSpan : int with get, set" Usage="System.Web.UI.HtmlControls.HtmlTableCell.ColSpan" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o número de colunas ocupadas por uma célula representada por uma instância da classe <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />.</summary>
        <value>O número de colunas ocupado pela célula representada por uma instância do <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />. O valor padrão é <see langword="-1" />, que indica que essa propriedade não está definida.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Em uma célula representada por uma instância do <xref:System.Web.UI.HtmlControls.HtmlTableCell> classe, use o <xref:System.Web.UI.HtmlControls.HtmlTableCell.ColSpan%2A> propriedade para especificar o número de colunas ocupa na célula. Isso permite que você crie uma célula na tabela que ocupam mais de uma coluna. Por exemplo, suponha que você tenha uma tabela que contém duas colunas e duas linhas. Você pode criar uma célula de cabeçalho de tabela que abrange as duas colunas. Definir o <xref:System.Web.UI.HtmlControls.HtmlTableCell.ColSpan%2A> propriedade da célula mais à esquerda na primeira linha `2` para indicar que esta célula tem duas colunas na tabela.  
  
> [!CAUTION]
>  Quando a abrangência de colunas, certifique-se de definir uma célula de menos na linha para cada coluna que se estendem por você. Por exemplo, se você incluir duas colunas, defina uma célula de menos na linha atual. Caso contrário, essa linha será maior que o número de colunas na tabela e a tabela não será exibida como esperado.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.HtmlControls.HtmlTableCell.ColSpan%2A> propriedade para especificar que a célula da primeira linha do <xref:System.Web.UI.HtmlControls.HtmlTable> controle ocupa duas colunas.  
  
 [!code-aspx-csharp[HtmlTblCellColSpan#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTblCellColSpan/CS/htmltablecellcolspancs.aspx#1)]
 [!code-aspx-vb[HtmlTblCellColSpan#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTblCellColSpan/VB/htmltablecellcolspanvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.Align" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.NoWrap" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.RowSpan" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.VAlign" />
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public string Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Height" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCell.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Height { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Height : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlTableCell.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a altura (em pixels) da célula representada por uma instância da classe <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />.</summary>
        <value>A altura (em pixels) da célula representada por uma instância de <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />. O valor padrão é <see cref="F:System.String.Empty" />, que indica que essa propriedade não está definida.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.HtmlControls.HtmlTableCell.Height%2A> propriedade para especificar a altura (em pixels) da célula representada por uma instância de <xref:System.Web.UI.HtmlControls.HtmlTableCell> classe. Quando você especifica a altura de uma célula, todas as células na mesma linha compartilharem automaticamente essa altura.  
  
> [!NOTE]
>  Se você especificar uma altura que seja menor do que é necessário para exibir o conteúdo da célula, essa propriedade será ignorada.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.HtmlControls.HtmlTableCell.Height%2A> propriedade para controlar programaticamente a altura das células de <xref:System.Web.UI.HtmlControls.HtmlTable> controle.  
  
 [!code-aspx-csharp[HtmlTblCellAppearance#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTblCellAppearance/CS/htmltablecellappearancecs.aspx#1)]
 [!code-aspx-vb[HtmlTblCellAppearance#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTblCellAppearance/VB/htmltablecellappearancevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.BgColor" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.BorderColor" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.Width" />
      </Docs>
    </Member>
    <Member MemberName="NoWrap">
      <MemberSignature Language="C#" Value="public bool NoWrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NoWrap" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCell.NoWrap" />
      <MemberSignature Language="VB.NET" Value="Public Property NoWrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NoWrap { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NoWrap : bool with get, set" Usage="System.Web.UI.HtmlControls.HtmlTableCell.NoWrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.MinimizableAttributeTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se o texto em uma célula representado por uma instância da classe <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> continua automaticamente na próxima linha quando ele atingir o final da célula.</summary>
        <value>
          <see langword="true" /> se o texto não quebrar automaticamente na célula; caso contrário, <see langword="false" />. O valor padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.HtmlControls.HtmlTableCell.NoWrap%2A> para especificar ou determinar se o texto em uma célula é representado por uma instância do <xref:System.Web.UI.HtmlControls.HtmlTableCell> classe continua automaticamente na próxima linha quando atingir o final da célula.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.HtmlControls.HtmlTableCell.NoWrap%2A> propriedade para controlar programaticamente se o texto é quebrado nas células de uma <xref:System.Web.UI.HtmlControls.HtmlTable> controle.  
  
 [!code-aspx-csharp[HtmlTblCellBehavior#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTblCellBehavior/CS/htmltablecellbehaviorcs.aspx#1)]
 [!code-aspx-vb[HtmlTblCellBehavior#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTblCellBehavior/VB/htmltablecellbehaviorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.Align" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.ColSpan" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.RowSpan" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.VAlign" />
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="protected override void RenderEndTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderEndTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTableCell.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderEndTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderEndTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderEndTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlTableCell.RenderEndTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">O <see cref="T:System.Web.UI.HtmlTextWriter" /> que recebe o conteúdo renderizado.</param>
        <summary>Renderiza a marca de fim do controle <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.HtmlControls.HtmlTableCell.RenderEndTag%2A> método fornece a formatação adicionais depois de chamar a classe base <xref:System.Web.UI.HtmlControls.HtmlContainerControl.RenderEndTag%2A> método. A formatação adicionais torna o <xref:System.Web.UI.HtmlControls.HtmlTableCell> controle processada do HTML mais fáceis de ler, adicionando uma linha de retorno após a marca de fechamento.  
  
 O <xref:System.Web.UI.HtmlControls.HtmlTableCell.RenderEndTag%2A> método é usado principalmente por desenvolvedores de controle estender a funcionalidade do <xref:System.Web.UI.HtmlControls.HtmlTableCell> controle.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlContainerControl.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="RowSpan">
      <MemberSignature Language="C#" Value="public int RowSpan { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RowSpan" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCell.RowSpan" />
      <MemberSignature Language="VB.NET" Value="Public Property RowSpan As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RowSpan { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.RowSpan : int with get, set" Usage="System.Web.UI.HtmlControls.HtmlTableCell.RowSpan" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o número de linhas ocupadas por uma célula representada por uma instância da classe <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />.</summary>
        <value>O número de linhas ocupadas por uma célula representada por uma instância da classe <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />. O valor padrão é <see langword="-1" />, que indica que essa propriedade não está definida.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Em uma célula representada por uma instância do <xref:System.Web.UI.HtmlControls.HtmlTableCell> classe, use o <xref:System.Web.UI.HtmlControls.HtmlTableCell.RowSpan%2A> propriedade para especificar o número de linhas que ocupa a célula. Isso permite que você crie uma célula na tabela que ocupam mais de uma linha. Por exemplo, suponha que você tenha uma tabela que contém duas colunas e duas linhas. Você pode criar uma coluna que se sobrepõe as duas linhas. Definir o <xref:System.Web.UI.HtmlControls.HtmlTableCell.RowSpan%2A> propriedade da célula mais à esquerda na primeira coluna para `2` para indicar que esta célula ocupa duas linhas na tabela.  
  
> [!CAUTION]
>  Quando houver linhas, certifique-se de definir uma célula de menos na coluna para cada linha que se estendem por você. Por exemplo, se você ocupar duas linhas, defina uma célula menos nessa coluna. Caso contrário, essa coluna será maior que o número de linhas na tabela e a tabela não será exibida como esperado.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.HtmlControls.HtmlTableCell.RowSpan%2A> propriedade para especificar que a célula na primeira coluna do <xref:System.Web.UI.HtmlControls.HtmlTable> controle abrangendo duas linhas.  
  
 [!code-aspx-csharp[HtmlTblCellRowSpan#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTblCellRowSpan/CS/htmltablecellrowspancs.aspx#1)]
 [!code-aspx-vb[HtmlTblCellRowSpan#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTblCellRowSpan/VB/htmltablecellrowspanvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.Align" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.ColSpan" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.NoWrap" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.VAlign" />
      </Docs>
    </Member>
    <Member MemberName="VAlign">
      <MemberSignature Language="C#" Value="public string VAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCell.VAlign" />
      <MemberSignature Language="VB.NET" Value="Public Property VAlign As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VAlign { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VAlign : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlTableCell.VAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o alinhamento vertical do conteúdo de uma célula representada por uma instância da classe <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />.</summary>
        <value>O alinhamento vertical do conteúdo de uma célula representada por uma instância de <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />. O valor padrão é <see cref="F:System.String.Empty" />, que indica que essa propriedade não está definida.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.HtmlControls.HtmlTableCell.VAlign%2A> propriedade para especificar o alinhamento vertical do conteúdo em uma célula representada por uma instância de <xref:System.Web.UI.HtmlControls.HtmlTableCell> classe.  
  
> [!NOTE]
>  A definição dessa propriedade afeta apenas a célula representada por uma instância do <xref:System.Web.UI.HtmlControls.HtmlTableCell> classe. Para aplicar o mesmo alinhamento vertical para as células de uma linha inteira na tabela, defina o <xref:System.Web.UI.HtmlControls.HtmlTableRow.VAlign%2A> propriedade da linha representada por uma instância de <xref:System.Web.UI.HtmlControls.HtmlTableRow> classe.  
  
 A tabela a seguir lista os valores que podem ser usados para essa propriedade.  
  
|Valor|Descrição|  
|-----------|-----------------|  
|`Top`|Alinhamento do conteúdo de uma célula com a borda superior da célula.|  
|`Middle`|Alinhamento do conteúdo de uma célula no centro da célula.|  
|`Bottom`|Alinhamento do conteúdo de uma célula com a borda inferior da célula.|  
  
> [!NOTE]
>  Você também pode usar `BaseLine` como um valor para essa propriedade. No entanto, nem todos os navegadores oferecem suporte a esse recurso.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.HtmlControls.HtmlTableCell.VAlign%2A> propriedade para controlar programaticamente o alinhamento vertical do conteúdo das células em uma <xref:System.Web.UI.HtmlControls.HtmlTable> controle.  
  
 [!code-aspx-csharp[HtmlTblCellBehavior#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTblCellBehavior/CS/htmltablecellbehaviorcs.aspx#1)]
 [!code-aspx-vb[HtmlTblCellBehavior#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTblCellBehavior/VB/htmltablecellbehaviorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.Align" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.ColSpan" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.NoWrap" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.RowSpan" />
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public string Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Width" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCell.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Width { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Width : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlTableCell.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define a largura (em pixels) da célula representada por uma instância da classe <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />.</summary>
        <value>A largura (em pixels) da célula representada por uma instância de <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />. O valor padrão é <see cref="F:System.String.Empty" />, que indica que essa propriedade não está definida.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.HtmlControls.HtmlTableCell.Width%2A> propriedade para especificar a largura (em pixels) da célula representada por uma instância de <xref:System.Web.UI.HtmlControls.HtmlTableCell> classe. Quando você especifica a largura de uma célula, todas as células na mesma coluna compartilharem automaticamente essa largura.  
  
> [!NOTE]
>  Se você especificar uma largura que é menor do que é necessário para exibir o conteúdo da célula, essa propriedade será ignorada.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como usar o <xref:System.Web.UI.HtmlControls.HtmlTableCell.Width%2A> propriedade para controlar programaticamente a largura das células de <xref:System.Web.UI.HtmlControls.HtmlTable> controle.  
  
 [!code-aspx-csharp[HtmlTblCellAppearance#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTblCellAppearance/CS/htmltablecellappearancecs.aspx#1)]
 [!code-aspx-vb[HtmlTblCellAppearance#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTblCellAppearance/VB/htmltablecellappearancevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.BgColor" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.BorderColor" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.Height" />
      </Docs>
    </Member>
  </Members>
</Type>