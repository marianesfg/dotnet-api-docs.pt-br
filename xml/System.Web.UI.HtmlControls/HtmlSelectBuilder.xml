<Type Name="HtmlSelectBuilder" FullName="System.Web.UI.HtmlControls.HtmlSelectBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2312e93716f3674b7909b27d61b2b981b11f69e5" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36389093" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HtmlSelectBuilder : System.Web.UI.ControlBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlSelectBuilder extends System.Web.UI.ControlBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlSelectBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlSelectBuilder&#xA;Inherits ControlBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlSelectBuilder : System::Web::UI::ControlBuilder" />
  <TypeSignature Language="F#" Value="type HtmlSelectBuilder = class&#xA;    inherit ControlBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.ControlBuilder</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Interage com o analisador para criar um controle <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Web.UI.HtmlControls.HtmlSelectBuilder> controle interage com o analisador de página para criar um <xref:System.Web.UI.HtmlControls.HtmlSelect> controle. Use o <xref:System.Web.UI.HtmlControls.HtmlSelectBuilder> controle para personalizar a análise de um <xref:System.Web.UI.HtmlControls.HtmlSelect> controle.  
  
 O <xref:System.Web.UI.HtmlControls.HtmlSelectBuilder.AllowWhitespaceLiterals%2A> está definida como `false` para que o espaço em branco é sempre ignorado. Use o <xref:System.Web.UI.HtmlControls.HtmlSelectBuilder.GetChildControlType%2A> método para determinar o tipo do <xref:System.Web.UI.HtmlControls.HtmlSelect> os controles filho do controle.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como criar um personalizado <xref:System.Web.UI.HtmlControls.HtmlSelectBuilder> controle que define dois tipos de `<option>` elementos filho de um personalizado <xref:System.Web.UI.HtmlControls.HtmlSelect> controle e, em seguida, os processos de cada tipo diferente.  
  
 [!code-aspx-csharp[HtmlSelectBuilder#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectBuilder/cs/source.aspx#1)]
 [!code-aspx-vb[HtmlSelectBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectBuilder/vb/source.aspx#1)]  
  
 [!code-csharp[HtmlSelectBuilder#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectBuilder/cs/source.cs#2)]
 [!code-vb[HtmlSelectBuilder#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectBuilder/vb/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Para criar um construtor de controle personalizado para um <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> controle, você precisa herdar dessa classe.</para>
    </block>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlSelect" />
    <altmember cref="T:System.Web.UI.ControlBuilder" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlSelectBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelectBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlSelectBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.UI.HtmlControls.HtmlSelectBuilder" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Este construtor é usado pelo ASP.NET ao analisar a página e criar a hierarquia de controle. Ele não se destina para uso em seu código.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlSelect" />
      </Docs>
    </Member>
    <Member MemberName="AllowWhitespaceLiterals">
      <MemberSignature Language="C#" Value="public override bool AllowWhitespaceLiterals ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool AllowWhitespaceLiterals() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelectBuilder.AllowWhitespaceLiterals" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AllowWhitespaceLiterals () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool AllowWhitespaceLiterals();" />
      <MemberSignature Language="F#" Value="override this.AllowWhitespaceLiterals : unit -&gt; bool" Usage="htmlSelectBuilder.AllowWhitespaceLiterals " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Determina se os literais de espaço em branco em um controle <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> devem ser processados ou ignorados.</summary>
        <returns>Esse método sempre retorna <see langword="false" />, indicando que espaços em branco no controle <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> são ignorados.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método substitui o <xref:System.Web.UI.ControlBuilder.AllowWhitespaceLiterals%2A?displayProperty=nameWithType> método sempre ignorar espaço em branco no <xref:System.Web.UI.HtmlControls.HtmlSelect> controle.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlSelect" />
      </Docs>
    </Member>
    <Member MemberName="GetChildControlType">
      <MemberSignature Language="C#" Value="public override Type GetChildControlType (string tagName, System.Collections.IDictionary attribs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetChildControlType(string tagName, class System.Collections.IDictionary attribs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelectBuilder.GetChildControlType(System.String,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChildControlType (tagName As String, attribs As IDictionary) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetChildControlType(System::String ^ tagName, System::Collections::IDictionary ^ attribs);" />
      <MemberSignature Language="F#" Value="override this.GetChildControlType : string * System.Collections.IDictionary -&gt; Type" Usage="htmlSelectBuilder.GetChildControlType (tagName, attribs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
        <Parameter Name="attribs" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="tagName">O nome da marca do controle filho.</param>
        <param name="attribs">Uma matriz de atributos contidos no controle filho.</param>
        <summary>Obtém o <see cref="T:System.Type" /> para os controles filho do controle <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" />.</summary>
        <returns>O <see cref="T:System.Type" /> do controle filho especificado do controle <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Web.UI.HtmlControls.HtmlSelectBuilder.GetChildControlType%2A> método para retornar o <xref:System.Type> de um controle filho especificado em um <xref:System.Web.UI.HtmlControls.HtmlSelect> controle.  
  
   
  
## Examples  
 O exemplo de código a seguir demonstra como substituir o <xref:System.Web.UI.HtmlControls.HtmlSelectBuilder.GetChildControlType%2A> método para verificar tipos de controle personalizados filho. Para obter um exemplo de código completa e funcionando, consulte o <xref:System.Web.UI.HtmlControls.HtmlSelectBuilder> tópico de visão geral da classe.  
  
 [!code-csharp[HtmlSelectBuilder#3](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectBuilder/cs/source.cs#3)]
 [!code-vb[HtmlSelectBuilder#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectBuilder/vb/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlSelect" />
      </Docs>
    </Member>
  </Members>
</Type>