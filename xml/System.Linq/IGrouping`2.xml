<Type Name="IGrouping&lt;TKey,TElement&gt;" FullName="System.Linq.IGrouping&lt;TKey,TElement&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6c6e128b37249d8d187d26d1e445628ac08243ee" />
    <Meta Name="ms.sourcegitcommit" Value="1b899505ed6d42225f2b3c9150bfdc080d0d1f9b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/28/2018" />
    <Meta Name="ms.locfileid" Value="32087154" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IGrouping&lt;out TKey,out TElement&gt; : System.Collections.Generic.IEnumerable&lt;out TElement&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IGrouping`2&lt;+ TKey, + TElement&gt; implements class System.Collections.Generic.IEnumerable`1&lt;!TElement&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Linq.IGrouping`2" />
  <TypeSignature Language="VB.NET" Value="Public Interface IGrouping(Of Out TKey, Out TElement)&#xA;Implements IEnumerable(Of Out TElement)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TElement&gt;&#xA;public interface class IGrouping : System::Collections::Generic::IEnumerable&lt;TElement&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Linq</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TElement">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;TElement&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TKey">
      <span data-ttu-id="dbbd4-101">O tipo da chave de <see cref="T:System.Linq.IGrouping`2" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dbbd4-101">The type of the key of the <see cref="T:System.Linq.IGrouping`2" />.</span>
      </span>
    </typeparam>
    <typeparam name="TElement">
      <span data-ttu-id="dbbd4-102">O tipo dos valores em <see cref="T:System.Linq.IGrouping`2" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dbbd4-102">The type of the values in the <see cref="T:System.Linq.IGrouping`2" />.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="dbbd4-103">Representa uma coleção de objetos que têm uma chave comum.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dbbd4-103">Represents a collection of objects that have a common key.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dbbd4-104">Um <xref:System.Linq.IGrouping%602> é um <xref:System.Collections.Generic.IEnumerable%601> Além disso, que tem uma chave.</span><span class="sxs-lookup"><span data-stu-id="dbbd4-104">An <xref:System.Linq.IGrouping%602> is an <xref:System.Collections.Generic.IEnumerable%601> that additionally has a key.</span></span> <span data-ttu-id="dbbd4-105">A chave representa o atributo que é comum a cada valor de <xref:System.Linq.IGrouping%602>.</span><span class="sxs-lookup"><span data-stu-id="dbbd4-105">The key represents the attribute that is common to each value in the <xref:System.Linq.IGrouping%602>.</span></span>  
  
 <span data-ttu-id="dbbd4-106">Os valores de uma <xref:System.Linq.IGrouping%602> são acessados bem como os elementos de um <xref:System.Collections.Generic.IEnumerable%601> são acessados.</span><span class="sxs-lookup"><span data-stu-id="dbbd4-106">The values of an <xref:System.Linq.IGrouping%602> are accessed much as the elements of an <xref:System.Collections.Generic.IEnumerable%601> are accessed.</span></span> <span data-ttu-id="dbbd4-107">Por exemplo, você pode acessar os valores usando um `foreach` no Visual c# ou `For Each` in Visual Basic para iterar por meio de <xref:System.Linq.IGrouping%602> objeto.</span><span class="sxs-lookup"><span data-stu-id="dbbd4-107">For example, you can access the values by using a `foreach` in Visual C# or `For Each` in Visual Basic loop to iterate through the <xref:System.Linq.IGrouping%602> object.</span></span> <span data-ttu-id="dbbd4-108">A seção de exemplo contém um exemplo de código que mostra como acessar a chave e os valores de uma <xref:System.Linq.IGrouping%602> objeto.</span><span class="sxs-lookup"><span data-stu-id="dbbd4-108">The Example section contains a code example that shows you how to access both the key and the values of an <xref:System.Linq.IGrouping%602> object.</span></span>  
  
 <span data-ttu-id="dbbd4-109">O <xref:System.Linq.IGrouping%602> tipo é usado pelo <xref:System.Linq.Enumerable.GroupBy%2A> métodos de operador de consulta padrão, que retornam uma sequência de elementos do tipo <xref:System.Linq.IGrouping%602>.</span><span class="sxs-lookup"><span data-stu-id="dbbd4-109">The <xref:System.Linq.IGrouping%602> type is used by the <xref:System.Linq.Enumerable.GroupBy%2A> standard query operator methods, which return a sequence of elements of type <xref:System.Linq.IGrouping%602>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dbbd4-110">O exemplo a seguir demonstra como trabalhar com um <xref:System.Linq.IGrouping%602> objeto.</span><span class="sxs-lookup"><span data-stu-id="dbbd4-110">The following example demonstrates how to work with an <xref:System.Linq.IGrouping%602> object.</span></span>  
  
 <span data-ttu-id="dbbd4-111">Neste exemplo, <xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29> é chamado em matriz de <xref:System.Reflection.MemberInfo> objetos retornados pelo <xref:System.Type.GetMembers%2A>.</span><span class="sxs-lookup"><span data-stu-id="dbbd4-111">In this example, <xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29> is called on the array of <xref:System.Reflection.MemberInfo> objects returned by <xref:System.Type.GetMembers%2A>.</span></span> <span data-ttu-id="dbbd4-112"><xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29> agrupa os objetos com base no valor de suas <xref:System.Reflection.MemberInfo.MemberType%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="dbbd4-112"><xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29> groups the objects based on the value of their <xref:System.Reflection.MemberInfo.MemberType%2A> property.</span></span> <span data-ttu-id="dbbd4-113">Cada valor exclusivo de <xref:System.Reflection.MemberInfo.MemberType%2A> na matriz de <xref:System.Reflection.MemberInfo> objetos torna-se uma chave para um novo <xref:System.Linq.IGrouping%602> objeto e o <xref:System.Reflection.MemberInfo> objetos que têm que formam a chave de <xref:System.Linq.IGrouping%602> sequência do objeto de valores.</span><span class="sxs-lookup"><span data-stu-id="dbbd4-113">Each unique value for <xref:System.Reflection.MemberInfo.MemberType%2A> in the array of <xref:System.Reflection.MemberInfo> objects becomes a key for a new <xref:System.Linq.IGrouping%602> object, and the <xref:System.Reflection.MemberInfo> objects that have that key form the <xref:System.Linq.IGrouping%602> object's sequence of values.</span></span>  
  
 <span data-ttu-id="dbbd4-114">Por fim, o <xref:System.Linq.Enumerable.First%2A> método é chamado na sequência de <xref:System.Linq.IGrouping%602> objetos para obter apenas os primeiros <xref:System.Linq.IGrouping%602> objeto.</span><span class="sxs-lookup"><span data-stu-id="dbbd4-114">Finally, the <xref:System.Linq.Enumerable.First%2A> method is called on the sequence of <xref:System.Linq.IGrouping%602> objects to obtain just the first <xref:System.Linq.IGrouping%602> object.</span></span>  
  
 <span data-ttu-id="dbbd4-115">O exemplo, em seguida, gera a chave do <xref:System.Linq.IGrouping%602> objeto e o <xref:System.Reflection.MemberInfo.Name%2A> propriedade de cada valor no <xref:System.Linq.IGrouping%602> sequência do objeto de valores.</span><span class="sxs-lookup"><span data-stu-id="dbbd4-115">The example then outputs the key of the <xref:System.Linq.IGrouping%602> object and the <xref:System.Reflection.MemberInfo.Name%2A> property of each value in the <xref:System.Linq.IGrouping%602> object's sequence of values.</span></span> <span data-ttu-id="dbbd4-116">Observe que para acessar um <xref:System.Linq.IGrouping%602> sequência do objeto de valores, basta usar o <xref:System.Linq.IGrouping%602> variável em si.</span><span class="sxs-lookup"><span data-stu-id="dbbd4-116">Notice that to access an <xref:System.Linq.IGrouping%602> object's sequence of values, you simply use the <xref:System.Linq.IGrouping%602> variable itself.</span></span>  
  
 [!code-csharp[System.Linq.IGrouping#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.IGrouping/CS/igrouping.cs#1)]
 [!code-vb[System.Linq.IGrouping#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.IGrouping/VB/IGrouping.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public TKey Key { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TKey Key" />
      <MemberSignature Language="DocId" Value="P:System.Linq.IGrouping`2.Key" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Key As TKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dbbd4-117">Obtém a chave do <see cref="T:System.Linq.IGrouping`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dbbd4-117">Gets the key of the <see cref="T:System.Linq.IGrouping`2" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dbbd4-118">A chave do <see cref="T:System.Linq.IGrouping`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dbbd4-118">The key of the <see cref="T:System.Linq.IGrouping`2" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dbbd4-119">A chave de um <xref:System.Linq.IGrouping%602> representa o atributo que é comum a cada valor de <xref:System.Linq.IGrouping%602>.</span><span class="sxs-lookup"><span data-stu-id="dbbd4-119">The key of an <xref:System.Linq.IGrouping%602> represents the attribute that is common to each value in the <xref:System.Linq.IGrouping%602>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dbbd4-120">O exemplo a seguir demonstra como usar o <xref:System.Linq.IGrouping%602.Key%2A> propriedade para rotular cada <xref:System.Linq.IGrouping%602> objeto em uma sequência de <xref:System.Linq.IGrouping%602> objetos.</span><span class="sxs-lookup"><span data-stu-id="dbbd4-120">The following example demonstrates how to use the <xref:System.Linq.IGrouping%602.Key%2A> property to label each <xref:System.Linq.IGrouping%602> object in a sequence of <xref:System.Linq.IGrouping%602> objects.</span></span> <span data-ttu-id="dbbd4-121">O <xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29> método é usado para obter uma sequência de <xref:System.Linq.IGrouping%602> objetos.</span><span class="sxs-lookup"><span data-stu-id="dbbd4-121">The <xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29> method is used to obtain a sequence of <xref:System.Linq.IGrouping%602> objects.</span></span> <span data-ttu-id="dbbd4-122">O `foreach` no Visual c# ou `For Each` no Visual Basic loop itera cada <xref:System.Linq.IGrouping%602> objeto, gerando a saída de sua chave e o número de valores que ele contém.</span><span class="sxs-lookup"><span data-stu-id="dbbd4-122">The `foreach` in Visual C# or `For Each` in Visual Basic loop then iterates through each <xref:System.Linq.IGrouping%602> object, outputting its key and the number of values it contains.</span></span>  
  
 [!code-csharp[System.Linq.IGrouping#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.IGrouping/CS/igrouping.cs#2)]
 [!code-vb[System.Linq.IGrouping#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.IGrouping/VB/IGrouping.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>