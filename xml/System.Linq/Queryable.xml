<Type Name="Queryable" FullName="System.Linq.Queryable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1bb2307a141be9ca02bfaca70ddddc72ff65f9ab" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52214593" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Queryable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Queryable extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Linq.Queryable" />
  <TypeSignature Language="VB.NET" Value="Public Module Queryable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Queryable abstract sealed" />
  <TypeSignature Language="F#" Value="type Queryable = class" />
  <AssemblyInfo>
    <AssemblyName>System.Linq.Queryable</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="727ab-101">Fornece um conjunto de métodos <see langword="static" /> (<see langword="Shared" /> no Visual Basic) para consultar estruturas de dados que implementam <see cref="T:System.Linq.IQueryable`1" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="727ab-101">Provides a set of <see langword="static" /> (<see langword="Shared" /> in Visual Basic) methods for querying data structures that implement <see cref="T:System.Linq.IQueryable`1" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-102">O conjunto de métodos declarados na <xref:System.Linq.Queryable> classe fornece uma implementação de operadores de consulta padrão para consultar dados de fontes que implementam <xref:System.Linq.IQueryable%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-102">The set of methods declared in the <xref:System.Linq.Queryable> class provides an implementation of the standard query operators for querying data sources that implement <xref:System.Linq.IQueryable%601>.</span></span> <span data-ttu-id="727ab-103">Operadores de consulta padrão são os métodos de finalidade geral que seguem o [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] padrão e lhe permitem expressar operações de passagem, filtro e projeção sobre dados em qualquer um. Linguagem de programação baseado em NET.</span><span class="sxs-lookup"><span data-stu-id="727ab-103">The standard query operators are general purpose methods that follow the [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] pattern and enable you to express traversal, filter, and projection operations over data in any .NET-based programming language.</span></span>  
  
 <span data-ttu-id="727ab-104">A maioria dos métodos nessa classe são definidos como métodos de extensão que estendem o <xref:System.Linq.IQueryable%601> tipo.</span><span class="sxs-lookup"><span data-stu-id="727ab-104">The majority of the methods in this class are defined as extension methods that extend the <xref:System.Linq.IQueryable%601> type.</span></span> <span data-ttu-id="727ab-105">Isso significa que eles podem ser chamados como um método de instância em qualquer objeto que implementa <xref:System.Linq.IQueryable%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-105">This means they can be called like an instance method on any object that implements <xref:System.Linq.IQueryable%601>.</span></span> <span data-ttu-id="727ab-106">Esses métodos que estendem <xref:System.Linq.IQueryable%601> não executam qualquer consulta direta.</span><span class="sxs-lookup"><span data-stu-id="727ab-106">These methods that extend <xref:System.Linq.IQueryable%601> do not perform any querying directly.</span></span> <span data-ttu-id="727ab-107">Em vez disso, sua funcionalidade é criar um <xref:System.Linq.Expressions.Expression> objeto, que é uma árvore de expressão que representa a consulta cumulativa.</span><span class="sxs-lookup"><span data-stu-id="727ab-107">Instead, their functionality is to build an <xref:System.Linq.Expressions.Expression> object, which is an expression tree that represents the cumulative query.</span></span> <span data-ttu-id="727ab-108">Os métodos, em seguida, passam a nova árvore de expressão para qualquer um de <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método ou o <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método de entrada <xref:System.Linq.IQueryable%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-108">The methods then pass the new expression tree to either the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method or the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the input <xref:System.Linq.IQueryable%601>.</span></span> <span data-ttu-id="727ab-109">O método que é chamado depende se o <xref:System.Linq.Queryable> método retorna um valor de singleton, caso em que <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> é chamado ou tem resultados enumeráveis, caso em que <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> é chamado.</span><span class="sxs-lookup"><span data-stu-id="727ab-109">The method that is called depends on whether the <xref:System.Linq.Queryable> method returns a singleton value, in which case <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> is called, or has enumerable results, in which case <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> is called.</span></span>  
  
 <span data-ttu-id="727ab-110">A execução de consulta real nos dados de destino é realizada por uma classe que implementa <xref:System.Linq.IQueryable%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-110">The actual query execution on the target data is performed by a class that implements <xref:System.Linq.IQueryable%601>.</span></span> <span data-ttu-id="727ab-111">A expectativa de qualquer <xref:System.Linq.IQueryable%601> implementação é que o resultado da execução de uma árvore de expressão que foi criada por um <xref:System.Linq.Queryable> método de operador de consulta padrão é equivalente ao resultado de chamar o método correspondente no <xref:System.Linq.Enumerable> classe, se a fonte de dados fosse uma <xref:System.Collections.Generic.IEnumerable%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-111">The expectation of any <xref:System.Linq.IQueryable%601> implementation is that the result of executing an expression tree that was constructed by a <xref:System.Linq.Queryable> standard query operator method is equivalent to the result of calling the corresponding method in the <xref:System.Linq.Enumerable> class, if the data source were an <xref:System.Collections.Generic.IEnumerable%601>.</span></span>  
  
 <span data-ttu-id="727ab-112">Além dos métodos de operador de consulta padrão que operam em <xref:System.Linq.IQueryable%601> objetos, essa classe também contém um método <xref:System.Linq.Queryable.AsQueryable%2A>, que tipos <xref:System.Collections.IEnumerable> objetos como <xref:System.Linq.IQueryable> objetos.</span><span class="sxs-lookup"><span data-stu-id="727ab-112">In addition to the standard query operator methods that operate on <xref:System.Linq.IQueryable%601> objects, this class also contains a method, <xref:System.Linq.Queryable.AsQueryable%2A>, which types <xref:System.Collections.IEnumerable> objects as <xref:System.Linq.IQueryable> objects.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/a73c4aec-5d15-4e98-b962-1274021ea93d">
      <span data-ttu-id="727ab-113">LINQ (Consulta Integrada à Linguagem)</span>
      <span class="sxs-lookup">
        <span data-stu-id="727ab-113">Language-Integrated Query (LINQ)</span>
      </span>
    </related>
    <related type="Article" href="https://msdn.microsoft.com/library/24cda21e-8af8-4632-b519-c404a839b9b2">
      <span data-ttu-id="727ab-114">Visão geral de operadores de consulta padrão</span>
      <span class="sxs-lookup">
        <span data-stu-id="727ab-114">Standard Query Operators Overview</span>
      </span>
    </related>
    <related type="Article" href="https://msdn.microsoft.com/library/fb1d3ed8-d5b0-4211-a71f-dd271529294b">
      <span data-ttu-id="727ab-115">Árvores de expressão</span>
      <span class="sxs-lookup">
        <span data-stu-id="727ab-115">Expression Trees</span>
      </span>
    </related>
    <related type="Article" href="https://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655">
      <span data-ttu-id="727ab-116">LINQ to SQL</span>
      <span class="sxs-lookup">
        <span data-stu-id="727ab-116">LINQ to SQL</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName="Aggregate&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource Aggregate&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TSource,TSource&gt;&gt; func);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource Aggregate&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TSource, !!TSource, !!TSource&gt;&gt; func) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Aggregate``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``0,``0}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate(Of TSource) (source As IQueryable(Of TSource), func As Expression(Of Func(Of TSource, TSource, TSource))) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource Aggregate(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TSource, TSource&gt; ^&gt; ^ func);" />
      <MemberSignature Language="F#" Value="static member Aggregate : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Source, 'Source&gt;&gt; -&gt; 'Source" Usage="System.Linq.Queryable.Aggregate (source, func)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="func" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TSource,TSource&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-117">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-117">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-118">Uma sequência a ser agregada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-118">A sequence to aggregate over.</span>
          </span>
        </param>
        <param name="func">
          <span data-ttu-id="727ab-119">Uma função do acumulador a ser aplicada a cada elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-119">An accumulator function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-120">Aplica uma função de acumulador a uma sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-120">Applies an accumulator function over a sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-121">O valor final do acumulador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-121">The final accumulator value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-122">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-122">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-123">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-123">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-124">O <xref:System.Linq.Queryable.Aggregate%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%600%2C%60%600%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Aggregate%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%600%2C%60%600%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-124">The <xref:System.Linq.Queryable.Aggregate%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%600%2C%60%600%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Aggregate%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%600%2C%60%600%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-125">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-125">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-126">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Aggregate%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%600%2C%60%600%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-126">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Aggregate%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%600%2C%60%600%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-127">O comportamento esperado é que a função especificada, `func`, é aplicada a cada valor na sequência de origem e o acumulado valor é retornado.</span><span class="sxs-lookup"><span data-stu-id="727ab-127">The expected behavior is that the specified function, `func`, is applied to each value in the source sequence and the accumulated value is returned.</span></span> <span data-ttu-id="727ab-128">O primeiro valor em `source` é usado como o valor de semente para o valor acumulado, que corresponde ao primeiro parâmetro no `func`.</span><span class="sxs-lookup"><span data-stu-id="727ab-128">The first value in `source` is used as the seed value for the accumulated value, which corresponds to the first parameter in `func`.</span></span>  
  
 <span data-ttu-id="727ab-129">Para simplificar operações comuns de agregação, o conjunto de operadores de consulta padrão também inclui dois métodos de contagem <xref:System.Linq.Queryable.Count%2A> e <xref:System.Linq.Queryable.LongCount%2A>e quatro métodos de agregação numéricas, ou seja, <xref:System.Linq.Queryable.Max%2A>, <xref:System.Linq.Queryable.Min%2A>, <xref:System.Linq.Queryable.Sum%2A>e <xref:System.Linq.Queryable.Average%2A>.</span><span class="sxs-lookup"><span data-stu-id="727ab-129">To simplify common aggregation operations, the set of standard query operators also includes two counting methods, <xref:System.Linq.Queryable.Count%2A> and <xref:System.Linq.Queryable.LongCount%2A>, and four numeric aggregation methods, namely <xref:System.Linq.Queryable.Max%2A>, <xref:System.Linq.Queryable.Min%2A>, <xref:System.Linq.Queryable.Sum%2A>, and <xref:System.Linq.Queryable.Average%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-130">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Aggregate%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%600%2C%60%600%7D%7D%29> para criar uma frase de uma matriz de cadeias de caracteres.</span><span class="sxs-lookup"><span data-stu-id="727ab-130">The following code example demonstrates how to use <xref:System.Linq.Queryable.Aggregate%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%600%2C%60%600%7D%7D%29> to build a sentence from an array of strings.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#1)]
 [!code-vb[System.Linq.Queryable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-131">
            <paramref name="source" /> ou <paramref name="func" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-131">
              <paramref name="source" /> or <paramref name="func" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="727ab-132">
            <paramref name="source" /> não contém elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-132">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Aggregate&lt;TSource,TAccumulate&gt;">
      <MemberSignature Language="C#" Value="public static TAccumulate Aggregate&lt;TSource,TAccumulate&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, TAccumulate seed, System.Linq.Expressions.Expression&lt;Func&lt;TAccumulate,TSource,TAccumulate&gt;&gt; func);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TAccumulate Aggregate&lt;TSource, TAccumulate&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, !!TAccumulate seed, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TAccumulate, !!TSource, !!TAccumulate&gt;&gt; func) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Aggregate``2(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate(Of TSource, TAccumulate) (source As IQueryable(Of TSource), seed As TAccumulate, func As Expression(Of Func(Of TAccumulate, TSource, TAccumulate))) As TAccumulate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TAccumulate&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TAccumulate Aggregate(System::Linq::IQueryable&lt;TSource&gt; ^ source, TAccumulate seed, System::Linq::Expressions::Expression&lt;Func&lt;TAccumulate, TSource, TAccumulate&gt; ^&gt; ^ func);" />
      <MemberSignature Language="F#" Value="static member Aggregate : System.Linq.IQueryable&lt;'Source&gt; * 'Accumulate * System.Linq.Expressions.Expression&lt;Func&lt;'Accumulate, 'Source, 'Accumulate&gt;&gt; -&gt; 'Accumulate" Usage="System.Linq.Queryable.Aggregate (source, seed, func)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TAccumulate</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TAccumulate" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="seed" Type="TAccumulate" />
        <Parameter Name="func" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TAccumulate,TSource,TAccumulate&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-133">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-133">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TAccumulate">
          <span data-ttu-id="727ab-134">O tipo do valor do acumulador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-134">The type of the accumulator value.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-135">Uma sequência a ser agregada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-135">A sequence to aggregate over.</span>
          </span>
        </param>
        <param name="seed">
          <span data-ttu-id="727ab-136">O valor inicial do acumulador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-136">The initial accumulator value.</span>
          </span>
        </param>
        <param name="func">
          <span data-ttu-id="727ab-137">Uma função de acumulador a ser invocada em cada elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-137">An accumulator function to invoke on each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-138">Aplica uma função de acumulador a uma sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-138">Applies an accumulator function over a sequence.</span>
          </span>
          <span data-ttu-id="727ab-139">O valor de semente especificado é usado como o valor inicial do acumulador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-139">The specified seed value is used as the initial accumulator value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-140">O valor final do acumulador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-140">The final accumulator value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-141">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-141">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-142">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-142">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-143">O <xref:System.Linq.Queryable.Aggregate%60%602%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Aggregate%60%602%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-143">The <xref:System.Linq.Queryable.Aggregate%60%602%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Aggregate%60%602%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-144">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-144">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-145">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Aggregate%60%602%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-145">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Aggregate%60%602%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-146">O comportamento esperado é que a função especificada, `func`, é aplicada a cada valor na sequência de origem e o acumulado valor é retornado.</span><span class="sxs-lookup"><span data-stu-id="727ab-146">The expected behavior is that the specified function, `func`, is applied to each value in the source sequence and the accumulated value is returned.</span></span> <span data-ttu-id="727ab-147">O `seed` parâmetro é usado como o valor de semente para o valor acumulado, que corresponde ao primeiro parâmetro no `func`.</span><span class="sxs-lookup"><span data-stu-id="727ab-147">The `seed` parameter is used as the seed value for the accumulated value, which corresponds to the first parameter in `func`.</span></span>  
  
 <span data-ttu-id="727ab-148">Para simplificar operações comuns de agregação, o conjunto de operadores de consulta padrão também inclui dois métodos de contagem <xref:System.Linq.Queryable.Count%2A> e <xref:System.Linq.Queryable.LongCount%2A>e quatro métodos de agregação numéricas, ou seja, <xref:System.Linq.Queryable.Max%2A>, <xref:System.Linq.Queryable.Min%2A>, <xref:System.Linq.Queryable.Sum%2A>e <xref:System.Linq.Queryable.Average%2A>.</span><span class="sxs-lookup"><span data-stu-id="727ab-148">To simplify common aggregation operations, the set of standard query operators also includes two counting methods, <xref:System.Linq.Queryable.Count%2A> and <xref:System.Linq.Queryable.LongCount%2A>, and four numeric aggregation methods, namely <xref:System.Linq.Queryable.Max%2A>, <xref:System.Linq.Queryable.Min%2A>, <xref:System.Linq.Queryable.Sum%2A>, and <xref:System.Linq.Queryable.Average%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-149">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Aggregate%60%602%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%29> para aplicar uma função de acumulador quando um valor de semente é fornecido para a função.</span><span class="sxs-lookup"><span data-stu-id="727ab-149">The following code example demonstrates how to use <xref:System.Linq.Queryable.Aggregate%60%602%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%29> to apply an accumulator function when a seed value is provided to the function.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#2)]
 [!code-vb[System.Linq.Queryable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-150">
            <paramref name="source" /> ou <paramref name="func" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-150">
              <paramref name="source" /> or <paramref name="func" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Aggregate&lt;TSource,TAccumulate,TResult&gt;">
      <MemberSignature Language="C#" Value="public static TResult Aggregate&lt;TSource,TAccumulate,TResult&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, TAccumulate seed, System.Linq.Expressions.Expression&lt;Func&lt;TAccumulate,TSource,TAccumulate&gt;&gt; func, System.Linq.Expressions.Expression&lt;Func&lt;TAccumulate,TResult&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TResult Aggregate&lt;TSource, TAccumulate, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, !!TAccumulate seed, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TAccumulate, !!TSource, !!TAccumulate&gt;&gt; func, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TAccumulate, !!TResult&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Aggregate``3(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate(Of TSource, TAccumulate, TResult) (source As IQueryable(Of TSource), seed As TAccumulate, func As Expression(Of Func(Of TAccumulate, TSource, TAccumulate)), selector As Expression(Of Func(Of TAccumulate, TResult))) As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TAccumulate, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TResult Aggregate(System::Linq::IQueryable&lt;TSource&gt; ^ source, TAccumulate seed, System::Linq::Expressions::Expression&lt;Func&lt;TAccumulate, TSource, TAccumulate&gt; ^&gt; ^ func, System::Linq::Expressions::Expression&lt;Func&lt;TAccumulate, TResult&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Aggregate : System.Linq.IQueryable&lt;'Source&gt; * 'Accumulate * System.Linq.Expressions.Expression&lt;Func&lt;'Accumulate, 'Source, 'Accumulate&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Accumulate, 'Result&gt;&gt; -&gt; 'Result" Usage="System.Linq.Queryable.Aggregate (source, seed, func, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TAccumulate" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="seed" Type="TAccumulate" />
        <Parameter Name="func" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TAccumulate,TSource,TAccumulate&gt;&gt;" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TAccumulate,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-151">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-151">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TAccumulate">
          <span data-ttu-id="727ab-152">O tipo do valor do acumulador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-152">The type of the accumulator value.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="727ab-153">O tipo do valor resultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-153">The type of the resulting value.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-154">Uma sequência a ser agregada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-154">A sequence to aggregate over.</span>
          </span>
        </param>
        <param name="seed">
          <span data-ttu-id="727ab-155">O valor inicial do acumulador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-155">The initial accumulator value.</span>
          </span>
        </param>
        <param name="func">
          <span data-ttu-id="727ab-156">Uma função de acumulador a ser invocada em cada elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-156">An accumulator function to invoke on each element.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="727ab-157">Uma função para transformar o valor final do acumulador no valor de resultado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-157">A function to transform the final accumulator value into the result value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-158">Aplica uma função de acumulador a uma sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-158">Applies an accumulator function over a sequence.</span>
          </span>
          <span data-ttu-id="727ab-159">O valor de semente especificado é usado como o valor inicial do acumulador e a função especificada é usada para selecionar o valor do resultado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-159">The specified seed value is used as the initial accumulator value, and the specified function is used to select the result value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-160">O valor final do acumulador transformado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-160">The transformed final accumulator value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-161">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-161">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-162">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-162">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-163">O <xref:System.Linq.Queryable.Aggregate%60%603%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Aggregate%60%603%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-163">The <xref:System.Linq.Queryable.Aggregate%60%603%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Aggregate%60%603%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-164">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-164">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-165">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Aggregate%60%603%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-165">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Aggregate%60%603%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-166">O comportamento esperado é que a função especificada, `func`, é aplicada a cada valor na sequência de origem e o acumulado valor é retornado.</span><span class="sxs-lookup"><span data-stu-id="727ab-166">The expected behavior is that the specified function, `func`, is applied to each value in the source sequence and the accumulated value is returned.</span></span> <span data-ttu-id="727ab-167">O `seed` parâmetro é usado como o valor de semente para o valor acumulado, que corresponde ao primeiro parâmetro no `func`.</span><span class="sxs-lookup"><span data-stu-id="727ab-167">The `seed` parameter is used as the seed value for the accumulated value, which corresponds to the first parameter in `func`.</span></span> <span data-ttu-id="727ab-168">O valor acumulado final é passado para `selector` para obter o valor do resultado.</span><span class="sxs-lookup"><span data-stu-id="727ab-168">The final accumulated value is passed to `selector` to obtain the result value.</span></span>  
  
 <span data-ttu-id="727ab-169">Para simplificar operações comuns de agregação, o conjunto de operadores de consulta padrão também inclui dois métodos de contagem <xref:System.Linq.Queryable.Count%2A> e <xref:System.Linq.Queryable.LongCount%2A>e quatro métodos de agregação numéricas, ou seja, <xref:System.Linq.Queryable.Max%2A>, <xref:System.Linq.Queryable.Min%2A>, <xref:System.Linq.Queryable.Sum%2A>e <xref:System.Linq.Queryable.Average%2A>.</span><span class="sxs-lookup"><span data-stu-id="727ab-169">To simplify common aggregation operations, the set of standard query operators also includes two counting methods, <xref:System.Linq.Queryable.Count%2A> and <xref:System.Linq.Queryable.LongCount%2A>, and four numeric aggregation methods, namely <xref:System.Linq.Queryable.Max%2A>, <xref:System.Linq.Queryable.Min%2A>, <xref:System.Linq.Queryable.Sum%2A>, and <xref:System.Linq.Queryable.Average%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-170">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Aggregate%60%603%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%29> para aplicar uma função de acumulador e um seletor de resultado.</span><span class="sxs-lookup"><span data-stu-id="727ab-170">The following code example demonstrates how to use <xref:System.Linq.Queryable.Aggregate%60%603%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%29> to apply an accumulator function and a result selector.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#3)]
 [!code-vb[System.Linq.Queryable#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-171">
            <paramref name="source" />, <paramref name="func" /> ou <paramref name="selector" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-171">
              <paramref name="source" /> or <paramref name="func" /> or <paramref name="selector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="All&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static bool All&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool All&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.All``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function All(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean))) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool All(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, bool&gt; ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member All : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, bool&gt;&gt; -&gt; bool" Usage="System.Linq.Queryable.All (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-172">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-172">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-173">A sequência cujos elementos testar quanto a uma condição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-173">A sequence whose elements to test for a condition.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="727ab-174">Uma função para testar cada elemento em relação a uma condição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-174">A function to test each element for a condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-175">Determina se todos os elementos de uma sequência atendem a uma condição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-175">Determines whether all the elements of a sequence satisfy a condition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-176">
            <see langword="true" /> se todos os elementos da sequência de origem passarem no teste no predicado especificado ou se a sequência for vazia; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-176">
              <see langword="true" /> if every element of the source sequence passes the test in the specified predicate, or if the sequence is empty; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-177">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-177">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-178">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-178">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-179">O <xref:System.Linq.Queryable.All%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.All%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-179">The <xref:System.Linq.Queryable.All%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.All%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-180">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-180">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-181">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.All%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depende da implementação do `source` tipo do parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-181">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.All%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depends on the implementation of the `source` parameter's type.</span></span> <span data-ttu-id="727ab-182">O comportamento esperado é que ele determina se todos os elementos na `source` atendem à condição em `predicate`.</span><span class="sxs-lookup"><span data-stu-id="727ab-182">The expected behavior is that it determines if all the elements in `source` satisfy the condition in `predicate`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-183">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.All%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> para determinar se todos os elementos em uma sequência satisfazem uma condição.</span><span class="sxs-lookup"><span data-stu-id="727ab-183">The following code example demonstrates how to use <xref:System.Linq.Queryable.All%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> to determine whether all the elements in a sequence satisfy a condition.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#4)]
 [!code-vb[System.Linq.Queryable#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#4)]  
  
 <span data-ttu-id="727ab-184">O valor booleano que o <xref:System.Linq.Queryable.All%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> método retorna, normalmente é usada no predicado de um `where` cláusula (`Where` cláusula no Visual Basic) ou uma chamada direta para o <xref:System.Linq.Queryable.Where%2A> método.</span><span class="sxs-lookup"><span data-stu-id="727ab-184">The Boolean value that the <xref:System.Linq.Queryable.All%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method returns is typically used in the predicate of a `where` clause (`Where` clause in Visual Basic) or a direct call to the <xref:System.Linq.Queryable.Where%2A> method.</span></span> <span data-ttu-id="727ab-185">O exemplo a seguir demonstra o uso do `All` método.</span><span class="sxs-lookup"><span data-stu-id="727ab-185">The following example demonstrates this use of the `All` method.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#134](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#134)]
 [!code-vb[System.Linq.Queryable#134](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#134)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-186">
            <paramref name="source" /> ou <paramref name="predicate" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-186">
              <paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Any&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="727ab-187">Determina se qualquer elemento de uma sequência <see cref="T:System.Linq.IQueryable`1" /> existe ou atende a uma condição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-187">Determines whether any element of an <see cref="T:System.Linq.IQueryable`1" /> sequence exists or satisfies a condition.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Any&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static bool Any&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Any&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any(Of TSource) (source As IQueryable(Of TSource)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Any(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Any : System.Linq.IQueryable&lt;'Source&gt; -&gt; bool" Usage="System.Linq.Queryable.Any source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-188">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-188">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-189">Uma sequência para verificar se está vazia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-189">A sequence to check for being empty.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-190">Determina se uma sequência contém elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-190">Determines whether a sequence contains any elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-191">
            <see langword="true" /> se a sequência de origem contiver elementos; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-191">
              <see langword="true" /> if the source sequence contains any elements; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-192">O <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-192">The <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-193">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-193">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-194">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-194">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-195">O comportamento esperado é que ele determina se `source` contiver elementos.</span><span class="sxs-lookup"><span data-stu-id="727ab-195">The expected behavior is that it determines if `source` contains any elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-196">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> para determinar se uma sequência contém elementos.</span><span class="sxs-lookup"><span data-stu-id="727ab-196">The following code example demonstrates how to use <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to determine whether a sequence contains any elements.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#5)]
 [!code-vb[System.Linq.Queryable#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#5)]  
  
 <span data-ttu-id="727ab-197">O valor booleano que o <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> método retorna, normalmente é usada no predicado de um `where` cláusula (`Where` cláusula no Visual Basic) ou uma chamada direta para o <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> método.</span><span class="sxs-lookup"><span data-stu-id="727ab-197">The Boolean value that the <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method returns is typically used in the predicate of a `where` clause (`Where` clause in Visual Basic) or a direct call to the <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method.</span></span> <span data-ttu-id="727ab-198">O exemplo a seguir demonstra o uso do `Any` método.</span><span class="sxs-lookup"><span data-stu-id="727ab-198">The following example demonstrates this use of the `Any` method.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#135](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#135)]
 [!code-vb[System.Linq.Queryable#135](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#135)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-199">
            <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-199">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Any&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static bool Any&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Any&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean))) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Any(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, bool&gt; ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Any : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, bool&gt;&gt; -&gt; bool" Usage="System.Linq.Queryable.Any (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-200">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-200">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-201">A sequência cujos elementos testar quanto a uma condição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-201">A sequence whose elements to test for a condition.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="727ab-202">Uma função para testar cada elemento em relação a uma condição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-202">A function to test each element for a condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-203">Determina se algum elemento de uma sequência atende a uma condição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-203">Determines whether any element of a sequence satisfies a condition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-204">
            <see langword="true" /> se algum elemento na sequência de origem for aprovado no teste do predicado especificado; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-204">
              <see langword="true" /> if any elements in the source sequence pass the test in the specified predicate; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-205">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-205">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-206">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-206">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-207">O <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-207">The <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-208">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-208">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-209">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-209">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-210">O comportamento esperado é que ele determina se qualquer um dos elementos da `source` satisfazem a condição especificada pelo `predicate`.</span><span class="sxs-lookup"><span data-stu-id="727ab-210">The expected behavior is that it determines if any of the elements of `source` satisfy the condition specified by `predicate`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-211">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> para determinar se qualquer elemento em uma sequência satisfazem uma condição.</span><span class="sxs-lookup"><span data-stu-id="727ab-211">The following code example demonstrates how to use <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> to determine whether any element in a sequence satisfies a condition.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#6)]
 [!code-vb[System.Linq.Queryable#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-212">
            <paramref name="source" /> ou <paramref name="predicate" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-212">
              <paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Append&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Append&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, TSource element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Append&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, !!TSource element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Append``1(System.Linq.IQueryable{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Append(Of TSource) (source As IQueryable(Of TSource), element As TSource) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Append(System::Linq::IQueryable&lt;TSource&gt; ^ source, TSource element);" />
      <MemberSignature Language="F#" Value="static member Append : System.Linq.IQueryable&lt;'Source&gt; * 'Source -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.Append (source, element)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="element" Type="TSource" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">To be added.</typeparam>
        <param name="source">To be added.</param>
        <param name="element">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsQueryable">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable AsQueryable (this System.Collections.IEnumerable source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable AsQueryable(class System.Collections.IEnumerable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsQueryable (source As IEnumerable) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable ^ AsQueryable(System::Collections::IEnumerable ^ source);" />
      <MemberSignature Language="F#" Value="static member AsQueryable : System.Collections.IEnumerable -&gt; System.Linq.IQueryable" Usage="System.Linq.Queryable.AsQueryable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.IEnumerable" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="727ab-213">Uma sequência a ser convertida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-213">A sequence to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-214">Converte um <see cref="T:System.Collections.IEnumerable" /> em um <see cref="T:System.Linq.IQueryable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-214">Converts an <see cref="T:System.Collections.IEnumerable" /> to an <see cref="T:System.Linq.IQueryable" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-215">Um <see cref="T:System.Linq.IQueryable" /> que representa a sequência de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-215">An <see cref="T:System.Linq.IQueryable" /> that represents the input sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-216">Se o tipo de `source` implementa <xref:System.Linq.IQueryable%601>, <xref:System.Linq.Queryable.AsQueryable%28System.Collections.IEnumerable%29> retorna-a diretamente.</span><span class="sxs-lookup"><span data-stu-id="727ab-216">If the type of `source` implements <xref:System.Linq.IQueryable%601>, <xref:System.Linq.Queryable.AsQueryable%28System.Collections.IEnumerable%29> returns it directly.</span></span> <span data-ttu-id="727ab-217">Caso contrário, retornará um <xref:System.Linq.IQueryable%601> que executa consultas chamando métodos de operador de consulta equivalente <xref:System.Linq.Enumerable> em vez no <xref:System.Linq.Queryable>.</span><span class="sxs-lookup"><span data-stu-id="727ab-217">Otherwise, it returns an <xref:System.Linq.IQueryable%601> that executes queries by calling the equivalent query operator methods in <xref:System.Linq.Enumerable> instead of those in <xref:System.Linq.Queryable>.</span></span>  
  
 <span data-ttu-id="727ab-218">Este método presume que `source` implementa <xref:System.Collections.Generic.IEnumerable%601> para alguns `T`.</span><span class="sxs-lookup"><span data-stu-id="727ab-218">This method assumes that `source` implements <xref:System.Collections.Generic.IEnumerable%601> for some `T`.</span></span> <span data-ttu-id="727ab-219">Em tempo de execução, o resultado é do tipo <xref:System.Linq.IQueryable%601> para o mesmo `T`.</span><span class="sxs-lookup"><span data-stu-id="727ab-219">At runtime, the result is of type <xref:System.Linq.IQueryable%601> for the same `T`.</span></span> <span data-ttu-id="727ab-220">Esse método é útil em cenários dinâmicos quando você não souber o tipo de estaticamente `T`.</span><span class="sxs-lookup"><span data-stu-id="727ab-220">This method is useful in dynamic scenarios when you do not statically know the type of `T`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="727ab-221">
            <paramref name="source" /> não implementa <see cref="T:System.Collections.Generic.IEnumerable`1" /> para alguns <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-221">
              <paramref name="source" /> does not implement <see cref="T:System.Collections.Generic.IEnumerable`1" /> for some <paramref name="T" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-222">
            <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-222">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AsQueryable&lt;TElement&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TElement&gt; AsQueryable&lt;TElement&gt; (this System.Collections.Generic.IEnumerable&lt;TElement&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TElement&gt; AsQueryable&lt;TElement&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TElement&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsQueryable(Of TElement) (source As IEnumerable(Of TElement)) As IQueryable(Of TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TElement&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TElement&gt; ^ AsQueryable(System::Collections::Generic::IEnumerable&lt;TElement&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member AsQueryable : seq&lt;'Element&gt; -&gt; System.Linq.IQueryable&lt;'Element&gt;" Usage="System.Linq.Queryable.AsQueryable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TElement&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TElement">
          <span data-ttu-id="727ab-223">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-223">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-224">Uma sequência a ser convertida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-224">A sequence to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-225">Converte um <see cref="T:System.Collections.Generic.IEnumerable`1" /> genérico em um <see cref="T:System.Linq.IQueryable`1" /> genérico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-225">Converts a generic <see cref="T:System.Collections.Generic.IEnumerable`1" /> to a generic <see cref="T:System.Linq.IQueryable`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-226">Um <see cref="T:System.Linq.IQueryable`1" /> que representa a sequência de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-226">An <see cref="T:System.Linq.IQueryable`1" /> that represents the input sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-227">Se o tipo de `source` implementa <xref:System.Linq.IQueryable%601>, <xref:System.Linq.Queryable.AsQueryable%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%29> retorna-a diretamente.</span><span class="sxs-lookup"><span data-stu-id="727ab-227">If the type of `source` implements <xref:System.Linq.IQueryable%601>, <xref:System.Linq.Queryable.AsQueryable%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%29> returns it directly.</span></span> <span data-ttu-id="727ab-228">Caso contrário, retornará um <xref:System.Linq.IQueryable%601> que executa consultas chamando métodos de operador de consulta equivalente <xref:System.Linq.Enumerable> em vez no <xref:System.Linq.Queryable>.</span><span class="sxs-lookup"><span data-stu-id="727ab-228">Otherwise, it returns an <xref:System.Linq.IQueryable%601> that executes queries by calling the equivalent query operator methods in <xref:System.Linq.Enumerable> instead of those in <xref:System.Linq.Queryable>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-229">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.AsQueryable%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%29> para converter um <xref:System.Collections.Generic.IEnumerable%601> para um <xref:System.Linq.IQueryable%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-229">The following code example demonstrates how to use <xref:System.Linq.Queryable.AsQueryable%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%29> to convert an <xref:System.Collections.Generic.IEnumerable%601> to an <xref:System.Linq.IQueryable%601>.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#125](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#125)]
 [!code-vb[System.Linq.Queryable#125](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#125)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-230">
            <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-230">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Average">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="727ab-231">Computa a média de uma sequência de valores numéricos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-231">Computes the average of a sequence of numeric values.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static decimal Average (this System.Linq.IQueryable&lt;decimal&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Average(class System.Linq.IQueryable`1&lt;valuetype System.Decimal&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Decimal})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As IQueryable(Of Decimal)) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Decimal Average(System::Linq::IQueryable&lt;System::Decimal&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;decimal&gt; -&gt; decimal" Usage="System.Linq.Queryable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Decimal&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="727ab-232">Uma sequência de valores <see cref="T:System.Decimal" /> para realizar o cálculo da média.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-232">A sequence of <see cref="T:System.Decimal" /> values to calculate the average of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-233">Computa a média de uma sequência de valores <see cref="T:System.Decimal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-233">Computes the average of a sequence of <see cref="T:System.Decimal" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-234">A média da sequência de valores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-234">The average of the sequence of values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-235">O <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Decimal%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Decimal%7D%29> em si.</span><span class="sxs-lookup"><span data-stu-id="727ab-235">The <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Decimal%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Decimal%7D%29> itself.</span></span> <span data-ttu-id="727ab-236">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-236">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-237">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Decimal%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-237">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Decimal%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-238">O comportamento esperado é que ele calcula a média dos valores em `source`.</span><span class="sxs-lookup"><span data-stu-id="727ab-238">The expected behavior is that it calculates the average of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-239">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> para calcular a média de uma sequência de valores.</span><span class="sxs-lookup"><span data-stu-id="727ab-239">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> to calculate the average of a sequence of values.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#8)]
 [!code-vb[System.Linq.Queryable#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-240">
            <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-240">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="727ab-241">
            <paramref name="source" /> não contém elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-241">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static double Average (this System.Linq.IQueryable&lt;double&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Average(class System.Linq.IQueryable`1&lt;float64&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Double})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As IQueryable(Of Double)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Average(System::Linq::IQueryable&lt;double&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;double&gt; -&gt; double" Usage="System.Linq.Queryable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Double&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="727ab-242">Uma sequência de valores <see cref="T:System.Double" /> para realizar o cálculo da média.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-242">A sequence of <see cref="T:System.Double" /> values to calculate the average of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-243">Computa a média de uma sequência de valores <see cref="T:System.Double" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-243">Computes the average of a sequence of <see cref="T:System.Double" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-244">A média da sequência de valores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-244">The average of the sequence of values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-245">O <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Double%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Double%7D%29> em si.</span><span class="sxs-lookup"><span data-stu-id="727ab-245">The <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Double%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Double%7D%29> itself.</span></span> <span data-ttu-id="727ab-246">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-246">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-247">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Double%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-247">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Double%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-248">O comportamento esperado é que ele calcula a média dos valores em `source`.</span><span class="sxs-lookup"><span data-stu-id="727ab-248">The expected behavior is that it calculates the average of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-249">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> para calcular a média de uma sequência de valores.</span><span class="sxs-lookup"><span data-stu-id="727ab-249">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> to calculate the average of a sequence of values.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#8)]
 [!code-vb[System.Linq.Queryable#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-250">
            <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-250">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="727ab-251">
            <paramref name="source" /> não contém elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-251">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static double Average (this System.Linq.IQueryable&lt;int&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Average(class System.Linq.IQueryable`1&lt;int32&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As IQueryable(Of Integer)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Average(System::Linq::IQueryable&lt;int&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;int&gt; -&gt; double" Usage="System.Linq.Queryable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Int32&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="727ab-252">Uma sequência de valores <see cref="T:System.Int32" /> para realizar o cálculo da média.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-252">A sequence of <see cref="T:System.Int32" /> values to calculate the average of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-253">Computa a média de uma sequência de valores <see cref="T:System.Int32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-253">Computes the average of a sequence of <see cref="T:System.Int32" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-254">A média da sequência de valores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-254">The average of the sequence of values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-255">O <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> em si.</span><span class="sxs-lookup"><span data-stu-id="727ab-255">The <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> itself.</span></span> <span data-ttu-id="727ab-256">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-256">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-257">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-257">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-258">O comportamento esperado é que ele calcula a média dos valores em `source`.</span><span class="sxs-lookup"><span data-stu-id="727ab-258">The expected behavior is that it calculates the average of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-259">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> para calcular a média de uma sequência de valores.</span><span class="sxs-lookup"><span data-stu-id="727ab-259">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> to calculate the average of a sequence of values.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#8)]
 [!code-vb[System.Linq.Queryable#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-260">
            <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-260">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="727ab-261">
            <paramref name="source" /> não contém elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-261">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static double Average (this System.Linq.IQueryable&lt;long&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Average(class System.Linq.IQueryable`1&lt;int64&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As IQueryable(Of Long)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Average(System::Linq::IQueryable&lt;long&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;int64&gt; -&gt; double" Usage="System.Linq.Queryable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Int64&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="727ab-262">Uma sequência de valores <see cref="T:System.Int64" /> para realizar o cálculo da média.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-262">A sequence of <see cref="T:System.Int64" /> values to calculate the average of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-263">Computa a média de uma sequência de valores <see cref="T:System.Int64" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-263">Computes the average of a sequence of <see cref="T:System.Int64" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-264">A média da sequência de valores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-264">The average of the sequence of values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-265">O <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int64%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int64%7D%29> em si.</span><span class="sxs-lookup"><span data-stu-id="727ab-265">The <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int64%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int64%7D%29> itself.</span></span> <span data-ttu-id="727ab-266">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-266">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-267">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int64%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-267">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int64%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-268">O comportamento esperado é que ele calcula a média dos valores em `source`.</span><span class="sxs-lookup"><span data-stu-id="727ab-268">The expected behavior is that it calculates the average of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-269">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> para calcular a média de uma sequência de valores.</span><span class="sxs-lookup"><span data-stu-id="727ab-269">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> to calculate the average of a sequence of values.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#8)]
 [!code-vb[System.Linq.Queryable#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-270">
            <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-270">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="727ab-271">
            <paramref name="source" /> não contém elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-271">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static Nullable&lt;decimal&gt; Average (this System.Linq.IQueryable&lt;Nullable&lt;decimal&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; Average(class System.Linq.IQueryable`1&lt;valuetype System.Nullable`1&lt;valuetype System.Decimal&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Decimal}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As IQueryable(Of Nullable(Of Decimal))) As Nullable(Of Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;System::Decimal&gt; Average(System::Linq::IQueryable&lt;Nullable&lt;System::Decimal&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;Nullable&lt;decimal&gt;&gt; -&gt; Nullable&lt;decimal&gt;" Usage="System.Linq.Queryable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Decimal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Nullable&lt;System.Decimal&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="727ab-272">Uma sequência de valores <see cref="T:System.Decimal" /> que permitem valores nulos para cálculo da média.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-272">A sequence of nullable <see cref="T:System.Decimal" /> values to calculate the average of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-273">Computa a média de uma sequência de valores <see cref="T:System.Decimal" /> que permitem valores nulos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-273">Computes the average of a sequence of nullable <see cref="T:System.Decimal" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-274">A média da sequência de valores ou <see langword="null" />, se a sequência de origem estiver vazia ou contiver somente valores <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-274">The average of the sequence of values, or <see langword="null" /> if the source sequence is empty or contains only <see langword="null" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-275">O <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Decimal%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Decimal%7D%7D%29> em si.</span><span class="sxs-lookup"><span data-stu-id="727ab-275">The <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Decimal%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Decimal%7D%7D%29> itself.</span></span> <span data-ttu-id="727ab-276">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-276">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-277">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Decimal%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-277">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Decimal%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-278">O comportamento esperado é que ele calcula a média dos valores em `source`.</span><span class="sxs-lookup"><span data-stu-id="727ab-278">The expected behavior is that it calculates the average of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-279">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> para calcular a média de uma sequência de valores.</span><span class="sxs-lookup"><span data-stu-id="727ab-279">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> to calculate the average of a sequence of values.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#12)]
 [!code-vb[System.Linq.Queryable#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-280">
            <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-280">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Average (this System.Linq.IQueryable&lt;Nullable&lt;double&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Average(class System.Linq.IQueryable`1&lt;valuetype System.Nullable`1&lt;float64&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Double}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As IQueryable(Of Nullable(Of Double))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Average(System::Linq::IQueryable&lt;Nullable&lt;double&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;Nullable&lt;double&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.Queryable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Nullable&lt;System.Double&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="727ab-281">Uma sequência de valores <see cref="T:System.Double" /> que permitem valores nulos para cálculo da média.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-281">A sequence of nullable <see cref="T:System.Double" /> values to calculate the average of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-282">Computa a média de uma sequência de valores <see cref="T:System.Double" /> que permitem valores nulos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-282">Computes the average of a sequence of nullable <see cref="T:System.Double" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-283">A média da sequência de valores ou <see langword="null" />, se a sequência de origem estiver vazia ou contiver somente valores <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-283">The average of the sequence of values, or <see langword="null" /> if the source sequence is empty or contains only <see langword="null" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-284">O <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Double%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Double%7D%7D%29> em si.</span><span class="sxs-lookup"><span data-stu-id="727ab-284">The <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Double%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Double%7D%7D%29> itself.</span></span> <span data-ttu-id="727ab-285">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-285">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-286">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Double%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-286">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Double%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-287">O comportamento esperado é que ele calcula a média dos valores em `source`.</span><span class="sxs-lookup"><span data-stu-id="727ab-287">The expected behavior is that it calculates the average of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-288">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> para calcular a média de uma sequência de valores.</span><span class="sxs-lookup"><span data-stu-id="727ab-288">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> to calculate the average of a sequence of values.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#12)]
 [!code-vb[System.Linq.Queryable#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-289">
            <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-289">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Average (this System.Linq.IQueryable&lt;Nullable&lt;int&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Average(class System.Linq.IQueryable`1&lt;valuetype System.Nullable`1&lt;int32&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As IQueryable(Of Nullable(Of Integer))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Average(System::Linq::IQueryable&lt;Nullable&lt;int&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;Nullable&lt;int&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.Queryable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Nullable&lt;System.Int32&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="727ab-290">Uma sequência de valores <see cref="T:System.Int32" /> que permitem valores nulos para cálculo da média.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-290">A sequence of nullable <see cref="T:System.Int32" /> values to calculate the average of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-291">Computa a média de uma sequência de valores <see cref="T:System.Int32" /> que permitem valores nulos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-291">Computes the average of a sequence of nullable <see cref="T:System.Int32" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-292">A média da sequência de valores ou <see langword="null" />, se a sequência de origem estiver vazia ou contiver somente valores <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-292">The average of the sequence of values, or <see langword="null" /> if the source sequence is empty or contains only <see langword="null" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-293">O <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int32%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int32%7D%7D%29> em si.</span><span class="sxs-lookup"><span data-stu-id="727ab-293">The <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int32%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int32%7D%7D%29> itself.</span></span> <span data-ttu-id="727ab-294">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-294">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-295">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int32%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-295">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int32%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-296">O comportamento esperado é que ele calcula a média dos valores em `source`.</span><span class="sxs-lookup"><span data-stu-id="727ab-296">The expected behavior is that it calculates the average of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-297">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> para calcular a média de uma sequência de valores.</span><span class="sxs-lookup"><span data-stu-id="727ab-297">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> to calculate the average of a sequence of values.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#12)]
 [!code-vb[System.Linq.Queryable#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-298">
            <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-298">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Average (this System.Linq.IQueryable&lt;Nullable&lt;long&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Average(class System.Linq.IQueryable`1&lt;valuetype System.Nullable`1&lt;int64&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int64}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As IQueryable(Of Nullable(Of Long))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Average(System::Linq::IQueryable&lt;Nullable&lt;long&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;Nullable&lt;int64&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.Queryable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Nullable&lt;System.Int64&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="727ab-299">Uma sequência de valores <see cref="T:System.Int64" /> que permitem valores nulos para cálculo da média.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-299">A sequence of nullable <see cref="T:System.Int64" /> values to calculate the average of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-300">Computa a média de uma sequência de valores <see cref="T:System.Int64" /> que permitem valores nulos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-300">Computes the average of a sequence of nullable <see cref="T:System.Int64" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-301">A média da sequência de valores ou <see langword="null" />, se a sequência de origem estiver vazia ou contiver somente valores <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-301">The average of the sequence of values, or <see langword="null" /> if the source sequence is empty or contains only <see langword="null" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-302">O <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> em si.</span><span class="sxs-lookup"><span data-stu-id="727ab-302">The <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> itself.</span></span> <span data-ttu-id="727ab-303">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-303">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-304">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-304">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-305">O comportamento esperado é que ele calcula a média dos valores em `source`.</span><span class="sxs-lookup"><span data-stu-id="727ab-305">The expected behavior is that it calculates the average of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-306">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> para calcular a média de uma sequência de valores.</span><span class="sxs-lookup"><span data-stu-id="727ab-306">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> to calculate the average of a sequence of values.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#12)]
 [!code-vb[System.Linq.Queryable#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-307">
            <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-307">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static Nullable&lt;float&gt; Average (this System.Linq.IQueryable&lt;Nullable&lt;float&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float32&gt; Average(class System.Linq.IQueryable`1&lt;valuetype System.Nullable`1&lt;float32&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Single}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As IQueryable(Of Nullable(Of Single))) As Nullable(Of Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;float&gt; Average(System::Linq::IQueryable&lt;Nullable&lt;float&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;Nullable&lt;single&gt;&gt; -&gt; Nullable&lt;single&gt;" Usage="System.Linq.Queryable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Nullable&lt;System.Single&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="727ab-308">Uma sequência de valores <see cref="T:System.Single" /> que permitem valores nulos para cálculo da média.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-308">A sequence of nullable <see cref="T:System.Single" /> values to calculate the average of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-309">Computa a média de uma sequência de valores <see cref="T:System.Single" /> que permitem valores nulos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-309">Computes the average of a sequence of nullable <see cref="T:System.Single" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-310">A média da sequência de valores ou <see langword="null" />, se a sequência de origem estiver vazia ou contiver somente valores <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-310">The average of the sequence of values, or <see langword="null" /> if the source sequence is empty or contains only <see langword="null" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-311">O <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> em si.</span><span class="sxs-lookup"><span data-stu-id="727ab-311">The <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> itself.</span></span> <span data-ttu-id="727ab-312">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-312">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-313">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-313">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-314">O comportamento esperado é que ele calcula a média dos valores em `source`.</span><span class="sxs-lookup"><span data-stu-id="727ab-314">The expected behavior is that it calculates the average of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-315">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> para calcular a média de uma sequência de valores.</span><span class="sxs-lookup"><span data-stu-id="727ab-315">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> to calculate the average of a sequence of values.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#12)]
 [!code-vb[System.Linq.Queryable#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-316">
            <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-316">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static float Average (this System.Linq.IQueryable&lt;float&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Average(class System.Linq.IQueryable`1&lt;float32&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Single})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As IQueryable(Of Single)) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static float Average(System::Linq::IQueryable&lt;float&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;single&gt; -&gt; single" Usage="System.Linq.Queryable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Single&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="727ab-317">Uma sequência de valores <see cref="T:System.Single" /> para realizar o cálculo da média.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-317">A sequence of <see cref="T:System.Single" /> values to calculate the average of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-318">Computa a média de uma sequência de valores <see cref="T:System.Single" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-318">Computes the average of a sequence of <see cref="T:System.Single" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-319">A média da sequência de valores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-319">The average of the sequence of values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-320">O <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Single%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Single%7D%29> em si.</span><span class="sxs-lookup"><span data-stu-id="727ab-320">The <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Single%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Single%7D%29> itself.</span></span> <span data-ttu-id="727ab-321">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-321">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-322">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Single%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-322">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Single%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-323">O comportamento esperado é que ele calcula a média dos valores em `source`.</span><span class="sxs-lookup"><span data-stu-id="727ab-323">The expected behavior is that it calculates the average of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-324">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> para calcular a média de uma sequência de valores.</span><span class="sxs-lookup"><span data-stu-id="727ab-324">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> to calculate the average of a sequence of values.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#8)]
 [!code-vb[System.Linq.Queryable#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-325">
            <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-325">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="727ab-326">
            <paramref name="source" /> não contém elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-326">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static decimal Average&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,decimal&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Average&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, valuetype System.Decimal&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Decimal))) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Decimal Average(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, System::Decimal&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, decimal&gt;&gt; -&gt; decimal" Usage="System.Linq.Queryable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Decimal&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-327">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-327">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-328">Uma sequência de valores usados para calcular uma média.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-328">A sequence of values that are used to calculate an average.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="727ab-329">Uma função de projeção a ser aplicada a cada elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-329">A projection function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-330">Calcula a média de uma sequência de valores <see cref="T:System.Decimal" /> obtida invocando uma função de projeção em cada elemento da sequência de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-330">Computes the average of a sequence of <see cref="T:System.Decimal" /> values that is obtained by invoking a projection function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-331">A média da sequência de valores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-331">The average of the sequence of values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-332">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-332">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-333">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-333">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-334">O <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Decimal%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Decimal%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-334">The <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Decimal%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Decimal%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-335">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-335">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-336">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Decimal%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-336">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Decimal%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-337">O comportamento esperado é que ele calcula a média dos valores em `source` depois de invocar `selector` em cada valor.</span><span class="sxs-lookup"><span data-stu-id="727ab-337">The expected behavior is that it calculates the average of the values in `source` after invoking `selector` on each value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-338">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> para calcular a média <xref:System.String> comprimento em uma sequência de valores do tipo <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="727ab-338">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> to calculate the average <xref:System.String> length in a sequence of values of type <xref:System.String>.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#18)]
 [!code-vb[System.Linq.Queryable#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-339">
            <paramref name="source" /> ou <paramref name="selector" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-339">
              <paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="727ab-340">
            <paramref name="source" /> não contém elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-340">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static double Average&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,double&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Average&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, float64&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Double))) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Average(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, double&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, double&gt;&gt; -&gt; double" Usage="System.Linq.Queryable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Double&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-341">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-341">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-342">Uma sequência de valores para cálculo da média.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-342">A sequence of values to calculate the average of.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="727ab-343">Uma função de projeção a ser aplicada a cada elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-343">A projection function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-344">Calcula a média de uma sequência de valores <see cref="T:System.Double" /> obtida invocando uma função de projeção em cada elemento da sequência de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-344">Computes the average of a sequence of <see cref="T:System.Double" /> values that is obtained by invoking a projection function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-345">A média da sequência de valores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-345">The average of the sequence of values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-346">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-346">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-347">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-347">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-348">O <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-348">The <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-349">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-349">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-350">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-350">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-351">O comportamento esperado é que ele calcula a média dos valores em `source` depois de invocar `selector` em cada valor.</span><span class="sxs-lookup"><span data-stu-id="727ab-351">The expected behavior is that it calculates the average of the values in `source` after invoking `selector` on each value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-352">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> para calcular a média <xref:System.String> comprimento em uma sequência de valores do tipo <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="727ab-352">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> to calculate the average <xref:System.String> length in a sequence of values of type <xref:System.String>.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#18)]
 [!code-vb[System.Linq.Queryable#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-353">
            <paramref name="source" /> ou <paramref name="selector" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-353">
              <paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="727ab-354">
            <paramref name="source" /> não contém elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-354">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static double Average&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,int&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Average&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, int32&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Integer))) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Average(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, int&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, int&gt;&gt; -&gt; double" Usage="System.Linq.Queryable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Int32&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-355">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-355">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-356">Uma sequência de valores para cálculo da média.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-356">A sequence of values to calculate the average of.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="727ab-357">Uma função de projeção a ser aplicada a cada elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-357">A projection function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-358">Calcula a média de uma sequência de valores <see cref="T:System.Int32" /> obtida invocando uma função de projeção em cada elemento da sequência de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-358">Computes the average of a sequence of <see cref="T:System.Int32" /> values that is obtained by invoking a projection function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-359">A média da sequência de valores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-359">The average of the sequence of values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-360">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-360">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-361">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-361">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-362">O <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-362">The <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-363">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-363">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-364">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-364">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-365">O comportamento esperado é que ele calcula a média dos valores em `source` depois de invocar `selector` em cada valor.</span><span class="sxs-lookup"><span data-stu-id="727ab-365">The expected behavior is that it calculates the average of the values in `source` after invoking `selector` on each value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-366">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> para calcular a média <xref:System.String> comprimento em uma sequência de valores do tipo <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="727ab-366">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> to calculate the average <xref:System.String> length in a sequence of values of type <xref:System.String>.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#18)]
 [!code-vb[System.Linq.Queryable#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-367">
            <paramref name="source" /> ou <paramref name="selector" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-367">
              <paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="727ab-368">
            <paramref name="source" /> não contém elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-368">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static double Average&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,long&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Average&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, int64&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Long))) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Average(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, long&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, int64&gt;&gt; -&gt; double" Usage="System.Linq.Queryable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Int64&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-369">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-369">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-370">Uma sequência de valores para cálculo da média.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-370">A sequence of values to calculate the average of.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="727ab-371">Uma função de projeção a ser aplicada a cada elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-371">A projection function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-372">Calcula a média de uma sequência de valores <see cref="T:System.Int64" /> obtida invocando uma função de projeção em cada elemento da sequência de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-372">Computes the average of a sequence of <see cref="T:System.Int64" /> values that is obtained by invoking a projection function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-373">A média da sequência de valores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-373">The average of the sequence of values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-374">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-374">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-375">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-375">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-376">O <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int64%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int64%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-376">The <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int64%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int64%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-377">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-377">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-378">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int64%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-378">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int64%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-379">O comportamento esperado é que ele calcula a média dos valores em `source` depois de invocar `selector` em cada valor.</span><span class="sxs-lookup"><span data-stu-id="727ab-379">The expected behavior is that it calculates the average of the values in `source` after invoking `selector` on each value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-380">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> para calcular a média <xref:System.String> comprimento em uma sequência de valores do tipo <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="727ab-380">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> to calculate the average <xref:System.String> length in a sequence of values of type <xref:System.String>.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#18)]
 [!code-vb[System.Linq.Queryable#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-381">
            <paramref name="source" /> ou <paramref name="selector" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-381">
              <paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="727ab-382">
            <paramref name="source" /> não contém elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-382">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;decimal&gt; Average&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,Nullable&lt;decimal&gt;&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; Average&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;valuetype System.Decimal&gt;&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Nullable(Of Decimal)))) As Nullable(Of Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;System::Decimal&gt; Average(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, Nullable&lt;System::Decimal&gt;&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, Nullable&lt;decimal&gt;&gt;&gt; -&gt; Nullable&lt;decimal&gt;" Usage="System.Linq.Queryable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Decimal&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Nullable&lt;System.Decimal&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-383">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-383">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-384">Uma sequência de valores para cálculo da média.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-384">A sequence of values to calculate the average of.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="727ab-385">Uma função de projeção a ser aplicada a cada elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-385">A projection function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-386">Calcula a média de uma sequência de valores <see cref="T:System.Decimal" /> anuláveis obtida invocando uma função de projeção em cada elemento da sequência de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-386">Computes the average of a sequence of nullable <see cref="T:System.Decimal" /> values that is obtained by invoking a projection function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-387">A média da sequência de valores ou <see langword="null" /> se a sequência <paramref name="source" /> estiver vazia ou contiver somente valores <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-387">The average of the sequence of values, or <see langword="null" /> if the <paramref name="source" /> sequence is empty or contains only <see langword="null" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-388">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-388">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-389">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-389">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-390">O <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Decimal%7D%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Decimal%7D%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-390">The <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Decimal%7D%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Decimal%7D%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-391">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-391">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-392">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Decimal%7D%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-392">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Decimal%7D%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-393">O comportamento esperado é que ele calcula a média dos valores em `source` depois de invocar `selector` em cada valor.</span><span class="sxs-lookup"><span data-stu-id="727ab-393">The expected behavior is that it calculates the average of the values in `source` after invoking `selector` on each value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-394">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> para calcular a média <xref:System.String> comprimento em uma sequência de valores do tipo <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="727ab-394">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> to calculate the average <xref:System.String> length in a sequence of values of type <xref:System.String>.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#18)]
 [!code-vb[System.Linq.Queryable#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-395">
            <paramref name="source" /> ou <paramref name="selector" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-395">
              <paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Average&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,Nullable&lt;double&gt;&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Average&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;float64&gt;&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Nullable(Of Double)))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Average(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, Nullable&lt;double&gt;&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, Nullable&lt;double&gt;&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.Queryable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Nullable&lt;System.Double&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-396">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-396">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-397">Uma sequência de valores para cálculo da média.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-397">A sequence of values to calculate the average of.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="727ab-398">Uma função de projeção a ser aplicada a cada elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-398">A projection function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-399">Calcula a média de uma sequência de valores <see cref="T:System.Double" /> anuláveis obtida invocando uma função de projeção em cada elemento da sequência de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-399">Computes the average of a sequence of nullable <see cref="T:System.Double" /> values that is obtained by invoking a projection function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-400">A média da sequência de valores ou <see langword="null" /> se a sequência <paramref name="source" /> estiver vazia ou contiver somente valores <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-400">The average of the sequence of values, or <see langword="null" /> if the <paramref name="source" /> sequence is empty or contains only <see langword="null" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-401">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-401">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-402">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-402">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-403">O <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Double%7D%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Double%7D%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-403">The <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Double%7D%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Double%7D%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-404">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-404">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-405">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Double%7D%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-405">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Double%7D%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-406">O comportamento esperado é que ele calcula a média dos valores em `source` depois de invocar `selector` em cada valor.</span><span class="sxs-lookup"><span data-stu-id="727ab-406">The expected behavior is that it calculates the average of the values in `source` after invoking `selector` on each value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-407">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> para calcular a média <xref:System.String> comprimento em uma sequência de valores do tipo <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="727ab-407">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> to calculate the average <xref:System.String> length in a sequence of values of type <xref:System.String>.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#18)]
 [!code-vb[System.Linq.Queryable#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-408">
            <paramref name="source" /> ou <paramref name="selector" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-408">
              <paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Average&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,Nullable&lt;int&gt;&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Average&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;int32&gt;&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Nullable(Of Integer)))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Average(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, Nullable&lt;int&gt;&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, Nullable&lt;int&gt;&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.Queryable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Nullable&lt;System.Int32&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-409">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-409">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-410">Uma sequência de valores para cálculo da média.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-410">A sequence of values to calculate the average of.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="727ab-411">Uma função de projeção a ser aplicada a cada elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-411">A projection function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-412">Calcula a média de uma sequência de valores <see cref="T:System.Int32" /> anuláveis obtida invocando uma função de projeção em cada elemento da sequência de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-412">Computes the average of a sequence of nullable <see cref="T:System.Int32" /> values that is obtained by invoking a projection function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-413">A média da sequência de valores ou <see langword="null" /> se a sequência <paramref name="source" /> estiver vazia ou contiver somente valores <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-413">The average of the sequence of values, or <see langword="null" /> if the <paramref name="source" /> sequence is empty or contains only <see langword="null" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-414">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-414">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-415">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-415">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-416">O <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int32%7D%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int32%7D%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-416">The <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int32%7D%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int32%7D%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-417">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pelo <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-417">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-418">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int32%7D%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-418">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int32%7D%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-419">O comportamento esperado é que ele calcula a média dos valores em `source` depois de invocar `selector` em cada valor.</span><span class="sxs-lookup"><span data-stu-id="727ab-419">The expected behavior is that it calculates the average of the values in `source` after invoking `selector` on each value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-420">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> para calcular a média <xref:System.String> comprimento em uma sequência de valores do tipo <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="727ab-420">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> to calculate the average <xref:System.String> length in a sequence of values of type <xref:System.String>.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#18)]
 [!code-vb[System.Linq.Queryable#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-421">
            <paramref name="source" /> ou <paramref name="selector" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-421">
              <paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Average&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,Nullable&lt;long&gt;&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Average&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;int64&gt;&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Nullable(Of Long)))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Average(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, Nullable&lt;long&gt;&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, Nullable&lt;int64&gt;&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.Queryable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Nullable&lt;System.Int64&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-422">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-422">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-423">Uma sequência de valores para cálculo da média.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-423">A sequence of values to calculate the average of.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="727ab-424">Uma função de projeção a ser aplicada a cada elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-424">A projection function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-425">Calcula a média de uma sequência de valores <see cref="T:System.Int64" /> anuláveis obtida invocando uma função de projeção em cada elemento da sequência de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-425">Computes the average of a sequence of nullable <see cref="T:System.Int64" /> values that is obtained by invoking a projection function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-426">A média da sequência de valores ou <see langword="null" /> se a sequência <paramref name="source" /> estiver vazia ou contiver somente valores <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-426">The average of the sequence of values, or <see langword="null" /> if the <paramref name="source" /> sequence is empty or contains only <see langword="null" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-427">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-427">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-428">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-428">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-429">O <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int64%7D%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int64%7D%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-429">The <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int64%7D%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int64%7D%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-430">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-430">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-431">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int64%7D%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-431">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int64%7D%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-432">O comportamento esperado é que ele calcula a média dos valores em `source` depois de invocar `selector` em cada valor.</span><span class="sxs-lookup"><span data-stu-id="727ab-432">The expected behavior is that it calculates the average of the values in `source` after invoking `selector` on each value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-433">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> para calcular a média <xref:System.String> comprimento em uma sequência de valores do tipo <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="727ab-433">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> to calculate the average <xref:System.String> length in a sequence of values of type <xref:System.String>.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#18)]
 [!code-vb[System.Linq.Queryable#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-434">
            <paramref name="source" /> ou <paramref name="selector" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-434">
              <paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;float&gt; Average&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,Nullable&lt;float&gt;&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float32&gt; Average&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;float32&gt;&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Nullable(Of Single)))) As Nullable(Of Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;float&gt; Average(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, Nullable&lt;float&gt;&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, Nullable&lt;single&gt;&gt;&gt; -&gt; Nullable&lt;single&gt;" Usage="System.Linq.Queryable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Nullable&lt;System.Single&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-435">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-435">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-436">Uma sequência de valores para cálculo da média.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-436">A sequence of values to calculate the average of.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="727ab-437">Uma função de projeção a ser aplicada a cada elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-437">A projection function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-438">Calcula a média de uma sequência de valores <see cref="T:System.Single" /> anuláveis obtida invocando uma função de projeção em cada elemento da sequência de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-438">Computes the average of a sequence of nullable <see cref="T:System.Single" /> values that is obtained by invoking a projection function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-439">A média da sequência de valores ou <see langword="null" /> se a sequência <paramref name="source" /> estiver vazia ou contiver somente valores <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-439">The average of the sequence of values, or <see langword="null" /> if the <paramref name="source" /> sequence is empty or contains only <see langword="null" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-440">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-440">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-441">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-441">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-442">O <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Single%7D%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Single%7D%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-442">The <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Single%7D%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Single%7D%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-443">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pelo <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-443">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-444">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Single%7D%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-444">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Single%7D%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-445">O comportamento esperado é que ele calcula a média dos valores em `source` depois de invocar `selector` em cada valor.</span><span class="sxs-lookup"><span data-stu-id="727ab-445">The expected behavior is that it calculates the average of the values in `source` after invoking `selector` on each value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-446">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> para calcular a média <xref:System.String> comprimento em uma sequência de valores do tipo <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="727ab-446">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> to calculate the average <xref:System.String> length in a sequence of values of type <xref:System.String>.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#18)]
 [!code-vb[System.Linq.Queryable#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-447">
            <paramref name="source" /> ou <paramref name="selector" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-447">
              <paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static float Average&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,float&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Average&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, float32&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Single))) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static float Average(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, float&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, single&gt;&gt; -&gt; single" Usage="System.Linq.Queryable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Single&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-448">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-448">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-449">Uma sequência de valores para cálculo da média.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-449">A sequence of values to calculate the average of.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="727ab-450">Uma função de projeção a ser aplicada a cada elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-450">A projection function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-451">Calcula a média de uma sequência de valores <see cref="T:System.Single" /> obtida invocando uma função de projeção em cada elemento da sequência de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-451">Computes the average of a sequence of <see cref="T:System.Single" /> values that is obtained by invoking a projection function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-452">A média da sequência de valores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-452">The average of the sequence of values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-453">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-453">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-454">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-454">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-455">O <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Single%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Single%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-455">The <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Single%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Single%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-456">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-456">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-457">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Single%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-457">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Single%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-458">O comportamento esperado é que ele calcula a média dos valores em `source` depois de invocar `selector` em cada valor.</span><span class="sxs-lookup"><span data-stu-id="727ab-458">The expected behavior is that it calculates the average of the values in `source` after invoking `selector` on each value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-459">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> para calcular a média <xref:System.String> comprimento em uma sequência de valores do tipo <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="727ab-459">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> to calculate the average <xref:System.String> length in a sequence of values of type <xref:System.String>.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#18)]
 [!code-vb[System.Linq.Queryable#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-460">
            <paramref name="source" /> ou <paramref name="selector" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-460">
              <paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="727ab-461">
            <paramref name="source" /> não contém elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-461">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Cast&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; Cast&lt;TResult&gt; (this System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; Cast&lt;TResult&gt;(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Cast``1(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Cast(Of TResult) (source As IQueryable) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ Cast(System::Linq::IQueryable ^ source);" />
      <MemberSignature Language="F#" Value="static member Cast : System.Linq.IQueryable -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="System.Linq.Queryable.Cast source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="727ab-462">O tipo para o qual os elementos de <paramref name="source" /> deverão ser convertidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-462">The type to convert the elements of <paramref name="source" /> to.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-463">O <see cref="T:System.Linq.IQueryable" /> que contém os elementos a serem convertidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-463">The <see cref="T:System.Linq.IQueryable" /> that contains the elements to be converted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-464">Converte os elementos de um <see cref="T:System.Linq.IQueryable" /> para o tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-464">Converts the elements of an <see cref="T:System.Linq.IQueryable" /> to the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-465">Um <see cref="T:System.Linq.IQueryable`1" /> que contém cada elemento da sequência de origem convertido para o tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-465">An <see cref="T:System.Linq.IQueryable`1" /> that contains each element of the source sequence converted to the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-466">O <xref:System.Linq.Queryable.Cast%60%601%28System.Linq.IQueryable%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Cast%60%601%28System.Linq.IQueryable%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-466">The <xref:System.Linq.Queryable.Cast%60%601%28System.Linq.IQueryable%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Cast%60%601%28System.Linq.IQueryable%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-467">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-467">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-468">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Cast%60%601%28System.Linq.IQueryable%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-468">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Cast%60%601%28System.Linq.IQueryable%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-469">O comportamento esperado é que ele converte os valores em `source` digitar `TResult`.</span><span class="sxs-lookup"><span data-stu-id="727ab-469">The expected behavior is that it converts the values in `source` to type `TResult`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-470">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Cast%60%601%28System.Linq.IQueryable%29> para converter objetos em uma sequência para o tipo <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="727ab-470">The following code example demonstrates how to use <xref:System.Linq.Queryable.Cast%60%601%28System.Linq.IQueryable%29> to convert objects in a sequence to type <xref:System.String>.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#19)]
 [!code-vb[System.Linq.Queryable#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-471">
            <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-471">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="727ab-472">Um elemento na sequência não pode ser convertido para o tipo <paramref name="TResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-472">An element in the sequence cannot be cast to type <paramref name="TResult" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Concat&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Concat&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source1, System.Collections.Generic.IEnumerable&lt;TSource&gt; source2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Concat&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source1, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Concat``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Concat(Of TSource) (source1 As IQueryable(Of TSource), source2 As IEnumerable(Of TSource)) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Concat(System::Linq::IQueryable&lt;TSource&gt; ^ source1, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source2);" />
      <MemberSignature Language="F#" Value="static member Concat : System.Linq.IQueryable&lt;'Source&gt; * seq&lt;'Source&gt; -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.Concat (source1, source2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="source2" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-473">O tipo dos elementos das sequências de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-473">The type of the elements of the input sequences.</span>
          </span>
        </typeparam>
        <param name="source1">
          <span data-ttu-id="727ab-474">A primeira sequência a ser concatenada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-474">The first sequence to concatenate.</span>
          </span>
        </param>
        <param name="source2">
          <span data-ttu-id="727ab-475">A sequência a ser concatenada com a primeira sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-475">The sequence to concatenate to the first sequence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-476">Concatena duas sequências.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-476">Concatenates two sequences.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-477">Um <see cref="T:System.Linq.IQueryable`1" /> que contém os elementos concatenados das duas sequências de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-477">An <see cref="T:System.Linq.IQueryable`1" /> that contains the concatenated elements of the two input sequences.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-478">O <xref:System.Linq.Queryable.Concat%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Concat%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-478">The <xref:System.Linq.Queryable.Concat%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Concat%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-479">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source1` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-479">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source1` parameter.</span></span>  
  
 <span data-ttu-id="727ab-480">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Concat%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> depende da implementação do tipo do `source1` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-480">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Concat%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> depends on the implementation of the type of the `source1` parameter.</span></span> <span data-ttu-id="727ab-481">O comportamento esperado é que os elementos na `source2` são concatenados para aqueles de `source1` para criar uma nova sequência.</span><span class="sxs-lookup"><span data-stu-id="727ab-481">The expected behavior is that the elements in `source2` are concatenated to those of `source1` to create a new sequence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-482">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Concat%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> para concatenar duas sequências.</span><span class="sxs-lookup"><span data-stu-id="727ab-482">The following code example demonstrates how to use <xref:System.Linq.Queryable.Concat%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> to concatenate two sequences.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#20)]
 [!code-vb[System.Linq.Queryable#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-483">
            <paramref name="source1" /> ou <paramref name="source2" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-483">
              <paramref name="source1" /> or <paramref name="source2" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Contains&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="727ab-484">Determina se um <see cref="T:System.Linq.IQueryable`1" /> contém um elemento especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-484">Determines whether an <see cref="T:System.Linq.IQueryable`1" /> contains a specified element.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Contains&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static bool Contains&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, TSource item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Contains&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, !!TSource item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Contains(Of TSource) (source As IQueryable(Of TSource), item As TSource) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Contains(System::Linq::IQueryable&lt;TSource&gt; ^ source, TSource item);" />
      <MemberSignature Language="F#" Value="static member Contains : System.Linq.IQueryable&lt;'Source&gt; * 'Source -&gt; bool" Usage="System.Linq.Queryable.Contains (source, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="item" Type="TSource" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-485">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-485">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-486">Um <see cref="T:System.Linq.IQueryable`1" /> no qual <paramref name="item" /> será localizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-486">An <see cref="T:System.Linq.IQueryable`1" /> in which to locate <paramref name="item" />.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="727ab-487">O objeto a ser localizado na sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-487">The object to locate in the sequence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-488">Determina se uma sequência contém um elemento especificado usando o comparador de igualdade padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-488">Determines whether a sequence contains a specified element by using the default equality comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-489">
            <see langword="true" /> se a sequência de entrada contiver um elemento que tem o valor especificado; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-489">
              <see langword="true" /> if the input sequence contains an element that has the specified value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-490">O <xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-490">The <xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-491">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-491">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-492">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-492">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-493">O comportamento esperado é que ele determina se `source` contém `item`.</span><span class="sxs-lookup"><span data-stu-id="727ab-493">The expected behavior is that it determines if `source` contains `item`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-494">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> para determinar se uma sequência contém um elemento específico.</span><span class="sxs-lookup"><span data-stu-id="727ab-494">The following code example demonstrates how to use <xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> to determine whether a sequence contains a specific element.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#21)]
 [!code-vb[System.Linq.Queryable#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#21)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-495">
            <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-495">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Contains&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static bool Contains&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, TSource item, System.Collections.Generic.IEqualityComparer&lt;TSource&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Contains&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, !!TSource item, class System.Collections.Generic.IEqualityComparer`1&lt;!!TSource&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Contains(Of TSource) (source As IQueryable(Of TSource), item As TSource, comparer As IEqualityComparer(Of TSource)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Contains(System::Linq::IQueryable&lt;TSource&gt; ^ source, TSource item, System::Collections::Generic::IEqualityComparer&lt;TSource&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Contains : System.Linq.IQueryable&lt;'Source&gt; * 'Source * System.Collections.Generic.IEqualityComparer&lt;'Source&gt; -&gt; bool" Usage="System.Linq.Queryable.Contains (source, item, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="item" Type="TSource" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-496">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-496">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-497">Um <see cref="T:System.Linq.IQueryable`1" /> no qual <paramref name="item" /> será localizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-497">An <see cref="T:System.Linq.IQueryable`1" /> in which to locate <paramref name="item" />.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="727ab-498">O objeto a ser localizado na sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-498">The object to locate in the sequence.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="727ab-499">Um <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> para comparar valores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-499">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-500">Determina se uma sequência contém um elemento especificado usando um <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-500">Determines whether a sequence contains a specified element by using a specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-501">
            <see langword="true" /> se a sequência de entrada contiver um elemento que tem o valor especificado; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-501">
              <see langword="true" /> if the input sequence contains an element that has the specified value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-502">O <xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-502">The <xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-503">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-503">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-504">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-504">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-505">O comportamento esperado é que ele determina se `source` contém `item` usando `comparer` para comparar valores.</span><span class="sxs-lookup"><span data-stu-id="727ab-505">The expected behavior is that it determines if `source` contains `item` by using `comparer` to compare values.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-506">
            <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-506">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Count&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="727ab-507">Retorna o número de elementos em uma sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-507">Returns the number of elements in a sequence.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Count&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static int Count&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Count&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Count(Of TSource) (source As IQueryable(Of TSource)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int Count(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Count : System.Linq.IQueryable&lt;'Source&gt; -&gt; int" Usage="System.Linq.Queryable.Count source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-508">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-508">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-509">O <see cref="T:System.Linq.IQueryable`1" /> que contém os elementos a serem contados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-509">The <see cref="T:System.Linq.IQueryable`1" /> that contains the elements to be counted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-510">Retorna o número de elementos em uma sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-510">Returns the number of elements in a sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-511">O número de elementos na sequência de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-511">The number of elements in the input sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-512">O <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-512">The <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-513">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-513">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-514">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-514">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-515">O comportamento esperado é que ela conta o número de itens na `source`.</span><span class="sxs-lookup"><span data-stu-id="727ab-515">The expected behavior is that it counts the number of items in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-516">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> para contar os elementos em uma sequência.</span><span class="sxs-lookup"><span data-stu-id="727ab-516">The following code example demonstrates how to use <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to count the elements in a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#22](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#22)]
 [!code-vb[System.Linq.Queryable#22](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-517">
            <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-517">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="727ab-518">O número de elementos no <paramref name="source" /> é maior que <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-518">The number of elements in <paramref name="source" /> is larger than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Count&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static int Count&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Count&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Count(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean))) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int Count(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, bool&gt; ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Count : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, bool&gt;&gt; -&gt; int" Usage="System.Linq.Queryable.Count (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-519">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-519">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-520">Um <see cref="T:System.Linq.IQueryable`1" /> que contém os elementos a serem contados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-520">An <see cref="T:System.Linq.IQueryable`1" /> that contains the elements to be counted.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="727ab-521">Uma função para testar cada elemento em relação a uma condição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-521">A function to test each element for a condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-522">Retorna o número de elementos na sequência especificada que atendem a uma condição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-522">Returns the number of elements in the specified sequence that satisfies a condition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-523">O número de elementos na sequência que atende à condição na função de predicado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-523">The number of elements in the sequence that satisfies the condition in the predicate function.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-524">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-524">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-525">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-525">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-526">O <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-526">The <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-527">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-527">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-528">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-528">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-529">O comportamento esperado é que ela conta o número de itens na `source` que satisfazem a condição especificada pelo `predicate`.</span><span class="sxs-lookup"><span data-stu-id="727ab-529">The expected behavior is that it counts the number of items in `source` that satisfy the condition specified by `predicate`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-530">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> para contar os elementos em uma sequência que satisfazem uma condição.</span><span class="sxs-lookup"><span data-stu-id="727ab-530">The following code example demonstrates how to use <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> to count the elements in a sequence that satisfy a condition.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#23)]
 [!code-vb[System.Linq.Queryable#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-531">
            <paramref name="source" /> ou <paramref name="predicate" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-531">
              <paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="727ab-532">O número de elementos no <paramref name="source" /> é maior que <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-532">The number of elements in <paramref name="source" /> is larger than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefaultIfEmpty&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="727ab-533">Retornará os elementos em uma sequência ou uma coleção de singletons com valor padrão se a sequência estiver vazia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-533">Returns the elements in a sequence or a default valued singleton collection if the sequence is empty.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefaultIfEmpty&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; DefaultIfEmpty&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; DefaultIfEmpty&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DefaultIfEmpty(Of TSource) (source As IQueryable(Of TSource)) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ DefaultIfEmpty(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member DefaultIfEmpty : System.Linq.IQueryable&lt;'Source&gt; -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.DefaultIfEmpty source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-534">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-534">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-535">O <see cref="T:System.Linq.IQueryable`1" /> para o qual será retornado um valor padrão se estiver vazio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-535">The <see cref="T:System.Linq.IQueryable`1" /> to return a default value for if empty.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-536">Retornará os elementos da sequência especificada ou o valor padrão do parâmetro de tipo em uma coleção de singletons se a sequência estiver vazia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-536">Returns the elements of the specified sequence or the type parameter's default value in a singleton collection if the sequence is empty.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-537">Um <see cref="T:System.Linq.IQueryable`1" /> que contém <see langword="default" /> (<paramref name="TSource" />) se <paramref name="source" /> estiver vazio; caso contrário, <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-537">An <see cref="T:System.Linq.IQueryable`1" /> that contains <see langword="default" />(<paramref name="TSource" />) if <paramref name="source" /> is empty; otherwise, <paramref name="source" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-538">O <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-538">The <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-539">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-539">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-540">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-540">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-541">O comportamento esperado é que ele retorna `source` se não estiver vazia.</span><span class="sxs-lookup"><span data-stu-id="727ab-541">The expected behavior is that it returns `source` if it is not empty.</span></span> <span data-ttu-id="727ab-542">Caso contrário, retornará um <xref:System.Linq.IQueryable%601> que contém `default(TSource)`.</span><span class="sxs-lookup"><span data-stu-id="727ab-542">Otherwise, it returns an <xref:System.Linq.IQueryable%601> that contains `default(TSource)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-543">Os exemplos de código a seguir demonstram como usar <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> para fornecer um valor padrão caso a sequência de origem está vazia.</span><span class="sxs-lookup"><span data-stu-id="727ab-543">The following code examples demonstrate how to use <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to provide a default value in case the source sequence is empty.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#24](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#24)]
 [!code-vb[System.Linq.Queryable#24](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-544">
            <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-544">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultIfEmpty&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; DefaultIfEmpty&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, TSource defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; DefaultIfEmpty&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, !!TSource defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DefaultIfEmpty(Of TSource) (source As IQueryable(Of TSource), defaultValue As TSource) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ DefaultIfEmpty(System::Linq::IQueryable&lt;TSource&gt; ^ source, TSource defaultValue);" />
      <MemberSignature Language="F#" Value="static member DefaultIfEmpty : System.Linq.IQueryable&lt;'Source&gt; * 'Source -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.DefaultIfEmpty (source, defaultValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="defaultValue" Type="TSource" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-545">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-545">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-546">O <see cref="T:System.Linq.IQueryable`1" /> para o qual será retornado o valor especificado se ele estiver vazio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-546">The <see cref="T:System.Linq.IQueryable`1" /> to return the specified value for if empty.</span>
          </span>
        </param>
        <param name="defaultValue">
          <span data-ttu-id="727ab-547">O valor a ser retornado se a sequência estiver vazia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-547">The value to return if the sequence is empty.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-548">Retorna os elementos da sequência especificada ou o valor especificado em uma coleção de singletons se a sequência está vazia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-548">Returns the elements of the specified sequence or the specified value in a singleton collection if the sequence is empty.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-549">Um <see cref="T:System.Linq.IQueryable`1" /> que contém <paramref name="defaultValue" /> se <paramref name="source" /> está vazio; caso contrário, <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-549">An <see cref="T:System.Linq.IQueryable`1" /> that contains <paramref name="defaultValue" /> if <paramref name="source" /> is empty; otherwise, <paramref name="source" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-550">O <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-550">The <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-551">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-551">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-552">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-552">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-553">O comportamento esperado é que ele retorna `source` se não estiver vazia.</span><span class="sxs-lookup"><span data-stu-id="727ab-553">The expected behavior is that it returns `source` if it is not empty.</span></span> <span data-ttu-id="727ab-554">Caso contrário, retornará um <xref:System.Linq.IQueryable%601> que contém `defaultValue`.</span><span class="sxs-lookup"><span data-stu-id="727ab-554">Otherwise, it returns an <xref:System.Linq.IQueryable%601> that contains `defaultValue`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-555">O exemplo de código a seguir mostra uma situação em que ele é útil chamar <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> em um [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] consulta.</span><span class="sxs-lookup"><span data-stu-id="727ab-555">The following code example shows a situation in which it is useful to call <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> in a [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] query.</span></span> <span data-ttu-id="727ab-556">Um valor padrão é passado para <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> neste exemplo.</span><span class="sxs-lookup"><span data-stu-id="727ab-556">A default value is passed to <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> in this example.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#25](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#25)]
 [!code-vb[System.Linq.Queryable#25](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-557">
            <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-557">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Distinct&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="727ab-558">Retorna elementos diferentes de uma sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-558">Returns distinct elements from a sequence.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Distinct&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Distinct&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Distinct&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Distinct(Of TSource) (source As IQueryable(Of TSource)) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Distinct(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Distinct : System.Linq.IQueryable&lt;'Source&gt; -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.Distinct source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-559">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-559">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-560">O <see cref="T:System.Linq.IQueryable`1" /> do qual as duplicatas serão removidas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-560">The <see cref="T:System.Linq.IQueryable`1" /> to remove duplicates from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-561">Retorna os elementos distintos de uma sequência usando o comparador de igualdade padrão para comparar valores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-561">Returns distinct elements from a sequence by using the default equality comparer to compare values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-562">Um <see cref="T:System.Linq.IQueryable`1" /> que contém elementos distintos do <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-562">An <see cref="T:System.Linq.IQueryable`1" /> that contains distinct elements from <paramref name="source" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-563">O <xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-563">The <xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-564">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-564">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-565">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-565">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-566">O comportamento esperado é que ele retorna uma sequência não ordenada de itens exclusivos em `source`.</span><span class="sxs-lookup"><span data-stu-id="727ab-566">The expected behavior is that it returns an unordered sequence of the unique items in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-567">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> para retornar os elementos distintos de uma sequência.</span><span class="sxs-lookup"><span data-stu-id="727ab-567">The following code example demonstrates how to use <xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to return distinct elements from a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#27](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#27)]
 [!code-vb[System.Linq.Queryable#27](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#27)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-568">
            <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-568">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Distinct&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Distinct&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Collections.Generic.IEqualityComparer&lt;TSource&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Distinct&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Collections.Generic.IEqualityComparer`1&lt;!!TSource&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Distinct(Of TSource) (source As IQueryable(Of TSource), comparer As IEqualityComparer(Of TSource)) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Distinct(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Collections::Generic::IEqualityComparer&lt;TSource&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Distinct : System.Linq.IQueryable&lt;'Source&gt; * System.Collections.Generic.IEqualityComparer&lt;'Source&gt; -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.Distinct (source, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-569">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-569">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-570">O <see cref="T:System.Linq.IQueryable`1" /> do qual as duplicatas serão removidas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-570">The <see cref="T:System.Linq.IQueryable`1" /> to remove duplicates from.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="727ab-571">Um <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> para comparar valores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-571">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-572">Retorna os elementos distintos de uma sequência usando um <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> especificado para comparar valores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-572">Returns distinct elements from a sequence by using a specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-573">Um <see cref="T:System.Linq.IQueryable`1" /> que contém elementos distintos do <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-573">An <see cref="T:System.Linq.IQueryable`1" /> that contains distinct elements from <paramref name="source" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-574">O <xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-574">The <xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-575">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-575">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-576">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-576">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-577">O comportamento esperado é que ele retorna uma sequência não ordenada de itens exclusivos na `source` usando `comparer` para comparar valores.</span><span class="sxs-lookup"><span data-stu-id="727ab-577">The expected behavior is that it returns an unordered sequence of the unique items in `source` by using `comparer` to compare values.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-578">
            <paramref name="source" /> ou <paramref name="comparer" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-578">
              <paramref name="source" /> or <paramref name="comparer" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ElementAt&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource ElementAt&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource ElementAt&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.ElementAt``1(System.Linq.IQueryable{``0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ElementAt(Of TSource) (source As IQueryable(Of TSource), index As Integer) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource ElementAt(System::Linq::IQueryable&lt;TSource&gt; ^ source, int index);" />
      <MemberSignature Language="F#" Value="static member ElementAt : System.Linq.IQueryable&lt;'Source&gt; * int -&gt; 'Source" Usage="System.Linq.Queryable.ElementAt (source, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-579">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-579">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-580">Um <see cref="T:System.Linq.IQueryable`1" /> do qual um elemento será retornado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-580">An <see cref="T:System.Linq.IQueryable`1" /> to return an element from.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="727ab-581">O índice baseado em zero do elemento a ser recuperado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-581">The zero-based index of the element to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-582">Retorna o elemento de um índice especificado em uma sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-582">Returns the element at a specified index in a sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-583">O elemento na posição especificada em <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-583">The element at the specified position in <paramref name="source" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-584">O <xref:System.Linq.Queryable.ElementAt%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.ElementAt%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-584">The <xref:System.Linq.Queryable.ElementAt%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.ElementAt%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-585">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-585">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-586">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.ElementAt%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-586">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.ElementAt%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-587">O comportamento esperado é que ele retorna o item na posição `index` em `source`.</span><span class="sxs-lookup"><span data-stu-id="727ab-587">The expected behavior is that it returns the item at position `index` in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-588">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.ElementAt%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> para retornar um elemento em uma posição específica em uma sequência.</span><span class="sxs-lookup"><span data-stu-id="727ab-588">The following code example demonstrates how to use <xref:System.Linq.Queryable.ElementAt%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> to return an element at a specific position in a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#28](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#28)]
 [!code-vb[System.Linq.Queryable#28](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#28)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-589">
            <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-589">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="727ab-590">
            <paramref name="index" /> é menor que zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-590">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ElementAtOrDefault&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource ElementAtOrDefault&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource ElementAtOrDefault&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.ElementAtOrDefault``1(System.Linq.IQueryable{``0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ElementAtOrDefault(Of TSource) (source As IQueryable(Of TSource), index As Integer) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource ElementAtOrDefault(System::Linq::IQueryable&lt;TSource&gt; ^ source, int index);" />
      <MemberSignature Language="F#" Value="static member ElementAtOrDefault : System.Linq.IQueryable&lt;'Source&gt; * int -&gt; 'Source" Usage="System.Linq.Queryable.ElementAtOrDefault (source, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-591">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-591">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-592">Um <see cref="T:System.Linq.IQueryable`1" /> do qual um elemento será retornado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-592">An <see cref="T:System.Linq.IQueryable`1" /> to return an element from.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="727ab-593">O índice baseado em zero do elemento a ser recuperado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-593">The zero-based index of the element to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-594">Retorna o elemento em um índice especificado em uma sequência ou um valor padrão se o índice estiver fora do intervalo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-594">Returns the element at a specified index in a sequence or a default value if the index is out of range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-595">
            <c>default</c>(<paramref name="TSource" />) se <paramref name="index" /> estiver fora dos limites de <paramref name="source" />; caso contrário, o elemento na posição especificada em <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-595">
              <c>default</c>(<paramref name="TSource" />) if <paramref name="index" /> is outside the bounds of <paramref name="source" />; otherwise, the element at the specified position in <paramref name="source" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-596">O <xref:System.Linq.Queryable.ElementAtOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.ElementAtOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-596">The <xref:System.Linq.Queryable.ElementAtOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.ElementAtOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-597">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-597">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-598">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.ElementAtOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-598">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.ElementAtOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-599">O comportamento esperado é que ele retorna o item na posição `index` na `source`, ou `default(TSource)` se `index` está fora dos limites do `source`.</span><span class="sxs-lookup"><span data-stu-id="727ab-599">The expected behavior is that it returns the item at position `index` in `source`, or `default(TSource)` if `index` is outside the bounds of `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-600">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.ElementAtOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="727ab-600">The following code example demonstrates how to use <xref:System.Linq.Queryable.ElementAtOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29>.</span></span> <span data-ttu-id="727ab-601">Este exemplo usa um valor para `index` que está fora dos limites da sequência de origem.</span><span class="sxs-lookup"><span data-stu-id="727ab-601">This example uses a value for `index` that is outside the bounds of the source sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#29](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#29)]
 [!code-vb[System.Linq.Queryable#29](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#29)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-602">
            <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-602">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Except&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="727ab-603">Produz a diferença de conjunto de duas sequências.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-603">Produces the set difference of two sequences.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Except&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Except&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source1, System.Collections.Generic.IEnumerable&lt;TSource&gt; source2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Except&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source1, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Except(Of TSource) (source1 As IQueryable(Of TSource), source2 As IEnumerable(Of TSource)) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Except(System::Linq::IQueryable&lt;TSource&gt; ^ source1, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source2);" />
      <MemberSignature Language="F#" Value="static member Except : System.Linq.IQueryable&lt;'Source&gt; * seq&lt;'Source&gt; -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.Except (source1, source2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="source2" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-604">O tipo dos elementos das sequências de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-604">The type of the elements of the input sequences.</span>
          </span>
        </typeparam>
        <param name="source1">
          <span data-ttu-id="727ab-605">Um <see cref="T:System.Linq.IQueryable`1" /> cujos elementos que não estão presentes também no <paramref name="source2" /> serão retornados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-605">An <see cref="T:System.Linq.IQueryable`1" /> whose elements that are not also in <paramref name="source2" /> will be returned.</span>
          </span>
        </param>
        <param name="source2">
          <span data-ttu-id="727ab-606">Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> cujos elementos que também ocorrem na primeira sequência não aparecerão na sequência retornada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-606">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements that also occur in the first sequence will not appear in the returned sequence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-607">Produz a diferença de conjunto de duas sequências usando o comparador de igualdade padrão para comparar os valores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-607">Produces the set difference of two sequences by using the default equality comparer to compare values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-608">Um <see cref="T:System.Linq.IQueryable`1" /> que contém a diferença de conjunto das duas sequências.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-608">An <see cref="T:System.Linq.IQueryable`1" /> that contains the set difference of the two sequences.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-609">O <xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-609">The <xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-610">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do`source1` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-610">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the`source1` parameter.</span></span>  
  
 <span data-ttu-id="727ab-611">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> depende da implementação do tipo do `source1` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-611">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> depends on the implementation of the type of  the `source1` parameter.</span></span> <span data-ttu-id="727ab-612">O comportamento esperado é que todos os elementos em `source1` são retornados, exceto aquelas que estão presentes também no `source2`.</span><span class="sxs-lookup"><span data-stu-id="727ab-612">The expected behavior is that all the elements in `source1` are returned except for those that are also in `source2`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-613">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> para retornar os elementos que aparecem somente na primeira sequência de origem.</span><span class="sxs-lookup"><span data-stu-id="727ab-613">The following code example demonstrates how to use <xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> to return those elements that only appear in the first source sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#34](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#34)]
 [!code-vb[System.Linq.Queryable#34](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#34)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-614">
            <paramref name="source1" /> ou <paramref name="source2" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-614">
              <paramref name="source1" /> or <paramref name="source2" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Except&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Except&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source1, System.Collections.Generic.IEnumerable&lt;TSource&gt; source2, System.Collections.Generic.IEqualityComparer&lt;TSource&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Except&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source1, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source2, class System.Collections.Generic.IEqualityComparer`1&lt;!!TSource&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Except(Of TSource) (source1 As IQueryable(Of TSource), source2 As IEnumerable(Of TSource), comparer As IEqualityComparer(Of TSource)) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Except(System::Linq::IQueryable&lt;TSource&gt; ^ source1, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source2, System::Collections::Generic::IEqualityComparer&lt;TSource&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Except : System.Linq.IQueryable&lt;'Source&gt; * seq&lt;'Source&gt; * System.Collections.Generic.IEqualityComparer&lt;'Source&gt; -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.Except (source1, source2, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="source2" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-615">O tipo dos elementos das sequências de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-615">The type of the elements of the input sequences.</span>
          </span>
        </typeparam>
        <param name="source1">
          <span data-ttu-id="727ab-616">Um <see cref="T:System.Linq.IQueryable`1" /> cujos elementos que não estão presentes também no <paramref name="source2" /> serão retornados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-616">An <see cref="T:System.Linq.IQueryable`1" /> whose elements that are not also in <paramref name="source2" /> will be returned.</span>
          </span>
        </param>
        <param name="source2">
          <span data-ttu-id="727ab-617">Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> cujos elementos que também ocorrem na primeira sequência não aparecerão na sequência retornada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-617">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements that also occur in the first sequence will not appear in the returned sequence.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="727ab-618">Um <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> para comparar valores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-618">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-619">Produz a diferença de conjunto de duas sequências usando o <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> especificado para comparar os valores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-619">Produces the set difference of two sequences by using the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-620">Um <see cref="T:System.Linq.IQueryable`1" /> que contém a diferença de conjunto das duas sequências.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-620">An <see cref="T:System.Linq.IQueryable`1" /> that contains the set difference of the two sequences.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-621">O <xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-621">The <xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-622">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do`source1` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-622">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the`source1` parameter.</span></span>  
  
 <span data-ttu-id="727ab-623">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> depende da implementação do tipo do `source1` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-623">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> depends on the implementation of the type of the `source1` parameter.</span></span> <span data-ttu-id="727ab-624">O comportamento esperado é que todos os elementos em `source1` são retornados, exceto aquelas que estão presentes também no `source2`, e `comparer` é usado para comparar valores.</span><span class="sxs-lookup"><span data-stu-id="727ab-624">The expected behavior is that all the elements in `source1` are returned except for those that are also in `source2`, and `comparer` is used to compare values.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-625">
            <paramref name="source1" /> ou <paramref name="source2" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-625">
              <paramref name="source1" /> or <paramref name="source2" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="First&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="727ab-626">Retorna o primeiro elemento de uma sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-626">Returns the first element of a sequence.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="First&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource First&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource First&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.First``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function First(Of TSource) (source As IQueryable(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource First(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member First : System.Linq.IQueryable&lt;'Source&gt; -&gt; 'Source" Usage="System.Linq.Queryable.First source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-627">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-627">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-628">O <see cref="T:System.Linq.IQueryable`1" /> do qual o primeiro elemento será retornado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-628">The <see cref="T:System.Linq.IQueryable`1" /> to return the first element of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-629">Retorna o primeiro elemento de uma sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-629">Returns the first element of a sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-630">O primeiro elemento em <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-630">The first element in <paramref name="source" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-631">O <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-631">The <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-632">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-632">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-633">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-633">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-634">O comportamento esperado é que ele retorna o primeiro elemento em `source`.</span><span class="sxs-lookup"><span data-stu-id="727ab-634">The expected behavior is that it returns the first element in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-635">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> para retornar o primeiro elemento em uma sequência.</span><span class="sxs-lookup"><span data-stu-id="727ab-635">The following code example demonstrates how to use <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to return the first element in a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#35](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#35)]
 [!code-vb[System.Linq.Queryable#35](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-636">
            <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-636">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="727ab-637">Uma sequência de origem está vazia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-637">The source sequence is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="First&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource First&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource First&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.First``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function First(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean))) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource First(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, bool&gt; ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member First : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, bool&gt;&gt; -&gt; 'Source" Usage="System.Linq.Queryable.First (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-638">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-638">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-639">Um <see cref="T:System.Linq.IQueryable`1" /> do qual um elemento será retornado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-639">An <see cref="T:System.Linq.IQueryable`1" /> to return an element from.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="727ab-640">Uma função para testar cada elemento em relação a uma condição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-640">A function to test each element for a condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-641">Retorna o primeiro elemento de uma sequência que satisfaz uma condição especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-641">Returns the first element of a sequence that satisfies a specified condition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-642">O primeiro elemento em <paramref name="source" /> que é aprovado no teste em <paramref name="predicate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-642">The first element in <paramref name="source" /> that passes the test in <paramref name="predicate" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-643">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-643">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-644">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-644">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-645">O <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-645">The <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-646">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-646">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-647">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-647">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-648">O comportamento esperado é que ele retorna o primeiro elemento em `source` que satisfaz a condição especificada pelo `predicate`.</span><span class="sxs-lookup"><span data-stu-id="727ab-648">The expected behavior is that it returns the first element in `source` that satisfies the condition specified by `predicate`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-649">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> para retornar o primeiro elemento de uma sequência que satisfaz uma condição.</span><span class="sxs-lookup"><span data-stu-id="727ab-649">The following code example demonstrates how to use <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> to return the first element of a sequence that satisfies a condition.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#36](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#36)]
 [!code-vb[System.Linq.Queryable#36](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#36)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-650">
            <paramref name="source" /> ou <paramref name="predicate" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-650">
              <paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="727ab-651">Nenhum elemento satisfaz a condição na <paramref name="predicate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-651">No element satisfies the condition in <paramref name="predicate" />.</span>
          </span>
          <span data-ttu-id="727ab-652">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-652">-or-</span>
          </span>
          <span data-ttu-id="727ab-653">Uma sequência de origem está vazia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-653">The source sequence is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FirstOrDefault&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="727ab-654">Retorna o primeiro elemento de uma sequência ou um valor padrão caso não seja encontrado nenhum elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-654">Returns the first element of a sequence, or a default value if no element is found.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FirstOrDefault&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource FirstOrDefault&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource FirstOrDefault&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FirstOrDefault(Of TSource) (source As IQueryable(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource FirstOrDefault(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member FirstOrDefault : System.Linq.IQueryable&lt;'Source&gt; -&gt; 'Source" Usage="System.Linq.Queryable.FirstOrDefault source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-655">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-655">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-656">O <see cref="T:System.Linq.IQueryable`1" /> do qual o primeiro elemento será retornado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-656">The <see cref="T:System.Linq.IQueryable`1" /> to return the first element of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-657">Retorna o primeiro elemento de uma sequência ou um valor padrão se a sequência não contém elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-657">Returns the first element of a sequence, or a default value if the sequence contains no elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-658">
            <c>default</c>(<paramref name="TSource" />) se <paramref name="source" /> estiver vazio; caso contrário, o primeiro elemento em <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-658">
              <c>default</c>(<paramref name="TSource" />) if <paramref name="source" /> is empty; otherwise, the first element in <paramref name="source" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-659">O <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-659">The <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-660">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-660">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-661">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-661">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-662">O comportamento esperado é que ele retorna o primeiro elemento em `source`, ou um valor padrão se `source` está vazio.</span><span class="sxs-lookup"><span data-stu-id="727ab-662">The expected behavior is that it returns the first element in `source`, or a default value if `source` is empty.</span></span>  
  
 <span data-ttu-id="727ab-663">O <xref:System.Linq.Queryable.FirstOrDefault%2A> método não fornece uma maneira de especificar o valor padrão a ser retornado se `source` está vazio.</span><span class="sxs-lookup"><span data-stu-id="727ab-663">The <xref:System.Linq.Queryable.FirstOrDefault%2A> method does not provide a way to specify the default value to return if `source` is empty.</span></span> <span data-ttu-id="727ab-664">Se você quiser especificar um valor padrão diferente de `default(TSource)`, use o <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> método conforme descrito na seção de exemplo.</span><span class="sxs-lookup"><span data-stu-id="727ab-664">If you want to specify a default value other than `default(TSource)`, use the <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> method as described in the Example section.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-665">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> em uma sequência vazia.</span><span class="sxs-lookup"><span data-stu-id="727ab-665">The following code example demonstrates how to use <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> on an empty sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#37](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#37)]
 [!code-vb[System.Linq.Queryable#37](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#37)]  
  
 <span data-ttu-id="727ab-666">Às vezes, o valor de `default(TSource)` não é o valor padrão que você deseja usar se a coleção não contiver elementos.</span><span class="sxs-lookup"><span data-stu-id="727ab-666">Sometimes the value of `default(TSource)` is not the default value that you want to use if the collection contains no elements.</span></span> <span data-ttu-id="727ab-667">Em vez de verificar o resultado para o valor padrão indesejado e, em seguida, alterando-se necessário, você pode usar o <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> método para especificar o valor padrão que você deseja usar, se a coleção está vazia.</span><span class="sxs-lookup"><span data-stu-id="727ab-667">Instead of checking the result for the unwanted default value and then changing it if necessary, you can use the <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> method to specify the default value that you want to use if the collection is empty.</span></span> <span data-ttu-id="727ab-668">Em seguida, chame <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> para obter o primeiro elemento.</span><span class="sxs-lookup"><span data-stu-id="727ab-668">Then, call <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to obtain the first element.</span></span> <span data-ttu-id="727ab-669">O exemplo de código a seguir usa ambas as técnicas para obter um valor padrão de 1 se uma coleção de meses numéricos está vazia.</span><span class="sxs-lookup"><span data-stu-id="727ab-669">The following code example uses both techniques to obtain a default value of 1 if a collection of numeric months is empty.</span></span> <span data-ttu-id="727ab-670">Como o valor padrão para um número inteiro é 0, o que não corresponde a qualquer mês, o valor padrão deve ser especificado como 1 em vez disso.</span><span class="sxs-lookup"><span data-stu-id="727ab-670">Because the default value for an integer is 0, which does not correspond to any month, the default value must be specified as 1 instead.</span></span> <span data-ttu-id="727ab-671">A primeira variável de resultado é verificada para o valor padrão não desejados depois que a consulta for concluída.</span><span class="sxs-lookup"><span data-stu-id="727ab-671">The first result variable is checked for the unwanted default value after the query is completed.</span></span> <span data-ttu-id="727ab-672">A segunda variável de resultado é obtida chamando <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> para especificar um valor padrão de 1.</span><span class="sxs-lookup"><span data-stu-id="727ab-672">The second result variable is obtained by calling <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> to specify a default value of 1.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#131](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#131)]
 [!code-vb[System.Linq.Queryable#131](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#131)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-673">
            <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-673">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FirstOrDefault&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource FirstOrDefault&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource FirstOrDefault&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FirstOrDefault(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean))) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource FirstOrDefault(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, bool&gt; ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member FirstOrDefault : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, bool&gt;&gt; -&gt; 'Source" Usage="System.Linq.Queryable.FirstOrDefault (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-674">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-674">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-675">Um <see cref="T:System.Linq.IQueryable`1" /> do qual um elemento será retornado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-675">An <see cref="T:System.Linq.IQueryable`1" /> to return an element from.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="727ab-676">Uma função para testar cada elemento em relação a uma condição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-676">A function to test each element for a condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-677">Retorna o primeiro elemento de uma sequência que atende a uma condição especificada ou um valor padrão se esse elemento não é encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-677">Returns the first element of a sequence that satisfies a specified condition or a default value if no such element is found.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-678">
            <c>default</c>(<paramref name="TSource" />) se <paramref name="source" /> estiver vazio ou se nenhum elemento for aprovado no teste especificado por <paramref name="predicate" />; caso contrário, o primeiro elemento em <paramref name="source" /> aprovado no teste especificado por <paramref name="predicate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-678">
              <c>default</c>(<paramref name="TSource" />) if <paramref name="source" /> is empty or if no element passes the test specified by <paramref name="predicate" />; otherwise, the first element in <paramref name="source" /> that passes the test specified by <paramref name="predicate" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-679">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-679">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-680">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-680">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-681">O <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-681">The <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-682">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-682">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-683">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-683">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-684">O comportamento esperado é que ele retorna o primeiro elemento em `source` que atende à condição em `predicate`, ou um valor padrão se nenhum elemento satisfaz a condição.</span><span class="sxs-lookup"><span data-stu-id="727ab-684">The expected behavior is that it returns the first element in `source` that satisfies the condition in `predicate`, or a default value if no element satisfies the condition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-685">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> , passando um predicado.</span><span class="sxs-lookup"><span data-stu-id="727ab-685">The following code example demonstrates how to use <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> by passing in a predicate.</span></span> <span data-ttu-id="727ab-686">Na segunda consulta, há nenhum elemento na sequência que satisfaz a condição.</span><span class="sxs-lookup"><span data-stu-id="727ab-686">In the second query, there is no element in the sequence that satisfies the condition.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#38](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#38)]
 [!code-vb[System.Linq.Queryable#38](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#38)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-687">
            <paramref name="source" /> ou <paramref name="predicate" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-687">
              <paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GroupBy&lt;TSource,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="727ab-688">Agrupa os elementos de uma sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-688">Groups the elements of a sequence.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GroupBy&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;System.Linq.IGrouping&lt;TKey,TSource&gt;&gt; GroupBy&lt;TSource,TKey&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;class System.Linq.IGrouping`2&lt;!!TKey, !!TSource&gt;&gt; GroupBy&lt;TSource, TKey&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey) (source As IQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey))) As IQueryable(Of IGrouping(Of TKey, TSource))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;System::Linq::IGrouping&lt;TKey, TSource&gt; ^&gt; ^ GroupBy(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member GroupBy : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Key&gt;&gt; -&gt; System.Linq.IQueryable&lt;System.Linq.IGrouping&lt;'Key, 'Source&gt;&gt;" Usage="System.Linq.Queryable.GroupBy (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Linq.IGrouping&lt;TKey,TSource&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-689">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-689">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="727ab-690">O tipo da chave retornada pela função representada em <paramref name="keySelector" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-690">The type of the key returned by the function represented in <paramref name="keySelector" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-691">Um <see cref="T:System.Linq.IQueryable`1" /> cujos elementos serão agrupados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-691">An <see cref="T:System.Linq.IQueryable`1" /> whose elements to group.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="727ab-692">Uma função para extrair a chave de cada elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-692">A function to extract the key for each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-693">Agrupa os elementos de uma sequência de acordo com uma função de seletor de chave especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-693">Groups the elements of a sequence according to a specified key selector function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-694">Um <c>IQueryable&lt;IGrouping&lt;TKey, TSource&gt;&gt;</c> em C# ou <c>IQueryable(Of IGrouping(Of TKey, TSource))</c> no Visual Basic em que cada objeto <see cref="T:System.Linq.IGrouping`2" /> contém uma sequência de objetos e uma chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-694">An <c>IQueryable&lt;IGrouping&lt;TKey, TSource&gt;&gt;</c> in C# or <c>IQueryable(Of IGrouping(Of TKey, TSource))</c> in Visual Basic where each <see cref="T:System.Linq.IGrouping`2" /> object contains a sequence of objects and a key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-695">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-695">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-696">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-696">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-697">O <xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-697">The <xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-698">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-698">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-699">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-699">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-700">O comportamento esperado é que ela agrupa os elementos de `source` por um valor de chave que é obtido invocando `keySelector` em cada elemento.</span><span class="sxs-lookup"><span data-stu-id="727ab-700">The expected behavior is that it groups the elements of `source` by a key value that is obtained by invoking `keySelector` on each element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-701">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> para agrupar os elementos de uma sequência.</span><span class="sxs-lookup"><span data-stu-id="727ab-701">The following code example demonstrates how to use <xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> to group the elements of a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#14)]
 [!code-vb[System.Linq.Queryable#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-702">
            <paramref name="source" /> ou <paramref name="keySelector" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-702">
              <paramref name="source" /> or <paramref name="keySelector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBy&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;System.Linq.IGrouping&lt;TKey,TSource&gt;&gt; GroupBy&lt;TSource,TKey&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;class System.Linq.IGrouping`2&lt;!!TKey, !!TSource&gt;&gt; GroupBy&lt;TSource, TKey&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey) (source As IQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey)), comparer As IEqualityComparer(Of TKey)) As IQueryable(Of IGrouping(Of TKey, TSource))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;System::Linq::IGrouping&lt;TKey, TSource&gt; ^&gt; ^ GroupBy(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member GroupBy : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Key&gt;&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Linq.IQueryable&lt;System.Linq.IGrouping&lt;'Key, 'Source&gt;&gt;" Usage="System.Linq.Queryable.GroupBy (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Linq.IGrouping&lt;TKey,TSource&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-703">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-703">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="727ab-704">O tipo da chave retornada pela função representada em <paramref name="keySelector" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-704">The type of the key returned by the function represented in <paramref name="keySelector" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-705">Um <see cref="T:System.Linq.IQueryable`1" /> cujos elementos serão agrupados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-705">An <see cref="T:System.Linq.IQueryable`1" /> whose elements to group.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="727ab-706">Uma função para extrair a chave de cada elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-706">A function to extract the key for each element.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="727ab-707">Um <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> para comparar chaves.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-707">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-708">Agrupa os elementos de uma sequência de acordo com uma função do seletor de chave especificada e compara as chaves usando um comparador especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-708">Groups the elements of a sequence according to a specified key selector function and compares the keys by using a specified comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-709">Um <c>IQueryable&lt;IGrouping&lt;TKey, TSource&gt;&gt;</c> em C# ou <c>IQueryable(Of IGrouping(Of TKey, TSource))</c> no Visual Basic em que cada <see cref="T:System.Linq.IGrouping`2" /> contém uma sequência de objetos e uma chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-709">An <c>IQueryable&lt;IGrouping&lt;TKey, TSource&gt;&gt;</c> in C# or <c>IQueryable(Of IGrouping(Of TKey, TSource))</c> in Visual Basic where each <see cref="T:System.Linq.IGrouping`2" /> contains a sequence of objects and a key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-710">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-710">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-711">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-711">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-712">O <xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-712">The <xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-713">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-713">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-714">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-714">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-715">O comportamento esperado é que ela agrupa os elementos de `source` por um valor de chave.</span><span class="sxs-lookup"><span data-stu-id="727ab-715">The expected behavior is that it groups the elements of `source` by a key value.</span></span> <span data-ttu-id="727ab-716">O valor da chave é obtido invocando `keySelector` em cada elemento, e valores de chave são comparados usando `comparer`.</span><span class="sxs-lookup"><span data-stu-id="727ab-716">The key value is obtained by invoking `keySelector` on each element, and key values are compared by using `comparer`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-717">
            <paramref name="source" />, <paramref name="keySelector" /> ou <paramref name="comparer" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-717">
              <paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="comparer" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBy&lt;TSource,TKey,TElement&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;System.Linq.IGrouping&lt;TKey,TElement&gt;&gt; GroupBy&lt;TSource,TKey,TElement&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TElement&gt;&gt; elementSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;class System.Linq.IGrouping`2&lt;!!TKey, !!TElement&gt;&gt; GroupBy&lt;TSource, TKey, TElement&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TElement&gt;&gt; elementSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey, TElement) (source As IQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey)), elementSelector As Expression(Of Func(Of TSource, TElement))) As IQueryable(Of IGrouping(Of TKey, TElement))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TElement&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;System::Linq::IGrouping&lt;TKey, TElement&gt; ^&gt; ^ GroupBy(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TElement&gt; ^&gt; ^ elementSelector);" />
      <MemberSignature Language="F#" Value="static member GroupBy : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Key&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Element&gt;&gt; -&gt; System.Linq.IQueryable&lt;System.Linq.IGrouping&lt;'Key, 'Element&gt;&gt;" Usage="System.Linq.Queryable.GroupBy (source, keySelector, elementSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Linq.IGrouping&lt;TKey,TElement&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
        <Parameter Name="elementSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TElement&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-718">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-718">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="727ab-719">O tipo da chave retornada pela função representada em <paramref name="keySelector" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-719">The type of the key returned by the function represented in <paramref name="keySelector" />.</span>
          </span>
        </typeparam>
        <typeparam name="TElement">
          <span data-ttu-id="727ab-720">O tipo dos elementos em cada <see cref="T:System.Linq.IGrouping`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-720">The type of the elements in each <see cref="T:System.Linq.IGrouping`2" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-721">Um <see cref="T:System.Linq.IQueryable`1" /> cujos elementos serão agrupados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-721">An <see cref="T:System.Linq.IQueryable`1" /> whose elements to group.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="727ab-722">Uma função para extrair a chave de cada elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-722">A function to extract the key for each element.</span>
          </span>
        </param>
        <param name="elementSelector">
          <span data-ttu-id="727ab-723">Uma função para mapear cada elemento de origem para um elemento em um <see cref="T:System.Linq.IGrouping`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-723">A function to map each source element to an element in an <see cref="T:System.Linq.IGrouping`2" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-724">Agrupa os elementos de uma sequência de acordo com a função de seletor de chave especificada e projeta os elementos de cada grupo usando uma função especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-724">Groups the elements of a sequence according to a specified key selector function and projects the elements for each group by using a specified function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-725">Um <c>IQueryable&lt;IGrouping&lt;TKey, TElement&gt;&gt;</c> em C# ou <c>IQueryable(Of IGrouping(Of TKey, TElement))</c> no Visual Basic em que cada <see cref="T:System.Linq.IGrouping`2" /> contém uma sequência de objetos de tipo <paramref name="TElement" /> e uma chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-725">An <c>IQueryable&lt;IGrouping&lt;TKey, TElement&gt;&gt;</c> in C# or <c>IQueryable(Of IGrouping(Of TKey, TElement))</c> in Visual Basic where each <see cref="T:System.Linq.IGrouping`2" /> contains a sequence of objects of type <paramref name="TElement" /> and a key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-726">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-726">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-727">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-727">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-728">O <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-728">The <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-729">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-729">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-730">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-730">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-731">O comportamento esperado é que ela agrupa os elementos de `source` por um valor de chave que é obtido invocando `keySelector` em cada elemento.</span><span class="sxs-lookup"><span data-stu-id="727ab-731">The expected behavior is that it groups the elements of `source` by a key value that is obtained by invoking `keySelector` on each element.</span></span> <span data-ttu-id="727ab-732">Ele invoca `elementSelector` em cada elemento para obter um elemento de resultado.</span><span class="sxs-lookup"><span data-stu-id="727ab-732">It invokes `elementSelector` on each element to obtain a result element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-733">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%29> para agrupar os elementos de uma sequência.</span><span class="sxs-lookup"><span data-stu-id="727ab-733">The following code example demonstrates how to use <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%29> to group the elements of a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#39](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#39)]
 [!code-vb[System.Linq.Queryable#39](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#39)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-734">
            <paramref name="source" />, <paramref name="keySelector" /> ou <paramref name="elementSelector" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-734">
              <paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="elementSelector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBy&lt;TSource,TKey,TElement&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;System.Linq.IGrouping&lt;TKey,TElement&gt;&gt; GroupBy&lt;TSource,TKey,TElement&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TElement&gt;&gt; elementSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;class System.Linq.IGrouping`2&lt;!!TKey, !!TElement&gt;&gt; GroupBy&lt;TSource, TKey, TElement&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TElement&gt;&gt; elementSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey, TElement) (source As IQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey)), elementSelector As Expression(Of Func(Of TSource, TElement)), comparer As IEqualityComparer(Of TKey)) As IQueryable(Of IGrouping(Of TKey, TElement))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TElement&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;System::Linq::IGrouping&lt;TKey, TElement&gt; ^&gt; ^ GroupBy(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TElement&gt; ^&gt; ^ elementSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member GroupBy : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Key&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Element&gt;&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Linq.IQueryable&lt;System.Linq.IGrouping&lt;'Key, 'Element&gt;&gt;" Usage="System.Linq.Queryable.GroupBy (source, keySelector, elementSelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Linq.IGrouping&lt;TKey,TElement&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
        <Parameter Name="elementSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TElement&gt;&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-735">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-735">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="727ab-736">O tipo da chave retornada pela função representada em <paramref name="keySelector" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-736">The type of the key returned by the function represented in <paramref name="keySelector" />.</span>
          </span>
        </typeparam>
        <typeparam name="TElement">
          <span data-ttu-id="727ab-737">O tipo dos elementos em cada <see cref="T:System.Linq.IGrouping`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-737">The type of the elements in each <see cref="T:System.Linq.IGrouping`2" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-738">Um <see cref="T:System.Linq.IQueryable`1" /> cujos elementos serão agrupados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-738">An <see cref="T:System.Linq.IQueryable`1" /> whose elements to group.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="727ab-739">Uma função para extrair a chave de cada elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-739">A function to extract the key for each element.</span>
          </span>
        </param>
        <param name="elementSelector">
          <span data-ttu-id="727ab-740">Uma função para mapear cada elemento de origem para um elemento em um <see cref="T:System.Linq.IGrouping`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-740">A function to map each source element to an element in an <see cref="T:System.Linq.IGrouping`2" />.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="727ab-741">Um <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> para comparar chaves.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-741">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-742">Agrupa os elementos de uma sequência e projeta os elementos para cada grupo usando uma função especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-742">Groups the elements of a sequence and projects the elements for each group by using a specified function.</span>
          </span>
          <span data-ttu-id="727ab-743">Os valores de chave são comparados usando um comparador especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-743">Key values are compared by using a specified comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-744">Um <c>IQueryable&lt;IGrouping&lt;TKey, TElement&gt;&gt;</c> em C# ou <c>IQueryable(Of IGrouping(Of TKey, TElement))</c> no Visual Basic em que cada <see cref="T:System.Linq.IGrouping`2" /> contém uma sequência de objetos de tipo <paramref name="TElement" /> e uma chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-744">An <c>IQueryable&lt;IGrouping&lt;TKey, TElement&gt;&gt;</c> in C# or <c>IQueryable(Of IGrouping(Of TKey, TElement))</c> in Visual Basic where each <see cref="T:System.Linq.IGrouping`2" /> contains a sequence of objects of type <paramref name="TElement" /> and a key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-745">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-745">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-746">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-746">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-747">O <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-747">The <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-748">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-748">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-749">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-749">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-750">O comportamento esperado é que ela agrupa os elementos de `source` por um valor de chave que é obtido invocando `keySelector` em cada elemento.</span><span class="sxs-lookup"><span data-stu-id="727ab-750">The expected behavior is that it groups the elements of `source` by a key value that is obtained by invoking `keySelector` on each element.</span></span> <span data-ttu-id="727ab-751">Valores de chave são comparados usando `comparer`.</span><span class="sxs-lookup"><span data-stu-id="727ab-751">Key values are compared by using `comparer`.</span></span> <span data-ttu-id="727ab-752">O `elementSelector` parâmetro é chamado em cada elemento para obter um elemento de resultado.</span><span class="sxs-lookup"><span data-stu-id="727ab-752">The `elementSelector` parameter is invoked on each element to obtain a result element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-753">
            <paramref name="source" /> ou <paramref name="keySelector" /> ou <paramref name="elementSelector" /> ou <paramref name="comparer" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-753">
              <paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="elementSelector" /> or <paramref name="comparer" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBy&lt;TSource,TKey,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; GroupBy&lt;TSource,TKey,TResult&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector, System.Linq.Expressions.Expression&lt;Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TSource&gt;,TResult&gt;&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; GroupBy&lt;TSource, TKey, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TKey, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt;, !!TResult&gt;&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey, TResult) (source As IQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey)), resultSelector As Expression(Of Func(Of TKey, IEnumerable(Of TSource), TResult))) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ GroupBy(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector, System::Linq::Expressions::Expression&lt;Func&lt;TKey, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^, TResult&gt; ^&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member GroupBy : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Key&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Key, seq&lt;'Source&gt;, 'Result&gt;&gt; -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="System.Linq.Queryable.GroupBy (source, keySelector, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
        <Parameter Name="resultSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TSource&gt;,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-754">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-754">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="727ab-755">O tipo da chave retornada pela função representada em <paramref name="keySelector" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-755">The type of the key returned by the function represented in <paramref name="keySelector" />.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="727ab-756">O tipo do valor de resultado retornado por <paramref name="resultSelector" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-756">The type of the result value returned by <paramref name="resultSelector" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-757">Um <see cref="T:System.Linq.IQueryable`1" /> cujos elementos serão agrupados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-757">An <see cref="T:System.Linq.IQueryable`1" /> whose elements to group.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="727ab-758">Uma função para extrair a chave de cada elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-758">A function to extract the key for each element.</span>
          </span>
        </param>
        <param name="resultSelector">
          <span data-ttu-id="727ab-759">Uma função para criar um valor de resultado de cada grupo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-759">A function to create a result value from each group.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-760">Agrupa os elementos de uma sequência de acordo com uma função do seletor de chave especificada e cria um valor de resultado de cada grupo e sua chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-760">Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-761">Um <c>T:System.Linq.IQueryable\`1</c> que tem um argumento de tipo de <paramref name="TResult" /> e no qual cada elemento representa uma projeção sobre um grupo e sua chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-761">An <c>T:System.Linq.IQueryable\`1</c> that has a type argument of <paramref name="TResult" /> and where each element represents a projection over a group and its key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-762">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-762">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-763">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-763">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-764">O <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-764">The <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-765">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-765">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-766">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-766">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-767">O comportamento esperado é que ela agrupa os elementos de `source` por um valor de chave que é obtido invocando `keySelector` em cada elemento.</span><span class="sxs-lookup"><span data-stu-id="727ab-767">The expected behavior is that it groups the elements of `source` by a key value that is obtained by invoking `keySelector` on each element.</span></span> <span data-ttu-id="727ab-768">O `resultSelector` parâmetro é usado para obter um valor de resultado de cada grupo e sua chave.</span><span class="sxs-lookup"><span data-stu-id="727ab-768">The `resultSelector` parameter is used to obtain a result value from each group and its key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-769">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%29> para agrupar os elementos de uma sequência e uma sequência de resultados do tipo de projeto `TResult`.</span><span class="sxs-lookup"><span data-stu-id="727ab-769">The following code example demonstrates how to use <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%29> to group the elements of a sequence and project a sequence of results of type `TResult`.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#15)]
 [!code-vb[System.Linq.Queryable#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-770">
            <paramref name="source" />, <paramref name="keySelector" /> ou <paramref name="resultSelector" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-770">
              <paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="resultSelector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBy&lt;TSource,TKey,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; GroupBy&lt;TSource,TKey,TResult&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector, System.Linq.Expressions.Expression&lt;Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TSource&gt;,TResult&gt;&gt; resultSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; GroupBy&lt;TSource, TKey, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TKey, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt;, !!TResult&gt;&gt; resultSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey, TResult) (source As IQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey)), resultSelector As Expression(Of Func(Of TKey, IEnumerable(Of TSource), TResult)), comparer As IEqualityComparer(Of TKey)) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ GroupBy(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector, System::Linq::Expressions::Expression&lt;Func&lt;TKey, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^, TResult&gt; ^&gt; ^ resultSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member GroupBy : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Key&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Key, seq&lt;'Source&gt;, 'Result&gt;&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="System.Linq.Queryable.GroupBy (source, keySelector, resultSelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
        <Parameter Name="resultSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TSource&gt;,TResult&gt;&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-771">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-771">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="727ab-772">O tipo da chave retornada pela função representada em <paramref name="keySelector" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-772">The type of the key returned by the function represented in <paramref name="keySelector" />.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="727ab-773">O tipo do valor de resultado retornado por <paramref name="resultSelector" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-773">The type of the result value returned by <paramref name="resultSelector" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-774">Um <see cref="T:System.Linq.IQueryable`1" /> cujos elementos serão agrupados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-774">An <see cref="T:System.Linq.IQueryable`1" /> whose elements to group.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="727ab-775">Uma função para extrair a chave de cada elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-775">A function to extract the key for each element.</span>
          </span>
        </param>
        <param name="resultSelector">
          <span data-ttu-id="727ab-776">Uma função para criar um valor de resultado de cada grupo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-776">A function to create a result value from each group.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="727ab-777">Um <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> para comparar chaves.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-777">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-778">Agrupa os elementos de uma sequência de acordo com uma função do seletor de chave especificada e cria um valor de resultado de cada grupo e sua chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-778">Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</span>
          </span>
          <span data-ttu-id="727ab-779">As chaves são comparadas usando um comparador especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-779">Keys are compared by using a specified comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-780">Um <c>T:System.Linq.IQueryable\`1</c> que tem um argumento de tipo de <paramref name="TResult" /> e no qual cada elemento representa uma projeção sobre um grupo e sua chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-780">An <c>T:System.Linq.IQueryable\`1</c> that has a type argument of <paramref name="TResult" /> and where each element represents a projection over a group and its key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-781">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-781">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-782">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-782">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-783">O <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-783">The <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-784">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-784">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-785">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-785">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-786">O comportamento esperado é que ela agrupa os elementos de `source` pelos valores de chave que são obtidos pela invocação `keySelector` em cada elemento.</span><span class="sxs-lookup"><span data-stu-id="727ab-786">The expected behavior is that it groups the elements of `source` by key values that are obtained by invoking `keySelector` on each element.</span></span> <span data-ttu-id="727ab-787">O `comparer` parâmetro é usado para comparar as chaves e o `resultSelector` parâmetro é usado para obter um valor de resultado de cada grupo e sua chave.</span><span class="sxs-lookup"><span data-stu-id="727ab-787">The `comparer` parameter is used to compare keys and the `resultSelector` parameter is used to obtain a result value from each group and its key.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-788">
            <paramref name="source" /> ou <paramref name="keySelector" /> ou <paramref name="resultSelector" /> ou <paramref name="comparer" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-788">
              <paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="resultSelector" /> or <paramref name="comparer" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBy&lt;TSource,TKey,TElement,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; GroupBy&lt;TSource,TKey,TElement,TResult&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TElement&gt;&gt; elementSelector, System.Linq.Expressions.Expression&lt;Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TElement&gt;,TResult&gt;&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; GroupBy&lt;TSource, TKey, TElement, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TElement&gt;&gt; elementSelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TKey, class System.Collections.Generic.IEnumerable`1&lt;!!TElement&gt;, !!TResult&gt;&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey, TElement, TResult) (source As IQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey)), elementSelector As Expression(Of Func(Of TSource, TElement)), resultSelector As Expression(Of Func(Of TKey, IEnumerable(Of TElement), TResult))) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TElement, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ GroupBy(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TElement&gt; ^&gt; ^ elementSelector, System::Linq::Expressions::Expression&lt;Func&lt;TKey, System::Collections::Generic::IEnumerable&lt;TElement&gt; ^, TResult&gt; ^&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member GroupBy : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Key&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Element&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Key, seq&lt;'Element&gt;, 'Result&gt;&gt; -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="System.Linq.Queryable.GroupBy (source, keySelector, elementSelector, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
        <Parameter Name="elementSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TElement&gt;&gt;" />
        <Parameter Name="resultSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TElement&gt;,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-789">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-789">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="727ab-790">O tipo da chave retornada pela função representada em <paramref name="keySelector" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-790">The type of the key returned by the function represented in <paramref name="keySelector" />.</span>
          </span>
        </typeparam>
        <typeparam name="TElement">
          <span data-ttu-id="727ab-791">O tipo dos elementos em cada <see cref="T:System.Linq.IGrouping`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-791">The type of the elements in each <see cref="T:System.Linq.IGrouping`2" />.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="727ab-792">O tipo do valor de resultado retornado por <paramref name="resultSelector" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-792">The type of the result value returned by <paramref name="resultSelector" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-793">Um <see cref="T:System.Linq.IQueryable`1" /> cujos elementos serão agrupados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-793">An <see cref="T:System.Linq.IQueryable`1" /> whose elements to group.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="727ab-794">Uma função para extrair a chave de cada elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-794">A function to extract the key for each element.</span>
          </span>
        </param>
        <param name="elementSelector">
          <span data-ttu-id="727ab-795">Uma função para mapear cada elemento de origem para um elemento em um <see cref="T:System.Linq.IGrouping`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-795">A function to map each source element to an element in an <see cref="T:System.Linq.IGrouping`2" />.</span>
          </span>
        </param>
        <param name="resultSelector">
          <span data-ttu-id="727ab-796">Uma função para criar um valor de resultado de cada grupo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-796">A function to create a result value from each group.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-797">Agrupa os elementos de uma sequência de acordo com uma função do seletor de chave especificada e cria um valor de resultado de cada grupo e sua chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-797">Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</span>
          </span>
          <span data-ttu-id="727ab-798">Os elementos de cada grupo são projetados usando uma função especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-798">The elements of each group are projected by using a specified function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-799">Um <c>T:System.Linq.IQueryable\`1</c> que tem um argumento de tipo de <paramref name="TResult" /> e no qual cada elemento representa uma projeção sobre um grupo e sua chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-799">An <c>T:System.Linq.IQueryable\`1</c> that has a type argument of <paramref name="TResult" /> and where each element represents a projection over a group and its key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-800">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-800">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-801">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-801">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-802">O <xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-802">The <xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-803">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-803">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-804">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-804">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-805">O comportamento esperado é que ela agrupa os elementos de `source` pelos valores de chave que são obtidos pela invocação `keySelector` em cada elemento.</span><span class="sxs-lookup"><span data-stu-id="727ab-805">The expected behavior is that it groups the elements of `source` by key values that are obtained by invoking `keySelector` on each element.</span></span> <span data-ttu-id="727ab-806">O `elementSelector` parâmetro é usado para projetar os elementos de cada grupo e o `resultSelector` parâmetro é usado para obter um valor de resultado de cada grupo e sua chave.</span><span class="sxs-lookup"><span data-stu-id="727ab-806">The `elementSelector` parameter is used to project the elements of each group, and the `resultSelector` parameter is used to obtain a result value from each group and its key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-807">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%29> para agrupar os elementos de uma sequência e uma sequência de resultados do tipo de projeto `TResult`.</span><span class="sxs-lookup"><span data-stu-id="727ab-807">The following code example demonstrates how to use <xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%29> to group the elements of a sequence and project a sequence of results of type `TResult`.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#130](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#130)]
 [!code-vb[System.Linq.Queryable#130](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#130)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-808">
            <paramref name="source" /> ou <paramref name="keySelector" /> ou <paramref name="elementSelector" /> ou <paramref name="resultSelector" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-808">
              <paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="elementSelector" /> or <paramref name="resultSelector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBy&lt;TSource,TKey,TElement,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; GroupBy&lt;TSource,TKey,TElement,TResult&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TElement&gt;&gt; elementSelector, System.Linq.Expressions.Expression&lt;Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TElement&gt;,TResult&gt;&gt; resultSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; GroupBy&lt;TSource, TKey, TElement, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TElement&gt;&gt; elementSelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TKey, class System.Collections.Generic.IEnumerable`1&lt;!!TElement&gt;, !!TResult&gt;&gt; resultSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey, TElement, TResult) (source As IQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey)), elementSelector As Expression(Of Func(Of TSource, TElement)), resultSelector As Expression(Of Func(Of TKey, IEnumerable(Of TElement), TResult)), comparer As IEqualityComparer(Of TKey)) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TElement, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ GroupBy(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TElement&gt; ^&gt; ^ elementSelector, System::Linq::Expressions::Expression&lt;Func&lt;TKey, System::Collections::Generic::IEnumerable&lt;TElement&gt; ^, TResult&gt; ^&gt; ^ resultSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member GroupBy : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Key&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Element&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Key, seq&lt;'Element&gt;, 'Result&gt;&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="System.Linq.Queryable.GroupBy (source, keySelector, elementSelector, resultSelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
        <Parameter Name="elementSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TElement&gt;&gt;" />
        <Parameter Name="resultSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TElement&gt;,TResult&gt;&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-809">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-809">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="727ab-810">O tipo da chave retornada pela função representada em <paramref name="keySelector" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-810">The type of the key returned by the function represented in <paramref name="keySelector" />.</span>
          </span>
        </typeparam>
        <typeparam name="TElement">
          <span data-ttu-id="727ab-811">O tipo dos elementos em cada <see cref="T:System.Linq.IGrouping`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-811">The type of the elements in each <see cref="T:System.Linq.IGrouping`2" />.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="727ab-812">O tipo do valor de resultado retornado por <paramref name="resultSelector" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-812">The type of the result value returned by <paramref name="resultSelector" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-813">Um <see cref="T:System.Linq.IQueryable`1" /> cujos elementos serão agrupados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-813">An <see cref="T:System.Linq.IQueryable`1" /> whose elements to group.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="727ab-814">Uma função para extrair a chave de cada elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-814">A function to extract the key for each element.</span>
          </span>
        </param>
        <param name="elementSelector">
          <span data-ttu-id="727ab-815">Uma função para mapear cada elemento de origem para um elemento em um <see cref="T:System.Linq.IGrouping`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-815">A function to map each source element to an element in an <see cref="T:System.Linq.IGrouping`2" />.</span>
          </span>
        </param>
        <param name="resultSelector">
          <span data-ttu-id="727ab-816">Uma função para criar um valor de resultado de cada grupo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-816">A function to create a result value from each group.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="727ab-817">Um <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> para comparar chaves.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-817">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-818">Agrupa os elementos de uma sequência de acordo com uma função do seletor de chave especificada e cria um valor de resultado de cada grupo e sua chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-818">Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</span>
          </span>
          <span data-ttu-id="727ab-819">As chaves são comparadas usando um comparador especificado e os elementos de cada grupo são projetados usando uma função especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-819">Keys are compared by using a specified comparer and the elements of each group are projected by using a specified function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-820">Um <c>T:System.Linq.IQueryable\`1</c> que tem um argumento de tipo de <paramref name="TResult" /> e no qual cada elemento representa uma projeção sobre um grupo e sua chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-820">An <c>T:System.Linq.IQueryable\`1</c> that has a type argument of <paramref name="TResult" /> and where each element represents a projection over a group and its key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-821">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-821">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-822">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-822">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-823">O <xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-823">The <xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-824">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-824">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-825">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-825">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-826">O comportamento esperado é que ela agrupa os elementos de `source` pelos valores de chave que são obtidos pela invocação `keySelector` em cada elemento.</span><span class="sxs-lookup"><span data-stu-id="727ab-826">The expected behavior is that it groups the elements of `source` by key values that are obtained by invoking `keySelector` on each element.</span></span> <span data-ttu-id="727ab-827">O `comparer` parâmetro é usado para comparar valores de chave.</span><span class="sxs-lookup"><span data-stu-id="727ab-827">The `comparer` parameter is used to compare key values.</span></span> <span data-ttu-id="727ab-828">O `elementSelector` parâmetro é usado para projetar os elementos de cada grupo e o `resultSelector` parâmetro é usado para obter um valor de resultado de cada grupo e sua chave.</span><span class="sxs-lookup"><span data-stu-id="727ab-828">The `elementSelector` parameter is used to project the elements of each group, and the `resultSelector` parameter is used to obtain a result value from each group and its key.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-829">
            <paramref name="source" /> ou <paramref name="keySelector" /> ou <paramref name="elementSelector" /> ou <paramref name="resultSelector" /> ou <paramref name="comparer" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-829">
              <paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="elementSelector" /> or <paramref name="resultSelector" /> or <paramref name="comparer" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GroupJoin&lt;TOuter,TInner,TKey,TResult&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="727ab-830">Correlaciona os elementos de duas sequências com base na igualdade de chaves e agrupa os resultados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-830">Correlates the elements of two sequences based on key equality and groups the results.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GroupJoin&lt;TOuter,TInner,TKey,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; GroupJoin&lt;TOuter,TInner,TKey,TResult&gt; (this System.Linq.IQueryable&lt;TOuter&gt; outer, System.Collections.Generic.IEnumerable&lt;TInner&gt; inner, System.Linq.Expressions.Expression&lt;Func&lt;TOuter,TKey&gt;&gt; outerKeySelector, System.Linq.Expressions.Expression&lt;Func&lt;TInner,TKey&gt;&gt; innerKeySelector, System.Linq.Expressions.Expression&lt;Func&lt;TOuter,System.Collections.Generic.IEnumerable&lt;TInner&gt;,TResult&gt;&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TOuter&gt; outer, class System.Collections.Generic.IEnumerable`1&lt;!!TInner&gt; inner, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TOuter, !!TKey&gt;&gt; outerKeySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TInner, !!TKey&gt;&gt; innerKeySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TOuter, class System.Collections.Generic.IEnumerable`1&lt;!!TInner&gt;, !!TResult&gt;&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupJoin(Of TOuter, TInner, TKey, TResult) (outer As IQueryable(Of TOuter), inner As IEnumerable(Of TInner), outerKeySelector As Expression(Of Func(Of TOuter, TKey)), innerKeySelector As Expression(Of Func(Of TInner, TKey)), resultSelector As Expression(Of Func(Of TOuter, IEnumerable(Of TInner), TResult))) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOuter, typename TInner, typename TKey, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ GroupJoin(System::Linq::IQueryable&lt;TOuter&gt; ^ outer, System::Collections::Generic::IEnumerable&lt;TInner&gt; ^ inner, System::Linq::Expressions::Expression&lt;Func&lt;TOuter, TKey&gt; ^&gt; ^ outerKeySelector, System::Linq::Expressions::Expression&lt;Func&lt;TInner, TKey&gt; ^&gt; ^ innerKeySelector, System::Linq::Expressions::Expression&lt;Func&lt;TOuter, System::Collections::Generic::IEnumerable&lt;TInner&gt; ^, TResult&gt; ^&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member GroupJoin : System.Linq.IQueryable&lt;'Outer&gt; * seq&lt;'Inner&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Outer, 'Key&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Inner, 'Key&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Outer, seq&lt;'Inner&gt;, 'Result&gt;&gt; -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="System.Linq.Queryable.GroupJoin (outer, inner, outerKeySelector, innerKeySelector, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOuter" />
        <TypeParameter Name="TInner" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="outer" Type="System.Linq.IQueryable&lt;TOuter&gt;" RefType="this" />
        <Parameter Name="inner" Type="System.Collections.Generic.IEnumerable&lt;TInner&gt;" />
        <Parameter Name="outerKeySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TOuter,TKey&gt;&gt;" />
        <Parameter Name="innerKeySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TInner,TKey&gt;&gt;" />
        <Parameter Name="resultSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TOuter,System.Collections.Generic.IEnumerable&lt;TInner&gt;,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOuter">
          <span data-ttu-id="727ab-831">O tipo dos elementos da primeira sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-831">The type of the elements of the first sequence.</span>
          </span>
        </typeparam>
        <typeparam name="TInner">
          <span data-ttu-id="727ab-832">O tipo dos elementos da segunda sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-832">The type of the elements of the second sequence.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="727ab-833">O tipo das chaves retornadas pelas funções de seletor de chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-833">The type of the keys returned by the key selector functions.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="727ab-834">O tipo dos elementos de resultado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-834">The type of the result elements.</span>
          </span>
        </typeparam>
        <param name="outer">
          <span data-ttu-id="727ab-835">A primeira sequência a ser ingressada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-835">The first sequence to join.</span>
          </span>
        </param>
        <param name="inner">
          <span data-ttu-id="727ab-836">A sequência a ser ingressada à primeira sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-836">The sequence to join to the first sequence.</span>
          </span>
        </param>
        <param name="outerKeySelector">
          <span data-ttu-id="727ab-837">Uma função para extrair a chave de junção de cada elemento da primeira sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-837">A function to extract the join key from each element of the first sequence.</span>
          </span>
        </param>
        <param name="innerKeySelector">
          <span data-ttu-id="727ab-838">Uma função para extrair a chave de junção de cada elemento da segunda sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-838">A function to extract the join key from each element of the second sequence.</span>
          </span>
        </param>
        <param name="resultSelector">
          <span data-ttu-id="727ab-839">Uma função para criar um elemento de resultado de um elemento da primeira sequência e uma coleção de elementos correspondentes da segunda sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-839">A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-840">Correlaciona os elementos de duas sequências com base na igualdade de chaves e agrupa os resultados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-840">Correlates the elements of two sequences based on key equality and groups the results.</span>
          </span>
          <span data-ttu-id="727ab-841">O comparador de igualdade padrão é usado para comparar chaves.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-841">The default equality comparer is used to compare keys.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-842">Um <see cref="T:System.Linq.IQueryable`1" /> que contém elementos do tipo <paramref name="TResult" /> obtidos pela execução de uma junção agrupada em duas sequências.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-842">An <see cref="T:System.Linq.IQueryable`1" /> that contains elements of type <paramref name="TResult" /> obtained by performing a grouped join on two sequences.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-843">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-843">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-844">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-844">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-845">O <xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-845">The <xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-846">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `outer` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-846">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `outer` parameter.</span></span>  
  
 <span data-ttu-id="727ab-847">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%29> depende da implementação do tipo do `outer` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-847">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%29> depends on the implementation of the type of the `outer` parameter.</span></span> <span data-ttu-id="727ab-848">O comportamento esperado é que o `outerKeySelector` e `innerKeySelector` funções são usadas para extrair as chaves de `outer` e `inner`, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="727ab-848">The expected behavior is that the `outerKeySelector` and `innerKeySelector` functions are used to extract keys from `outer` and `inner`, respectively.</span></span> <span data-ttu-id="727ab-849">Essas chaves são comparadas quanto à igualdade corresponder a cada elemento na `outer` com zero ou mais elementos de `inner`.</span><span class="sxs-lookup"><span data-stu-id="727ab-849">These keys are compared for equality to match each element in `outer` with zero or more elements from `inner`.</span></span> <span data-ttu-id="727ab-850">Em seguida, a `resultSelector` função é invocada para projetar um objeto de resultado de cada grupo de elementos correlacionados.</span><span class="sxs-lookup"><span data-stu-id="727ab-850">Then the `resultSelector` function is invoked to project a result object from each group of correlated elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-851">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%29> para realizar uma junção agrupada em duas sequências.</span><span class="sxs-lookup"><span data-stu-id="727ab-851">The following code example demonstrates how to use <xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%29> to perform a grouped join on two sequences.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#40](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#40)]
 [!code-vb[System.Linq.Queryable#40](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-852">
            <paramref name="outer" /> ou <paramref name="inner" /> ou <paramref name="outerKeySelector" /> ou <paramref name="innerKeySelector" /> ou <paramref name="resultSelector" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-852">
              <paramref name="outer" /> or <paramref name="inner" /> or <paramref name="outerKeySelector" /> or <paramref name="innerKeySelector" /> or <paramref name="resultSelector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin&lt;TOuter,TInner,TKey,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; GroupJoin&lt;TOuter,TInner,TKey,TResult&gt; (this System.Linq.IQueryable&lt;TOuter&gt; outer, System.Collections.Generic.IEnumerable&lt;TInner&gt; inner, System.Linq.Expressions.Expression&lt;Func&lt;TOuter,TKey&gt;&gt; outerKeySelector, System.Linq.Expressions.Expression&lt;Func&lt;TInner,TKey&gt;&gt; innerKeySelector, System.Linq.Expressions.Expression&lt;Func&lt;TOuter,System.Collections.Generic.IEnumerable&lt;TInner&gt;,TResult&gt;&gt; resultSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TOuter&gt; outer, class System.Collections.Generic.IEnumerable`1&lt;!!TInner&gt; inner, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TOuter, !!TKey&gt;&gt; outerKeySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TInner, !!TKey&gt;&gt; innerKeySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TOuter, class System.Collections.Generic.IEnumerable`1&lt;!!TInner&gt;, !!TResult&gt;&gt; resultSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupJoin(Of TOuter, TInner, TKey, TResult) (outer As IQueryable(Of TOuter), inner As IEnumerable(Of TInner), outerKeySelector As Expression(Of Func(Of TOuter, TKey)), innerKeySelector As Expression(Of Func(Of TInner, TKey)), resultSelector As Expression(Of Func(Of TOuter, IEnumerable(Of TInner), TResult)), comparer As IEqualityComparer(Of TKey)) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOuter, typename TInner, typename TKey, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ GroupJoin(System::Linq::IQueryable&lt;TOuter&gt; ^ outer, System::Collections::Generic::IEnumerable&lt;TInner&gt; ^ inner, System::Linq::Expressions::Expression&lt;Func&lt;TOuter, TKey&gt; ^&gt; ^ outerKeySelector, System::Linq::Expressions::Expression&lt;Func&lt;TInner, TKey&gt; ^&gt; ^ innerKeySelector, System::Linq::Expressions::Expression&lt;Func&lt;TOuter, System::Collections::Generic::IEnumerable&lt;TInner&gt; ^, TResult&gt; ^&gt; ^ resultSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member GroupJoin : System.Linq.IQueryable&lt;'Outer&gt; * seq&lt;'Inner&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Outer, 'Key&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Inner, 'Key&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Outer, seq&lt;'Inner&gt;, 'Result&gt;&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="System.Linq.Queryable.GroupJoin (outer, inner, outerKeySelector, innerKeySelector, resultSelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOuter" />
        <TypeParameter Name="TInner" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="outer" Type="System.Linq.IQueryable&lt;TOuter&gt;" RefType="this" />
        <Parameter Name="inner" Type="System.Collections.Generic.IEnumerable&lt;TInner&gt;" />
        <Parameter Name="outerKeySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TOuter,TKey&gt;&gt;" />
        <Parameter Name="innerKeySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TInner,TKey&gt;&gt;" />
        <Parameter Name="resultSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TOuter,System.Collections.Generic.IEnumerable&lt;TInner&gt;,TResult&gt;&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOuter">
          <span data-ttu-id="727ab-853">O tipo dos elementos da primeira sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-853">The type of the elements of the first sequence.</span>
          </span>
        </typeparam>
        <typeparam name="TInner">
          <span data-ttu-id="727ab-854">O tipo dos elementos da segunda sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-854">The type of the elements of the second sequence.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="727ab-855">O tipo das chaves retornadas pelas funções de seletor de chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-855">The type of the keys returned by the key selector functions.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="727ab-856">O tipo dos elementos de resultado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-856">The type of the result elements.</span>
          </span>
        </typeparam>
        <param name="outer">
          <span data-ttu-id="727ab-857">A primeira sequência a ser ingressada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-857">The first sequence to join.</span>
          </span>
        </param>
        <param name="inner">
          <span data-ttu-id="727ab-858">A sequência a ser ingressada à primeira sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-858">The sequence to join to the first sequence.</span>
          </span>
        </param>
        <param name="outerKeySelector">
          <span data-ttu-id="727ab-859">Uma função para extrair a chave de junção de cada elemento da primeira sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-859">A function to extract the join key from each element of the first sequence.</span>
          </span>
        </param>
        <param name="innerKeySelector">
          <span data-ttu-id="727ab-860">Uma função para extrair a chave de junção de cada elemento da segunda sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-860">A function to extract the join key from each element of the second sequence.</span>
          </span>
        </param>
        <param name="resultSelector">
          <span data-ttu-id="727ab-861">Uma função para criar um elemento de resultado de um elemento da primeira sequência e uma coleção de elementos correspondentes da segunda sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-861">A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="727ab-862">Um comparador para executar hash e comparar chaves.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-862">A comparer to hash and compare keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-863">Correlaciona os elementos de duas sequências com base na igualdade de chaves e agrupa os resultados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-863">Correlates the elements of two sequences based on key equality and groups the results.</span>
          </span>
          <span data-ttu-id="727ab-864">Um <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> especificado é usado para comparar chaves.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-864">A specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> is used to compare keys.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-865">Um <see cref="T:System.Linq.IQueryable`1" /> que contém elementos do tipo <paramref name="TResult" /> obtidos pela execução de uma junção agrupada em duas sequências.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-865">An <see cref="T:System.Linq.IQueryable`1" /> that contains elements of type <paramref name="TResult" /> obtained by performing a grouped join on two sequences.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-866">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-866">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-867">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-867">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-868">O <xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%602%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%602%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-868">The <xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%602%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%602%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-869">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `outer` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-869">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `outer` parameter.</span></span>  
  
 <span data-ttu-id="727ab-870">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%602%7D%29> depende da implementação do tipo do `outer` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-870">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%602%7D%29> depends on the implementation of the type of the `outer` parameter.</span></span> <span data-ttu-id="727ab-871">O comportamento esperado é que o `outerKeySelector` e `innerKeySelector` funções são usadas para extrair as chaves de `outer` e `inner`, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="727ab-871">The expected behavior is that the `outerKeySelector` and `innerKeySelector` functions are used to extract keys from `outer` and `inner`, respectively.</span></span> <span data-ttu-id="727ab-872">Essas chaves são comparadas quanto à igualdade usando `comparer`.</span><span class="sxs-lookup"><span data-stu-id="727ab-872">These keys are compared for equality by using `comparer`.</span></span> <span data-ttu-id="727ab-873">O resultado das comparações é usado para corresponder cada elemento na `outer` com zero ou mais elementos de `inner`.</span><span class="sxs-lookup"><span data-stu-id="727ab-873">The outcome of the comparisons is used to match each element in `outer` with zero or more elements from `inner`.</span></span> <span data-ttu-id="727ab-874">Em seguida, a `resultSelector` função é invocada para projetar um objeto de resultado de cada grupo de elementos correlacionados.</span><span class="sxs-lookup"><span data-stu-id="727ab-874">Then the `resultSelector` function is invoked to project a result object from each group of correlated elements.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-875">
            <paramref name="outer" /> ou <paramref name="inner" /> ou <paramref name="outerKeySelector" /> ou <paramref name="innerKeySelector" /> ou <paramref name="resultSelector" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-875">
              <paramref name="outer" /> or <paramref name="inner" /> or <paramref name="outerKeySelector" /> or <paramref name="innerKeySelector" /> or <paramref name="resultSelector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Intersect&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="727ab-876">Produz a interseção de conjunto de duas sequências.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-876">Produces the set intersection of two sequences.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Intersect&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Intersect&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source1, System.Collections.Generic.IEnumerable&lt;TSource&gt; source2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Intersect&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source1, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Intersect(Of TSource) (source1 As IQueryable(Of TSource), source2 As IEnumerable(Of TSource)) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Intersect(System::Linq::IQueryable&lt;TSource&gt; ^ source1, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source2);" />
      <MemberSignature Language="F#" Value="static member Intersect : System.Linq.IQueryable&lt;'Source&gt; * seq&lt;'Source&gt; -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.Intersect (source1, source2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="source2" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-877">O tipo dos elementos das sequências de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-877">The type of the elements of the input sequences.</span>
          </span>
        </typeparam>
        <param name="source1">
          <span data-ttu-id="727ab-878">Uma sequência cujos elementos distintos que também aparecem em <paramref name="source2" /> são retornados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-878">A sequence whose distinct elements that also appear in <paramref name="source2" /> are returned.</span>
          </span>
        </param>
        <param name="source2">
          <span data-ttu-id="727ab-879">Uma sequência cujos elementos distintos que também aparecem na primeira sequência são retornados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-879">A sequence whose distinct elements that also appear in the first sequence are returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-880">Produz a interseção de conjunto de duas sequências usando o comparador de igualdade padrão para comparar os valores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-880">Produces the set intersection of two sequences by using the default equality comparer to compare values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-881">Uma sequência que contém a interseção de conjunto das duas sequências.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-881">A sequence that contains the set intersection of the two sequences.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-882">O <xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-882">The <xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-883">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source1` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-883">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source1` parameter.</span></span>  
  
 <span data-ttu-id="727ab-884">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> depende da implementação do tipo do `source1` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-884">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> depends on the implementation of the type of the `source1` parameter.</span></span> <span data-ttu-id="727ab-885">O comportamento esperado é que todos os elementos em `source1` que também estejam no `source2` são retornados.</span><span class="sxs-lookup"><span data-stu-id="727ab-885">The expected behavior is that all the elements in `source1` that are also in `source2` are returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-886">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> para retornar os elementos que aparecem em cada uma das duas sequências.</span><span class="sxs-lookup"><span data-stu-id="727ab-886">The following code example demonstrates how to use <xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> to return the elements that appear in each of two sequences.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#41](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#41)]
 [!code-vb[System.Linq.Queryable#41](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#41)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-887">
            <paramref name="source1" /> ou <paramref name="source2" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-887">
              <paramref name="source1" /> or <paramref name="source2" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Intersect&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Intersect&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source1, System.Collections.Generic.IEnumerable&lt;TSource&gt; source2, System.Collections.Generic.IEqualityComparer&lt;TSource&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Intersect&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source1, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source2, class System.Collections.Generic.IEqualityComparer`1&lt;!!TSource&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Intersect(Of TSource) (source1 As IQueryable(Of TSource), source2 As IEnumerable(Of TSource), comparer As IEqualityComparer(Of TSource)) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Intersect(System::Linq::IQueryable&lt;TSource&gt; ^ source1, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source2, System::Collections::Generic::IEqualityComparer&lt;TSource&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Intersect : System.Linq.IQueryable&lt;'Source&gt; * seq&lt;'Source&gt; * System.Collections.Generic.IEqualityComparer&lt;'Source&gt; -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.Intersect (source1, source2, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="source2" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-888">O tipo dos elementos das sequências de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-888">The type of the elements of the input sequences.</span>
          </span>
        </typeparam>
        <param name="source1">
          <span data-ttu-id="727ab-889">Um <see cref="T:System.Linq.IQueryable`1" /> cujos elementos distintos que também aparecem em <paramref name="source2" /> são retornados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-889">An <see cref="T:System.Linq.IQueryable`1" /> whose distinct elements that also appear in <paramref name="source2" /> are returned.</span>
          </span>
        </param>
        <param name="source2">
          <span data-ttu-id="727ab-890">Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> cujos elementos distintos que também aparecem na primeira sequência são retornados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-890">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose distinct elements that also appear in the first sequence are returned.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="727ab-891">Um <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> para comparar valores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-891">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-892">Produz a interseção de conjunto de duas sequências usando o <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> especificado para comparar os valores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-892">Produces the set intersection of two sequences by using the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-893">Um <see cref="T:System.Linq.IQueryable`1" /> que contém a interseção de conjunto de duas sequências.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-893">An <see cref="T:System.Linq.IQueryable`1" /> that contains the set intersection of the two sequences.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-894">O <xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-894">The <xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-895">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source1` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-895">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source1` parameter.</span></span>  
  
 <span data-ttu-id="727ab-896">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> depende da implementação do tipo do `source1` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-896">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> depends on the implementation of the type of the `source1` parameter.</span></span> <span data-ttu-id="727ab-897">O comportamento esperado é que todos os elementos em `source1` que também estejam no `source2` são retornados.</span><span class="sxs-lookup"><span data-stu-id="727ab-897">The expected behavior is that all the elements in `source1` that are also in `source2` are returned.</span></span> <span data-ttu-id="727ab-898">O `comparer` parâmetro é usado para comparar elementos.</span><span class="sxs-lookup"><span data-stu-id="727ab-898">The `comparer` parameter is used to compare elements.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-899">
            <paramref name="source1" /> ou <paramref name="source2" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-899">
              <paramref name="source1" /> or <paramref name="source2" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Join&lt;TOuter,TInner,TKey,TResult&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="727ab-900">Correlaciona os elementos de duas sequências com base em chaves de correspondência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-900">Correlates the elements of two sequences based on matching keys.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Join&lt;TOuter,TInner,TKey,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; Join&lt;TOuter,TInner,TKey,TResult&gt; (this System.Linq.IQueryable&lt;TOuter&gt; outer, System.Collections.Generic.IEnumerable&lt;TInner&gt; inner, System.Linq.Expressions.Expression&lt;Func&lt;TOuter,TKey&gt;&gt; outerKeySelector, System.Linq.Expressions.Expression&lt;Func&lt;TInner,TKey&gt;&gt; innerKeySelector, System.Linq.Expressions.Expression&lt;Func&lt;TOuter,TInner,TResult&gt;&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; Join&lt;TOuter, TInner, TKey, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TOuter&gt; outer, class System.Collections.Generic.IEnumerable`1&lt;!!TInner&gt; inner, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TOuter, !!TKey&gt;&gt; outerKeySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TInner, !!TKey&gt;&gt; innerKeySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TOuter, !!TInner, !!TResult&gt;&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Join(Of TOuter, TInner, TKey, TResult) (outer As IQueryable(Of TOuter), inner As IEnumerable(Of TInner), outerKeySelector As Expression(Of Func(Of TOuter, TKey)), innerKeySelector As Expression(Of Func(Of TInner, TKey)), resultSelector As Expression(Of Func(Of TOuter, TInner, TResult))) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOuter, typename TInner, typename TKey, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ Join(System::Linq::IQueryable&lt;TOuter&gt; ^ outer, System::Collections::Generic::IEnumerable&lt;TInner&gt; ^ inner, System::Linq::Expressions::Expression&lt;Func&lt;TOuter, TKey&gt; ^&gt; ^ outerKeySelector, System::Linq::Expressions::Expression&lt;Func&lt;TInner, TKey&gt; ^&gt; ^ innerKeySelector, System::Linq::Expressions::Expression&lt;Func&lt;TOuter, TInner, TResult&gt; ^&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member Join : System.Linq.IQueryable&lt;'Outer&gt; * seq&lt;'Inner&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Outer, 'Key&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Inner, 'Key&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Outer, 'Inner, 'Result&gt;&gt; -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="System.Linq.Queryable.Join (outer, inner, outerKeySelector, innerKeySelector, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOuter" />
        <TypeParameter Name="TInner" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="outer" Type="System.Linq.IQueryable&lt;TOuter&gt;" RefType="this" />
        <Parameter Name="inner" Type="System.Collections.Generic.IEnumerable&lt;TInner&gt;" />
        <Parameter Name="outerKeySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TOuter,TKey&gt;&gt;" />
        <Parameter Name="innerKeySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TInner,TKey&gt;&gt;" />
        <Parameter Name="resultSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TOuter,TInner,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOuter">
          <span data-ttu-id="727ab-901">O tipo dos elementos da primeira sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-901">The type of the elements of the first sequence.</span>
          </span>
        </typeparam>
        <typeparam name="TInner">
          <span data-ttu-id="727ab-902">O tipo dos elementos da segunda sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-902">The type of the elements of the second sequence.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="727ab-903">O tipo das chaves retornadas pelas funções de seletor de chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-903">The type of the keys returned by the key selector functions.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="727ab-904">O tipo dos elementos de resultado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-904">The type of the result elements.</span>
          </span>
        </typeparam>
        <param name="outer">
          <span data-ttu-id="727ab-905">A primeira sequência a ser ingressada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-905">The first sequence to join.</span>
          </span>
        </param>
        <param name="inner">
          <span data-ttu-id="727ab-906">A sequência a ser ingressada à primeira sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-906">The sequence to join to the first sequence.</span>
          </span>
        </param>
        <param name="outerKeySelector">
          <span data-ttu-id="727ab-907">Uma função para extrair a chave de junção de cada elemento da primeira sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-907">A function to extract the join key from each element of the first sequence.</span>
          </span>
        </param>
        <param name="innerKeySelector">
          <span data-ttu-id="727ab-908">Uma função para extrair a chave de junção de cada elemento da segunda sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-908">A function to extract the join key from each element of the second sequence.</span>
          </span>
        </param>
        <param name="resultSelector">
          <span data-ttu-id="727ab-909">Uma função para criar um elemento de resultado de dois elementos correspondentes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-909">A function to create a result element from two matching elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-910">Correlaciona os elementos de duas sequências com base em chaves de correspondência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-910">Correlates the elements of two sequences based on matching keys.</span>
          </span>
          <span data-ttu-id="727ab-911">O comparador de igualdade padrão é usado para comparar chaves.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-911">The default equality comparer is used to compare keys.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-912">Um <see cref="T:System.Linq.IQueryable`1" /> com elementos do tipo <paramref name="TResult" /> obtidos pela execução de uma junção interna em duas sequências.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-912">An <see cref="T:System.Linq.IQueryable`1" /> that has elements of type <paramref name="TResult" /> obtained by performing an inner join on two sequences.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-913">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-913">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-914">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-914">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-915">O <xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-915">The <xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-916">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `outer` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-916">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `outer` parameter.</span></span>  
  
 <span data-ttu-id="727ab-917">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%29> depende da implementação do tipo do `outer` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-917">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%29> depends on the implementation of the type of the `outer` parameter.</span></span> <span data-ttu-id="727ab-918">O comportamento esperado é de uma junção interna.</span><span class="sxs-lookup"><span data-stu-id="727ab-918">The expected behavior is that of an inner join.</span></span> <span data-ttu-id="727ab-919">O `outerKeySelector` e `innerKeySelector` funções são usadas para extrair as chaves de `outer` e `inner`, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="727ab-919">The `outerKeySelector` and `innerKeySelector` functions are used to extract keys from `outer` and `inner`, respectively.</span></span> <span data-ttu-id="727ab-920">Essas chaves são comparadas quanto à igualdade corresponder os elementos de cada sequência.</span><span class="sxs-lookup"><span data-stu-id="727ab-920">These keys are compared for equality to match elements from each sequence.</span></span> <span data-ttu-id="727ab-921">Um par de elementos é armazenado para cada elemento na `inner` que corresponde a um elemento em `outer`.</span><span class="sxs-lookup"><span data-stu-id="727ab-921">A pair of elements is stored for each element in `inner` that matches an element in `outer`.</span></span> <span data-ttu-id="727ab-922">Em seguida, a `resultSelector` função é invocada para projetar um objeto de resultado de cada par de elementos correspondentes.</span><span class="sxs-lookup"><span data-stu-id="727ab-922">Then the `resultSelector` function is invoked to project a result object from each pair of matching elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-923">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%29> para realizar uma junção interna de duas sequências com base em uma chave comum.</span><span class="sxs-lookup"><span data-stu-id="727ab-923">The following code example demonstrates how to use <xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%29> to perform an inner join of two sequences based on a common key.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#42](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#42)]
 [!code-vb[System.Linq.Queryable#42](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-924">
            <paramref name="outer" /> ou <paramref name="inner" /> ou <paramref name="outerKeySelector" /> ou <paramref name="innerKeySelector" /> ou <paramref name="resultSelector" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-924">
              <paramref name="outer" /> or <paramref name="inner" /> or <paramref name="outerKeySelector" /> or <paramref name="innerKeySelector" /> or <paramref name="resultSelector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Join&lt;TOuter,TInner,TKey,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; Join&lt;TOuter,TInner,TKey,TResult&gt; (this System.Linq.IQueryable&lt;TOuter&gt; outer, System.Collections.Generic.IEnumerable&lt;TInner&gt; inner, System.Linq.Expressions.Expression&lt;Func&lt;TOuter,TKey&gt;&gt; outerKeySelector, System.Linq.Expressions.Expression&lt;Func&lt;TInner,TKey&gt;&gt; innerKeySelector, System.Linq.Expressions.Expression&lt;Func&lt;TOuter,TInner,TResult&gt;&gt; resultSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; Join&lt;TOuter, TInner, TKey, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TOuter&gt; outer, class System.Collections.Generic.IEnumerable`1&lt;!!TInner&gt; inner, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TOuter, !!TKey&gt;&gt; outerKeySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TInner, !!TKey&gt;&gt; innerKeySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TOuter, !!TInner, !!TResult&gt;&gt; resultSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Join(Of TOuter, TInner, TKey, TResult) (outer As IQueryable(Of TOuter), inner As IEnumerable(Of TInner), outerKeySelector As Expression(Of Func(Of TOuter, TKey)), innerKeySelector As Expression(Of Func(Of TInner, TKey)), resultSelector As Expression(Of Func(Of TOuter, TInner, TResult)), comparer As IEqualityComparer(Of TKey)) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOuter, typename TInner, typename TKey, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ Join(System::Linq::IQueryable&lt;TOuter&gt; ^ outer, System::Collections::Generic::IEnumerable&lt;TInner&gt; ^ inner, System::Linq::Expressions::Expression&lt;Func&lt;TOuter, TKey&gt; ^&gt; ^ outerKeySelector, System::Linq::Expressions::Expression&lt;Func&lt;TInner, TKey&gt; ^&gt; ^ innerKeySelector, System::Linq::Expressions::Expression&lt;Func&lt;TOuter, TInner, TResult&gt; ^&gt; ^ resultSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Join : System.Linq.IQueryable&lt;'Outer&gt; * seq&lt;'Inner&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Outer, 'Key&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Inner, 'Key&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Outer, 'Inner, 'Result&gt;&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="System.Linq.Queryable.Join (outer, inner, outerKeySelector, innerKeySelector, resultSelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOuter" />
        <TypeParameter Name="TInner" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="outer" Type="System.Linq.IQueryable&lt;TOuter&gt;" RefType="this" />
        <Parameter Name="inner" Type="System.Collections.Generic.IEnumerable&lt;TInner&gt;" />
        <Parameter Name="outerKeySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TOuter,TKey&gt;&gt;" />
        <Parameter Name="innerKeySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TInner,TKey&gt;&gt;" />
        <Parameter Name="resultSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TOuter,TInner,TResult&gt;&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOuter">
          <span data-ttu-id="727ab-925">O tipo dos elementos da primeira sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-925">The type of the elements of the first sequence.</span>
          </span>
        </typeparam>
        <typeparam name="TInner">
          <span data-ttu-id="727ab-926">O tipo dos elementos da segunda sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-926">The type of the elements of the second sequence.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="727ab-927">O tipo das chaves retornadas pelas funções de seletor de chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-927">The type of the keys returned by the key selector functions.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="727ab-928">O tipo dos elementos de resultado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-928">The type of the result elements.</span>
          </span>
        </typeparam>
        <param name="outer">
          <span data-ttu-id="727ab-929">A primeira sequência a ser ingressada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-929">The first sequence to join.</span>
          </span>
        </param>
        <param name="inner">
          <span data-ttu-id="727ab-930">A sequência a ser ingressada à primeira sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-930">The sequence to join to the first sequence.</span>
          </span>
        </param>
        <param name="outerKeySelector">
          <span data-ttu-id="727ab-931">Uma função para extrair a chave de junção de cada elemento da primeira sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-931">A function to extract the join key from each element of the first sequence.</span>
          </span>
        </param>
        <param name="innerKeySelector">
          <span data-ttu-id="727ab-932">Uma função para extrair a chave de junção de cada elemento da segunda sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-932">A function to extract the join key from each element of the second sequence.</span>
          </span>
        </param>
        <param name="resultSelector">
          <span data-ttu-id="727ab-933">Uma função para criar um elemento de resultado de dois elementos correspondentes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-933">A function to create a result element from two matching elements.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="727ab-934">Um <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> para executar hash e comparar chaves.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-934">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to hash and compare keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-935">Correlaciona os elementos de duas sequências com base em chaves de correspondência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-935">Correlates the elements of two sequences based on matching keys.</span>
          </span>
          <span data-ttu-id="727ab-936">Um <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> especificado é usado para comparar chaves.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-936">A specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> is used to compare keys.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-937">Um <see cref="T:System.Linq.IQueryable`1" /> com elementos do tipo <paramref name="TResult" /> obtidos pela execução de uma junção interna em duas sequências.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-937">An <see cref="T:System.Linq.IQueryable`1" /> that has elements of type <paramref name="TResult" /> obtained by performing an inner join on two sequences.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-938">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-938">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-939">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-939">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-940">O <xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%602%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%602%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-940">The <xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%602%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%602%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-941">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `outer` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-941">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `outer` parameter.</span></span>  
  
 <span data-ttu-id="727ab-942">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%602%7D%29> depende da implementação do tipo do `outer` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-942">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%602%7D%29> depends on the implementation of the type of the `outer` parameter.</span></span> <span data-ttu-id="727ab-943">O comportamento esperado é de uma junção interna.</span><span class="sxs-lookup"><span data-stu-id="727ab-943">The expected behavior is that of an inner join.</span></span> <span data-ttu-id="727ab-944">O `outerKeySelector` e `innerKeySelector` funções são usadas para extrair as chaves de `outer` e `inner`, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="727ab-944">The `outerKeySelector` and `innerKeySelector` functions are used to extract keys from `outer` and `inner`, respectively.</span></span> <span data-ttu-id="727ab-945">Essas chaves são comparadas quanto à igualdade usando `comparer`.</span><span class="sxs-lookup"><span data-stu-id="727ab-945">These keys are compared for equality by using `comparer`.</span></span> <span data-ttu-id="727ab-946">O resultado das comparações é usado para criar um par correspondente para cada elemento na `inner` que corresponde a um elemento em `outer`.</span><span class="sxs-lookup"><span data-stu-id="727ab-946">The outcome of the comparisons is used to create a matching pair for each element in `inner` that matches an element in `outer`.</span></span> <span data-ttu-id="727ab-947">Em seguida, a `resultSelector` função é invocada para projetar um objeto de resultado de cada par de elementos correspondentes.</span><span class="sxs-lookup"><span data-stu-id="727ab-947">Then the `resultSelector` function is invoked to project a result object from each pair of matching elements.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-948">
            <paramref name="outer" /> ou <paramref name="inner" /> ou <paramref name="outerKeySelector" /> ou <paramref name="innerKeySelector" /> ou <paramref name="resultSelector" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-948">
              <paramref name="outer" /> or <paramref name="inner" /> or <paramref name="outerKeySelector" /> or <paramref name="innerKeySelector" /> or <paramref name="resultSelector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Last&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="727ab-949">Retorna o último elemento em uma sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-949">Returns the last element in a sequence.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Last&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource Last&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource Last&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Last(Of TSource) (source As IQueryable(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource Last(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Last : System.Linq.IQueryable&lt;'Source&gt; -&gt; 'Source" Usage="System.Linq.Queryable.Last source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-950">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-950">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-951">Um <see cref="T:System.Linq.IQueryable`1" /> do qual o último elemento será retornado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-951">An <see cref="T:System.Linq.IQueryable`1" /> to return the last element of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-952">Retorna o último elemento em uma sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-952">Returns the last element in a sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-953">O valor na última posição no <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-953">The value at the last position in <paramref name="source" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-954">O <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-954">The <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-955">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-955">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-956">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-956">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-957">O comportamento esperado é que ele retorna o último elemento em `source`.</span><span class="sxs-lookup"><span data-stu-id="727ab-957">The expected behavior is that it returns the last element in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-958">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> para retornar o último elemento de uma matriz.</span><span class="sxs-lookup"><span data-stu-id="727ab-958">The following code example demonstrates how to use <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to return the last element of an array.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#43](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#43)]
 [!code-vb[System.Linq.Queryable#43](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#43)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-959">
            <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-959">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="727ab-960">Uma sequência de origem está vazia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-960">The source sequence is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Last&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource Last&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource Last&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Last(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean))) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource Last(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, bool&gt; ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Last : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, bool&gt;&gt; -&gt; 'Source" Usage="System.Linq.Queryable.Last (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-961">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-961">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-962">Um <see cref="T:System.Linq.IQueryable`1" /> do qual um elemento será retornado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-962">An <see cref="T:System.Linq.IQueryable`1" /> to return an element from.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="727ab-963">Uma função para testar cada elemento em relação a uma condição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-963">A function to test each element for a condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-964">Retorna o último elemento de uma sequência que satisfaz uma condição especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-964">Returns the last element of a sequence that satisfies a specified condition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-965">O último elemento em <paramref name="source" /> aprovado no teste especificado por <paramref name="predicate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-965">The last element in <paramref name="source" /> that passes the test specified by <paramref name="predicate" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-966">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-966">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-967">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-967">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-968">O <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-968">The <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-969">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-969">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-970">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-970">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-971">O comportamento esperado é que ele retorna o último elemento em `source` que satisfaz a condição especificada pelo `predicate`.</span><span class="sxs-lookup"><span data-stu-id="727ab-971">The expected behavior is that it returns the last element in `source` that satisfies the condition specified by `predicate`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-972">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> para retornar o último elemento de uma matriz que satisfaz uma condição.</span><span class="sxs-lookup"><span data-stu-id="727ab-972">The following code example demonstrates how to use <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> to return the last element of an array that satisfies a condition.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#44](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#44)]
 [!code-vb[System.Linq.Queryable#44](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#44)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-973">
            <paramref name="source" /> ou <paramref name="predicate" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-973">
              <paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="727ab-974">Nenhum elemento satisfaz a condição na <paramref name="predicate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-974">No element satisfies the condition in <paramref name="predicate" />.</span>
          </span>
          <span data-ttu-id="727ab-975">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-975">-or-</span>
          </span>
          <span data-ttu-id="727ab-976">Uma sequência de origem está vazia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-976">The source sequence is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="LastOrDefault&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="727ab-977">Retornará o último elemento de uma sequência ou um valor padrão se nenhum elemento for encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-977">Returns the last element of a sequence, or a default value if no element is found.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LastOrDefault&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource LastOrDefault&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource LastOrDefault&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastOrDefault(Of TSource) (source As IQueryable(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource LastOrDefault(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member LastOrDefault : System.Linq.IQueryable&lt;'Source&gt; -&gt; 'Source" Usage="System.Linq.Queryable.LastOrDefault source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-978">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-978">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-979">Um <see cref="T:System.Linq.IQueryable`1" /> do qual o último elemento será retornado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-979">An <see cref="T:System.Linq.IQueryable`1" /> to return the last element of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-980">Retorna o último elemento de uma sequência ou um valor padrão se a sequência não contém elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-980">Returns the last element in a sequence, or a default value if the sequence contains no elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-981">
            <c>default</c>(<paramref name="TSource" />) se <paramref name="source" /> estiver vazio; caso contrário, o último elemento em <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-981">
              <c>default</c>(<paramref name="TSource" />) if <paramref name="source" /> is empty; otherwise, the last element in <paramref name="source" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-982">O <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-982">The <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-983">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-983">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-984">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-984">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-985">O comportamento esperado é que ele retorna o último elemento em `source`, ou um valor padrão se `source` está vazio.</span><span class="sxs-lookup"><span data-stu-id="727ab-985">The expected behavior is that it returns the last element in `source`, or a default value if `source` is empty.</span></span>  
  
 <span data-ttu-id="727ab-986">O <xref:System.Linq.Queryable.LastOrDefault%2A> método não fornece uma maneira de especificar um valor padrão.</span><span class="sxs-lookup"><span data-stu-id="727ab-986">The <xref:System.Linq.Queryable.LastOrDefault%2A> method does not provide a way to specify a default value.</span></span> <span data-ttu-id="727ab-987">Se você quiser especificar um valor padrão diferente de `default(TSource)`, use o <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> método conforme descrito na seção de exemplo.</span><span class="sxs-lookup"><span data-stu-id="727ab-987">If you want to specify a default value other than `default(TSource)`, use the <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> method as described in the Example section.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-988">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> em uma matriz vazia.</span><span class="sxs-lookup"><span data-stu-id="727ab-988">The following code example demonstrates how to use <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> on an empty array.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#45](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#45)]
 [!code-vb[System.Linq.Queryable#45](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#45)]  
  
 <span data-ttu-id="727ab-989">Às vezes, o valor de `default(TSource)` não é o valor padrão que você deseja usar se a coleção não contiver elementos.</span><span class="sxs-lookup"><span data-stu-id="727ab-989">Sometimes the value of `default(TSource)` is not the default value that you want to use if the collection contains no elements.</span></span> <span data-ttu-id="727ab-990">Em vez de verificar o resultado para o valor padrão indesejado e, em seguida, alterando-se necessário, você pode usar o <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> método para especificar o valor padrão que você deseja usar, se a coleção está vazia.</span><span class="sxs-lookup"><span data-stu-id="727ab-990">Instead of checking the result for the unwanted default value and then changing it if necessary, you can use the <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> method to specify the default value that you want to use if the collection is empty.</span></span> <span data-ttu-id="727ab-991">Em seguida, chame <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> para obter o último elemento.</span><span class="sxs-lookup"><span data-stu-id="727ab-991">Then, call <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to obtain the last element.</span></span> <span data-ttu-id="727ab-992">O exemplo de código a seguir usa ambas as técnicas para obter um valor padrão de 1, se uma coleção de numéricos dias do mês está vazia.</span><span class="sxs-lookup"><span data-stu-id="727ab-992">The following code example uses both techniques to obtain a default value of 1 if a collection of numeric days of the month is empty.</span></span> <span data-ttu-id="727ab-993">Como o valor padrão para um número inteiro é 0, o que não corresponde a qualquer dia do mês, o valor padrão deve ser especificado como 1 em vez disso.</span><span class="sxs-lookup"><span data-stu-id="727ab-993">Because the default value for an integer is 0, which does not correspond to any day of the month, the default value must be specified as 1 instead.</span></span> <span data-ttu-id="727ab-994">A primeira variável de resultado é verificada para o valor padrão não desejados depois que a consulta for concluída.</span><span class="sxs-lookup"><span data-stu-id="727ab-994">The first result variable is checked for the unwanted default value after the query is completed.</span></span> <span data-ttu-id="727ab-995">A segunda variável de resultado é obtida chamando <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> para especificar um valor padrão de 1.</span><span class="sxs-lookup"><span data-stu-id="727ab-995">The second result variable is obtained by calling <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> to specify a default value of 1.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#132](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#132)]
 [!code-vb[System.Linq.Queryable#132](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#132)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-996">
            <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-996">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LastOrDefault&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource LastOrDefault&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource LastOrDefault&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastOrDefault(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean))) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource LastOrDefault(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, bool&gt; ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member LastOrDefault : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, bool&gt;&gt; -&gt; 'Source" Usage="System.Linq.Queryable.LastOrDefault (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-997">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-997">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-998">Um <see cref="T:System.Linq.IQueryable`1" /> do qual um elemento será retornado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-998">An <see cref="T:System.Linq.IQueryable`1" /> to return an element from.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="727ab-999">Uma função para testar cada elemento em relação a uma condição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-999">A function to test each element for a condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1000">Retorna o último elemento de uma sequência que satisfaz uma condição ou um valor padrão, caso esse elemento não seja encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1000">Returns the last element of a sequence that satisfies a condition or a default value if no such element is found.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1001">
            <c>default</c>(<paramref name="TSource" />) se <paramref name="source" /> for vazio ou se nenhum elemento for aprovado no teste na função de predicado; caso contrário, o último elemento de <paramref name="source" /> aprovado no teste na função de predicado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1001">
              <c>default</c>(<paramref name="TSource" />) if <paramref name="source" /> is empty or if no elements pass the test in the predicate function; otherwise, the last element of <paramref name="source" /> that passes the test in the predicate function.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1002">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-1002">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-1003">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-1003">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-1004">O <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1004">The <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1005">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1005">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-1006">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1006">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-1007">O comportamento esperado é que ele retorna o último elemento em `source` que satisfaz a condição especificada pelo `predicate`.</span><span class="sxs-lookup"><span data-stu-id="727ab-1007">The expected behavior is that it returns the last element in `source` that satisfies the condition specified by `predicate`.</span></span> <span data-ttu-id="727ab-1008">Ele retorna um valor padrão se não houver nenhum tal elemento no `source`.</span><span class="sxs-lookup"><span data-stu-id="727ab-1008">It returns a default value if there is no such element in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-1009">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> , passando um predicado.</span><span class="sxs-lookup"><span data-stu-id="727ab-1009">The following code example demonstrates how to use <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> by passing in a predicate.</span></span> <span data-ttu-id="727ab-1010">A segunda chamada para o método, há nenhum elemento na sequência que satisfaz a condição.</span><span class="sxs-lookup"><span data-stu-id="727ab-1010">In the second call to the method, there is no element in the sequence that satisfies the condition.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#46](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#46)]
 [!code-vb[System.Linq.Queryable#46](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#46)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1011">
            <paramref name="source" /> ou <paramref name="predicate" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1011">
              <paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="LongCount&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="727ab-1012">Retorna um <see cref="T:System.Int64" /> que representa o número de elementos na sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1012">Returns an <see cref="T:System.Int64" /> that represents the number of elements in sequence.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LongCount&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static long LongCount&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 LongCount&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LongCount(Of TSource) (source As IQueryable(Of TSource)) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long LongCount(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member LongCount : System.Linq.IQueryable&lt;'Source&gt; -&gt; int64" Usage="System.Linq.Queryable.LongCount source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-1013">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1013">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-1014">Um <see cref="T:System.Linq.IQueryable`1" /> que contém os elementos a serem contados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1014">An <see cref="T:System.Linq.IQueryable`1" /> that contains the elements to be counted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1015">Retorna um <see cref="T:System.Int64" /> que representa o número total de elementos em uma sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1015">Returns an <see cref="T:System.Int64" /> that represents the total number of elements in a sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1016">O número de elementos em <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1016">The number of elements in <paramref name="source" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1017">O <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1017">The <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1018">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1018">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-1019">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1019">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-1020">O comportamento esperado é que ela conta o número de itens na `source` e retorna um <xref:System.Int64>.</span><span class="sxs-lookup"><span data-stu-id="727ab-1020">The expected behavior is that it counts the number of items in `source` and returns an <xref:System.Int64>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-1021">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> para contar os elementos em uma matriz.</span><span class="sxs-lookup"><span data-stu-id="727ab-1021">The following code example demonstrates how to use <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to count the elements in an array.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#47](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#47)]
 [!code-vb[System.Linq.Queryable#47](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#47)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1022">
            <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1022">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="727ab-1023">O número de elementos excede <see cref="F:System.Int64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1023">The number of elements exceeds <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LongCount&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static long LongCount&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 LongCount&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LongCount(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean))) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long LongCount(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, bool&gt; ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member LongCount : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, bool&gt;&gt; -&gt; int64" Usage="System.Linq.Queryable.LongCount (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-1024">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1024">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-1025">Um <see cref="T:System.Linq.IQueryable`1" /> que contém os elementos a serem contados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1025">An <see cref="T:System.Linq.IQueryable`1" /> that contains the elements to be counted.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="727ab-1026">Uma função para testar cada elemento em relação a uma condição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1026">A function to test each element for a condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1027">Retorna um <see cref="T:System.Int64" /> que representa o número de elementos em uma sequência que atendem a uma condição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1027">Returns an <see cref="T:System.Int64" /> that represents the number of elements in a sequence that satisfy a condition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1028">O número de elementos em <paramref name="source" /> que atendem à condição na função de predicado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1028">The number of elements in <paramref name="source" /> that satisfy the condition in the predicate function.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1029">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-1029">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-1030">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-1030">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-1031">O <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1031">The <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1032">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1032">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-1033">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1033">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-1034">O comportamento esperado é que ela conta o número de itens na `source` que satisfazem a condição especificada por `predicate` e retorna um <xref:System.Int64>.</span><span class="sxs-lookup"><span data-stu-id="727ab-1034">The expected behavior is that it counts the number of items in `source` that satisfy the condition specified by `predicate` and returns an <xref:System.Int64>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-1035">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> para contar os elementos em uma matriz que satisfazem uma condição.</span><span class="sxs-lookup"><span data-stu-id="727ab-1035">The following code example demonstrates how to use <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> to count the elements in an array that satisfy a condition.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#48](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#48)]
 [!code-vb[System.Linq.Queryable#48](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#48)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1036">
            <paramref name="source" /> ou <paramref name="predicate" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1036">
              <paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="727ab-1037">O número de elementos correspondentes excede <see cref="F:System.Int64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1037">The number of matching elements exceeds <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Max&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource Max&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource Max&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Max``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max(Of TSource) (source As IQueryable(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource Max(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.IQueryable&lt;'Source&gt; -&gt; 'Source" Usage="System.Linq.Queryable.Max source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-1038">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1038">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-1039">Uma sequência de valores da qual será determinado o valor máximo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1039">A sequence of values to determine the maximum of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1040">Retorna o valor máximo em um <see cref="T:System.Linq.IQueryable`1" /> genérico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1040">Returns the maximum value in a generic <see cref="T:System.Linq.IQueryable`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1041">O valor máximo na sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1041">The maximum value in the sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1042">O <xref:System.Linq.Queryable.Max%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Max%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1042">The <xref:System.Linq.Queryable.Max%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Max%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1043">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1043">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-1044">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Max%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1044">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Max%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-1045">O comportamento esperado é que ele retorna o valor máximo na `source`.</span><span class="sxs-lookup"><span data-stu-id="727ab-1045">The expected behavior is that it returns the maximum value in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-1046">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Max%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> para determinar o valor máximo em uma sequência.</span><span class="sxs-lookup"><span data-stu-id="727ab-1046">The following code example demonstrates how to use <xref:System.Linq.Queryable.Max%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to determine the maximum value in a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#52](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#52)]
 [!code-vb[System.Linq.Queryable#52](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#52)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1047">
            <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1047">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Max&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static TResult Max&lt;TSource,TResult&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TResult&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TResult Max&lt;TSource, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TResult&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Max``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max(Of TSource, TResult) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, TResult))) As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TResult Max(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TResult&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Result&gt;&gt; -&gt; 'Result" Usage="System.Linq.Queryable.Max (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-1048">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1048">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="727ab-1049">O tipo do valor retornado pela função representada por <paramref name="selector" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1049">The type of the value returned by the function represented by <paramref name="selector" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-1050">Uma sequência de valores da qual será determinado o valor máximo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1050">A sequence of values to determine the maximum of.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="727ab-1051">Uma função de projeção a ser aplicada a cada elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1051">A projection function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1052">Invoca uma função de projeção em cada elemento de um <see cref="T:System.Linq.IQueryable`1" /> genérico e retorna o valor resultante máximo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1052">Invokes a projection function on each element of a generic <see cref="T:System.Linq.IQueryable`1" /> and returns the maximum resulting value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1053">O valor máximo na sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1053">The maximum value in the sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1054">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-1054">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-1055">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-1055">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-1056">O <xref:System.Linq.Queryable.Max%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Max%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1056">The <xref:System.Linq.Queryable.Max%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Max%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1057">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1057">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-1058">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Max%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1058">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Max%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-1059">O comportamento esperado é que ela invoca `selector` em cada elemento em `source` e retorna o valor máximo.</span><span class="sxs-lookup"><span data-stu-id="727ab-1059">The expected behavior is that it invokes `selector` on each element in `source` and returns the maximum value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-1060">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Max%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> para determinar o valor máximo em uma sequência de valores projetados.</span><span class="sxs-lookup"><span data-stu-id="727ab-1060">The following code example demonstrates how to use <xref:System.Linq.Queryable.Max%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> to determine the maximum value in a sequence of projected values.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#58](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#58)]
 [!code-vb[System.Linq.Queryable#58](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#58)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1061">
            <paramref name="source" /> ou <paramref name="selector" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1061">
              <paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Min&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource Min&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource Min&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Min``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min(Of TSource) (source As IQueryable(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource Min(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.IQueryable&lt;'Source&gt; -&gt; 'Source" Usage="System.Linq.Queryable.Min source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-1062">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1062">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-1063">Uma sequência de valores para determinar o mínimo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1063">A sequence of values to determine the minimum of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1064">Retorna o valor mínimo de um <see cref="T:System.Linq.IQueryable`1" /> genérico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1064">Returns the minimum value of a generic <see cref="T:System.Linq.IQueryable`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1065">O valor mínimo na sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1065">The minimum value in the sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1066">O <xref:System.Linq.Queryable.Min%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Min%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1066">The <xref:System.Linq.Queryable.Min%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Min%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1067">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1067">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-1068">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Min%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1068">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Min%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-1069">O comportamento esperado é que ele retorna o valor mínimo em `source`.</span><span class="sxs-lookup"><span data-stu-id="727ab-1069">The expected behavior is that it returns the minimum value in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-1070">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Min%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> para determinar o valor mínimo em uma sequência.</span><span class="sxs-lookup"><span data-stu-id="727ab-1070">The following code example demonstrates how to use <xref:System.Linq.Queryable.Min%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to determine the minimum value in a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#60](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#60)]
 [!code-vb[System.Linq.Queryable#60](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#60)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1071">
            <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1071">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Min&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static TResult Min&lt;TSource,TResult&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TResult&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TResult Min&lt;TSource, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TResult&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Min``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min(Of TSource, TResult) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, TResult))) As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TResult Min(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TResult&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Result&gt;&gt; -&gt; 'Result" Usage="System.Linq.Queryable.Min (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-1072">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1072">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="727ab-1073">O tipo do valor retornado pela função representada por <paramref name="selector" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1073">The type of the value returned by the function represented by <paramref name="selector" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-1074">Uma sequência de valores para determinar o mínimo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1074">A sequence of values to determine the minimum of.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="727ab-1075">Uma função de projeção a ser aplicada a cada elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1075">A projection function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1076">Invoca uma função de projeção em cada elemento de um <see cref="T:System.Linq.IQueryable`1" /> genérico e retorna o valor resultante mínimo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1076">Invokes a projection function on each element of a generic <see cref="T:System.Linq.IQueryable`1" /> and returns the minimum resulting value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1077">O valor mínimo na sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1077">The minimum value in the sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1078">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-1078">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-1079">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-1079">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-1080">O <xref:System.Linq.Queryable.Min%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Min%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1080">The <xref:System.Linq.Queryable.Min%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Min%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1081">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1081">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-1082">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Min%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1082">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Min%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-1083">O comportamento esperado é que ela invoca `selector` em cada elemento em `source` e retorna o valor mínimo.</span><span class="sxs-lookup"><span data-stu-id="727ab-1083">The expected behavior is that it invokes `selector` on each element in `source` and returns the minimum value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-1084">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Min%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> para determinar o valor mínimo em uma sequência de valores projetados.</span><span class="sxs-lookup"><span data-stu-id="727ab-1084">The following code example demonstrates how to use <xref:System.Linq.Queryable.Min%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> to determine the minimum value in a sequence of projected values.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#68](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#68)]
 [!code-vb[System.Linq.Queryable#68](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#68)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1085">
            <paramref name="source" /> ou <paramref name="selector" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1085">
              <paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OfType&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; OfType&lt;TResult&gt; (this System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; OfType&lt;TResult&gt;(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.OfType``1(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OfType(Of TResult) (source As IQueryable) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ OfType(System::Linq::IQueryable ^ source);" />
      <MemberSignature Language="F#" Value="static member OfType : System.Linq.IQueryable -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="System.Linq.Queryable.OfType source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="727ab-1086">O tipo no qual filtrar os elementos da sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1086">The type to filter the elements of the sequence on.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-1087">Um <see cref="T:System.Linq.IQueryable" /> cujos elementos devem ser filtrados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1087">An <see cref="T:System.Linq.IQueryable" /> whose elements to filter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1088">Filtra os elementos de um <see cref="T:System.Linq.IQueryable" /> com base em um tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1088">Filters the elements of an <see cref="T:System.Linq.IQueryable" /> based on a specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1089">Uma coleção que contém os elementos de <paramref name="source" /> que tem o tipo <paramref name="TResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1089">A collection that contains the elements from <paramref name="source" /> that have type <paramref name="TResult" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1090">O `OfType` método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada `OfType` a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1090">The `OfType` method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling `OfType` itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1091">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1091">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-1092">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada `OfType` depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1092">The query behavior that occurs as a result of executing an expression tree that represents calling `OfType` depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-1093">O comportamento esperado é que ele filtra os elementos em `source` que não são do tipo `TResult`.</span><span class="sxs-lookup"><span data-stu-id="727ab-1093">The expected behavior is that it filters out any elements in `source` that are not of type `TResult`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-1094">O exemplo de código a seguir demonstra como usar `OfType` para filtrar os elementos que não são do tipo <xref:System.Reflection.PropertyInfo> de uma lista de elementos do tipo <xref:System.Reflection.MemberInfo>.</span><span class="sxs-lookup"><span data-stu-id="727ab-1094">The following code example demonstrates how to use `OfType` to filter out elements that are not of type <xref:System.Reflection.PropertyInfo> from a list of elements of type <xref:System.Reflection.MemberInfo>.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#69](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#69)]
 [!code-vb[System.Linq.Queryable#69](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#69)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1095">
            <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1095">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OrderBy&lt;TSource,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="727ab-1096">Classifica os elementos de uma sequência em ordem crescente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1096">Sorts the elements of a sequence in ascending order.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OrderBy&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IOrderedQueryable&lt;TSource&gt; OrderBy&lt;TSource,TKey&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IOrderedQueryable`1&lt;!!TSource&gt; OrderBy&lt;TSource, TKey&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderBy(Of TSource, TKey) (source As IQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey))) As IOrderedQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IOrderedQueryable&lt;TSource&gt; ^ OrderBy(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member OrderBy : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Key&gt;&gt; -&gt; System.Linq.IOrderedQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.OrderBy (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IOrderedQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-1097">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1097">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="727ab-1098">O tipo da chave retornada pela função que é representada por <paramref name="keySelector" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1098">The type of the key returned by the function that is represented by <paramref name="keySelector" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-1099">Uma sequência de valores a serem ordenados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1099">A sequence of values to order.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="727ab-1100">Uma função para extrair uma chave de um elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1100">A function to extract a key from an element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1101">Classifica os elementos de uma sequência em ordem crescente de acordo com uma chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1101">Sorts the elements of a sequence in ascending order according to a key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1102">Um <see cref="T:System.Linq.IOrderedQueryable`1" /> cujos elementos são classificados de acordo com uma chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1102">An <see cref="T:System.Linq.IOrderedQueryable`1" /> whose elements are sorted according to a key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1103">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-1103">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-1104">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-1104">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-1105">O <xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1105">The <xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1106">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1106">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span> <span data-ttu-id="727ab-1107">O resultado da chamada <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> é convertido para o tipo <xref:System.Linq.IOrderedQueryable%601> e retornado.</span><span class="sxs-lookup"><span data-stu-id="727ab-1107">The result of calling <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> is cast to type <xref:System.Linq.IOrderedQueryable%601> and returned.</span></span>  
  
 <span data-ttu-id="727ab-1108">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1108">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-1109">O comportamento esperado é que ele classifica os elementos de `source` com base na chave obtida invocando `keySelector` em cada elemento de `source`.</span><span class="sxs-lookup"><span data-stu-id="727ab-1109">The expected behavior is that it sorts the elements of `source` based on the key obtained by invoking `keySelector` on each element of `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-1110">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> para classificar os elementos de uma sequência.</span><span class="sxs-lookup"><span data-stu-id="727ab-1110">The following code example demonstrates how to use <xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> to sort the elements of a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#70](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#70)]
 [!code-vb[System.Linq.Queryable#70](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#70)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1111">
            <paramref name="source" /> ou <paramref name="keySelector" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1111">
              <paramref name="source" /> or <paramref name="keySelector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OrderBy&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IOrderedQueryable&lt;TSource&gt; OrderBy&lt;TSource,TKey&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IOrderedQueryable`1&lt;!!TSource&gt; OrderBy&lt;TSource, TKey&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderBy(Of TSource, TKey) (source As IQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey)), comparer As IComparer(Of TKey)) As IOrderedQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IOrderedQueryable&lt;TSource&gt; ^ OrderBy(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member OrderBy : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Key&gt;&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Linq.IOrderedQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.OrderBy (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IOrderedQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-1112">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1112">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="727ab-1113">O tipo da chave retornada pela função que é representada por <paramref name="keySelector" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1113">The type of the key returned by the function that is represented by <paramref name="keySelector" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-1114">Uma sequência de valores a serem ordenados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1114">A sequence of values to order.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="727ab-1115">Uma função para extrair uma chave de um elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1115">A function to extract a key from an element.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="727ab-1116">Um <see cref="T:System.Collections.Generic.IComparer`1" /> para comparar chaves.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1116">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1117">Classifica os elementos de uma sequência em ordem crescente usando um comparador especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1117">Sorts the elements of a sequence in ascending order by using a specified comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1118">Um <see cref="T:System.Linq.IOrderedQueryable`1" /> cujos elementos são classificados de acordo com uma chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1118">An <see cref="T:System.Linq.IOrderedQueryable`1" /> whose elements are sorted according to a key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1119">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-1119">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-1120">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-1120">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-1121">O <xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1121">The <xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1122">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1122">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span> <span data-ttu-id="727ab-1123">O resultado da chamada <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> é convertido para o tipo <xref:System.Linq.IOrderedQueryable%601> e retornado.</span><span class="sxs-lookup"><span data-stu-id="727ab-1123">The result of calling <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> is cast to type <xref:System.Linq.IOrderedQueryable%601> and returned.</span></span>  
  
 <span data-ttu-id="727ab-1124">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1124">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-1125">O comportamento esperado é que ele classifica os elementos de `source` com base na chave obtida invocando `keySelector` em cada elemento de `source`.</span><span class="sxs-lookup"><span data-stu-id="727ab-1125">The expected behavior is that it sorts the elements of `source` based on the key obtained by invoking `keySelector` on each element of `source`.</span></span> <span data-ttu-id="727ab-1126">O `comparer` parâmetro é usado para comparar chaves.</span><span class="sxs-lookup"><span data-stu-id="727ab-1126">The `comparer` parameter is used to compare keys.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1127">
            <paramref name="source" />, <paramref name="keySelector" /> ou <paramref name="comparer" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1127">
              <paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="comparer" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OrderByDescending&lt;TSource,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="727ab-1128">Classifica os elementos de uma sequência em ordem decrescente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1128">Sorts the elements of a sequence in descending order.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OrderByDescending&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IOrderedQueryable&lt;TSource&gt; OrderByDescending&lt;TSource,TKey&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IOrderedQueryable`1&lt;!!TSource&gt; OrderByDescending&lt;TSource, TKey&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderByDescending(Of TSource, TKey) (source As IQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey))) As IOrderedQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IOrderedQueryable&lt;TSource&gt; ^ OrderByDescending(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member OrderByDescending : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Key&gt;&gt; -&gt; System.Linq.IOrderedQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.OrderByDescending (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IOrderedQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-1129">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1129">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="727ab-1130">O tipo da chave retornada pela função que é representada por <paramref name="keySelector" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1130">The type of the key returned by the function that is represented by <paramref name="keySelector" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-1131">Uma sequência de valores a serem ordenados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1131">A sequence of values to order.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="727ab-1132">Uma função para extrair uma chave de um elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1132">A function to extract a key from an element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1133">Classifica os elementos de uma sequência em ordem decrescente de acordo com uma chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1133">Sorts the elements of a sequence in descending order according to a key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1134">Um <see cref="T:System.Linq.IOrderedQueryable`1" /> cujos elementos são classificados em ordem decrescente de acordo com uma chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1134">An <see cref="T:System.Linq.IOrderedQueryable`1" /> whose elements are sorted in descending order according to a key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1135">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-1135">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-1136">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-1136">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-1137">O <xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1137">The <xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1138">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1138">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span> <span data-ttu-id="727ab-1139">O resultado da chamada <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> é convertido para o tipo <xref:System.Linq.IOrderedQueryable%601> e retornado.</span><span class="sxs-lookup"><span data-stu-id="727ab-1139">The result of calling <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> is cast to type <xref:System.Linq.IOrderedQueryable%601> and returned.</span></span>  
  
 <span data-ttu-id="727ab-1140">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1140">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-1141">O comportamento esperado é que ele classifica os elementos de `source` em ordem decrescente, com base na chave obtida invocando `keySelector` em cada elemento de `source`.</span><span class="sxs-lookup"><span data-stu-id="727ab-1141">The expected behavior is that it sorts the elements of `source` in descending order, based on the key obtained by invoking `keySelector` on each element of `source`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1142">
            <paramref name="source" /> ou <paramref name="keySelector" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1142">
              <paramref name="source" /> or <paramref name="keySelector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OrderByDescending&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IOrderedQueryable&lt;TSource&gt; OrderByDescending&lt;TSource,TKey&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IOrderedQueryable`1&lt;!!TSource&gt; OrderByDescending&lt;TSource, TKey&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderByDescending(Of TSource, TKey) (source As IQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey)), comparer As IComparer(Of TKey)) As IOrderedQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IOrderedQueryable&lt;TSource&gt; ^ OrderByDescending(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member OrderByDescending : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Key&gt;&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Linq.IOrderedQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.OrderByDescending (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IOrderedQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-1143">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1143">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="727ab-1144">O tipo da chave retornada pela função que é representada por <paramref name="keySelector" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1144">The type of the key returned by the function that is represented by <paramref name="keySelector" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-1145">Uma sequência de valores a serem ordenados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1145">A sequence of values to order.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="727ab-1146">Uma função para extrair uma chave de um elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1146">A function to extract a key from an element.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="727ab-1147">Um <see cref="T:System.Collections.Generic.IComparer`1" /> para comparar chaves.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1147">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1148">Classifica os elementos de uma sequência em ordem decrescente usando um comparador especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1148">Sorts the elements of a sequence in descending order by using a specified comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1149">Um <see cref="T:System.Linq.IOrderedQueryable`1" /> cujos elementos são classificados em ordem decrescente de acordo com uma chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1149">An <see cref="T:System.Linq.IOrderedQueryable`1" /> whose elements are sorted in descending order according to a key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1150">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-1150">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-1151">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-1151">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-1152">O <xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1152">The <xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1153">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1153">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span> <span data-ttu-id="727ab-1154">O resultado da chamada <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> é convertido para o tipo <xref:System.Linq.IOrderedQueryable%601> e retornado.</span><span class="sxs-lookup"><span data-stu-id="727ab-1154">The result of calling <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> is cast to type <xref:System.Linq.IOrderedQueryable%601> and returned.</span></span>  
  
 <span data-ttu-id="727ab-1155">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1155">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-1156">O comportamento esperado é que ele classifica os elementos de `source` em ordem decrescente, com base na chave obtida invocando `keySelector` em cada elemento de `source`.</span><span class="sxs-lookup"><span data-stu-id="727ab-1156">The expected behavior is that it sorts the elements of `source` in descending order, based on the key obtained by invoking `keySelector` on each element of `source`.</span></span> <span data-ttu-id="727ab-1157">O `comparer` parâmetro é usado para comparar chaves.</span><span class="sxs-lookup"><span data-stu-id="727ab-1157">The `comparer` parameter is used to compare keys.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-1158">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> para classificar os elementos de uma sequência em ordem decrescente usando um comparador personalizado.</span><span class="sxs-lookup"><span data-stu-id="727ab-1158">The following code example demonstrates how to use <xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> to sort the elements of a sequence in descending order by using a custom comparer.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#71](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#71)]
 [!code-vb[System.Linq.Queryable#71](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#71)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1159">
            <paramref name="source" />, <paramref name="keySelector" /> ou <paramref name="comparer" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1159">
              <paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="comparer" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Prepend&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Prepend&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, TSource element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Prepend&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, !!TSource element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Prepend``1(System.Linq.IQueryable{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Prepend(Of TSource) (source As IQueryable(Of TSource), element As TSource) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Prepend(System::Linq::IQueryable&lt;TSource&gt; ^ source, TSource element);" />
      <MemberSignature Language="F#" Value="static member Prepend : System.Linq.IQueryable&lt;'Source&gt; * 'Source -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.Prepend (source, element)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="element" Type="TSource" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">To be added.</typeparam>
        <param name="source">To be added.</param>
        <param name="element">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reverse&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Reverse&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Reverse&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Reverse``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Reverse(Of TSource) (source As IQueryable(Of TSource)) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Reverse(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Reverse : System.Linq.IQueryable&lt;'Source&gt; -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.Reverse source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-1160">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1160">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-1161">Uma sequência de valores a ser revertida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1161">A sequence of values to reverse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1162">Inverte a ordem dos elementos em uma sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1162">Inverts the order of the elements in a sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1163">Um <see cref="T:System.Linq.IQueryable`1" /> cujos elementos correspondem aos da sequência de entrada em ordem inversa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1163">An <see cref="T:System.Linq.IQueryable`1" /> whose elements correspond to those of the input sequence in reverse order.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1164">O <xref:System.Linq.Queryable.Reverse%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Reverse%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1164">The <xref:System.Linq.Queryable.Reverse%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Reverse%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1165">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1165">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-1166">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Reverse%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1166">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Reverse%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-1167">O comportamento esperado é que ele inverte a ordem dos elementos no `source`.</span><span class="sxs-lookup"><span data-stu-id="727ab-1167">The expected behavior is that it reverses the order of the elements in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-1168">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Reverse%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> para inverter a ordem dos elementos em uma matriz.</span><span class="sxs-lookup"><span data-stu-id="727ab-1168">The following code example demonstrates how to use <xref:System.Linq.Queryable.Reverse%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to reverse the order of elements in an array.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#74](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#74)]
 [!code-vb[System.Linq.Queryable#74](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#74)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1169">
            <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1169">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Select&lt;TSource,TResult&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="727ab-1170">Projeta cada elemento de uma sequência em um novo formulário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1170">Projects each element of a sequence into a new form.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Select&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; Select&lt;TSource,TResult&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,int,TResult&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; Select&lt;TSource, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TSource, int32, !!TResult&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Select(Of TSource, TResult) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Integer, TResult))) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ Select(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, int, TResult&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Select : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, int, 'Result&gt;&gt; -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="System.Linq.Queryable.Select (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Int32,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-1171">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1171">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="727ab-1172">O tipo do valor retornado pela função representada por <paramref name="selector" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1172">The type of the value returned by the function represented by <paramref name="selector" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-1173">Uma sequência de valores a serem projetados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1173">A sequence of values to project.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="727ab-1174">Uma função de projeção a ser aplicada a cada elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1174">A projection function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1175">Projeta cada elemento de uma sequência em um novo formulário, incorporando o índice do elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1175">Projects each element of a sequence into a new form by incorporating the element's index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1176">Um <see cref="T:System.Linq.IQueryable`1" /> cujos elementos são o resultado da invocação de uma função de transformação em cada elemento de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1176">An <see cref="T:System.Linq.IQueryable`1" /> whose elements are the result of invoking a projection function on each element of <paramref name="source" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1177">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-1177">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-1178">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-1178">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-1179">O <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2C%60%601%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2C%60%601%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1179">The <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2C%60%601%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2C%60%601%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1180">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1180">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-1181">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2C%60%601%7D%7D%29> dependem da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1181">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2C%60%601%7D%7D%29> depend on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-1182">O comportamento esperado é que ela invoca `selector` em cada elemento de `source` para projetá-lo em um formato diferente.</span><span class="sxs-lookup"><span data-stu-id="727ab-1182">The expected behavior is that it invokes `selector` on each element of `source` to project it into a different form.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-1183">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2C%60%601%7D%7D%29> em uma sequência de valores de projeto e usar o índice de cada elemento no formulário projetado.</span><span class="sxs-lookup"><span data-stu-id="727ab-1183">The following code example demonstrates how to use <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2C%60%601%7D%7D%29> to project over a sequence of values and use the index of each element in the projected form.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#76](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#76)]
 [!code-vb[System.Linq.Queryable#76](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#76)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1184">
            <paramref name="source" /> ou <paramref name="selector" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1184">
              <paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Select&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; Select&lt;TSource,TResult&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TResult&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; Select&lt;TSource, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TResult&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Select(Of TSource, TResult) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, TResult))) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ Select(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TResult&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Select : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Result&gt;&gt; -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="System.Linq.Queryable.Select (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-1185">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1185">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="727ab-1186">O tipo do valor retornado pela função representada por <paramref name="selector" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1186">The type of the value returned by the function represented by <paramref name="selector" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-1187">Uma sequência de valores a serem projetados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1187">A sequence of values to project.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="727ab-1188">Uma função de projeção a ser aplicada a cada elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1188">A projection function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1189">Projeta cada elemento de uma sequência em um novo formulário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1189">Projects each element of a sequence into a new form.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1190">Um <see cref="T:System.Linq.IQueryable`1" /> cujos elementos são o resultado da invocação de uma função de transformação em cada elemento de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1190">An <see cref="T:System.Linq.IQueryable`1" /> whose elements are the result of invoking a projection function on each element of <paramref name="source" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1191">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-1191">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-1192">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-1192">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-1193">O <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1193">The <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1194">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1194">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-1195">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1195">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-1196">O comportamento esperado é que ela invoca `selector` em cada elemento de `source` para projetá-lo em um formato diferente.</span><span class="sxs-lookup"><span data-stu-id="727ab-1196">The expected behavior is that it invokes `selector` on each element of `source` to project it into a different form.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-1197">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> ao projeto em uma sequência de valores.</span><span class="sxs-lookup"><span data-stu-id="727ab-1197">The following code example demonstrates how to use <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> to project over a sequence of values.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#75](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#75)]
 [!code-vb[System.Linq.Queryable#75](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#75)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1198">
            <paramref name="source" /> ou <paramref name="selector" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1198">
              <paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SelectMany&lt;TSource,TResult&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="727ab-1199">Projeta cada elemento de uma sequência em um <see cref="T:System.Collections.Generic.IEnumerable`1" /> e combina as sequências resultantes em uma sequência de tipo <see cref="T:System.Linq.IQueryable`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1199">Projects each element of a sequence to an <see cref="T:System.Collections.Generic.IEnumerable`1" /> and combines the resulting sequences into one sequence of type <see cref="T:System.Linq.IQueryable`1" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SelectMany&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; SelectMany&lt;TSource,TResult&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; SelectMany&lt;TSource, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt;&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectMany(Of TSource, TResult) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, IEnumerable(Of TResult)))) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ SelectMany(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, System::Collections::Generic::IEnumerable&lt;TResult&gt; ^&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member SelectMany : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, seq&lt;'Result&gt;&gt;&gt; -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="System.Linq.Queryable.SelectMany (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-1200">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1200">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="727ab-1201">O tipo dos elementos da sequência retornada pela função representada por <paramref name="selector" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1201">The type of the elements of the sequence returned by the function represented by <paramref name="selector" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-1202">Uma sequência de valores a serem projetados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1202">A sequence of values to project.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="727ab-1203">Uma função de projeção a ser aplicada a cada elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1203">A projection function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1204">Projeta cada elemento de uma sequência em um <see cref="T:System.Collections.Generic.IEnumerable`1" /> e combina as sequências resultantes em uma sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1204">Projects each element of a sequence to an <see cref="T:System.Collections.Generic.IEnumerable`1" /> and combines the resulting sequences into one sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1205">Um <see cref="T:System.Linq.IQueryable`1" /> cujos elementos são resultado da invocação de uma função de projeção de um para muitos em cada elemento da sequência de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1205">An <see cref="T:System.Linq.IQueryable`1" /> whose elements are the result of invoking a one-to-many projection function on each element of the input sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1206">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-1206">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-1207">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-1207">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-1208">O <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1208">The <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1209">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1209">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-1210">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1210">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-1211">O comportamento esperado é que ela invoca `selector` em cada elemento de `source` para projetá-lo em um formulário enumerável.</span><span class="sxs-lookup"><span data-stu-id="727ab-1211">The expected behavior is that it invokes `selector` on each element of `source` to project it into an enumerable form.</span></span> <span data-ttu-id="727ab-1212">Ele, em seguida, concatena os resultados enumeráveis em uma única sequência unidimensional.</span><span class="sxs-lookup"><span data-stu-id="727ab-1212">It then concatenates the enumerable results into a single, one-dimensional sequence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-1213">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> para realizar uma projeção um-para-muitos em uma matriz.</span><span class="sxs-lookup"><span data-stu-id="727ab-1213">The following code example demonstrates how to use <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> to perform a one-to-many projection over an array.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#77](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#77)]
 [!code-vb[System.Linq.Queryable#77](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#77)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1214">
            <paramref name="source" /> ou <paramref name="selector" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1214">
              <paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SelectMany&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; SelectMany&lt;TSource,TResult&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,int,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; SelectMany&lt;TSource, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TSource, int32, class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt;&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectMany(Of TSource, TResult) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Integer, IEnumerable(Of TResult)))) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ SelectMany(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, int, System::Collections::Generic::IEnumerable&lt;TResult&gt; ^&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member SelectMany : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, int, seq&lt;'Result&gt;&gt;&gt; -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="System.Linq.Queryable.SelectMany (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Int32,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-1215">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1215">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="727ab-1216">O tipo dos elementos da sequência retornada pela função representada por <paramref name="selector" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1216">The type of the elements of the sequence returned by the function represented by <paramref name="selector" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-1217">Uma sequência de valores a serem projetados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1217">A sequence of values to project.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="727ab-1218">Uma função de projeção a ser aplicada a cada elemento; o segundo parâmetro dessa função representa o índice do elemento de origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1218">A projection function to apply to each element; the second parameter of this function represents the index of the source element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1219">Projeta cada elemento de uma sequência em um <see cref="T:System.Collections.Generic.IEnumerable`1" /> e combina as sequências resultantes em uma sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1219">Projects each element of a sequence to an <see cref="T:System.Collections.Generic.IEnumerable`1" /> and combines the resulting sequences into one sequence.</span>
          </span>
          <span data-ttu-id="727ab-1220">O índice de cada elemento de origem é usado no formulário projetado desse elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1220">The index of each source element is used in the projected form of that element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1221">Um <see cref="T:System.Linq.IQueryable`1" /> cujos elementos são resultado da invocação de uma função de projeção de um para muitos em cada elemento da sequência de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1221">An <see cref="T:System.Linq.IQueryable`1" /> whose elements are the result of invoking a one-to-many projection function on each element of the input sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1222">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-1222">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-1223">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-1223">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-1224">O <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1224">The <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1225">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1225">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-1226">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1226">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-1227">O comportamento esperado é que ela invoca `selector` em cada elemento de `source` para projetá-lo em um formulário enumerável.</span><span class="sxs-lookup"><span data-stu-id="727ab-1227">The expected behavior is that it invokes `selector` on each element of `source` to project it into an enumerable form.</span></span> <span data-ttu-id="727ab-1228">Cada resultado enumerável incorpora o índice do elemento de origem.</span><span class="sxs-lookup"><span data-stu-id="727ab-1228">Each enumerable result incorporates the index of the source element.</span></span> <span data-ttu-id="727ab-1229">Ele, em seguida, concatena os resultados enumeráveis em uma única sequência unidimensional.</span><span class="sxs-lookup"><span data-stu-id="727ab-1229">It then concatenates the enumerable results into a single, one-dimensional sequence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-1230">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> para realizar uma projeção um-para-muitos em uma matriz e usar o índice de cada elemento de origem.</span><span class="sxs-lookup"><span data-stu-id="727ab-1230">The following code example demonstrates how to use <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> to perform a one-to-many projection over an array and use the index of each source element.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#78](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#78)]
 [!code-vb[System.Linq.Queryable#78](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#78)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1231">
            <paramref name="source" /> ou <paramref name="selector" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1231">
              <paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SelectMany&lt;TSource,TCollection,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; SelectMany&lt;TSource,TCollection,TResult&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,System.Collections.Generic.IEnumerable&lt;TCollection&gt;&gt;&gt; collectionSelector, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TCollection,TResult&gt;&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; SelectMany&lt;TSource, TCollection, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, class System.Collections.Generic.IEnumerable`1&lt;!!TCollection&gt;&gt;&gt; collectionSelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TSource, !!TCollection, !!TResult&gt;&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectMany(Of TSource, TCollection, TResult) (source As IQueryable(Of TSource), collectionSelector As Expression(Of Func(Of TSource, IEnumerable(Of TCollection))), resultSelector As Expression(Of Func(Of TSource, TCollection, TResult))) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TCollection, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ SelectMany(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, System::Collections::Generic::IEnumerable&lt;TCollection&gt; ^&gt; ^&gt; ^ collectionSelector, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TCollection, TResult&gt; ^&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member SelectMany : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, seq&lt;'Collection&gt;&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Collection, 'Result&gt;&gt; -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="System.Linq.Queryable.SelectMany (source, collectionSelector, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TCollection" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="collectionSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Collections.Generic.IEnumerable&lt;TCollection&gt;&gt;&gt;" />
        <Parameter Name="resultSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TCollection,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-1232">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1232">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TCollection">
          <span data-ttu-id="727ab-1233">O tipo dos elementos intermediários coletados pela função representada por <paramref name="collectionSelector" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1233">The type of the intermediate elements collected by the function represented by <paramref name="collectionSelector" />.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="727ab-1234">O tipo dos elementos da sequência resultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1234">The type of the elements of the resulting sequence.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-1235">Uma sequência de valores a serem projetados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1235">A sequence of values to project.</span>
          </span>
        </param>
        <param name="collectionSelector">
          <span data-ttu-id="727ab-1236">Uma função de projeção a ser aplicada a cada elemento da sequência de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1236">A projection function to apply to each element of the input sequence.</span>
          </span>
        </param>
        <param name="resultSelector">
          <span data-ttu-id="727ab-1237">Uma função de projeção a ser aplicada a cada elemento de cada sequência intermediária.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1237">A projection function to apply to each element of each intermediate sequence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1238">Projeta cada elemento de uma sequência em um <see cref="T:System.Collections.Generic.IEnumerable`1" /> e invoca uma função de seletor de resultado em cada elemento contido nele.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1238">Projects each element of a sequence to an <see cref="T:System.Collections.Generic.IEnumerable`1" /> and invokes a result selector function on each element therein.</span>
          </span>
          <span data-ttu-id="727ab-1239">Os valores resultantes de cada sequência intermediária são combinados em uma única sequência unidimensional e retornada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1239">The resulting values from each intermediate sequence are combined into a single, one-dimensional sequence and returned.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1240">Um <see cref="T:System.Linq.IQueryable`1" /> cujos elementos são o resultado de invocar a função de projeção de um para muitos <paramref name="collectionSelector" /> em cada elemento de <paramref name="source" /> e, em seguida, mapear cada um desses elementos de sequência e seu elemento <paramref name="source" /> correspondente para um elemento de resultado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1240">An <see cref="T:System.Linq.IQueryable`1" /> whose elements are the result of invoking the one-to-many projection function <paramref name="collectionSelector" /> on each element of <paramref name="source" /> and then mapping each of those sequence elements and their corresponding <paramref name="source" /> element to a result element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1241">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-1241">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-1242">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-1242">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-1243">O <xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1243">The <xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1244">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1244">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-1245">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1245">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-1246">O comportamento esperado é que ela invoca `collectionSelector` em cada elemento de `source` para projetá-lo em um formulário enumerável.</span><span class="sxs-lookup"><span data-stu-id="727ab-1246">The expected behavior is that it invokes `collectionSelector` on each element of `source` to project it into an enumerable form.</span></span> <span data-ttu-id="727ab-1247">Em seguida, a função representada por `resultSelector` é invocado em cada elemento em cada sequência intermediária.</span><span class="sxs-lookup"><span data-stu-id="727ab-1247">Then the function represented by `resultSelector` is invoked on each element in each intermediate sequence.</span></span> <span data-ttu-id="727ab-1248">Os valores resultantes são concatenados em uma única sequência unidimensional.</span><span class="sxs-lookup"><span data-stu-id="727ab-1248">The resulting values are concatenated into a single, one-dimensional sequence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-1249">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29> para realizar uma projeção um-para-muitos em uma matriz.</span><span class="sxs-lookup"><span data-stu-id="727ab-1249">The following code example demonstrates how to use <xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29> to perform a one-to-many projection over an array.</span></span> <span data-ttu-id="727ab-1250">Este exemplo usa uma função de seletor de resultado para manter o elemento de código-fonte que corresponde a cada sequência intermediária no escopo para a chamada final para `Select`.</span><span class="sxs-lookup"><span data-stu-id="727ab-1250">This example uses a result selector function to keep the source element that corresponds to each intermediate sequence in scope for the final call to `Select`.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#124](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#124)]
 [!code-vb[System.Linq.Queryable#124](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#124)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1251">
            <paramref name="source" />, <paramref name="collectionSelector" /> ou <paramref name="resultSelector" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1251">
              <paramref name="source" /> or <paramref name="collectionSelector" /> or <paramref name="resultSelector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SelectMany&lt;TSource,TCollection,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; SelectMany&lt;TSource,TCollection,TResult&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,int,System.Collections.Generic.IEnumerable&lt;TCollection&gt;&gt;&gt; collectionSelector, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TCollection,TResult&gt;&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; SelectMany&lt;TSource, TCollection, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TSource, int32, class System.Collections.Generic.IEnumerable`1&lt;!!TCollection&gt;&gt;&gt; collectionSelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TSource, !!TCollection, !!TResult&gt;&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectMany(Of TSource, TCollection, TResult) (source As IQueryable(Of TSource), collectionSelector As Expression(Of Func(Of TSource, Integer, IEnumerable(Of TCollection))), resultSelector As Expression(Of Func(Of TSource, TCollection, TResult))) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TCollection, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ SelectMany(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, int, System::Collections::Generic::IEnumerable&lt;TCollection&gt; ^&gt; ^&gt; ^ collectionSelector, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TCollection, TResult&gt; ^&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member SelectMany : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, int, seq&lt;'Collection&gt;&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Collection, 'Result&gt;&gt; -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="System.Linq.Queryable.SelectMany (source, collectionSelector, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TCollection" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="collectionSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Int32,System.Collections.Generic.IEnumerable&lt;TCollection&gt;&gt;&gt;" />
        <Parameter Name="resultSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TCollection,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-1252">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1252">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TCollection">
          <span data-ttu-id="727ab-1253">O tipo dos elementos intermediários coletados pela função representada por <paramref name="collectionSelector" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1253">The type of the intermediate elements collected by the function represented by <paramref name="collectionSelector" />.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="727ab-1254">O tipo dos elementos da sequência resultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1254">The type of the elements of the resulting sequence.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-1255">Uma sequência de valores a serem projetados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1255">A sequence of values to project.</span>
          </span>
        </param>
        <param name="collectionSelector">
          <span data-ttu-id="727ab-1256">Uma função de projeção a ser aplicada a cada elemento da sequência de entrada; o segundo parâmetro dessa função representa o índice do elemento de origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1256">A projection function to apply to each element of the input sequence; the second parameter of this function represents the index of the source element.</span>
          </span>
        </param>
        <param name="resultSelector">
          <span data-ttu-id="727ab-1257">Uma função de projeção a ser aplicada a cada elemento de cada sequência intermediária.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1257">A projection function to apply to each element of each intermediate sequence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1258">Projeta cada elemento de uma sequência em um <see cref="T:System.Collections.Generic.IEnumerable`1" /> que incorpora o índice do elemento de origem que o produziu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1258">Projects each element of a sequence to an <see cref="T:System.Collections.Generic.IEnumerable`1" /> that incorporates the index of the source element that produced it.</span>
          </span>
          <span data-ttu-id="727ab-1259">Uma função seletora de resultados é invocada em cada elemento de cada sequência intermediária e os valores resultantes são combinados em uma única sequência unidimensional e retornados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1259">A result selector function is invoked on each element of each intermediate sequence, and the resulting values are combined into a single, one-dimensional sequence and returned.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1260">Um <see cref="T:System.Linq.IQueryable`1" /> cujos elementos são o resultado de invocar a função de projeção de um para muitos <paramref name="collectionSelector" /> em cada elemento de <paramref name="source" /> e, em seguida, mapear cada um desses elementos de sequência e seu elemento <paramref name="source" /> correspondente para um elemento de resultado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1260">An <see cref="T:System.Linq.IQueryable`1" /> whose elements are the result of invoking the one-to-many projection function <paramref name="collectionSelector" /> on each element of <paramref name="source" /> and then mapping each of those sequence elements and their corresponding <paramref name="source" /> element to a result element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1261">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-1261">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-1262">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-1262">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-1263">O <xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1263">The <xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1264">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1264">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-1265">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1265">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-1266">O comportamento esperado é que ela invoca `collectionSelector` em cada elemento de `source` para projetá-lo em um formulário enumerável.</span><span class="sxs-lookup"><span data-stu-id="727ab-1266">The expected behavior is that it invokes `collectionSelector` on each element of `source` to project it into an enumerable form.</span></span> <span data-ttu-id="727ab-1267">Cada resultado enumerável incorpora o índice do elemento de origem.</span><span class="sxs-lookup"><span data-stu-id="727ab-1267">Each enumerable result incorporates the source element's index.</span></span> <span data-ttu-id="727ab-1268">Em seguida, a função representada por `resultSelector` é invocado em cada elemento em cada sequência intermediária.</span><span class="sxs-lookup"><span data-stu-id="727ab-1268">Then the function represented by `resultSelector` is invoked on each element in each intermediate sequence.</span></span> <span data-ttu-id="727ab-1269">Os valores resultantes são concatenados em uma única sequência unidimensional.</span><span class="sxs-lookup"><span data-stu-id="727ab-1269">The resulting values are concatenated into a single, one-dimensional sequence.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1270">
            <paramref name="source" />, <paramref name="collectionSelector" /> ou <paramref name="resultSelector" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1270">
              <paramref name="source" /> or <paramref name="collectionSelector" /> or <paramref name="resultSelector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SequenceEqual&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="727ab-1271">Determina se duas sequências são iguais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1271">Determines whether two sequences are equal.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SequenceEqual&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static bool SequenceEqual&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source1, System.Collections.Generic.IEnumerable&lt;TSource&gt; source2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SequenceEqual&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source1, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SequenceEqual(Of TSource) (source1 As IQueryable(Of TSource), source2 As IEnumerable(Of TSource)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool SequenceEqual(System::Linq::IQueryable&lt;TSource&gt; ^ source1, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source2);" />
      <MemberSignature Language="F#" Value="static member SequenceEqual : System.Linq.IQueryable&lt;'Source&gt; * seq&lt;'Source&gt; -&gt; bool" Usage="System.Linq.Queryable.SequenceEqual (source1, source2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="source2" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-1272">O tipo dos elementos das sequências de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1272">The type of the elements of the input sequences.</span>
          </span>
        </typeparam>
        <param name="source1">
          <span data-ttu-id="727ab-1273">Um <see cref="T:System.Linq.IQueryable`1" /> cujos elementos são comparados com os de <paramref name="source2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1273">An <see cref="T:System.Linq.IQueryable`1" /> whose elements to compare to those of <paramref name="source2" />.</span>
          </span>
        </param>
        <param name="source2">
          <span data-ttu-id="727ab-1274">Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> cujos elementos são comparados com os da primeira sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1274">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements to compare to those of the first sequence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1275">Determina se duas sequências são iguais usando o comparador de igualdade padrão para comparar elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1275">Determines whether two sequences are equal by using the default equality comparer to compare elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1276">
            <see langword="true" /> se as duas sequências de origem tiverem o mesmo tamanho e seus elementos correspondentes forem comparados como iguais; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1276">
              <see langword="true" /> if the two source sequences are of equal length and their corresponding elements compare equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1277">O <xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1277">The <xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1278">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source1` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1278">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source1` parameter.</span></span>  
  
 <span data-ttu-id="727ab-1279">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> depende da implementação do tipo do `source1` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1279">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> depends on the implementation of the type of the `source1` parameter.</span></span> <span data-ttu-id="727ab-1280">O comportamento esperado é que ele determina se duas sequências de origem são iguais.</span><span class="sxs-lookup"><span data-stu-id="727ab-1280">The expected behavior is that it determines if the two source sequences are equal.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-1281">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> para determinar se duas sequências são iguais.</span><span class="sxs-lookup"><span data-stu-id="727ab-1281">The following code example demonstrates how to use <xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> to determine whether two sequences are equal.</span></span> <span data-ttu-id="727ab-1282">Neste exemplo, as sequências são iguais.</span><span class="sxs-lookup"><span data-stu-id="727ab-1282">In this example the sequences are equal.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#32](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#32)]
 [!code-vb[System.Linq.Queryable#32](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#32)]  
  
 <span data-ttu-id="727ab-1283">O exemplo de código a seguir compara duas sequências que não são iguais.</span><span class="sxs-lookup"><span data-stu-id="727ab-1283">The following code example compares two sequences that are not equal.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#33](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#33)]
 [!code-vb[System.Linq.Queryable#33](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#33)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1284">
            <paramref name="source1" /> ou <paramref name="source2" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1284">
              <paramref name="source1" /> or <paramref name="source2" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SequenceEqual&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static bool SequenceEqual&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source1, System.Collections.Generic.IEnumerable&lt;TSource&gt; source2, System.Collections.Generic.IEqualityComparer&lt;TSource&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SequenceEqual&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source1, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source2, class System.Collections.Generic.IEqualityComparer`1&lt;!!TSource&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SequenceEqual(Of TSource) (source1 As IQueryable(Of TSource), source2 As IEnumerable(Of TSource), comparer As IEqualityComparer(Of TSource)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool SequenceEqual(System::Linq::IQueryable&lt;TSource&gt; ^ source1, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source2, System::Collections::Generic::IEqualityComparer&lt;TSource&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member SequenceEqual : System.Linq.IQueryable&lt;'Source&gt; * seq&lt;'Source&gt; * System.Collections.Generic.IEqualityComparer&lt;'Source&gt; -&gt; bool" Usage="System.Linq.Queryable.SequenceEqual (source1, source2, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="source2" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-1285">O tipo dos elementos das sequências de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1285">The type of the elements of the input sequences.</span>
          </span>
        </typeparam>
        <param name="source1">
          <span data-ttu-id="727ab-1286">Um <see cref="T:System.Linq.IQueryable`1" /> cujos elementos são comparados com os de <paramref name="source2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1286">An <see cref="T:System.Linq.IQueryable`1" /> whose elements to compare to those of <paramref name="source2" />.</span>
          </span>
        </param>
        <param name="source2">
          <span data-ttu-id="727ab-1287">Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> cujos elementos são comparados com os da primeira sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1287">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements to compare to those of the first sequence.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="727ab-1288">Um <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> a ser usado para comparar elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1288">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to use to compare elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1289">Determina se duas sequências são iguais usando um <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> especificado para comparar elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1289">Determines whether two sequences are equal by using a specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1290">
            <see langword="true" /> se as duas sequências de origem tiverem o mesmo tamanho e seus elementos correspondentes forem comparados como iguais; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1290">
              <see langword="true" /> if the two source sequences are of equal length and their corresponding elements compare equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1291">O <xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1291">The <xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1292">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source1` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1292">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source1` parameter.</span></span>  
  
 <span data-ttu-id="727ab-1293">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> depende da implementação do tipo do `source1` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1293">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> depends on the implementation of the type of the `source1` parameter.</span></span> <span data-ttu-id="727ab-1294">O comportamento esperado é que ele determina se os dois fonte sequências são iguais usando `comparer` para comparar elementos.</span><span class="sxs-lookup"><span data-stu-id="727ab-1294">The expected behavior is that it determines if the two source sequences are equal by using `comparer` to compare elements.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1295">
            <paramref name="source1" /> ou <paramref name="source2" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1295">
              <paramref name="source1" /> or <paramref name="source2" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Single&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="727ab-1296">Retorna um único elemento específico de uma sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1296">Returns a single, specific element of a sequence.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Single&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource Single&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource Single&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Single(Of TSource) (source As IQueryable(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource Single(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Single : System.Linq.IQueryable&lt;'Source&gt; -&gt; 'Source" Usage="System.Linq.Queryable.Single source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-1297">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1297">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-1298">Um <see cref="T:System.Linq.IQueryable`1" /> do qual o único elemento será retornado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1298">An <see cref="T:System.Linq.IQueryable`1" /> to return the single element of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1299">Retornará o único elemento de uma sequência e lançará uma exceção se não houver exatamente um elemento na sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1299">Returns the only element of a sequence, and throws an exception if there is not exactly one element in the sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1300">O único elemento de uma sequência de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1300">The single element of the input sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1301">O <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1301">The <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1302">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1302">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-1303">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1303">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-1304">O comportamento esperado é que ele retorna o único elemento no `source`.</span><span class="sxs-lookup"><span data-stu-id="727ab-1304">The expected behavior is that it returns the only element in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-1305">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> para selecionar o único elemento de uma matriz.</span><span class="sxs-lookup"><span data-stu-id="727ab-1305">The following code example demonstrates how to use <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to select the only element of an array.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#79](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#79)]
 [!code-vb[System.Linq.Queryable#79](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#79)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1306">
            <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1306">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="727ab-1307">O <paramref name="source" /> tem mais de um elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1307">
              <paramref name="source" /> has more than one element.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Single&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource Single&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource Single&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Single(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean))) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource Single(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, bool&gt; ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Single : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, bool&gt;&gt; -&gt; 'Source" Usage="System.Linq.Queryable.Single (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-1308">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1308">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-1309">Um <see cref="T:System.Linq.IQueryable`1" /> do qual retornar um único elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1309">An <see cref="T:System.Linq.IQueryable`1" /> to return a single element from.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="727ab-1310">Uma função para testar um elemento em relação a uma condição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1310">A function to test an element for a condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1311">Retorna o único elemento de uma sequência que satisfaz uma condição especificada e gera uma exceção se houver mais de um tal elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1311">Returns the only element of a sequence that satisfies a specified condition, and throws an exception if more than one such element exists.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1312">O único elemento da sequência de entrada que atende à condição em <paramref name="predicate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1312">The single element of the input sequence that satisfies the condition in <paramref name="predicate" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1313">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-1313">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-1314">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-1314">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-1315">O <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1315">The <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1316">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1316">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-1317">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1317">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-1318">O comportamento esperado é que ele retorna o único elemento no `source` que satisfaz a condição especificada pelo `predicate`.</span><span class="sxs-lookup"><span data-stu-id="727ab-1318">The expected behavior is that it returns the only element in `source` that satisfies the condition specified by `predicate`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-1319">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> para selecionar o único elemento de uma matriz que satisfaz uma condição.</span><span class="sxs-lookup"><span data-stu-id="727ab-1319">The following code example demonstrates how to use <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> to select the only element of an array that satisfies a condition.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#81](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#81)]
 [!code-vb[System.Linq.Queryable#81](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#81)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1320">
            <paramref name="source" /> ou <paramref name="predicate" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1320">
              <paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="727ab-1321">Nenhum elemento satisfaz a condição na <paramref name="predicate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1321">No element satisfies the condition in <paramref name="predicate" />.</span>
          </span>
          <span data-ttu-id="727ab-1322">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1322">-or-</span>
          </span>
          <span data-ttu-id="727ab-1323">Mais de um elemento satisfaz a condição na <paramref name="predicate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1323">More than one element satisfies the condition in <paramref name="predicate" />.</span>
          </span>
          <span data-ttu-id="727ab-1324">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1324">-or-</span>
          </span>
          <span data-ttu-id="727ab-1325">Uma sequência de origem está vazia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1325">The source sequence is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SingleOrDefault&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="727ab-1326">Retornará um único elemento específico de uma sequência ou um valor padrão se nenhum elemento assim for encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1326">Returns a single, specific element of a sequence, or a default value if no such element is found.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SingleOrDefault&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource SingleOrDefault&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource SingleOrDefault&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SingleOrDefault(Of TSource) (source As IQueryable(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource SingleOrDefault(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member SingleOrDefault : System.Linq.IQueryable&lt;'Source&gt; -&gt; 'Source" Usage="System.Linq.Queryable.SingleOrDefault source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-1327">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1327">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-1328">Um <see cref="T:System.Linq.IQueryable`1" /> do qual o único elemento será retornado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1328">An <see cref="T:System.Linq.IQueryable`1" /> to return the single element of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1329">Retorna o único elemento de uma sequência ou um valor padrão se a sequência é vazia; esse método gera uma exceção se há mais de um elemento na sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1329">Returns the only element of a sequence, or a default value if the sequence is empty; this method throws an exception if there is more than one element in the sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1330">O único elemento de sequência de entrada ou <c>default</c>(<paramref name="TSource" />) se a sequência não contiver elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1330">The single element of the input sequence, or <c>default</c>(<paramref name="TSource" />) if the sequence contains no elements.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1331">O <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1331">The <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1332">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1332">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-1333">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1333">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-1334">O comportamento esperado é que ele retorna o único elemento no `source`, ou um valor padrão se `source` está vazio.</span><span class="sxs-lookup"><span data-stu-id="727ab-1334">The expected behavior is that it returns the only element in `source`, or a default value if `source` is empty.</span></span>  
  
 <span data-ttu-id="727ab-1335">O <xref:System.Linq.Queryable.SingleOrDefault%2A> método não fornece uma maneira de especificar um valor padrão.</span><span class="sxs-lookup"><span data-stu-id="727ab-1335">The <xref:System.Linq.Queryable.SingleOrDefault%2A> method does not provide a way to specify a default value.</span></span> <span data-ttu-id="727ab-1336">Se você quiser especificar um valor padrão diferente de `default(TSource)`, use o <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> método conforme descrito na seção de exemplo.</span><span class="sxs-lookup"><span data-stu-id="727ab-1336">If you want to specify a default value other than `default(TSource)`, use the <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> method as described in the Example section.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-1337">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> para selecionar o único elemento de uma matriz.</span><span class="sxs-lookup"><span data-stu-id="727ab-1337">The following code example demonstrates how to use <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to select the only element of an array.</span></span> <span data-ttu-id="727ab-1338">A segunda consulta demonstra que <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> retorna um valor padrão quando a sequência não contém exatamente um elemento.</span><span class="sxs-lookup"><span data-stu-id="727ab-1338">The second query demonstrates that <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> returns a default value when the sequence does not contain exactly one element.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#83](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#83)]
 [!code-vb[System.Linq.Queryable#83](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#83)]  
  
 <span data-ttu-id="727ab-1339">Às vezes, o valor de `default(TSource)` não é o valor padrão que você deseja usar se a coleção não contiver elementos.</span><span class="sxs-lookup"><span data-stu-id="727ab-1339">Sometimes the value of `default(TSource)` is not the default value that you want to use if the collection contains no elements.</span></span> <span data-ttu-id="727ab-1340">Em vez de verificar o resultado para o valor padrão indesejado e, em seguida, alterando-se necessário, você pode usar o <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> método para especificar o valor padrão que você deseja usar, se a coleção está vazia.</span><span class="sxs-lookup"><span data-stu-id="727ab-1340">Instead of checking the result for the unwanted default value and then changing it if necessary, you can use the <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> method to specify the default value that you want to use if the collection is empty.</span></span> <span data-ttu-id="727ab-1341">Em seguida, chame <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> para obter o elemento.</span><span class="sxs-lookup"><span data-stu-id="727ab-1341">Then, call <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to obtain the element.</span></span> <span data-ttu-id="727ab-1342">O exemplo de código a seguir usa ambas as técnicas para obter um valor padrão de 1, se uma coleção de números de página está vazia.</span><span class="sxs-lookup"><span data-stu-id="727ab-1342">The following code example uses both techniques to obtain a default value of 1 if a collection of page numbers is empty.</span></span> <span data-ttu-id="727ab-1343">Porque o valor padrão para um número inteiro é 0, que não é um número válido de página geralmente, o valor padrão deve ser especificado como 1 em vez disso.</span><span class="sxs-lookup"><span data-stu-id="727ab-1343">Because the default value for an integer is 0, which is not usually a valid page number, the default value must be specified as 1 instead.</span></span> <span data-ttu-id="727ab-1344">A primeira variável de resultado é verificada para o valor padrão não desejados depois que a consulta for concluída.</span><span class="sxs-lookup"><span data-stu-id="727ab-1344">The first result variable is checked for the unwanted default value after the query is completed.</span></span> <span data-ttu-id="727ab-1345">A segunda variável de resultado é obtida chamando <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> para especificar um valor padrão de 1.</span><span class="sxs-lookup"><span data-stu-id="727ab-1345">The second result variable is obtained by calling <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> to specify a default value of 1.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#133](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#133)]
 [!code-vb[System.Linq.Queryable#133](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#133)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1346">
            <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1346">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="727ab-1347">O <paramref name="source" /> tem mais de um elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1347">
              <paramref name="source" /> has more than one element.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SingleOrDefault&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource SingleOrDefault&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource SingleOrDefault&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SingleOrDefault(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean))) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource SingleOrDefault(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, bool&gt; ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member SingleOrDefault : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, bool&gt;&gt; -&gt; 'Source" Usage="System.Linq.Queryable.SingleOrDefault (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-1348">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1348">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-1349">Um <see cref="T:System.Linq.IQueryable`1" /> do qual retornar um único elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1349">An <see cref="T:System.Linq.IQueryable`1" /> to return a single element from.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="727ab-1350">Uma função para testar um elemento em relação a uma condição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1350">A function to test an element for a condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1351">Retorna o único elemento de uma sequência que satisfaz uma condição especificada ou um valor padrão se esse elemento não existir. Esse método lança uma exceção se mais de um elemento satisfizer a condição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1351">Returns the only element of a sequence that satisfies a specified condition or a default value if no such element exists; this method throws an exception if more than one element satisfies the condition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1352">O único elemento da sequência de entrada que atende à condição em <paramref name="predicate" /> ou <c>default</c>(<paramref name="TSource" />) se nenhum elemento for encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1352">The single element of the input sequence that satisfies the condition in <paramref name="predicate" />, or <c>default</c>(<paramref name="TSource" />) if no such element is found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1353">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-1353">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-1354">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-1354">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-1355">O <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1355">The <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1356">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1356">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-1357">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1357">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-1358">O comportamento esperado é que ele retorna o único elemento no `source` que satisfaz a condição especificada pelo `predicate`, ou um valor padrão se não houver tal elemento.</span><span class="sxs-lookup"><span data-stu-id="727ab-1358">The expected behavior is that it returns the only element in `source` that satisfies the condition specified by `predicate`, or a default value if no such element exists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-1359">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> para selecionar o único elemento de uma matriz que satisfaz uma condição.</span><span class="sxs-lookup"><span data-stu-id="727ab-1359">The following code example demonstrates how to use <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> to select the only element of an array that satisfies a condition.</span></span> <span data-ttu-id="727ab-1360">A segunda consulta demonstra que <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> retorna um valor padrão quando a sequência não contém exatamente um elemento que satisfaz a condição.</span><span class="sxs-lookup"><span data-stu-id="727ab-1360">The second query demonstrates that <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> returns a default value when the sequence does not contain exactly one element that satisfies the condition.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#85](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#85)]
 [!code-vb[System.Linq.Queryable#85](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#85)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1361">
            <paramref name="source" /> ou <paramref name="predicate" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1361">
              <paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="727ab-1362">Mais de um elemento satisfaz a condição na <paramref name="predicate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1362">More than one element satisfies the condition in <paramref name="predicate" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Skip&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Skip&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Skip&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Skip``1(System.Linq.IQueryable{``0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Skip(Of TSource) (source As IQueryable(Of TSource), count As Integer) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Skip(System::Linq::IQueryable&lt;TSource&gt; ^ source, int count);" />
      <MemberSignature Language="F#" Value="static member Skip : System.Linq.IQueryable&lt;'Source&gt; * int -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.Skip (source, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-1363">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1363">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-1364">Um <see cref="T:System.Linq.IQueryable`1" /> do qual os elementos serão retornados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1364">An <see cref="T:System.Linq.IQueryable`1" /> to return elements from.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="727ab-1365">O número de elementos a serem ignorados antes de retornar os elementos restantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1365">The number of elements to skip before returning the remaining elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1366">Ignora um número especificado de elementos em uma sequência e retorna os elementos restantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1366">Bypasses a specified number of elements in a sequence and then returns the remaining elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1367">Um <see cref="T:System.Linq.IQueryable`1" /> que contém elementos que ocorrem após o índice especificado na sequência de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1367">An <see cref="T:System.Linq.IQueryable`1" /> that contains elements that occur after the specified index in the input sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1368">O <xref:System.Linq.Queryable.Skip%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Skip%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1368">The <xref:System.Linq.Queryable.Skip%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Skip%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1369">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1369">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-1370">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Skip%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1370">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Skip%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-1371">O comportamento esperado é que ela ignora os primeiros `count` elementos em `source` e retorna os elementos restantes.</span><span class="sxs-lookup"><span data-stu-id="727ab-1371">The expected behavior is that it skips the first `count` elements in `source` and returns the remaining elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-1372">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Skip%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> para ignorar um número especificado de elementos em uma matriz classificada e retornar os elementos restantes.</span><span class="sxs-lookup"><span data-stu-id="727ab-1372">The following code example demonstrates how to use <xref:System.Linq.Queryable.Skip%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> to skip a specified number of elements in a sorted array and return the remaining elements.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#87](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#87)]
 [!code-vb[System.Linq.Queryable#87](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#87)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1373">
            <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1373">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SkipLast&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; SkipLast&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; SkipLast&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.SkipLast``1(System.Linq.IQueryable{``0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SkipLast(Of TSource) (source As IQueryable(Of TSource), count As Integer) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ SkipLast(System::Linq::IQueryable&lt;TSource&gt; ^ source, int count);" />
      <MemberSignature Language="F#" Value="static member SkipLast : System.Linq.IQueryable&lt;'Source&gt; * int -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.SkipLast (source, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">To be added.</typeparam>
        <param name="source">To be added.</param>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SkipWhile&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="727ab-1374">Ignora elementos em uma sequência, contanto que uma condição especificada seja verdadeira e retorne os elementos restantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1374">Bypasses elements in a sequence as long as a specified condition is true and then returns the remaining elements.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SkipWhile&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; SkipWhile&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; SkipWhile&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SkipWhile(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean))) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ SkipWhile(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, bool&gt; ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member SkipWhile : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, bool&gt;&gt; -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.SkipWhile (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-1375">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1375">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-1376">Um <see cref="T:System.Linq.IQueryable`1" /> do qual os elementos serão retornados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1376">An <see cref="T:System.Linq.IQueryable`1" /> to return elements from.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="727ab-1377">Uma função para testar cada elemento em relação a uma condição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1377">A function to test each element for a condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1378">Ignora elementos em uma sequência, contanto que uma condição especificada seja verdadeira e retorne os elementos restantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1378">Bypasses elements in a sequence as long as a specified condition is true and then returns the remaining elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1379">Um <see cref="T:System.Linq.IQueryable`1" /> que contém elementos de <paramref name="source" /> começando no primeiro elemento na série linear não aprovada no teste especificado por <paramref name="predicate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1379">An <see cref="T:System.Linq.IQueryable`1" /> that contains elements from <paramref name="source" /> starting at the first element in the linear series that does not pass the test specified by <paramref name="predicate" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1380">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-1380">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-1381">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-1381">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-1382">O <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1382">The <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1383">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1383">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-1384">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1384">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-1385">O comportamento esperado é que ele se aplica `predicate` a cada elemento em `source` até encontrar um elemento para o qual `predicate` retorna false.</span><span class="sxs-lookup"><span data-stu-id="727ab-1385">The expected behavior is that it applies `predicate` to each element in `source` until it finds an element for which `predicate` returns false.</span></span> <span data-ttu-id="727ab-1386">Esse elemento e todos os elementos restantes são retornados.</span><span class="sxs-lookup"><span data-stu-id="727ab-1386">That element and all the remaining elements are returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-1387">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> para ignorar os elementos de uma matriz como uma condição seja verdadeira.</span><span class="sxs-lookup"><span data-stu-id="727ab-1387">The following code example demonstrates how to use <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> to skip elements of an array as long as a condition is true.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#88](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#88)]
 [!code-vb[System.Linq.Queryable#88](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#88)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1388">
            <paramref name="source" /> ou <paramref name="predicate" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1388">
              <paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SkipWhile&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; SkipWhile&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,int,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; SkipWhile&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TSource, int32, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SkipWhile(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Integer, Boolean))) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ SkipWhile(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, int, bool&gt; ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member SkipWhile : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, int, bool&gt;&gt; -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.SkipWhile (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Int32,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-1389">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1389">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-1390">Um <see cref="T:System.Linq.IQueryable`1" /> do qual os elementos serão retornados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1390">An <see cref="T:System.Linq.IQueryable`1" /> to return elements from.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="727ab-1391">Uma função para testar cada elemento de uma condição; o segundo parâmetro dessa função representa o índice do elemento de origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1391">A function to test each element for a condition; the second parameter of this function represents the index of the source element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1392">Ignora elementos em uma sequência, contanto que uma condição especificada seja verdadeira e retorne os elementos restantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1392">Bypasses elements in a sequence as long as a specified condition is true and then returns the remaining elements.</span>
          </span>
          <span data-ttu-id="727ab-1393">O índice do elemento é usado na lógica da função de predicado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1393">The element's index is used in the logic of the predicate function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1394">Um <see cref="T:System.Linq.IQueryable`1" /> que contém elementos de <paramref name="source" /> começando no primeiro elemento na série linear não aprovada no teste especificado por <paramref name="predicate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1394">An <see cref="T:System.Linq.IQueryable`1" /> that contains elements from <paramref name="source" /> starting at the first element in the linear series that does not pass the test specified by <paramref name="predicate" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1395">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-1395">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-1396">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-1396">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-1397">O <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1397">The <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1398">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1398">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-1399">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1399">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-1400">O comportamento esperado é que ele se aplica `predicate` a cada elemento em `source` até encontrar um elemento para o qual `predicate` retorna false.</span><span class="sxs-lookup"><span data-stu-id="727ab-1400">The expected behavior is that it applies `predicate` to each element in `source` until it finds an element for which `predicate` returns false.</span></span> <span data-ttu-id="727ab-1401">Esse elemento e todos os elementos restantes são retornados.</span><span class="sxs-lookup"><span data-stu-id="727ab-1401">That element and all the remaining elements are returned.</span></span> <span data-ttu-id="727ab-1402">O índice de cada elemento de código-fonte é fornecido como o segundo argumento para `predicate`.</span><span class="sxs-lookup"><span data-stu-id="727ab-1402">The index of each source element is provided as the second argument to `predicate`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-1403">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> para ignorar os elementos de uma matriz como uma condição que depende do índice do elemento é verdadeira.</span><span class="sxs-lookup"><span data-stu-id="727ab-1403">The following code example demonstrates how to use <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> to skip elements of an array as long as a condition that depends on the element's index is true.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#89](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#89)]
 [!code-vb[System.Linq.Queryable#89](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#89)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1404">
            <paramref name="source" /> ou <paramref name="predicate" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1404">
              <paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Sum">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="727ab-1405">Computa a soma de uma sequência de valores numéricos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1405">Computes the sum of a sequence of numeric values.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static decimal Sum (this System.Linq.IQueryable&lt;decimal&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Sum(class System.Linq.IQueryable`1&lt;valuetype System.Decimal&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Decimal})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As IQueryable(Of Decimal)) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Decimal Sum(System::Linq::IQueryable&lt;System::Decimal&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;decimal&gt; -&gt; decimal" Usage="System.Linq.Queryable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Decimal&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="727ab-1406">Uma sequência de valores <see cref="T:System.Decimal" /> para cálculo da soma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1406">A sequence of <see cref="T:System.Decimal" /> values to calculate the sum of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1407">Calcula a soma de uma sequência de valores <see cref="T:System.Decimal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1407">Computes the sum of a sequence of <see cref="T:System.Decimal" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1408">A soma dos valores na sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1408">The sum of the values in the sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1409">O <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Decimal%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Decimal%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1409">The <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Decimal%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Decimal%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1410">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1410">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-1411">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Decimal%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1411">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Decimal%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-1412">O comportamento esperado é que ele retorna a soma dos valores em `source`.</span><span class="sxs-lookup"><span data-stu-id="727ab-1412">The expected behavior is that it returns the sum of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-1413">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> para somar os valores de uma sequência.</span><span class="sxs-lookup"><span data-stu-id="727ab-1413">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> to sum the values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#120](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#120)]
 [!code-vb[System.Linq.Queryable#120](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#120)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1414">
            <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1414">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="727ab-1415">A soma é maior que <see cref="F:System.Decimal.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1415">The sum is larger than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static double Sum (this System.Linq.IQueryable&lt;double&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Sum(class System.Linq.IQueryable`1&lt;float64&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Double})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As IQueryable(Of Double)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Sum(System::Linq::IQueryable&lt;double&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;double&gt; -&gt; double" Usage="System.Linq.Queryable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Double&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="727ab-1416">Uma sequência de valores <see cref="T:System.Double" /> para cálculo da soma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1416">A sequence of <see cref="T:System.Double" /> values to calculate the sum of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1417">Calcula a soma de uma sequência de valores <see cref="T:System.Double" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1417">Computes the sum of a sequence of <see cref="T:System.Double" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1418">A soma dos valores na sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1418">The sum of the values in the sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1419">O <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Double%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Double%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1419">The <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Double%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Double%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1420">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1420">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-1421">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Double%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1421">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Double%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-1422">O comportamento esperado é que ele retorna a soma dos valores em `source`.</span><span class="sxs-lookup"><span data-stu-id="727ab-1422">The expected behavior is that it returns the sum of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-1423">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> para somar os valores de uma sequência.</span><span class="sxs-lookup"><span data-stu-id="727ab-1423">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> to sum the values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#120](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#120)]
 [!code-vb[System.Linq.Queryable#120](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#120)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1424">
            <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1424">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static int Sum (this System.Linq.IQueryable&lt;int&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sum(class System.Linq.IQueryable`1&lt;int32&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As IQueryable(Of Integer)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int Sum(System::Linq::IQueryable&lt;int&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;int&gt; -&gt; int" Usage="System.Linq.Queryable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Int32&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="727ab-1425">Uma sequência de valores <see cref="T:System.Int32" /> para cálculo da soma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1425">A sequence of <see cref="T:System.Int32" /> values to calculate the sum of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1426">Calcula a soma de uma sequência de valores <see cref="T:System.Int32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1426">Computes the sum of a sequence of <see cref="T:System.Int32" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1427">A soma dos valores na sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1427">The sum of the values in the sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1428">O <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Int32%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Int32%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1428">The <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Int32%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Int32%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1429">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1429">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-1430">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Int32%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1430">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Int32%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-1431">O comportamento esperado é que ele retorna a soma dos valores em `source`.</span><span class="sxs-lookup"><span data-stu-id="727ab-1431">The expected behavior is that it returns the sum of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-1432">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> para somar os valores de uma sequência.</span><span class="sxs-lookup"><span data-stu-id="727ab-1432">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> to sum the values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#120](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#120)]
 [!code-vb[System.Linq.Queryable#120](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#120)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1433">
            <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1433">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="727ab-1434">A soma é maior que <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1434">The sum is larger than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static long Sum (this System.Linq.IQueryable&lt;long&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Sum(class System.Linq.IQueryable`1&lt;int64&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As IQueryable(Of Long)) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long Sum(System::Linq::IQueryable&lt;long&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;int64&gt; -&gt; int64" Usage="System.Linq.Queryable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Int64&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="727ab-1435">Uma sequência de valores <see cref="T:System.Int64" /> para cálculo da soma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1435">A sequence of <see cref="T:System.Int64" /> values to calculate the sum of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1436">Calcula a soma de uma sequência de valores <see cref="T:System.Int64" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1436">Computes the sum of a sequence of <see cref="T:System.Int64" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1437">A soma dos valores na sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1437">The sum of the values in the sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1438">O <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Int64%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Int64%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1438">The <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Int64%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Int64%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1439">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1439">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-1440">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Int64%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1440">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Int64%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-1441">O comportamento esperado é que ele retorna a soma dos valores em `source`.</span><span class="sxs-lookup"><span data-stu-id="727ab-1441">The expected behavior is that it returns the sum of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-1442">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> para somar os valores de uma sequência.</span><span class="sxs-lookup"><span data-stu-id="727ab-1442">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> to sum the values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#120](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#120)]
 [!code-vb[System.Linq.Queryable#120](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#120)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1443">
            <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1443">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="727ab-1444">A soma é maior que <see cref="F:System.Int64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1444">The sum is larger than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;decimal&gt; Sum (this System.Linq.IQueryable&lt;Nullable&lt;decimal&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; Sum(class System.Linq.IQueryable`1&lt;valuetype System.Nullable`1&lt;valuetype System.Decimal&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Decimal}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As IQueryable(Of Nullable(Of Decimal))) As Nullable(Of Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;System::Decimal&gt; Sum(System::Linq::IQueryable&lt;Nullable&lt;System::Decimal&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;Nullable&lt;decimal&gt;&gt; -&gt; Nullable&lt;decimal&gt;" Usage="System.Linq.Queryable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Decimal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Nullable&lt;System.Decimal&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="727ab-1445">Uma sequência de valores <see cref="T:System.Decimal" /> que permitem valores nulos para cálculo da soma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1445">A sequence of nullable <see cref="T:System.Decimal" /> values to calculate the sum of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1446">Computa a soma de uma sequência de valores <see cref="T:System.Decimal" /> que permitem valores nulos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1446">Computes the sum of a sequence of nullable <see cref="T:System.Decimal" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1447">A soma dos valores na sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1447">The sum of the values in the sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1448">O <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Decimal%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Decimal%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1448">The <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Decimal%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Decimal%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1449">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1449">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-1450">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Decimal%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1450">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Decimal%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-1451">O comportamento esperado é que ele retorna a soma dos valores em `source`.</span><span class="sxs-lookup"><span data-stu-id="727ab-1451">The expected behavior is that it returns the sum of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-1452">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> para somar os valores de uma sequência.</span><span class="sxs-lookup"><span data-stu-id="727ab-1452">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> to sum the values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#121](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#121)]
 [!code-vb[System.Linq.Queryable#121](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#121)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1453">
            <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1453">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="727ab-1454">A soma é maior que <see cref="F:System.Decimal.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1454">The sum is larger than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Sum (this System.Linq.IQueryable&lt;Nullable&lt;double&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Sum(class System.Linq.IQueryable`1&lt;valuetype System.Nullable`1&lt;float64&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Double}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As IQueryable(Of Nullable(Of Double))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Sum(System::Linq::IQueryable&lt;Nullable&lt;double&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;Nullable&lt;double&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.Queryable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Nullable&lt;System.Double&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="727ab-1455">Uma sequência de valores <see cref="T:System.Double" /> que permitem valores nulos para cálculo da soma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1455">A sequence of nullable <see cref="T:System.Double" /> values to calculate the sum of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1456">Computa a soma de uma sequência de valores <see cref="T:System.Double" /> que permitem valores nulos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1456">Computes the sum of a sequence of nullable <see cref="T:System.Double" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1457">A soma dos valores na sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1457">The sum of the values in the sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1458">O <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Double%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Double%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1458">The <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Double%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Double%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1459">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1459">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-1460">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Double%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1460">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Double%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-1461">O comportamento esperado é que ele retorna a soma dos valores em `source`.</span><span class="sxs-lookup"><span data-stu-id="727ab-1461">The expected behavior is that it returns the sum of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-1462">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> para somar os valores de uma sequência.</span><span class="sxs-lookup"><span data-stu-id="727ab-1462">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> to sum the values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#121](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#121)]
 [!code-vb[System.Linq.Queryable#121](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#121)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1463">
            <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1463">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Sum (this System.Linq.IQueryable&lt;Nullable&lt;int&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Sum(class System.Linq.IQueryable`1&lt;valuetype System.Nullable`1&lt;int32&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As IQueryable(Of Nullable(Of Integer))) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;int&gt; Sum(System::Linq::IQueryable&lt;Nullable&lt;int&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;Nullable&lt;int&gt;&gt; -&gt; Nullable&lt;int&gt;" Usage="System.Linq.Queryable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Nullable&lt;System.Int32&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="727ab-1464">Uma sequência de valores <see cref="T:System.Int32" /> que permitem valores nulos para cálculo da soma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1464">A sequence of nullable <see cref="T:System.Int32" /> values to calculate the sum of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1465">Computa a soma de uma sequência de valores <see cref="T:System.Int32" /> que permitem valores nulos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1465">Computes the sum of a sequence of nullable <see cref="T:System.Int32" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1466">A soma dos valores na sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1466">The sum of the values in the sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1467">O <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int32%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int32%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1467">The <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int32%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int32%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1468">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1468">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-1469">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int32%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1469">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int32%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-1470">O comportamento esperado é que ele retorna a soma dos valores em `source`.</span><span class="sxs-lookup"><span data-stu-id="727ab-1470">The expected behavior is that it returns the sum of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-1471">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> para somar os valores de uma sequência.</span><span class="sxs-lookup"><span data-stu-id="727ab-1471">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> to sum the values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#121](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#121)]
 [!code-vb[System.Linq.Queryable#121](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#121)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1472">
            <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1472">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="727ab-1473">A soma é maior que <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1473">The sum is larger than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;long&gt; Sum (this System.Linq.IQueryable&lt;Nullable&lt;long&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int64&gt; Sum(class System.Linq.IQueryable`1&lt;valuetype System.Nullable`1&lt;int64&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int64}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As IQueryable(Of Nullable(Of Long))) As Nullable(Of Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;long&gt; Sum(System::Linq::IQueryable&lt;Nullable&lt;long&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;Nullable&lt;int64&gt;&gt; -&gt; Nullable&lt;int64&gt;" Usage="System.Linq.Queryable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Nullable&lt;System.Int64&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="727ab-1474">Uma sequência de valores <see cref="T:System.Int64" /> que permitem valores nulos para cálculo da soma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1474">A sequence of nullable <see cref="T:System.Int64" /> values to calculate the sum of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1475">Computa a soma de uma sequência de valores <see cref="T:System.Int64" /> que permitem valores nulos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1475">Computes the sum of a sequence of nullable <see cref="T:System.Int64" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1476">A soma dos valores na sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1476">The sum of the values in the sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1477">O <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1477">The <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1478">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1478">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-1479">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1479">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-1480">O comportamento esperado é que ele retorna a soma dos valores em `source`.</span><span class="sxs-lookup"><span data-stu-id="727ab-1480">The expected behavior is that it returns the sum of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-1481">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> para somar os valores de uma sequência.</span><span class="sxs-lookup"><span data-stu-id="727ab-1481">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> to sum the values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#121](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#121)]
 [!code-vb[System.Linq.Queryable#121](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#121)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1482">
            <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1482">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="727ab-1483">A soma é maior que <see cref="F:System.Int64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1483">The sum is larger than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;float&gt; Sum (this System.Linq.IQueryable&lt;Nullable&lt;float&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float32&gt; Sum(class System.Linq.IQueryable`1&lt;valuetype System.Nullable`1&lt;float32&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Single}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As IQueryable(Of Nullable(Of Single))) As Nullable(Of Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;float&gt; Sum(System::Linq::IQueryable&lt;Nullable&lt;float&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;Nullable&lt;single&gt;&gt; -&gt; Nullable&lt;single&gt;" Usage="System.Linq.Queryable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Nullable&lt;System.Single&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="727ab-1484">Uma sequência de valores <see cref="T:System.Single" /> que permitem valores nulos para cálculo da soma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1484">A sequence of nullable <see cref="T:System.Single" /> values to calculate the sum of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1485">Computa a soma de uma sequência de valores <see cref="T:System.Single" /> que permitem valores nulos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1485">Computes the sum of a sequence of nullable <see cref="T:System.Single" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1486">A soma dos valores na sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1486">The sum of the values in the sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1487">O <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1487">The <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1488">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1488">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-1489">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1489">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-1490">O comportamento esperado é que ele retorna a soma dos valores em `source`.</span><span class="sxs-lookup"><span data-stu-id="727ab-1490">The expected behavior is that it returns the sum of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-1491">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> para somar os valores de uma sequência.</span><span class="sxs-lookup"><span data-stu-id="727ab-1491">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> to sum the values of a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#121](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#121)]
 [!code-vb[System.Linq.Queryable#121](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#121)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1492">
            <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1492">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static float Sum (this System.Linq.IQueryable&lt;float&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Sum(class System.Linq.IQueryable`1&lt;float32&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Single})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As IQueryable(Of Single)) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static float Sum(System::Linq::IQueryable&lt;float&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;single&gt; -&gt; single" Usage="System.Linq.Queryable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Single&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="727ab-1493">Uma sequência de valores <see cref="T:System.Single" /> para cálculo da soma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1493">A sequence of <see cref="T:System.Single" /> values to calculate the sum of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1494">Calcula a soma de uma sequência de valores <see cref="T:System.Single" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1494">Computes the sum of a sequence of <see cref="T:System.Single" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1495">A soma dos valores na sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1495">The sum of the values in the sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1496">O <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1496">The <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1497">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1497">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-1498">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1498">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-1499">O comportamento esperado é que ele retorna a soma dos valores em `source`.</span><span class="sxs-lookup"><span data-stu-id="727ab-1499">The expected behavior is that it returns the sum of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-1500">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> para somar os valores de uma sequência.</span><span class="sxs-lookup"><span data-stu-id="727ab-1500">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> to sum the values of a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#120](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#120)]
 [!code-vb[System.Linq.Queryable#120](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#120)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1501">
            <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1501">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static decimal Sum&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,decimal&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Sum&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, valuetype System.Decimal&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Decimal))) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Decimal Sum(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, System::Decimal&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, decimal&gt;&gt; -&gt; decimal" Usage="System.Linq.Queryable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Decimal&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-1502">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1502">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-1503">Uma sequência de valores do tipo <c>TSource</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1503">A sequence of values of type <c>TSource</c>.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="727ab-1504">Uma função de projeção a ser aplicada a cada elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1504">A projection function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1505">Calcula a soma da sequência de valores <see cref="T:System.Decimal" /> que é obtida invocando uma função de projeção em cada elemento da sequência de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1505">Computes the sum of the sequence of <see cref="T:System.Decimal" /> values that is obtained by invoking a projection function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1506">A soma dos valores projetados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1506">The sum of the projected values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1507">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-1507">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-1508">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-1508">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-1509">O <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Decimal%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Decimal%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1509">The <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Decimal%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Decimal%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1510">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1510">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-1511">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Decimal%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1511">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Decimal%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-1512">O comportamento esperado é que ela invoca `selector` em cada elemento de `source` e retorna a soma dos valores resultantes.</span><span class="sxs-lookup"><span data-stu-id="727ab-1512">The expected behavior is that it invokes `selector` on each element of `source` and returns the sum of the resulting values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-1513">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> para somar os valores previstos de uma sequência.</span><span class="sxs-lookup"><span data-stu-id="727ab-1513">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> to sum the projected values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#98](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#98)]
 [!code-vb[System.Linq.Queryable#98](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#98)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1514">
            <paramref name="source" /> ou <paramref name="selector" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1514">
              <paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="727ab-1515">A soma é maior que <see cref="F:System.Decimal.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1515">The sum is larger than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static double Sum&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,double&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Sum&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, float64&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Double))) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Sum(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, double&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, double&gt;&gt; -&gt; double" Usage="System.Linq.Queryable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Double&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-1516">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1516">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-1517">Uma sequência de valores do tipo <c>TSource</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1517">A sequence of values of type <c>TSource</c>.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="727ab-1518">Uma função de projeção a ser aplicada a cada elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1518">A projection function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1519">Calcula a soma da sequência de valores <see cref="T:System.Double" /> que é obtida invocando uma função de projeção em cada elemento da sequência de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1519">Computes the sum of the sequence of <see cref="T:System.Double" /> values that is obtained by invoking a projection function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1520">A soma dos valores projetados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1520">The sum of the projected values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1521">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-1521">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-1522">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-1522">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-1523">O <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1523">The <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1524">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1524">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-1525">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> depende da implementação do tipo de ele `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1525">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> depends on the implementation of the type of he `source` parameter.</span></span> <span data-ttu-id="727ab-1526">O comportamento esperado é que ela invoca `selector` em cada elemento de `source` e retorna a soma dos valores resultantes.</span><span class="sxs-lookup"><span data-stu-id="727ab-1526">The expected behavior is that it invokes `selector` on each element of `source` and returns the sum of the resulting values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-1527">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> para somar os valores previstos de uma sequência.</span><span class="sxs-lookup"><span data-stu-id="727ab-1527">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> to sum the projected values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#98](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#98)]
 [!code-vb[System.Linq.Queryable#98](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#98)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1528">
            <paramref name="source" /> ou <paramref name="selector" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1528">
              <paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static int Sum&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,int&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sum&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, int32&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Integer))) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int Sum(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, int&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, int&gt;&gt; -&gt; int" Usage="System.Linq.Queryable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Int32&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-1529">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1529">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-1530">Uma sequência de valores do tipo <c>TSource</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1530">A sequence of values of type <c>TSource</c>.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="727ab-1531">Uma função de projeção a ser aplicada a cada elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1531">A projection function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1532">Calcula a soma da sequência de valores <see cref="T:System.Int32" /> que é obtida invocando uma função de projeção em cada elemento da sequência de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1532">Computes the sum of the sequence of <see cref="T:System.Int32" /> values that is obtained by invoking a projection function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1533">A soma dos valores projetados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1533">The sum of the projected values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1534">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-1534">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-1535">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-1535">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-1536">O <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1536">The <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1537">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1537">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-1538">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1538">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-1539">O comportamento esperado é que ela invoca `selector` em cada elemento de `source` e retorna a soma dos valores resultantes.</span><span class="sxs-lookup"><span data-stu-id="727ab-1539">The expected behavior is that it invokes `selector` on each element of `source` and returns the sum of the resulting values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-1540">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> para somar os valores previstos de uma sequência.</span><span class="sxs-lookup"><span data-stu-id="727ab-1540">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> to sum the projected values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#98](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#98)]
 [!code-vb[System.Linq.Queryable#98](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#98)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1541">
            <paramref name="source" /> ou <paramref name="selector" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1541">
              <paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="727ab-1542">A soma é maior que <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1542">The sum is larger than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static long Sum&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,long&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Sum&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, int64&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Long))) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long Sum(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, long&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, int64&gt;&gt; -&gt; int64" Usage="System.Linq.Queryable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Int64&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-1543">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1543">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-1544">Uma sequência de valores do tipo <c>TSource</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1544">A sequence of values of type <c>TSource</c>.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="727ab-1545">Uma função de projeção a ser aplicada a cada elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1545">A projection function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1546">Calcula a soma da sequência de valores <see cref="T:System.Int64" /> que é obtida invocando uma função de projeção em cada elemento da sequência de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1546">Computes the sum of the sequence of <see cref="T:System.Int64" /> values that is obtained by invoking a projection function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1547">A soma dos valores projetados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1547">The sum of the projected values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1548">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-1548">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-1549">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-1549">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-1550">O <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int64%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int64%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1550">The <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int64%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int64%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1551">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1551">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-1552">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int64%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1552">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int64%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-1553">O comportamento esperado é que ela invoca `selector` em cada elemento de `source` e retorna a soma dos valores resultantes.</span><span class="sxs-lookup"><span data-stu-id="727ab-1553">The expected behavior is that it invokes `selector` on each element of `source` and returns the sum of the resulting values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-1554">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> para somar os valores previstos de uma sequência.</span><span class="sxs-lookup"><span data-stu-id="727ab-1554">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> to sum the projected values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#98](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#98)]
 [!code-vb[System.Linq.Queryable#98](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#98)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1555">
            <paramref name="source" /> ou <paramref name="selector" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1555">
              <paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="727ab-1556">A soma é maior que <see cref="F:System.Int64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1556">The sum is larger than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;decimal&gt; Sum&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,Nullable&lt;decimal&gt;&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; Sum&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;valuetype System.Decimal&gt;&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Nullable(Of Decimal)))) As Nullable(Of Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;System::Decimal&gt; Sum(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, Nullable&lt;System::Decimal&gt;&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, Nullable&lt;decimal&gt;&gt;&gt; -&gt; Nullable&lt;decimal&gt;" Usage="System.Linq.Queryable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Decimal&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Nullable&lt;System.Decimal&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-1557">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1557">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-1558">Uma sequência de valores do tipo <c>TSource</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1558">A sequence of values of type <c>TSource</c>.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="727ab-1559">Uma função de projeção a ser aplicada a cada elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1559">A projection function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1560">Calcula a soma da sequência de valores <see cref="T:System.Decimal" /> anuláveis obtida invocando uma função de projeção em cada elemento da sequência de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1560">Computes the sum of the sequence of nullable <see cref="T:System.Decimal" /> values that is obtained by invoking a projection function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1561">A soma dos valores projetados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1561">The sum of the projected values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1562">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-1562">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-1563">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-1563">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-1564">O <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Decimal%7D%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Decimal%7D%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1564">The <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Decimal%7D%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Decimal%7D%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1565">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1565">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-1566">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Decimal%7D%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1566">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Decimal%7D%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-1567">O comportamento esperado é que ela invoca `selector` em cada elemento de `source` e retorna a soma dos valores resultantes.</span><span class="sxs-lookup"><span data-stu-id="727ab-1567">The expected behavior is that it invokes `selector` on each element of `source` and returns the sum of the resulting values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-1568">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> para somar os valores previstos de uma sequência.</span><span class="sxs-lookup"><span data-stu-id="727ab-1568">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> to sum the projected values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#98](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#98)]
 [!code-vb[System.Linq.Queryable#98](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#98)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1569">
            <paramref name="source" /> ou <paramref name="selector" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1569">
              <paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="727ab-1570">A soma é maior que <see cref="F:System.Decimal.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1570">The sum is larger than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Sum&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,Nullable&lt;double&gt;&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Sum&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;float64&gt;&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Nullable(Of Double)))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Sum(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, Nullable&lt;double&gt;&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, Nullable&lt;double&gt;&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.Queryable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Nullable&lt;System.Double&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-1571">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1571">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-1572">Uma sequência de valores do tipo <c>TSource</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1572">A sequence of values of type <c>TSource</c>.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="727ab-1573">Uma função de projeção a ser aplicada a cada elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1573">A projection function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1574">Calcula a soma da sequência de valores <see cref="T:System.Double" /> anuláveis obtida invocando uma função de projeção em cada elemento da sequência de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1574">Computes the sum of the sequence of nullable <see cref="T:System.Double" /> values that is obtained by invoking a projection function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1575">A soma dos valores projetados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1575">The sum of the projected values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1576">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-1576">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-1577">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-1577">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-1578">O <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Double%7D%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Double%7D%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1578">The <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Double%7D%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Double%7D%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1579">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1579">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-1580">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Double%7D%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1580">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Double%7D%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-1581">O comportamento esperado é que ela invoca `selector` em cada elemento de `source` e retorna a soma dos valores resultantes.</span><span class="sxs-lookup"><span data-stu-id="727ab-1581">The expected behavior is that it invokes `selector` on each element of `source` and returns the sum of the resulting values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-1582">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> para somar os valores previstos de uma sequência.</span><span class="sxs-lookup"><span data-stu-id="727ab-1582">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> to sum the projected values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#98](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#98)]
 [!code-vb[System.Linq.Queryable#98](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#98)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1583">
            <paramref name="source" /> ou <paramref name="selector" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1583">
              <paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Sum&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,Nullable&lt;int&gt;&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Sum&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;int32&gt;&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Nullable(Of Integer)))) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;int&gt; Sum(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, Nullable&lt;int&gt;&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, Nullable&lt;int&gt;&gt;&gt; -&gt; Nullable&lt;int&gt;" Usage="System.Linq.Queryable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Nullable&lt;System.Int32&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-1584">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1584">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-1585">Uma sequência de valores do tipo <c>TSource</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1585">A sequence of values of type <c>TSource</c>.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="727ab-1586">Uma função de projeção a ser aplicada a cada elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1586">A projection function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1587">Calcula a soma da sequência de valores <see cref="T:System.Int32" /> anuláveis obtida invocando uma função de projeção em cada elemento da sequência de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1587">Computes the sum of the sequence of nullable <see cref="T:System.Int32" /> values that is obtained by invoking a projection function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1588">A soma dos valores projetados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1588">The sum of the projected values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1589">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-1589">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-1590">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-1590">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-1591">O <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int32%7D%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int32%7D%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1591">The <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int32%7D%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int32%7D%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1592">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1592">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-1593">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int32%7D%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1593">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int32%7D%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-1594">O comportamento esperado é que ela invoca `selector` em cada elemento de `source` e retorna a soma dos valores resultantes.</span><span class="sxs-lookup"><span data-stu-id="727ab-1594">The expected behavior is that it invokes `selector` on each element of `source` and returns the sum of the resulting values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-1595">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> para somar os valores previstos de uma sequência.</span><span class="sxs-lookup"><span data-stu-id="727ab-1595">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> to sum the projected values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#98](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#98)]
 [!code-vb[System.Linq.Queryable#98](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#98)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1596">
            <paramref name="source" /> ou <paramref name="selector" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1596">
              <paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="727ab-1597">A soma é maior que <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1597">The sum is larger than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;long&gt; Sum&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,Nullable&lt;long&gt;&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int64&gt; Sum&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;int64&gt;&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Nullable(Of Long)))) As Nullable(Of Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;long&gt; Sum(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, Nullable&lt;long&gt;&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, Nullable&lt;int64&gt;&gt;&gt; -&gt; Nullable&lt;int64&gt;" Usage="System.Linq.Queryable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Nullable&lt;System.Int64&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-1598">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1598">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-1599">Uma sequência de valores do tipo <c>TSource</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1599">A sequence of values of type <c>TSource</c>.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="727ab-1600">Uma função de projeção a ser aplicada a cada elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1600">A projection function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1601">Calcula a soma da sequência de valores <see cref="T:System.Int64" /> anuláveis obtida invocando uma função de projeção em cada elemento da sequência de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1601">Computes the sum of the sequence of nullable <see cref="T:System.Int64" /> values that is obtained by invoking a projection function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1602">A soma dos valores projetados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1602">The sum of the projected values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1603">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-1603">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-1604">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-1604">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-1605">O <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int64%7D%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int64%7D%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1605">The <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int64%7D%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int64%7D%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1606">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1606">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-1607">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int64%7D%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1607">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int64%7D%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-1608">O comportamento esperado é que ela invoca `selector` em cada elemento de `source` e retorna a soma dos valores resultantes.</span><span class="sxs-lookup"><span data-stu-id="727ab-1608">The expected behavior is that it invokes `selector` on each element of `source` and returns the sum of the resulting values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-1609">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> para somar os valores previstos de uma sequência.</span><span class="sxs-lookup"><span data-stu-id="727ab-1609">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> to sum the projected values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#98](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#98)]
 [!code-vb[System.Linq.Queryable#98](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#98)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1610">
            <paramref name="source" /> ou <paramref name="selector" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1610">
              <paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="727ab-1611">A soma é maior que <see cref="F:System.Int64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1611">The sum is larger than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;float&gt; Sum&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,Nullable&lt;float&gt;&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float32&gt; Sum&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;float32&gt;&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Nullable(Of Single)))) As Nullable(Of Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;float&gt; Sum(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, Nullable&lt;float&gt;&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, Nullable&lt;single&gt;&gt;&gt; -&gt; Nullable&lt;single&gt;" Usage="System.Linq.Queryable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Nullable&lt;System.Single&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-1612">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1612">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-1613">Uma sequência de valores do tipo <c>TSource</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1613">A sequence of values of type <c>TSource</c>.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="727ab-1614">Uma função de projeção a ser aplicada a cada elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1614">A projection function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1615">Calcula a soma da sequência de valores <see cref="T:System.Single" /> anuláveis obtida invocando uma função de projeção em cada elemento da sequência de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1615">Computes the sum of the sequence of nullable <see cref="T:System.Single" /> values that is obtained by invoking a projection function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1616">A soma dos valores projetados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1616">The sum of the projected values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1617">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-1617">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-1618">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-1618">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-1619">O <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Single%7D%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Single%7D%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1619">The <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Single%7D%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Single%7D%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1620">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1620">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-1621">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Single%7D%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1621">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Single%7D%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-1622">O comportamento esperado é que ela invoca `selector` em cada elemento de `source` e retorna a soma dos valores resultantes.</span><span class="sxs-lookup"><span data-stu-id="727ab-1622">The expected behavior is that it invokes `selector` on each element of `source` and returns the sum of the resulting values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-1623">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> para somar os valores previstos de uma sequência.</span><span class="sxs-lookup"><span data-stu-id="727ab-1623">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> to sum the projected values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#98](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#98)]
 [!code-vb[System.Linq.Queryable#98](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#98)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1624">
            <paramref name="source" /> ou <paramref name="selector" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1624">
              <paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static float Sum&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,float&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Sum&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, float32&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Single))) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static float Sum(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, float&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, single&gt;&gt; -&gt; single" Usage="System.Linq.Queryable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Single&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-1625">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1625">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-1626">Uma sequência de valores do tipo <c>TSource</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1626">A sequence of values of type <c>TSource</c>.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="727ab-1627">Uma função de projeção a ser aplicada a cada elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1627">A projection function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1628">Calcula a soma da sequência de valores <see cref="T:System.Single" /> que é obtida invocando uma função de projeção em cada elemento da sequência de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1628">Computes the sum of the sequence of <see cref="T:System.Single" /> values that is obtained by invoking a projection function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1629">A soma dos valores projetados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1629">The sum of the projected values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1630">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-1630">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-1631">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-1631">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-1632">O <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Single%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Single%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1632">The <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Single%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Single%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1633">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1633">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-1634">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Single%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1634">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Single%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-1635">O comportamento esperado é que ela invoca `selector` em cada elemento de `source` e retorna a soma dos valores resultantes.</span><span class="sxs-lookup"><span data-stu-id="727ab-1635">The expected behavior is that it invokes `selector` on each element of `source` and returns the sum of the resulting values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-1636">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> para somar os valores previstos de uma sequência.</span><span class="sxs-lookup"><span data-stu-id="727ab-1636">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> to sum the projected values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#98](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#98)]
 [!code-vb[System.Linq.Queryable#98](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#98)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1637">
            <paramref name="source" /> ou <paramref name="selector" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1637">
              <paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Take&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Take&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Take&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Take``1(System.Linq.IQueryable{``0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Take(Of TSource) (source As IQueryable(Of TSource), count As Integer) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Take(System::Linq::IQueryable&lt;TSource&gt; ^ source, int count);" />
      <MemberSignature Language="F#" Value="static member Take : System.Linq.IQueryable&lt;'Source&gt; * int -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.Take (source, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-1638">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1638">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-1639">A sequência da qual os elementos serão retornados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1639">The sequence to return elements from.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="727ab-1640">O número de elementos a serem retornados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1640">The number of elements to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1641">Retorna um número especificado de elementos contíguos do início de uma sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1641">Returns a specified number of contiguous elements from the start of a sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1642">Um <see cref="T:System.Linq.IQueryable`1" /> que contém o número especificado de elementos do início de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1642">An <see cref="T:System.Linq.IQueryable`1" /> that contains the specified number of elements from the start of <paramref name="source" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1643">O <xref:System.Linq.Queryable.Take%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Take%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1643">The <xref:System.Linq.Queryable.Take%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Take%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1644">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1644">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-1645">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Take%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1645">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Take%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-1646">O comportamento esperado é que leva a primeira `count` elementos desde o início do `source`.</span><span class="sxs-lookup"><span data-stu-id="727ab-1646">The expected behavior is that it takes the first `count` elements from the start of `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-1647">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Take%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> para retornar os elementos desde o início de uma sequência.</span><span class="sxs-lookup"><span data-stu-id="727ab-1647">The following code example demonstrates how to use <xref:System.Linq.Queryable.Take%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> to return elements from the start of a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#99](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#99)]
 [!code-vb[System.Linq.Queryable#99](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#99)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1648">
            <paramref name="source" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1648">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TakeLast&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; TakeLast&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; TakeLast&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.TakeLast``1(System.Linq.IQueryable{``0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TakeLast(Of TSource) (source As IQueryable(Of TSource), count As Integer) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ TakeLast(System::Linq::IQueryable&lt;TSource&gt; ^ source, int count);" />
      <MemberSignature Language="F#" Value="static member TakeLast : System.Linq.IQueryable&lt;'Source&gt; * int -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.TakeLast (source, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">To be added.</typeparam>
        <param name="source">To be added.</param>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TakeWhile&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="727ab-1649">Retorna elementos de uma sequência contanto que uma condição especificada seja true e, em seguida, ignora os elementos restantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1649">Returns elements from a sequence as long as a specified condition is true, and then skips the remaining elements.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TakeWhile&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; TakeWhile&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; TakeWhile&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TakeWhile(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean))) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ TakeWhile(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, bool&gt; ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member TakeWhile : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, bool&gt;&gt; -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.TakeWhile (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-1650">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1650">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-1651">A sequência da qual os elementos serão retornados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1651">The sequence to return elements from.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="727ab-1652">Uma função para testar cada elemento em relação a uma condição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1652">A function to test each element for a condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1653">Retorna os elementos de uma sequência contanto que uma condição especificada seja verdadeira.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1653">Returns elements from a sequence as long as a specified condition is true.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1654">Um <see cref="T:System.Linq.IQueryable`1" /> que contém elementos da sequência de entrada que ocorrem antes do elemento no qual o teste especificado por <paramref name="predicate" /> não é mais aprovado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1654">An <see cref="T:System.Linq.IQueryable`1" /> that contains elements from the input sequence occurring before the element at which the test specified by <paramref name="predicate" /> no longer passes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1655">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-1655">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-1656">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-1656">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-1657">O <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1657">The <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1658">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1658">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-1659">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1659">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-1660">O comportamento esperado é que ele se aplica `predicate` a cada elemento em `source` até encontrar um elemento para o qual `predicate` retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="727ab-1660">The expected behavior is that it applies `predicate` to each element in `source` until it finds an element for which `predicate` returns `false`.</span></span> <span data-ttu-id="727ab-1661">Ela retorna todos os elementos até que esse ponto.</span><span class="sxs-lookup"><span data-stu-id="727ab-1661">It returns all the elements up until that point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-1662">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> para retornar elementos desde o início de uma sequência, desde que uma condição seja verdadeira.</span><span class="sxs-lookup"><span data-stu-id="727ab-1662">The following code example demonstrates how to use <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> to return elements from the start of a sequence as long as a condition is true.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#100](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#100)]
 [!code-vb[System.Linq.Queryable#100](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#100)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1663">
            <paramref name="source" /> ou <paramref name="predicate" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1663">
              <paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TakeWhile&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; TakeWhile&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,int,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; TakeWhile&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TSource, int32, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TakeWhile(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Integer, Boolean))) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ TakeWhile(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, int, bool&gt; ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member TakeWhile : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, int, bool&gt;&gt; -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.TakeWhile (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Int32,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-1664">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1664">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-1665">A sequência da qual os elementos serão retornados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1665">The sequence to return elements from.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="727ab-1666">Uma função para testar cada elemento em relação a uma condição; o segundo parâmetro da função representa o índice do elemento na sequência de origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1666">A function to test each element for a condition; the second parameter of the function represents the index of the element in the source sequence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1667">Retorna os elementos de uma sequência contanto que uma condição especificada seja verdadeira.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1667">Returns elements from a sequence as long as a specified condition is true.</span>
          </span>
          <span data-ttu-id="727ab-1668">O índice do elemento é usado na lógica da função de predicado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1668">The element's index is used in the logic of the predicate function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1669">Um <see cref="T:System.Linq.IQueryable`1" /> que contém elementos da sequência de entrada que ocorrem antes do elemento no qual o teste especificado por <paramref name="predicate" /> não é mais aprovado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1669">An <see cref="T:System.Linq.IQueryable`1" /> that contains elements from the input sequence occurring before the element at which the test specified by <paramref name="predicate" /> no longer passes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1670">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-1670">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-1671">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-1671">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-1672">O <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1672">The <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1673">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1673">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-1674">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1674">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-1675">O comportamento esperado é que ele se aplica `predicate` a cada elemento em `source` até encontrar um elemento para o qual `predicate` retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="727ab-1675">The expected behavior is that it applies `predicate` to each element in `source` until it finds an element for which `predicate` returns `false`.</span></span> <span data-ttu-id="727ab-1676">Ela retorna todos os elementos até que esse ponto.</span><span class="sxs-lookup"><span data-stu-id="727ab-1676">It returns all the elements up until that point.</span></span> <span data-ttu-id="727ab-1677">O índice de cada elemento de código-fonte é fornecido como o segundo argumento para `predicate`.</span><span class="sxs-lookup"><span data-stu-id="727ab-1677">The index of each source element is provided as the second argument to `predicate`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-1678">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> para retornar elementos desde o início de uma sequência, desde que uma condição que usa o índice do elemento é verdadeira.</span><span class="sxs-lookup"><span data-stu-id="727ab-1678">The following code example demonstrates how to use <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> to return elements from the start of a sequence as long as a condition that uses the index of the element is true.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#101](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#101)]
 [!code-vb[System.Linq.Queryable#101](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#101)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1679">
            <paramref name="source" /> ou <paramref name="predicate" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1679">
              <paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ThenBy&lt;TSource,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="727ab-1680">Executa uma ordenação posterior dos elementos em uma sequência em ordem crescente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1680">Performs a subsequent ordering of the elements in a sequence in ascending order.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ThenBy&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IOrderedQueryable&lt;TSource&gt; ThenBy&lt;TSource,TKey&gt; (this System.Linq.IOrderedQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IOrderedQueryable`1&lt;!!TSource&gt; ThenBy&lt;TSource, TKey&gt;(class System.Linq.IOrderedQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenBy(Of TSource, TKey) (source As IOrderedQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey))) As IOrderedQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IOrderedQueryable&lt;TSource&gt; ^ ThenBy(System::Linq::IOrderedQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member ThenBy : System.Linq.IOrderedQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Key&gt;&gt; -&gt; System.Linq.IOrderedQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.ThenBy (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IOrderedQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IOrderedQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-1681">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1681">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="727ab-1682">O tipo da chave retornada pela função representada por <paramref name="keySelector" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1682">The type of the key returned by the function represented by <paramref name="keySelector" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-1683">Um <see cref="T:System.Linq.IOrderedQueryable`1" /> que contém elementos a ser classificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1683">An <see cref="T:System.Linq.IOrderedQueryable`1" /> that contains elements to sort.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="727ab-1684">Uma função para extrair uma chave de cada elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1684">A function to extract a key from each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1685">Executa uma ordenação posterior dos elementos em uma sequência em ordem crescente de acordo com uma chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1685">Performs a subsequent ordering of the elements in a sequence in ascending order according to a key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1686">Um <see cref="T:System.Linq.IOrderedQueryable`1" /> cujos elementos são classificados de acordo com uma chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1686">An <see cref="T:System.Linq.IOrderedQueryable`1" /> whose elements are sorted according to a key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1687">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-1687">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-1688">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-1688">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-1689">O <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1689">The <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1690">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1690">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span> <span data-ttu-id="727ab-1691">O resultado da chamada <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> é convertido para o tipo <xref:System.Linq.IOrderedQueryable%601> e retornado.</span><span class="sxs-lookup"><span data-stu-id="727ab-1691">The result of calling <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> is cast to type <xref:System.Linq.IOrderedQueryable%601> and returned.</span></span>  
  
 <span data-ttu-id="727ab-1692">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1692">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-1693">O comportamento esperado é que ele executa uma classificação secundária dos elementos da `source` com base na chave obtida invocando `keySelector` em cada elemento de `source`.</span><span class="sxs-lookup"><span data-stu-id="727ab-1693">The expected behavior is that it performs a secondary sort of the elements of `source` based on the key obtained by invoking `keySelector` on each element of `source`.</span></span> <span data-ttu-id="727ab-1694">Todos os estabelecido anteriormente como ordens de classificação são preservadas.</span><span class="sxs-lookup"><span data-stu-id="727ab-1694">All previously established sort orders are preserved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-1695">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> para executar uma classificação secundária dos elementos em uma sequência.</span><span class="sxs-lookup"><span data-stu-id="727ab-1695">The following code example demonstrates how to use <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> to perform a secondary ordering of the elements in a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#102](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#102)]
 [!code-vb[System.Linq.Queryable#102](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#102)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1696">
            <paramref name="source" /> ou <paramref name="keySelector" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1696">
              <paramref name="source" /> or <paramref name="keySelector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ThenBy&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IOrderedQueryable&lt;TSource&gt; ThenBy&lt;TSource,TKey&gt; (this System.Linq.IOrderedQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IOrderedQueryable`1&lt;!!TSource&gt; ThenBy&lt;TSource, TKey&gt;(class System.Linq.IOrderedQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenBy(Of TSource, TKey) (source As IOrderedQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey)), comparer As IComparer(Of TKey)) As IOrderedQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IOrderedQueryable&lt;TSource&gt; ^ ThenBy(System::Linq::IOrderedQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member ThenBy : System.Linq.IOrderedQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Key&gt;&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Linq.IOrderedQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.ThenBy (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IOrderedQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IOrderedQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-1697">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1697">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="727ab-1698">O tipo da chave retornada pela função representada por <paramref name="keySelector" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1698">The type of the key returned by the function represented by <paramref name="keySelector" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-1699">Um <see cref="T:System.Linq.IOrderedQueryable`1" /> que contém elementos a ser classificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1699">An <see cref="T:System.Linq.IOrderedQueryable`1" /> that contains elements to sort.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="727ab-1700">Uma função para extrair uma chave de cada elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1700">A function to extract a key from each element.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="727ab-1701">Um <see cref="T:System.Collections.Generic.IComparer`1" /> para comparar chaves.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1701">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1702">Executa uma ordenação posterior dos elementos em uma sequência em ordem crescente usando um comparador especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1702">Performs a subsequent ordering of the elements in a sequence in ascending order by using a specified comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1703">Um <see cref="T:System.Linq.IOrderedQueryable`1" /> cujos elementos são classificados de acordo com uma chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1703">An <see cref="T:System.Linq.IOrderedQueryable`1" /> whose elements are sorted according to a key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1704">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-1704">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-1705">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-1705">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-1706">O <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1706">The <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1707">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1707">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span> <span data-ttu-id="727ab-1708">O resultado da chamada <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> é convertido para o tipo <xref:System.Linq.IOrderedQueryable%601> e retornado.</span><span class="sxs-lookup"><span data-stu-id="727ab-1708">The result of calling <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> is cast to type <xref:System.Linq.IOrderedQueryable%601> and returned.</span></span>  
  
 <span data-ttu-id="727ab-1709">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1709">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-1710">O comportamento esperado é que ele executa uma classificação secundária dos elementos da `source` com base na chave obtida invocando `keySelector` em cada elemento de `source`.</span><span class="sxs-lookup"><span data-stu-id="727ab-1710">The expected behavior is that it performs a secondary sort of the elements of `source` based on the key obtained by invoking `keySelector` on each element of `source`.</span></span> <span data-ttu-id="727ab-1711">Todos os estabelecido anteriormente como ordens de classificação são preservadas.</span><span class="sxs-lookup"><span data-stu-id="727ab-1711">All previously established sort orders are preserved.</span></span> <span data-ttu-id="727ab-1712">O `comparer` parâmetro é usado para comparar valores de chave.</span><span class="sxs-lookup"><span data-stu-id="727ab-1712">The `comparer` parameter is used to compare key values.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1713">
            <paramref name="source" />, <paramref name="keySelector" /> ou <paramref name="comparer" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1713">
              <paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="comparer" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ThenByDescending&lt;TSource,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="727ab-1714">Executa uma ordenação posterior dos elementos em uma sequência em ordem decrescente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1714">Performs a subsequent ordering of the elements in a sequence in descending order.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ThenByDescending&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IOrderedQueryable&lt;TSource&gt; ThenByDescending&lt;TSource,TKey&gt; (this System.Linq.IOrderedQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IOrderedQueryable`1&lt;!!TSource&gt; ThenByDescending&lt;TSource, TKey&gt;(class System.Linq.IOrderedQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenByDescending(Of TSource, TKey) (source As IOrderedQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey))) As IOrderedQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IOrderedQueryable&lt;TSource&gt; ^ ThenByDescending(System::Linq::IOrderedQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member ThenByDescending : System.Linq.IOrderedQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Key&gt;&gt; -&gt; System.Linq.IOrderedQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.ThenByDescending (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IOrderedQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IOrderedQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-1715">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1715">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="727ab-1716">O tipo da chave retornada pela função representada por <paramref name="keySelector" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1716">The type of the key returned by the function represented by <paramref name="keySelector" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-1717">Um <see cref="T:System.Linq.IOrderedQueryable`1" /> que contém elementos a ser classificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1717">An <see cref="T:System.Linq.IOrderedQueryable`1" /> that contains elements to sort.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="727ab-1718">Uma função para extrair uma chave de cada elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1718">A function to extract a key from each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1719">Executa uma ordenação posterior dos elementos em uma sequência em ordem decrescente, de acordo com uma chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1719">Performs a subsequent ordering of the elements in a sequence in descending order, according to a key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1720">Um <see cref="T:System.Linq.IOrderedQueryable`1" /> cujos elementos são classificados em ordem decrescente de acordo com uma chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1720">An <see cref="T:System.Linq.IOrderedQueryable`1" /> whose elements are sorted in descending order according to a key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1721">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-1721">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-1722">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-1722">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-1723">O <xref:System.Linq.Queryable.ThenByDescending%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.ThenByDescending%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1723">The <xref:System.Linq.Queryable.ThenByDescending%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.ThenByDescending%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1724">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1724">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span> <span data-ttu-id="727ab-1725">O resultado da chamada <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> é convertido para o tipo <xref:System.Linq.IOrderedQueryable%601> e retornado.</span><span class="sxs-lookup"><span data-stu-id="727ab-1725">The result of calling <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> is cast to type <xref:System.Linq.IOrderedQueryable%601> and returned.</span></span>  
  
 <span data-ttu-id="727ab-1726">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.ThenByDescending%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1726">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.ThenByDescending%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-1727">O comportamento esperado é que ele executa uma classificação secundária dos elementos da `source` em ordem decrescente, com base na chave obtida invocando `keySelector` em cada elemento de `source`.</span><span class="sxs-lookup"><span data-stu-id="727ab-1727">The expected behavior is that it performs a secondary sort of the elements of `source` in descending order, based on the key obtained by invoking `keySelector` on each element of `source`.</span></span> <span data-ttu-id="727ab-1728">Todos os estabelecido anteriormente como ordens de classificação são preservadas.</span><span class="sxs-lookup"><span data-stu-id="727ab-1728">All previously established sort orders are preserved.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1729">
            <paramref name="source" /> ou <paramref name="keySelector" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1729">
              <paramref name="source" /> or <paramref name="keySelector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ThenByDescending&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IOrderedQueryable&lt;TSource&gt; ThenByDescending&lt;TSource,TKey&gt; (this System.Linq.IOrderedQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IOrderedQueryable`1&lt;!!TSource&gt; ThenByDescending&lt;TSource, TKey&gt;(class System.Linq.IOrderedQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenByDescending(Of TSource, TKey) (source As IOrderedQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey)), comparer As IComparer(Of TKey)) As IOrderedQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IOrderedQueryable&lt;TSource&gt; ^ ThenByDescending(System::Linq::IOrderedQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member ThenByDescending : System.Linq.IOrderedQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Key&gt;&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Linq.IOrderedQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.ThenByDescending (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IOrderedQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IOrderedQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-1730">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1730">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="727ab-1731">O tipo da chave que é retornado pelo <paramref name="keySelector" /> função.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1731">The type of the key that is returned by the <paramref name="keySelector" /> function.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-1732">Um <see cref="T:System.Linq.IOrderedQueryable`1" /> que contém elementos a ser classificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1732">An <see cref="T:System.Linq.IOrderedQueryable`1" /> that contains elements to sort.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="727ab-1733">Uma função para extrair uma chave de cada elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1733">A function to extract a key from each element.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="727ab-1734">Um <see cref="T:System.Collections.Generic.IComparer`1" /> para comparar chaves.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1734">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1735">Executa uma ordenação posterior dos elementos em uma sequência em ordem decrescente usando um comparador especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1735">Performs a subsequent ordering of the elements in a sequence in descending order by using a specified comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1736">Uma coleção cujos elementos são classificados em ordem decrescente de acordo com uma chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1736">A collection whose elements are sorted in descending order according to a key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1737">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-1737">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-1738">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-1738">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-1739">O <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1739">The <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1740">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1740">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span> <span data-ttu-id="727ab-1741">O resultado da chamada <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> é convertido para o tipo <xref:System.Linq.IOrderedQueryable%601> e retornado.</span><span class="sxs-lookup"><span data-stu-id="727ab-1741">The result of calling <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> is cast to type <xref:System.Linq.IOrderedQueryable%601> and returned.</span></span>  
  
 <span data-ttu-id="727ab-1742">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1742">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-1743">O comportamento esperado é que ele executa uma classificação secundária dos elementos da `source` em ordem decrescente, com base na chave obtida invocando `keySelector` em cada elemento de `source`.</span><span class="sxs-lookup"><span data-stu-id="727ab-1743">The expected behavior is that it performs a secondary sort of the elements of `source` in descending order, based on the key obtained by invoking `keySelector` on each element of `source`.</span></span> <span data-ttu-id="727ab-1744">Todos os estabelecido anteriormente como ordens de classificação são preservadas.</span><span class="sxs-lookup"><span data-stu-id="727ab-1744">All previously established sort orders are preserved.</span></span> <span data-ttu-id="727ab-1745">O `comparer` parâmetro é usado para comparar valores de chave.</span><span class="sxs-lookup"><span data-stu-id="727ab-1745">The `comparer` parameter is used to compare key values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-1746">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.ThenByDescending%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> para executar uma classificação secundária dos elementos em uma sequência em ordem decrescente usando um comparador personalizado.</span><span class="sxs-lookup"><span data-stu-id="727ab-1746">The following code example demonstrates how to use <xref:System.Linq.Queryable.ThenByDescending%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> to perform a secondary ordering of the elements in a sequence in descending order by using a custom comparer.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#103](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#103)]
 [!code-vb[System.Linq.Queryable#103](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#103)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1747">
            <paramref name="source" />, <paramref name="keySelector" /> ou <paramref name="comparer" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1747">
              <paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="comparer" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Union&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="727ab-1748">Produz a união de conjunto de duas sequências.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1748">Produces the set union of two sequences.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Union&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Union&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source1, System.Collections.Generic.IEnumerable&lt;TSource&gt; source2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Union&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source1, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Union(Of TSource) (source1 As IQueryable(Of TSource), source2 As IEnumerable(Of TSource)) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Union(System::Linq::IQueryable&lt;TSource&gt; ^ source1, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source2);" />
      <MemberSignature Language="F#" Value="static member Union : System.Linq.IQueryable&lt;'Source&gt; * seq&lt;'Source&gt; -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.Union (source1, source2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="source2" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-1749">O tipo dos elementos das sequências de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1749">The type of the elements of the input sequences.</span>
          </span>
        </typeparam>
        <param name="source1">
          <span data-ttu-id="727ab-1750">Uma sequência cujos elementos distintos formam o primeiro conjunto da operação de união.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1750">A sequence whose distinct elements form the first set for the union operation.</span>
          </span>
        </param>
        <param name="source2">
          <span data-ttu-id="727ab-1751">Uma sequência cujos elementos distintos formam o segundo conjunto da operação de união.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1751">A sequence whose distinct elements form the second set for the union operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1752">Produz a união de conjunto de duas sequências usando o comparador de igualdade padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1752">Produces the set union of two sequences by using the default equality comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1753">Um <see cref="T:System.Linq.IQueryable`1" /> que contém os elementos de ambas as sequências de entrada, excluindo as duplicatas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1753">An <see cref="T:System.Linq.IQueryable`1" /> that contains the elements from both input sequences, excluding duplicates.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1754">O <xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1754">The <xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1755">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source1` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1755">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source1` parameter.</span></span>  
  
 <span data-ttu-id="727ab-1756">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> depende da implementação do tipo do `source1` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1756">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> depends on the implementation of the type of the `source1` parameter.</span></span> <span data-ttu-id="727ab-1757">O comportamento esperado é que a união de conjunto de elementos na `source1` e `source2` é retornado.</span><span class="sxs-lookup"><span data-stu-id="727ab-1757">The expected behavior is that the set union of the elements in `source1` and `source2` is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-1758">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> para obter a união de conjunto de duas sequências.</span><span class="sxs-lookup"><span data-stu-id="727ab-1758">The following code example demonstrates how to use <xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> to obtain the set union of two sequences.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#109](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#109)]
 [!code-vb[System.Linq.Queryable#109](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#109)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1759">
            <paramref name="source1" /> ou <paramref name="source2" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1759">
              <paramref name="source1" /> or <paramref name="source2" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Union&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Union&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source1, System.Collections.Generic.IEnumerable&lt;TSource&gt; source2, System.Collections.Generic.IEqualityComparer&lt;TSource&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Union&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source1, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source2, class System.Collections.Generic.IEqualityComparer`1&lt;!!TSource&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Union(Of TSource) (source1 As IQueryable(Of TSource), source2 As IEnumerable(Of TSource), comparer As IEqualityComparer(Of TSource)) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Union(System::Linq::IQueryable&lt;TSource&gt; ^ source1, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source2, System::Collections::Generic::IEqualityComparer&lt;TSource&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Union : System.Linq.IQueryable&lt;'Source&gt; * seq&lt;'Source&gt; * System.Collections.Generic.IEqualityComparer&lt;'Source&gt; -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.Union (source1, source2, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="source2" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-1760">O tipo dos elementos das sequências de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1760">The type of the elements of the input sequences.</span>
          </span>
        </typeparam>
        <param name="source1">
          <span data-ttu-id="727ab-1761">Uma sequência cujos elementos distintos formam o primeiro conjunto da operação de união.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1761">A sequence whose distinct elements form the first set for the union operation.</span>
          </span>
        </param>
        <param name="source2">
          <span data-ttu-id="727ab-1762">Uma sequência cujos elementos distintos formam o segundo conjunto da operação de união.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1762">A sequence whose distinct elements form the second set for the union operation.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="727ab-1763">Um <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> para comparar valores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1763">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1764">Produz a união de conjunto de duas sequências usando o <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1764">Produces the set union of two sequences by using a specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1765">Um <see cref="T:System.Linq.IQueryable`1" /> que contém os elementos de ambas as sequências de entrada, excluindo as duplicatas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1765">An <see cref="T:System.Linq.IQueryable`1" /> that contains the elements from both input sequences, excluding duplicates.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1766">O <xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1766">The <xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1767">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source1` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1767">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source1` parameter.</span></span>  
  
 <span data-ttu-id="727ab-1768">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> depende da implementação do tipo do `source1` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1768">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> depends on the implementation of the type of the `source1` parameter.</span></span> <span data-ttu-id="727ab-1769">O comportamento esperado é que a união de conjunto de elementos na `source1` e `source2` é retornado.</span><span class="sxs-lookup"><span data-stu-id="727ab-1769">The expected behavior is that the set union of the elements in `source1` and `source2` is returned.</span></span> <span data-ttu-id="727ab-1770">O `comparer` parâmetro é usado para comparar valores.</span><span class="sxs-lookup"><span data-stu-id="727ab-1770">The `comparer` parameter is used to compare values.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1771">
            <paramref name="source1" /> ou <paramref name="source2" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1771">
              <paramref name="source1" /> or <paramref name="source2" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Where&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="727ab-1772">Filtra uma sequência de valores com base em um predicado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1772">Filters a sequence of values based on a predicate.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Where&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Where&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Where&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Where(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean))) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Where(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, bool&gt; ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Where : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, bool&gt;&gt; -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.Where (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-1773">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1773">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-1774">Um <see cref="T:System.Linq.IQueryable`1" /> a ser filtrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1774">An <see cref="T:System.Linq.IQueryable`1" /> to filter.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="727ab-1775">Uma função para testar cada elemento em relação a uma condição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1775">A function to test each element for a condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1776">Filtra uma sequência de valores com base em um predicado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1776">Filters a sequence of values based on a predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1777">Um <see cref="T:System.Linq.IQueryable`1" /> que contém elementos da sequência de entrada que atendem à condição especificada por <paramref name="predicate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1777">An <see cref="T:System.Linq.IQueryable`1" /> that contains elements from the input sequence that satisfy the condition specified by <paramref name="predicate" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1778">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-1778">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-1779">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-1779">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-1780">O <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1780">The <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1781">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1781">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-1782">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1782">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-1783">O comportamento esperado é que ele retorna os elementos de `source` que satisfazem a condição especificada pelo `predicate`.</span><span class="sxs-lookup"><span data-stu-id="727ab-1783">The expected behavior is that it returns the elements from `source` that satisfy the condition specified by `predicate`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-1784">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> para filtrar uma sequência.</span><span class="sxs-lookup"><span data-stu-id="727ab-1784">The following code example demonstrates how to use <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> to filter a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#110](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#110)]
 [!code-vb[System.Linq.Queryable#110](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#110)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1785">
            <paramref name="source" /> ou <paramref name="predicate" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1785">
              <paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Where&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Where&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,int,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Where&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TSource, int32, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Where(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Integer, Boolean))) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Where(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, int, bool&gt; ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Where : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, int, bool&gt;&gt; -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.Where (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Int32,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="727ab-1786">O tipo dos elementos de <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1786">The type of the elements of <paramref name="source" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="727ab-1787">Um <see cref="T:System.Linq.IQueryable`1" /> a ser filtrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1787">An <see cref="T:System.Linq.IQueryable`1" /> to filter.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="727ab-1788">Uma função para testar cada elemento em relação a uma condição; o segundo parâmetro da função representa o índice do elemento na sequência de origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1788">A function to test each element for a condition; the second parameter of the function represents the index of the element in the source sequence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1789">Filtra uma sequência de valores com base em um predicado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1789">Filters a sequence of values based on a predicate.</span>
          </span>
          <span data-ttu-id="727ab-1790">O índice de cada elemento é usado na lógica da função de predicado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1790">Each element's index is used in the logic of the predicate function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1791">Um <see cref="T:System.Linq.IQueryable`1" /> que contém elementos da sequência de entrada que atendem à condição especificada por <paramref name="predicate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1791">An <see cref="T:System.Linq.IQueryable`1" /> that contains elements from the input sequence that satisfy the condition specified by <paramref name="predicate" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1792">Esse método tem pelo menos um parâmetro do tipo <xref:System.Linq.Expressions.Expression%601> cujo argumento de tipo é um do <xref:System.Func%602> tipos.</span><span class="sxs-lookup"><span data-stu-id="727ab-1792">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="727ab-1793">Para esses parâmetros, você pode passar em uma expressão lambda e ele será compilado em um <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="727ab-1793">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="727ab-1794">O <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1794">The <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1795">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1795">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="727ab-1796">O comportamento de consulta que ocorre como resultado da execução de uma árvore de expressão que representa a chamada <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> depende da implementação do tipo do `source` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1796">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="727ab-1797">O comportamento esperado é que ele retorna os elementos de `source` que satisfazem a condição especificada pelo `predicate`.</span><span class="sxs-lookup"><span data-stu-id="727ab-1797">The expected behavior is that it returns the elements from `source` that satisfy the condition specified by `predicate`.</span></span> <span data-ttu-id="727ab-1798">O índice de cada elemento de código-fonte é fornecido como o segundo argumento para `predicate`.</span><span class="sxs-lookup"><span data-stu-id="727ab-1798">The index of each source element is provided as the second argument to `predicate`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-1799">O exemplo de código a seguir demonstra como usar <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> para filtrar uma sequência com base em um predicado que incorpora o índice de cada elemento.</span><span class="sxs-lookup"><span data-stu-id="727ab-1799">The following code example demonstrates how to use <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> to filter a sequence based on a predicate that incorporates the index of each element.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#111](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#111)]
 [!code-vb[System.Linq.Queryable#111](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#111)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1800">
            <paramref name="source" /> ou <paramref name="predicate" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1800">
              <paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Zip&lt;TFirst,TSecond,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; Zip&lt;TFirst,TSecond,TResult&gt; (this System.Linq.IQueryable&lt;TFirst&gt; source1, System.Collections.Generic.IEnumerable&lt;TSecond&gt; source2, System.Linq.Expressions.Expression&lt;Func&lt;TFirst,TSecond,TResult&gt;&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; Zip&lt;TFirst, TSecond, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TFirst&gt; source1, class System.Collections.Generic.IEnumerable`1&lt;!!TSecond&gt; source2, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TFirst, !!TSecond, !!TResult&gt;&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Zip``3(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Zip(Of TFirst, TSecond, TResult) (source1 As IQueryable(Of TFirst), source2 As IEnumerable(Of TSecond), resultSelector As Expression(Of Func(Of TFirst, TSecond, TResult))) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TFirst, typename TSecond, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ Zip(System::Linq::IQueryable&lt;TFirst&gt; ^ source1, System::Collections::Generic::IEnumerable&lt;TSecond&gt; ^ source2, System::Linq::Expressions::Expression&lt;Func&lt;TFirst, TSecond, TResult&gt; ^&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member Zip : System.Linq.IQueryable&lt;'First&gt; * seq&lt;'Second&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'First, 'Second, 'Result&gt;&gt; -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="System.Linq.Queryable.Zip (source1, source2, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TFirst" />
        <TypeParameter Name="TSecond" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Linq.IQueryable&lt;TFirst&gt;" RefType="this" />
        <Parameter Name="source2" Type="System.Collections.Generic.IEnumerable&lt;TSecond&gt;" />
        <Parameter Name="resultSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TFirst,TSecond,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TFirst">
          <span data-ttu-id="727ab-1801">O tipo de elementos na primeira sequência de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1801">The type of the elements of the first input sequence.</span>
          </span>
        </typeparam>
        <typeparam name="TSecond">
          <span data-ttu-id="727ab-1802">O tipo de elementos na segunda sequência de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1802">The type of the elements of the second input sequence.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="727ab-1803">O tipo de elementos na sequência de resultado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1803">The type of the elements of the result sequence.</span>
          </span>
        </typeparam>
        <param name="source1">
          <span data-ttu-id="727ab-1804">A primeira sequência a ser mesclada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1804">The first sequence to merge.</span>
          </span>
        </param>
        <param name="source2">
          <span data-ttu-id="727ab-1805">A segunda sequência a ser mesclada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1805">The second sequence to merge.</span>
          </span>
        </param>
        <param name="resultSelector">
          <span data-ttu-id="727ab-1806">Uma função que especifica como mesclar os elementos das duas sequências.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1806">A function that specifies how to merge the elements from the two sequences.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727ab-1807">Mescla duas sequências usando a função de predicado especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1807">Merges two sequences by using the specified predicate function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727ab-1808">Um <see cref="T:System.Linq.IQueryable`1" /> que contém elementos mesclados de duas sequências de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1808">An <see cref="T:System.Linq.IQueryable`1" /> that contains merged elements of two input sequences.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727ab-1809">O <xref:System.Linq.Queryable.Zip%2A> método gera uma <xref:System.Linq.Expressions.MethodCallExpression> que representa a chamada <xref:System.Linq.Queryable.Zip%2A> a próprio como um método genérico construído.</span><span class="sxs-lookup"><span data-stu-id="727ab-1809">The <xref:System.Linq.Queryable.Zip%2A> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Zip%2A> itself as a constructed generic method.</span></span> <span data-ttu-id="727ab-1810">Em seguida, ele passa a <xref:System.Linq.Expressions.MethodCallExpression> para o <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> método da <xref:System.Linq.IQueryProvider> representado pela <xref:System.Linq.IQueryable.Provider%2A> propriedade do `source1` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="727ab-1810">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source1` parameter.</span></span>  
  
 <span data-ttu-id="727ab-1811">O método mescla cada elemento da primeira sequência com um elemento que tem o mesmo índice na segunda sequência.</span><span class="sxs-lookup"><span data-stu-id="727ab-1811">The method merges each element of the first sequence with an element that has the same index in the second sequence.</span></span> <span data-ttu-id="727ab-1812">Se as sequências não tiverem o mesmo número de elementos, o método mescla as sequências até atingir o final de um deles.</span><span class="sxs-lookup"><span data-stu-id="727ab-1812">If the sequences do not have the same number of elements, the method merges sequences until it reaches the end of one of them.</span></span> <span data-ttu-id="727ab-1813">Por exemplo, se uma sequência tem três elementos e o outro é tem quatro, a sequência resultante terá apenas três elementos.</span><span class="sxs-lookup"><span data-stu-id="727ab-1813">For example, if one sequence has three elements and the other one has four, the resulting sequence will have only three elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="727ab-1814">O exemplo de código a seguir demonstra como usar o <xref:System.Linq.Queryable.Zip%2A> método para mesclar duas sequências.</span><span class="sxs-lookup"><span data-stu-id="727ab-1814">The following code example demonstrates how to use the <xref:System.Linq.Queryable.Zip%2A> method to merge two sequences.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#200](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#200)]
 [!code-vb[System.Linq.Queryable#200](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#200)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="727ab-1815">
            <paramref name="source1" /> ou <paramref name="source2" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727ab-1815">
              <paramref name="source1" /> or <paramref name="source2" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>