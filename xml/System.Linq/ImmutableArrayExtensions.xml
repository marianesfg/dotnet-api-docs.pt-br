<Type Name="ImmutableArrayExtensions" FullName="System.Linq.ImmutableArrayExtensions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3111110917a4df409d40ad718073f26e0bdcf5df" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30460880" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class ImmutableArrayExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ImmutableArrayExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Linq.ImmutableArrayExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ImmutableArrayExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImmutableArrayExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Immutable</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.2.0</AssemblyVersion>
    <AssemblyVersion>1.2.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="be373-101">Substituições de método de extensão LINQ que oferecem maior eficiência para <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> que os métodos LINQ padrão</span>
      <span class="sxs-lookup">
        <span data-stu-id="be373-101">LINQ extension method overrides that offer greater efficiency for <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> than the standard LINQ methods</span>
      </span>
      <span data-ttu-id="be373-102">**Pacote NuGet**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks">sobre coleções imutáveis e como instalá-las</see>)</span>
      <span class="sxs-lookup">
        <span data-stu-id="be373-102">**NuGet package**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks">about immutable collections and how to install</see>)</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Aggregate&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Aggregate&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,T,T&gt; func);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Aggregate&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`3&lt;!!T, !!T, !!T&gt; func) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Aggregate``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``0,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate(Of T) (immutableArray As ImmutableArray(Of T), func As Func(Of T, T, T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Aggregate(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, T, T&gt; ^ func);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="func" Type="System.Func&lt;T,T,T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="be373-103">O tipo de elemento contido na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-103">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="be373-104">A coleção à qual aplicar a função.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-104">The collection to apply the function to.</span>
          </span>
        </param>
        <param name="func">
          <span data-ttu-id="be373-105">Uma função a ser invocada em cada elemento, de modo cumulativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-105">A function to be invoked on each element, in a cumulative way.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be373-106">Aplica uma função a uma sequência de elementos de uma maneira cumulativa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-106">Applies a function to a sequence of elements in a cumulative way.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be373-107">O valor final depois que a função cumulativa foi aplicada a todos os elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-107">The final value after the cumulative function has been applied to all elements.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be373-108"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> método simplifica a executar um cálculo em uma sequência de valores.</span><span class="sxs-lookup"><span data-stu-id="be373-108"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> method makes it simple to perform a calculation over a sequence of values.</span></span> <span data-ttu-id="be373-109">Esse método funciona chamando `func` uma vez para cada elemento na origem.</span><span class="sxs-lookup"><span data-stu-id="be373-109">This method works by calling `func` one time for each element in source.</span></span> <span data-ttu-id="be373-110">Cada vez que `func` é chamado, <xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> passa ambos o elemento da sequência e um valor agregado (como o primeiro argumento de função).</span><span class="sxs-lookup"><span data-stu-id="be373-110">Each time `func` is called, <xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> passes both the element from the sequence and an aggregated value (as the first argument to func).</span></span> <span data-ttu-id="be373-111">O valor de `seed` parâmetro é usado como o valor inicial de agregação.</span><span class="sxs-lookup"><span data-stu-id="be373-111">The value of the `seed` parameter is used as the initial aggregate value.</span></span> <span data-ttu-id="be373-112">O resultado de `func` substitui o valor agregado anterior.</span><span class="sxs-lookup"><span data-stu-id="be373-112">The result of `func` replaces the previous aggregated value.</span></span> <span data-ttu-id="be373-113"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> Retorna o resultado final da `func`.</span><span class="sxs-lookup"><span data-stu-id="be373-113"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> returns the final result of `func`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Aggregate&lt;TAccumulate,T&gt;">
      <MemberSignature Language="C#" Value="public static TAccumulate Aggregate&lt;TAccumulate,T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, TAccumulate seed, Func&lt;TAccumulate,T,TAccumulate&gt; func);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TAccumulate Aggregate&lt;TAccumulate, T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, !!TAccumulate seed, class System.Func`3&lt;!!TAccumulate, !!T, !!TAccumulate&gt; func) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Aggregate``2(System.Collections.Immutable.ImmutableArray{``1},``0,System.Func{``0,``1,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate(Of TAccumulate, T) (immutableArray As ImmutableArray(Of T), seed As TAccumulate, func As Func(Of TAccumulate, T, TAccumulate)) As TAccumulate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAccumulate, typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TAccumulate Aggregate(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, TAccumulate seed, Func&lt;TAccumulate, T, TAccumulate&gt; ^ func);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TAccumulate</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAccumulate" />
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="seed" Type="TAccumulate" />
        <Parameter Name="func" Type="System.Func&lt;TAccumulate,T,TAccumulate&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TAccumulate">
          <span data-ttu-id="be373-114">O tipo do valor acumulado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-114">The type of the accumulated value.</span>
          </span>
        </typeparam>
        <typeparam name="T">
          <span data-ttu-id="be373-115">O tipo de elemento contido na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-115">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="be373-116">A coleção à qual aplicar a função.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-116">The collection to apply the function to.</span>
          </span>
        </param>
        <param name="seed">
          <span data-ttu-id="be373-117">O valor inicial do acumulador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-117">The initial accumulator value.</span>
          </span>
        </param>
        <param name="func">
          <span data-ttu-id="be373-118">Uma função a ser invocada em cada elemento, de modo cumulativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-118">A function to be invoked on each element, in a cumulative way.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be373-119">Aplica uma função a uma sequência de elementos de uma maneira cumulativa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-119">Applies a function to a sequence of elements in a cumulative way.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be373-120">O valor final do acumulador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-120">The final accumulator value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be373-121"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> método simplifica a executar um cálculo em uma sequência de valores.</span><span class="sxs-lookup"><span data-stu-id="be373-121"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> method makes it simple to perform a calculation over a sequence of values.</span></span> <span data-ttu-id="be373-122">Esse método funciona chamando `func` uma vez para cada elemento na origem.</span><span class="sxs-lookup"><span data-stu-id="be373-122">This method works by calling `func` one time for each element in source.</span></span> <span data-ttu-id="be373-123">Cada vez que `func` é chamado, <xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> passa ambos o elemento da sequência e um valor agregado (como o primeiro argumento de função).</span><span class="sxs-lookup"><span data-stu-id="be373-123">Each time `func` is called, <xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> passes both the element from the sequence and an aggregated value (as the first argument to func).</span></span> <span data-ttu-id="be373-124">O valor de `seed` parâmetro é usado como o valor inicial de agregação.</span><span class="sxs-lookup"><span data-stu-id="be373-124">The value of the `seed` parameter is used as the initial aggregate value.</span></span> <span data-ttu-id="be373-125">O resultado de `func` substitui o valor agregado anterior.</span><span class="sxs-lookup"><span data-stu-id="be373-125">The result of `func` replaces the previous aggregated value.</span></span> <span data-ttu-id="be373-126"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> Retorna o resultado final da `func`.</span><span class="sxs-lookup"><span data-stu-id="be373-126"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> returns the final result of `func`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Aggregate&lt;TAccumulate,TResult,T&gt;">
      <MemberSignature Language="C#" Value="public static TResult Aggregate&lt;TAccumulate,TResult,T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, TAccumulate seed, Func&lt;TAccumulate,T,TAccumulate&gt; func, Func&lt;TAccumulate,TResult&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TResult Aggregate&lt;TAccumulate, TResult, T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, !!TAccumulate seed, class System.Func`3&lt;!!TAccumulate, !!T, !!TAccumulate&gt; func, class System.Func`2&lt;!!TAccumulate, !!TResult&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Aggregate``3(System.Collections.Immutable.ImmutableArray{``2},``0,System.Func{``0,``2,``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate(Of TAccumulate, TResult, T) (immutableArray As ImmutableArray(Of T), seed As TAccumulate, func As Func(Of TAccumulate, T, TAccumulate), resultSelector As Func(Of TAccumulate, TResult)) As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAccumulate, typename TResult, typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TResult Aggregate(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, TAccumulate seed, Func&lt;TAccumulate, T, TAccumulate&gt; ^ func, Func&lt;TAccumulate, TResult&gt; ^ resultSelector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAccumulate" />
        <TypeParameter Name="TResult" />
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="seed" Type="TAccumulate" />
        <Parameter Name="func" Type="System.Func&lt;TAccumulate,T,TAccumulate&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TAccumulate,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TAccumulate">
          <span data-ttu-id="be373-127">O tipo do valor acumulado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-127">The type of the accumulated value.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="be373-128">O tipo de resultado retornado pelo seletor de resultado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-128">The type of result returned by the result selector.</span>
          </span>
        </typeparam>
        <typeparam name="T">
          <span data-ttu-id="be373-129">O tipo de elemento contido na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-129">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="be373-130">A coleção à qual aplicar a função.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-130">The collection to apply the function to.</span>
          </span>
        </param>
        <param name="seed">
          <span data-ttu-id="be373-131">O valor inicial do acumulador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-131">The initial accumulator value.</span>
          </span>
        </param>
        <param name="func">
          <span data-ttu-id="be373-132">Uma função a ser invocada em cada elemento, de modo cumulativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-132">A function to be invoked on each element, in a cumulative way.</span>
          </span>
        </param>
        <param name="resultSelector">To be added.</param>
        <summary>
          <span data-ttu-id="be373-133">Aplica uma função a uma sequência de elementos de uma maneira cumulativa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-133">Applies a function to a sequence of elements in a cumulative way.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be373-134">O valor final do acumulador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-134">The final accumulator value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be373-135"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> método simplifica a executar um cálculo em uma sequência de valores.</span><span class="sxs-lookup"><span data-stu-id="be373-135"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> method makes it simple to perform a calculation over a sequence of values.</span></span> <span data-ttu-id="be373-136">Esse método funciona chamando `func` uma vez para cada elemento na origem.</span><span class="sxs-lookup"><span data-stu-id="be373-136">This method works by calling `func` one time for each element in source.</span></span> <span data-ttu-id="be373-137">Cada vez que `func` é chamado, <xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> passa ambos o elemento da sequência e um valor agregado (como o primeiro argumento de função).</span><span class="sxs-lookup"><span data-stu-id="be373-137">Each time `func` is called, <xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> passes both the element from the sequence and an aggregated value (as the first argument to func).</span></span> <span data-ttu-id="be373-138">O valor de `seed` parâmetro é usado como o valor inicial de agregação.</span><span class="sxs-lookup"><span data-stu-id="be373-138">The value of the `seed` parameter is used as the initial aggregate value.</span></span> <span data-ttu-id="be373-139">O resultado de `func` substitui o valor agregado anterior.</span><span class="sxs-lookup"><span data-stu-id="be373-139">The result of `func` replaces the previous aggregated value.</span></span> <span data-ttu-id="be373-140"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> Retorna o resultado final da `func`.</span><span class="sxs-lookup"><span data-stu-id="be373-140"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> returns the final result of `func`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="All&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool All&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool All&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.All``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function All(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool All(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="be373-141">O tipo de elemento contido na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-141">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="be373-142">A matriz na qual verificar se há correspondências.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-142">The array to check for matches.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="be373-143">O predicado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-143">The predicate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be373-144">Obtém um valor que indica se todos os elementos nesta matriz correspondem a uma determinada condição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-144">Gets a value indicating whether all elements in this array match a given condition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be373-145">
            <see langword="true" /> se todos os elementos da sequência de origem forem aprovados no teste no predicado especificado; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-145">
              <see langword="true" /> if every element of the source sequence passes the test in the specified predicate; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Any&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool Any&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Any&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any(Of T) (immutableArray As ImmutableArray(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Any(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="be373-146">O tipo de elemento contido na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-146">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="be373-147">A matriz na qual verificar se há elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-147">The array to check for elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be373-148">Obtém um valor que indica se a matriz contém elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-148">Gets a value indicating whether the array contains any elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be373-149">
            <see langword="true" /> se a matriz contém elementos; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-149">
              <see langword="true" /> if the array contains an elements; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Any&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool Any&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt;.Builder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Any&lt;T&gt;(class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!T&gt; builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Any(System::Collections::Immutable::ImmutableArray&lt;T&gt;::Builder ^ builder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;+Builder" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="be373-150">O tipo dos elementos na matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-150">The type of elements in the array.</span>
          </span>
        </typeparam>
        <param name="builder">
          <span data-ttu-id="be373-151">O construtor no qual verificar se há correspondências.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-151">The builder to check for matches.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be373-152">Retorna um valor que indica se esta coleção contém quaisquer elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-152">Returns a value indicating whether this collection contains any elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be373-153">
            <see langword="true" /> se o construtor da matriz contiver elementos; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-153">
              <see langword="true" /> if the array builder contains any elements; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Any&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool Any&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Any&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Any(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="be373-154">O tipo de elemento contido na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-154">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="be373-155">A matriz na qual verificar se há elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-155">The array to check for elements.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="be373-156">O delegado que define a condição para corresponder a um elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-156">The delegate that defines the condition to match to an element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be373-157">Obtém um valor que indica se a matriz contém elementos correspondentes a uma condição especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-157">Gets a value indicating whether the array contains any elements that match a specified condition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be373-158">
            <see langword="true" /> se um elemento corresponder à condição especificada; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-158">
              <see langword="true" /> if an element matches the specified condition; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementAt&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ElementAt&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ElementAt&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.ElementAt``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ElementAt(Of T) (immutableArray As ImmutableArray(Of T), index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T ElementAt(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="be373-159">O tipo de elemento contido na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-159">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="be373-160">A matriz na qual localizar um elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-160">The array to find an element in.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="be373-161">O índice do elemento a se recuperar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-161">The index for the element to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be373-162">Retorna o elemento de um índice especificado na matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-162">Returns the element at a specified index in the array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be373-163">O item no índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-163">The item at the specified index.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementAtOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ElementAtOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ElementAtOrDefault&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.ElementAtOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ElementAtOrDefault(Of T) (immutableArray As ImmutableArray(Of T), index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T ElementAtOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="be373-164">O tipo de elemento contido na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-164">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="be373-165">A matriz na qual localizar um elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-165">The array to find an element in.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="be373-166">O índice do elemento a se recuperar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-166">The index for the element to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be373-167">Retorna o elemento em um índice especificado em uma sequência ou um valor padrão se o índice estiver fora do intervalo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-167">Returns the element at a specified index in a sequence or a default value if the index is out of range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be373-168">O item no índice especificado ou o valor padrão se o índice não for encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-168">The item at the specified index, or the default value if the index is not found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="First&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T First&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T First&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function First(Of T) (immutableArray As ImmutableArray(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T First(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="be373-169">O tipo de elemento contido na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-169">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="be373-170">A matriz da qual obter um item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-170">The array to get an item from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be373-171">Retorna o primeiro elemento em uma matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-171">Returns the first element in an array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be373-172">O primeiro item na matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-172">The first item in the array.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="be373-173">Se a matriz está vazia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-173">If the array is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="First&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T First&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt;.Builder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T First&lt;T&gt;(class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!T&gt; builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T First(System::Collections::Immutable::ImmutableArray&lt;T&gt;::Builder ^ builder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;+Builder" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="be373-174">O tipo de itens na matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-174">The type of items in the array.</span>
          </span>
        </typeparam>
        <param name="builder">
          <span data-ttu-id="be373-175">O construtor do qual recuperar um item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-175">The builder to retrieve an item from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be373-176">Retorna o primeiro elemento na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-176">Returns the first element in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be373-177">O primeiro item na lista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-177">The first item in the list.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="be373-178">Se a matriz está vazia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-178">If the array is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="First&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T First&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T First&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function First(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T First(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="be373-179">O tipo de elemento contido na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-179">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="be373-180">A matriz da qual obter um item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-180">The array to get an item from.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="be373-181">O delegado que define as condições do elemento a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-181">The delegate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be373-182">Retorna o primeiro elemento em uma sequência que satisfaz uma condição especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-182">Returns the first element in a sequence that satisfies a specified condition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be373-183">O primeiro item na lista se ele atende à condição especificada por <paramref name="predicate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-183">The first item in the list if it meets the condition specified by <paramref name="predicate" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="be373-184">Se a matriz está vazia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-184">If the array is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FirstOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T FirstOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T FirstOrDefault&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FirstOrDefault(Of T) (immutableArray As ImmutableArray(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T FirstOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="be373-185">O tipo de elemento contido na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-185">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="be373-186">A matriz da qual recuperar itens.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-186">The array to retrieve items from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be373-187">Retorna o primeiro elemento de uma sequência ou um valor padrão se a sequência não contém elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-187">Returns the first element of a sequence, or a default value if the sequence contains no elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be373-188">O primeiro item na lista, se encontrado; caso contrário, o valor padrão para o tipo de item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-188">The first item in the list, if found; otherwise the default value for the item type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T FirstOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt;.Builder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T FirstOrDefault&lt;T&gt;(class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!T&gt; builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T FirstOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt;::Builder ^ builder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;+Builder" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="be373-189">O tipo de item no construtor de.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-189">The type of item in the builder.</span>
          </span>
        </typeparam>
        <param name="builder">
          <span data-ttu-id="be373-190">O construtor do qual recuperar um elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-190">The builder to retrieve an element from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be373-191">Retorna o primeiro elemento na coleção ou o valor padrão, se a coleção está vazia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-191">Returns the first element in the collection, or the default value if the collection is empty.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be373-192">O primeiro item na lista, se encontrado; caso contrário, o valor padrão para o tipo de item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-192">The first item in the list, if found; otherwise the default value for the item type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T FirstOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T FirstOrDefault&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FirstOrDefault(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T FirstOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="be373-193">O tipo de elemento contido na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-193">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="be373-194">A matriz da qual recuperar elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-194">The array to retrieve elments from.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="be373-195">O delegado que define as condições do elemento a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-195">The delegate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be373-196">Retorna o primeiro elemento da sequência que satisfaz uma condição ou um valor padrão, caso esse elemento não seja encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-196">Returns the first element of the sequence that satisfies a condition or a default value if no such element is found.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be373-197">O primeiro item na lista, se encontrado; caso contrário, o valor padrão para o tipo de item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-197">The first item in the list, if found; otherwise the default value for the item type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Last&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Last&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Last&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Last(Of T) (immutableArray As ImmutableArray(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Last(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="be373-198">O tipo de elemento contido na matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-198">The type of element contained by the array.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="be373-199">A matriz da qual recuperar itens.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-199">The array to retrieve items from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be373-200">Retorna o último elemento da matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-200">Returns the last element of the array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be373-201">O último elemento na matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-201">The last element in the array.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="be373-202">Gerada se a coleção está vazia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-202">Thrown if the collection is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Last&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Last&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt;.Builder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Last&lt;T&gt;(class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!T&gt; builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Last(System::Collections::Immutable::ImmutableArray&lt;T&gt;::Builder ^ builder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;+Builder" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="be373-203">O tipo de item no construtor de.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-203">The type of item in the builder.</span>
          </span>
        </typeparam>
        <param name="builder">
          <span data-ttu-id="be373-204">O construtor do qual recuperar elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-204">The builder to retrieve elements from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be373-205">Retorna o último elemento na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-205">Returns the last element in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be373-206">O último elemento no construtor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-206">The last element in the builder.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="be373-207">Gerada se a coleção está vazia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-207">Thrown if the collection is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Last&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Last&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Last&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Last(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Last(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="be373-208">O tipo de elemento contido na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-208">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="be373-209">A matriz da qual recuperar elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-209">The array to retrieve elements from.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="be373-210">O delegado que define as condições do elemento a recuperar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-210">The delegate that defines the conditions of the element to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be373-211">Retorna o último elemento de uma sequência que satisfaz uma condição especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-211">Returns the last element of a sequence that satisfies a specified condition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be373-212">O último elemento da matriz que satisfaz a condição <paramref name="predicate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-212">The last element of the array that satisfies the <paramref name="predicate" /> condition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="be373-213">Gerada se a coleção está vazia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-213">Thrown if the collection is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LastOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T LastOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T LastOrDefault&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastOrDefault(Of T) (immutableArray As ImmutableArray(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T LastOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="be373-214">O tipo de elemento contido na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-214">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="be373-215">A matriz da qual recuperar itens.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-215">The array to retrieve items from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be373-216">Retorna o último elemento de uma sequência ou um valor padrão se a sequência não contém elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-216">Returns the last element of a sequence, or a default value if the sequence contains no elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be373-217">O último elemento de uma sequência ou um valor padrão se a sequência não contém elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-217">The last element of a sequence, or a default value if the sequence contains no elements.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T LastOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt;.Builder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T LastOrDefault&lt;T&gt;(class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!T&gt; builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T LastOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt;::Builder ^ builder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;+Builder" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="be373-218">O tipo de item no construtor de.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-218">The type of item in the builder.</span>
          </span>
        </typeparam>
        <param name="builder">
          <span data-ttu-id="be373-219">O construtor do qual recuperar um elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-219">The builder to retrieve an element from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be373-220">Retorna o último elemento na coleção, ou o valor padrão se a coleção está vazia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-220">Returns the last element in the collection, or the default value if the collection is empty.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be373-221">O último elemento de uma sequência ou um valor padrão se a sequência não contém elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-221">The last element of a sequence, or a default value if the sequence contains no elements.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T LastOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T LastOrDefault&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastOrDefault(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T LastOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="be373-222">O tipo de elemento contido na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-222">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="be373-223">A matriz da qual recuperar um elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-223">The array to retrieve an element from.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="be373-224">O delegado que define as condições do elemento a ser pesquisado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-224">The delegate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be373-225">Retorna o último elemento de uma sequência que satisfaz uma condição ou um valor padrão, caso esse elemento não seja encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-225">Returns the last element of a sequence that satisfies a condition or a default value if no such element is found.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be373-226">O último elemento de uma sequência ou um valor padrão se a sequência não contém elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-226">The last element of a sequence, or a default value if the sequence contains no elements.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select&lt;T,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;TResult&gt; Select&lt;T,TResult&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,TResult&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt; Select&lt;T, TResult&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, !!TResult&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Select``2(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Select(Of T, TResult) (immutableArray As ImmutableArray(Of T), selector As Func(Of T, TResult)) As IEnumerable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;TResult&gt; ^ Select(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, TResult&gt; ^ selector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;T,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="be373-227">O tipo de elemento contido na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-227">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="be373-228">O tipo do elemento do resultado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-228">The type of the result element.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="be373-229">A matriz imutável da qual selecionar itens.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-229">The immutable array to select items from.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="be373-230">Uma função de transformação a ser aplicada a cada elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-230">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be373-231">Projeta cada elemento de uma sequência em um novo formulário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-231">Projects each element of a sequence into a new form.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be373-232">Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> cujos elementos são o resultado da invocação da função de transformação em cada elemento da origem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-232">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements are the result of invoking the transform function on each element of source.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany&lt;TSource,TCollection,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;TResult&gt; SelectMany&lt;TSource,TCollection,TResult&gt; (this System.Collections.Immutable.ImmutableArray&lt;TSource&gt; immutableArray, Func&lt;TSource,System.Collections.Generic.IEnumerable&lt;TCollection&gt;&gt; collectionSelector, Func&lt;TSource,TCollection,TResult&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt; SelectMany&lt;TSource, TCollection, TResult&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TSource&gt; immutableArray, class System.Func`2&lt;!!TSource, class System.Collections.Generic.IEnumerable`1&lt;!!TCollection&gt;&gt; collectionSelector, class System.Func`3&lt;!!TSource, !!TCollection, !!TResult&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.SelectMany``3(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectMany(Of TSource, TCollection, TResult) (immutableArray As ImmutableArray(Of TSource), collectionSelector As Func(Of TSource, IEnumerable(Of TCollection)), resultSelector As Func(Of TSource, TCollection, TResult)) As IEnumerable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TCollection, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;TResult&gt; ^ SelectMany(System::Collections::Immutable::ImmutableArray&lt;TSource&gt; immutableArray, Func&lt;TSource, System::Collections::Generic::IEnumerable&lt;TCollection&gt; ^&gt; ^ collectionSelector, Func&lt;TSource, TCollection, TResult&gt; ^ resultSelector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TCollection" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;TSource&gt;" RefType="this" />
        <Parameter Name="collectionSelector" Type="System.Func&lt;TSource,System.Collections.Generic.IEnumerable&lt;TCollection&gt;&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TSource,TCollection,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="be373-233">O tipo dos elementos de <c>immutableArray</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-233">The type of the elements of <c>immutableArray</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TCollection">
          <span data-ttu-id="be373-234">O tipo dos elementos intermediários coletados pelo <c>collectionSelector</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-234">The type of the intermediate elements collected by <c>collectionSelector</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="be373-235">O tipo dos elementos da sequência resultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-235">The type of the elements of the resulting sequence.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="be373-236">A matriz imutável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-236">The immutable array.</span>
          </span>
        </param>
        <param name="collectionSelector">
          <span data-ttu-id="be373-237">Uma função de transformação a ser aplicada a cada elemento da sequência de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-237">A transform function to apply to each element of the input sequence.</span>
          </span>
        </param>
        <param name="resultSelector">
          <span data-ttu-id="be373-238">Uma função de transformação a ser aplicada a cada elemento da sequência intermediária.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-238">A transform function to apply to each element of the intermediate sequence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be373-239">Projeta cada elemento de uma sequência em um <see cref="T:System.Collections.Generic.IEnumerable`1" />, mescla as sequências resultantes em uma sequência e chama uma função de seletor de resultado em cada elemento contido nele.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-239">Projects each element of a sequence to an <see cref="T:System.Collections.Generic.IEnumerable`1" />,             flattens the resulting sequences into one sequence, and invokes a result             selector function on each element therein.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be373-240">Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> cujos elementos são o resultado de chamar a função de transformação de um para muitos <paramref name="collectionSelector" /> em cada elemento de <paramref name="immutableArray" /> e, em seguida, mapear cada um desses elementos de sequência e seu elemento de origem correspondente para um elemento de resultado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-240">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements are the result             of invoking the one-to-many transform function <paramref name="collectionSelector" /> on each             element of <paramref name="immutableArray" /> and then mapping each of those sequence elements and their             corresponding source element to a result element.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SequenceEqual&lt;TDerived,TBase&gt;">
      <MemberSignature Language="C#" Value="public static bool SequenceEqual&lt;TDerived,TBase&gt; (this System.Collections.Immutable.ImmutableArray&lt;TBase&gt; immutableArray, System.Collections.Generic.IEnumerable&lt;TDerived&gt; items, System.Collections.Generic.IEqualityComparer&lt;TBase&gt; comparer = null) where TDerived : TBase;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SequenceEqual&lt;(!!TBase) TDerived, TBase&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TBase&gt; immutableArray, class System.Collections.Generic.IEnumerable`1&lt;!!TDerived&gt; items, class System.Collections.Generic.IEqualityComparer`1&lt;!!TBase&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SequenceEqual(Of TDerived As TBase, TBase As TBase) (immutableArray As ImmutableArray(Of TBase), items As IEnumerable(Of TDerived), Optional comparer As IEqualityComparer(Of TBase) = null) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDerived">
          <Constraints>
            <BaseTypeName>TBase</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TBase" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;TBase&gt;" RefType="this" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;TDerived&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TBase&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TDerived">
          <span data-ttu-id="be373-241">O tipo de elemento da matriz comparado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-241">The type of element in the compared array.</span>
          </span>
        </typeparam>
        <typeparam name="TBase">
          <span data-ttu-id="be373-242">O tipo de elemento contido na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-242">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="be373-243">A matriz a ser usada para comparação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-243">The array to use for comparison.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="be373-244">Os itens a serem usados para comparação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-244">The items to use for comparison.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="be373-245">O comparador a ser usado para verificar quanto à igualdade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-245">The comparer to use to check for equality.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be373-246">Determina se duas sequências são iguais de acordo com um comparador de igualdade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-246">Determines whether two sequences are equal according to an equality comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be373-247">
            <see langword="true" /> para indicar que as sequências são iguais; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-247">
              <see langword="true" /> to indicate the sequences are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SequenceEqual&lt;TDerived,TBase&gt;">
      <MemberSignature Language="C#" Value="public static bool SequenceEqual&lt;TDerived,TBase&gt; (this System.Collections.Immutable.ImmutableArray&lt;TBase&gt; immutableArray, System.Collections.Immutable.ImmutableArray&lt;TDerived&gt; items, System.Collections.Generic.IEqualityComparer&lt;TBase&gt; comparer = null) where TDerived : TBase;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SequenceEqual&lt;(!!TBase) TDerived, TBase&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TBase&gt; immutableArray, valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TDerived&gt; items, class System.Collections.Generic.IEqualityComparer`1&lt;!!TBase&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SequenceEqual(Of TDerived As TBase, TBase As TBase) (immutableArray As ImmutableArray(Of TBase), items As ImmutableArray(Of TDerived), Optional comparer As IEqualityComparer(Of TBase) = null) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDerived">
          <Constraints>
            <BaseTypeName>TBase</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TBase" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;TBase&gt;" RefType="this" />
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;TDerived&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TBase&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TDerived">
          <span data-ttu-id="be373-248">O tipo de elemento da matriz comparado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-248">The type of element in the compared array.</span>
          </span>
        </typeparam>
        <typeparam name="TBase">
          <span data-ttu-id="be373-249">O tipo de elemento contido na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-249">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="be373-250">A matriz a ser usada para comparação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-250">The array to use for comparison.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="be373-251">Os itens a serem usados para comparação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-251">The items to use for comparison.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="be373-252">O comparador a ser usado para verificar quanto à igualdade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-252">The comparer to use to check for equality.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be373-253">Determina se duas sequências são iguais de acordo com um comparador de igualdade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-253">Determines whether two sequences are equal according to an equality comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be373-254">
            <see langword="true" /> para indicar que as sequências são iguais; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-254">
              <see langword="true" /> to indicate the sequences are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SequenceEqual&lt;TDerived,TBase&gt;">
      <MemberSignature Language="C#" Value="public static bool SequenceEqual&lt;TDerived,TBase&gt; (this System.Collections.Immutable.ImmutableArray&lt;TBase&gt; immutableArray, System.Collections.Immutable.ImmutableArray&lt;TDerived&gt; items, Func&lt;TBase,TBase,bool&gt; predicate) where TDerived : TBase;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SequenceEqual&lt;(!!TBase) TDerived, TBase&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TBase&gt; immutableArray, valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TDerived&gt; items, class System.Func`3&lt;!!TBase, !!TBase, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Func{``1,``1,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SequenceEqual(Of TDerived As TBase, TBase As TBase) (immutableArray As ImmutableArray(Of TBase), items As ImmutableArray(Of TDerived), predicate As Func(Of TBase, TBase, Boolean)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TDerived, typename TBase&gt;&#xA; where TDerived : TBase[System::Runtime::CompilerServices::Extension]&#xA; static bool SequenceEqual(System::Collections::Immutable::ImmutableArray&lt;TBase&gt; immutableArray, System::Collections::Immutable::ImmutableArray&lt;TDerived&gt; items, Func&lt;TBase, TBase, bool&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDerived">
          <Constraints>
            <BaseTypeName>TBase</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TBase" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;TBase&gt;" RefType="this" />
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;TDerived&gt;" />
        <Parameter Name="predicate" Type="System.Func&lt;TBase,TBase,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TDerived">
          <span data-ttu-id="be373-255">O tipo de elemento da matriz comparado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-255">The type of element in the compared array.</span>
          </span>
        </typeparam>
        <typeparam name="TBase">
          <span data-ttu-id="be373-256">O tipo de elemento contido na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-256">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="be373-257">A matriz a ser usada para comparação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-257">The array to use for comparison.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="be373-258">Os itens a serem usados para comparação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-258">The items to use for comparison.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="be373-259">O comparador a ser usado para verificar quanto à igualdade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-259">The comparer to use to check for equality.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be373-260">Determina se duas sequências são iguais de acordo com um comparador de igualdade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-260">Determines whether two sequences are equal according to an equality comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be373-261">
            <see langword="true" /> para indicar que as sequências são iguais; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-261">
              <see langword="true" /> to indicate the sequences are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Single&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Single&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Single&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Single``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Single(Of T) (immutableArray As ImmutableArray(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Single(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="be373-262">O tipo de elemento contido na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-262">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="be373-263">A matriz da qual recuperar o elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-263">The array to retrieve the element from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be373-264">Retornará o único elemento de uma sequência e lançará uma exceção se não houver exatamente um elemento na sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-264">Returns the only element of a sequence, and throws an exception if there is not exactly one element in the sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be373-265">O elemento na sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-265">The element in the sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Single&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Single&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Single&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Single``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Single(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Single(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="be373-266">O tipo de elemento contido na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-266">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">To be added.</param>
        <param name="predicate">To be added.</param>
        <summary>
          <span data-ttu-id="be373-267">Retorna o único elemento de uma sequência que satisfaz uma condição especificada e gera uma exceção se houver mais de um tal elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-267">Returns the only element of a sequence that satisfies a specified condition, and throws an exception if more than one such element exists.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be373-268">Retorna <see cref="T:System.Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-268">Returns <see cref="T:System.Boolean" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SingleOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T SingleOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T SingleOrDefault&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.SingleOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SingleOrDefault(Of T) (immutableArray As ImmutableArray(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T SingleOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="be373-269">O tipo de elemento contido na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-269">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="be373-270">A matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-270">The array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be373-271">Retorna o único elemento da matriz ou um valor padrão se a sequência é vazia; esse método gera uma exceção se há mais de um elemento na sequência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-271">Returns the only element of the array, or a default value if the sequence is empty; this method throws an exception if there is more than one element in the sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be373-272">O elemento da matriz ou o valor padrão, se a matriz está vazia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-272">The element in the array, or the default value if the array is empty.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="be373-273">
            <paramref name="source" /> contém mais de um elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-273">
              <paramref name="source" /> contains more than one element.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SingleOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T SingleOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T SingleOrDefault&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.SingleOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SingleOrDefault(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T SingleOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="be373-274">O tipo de elemento contido na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-274">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="be373-275">A matriz da qual obter o elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-275">The array to get the element from.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="be373-276">A condição que o elemento deve satisfazer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-276">The condition the element must satisfy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be373-277">Retorna o único elemento de uma sequência que satisfaz uma condição especificada ou um valor padrão se esse elemento não existir. Esse método lança uma exceção se mais de um elemento satisfizer a condição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-277">Returns the only element of a sequence that satisfies a specified condition or a default value if no such element exists; this method throws an exception if more than one element satisfies the condition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be373-278">O elemento, se ele atende à condição especificada; caso contrário, o elemento padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-278">The element if it satisfies the specified condition; otherwise the default element.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="be373-279">Mais de um elemento satisfaz a condição na <paramref name="predicate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-279">More than one element satisfies the condition in <paramref name="predicate" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToArray&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T[] ToArray&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T[] ToArray&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.ToArray``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToArray(Of T) (immutableArray As ImmutableArray(Of T)) As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static cli::array &lt;T&gt; ^ ToArray(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="be373-280">O tipo de elemento contido na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-280">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">To be added.</param>
        <summary>
          <span data-ttu-id="be373-281">Copia o conteúdo dessa matriz para uma matriz mutável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-281">Copies the contents of this array to a mutable array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be373-282">A matriz recém-instanciada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-282">The newly instantiated array.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDictionary&lt;TKey,T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Dictionary&lt;TKey,T&gt; ToDictionary&lt;TKey,T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.Dictionary`2&lt;!!TKey, !!T&gt; ToDictionary&lt;TKey, T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToDictionary(Of TKey, T) (immutableArray As ImmutableArray(Of T), keySelector As Func(Of T, TKey)) As Dictionary(Of TKey, T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::Dictionary&lt;TKey, T&gt; ^ ToDictionary(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, TKey&gt; ^ keySelector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;TKey,T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;T,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="be373-283">Tipo da chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-283">The type of the key.</span>
          </span>
        </typeparam>
        <typeparam name="T">
          <span data-ttu-id="be373-284">O tipo de elemento contido na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-284">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="be373-285">A matriz com base na qual criar um dicionário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-285">The array to create a dictionary from.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="be373-286">O seletor de chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-286">The key selector.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be373-287">Cria um dicionário com base no conteúdo desta matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-287">Creates a dictionary based on the contents of this array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be373-288">O dicionário recentemente inicializado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-288">The newly initialized dictionary.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDictionary&lt;TKey,T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Dictionary&lt;TKey,T&gt; ToDictionary&lt;TKey,T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,TKey&gt; keySelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.Dictionary`2&lt;!!TKey, !!T&gt; ToDictionary&lt;TKey, T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, !!TKey&gt; keySelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToDictionary(Of TKey, T) (immutableArray As ImmutableArray(Of T), keySelector As Func(Of T, TKey), comparer As IEqualityComparer(Of TKey)) As Dictionary(Of TKey, T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::Dictionary&lt;TKey, T&gt; ^ ToDictionary(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, TKey&gt; ^ keySelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;TKey,T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;T,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="be373-289">Tipo da chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-289">The type of the key.</span>
          </span>
        </typeparam>
        <typeparam name="T">
          <span data-ttu-id="be373-290">O tipo de elemento contido na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-290">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="be373-291">A matriz com base na qual criar um dicionário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-291">The array to create a dictionary from.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="be373-292">O seletor de chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-292">The key selector.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="be373-293">O comparador com o qual inicializar o dicionário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-293">The comparer to initialize the dictionary with.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be373-294">Cria um dicionário com base no conteúdo desta matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-294">Creates a dictionary based on the contents of this array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be373-295">O dicionário recentemente inicializado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-295">The newly initialized dictionary.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDictionary&lt;TKey,TElement,T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Dictionary&lt;TKey,TElement&gt; ToDictionary&lt;TKey,TElement,T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,TKey&gt; keySelector, Func&lt;T,TElement&gt; elementSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.Dictionary`2&lt;!!TKey, !!TElement&gt; ToDictionary&lt;TKey, TElement, T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, !!TKey&gt; keySelector, class System.Func`2&lt;!!T, !!TElement&gt; elementSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToDictionary(Of TKey, TElement, T) (immutableArray As ImmutableArray(Of T), keySelector As Func(Of T, TKey), elementSelector As Func(Of T, TElement)) As Dictionary(Of TKey, TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TElement, typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::Dictionary&lt;TKey, TElement&gt; ^ ToDictionary(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, TKey&gt; ^ keySelector, Func&lt;T, TElement&gt; ^ elementSelector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;TKey,TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;T,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;T,TElement&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="be373-296">Tipo da chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-296">The type of the key.</span>
          </span>
        </typeparam>
        <typeparam name="TElement">
          <span data-ttu-id="be373-297">O tipo do elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-297">The type of the element.</span>
          </span>
        </typeparam>
        <typeparam name="T">
          <span data-ttu-id="be373-298">O tipo de elemento contido na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-298">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="be373-299">A matriz com base na qual criar um dicionário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-299">The array to create a dictionary from.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="be373-300">O seletor de chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-300">The key selector.</span>
          </span>
        </param>
        <param name="elementSelector">
          <span data-ttu-id="be373-301">O seletor de elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-301">The element selector.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be373-302">Cria um dicionário com base no conteúdo desta matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-302">Creates a dictionary based on the contents of this array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be373-303">O dicionário recentemente inicializado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-303">The newly initialized dictionary.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDictionary&lt;TKey,TElement,T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Dictionary&lt;TKey,TElement&gt; ToDictionary&lt;TKey,TElement,T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,TKey&gt; keySelector, Func&lt;T,TElement&gt; elementSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.Dictionary`2&lt;!!TKey, !!TElement&gt; ToDictionary&lt;TKey, TElement, T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, !!TKey&gt; keySelector, class System.Func`2&lt;!!T, !!TElement&gt; elementSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToDictionary(Of TKey, TElement, T) (immutableArray As ImmutableArray(Of T), keySelector As Func(Of T, TKey), elementSelector As Func(Of T, TElement), comparer As IEqualityComparer(Of TKey)) As Dictionary(Of TKey, TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TElement, typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::Dictionary&lt;TKey, TElement&gt; ^ ToDictionary(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, TKey&gt; ^ keySelector, Func&lt;T, TElement&gt; ^ elementSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;TKey,TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;T,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;T,TElement&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="be373-304">Tipo da chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-304">The type of the key.</span>
          </span>
        </typeparam>
        <typeparam name="TElement">
          <span data-ttu-id="be373-305">O tipo do elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-305">The type of the element.</span>
          </span>
        </typeparam>
        <typeparam name="T">
          <span data-ttu-id="be373-306">O tipo de elemento contido na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-306">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="be373-307">A matriz com base na qual criar um dicionário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-307">The array to create a dictionary from.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="be373-308">O seletor de chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-308">The key selector.</span>
          </span>
        </param>
        <param name="elementSelector">
          <span data-ttu-id="be373-309">O seletor de elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-309">The element selector.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="be373-310">O comparador com o qual inicializar o dicionário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-310">The comparer to initialize the dictionary with.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be373-311">Cria um dicionário com base no conteúdo desta matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-311">Creates a dictionary based on the contents of this array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be373-312">O dicionário recentemente inicializado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-312">The newly initialized dictionary.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;T&gt; Where&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; Where&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Where``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Where(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As IEnumerable(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;T&gt; ^ Where(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="be373-313">O tipo de elemento contido na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-313">The type of element contained by the collection.</span>
          </span>
        </typeparam>
        <param name="immutableArray">
          <span data-ttu-id="be373-314">A matriz a filtrar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-314">The array to filter.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="be373-315">A condição a ser usada para filtrar o conteúdo da matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-315">The condition to use for filtering the array content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="be373-316">Filtra uma sequência de valores com base em um predicado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-316">Filters a sequence of values based on a predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="be373-317">Retorna <see cref="T:System.Collections.Generic.IEnumerable`1" />, que contém elementos que atendem à condição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="be373-317">Returns <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains elements that meet the condition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>