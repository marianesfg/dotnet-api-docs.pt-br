<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ResourceWriter.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57c8904a91116396045e9b5669d9767d0e81cdc42.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c8904a91116396045e9b5669d9767d0e81cdc42</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Resources.ResourceWriter">
          <source>Writes resources in the system-default format to an output file or an output stream.</source>
          <target state="translated">Grava recursos no formato padrão do sistema em um arquivo de saída ou um fluxo de saída.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Resources.ResourceWriter">
          <source>This class cannot be inherited.</source>
          <target state="translated">Essa classe não pode ser herdada.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceWriter">
          <source><ph id="ph1">&lt;xref:System.Resources.ResourceWriter&gt;</ph> provides a default implementation of the <ph id="ph2">&lt;xref:System.Resources.IResourceWriter&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Resources.ResourceWriter&gt;</ph> Fornece uma implementação padrão da <ph id="ph2">&lt;xref:System.Resources.IResourceWriter&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceWriter">
          <source>It enables you to programmatically create a binary resource (.resources) file.</source>
          <target state="translated">Ele permite criar programaticamente um arquivo de recurso binário (. resources).</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceWriter">
          <source>Resources are specified as name and value pairs using the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%2A&gt;</ph> method.</source>
          <target state="translated">Recursos são especificados como pares de nome e valor usando o <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceWriter">
          <source>Resource names are case-sensitive when used for lookups, but to more easily support authoring tools and help eliminate bugs, <ph id="ph1">&lt;xref:System.Resources.ResourceWriter&gt;</ph> will not allow a .resources file to have names that vary only by case.</source>
          <target state="translated">Nomes de recurso diferenciam maiusculas de minúsculas quando usado para pesquisas, mas mais facilmente dar suporte a ferramentas de criação e ajudar a eliminar erros, <ph id="ph1">&lt;xref:System.Resources.ResourceWriter&gt;</ph> não permitirá que um arquivo. Resources para têm nomes que variam somente por maiusculas.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceWriter">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResourceWriter&gt;</ph> class enables you to create string, object, and binary resources.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Resources.ResourceWriter&gt;</ph> classe permite que você criar a cadeia de caracteres, objeto e binários de recursos.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceWriter">
          <source>Binary resources can be written to the resource file as a byte array or a stream.</source>
          <target state="translated">Binários de recursos podem ser gravados para o arquivo de recurso como uma matriz de bytes ou um fluxo.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceWriter">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">Este tipo implementa o <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceWriter">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">Quando você terminar de usar o tipo, descarte-direta ou indiretamente.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceWriter">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
          <target state="translated">Para descartar o tipo diretamente, chame seu <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> método em um <ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph> bloco.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceWriter">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">Para descartar indiretamente dele, use uma construção de linguagem, como <ph id="ph1">`using`</ph> (em c#) ou <ph id="ph2">`Using`</ph> (no Visual Basic).</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceWriter">
          <source>For more information, see the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
          <target state="translated">Para obter mais informações, consulte a seção "Usando um objeto que implementa IDisposable" o <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> tópico de interface.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceWriter">
          <source>To create a resources file, create a <ph id="ph1">&lt;xref:System.Resources.ResourceWriter&gt;</ph> with a unique file name, call <ph id="ph2">&lt;xref:System.Resources.ResourceWriter.AddResource%2A&gt;</ph> at least once, call <ph id="ph3">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> to write the resources file to disk, and then call <ph id="ph4">&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;</ph> to close the file.</source>
          <target state="translated">Para criar um arquivo de recursos, criar um <ph id="ph1">&lt;xref:System.Resources.ResourceWriter&gt;</ph> com um nome de arquivo exclusivo, chame <ph id="ph2">&lt;xref:System.Resources.ResourceWriter.AddResource%2A&gt;</ph> pelo menos uma vez, chamar <ph id="ph3">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> para gravar o arquivo de recursos para o disco e, em seguida, chame <ph id="ph4">&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;</ph> para fechar o arquivo.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceWriter">
          <source>Calling <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;</ph> will implicitly call <ph id="ph2">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> if you do not explicitly call <ph id="ph3">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph>.</source>
          <target state="translated">Chamando <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;</ph> implicitamente chamará <ph id="ph2">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> se você não chama explicitamente <ph id="ph3">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceWriter">
          <source>The resources will not necessarily be written in the same order they were added.</source>
          <target state="translated">Os recursos não serão necessariamente gravados na mesma ordem em que eles foram adicionados.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceWriter">
          <source>To retrieve resources from a binary .resources file created by the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter&gt;</ph> class, you can use the <ph id="ph2">&lt;xref:System.Resources.ResourceManager&gt;</ph> class, which lets you retrieve named resources, or the <ph id="ph3">&lt;xref:System.Resources.ResourceReader&gt;</ph> class, which lets you enumerate all the resources in the file.</source>
          <target state="translated">Para recuperar os recursos de um arquivo. Resources binários criado pelo <ph id="ph1">&lt;xref:System.Resources.ResourceWriter&gt;</ph> classe, você pode usar o <ph id="ph2">&lt;xref:System.Resources.ResourceManager&gt;</ph> classe, que permite recuperar recursos nomeados, ou o <ph id="ph3">&lt;xref:System.Resources.ResourceReader&gt;</ph> classe, que lhe permite enumerar todos os recursos no arquivo.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceWriter">
          <source>The following example writes several strings into the myResources.resources file.</source>
          <target state="translated">O exemplo a seguir grava várias cadeias de caracteres no arquivo de myResources.resources.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="T:System.Resources.ResourceWriter">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.#ctor(System.IO.Stream)">
          <source>The output stream.</source>
          <target state="translated">O fluxo de saída.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.#ctor(System.IO.Stream)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> class that writes the resources to the provided stream.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> que grava os recursos no fluxo fornecido.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.#ctor(System.IO.Stream)">
          <source>The following code example defines a new instance of the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter&gt;</ph> class that writes to a specified stream.</source>
          <target state="translated">O exemplo de código a seguir define uma nova instância do <ph id="ph1">&lt;xref:System.Resources.ResourceWriter&gt;</ph> classe grava em um fluxo especificado.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.#ctor(System.IO.Stream)">
          <source>The code adds resources to the writer and writes the resources to the stream.</source>
          <target state="translated">O código adiciona recursos para o gravador e grava os recursos no fluxo.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.#ctor(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;paramref name="stream" /&gt;</ph> parameter is not writable.</source>
          <target state="translated">O parâmetro <ph id="ph1">&lt;paramref name="stream" /&gt;</ph> não é gravável.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.#ctor(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;paramref name="stream" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O parâmetro <ph id="ph1">&lt;paramref name="stream" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.#ctor(System.String)">
          <source>The output file name.</source>
          <target state="translated">O nome do arquivo de saída.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> class that writes the resources to the specified file.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> que grava os recursos no arquivo especificado.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.#ctor(System.String)">
          <source>The following code example defines a new instance of the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter&gt;</ph> class that will write to a specified file.</source>
          <target state="translated">O exemplo de código a seguir define uma nova instância do <ph id="ph1">&lt;xref:System.Resources.ResourceWriter&gt;</ph> classe irá gravar um arquivo especificado.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.#ctor(System.String)">
          <source>The code adds resources to the writer and writes the resources to the file.</source>
          <target state="translated">O código adiciona recursos para o gravador e grava os recursos para o arquivo.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="fileName" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O parâmetro <ph id="ph1">&lt;paramref name="fileName" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="T:System.Resources.ResourceWriter">
          <source>Adds a resource to the list of resources to be written.</source>
          <target state="translated">Adiciona um recurso à lista de recursos a serem gravados.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Byte[])">
          <source>The name of the resource.</source>
          <target state="translated">O nome do recurso.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Byte[])">
          <source>Value of the resource as an 8-bit unsigned integer array.</source>
          <target state="translated">Valor do recurso como uma matriz de inteiros sem sinal de 8 bits.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Byte[])">
          <source>Adds a named resource specified as a byte array to the list of resources to be written.</source>
          <target state="translated">Adiciona um recurso nomeado especificado como uma matriz de bytes para a lista de recursos a serem gravados.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Byte[])">
          <source>The resource is not written until <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> is called.</source>
          <target state="translated">O recurso não é gravado até <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> é chamado.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Byte[])">
          <source>You can retrieve the resources written by the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Byte%5B%5D%29&gt;</ph> method by calling the <ph id="ph2">&lt;xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Você pode recuperar os recursos escritos pelo <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Byte%5B%5D%29&gt;</ph> método chamando o <ph id="ph2">&lt;xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Byte[])">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Byte%5B%5D%29&gt;</ph> method to add a graphics image that has been read as an array of bytes to a <ph id="ph2">&lt;xref:System.Resources.ResourceWriter&gt;</ph> object.</source>
          <target state="translated">O exemplo a seguir usa o <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Byte%5B%5D%29&gt;</ph> método para adicionar uma imagem de gráfico que foi lido como uma matriz de bytes a um <ph id="ph2">&lt;xref:System.Resources.ResourceWriter&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> (or a name that varies only by capitalization) has already been added to this <ph id="ph2">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> (ou um nome que varia de acordo apenas com maiúsculas e minúsculas) já foi adicionado a este <ph id="ph2">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Byte[])">
          <source>The <ph id="ph1">&lt;paramref name="name" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O parâmetro <ph id="ph1">&lt;paramref name="name" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Byte[])">
          <source>This <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> has been closed and its hash table is unavailable.</source>
          <target state="translated">Este <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> foi fechado e sua tabela de hash não está disponível.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream)">
          <source>The name of the resource to add.</source>
          <target state="translated">O nome do recurso a ser adicionado.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream)">
          <source>The value of the resource to add.</source>
          <target state="translated">O valor do recurso a ser adicionado.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream)">
          <source>The resource must support the <ph id="ph1">&lt;see cref="P:System.IO.Stream.Length" /&gt;</ph> property.</source>
          <target state="translated">O recurso deve dar suporte à propriedade <ph id="ph1">&lt;see cref="P:System.IO.Stream.Length" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream)">
          <source>Adds a named resource specified as a stream to the list of resources to be written.</source>
          <target state="translated">Adiciona um recurso nomeado especificado como um fluxo à lista de recursos a serem gravados.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream)">
          <source>You can specify any stream that supports the <ph id="ph1">&lt;xref:System.IO.Stream.Length%2A?displayProperty=nameWithType&gt;</ph> property for <ph id="ph2">`value`</ph>.</source>
          <target state="translated">Você pode especificar qualquer fluxo com suporte para o <ph id="ph1">&lt;xref:System.IO.Stream.Length%2A?displayProperty=nameWithType&gt;</ph> propriedade <ph id="ph2">`value`</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream)">
          <source>You can retrieve the resources written by the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%29&gt;</ph> method by calling the <ph id="ph2">&lt;xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Você pode recuperar os recursos escritos pelo <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%29&gt;</ph> método chamando o <ph id="ph2">&lt;xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%29&gt;</ph> method to add a graphics image that has been saved to a <ph id="ph2">&lt;xref:System.IO.MemoryStream&gt;</ph> object to a <ph id="ph3">&lt;xref:System.Resources.ResourceWriter&gt;</ph> object.</source>
          <target state="translated">O exemplo a seguir usa o <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%29&gt;</ph> método para adicionar uma imagem de gráfico que foi salvo em um <ph id="ph2">&lt;xref:System.IO.MemoryStream&gt;</ph> o objeto para um <ph id="ph3">&lt;xref:System.Resources.ResourceWriter&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> (or a name that varies only by capitalization) has already been added to this <ph id="ph2">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> (ou um nome que varia de acordo apenas com maiúsculas e minúsculas) já foi adicionado a este <ph id="ph2">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream)">
          <source>The stream does not support the <ph id="ph1">&lt;see cref="P:System.IO.Stream.Length" /&gt;</ph> property.</source>
          <target state="translated">O fluxo não dá suporte à propriedade <ph id="ph1">&lt;see cref="P:System.IO.Stream.Length" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> or <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="value" /&gt;</ph> é <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream)">
          <source>This <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> has been closed.</source>
          <target state="translated">Este <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> foi fechado.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Object)">
          <source>The name of the resource.</source>
          <target state="translated">O nome do recurso.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Object)">
          <source>The value of the resource.</source>
          <target state="translated">O valor do recurso.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Object)">
          <source>Adds a named resource specified as an object to the list of resources to be written.</source>
          <target state="translated">Adiciona um recurso nomeado especificado como um objeto para a lista de recursos a serem gravados.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Object)">
          <source><ph id="ph1">`value`</ph> must be serializable.</source>
          <target state="translated"><ph id="ph1">`value`</ph> deve ser serializável.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Object)">
          <source>The resource is not written until the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> method is called.</source>
          <target state="translated">O recurso não será gravado até que o <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> método é chamado.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Object)">
          <source>You can retrieve the resources written by the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Object%29&gt;</ph> method by calling the <ph id="ph2">&lt;xref:System.Resources.ResourceManager.GetObject%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Você pode recuperar os recursos escritos pelo <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Object%29&gt;</ph> método chamando o <ph id="ph2">&lt;xref:System.Resources.ResourceManager.GetObject%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Object)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Object%29&gt;</ph> method to add object data to a binary resources file.</source>
          <target state="translated">O exemplo a seguir usa o <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Object%29&gt;</ph> método para adicionar dados de objeto para um arquivo de recursos binários.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Object)">
          <source><ph id="ph1">`DonorColumns`</ph> is a custom class whose fields contain the names of columns to be displayed in the user interface.</source>
          <target state="translated"><ph id="ph1">`DonorColumns`</ph> é uma classe personalizada cujos campos contêm os nomes de colunas a serem exibidas na interface do usuário.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Object)">
          <source>Note that the class is marked with the <ph id="ph1">&lt;xref:System.SerializableAttribute&gt;</ph> attribute.</source>
          <target state="translated">Observe que a classe é marcada com o <ph id="ph1">&lt;xref:System.SerializableAttribute&gt;</ph> atributo.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Object)">
          <source>Ordinarily, the class would be defined in a separate assembly, and a reference to it would be provided to the compiler at compile time.</source>
          <target state="translated">Em geral, a classe deve ser definida em um assembly separado, e uma referência a ele pode ser fornecida para o compilador em tempo de compilação.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> (or a name that varies only by capitalization) has already been added to this <ph id="ph2">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> (ou um nome que varia de acordo apenas com maiúsculas e minúsculas) já foi adicionado a este <ph id="ph2">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="name" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O parâmetro <ph id="ph1">&lt;paramref name="name" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Object)">
          <source>This <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> has been closed and its hash table is unavailable.</source>
          <target state="translated">Este <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> foi fechado e sua tabela de hash não está disponível.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.String)">
          <source>The name of the resource.</source>
          <target state="translated">O nome do recurso.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.String)">
          <source>The value of the resource.</source>
          <target state="translated">O valor do recurso.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.String)">
          <source>Adds a string resource to the list of resources to be written.</source>
          <target state="translated">Adiciona um recurso de cadeia de caracteres à lista de recursos a ser gravado.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.String)">
          <source>The resource is not written until <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> is called.</source>
          <target state="translated">O recurso não é gravado até <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> é chamado.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.String)">
          <source>You can retrieve the resources written by the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.String%29&gt;</ph> method by calling the <ph id="ph2">&lt;xref:System.Resources.ResourceManager.GetString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Você pode recuperar os recursos escritos pelo <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.String%29&gt;</ph> método chamando o <ph id="ph2">&lt;xref:System.Resources.ResourceManager.GetString%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.String)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%2A&gt;</ph> method to add string resources to a <ph id="ph2">&lt;xref:System.Resources.ResourceWriter&gt;</ph> object.</source>
          <target state="translated">O exemplo a seguir usa o <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%2A&gt;</ph> método para adicionar recursos de cadeia de caracteres para um <ph id="ph2">&lt;xref:System.Resources.ResourceWriter&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> (or a name that varies only by capitalization) has already been added to this ResourceWriter.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> (ou um nome que varia apenas de acordo com o uso de maiúsculas) já foi adicionado a este ResourceWriter.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="name" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O parâmetro <ph id="ph1">&lt;paramref name="name" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.String)">
          <source>This <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> has been closed and its hash table is unavailable.</source>
          <target state="translated">Este <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> foi fechado e sua tabela de hash não está disponível.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)">
          <source>The name of the resource to add.</source>
          <target state="translated">O nome do recurso a ser adicionado.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)">
          <source>The value of the resource to add.</source>
          <target state="translated">O valor do recurso a ser adicionado.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)">
          <source>The resource must support the <ph id="ph1">&lt;see cref="P:System.IO.Stream.Length" /&gt;</ph> property.</source>
          <target state="translated">O recurso deve dar suporte à propriedade <ph id="ph1">&lt;see cref="P:System.IO.Stream.Length" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to close the stream after the <ph id="ph2">&lt;see cref="M:System.Resources.ResourceWriter.Generate" /&gt;</ph> method is called; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para fechar o fluxo após o método <ph id="ph2">&lt;see cref="M:System.Resources.ResourceWriter.Generate" /&gt;</ph> ser chamado; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)">
          <source>Adds a named resource specified as a stream to the list of resources to be written, and specifies whether the stream should be closed after the <ph id="ph1">&lt;see cref="M:System.Resources.ResourceWriter.Generate" /&gt;</ph> method is called.</source>
          <target state="translated">Adiciona um recurso nomeado especificado como um fluxo à lista de recursos a serem gravados e especifica se o fluxo deverá ser fechado depois que o método <ph id="ph1">&lt;see cref="M:System.Resources.ResourceWriter.Generate" /&gt;</ph> for chamado.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)">
          <source>You can specify any stream that supports the <ph id="ph1">&lt;xref:System.IO.Stream.Length%2A?displayProperty=nameWithType&gt;</ph> property for <ph id="ph2">`value`</ph>.</source>
          <target state="translated">Você pode especificar qualquer fluxo com suporte para o <ph id="ph1">&lt;xref:System.IO.Stream.Length%2A?displayProperty=nameWithType&gt;</ph> propriedade <ph id="ph2">`value`</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)">
          <source>You can retrieve the resources written by the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%2CSystem.Boolean%29&gt;</ph> method by calling the <ph id="ph2">&lt;xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Você pode recuperar os recursos escritos pelo <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%2CSystem.Boolean%29&gt;</ph> método chamando o <ph id="ph2">&lt;xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%2CSystem.Boolean%29&gt;</ph> method to add a graphics image that has been saved to a <ph id="ph2">&lt;xref:System.IO.MemoryStream&gt;</ph> object to a <ph id="ph3">&lt;xref:System.Resources.ResourceWriter&gt;</ph> object.</source>
          <target state="translated">O exemplo a seguir usa o <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%2CSystem.Boolean%29&gt;</ph> método para adicionar uma imagem de gráfico que foi salvo em um <ph id="ph2">&lt;xref:System.IO.MemoryStream&gt;</ph> o objeto para um <ph id="ph3">&lt;xref:System.Resources.ResourceWriter&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> (or a name that varies only by capitalization) has already been added to this <ph id="ph2">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> (ou um nome que varia de acordo apenas com maiúsculas e minúsculas) já foi adicionado a este <ph id="ph2">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)">
          <source>The stream does not support the <ph id="ph1">&lt;see cref="P:System.IO.Stream.Length" /&gt;</ph> property.</source>
          <target state="translated">O fluxo não dá suporte à propriedade <ph id="ph1">&lt;see cref="P:System.IO.Stream.Length" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> or <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="value" /&gt;</ph> é <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)">
          <source>This <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> has been closed.</source>
          <target state="translated">Este <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> foi fechado.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>A name that identifies the resource that contains the added data.</source>
          <target state="translated">Um nome que identifica o recurso que contém os dados adicionados.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>The type name of the added data.</source>
          <target state="translated">O nome do tipo dos dados adicionados.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>A byte array that contains the binary representation of the added data.</source>
          <target state="translated">Uma matriz de bytes que contém a representação binária dos dados adicionados.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>Adds a unit of data as a resource to the list of resources to be written.</source>
          <target state="translated">Adiciona uma unidade de dados como um recurso à lista de recursos a serem gravados.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>Use the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResourceData%2A&gt;</ph> method to add a resource in binary form (that is, as an array of bytes) to the list of resources to be written.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResourceData%2A&gt;</ph> método para adicionar um recurso no formato binário (ou seja, como uma matriz de bytes) para a lista de recursos a serem gravados.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>You must specify the name of the resource, the type name of the data contained in the resource, and the binary representation of the data itself.</source>
          <target state="translated">Você deve especificar o nome do recurso, o nome do tipo de dados contidos no recurso e a representação binária dos dados em si.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>After you have added each resource you require, use the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> method to write the list of resources to the resources file or stream that was specified in the <ph id="ph2">&lt;xref:System.Resources.ResourceWriter.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">Depois de adicionar cada recurso que você precisa, use o <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> método para gravar a lista de recursos para o arquivo de recursos ou de fluxo que foi especificado no <ph id="ph2">&lt;xref:System.Resources.ResourceWriter.%23ctor%2A&gt;</ph> construtor.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source><ph id="ph1">`typeName`</ph> is a string that represents the data type of the resource.</source>
          <target state="translated"><ph id="ph1">`typeName`</ph> é uma cadeia de caracteres que representa o tipo de dados do recurso.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>It can be any of the following values:</source>
          <target state="translated">Ele pode ser qualquer um dos seguintes valores:</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>The string representation of a <ph id="ph1">`ResourceTypeCode`</ph> enumeration member that indicates the data type of the resource.</source>
          <target state="translated">A representação de cadeia de caracteres de um <ph id="ph1">`ResourceTypeCode`</ph> membro de enumeração que indica o tipo de dados do recurso.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source><ph id="ph1">`ResourceTypeCode`</ph> is a private enumeration that is used by  to indicate that a special binary format is used to store one of 19 common data types.</source>
          <target state="translated"><ph id="ph1">`ResourceTypeCode`</ph> é uma enumeração privada que é usada para indicar que um formato binário especial é usado para armazenar um dos tipos de dados comuns 19.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>These include the .NET Framework primitive data types (<ph id="ph1">&lt;xref:System.Boolean&gt;</ph>, <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Char&gt;</ph>, <ph id="ph4">&lt;xref:System.Decimal&gt;</ph>, <ph id="ph5">&lt;xref:System.Double&gt;</ph>, <ph id="ph6">&lt;xref:System.Int16&gt;</ph>, <ph id="ph7">&lt;xref:System.Int32&gt;</ph>, <ph id="ph8">&lt;xref:System.Int64&gt;</ph>, <ph id="ph9">&lt;xref:System.Single&gt;</ph>, <ph id="ph10">&lt;xref:System.SByte&gt;</ph>, <ph id="ph11">&lt;xref:System.UInt16&gt;</ph>, <ph id="ph12">&lt;xref:System.UInt32&gt;</ph>, <ph id="ph13">&lt;xref:System.UInt64&gt;</ph>), as well as <ph id="ph14">&lt;xref:System.String&gt;</ph>, <ph id="ph15">&lt;xref:System.DateTime&gt;</ph>, and <ph id="ph16">&lt;xref:System.TimeSpan&gt;</ph>.</source>
          <target state="translated">Isso inclui os tipos de dados primitivos do .NET Framework (<ph id="ph1">&lt;xref:System.Boolean&gt;</ph>, <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Char&gt;</ph>, <ph id="ph4">&lt;xref:System.Decimal&gt;</ph>, <ph id="ph5">&lt;xref:System.Double&gt;</ph>, <ph id="ph6">&lt;xref:System.Int16&gt;</ph>, <ph id="ph7">&lt;xref:System.Int32&gt;</ph>, <ph id="ph8">&lt;xref:System.Int64&gt;</ph>, <ph id="ph9">&lt;xref:System.Single&gt;</ph>, <ph id="ph10">&lt;xref:System.SByte&gt;</ph>, <ph id="ph11">&lt;xref:System.UInt16&gt;</ph>, <ph id="ph12">&lt;xref:System.UInt32&gt;</ph>, <ph id="ph13">&lt;xref:System.UInt64&gt;</ph>), bem como <ph id="ph14">&lt;xref:System.String&gt;</ph>, <ph id="ph15">&lt;xref:System.DateTime&gt;</ph>, e <ph id="ph16">&lt;xref:System.TimeSpan&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>In addition, the <ph id="ph1">`ResourceTypeCode`</ph> enumeration includes the values shown in the following table.</source>
          <target state="translated">Além disso, o <ph id="ph1">`ResourceTypeCode`</ph> enumeração inclui os valores mostrados na tabela a seguir.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source><ph id="ph1">`ResourceTypeCode`</ph> value</source>
          <target state="translated">Valor <ph id="ph1">`ResourceTypeCode`</ph></target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>Description</source>
          <target state="translated">Descrição</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>The data is a byte array.</source>
          <target state="translated">Os dados serão uma matriz de bytes.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>The data is a null reference.</source>
          <target state="translated">Os dados são uma referência nula.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>The data is stored in a stream.</source>
          <target state="translated">Os dados são armazenados em um fluxo.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>A string that contains the fully qualified name of the type whose binary data is assigned to the <ph id="ph1">`serializedData`</ph> argument (for example, <ph id="ph2">`System.String`</ph>).</source>
          <target state="translated">Uma cadeia de caracteres que contém o nome totalmente qualificado do tipo cujos dados binários são atribuídos para a <ph id="ph1">`serializedData`</ph> argumento (por exemplo, <ph id="ph2">`System.String`</ph>).</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>In addition, for types that are not part of the .NET Framework class library, the string includes the name, version, culture, and public key of the assembly that contains the type.</source>
          <target state="translated">Além disso, para tipos que não fazem parte da biblioteca de classes do .NET Framework, a cadeia de caracteres inclui o nome, versão, cultura e chave pública do assembly que contém o tipo.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>For example, the following string indicates that the serialized data represents an instance of the <ph id="ph1">`Person`</ph> type in the <ph id="ph2">`Extensions`</ph> namespace, which is found in version 1.0 of an assembly named Utility that has no public key and no designated culture.</source>
          <target state="translated">Por exemplo, a cadeia de caracteres a seguir indica que os dados serializados representam uma instância do <ph id="ph1">`Person`</ph> digite o <ph id="ph2">`Extensions`</ph> namespace, que é encontrada na versão 1.0 de um assembly chamado utilitário com nenhuma chave pública e nenhuma cultura designada.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>A parallel method for reading resource data written with the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResourceData%2A&gt;</ph> method is <ph id="ph2">&lt;xref:System.Resources.ResourceReader.GetResourceData%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Um método paralelo para ler dados de recursos escritos com o <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResourceData%2A&gt;</ph> método é <ph id="ph2">&lt;xref:System.Resources.ResourceReader.GetResourceData%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResourceData%2A&gt;</ph> method to write two integer values to a .resources file, and then uses a <ph id="ph2">&lt;xref:System.Resources.ResourceReader&gt;</ph> object to retrieve them.</source>
          <target state="translated">O exemplo a seguir usa o <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResourceData%2A&gt;</ph> método grave inteiro de dois valores para um arquivo. Resources e, em seguida, usa um <ph id="ph2">&lt;xref:System.Resources.ResourceReader&gt;</ph> objeto recuperá-las.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph>, <ph id="ph2">&lt;paramref name="typeName" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="serializedData" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph>, <ph id="ph2">&lt;paramref name="typeName" /&gt;</ph> ou <ph id="ph3">&lt;paramref name="serializedData" /&gt;</ph> é <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> (or a name that varies only by capitalization) has already been added to this <ph id="ph2">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> (ou um nome que varia de acordo apenas com maiúsculas e minúsculas) já foi adicionado a este objeto <ph id="ph2">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>The current <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> object is not initialized.</source>
          <target state="translated">O objeto <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> não foi inicializado.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>The probable cause is that the <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> object is closed.</source>
          <target state="translated">A causa provável é que o objeto <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> está fechado.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.Close">
          <source>Saves the resources to the output stream and then closes it.</source>
          <target state="translated">Salva os recursos no fluxo de saída e, em seguida, o fecha.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.Close">
          <source><ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> is called implicitly by <ph id="ph2">&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;</ph>, if required.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> é chamado implicitamente por <ph id="ph2">&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;</ph>, se necessário.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.Close">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;</ph> method to write all resource objects in a <ph id="ph2">&lt;xref:System.Resources.ResourceWriter&gt;</ph> class to the output stream.</source>
          <target state="translated">O exemplo a seguir usa o <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;</ph> método gravar todos os recursos de objetos em um <ph id="ph2">&lt;xref:System.Resources.ResourceWriter&gt;</ph> classe ao fluxo de saída.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.Close">
          <source>The code then shuts down the writer.</source>
          <target state="translated">O código, em seguida, desliga o gravador.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.Close">
          <source>An I/O error has occurred.</source>
          <target state="translated">Ocorreu um erro de E/S.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.Close">
          <source>An error has occurred during serialization of the object.</source>
          <target state="translated">Ocorreu um erro durante a serialização do objeto.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.Dispose">
          <source>Allows users to close the resource file or stream, explicitly releasing resources.</source>
          <target state="translated">Permite que os usuários fechem o fluxo ou o arquivo de recurso, liberando recursos explicitamente.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.Dispose">
          <source>The implementation of this method is the same as <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;</ph>.</source>
          <target state="translated">A implementação deste método é o mesmo que <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.Dispose">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Dispose%2A&gt;</ph> method to write all resource objects in a <ph id="ph2">&lt;xref:System.Resources.ResourceWriter&gt;</ph> class to the output stream.</source>
          <target state="translated">O seguinte exemplo de código usa o <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Dispose%2A&gt;</ph> método gravar todos os recursos de objetos em um <ph id="ph2">&lt;xref:System.Resources.ResourceWriter&gt;</ph> classe ao fluxo de saída.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.Dispose">
          <source>The code then shuts down the writer and make the writer's resources available for other processes.</source>
          <target state="translated">O código, em seguida, desliga o gravador e disponibilizar os recursos do gravador para outros processos.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.Dispose">
          <source>An I/O error has occurred.</source>
          <target state="translated">Ocorreu um erro de E/S.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.Dispose">
          <source>An error has occurred during serialization of the object.</source>
          <target state="translated">Ocorreu um erro durante a serialização do objeto.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.Generate">
          <source>Saves all resources to the output stream in the system default format.</source>
          <target state="translated">Salva todos os recursos no fluxo de saída no formato padrão do sistema.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.Generate">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> method is called implicitly by the <ph id="ph2">&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;</ph> method if it is not called by your application code.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> método é chamado implicitamente, o <ph id="ph2">&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;</ph> método se ele não é chamado pelo código do aplicativo.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.Generate">
          <source><ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> can only be called once, after all calls to <ph id="ph2">&lt;xref:System.Resources.ResourceWriter.AddResource%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Resources.ResourceWriter.AddResourceData%2A&gt;</ph> have been made.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> só pode ser chamado uma vez, depois de todas as chamadas para <ph id="ph2">&lt;xref:System.Resources.ResourceWriter.AddResource%2A&gt;</ph> e <ph id="ph3">&lt;xref:System.Resources.ResourceWriter.AddResourceData%2A&gt;</ph> foram feitas.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.Generate">
          <source>If an exception occurs while writing the resources, the output stream will be closed to prevent writing invalid information.</source>
          <target state="translated">Se ocorrer uma exceção ao gravar os recursos, o fluxo de saída será fechado para evitar gravar informações inválidas.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.Generate">
          <source><ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> does not close the output stream in normal cases.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> Não feche o fluxo de saída em casos normais.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.Generate">
          <source>Unless you are combining extra data with your .resources file or need access to the stream afterwards, you should call <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;</ph> after calling <ph id="ph2">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph>, or simply call <ph id="ph3">&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;</ph>.</source>
          <target state="translated">A menos que você combina dados extras com o arquivo. Resources ou precisa de acesso para o fluxo posteriormente, você deve chamar <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;</ph> depois de chamar <ph id="ph2">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph>, ou simplesmente chamar <ph id="ph3">&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.Generate">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> method to write all resource objects in a <ph id="ph2">&lt;xref:System.Resources.ResourceWriter&gt;</ph> class to the output stream</source>
          <target state="translated">O seguinte exemplo de código usa o <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> método gravar todos os recursos de objetos em um <ph id="ph2">&lt;xref:System.Resources.ResourceWriter&gt;</ph> classe ao fluxo de saída</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.Generate">
          <source>An I/O error occurred.</source>
          <target state="translated">Ocorreu um erro de E/S.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.Generate">
          <source>An error occurred during serialization of the object.</source>
          <target state="translated">Ocorreu um erro durante a serialização do objeto.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.Generate">
          <source>This <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> has been closed and its hash table is unavailable.</source>
          <target state="translated">Este <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> foi fechado e sua tabela de hash não está disponível.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="P:System.Resources.ResourceWriter.TypeNameConverter">
          <source>Gets or sets a delegate that enables resource assemblies to be written that target versions of the .NET Framework prior to the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph> by using qualified assembly names.</source>
          <target state="translated">Obtém ou define um delegado que habilita os assemblies de recurso a serem gravados que direcionam versões do .NET Framework antes do <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph> usando nomes de assembly qualificados.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Resources.ResourceWriter.TypeNameConverter">
          <source>The type that is encapsulated by the delegate.</source>
          <target state="translated">O tipo que é encapsulado por representante.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Resources.ResourceWriter.TypeNameConverter">
          <source><ph id="ph1">[!INCLUDE[vs_dev10_long](~/includes/vs-dev10-long-md.md)]</ph> and MSBuild set this property if you target an earlier version of the .NET Framework.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vs_dev10_long](~/includes/vs-dev10-long-md.md)]</ph> e MSBuild definir essa propriedade se você direcionar uma versão anterior do .NET Framework.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>