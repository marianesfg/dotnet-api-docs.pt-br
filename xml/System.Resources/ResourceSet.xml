<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ResourceSet.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a1c004c2cbe90a3788b82697a631822576eef92f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a1c004c2cbe90a3788b82697a631822576eef92f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Resources.ResourceSet">
          <source>Stores all the resources localized for one particular culture, ignoring all other cultures, including any fallback rules.</source>
          <target state="translated">Armazena todos os recursos localizados para uma cultura específica, ignorando todas as culturas, incluindo quaisquer regras de fallback.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Resources.ResourceSet">
          <source><bpt id="p1">**</bpt>Security Note<ept id="p1">**</ept>: Calling methods in this class with untrusted data is a security risk.</source>
          <target state="translated"><bpt id="p1">**</bpt>Observação de segurança<ept id="p1">**</ept>: chamar métodos nessa classe dados não confiáveis é um risco à segurança.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Resources.ResourceSet">
          <source>Call the methods in the class only with trusted data.</source>
          <target state="translated">Chame os métodos na classe somente quando você tiver dados confiáveis.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.Resources.ResourceSet">
          <source>For more information, see <bpt id="p1">[</bpt>Untrusted Data Security Risks<ept id="p1">](https://docs.com/rick-anderson-1/8710/untrusted-data-security-risks)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>Untrusted Data Security Risks<ept id="p1">](https://docs.com/rick-anderson-1/8710/untrusted-data-security-risks)</ept> (Riscos à segurança com os dados não confiáveis).</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceSet">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResourceSet&gt;</ph> class enumerates over an <ph id="ph2">&lt;xref:System.Resources.IResourceReader&gt;</ph>, loading every name and value, and storing them in a <ph id="ph3">&lt;xref:System.Collections.Hashtable&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Resources.ResourceSet&gt;</ph> classe enumera um <ph id="ph2">&lt;xref:System.Resources.IResourceReader&gt;</ph>, carregar cada nome e valor e armazená-los em um <ph id="ph3">&lt;xref:System.Collections.Hashtable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceSet">
          <source>A custom <ph id="ph1">&lt;xref:System.Resources.IResourceReader&gt;</ph> can be used.</source>
          <target state="translated">Um personalizado <ph id="ph1">&lt;xref:System.Resources.IResourceReader&gt;</ph> pode ser usado.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceSet">
          <source>You can instantiate a <ph id="ph1">&lt;xref:System.Resources.ResourceSet&gt;</ph> object that represents the resources of a specific culture by calling the <ph id="ph2">&lt;xref:System.Resources.ResourceManager.GetResourceSet%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Você pode instanciar uma <ph id="ph1">&lt;xref:System.Resources.ResourceSet&gt;</ph> objeto que representa os recursos de uma cultura específica ao chamar o <ph id="ph2">&lt;xref:System.Resources.ResourceManager.GetResourceSet%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceSet">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">Este tipo implementa o <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceSet">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">Quando você terminar de usar o tipo, descarte-direta ou indiretamente.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceSet">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
          <target state="translated">Para descartar o tipo diretamente, chame seu <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> método em um <ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph> bloco.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceSet">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">Para descartar indiretamente dele, use uma construção de linguagem, como <ph id="ph1">`using`</ph> (em c#) ou <ph id="ph2">`Using`</ph> (no Visual Basic).</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceSet">
          <source>For more information, see the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
          <target state="translated">Para obter mais informações, consulte a seção "Usando um objeto que implementa IDisposable" o <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> tópico de interface.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceSet">
          <source>Derived classes of <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph> that use their own resource reader and writer should override <ph id="ph2">&lt;see cref="M:System.Resources.ResourceSet.GetDefaultReader" /&gt;</ph>, and <ph id="ph3">&lt;see cref="M:System.Resources.ResourceSet.GetDefaultWriter" /&gt;</ph>, to provide the appropriate functionality for interpreting the resource set.</source>
          <target state="translated">Classes derivadas de <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph> que usam sua próprias leitor de recurso e gravador deve substituir <ph id="ph2">&lt;see cref="M:System.Resources.ResourceSet.GetDefaultReader" /&gt;</ph>, e <ph id="ph3">&lt;see cref="M:System.Resources.ResourceSet.GetDefaultWriter" /&gt;</ph>, para fornecer a funcionalidade apropriada para interpretar o conjunto de recursos.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="T:System.Resources.ResourceSet">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph> class.</source>
          <target state="translated">Cria uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph> class with default properties.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph> com propriedades padrão.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.#ctor(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> of resources to be read.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> de recursos a ser lido.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.#ctor(System.IO.Stream)">
          <source>The stream should refer to an existing resources file.</source>
          <target state="translated">O fluxo deve consultar um arquivo de recursos existente.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.#ctor(System.IO.Stream)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph> class using the system default <ph id="ph2">&lt;see cref="T:System.Resources.ResourceReader" /&gt;</ph> that reads resources from the given stream.</source>
          <target state="translated">Cria uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph> usando o <ph id="ph2">&lt;see cref="T:System.Resources.ResourceReader" /&gt;</ph> padrão do sistema que lê os recursos do fluxo fornecido.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.#ctor(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;paramref name="stream" /&gt;</ph> is not readable.</source>
          <target state="translated">O <ph id="ph1">&lt;paramref name="stream" /&gt;</ph> não é legível.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.#ctor(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;paramref name="stream" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O parâmetro <ph id="ph1">&lt;paramref name="stream" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.#ctor(System.IO.Stream)">
          <source>for providing serialization services.</source>
          <target state="translated">para fornecer serviços de serialização.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.#ctor(System.IO.Stream)">
          <source>Associated enumeration:   <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph> Security action: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph></source>
          <target state="translated">Enumeração associada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph> ação de segurança: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.#ctor(System.IO.Stream)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">requer confiança total para o chamador imediato.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.#ctor(System.IO.Stream)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.#ctor(System.Resources.IResourceReader)">
          <source>The reader that will be used.</source>
          <target state="translated">O leitor que será usado.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.#ctor(System.Resources.IResourceReader)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph> class using the specified resource reader.</source>
          <target state="translated">Cria uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph> usando o leitor do recurso especificado.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.#ctor(System.Resources.IResourceReader)">
          <source>You can use this constructor to support custom resource formats using a user-provided <ph id="ph1">&lt;xref:System.Resources.IResourceReader&gt;</ph>.</source>
          <target state="translated">Você pode usar esse construtor para dar suporte a formatos de recurso personalizado usando um fornecido pelo usuário <ph id="ph1">&lt;xref:System.Resources.IResourceReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.#ctor(System.Resources.IResourceReader)">
          <source>The <ph id="ph1">&lt;paramref name="reader" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O parâmetro <ph id="ph1">&lt;paramref name="reader" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.#ctor(System.String)">
          <source>Resource file to read.</source>
          <target state="translated">Arquivo de recurso a ser lido.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.#ctor(System.String)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph> class using the system default <ph id="ph2">&lt;see cref="T:System.Resources.ResourceReader" /&gt;</ph> that opens and reads resources from the given file.</source>
          <target state="translated">Cria uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph> usando o padrão do sistema <ph id="ph2">&lt;see cref="T:System.Resources.ResourceReader" /&gt;</ph> que abre e lê os recursos do arquivo fornecido.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.#ctor(System.String)">
          <source>The following code example defines a new instance of the <ph id="ph1">&lt;xref:System.Resources.ResourceSet&gt;</ph> class for a specific file, iterates through the resources used by that file, and displays their contents to the console.</source>
          <target state="translated">O exemplo de código a seguir define uma nova instância do <ph id="ph1">&lt;xref:System.Resources.ResourceSet&gt;</ph> classe para um arquivo específico, itera por meio dos recursos usados por esse arquivo e exibe seu conteúdo para o console.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="fileName" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O parâmetro <ph id="ph1">&lt;paramref name="fileName" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.Close">
          <source>Closes and releases any resources used by this <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph>.</source>
          <target state="translated">Fecha e libera recursos usados por este <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.Close">
          <source>All calls to methods on the <ph id="ph1">&lt;xref:System.Resources.ResourceSet&gt;</ph> after a call to this method might fail.</source>
          <target state="translated">Todas as chamadas para métodos de <ph id="ph1">&lt;xref:System.Resources.ResourceSet&gt;</ph> após uma chamada para esse método pode falhar.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.Close">
          <source><ph id="ph1">&lt;xref:System.Resources.ResourceSet.Close%2A&gt;</ph> can be safely called multiple times.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Resources.ResourceSet.Close%2A&gt;</ph> pode ser chamada várias vezes com segurança.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.Close">
          <source>The current implementation of <ph id="ph1">&lt;xref:System.Resources.ResourceSet.Close%2A&gt;</ph> calls <ph id="ph2">&lt;xref:System.Resources.ResourceSet.Dispose%2A&gt;</ph> (<ph id="ph3">`true`</ph>).</source>
          <target state="translated">A implementação atual de <ph id="ph1">&lt;xref:System.Resources.ResourceSet.Close%2A&gt;</ph> chamadas <ph id="ph2">&lt;xref:System.Resources.ResourceSet.Dispose%2A&gt;</ph> (<ph id="ph3">`true`</ph>).</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.Close">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Resources.ResourceSet.Close%2A&gt;</ph> method to release all resources used by the calling <ph id="ph2">&lt;xref:System.Resources.ResourceSet&gt;</ph> instance.</source>
          <target state="translated">O seguinte exemplo de código usa o <ph id="ph1">&lt;xref:System.Resources.ResourceSet.Close%2A&gt;</ph> método para liberar todos os recursos usados pela chamada <ph id="ph2">&lt;xref:System.Resources.ResourceSet&gt;</ph> instância.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="T:System.Resources.ResourceSet">
          <source>Releases resources used by the current <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph> instance.</source>
          <target state="translated">Libera os recursos usados pela instância <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.Dispose">
          <source>Disposes of the resources (other than memory) used by the current instance of <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph>.</source>
          <target state="translated">Descarta os recursos (diferentes da memória) usados pela instância atual de <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.Resources.ResourceSet.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Resources.ResourceSet&gt;</ph>.</source>
          <target state="translated">Chamar <ph id="ph1">&lt;xref:System.Resources.ResourceSet.Dispose%2A&gt;</ph> quando tiver terminado de usar o <ph id="ph2">&lt;xref:System.Resources.ResourceSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResourceSet.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.Resources.ResourceSet&gt;</ph> in an unusable state.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Resources.ResourceSet.Dispose%2A&gt;</ph> método deixa o <ph id="ph2">&lt;xref:System.Resources.ResourceSet&gt;</ph> em um estado inutilizável.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.Resources.ResourceSet.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Resources.ResourceSet&gt;</ph> so the memory it was occupying can be reclaimed by garbage collection.</source>
          <target state="translated">Depois de chamar <ph id="ph1">&lt;xref:System.Resources.ResourceSet.Dispose%2A&gt;</ph>, você deve liberar todas as referências para o <ph id="ph2">&lt;xref:System.Resources.ResourceSet&gt;</ph> para a memória estava ocupando pode ser recuperada pela coleta de lixo.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.Dispose">
          <source>The current method is the implementation of <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">O método atual é a implementação de <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.Dispose">
          <source>This implementation calls <ph id="ph1">&lt;xref:System.Resources.ResourceSet.Dispose%2A&gt;</ph> (<ph id="ph2">`true`</ph>).</source>
          <target state="translated">Essa implementação chama <ph id="ph1">&lt;xref:System.Resources.ResourceSet.Dispose%2A&gt;</ph> (<ph id="ph2">`true`</ph>).</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.Dispose(System.Boolean)">
          <source>Indicates whether the objects contained in the current instance should be explicitly closed.</source>
          <target state="translated">Indica se os objetos contidos na instância atual devem ser explicitamente fechados.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.Dispose(System.Boolean)">
          <source>Releases resources (other than memory) associated with the current instance, closing internal managed objects if requested.</source>
          <target state="translated">Libera recursos (diferentes da memória) associados à instância atual, fechando objetos internos gerenciados, se solicitado.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.Dispose(System.Boolean)">
          <source>If the <ph id="ph1">`dispose`</ph> parameter is <ph id="ph2">`true`</ph>, the current method frees all the resources associated with it as well as with all objects associated with it.</source>
          <target state="translated">Se o <ph id="ph1">`dispose`</ph> parâmetro é <ph id="ph2">`true`</ph>, o método atual libera todos os recursos associados com ele, bem como com todos os objetos associados a ele.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.Dispose(System.Boolean)">
          <source>If <ph id="ph1">`dispose`</ph> is <ph id="ph2">`false`</ph>, the current method frees only the resources allocated to it, and ignores any objects associated with it.</source>
          <target state="translated">Se <ph id="ph1">`dispose`</ph> é <ph id="ph2">`false`</ph>, o método atual libera apenas os recursos alocados a ele e ignora todos os objetos associados a ele.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetDefaultReader">
          <source>Returns the preferred resource reader class for this kind of <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph>.</source>
          <target state="translated">Retorna a classe do leitor de recursos preferencial para esse tipo de <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetDefaultReader">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> for the preferred resource reader for this kind of <ph id="ph2">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph>.</source>
          <target state="translated">Retorna o <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> para o leitor de recursos preferencial para esse tipo de <ph id="ph2">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetDefaultReader">
          <source>Derived classes of <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph> using their own resource reader should override <ph id="ph2">&lt;see cref="M:System.Resources.ResourceSet.GetDefaultReader" /&gt;</ph>, and <ph id="ph3">&lt;see cref="M:System.Resources.ResourceSet.GetDefaultWriter" /&gt;</ph>.</source>
          <target state="translated">Classes derivadas de <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph> usando seu próprios recursos leitor deve substituir <ph id="ph2">&lt;see cref="M:System.Resources.ResourceSet.GetDefaultReader" /&gt;</ph>, e <ph id="ph3">&lt;see cref="M:System.Resources.ResourceSet.GetDefaultWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetDefaultWriter">
          <source>Returns the preferred resource writer class for this kind of <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph>.</source>
          <target state="translated">Retorna a classe do gravador de recursos preferencial para esse tipo de <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetDefaultWriter">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> for the preferred resource writer for this kind of <ph id="ph2">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph>.</source>
          <target state="translated">Retorna o <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> para o gravador de recursos preferencial para esse tipo de <ph id="ph2">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetDefaultWriter">
          <source>Derived classes of <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph> using their own resource reader should override <ph id="ph2">&lt;see cref="M:System.Resources.ResourceSet.GetDefaultReader" /&gt;</ph>, and <ph id="ph3">&lt;see cref="M:System.Resources.ResourceSet.GetDefaultWriter" /&gt;</ph>.</source>
          <target state="translated">Classes derivadas de <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph> usando seu próprios recursos leitor deve substituir <ph id="ph2">&lt;see cref="M:System.Resources.ResourceSet.GetDefaultReader" /&gt;</ph>, e <ph id="ph3">&lt;see cref="M:System.Resources.ResourceSet.GetDefaultWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetEnumerator">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> that can iterate through the <ph id="ph2">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph>.</source>
          <target state="translated">Retorna um <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> que pode ser iterado por meio de <ph id="ph2">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> for this <ph id="ph2">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> para este <ph id="ph2">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetEnumerator">
          <source>Enumerators only allow reading the data in the collection.</source>
          <target state="translated">Enumeradores permitem apenas ler os dados na coleção.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetEnumerator">
          <source>Enumerators cannot be used to modify the underlying collection.</source>
          <target state="translated">Enumeradores não podem ser usados para modificar a coleção subjacente.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Inicialmente, o enumerador é posicionado antes do primeiro elemento da coleção.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> também traz o enumerador de volta para essa posição.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetEnumerator">
          <source>At this position, calling <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> throws an exception.</source>
          <target state="translated">AT isso posicionar, chamando <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> lança uma exceção.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">Por isso, você deve chamar <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> para avançar o enumerador até o primeiro elemento da coleção antes de ler o valor de <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> retorna o mesmo objeto até <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> ou <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> ser chamado.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> define <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> como o próximo elemento.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetEnumerator">
          <source>After the end of the collection is passed, the enumerator is positioned after the last element in the collection, and calling <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Após o final da coleção for passado, o enumerador está posicionado após o último elemento da coleção e chamada <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> retorna <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, calling <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> throws an exception.</source>
          <target state="translated">Se a última chamada <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> retornou <ph id="ph2">`false`</ph>, chamar <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> lança uma exceção.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">Para definir <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> como o primeiro elemento da coleção novamente, é possível chamar <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> seguido de <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Um enumerador permanece válido desde que a coleção continue inalterada.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Se forem feitas alterações à coleção, como adicionar, modificar ou excluir elementos, o enumerador será invalidado irrecuperavelmente e a próxima chamada para <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> lança um <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetEnumerator">
          <source>If the collection is modified between <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> will return the element that it is set to, even if the enumerator is already invalidated.</source>
          <target state="translated">Se a coleção é modificada entre <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> retornará o elemento que está definido como, mesmo se o enumerador já é invalidado.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetEnumerator">
          <source>You can use the <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A?displayProperty=nameWithType&gt;</ph> property to access the value stored in the current element.</source>
          <target state="translated">Você pode usar o <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A?displayProperty=nameWithType&gt;</ph> propriedade para acessar o valor armazenado no elemento atual.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetEnumerator">
          <source>Use the <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType&gt;</ph> property to access the key of the current element.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType&gt;</ph> propriedade para acessar a chave do elemento atual.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetEnumerator">
          <source>Use the <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType&gt;</ph> property to access the value of the current element.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType&gt;</ph> propriedade para acessar o valor do elemento atual.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">O enumerador não tem acesso exclusivo à coleção; por isso, a enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetEnumerator">
          <source>Even when a collection is synchronized, other threads could still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Mesmo quando uma coleção é sincronizada, outros threads ainda podem modificar a coleção, o que faz com que o enumerador lançar uma exceção.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Para garantir thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração ou verificar as exceções resultantes das alterações feitas por outros threads.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetEnumerator">
          <source>The following example demonstrates how to create a <ph id="ph1">&lt;xref:System.Resources.ResourceSet&gt;</ph><ph id="ph2">`rs`</ph> for the file <ph id="ph3">`items.resources`</ph>.</source>
          <target state="translated">O exemplo a seguir demonstra como criar um <ph id="ph1">&lt;xref:System.Resources.ResourceSet&gt;</ph> <ph id="ph2">`rs`</ph> para o arquivo <ph id="ph3">`items.resources`</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetEnumerator">
          <source>Next, the <ph id="ph1">&lt;xref:System.Resources.ResourceSet.GetEnumerator%2A&gt;</ph> method is used to create an <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph> for <ph id="ph3">`rs`</ph>.</source>
          <target state="translated">Em seguida, o <ph id="ph1">&lt;xref:System.Resources.ResourceSet.GetEnumerator%2A&gt;</ph> método é usado para criar um <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph> para <ph id="ph3">`rs`</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph> iterates through <ph id="ph2">`rs`</ph> and displays the contents to the console.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph> itera <ph id="ph2">`rs`</ph> e exibe o conteúdo para o console.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetEnumerator">
          <source>The resource set has been closed or disposed.</source>
          <target state="translated">O conjunto de recursos foi fechado ou descartado.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="T:System.Resources.ResourceSet">
          <source>Returns a resource object with the specified name.</source>
          <target state="translated">Retorna um objeto de recurso com o nome especificado.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetObject(System.String)">
          <source>Case-sensitive name of the resource to search for.</source>
          <target state="translated">O nome do recurso, que diferencia maiúsculas de minúsculas, a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetObject(System.String)">
          <source>Searches for a resource object with the specified name.</source>
          <target state="translated">Pesquisa um objeto do recurso com o nome especificado.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetObject(System.String)">
          <source>The requested resource.</source>
          <target state="translated">O recurso solicitado.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetObject(System.String)">
          <source>The name of the resource object is case sensitive.</source>
          <target state="translated">O nome do objeto de recurso diferencia maiusculas de minúsculas.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetObject(System.String)">
          <source>For a case-insensitive search, use <ph id="ph1">&lt;xref:System.Resources.ResourceSet.GetObject%2A&gt;</ph>.</source>
          <target state="translated">Para uma pesquisa diferencia maiusculas de minúsculas, use <ph id="ph1">&lt;xref:System.Resources.ResourceSet.GetObject%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetObject(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="name" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O parâmetro <ph id="ph1">&lt;paramref name="name" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetObject(System.String)">
          <source>The object has been closed or disposed.</source>
          <target state="translated">O objeto foi fechado ou descartado.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetObject(System.String,System.Boolean)">
          <source>Name of the resource to search for.</source>
          <target state="translated">Nome do recurso a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetObject(System.String,System.Boolean)">
          <source>Indicates whether the case of the specified name should be ignored.</source>
          <target state="translated">Indica se as maiúsculas/minúsculas do nome especificado devem ser ignoradas.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetObject(System.String,System.Boolean)">
          <source>Searches for a resource object with the specified name in a case-insensitive manner, if requested.</source>
          <target state="translated">Pesquisa um objeto de recurso com o nome especificado, não diferenciando maiúsculas de minúsculas, se solicitado.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetObject(System.String,System.Boolean)">
          <source>The requested resource.</source>
          <target state="translated">O recurso solicitado.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetObject(System.String,System.Boolean)">
          <source>If the value of the <ph id="ph1">`ignoreCase`</ph> parameter is <ph id="ph2">`true`</ph>, a resource with the name "Resource" is equivalent to the resource with the name "resource".</source>
          <target state="translated">Se o valor de <ph id="ph1">`ignoreCase`</ph> parâmetro é <ph id="ph2">`true`</ph>, um recurso com o nome "Recurso" é equivalente ao recurso com o recurso"nome".</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetObject(System.String,System.Boolean)">
          <source>Note, however, that this method always performs case-insensitive string comparisons using <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">No entanto, observe que esse método sempre executa comparações de cadeia de caracteres de maiusculas e minúsculas usando <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetObject(System.String,System.Boolean)">
          <source>The advantage is that results of case-insensitive string comparisons performed by this method are the same on all computers regardless of culture.</source>
          <target state="translated">A vantagem é que os resultados das comparações de cadeia de caracteres de maiusculas e minúsculas executadas por esse método são os mesmos em todos os computadores, independentemente da cultura.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetObject(System.String,System.Boolean)">
          <source>The disadvantage is that the results are not consistent with the casing rules of all cultures.</source>
          <target state="translated">A desvantagem é que os resultados não são consistentes com as regras de maiusculas e minúsculas de todas as culturas.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetObject(System.String,System.Boolean)">
          <source>For example, the Turkish alphabet has two versions of the character I: one with a dot and one without a dot.</source>
          <target state="translated">Por exemplo, o alfabeto turco tem duas versões do caractere i: uma com um ponto e sem um ponto.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetObject(System.String,System.Boolean)">
          <source>In Turkish, the character I (Unicode 0049) is considered the uppercase version of a different character ı (Unicode 0131).</source>
          <target state="translated">Turco, o caractere I (Unicode 0049) é considerado a versão maiuscula de um caractere diferente ı (0131 Unicode).</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetObject(System.String,System.Boolean)">
          <source>The character i (Unicode 0069) is considered the lowercase version of yet another character İ (Unicode 0130).</source>
          <target state="translated">O caractere i (0069 Unicode) é considerado a versão minúscula de outro caractere İ (0130 Unicode).</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetObject(System.String,System.Boolean)">
          <source>According to these casing rules, a case-insensitive string comparison of the characters i (Unicode 0069) and I (Unicode 0049) should fail for the culture "tr-TR" (Turkish in Turkey).</source>
          <target state="translated">Acordo com essas regras de maiusculas e minúsculas, uma comparação de cadeia de caracteres de maiusculas e minúsculas dos caracteres i (0069 Unicode) e (Unicode 0049) deve falhar para a cultura "tr-TR" (turco na Turquia).</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetObject(System.String,System.Boolean)">
          <source>Using the <ph id="ph1">`GetObject`</ph> method with <ph id="ph2">`ignoreCase`</ph> set to <ph id="ph3">`true`</ph>, this comparison succeeds.</source>
          <target state="translated">Usando o <ph id="ph1">`GetObject`</ph> método com <ph id="ph2">`ignoreCase`</ph> definida como <ph id="ph3">`true`</ph>, essa comparação é bem-sucedida.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetObject(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;paramref name="name" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O parâmetro <ph id="ph1">&lt;paramref name="name" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetObject(System.String,System.Boolean)">
          <source>The object has been closed or disposed.</source>
          <target state="translated">O objeto foi fechado ou descartado.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="T:System.Resources.ResourceSet">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> resource with a specified name.</source>
          <target state="translated">Retorna um recurso <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> com um nome especificado.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetString(System.String)">
          <source>Name of the resource to search for.</source>
          <target state="translated">Nome do recurso a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetString(System.String)">
          <source>Searches for a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> resource with the specified name.</source>
          <target state="translated">Pesquisa um recurso <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> com o nome especificado.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetString(System.String)">
          <source>The value of a resource, if the value is a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated">O valor de um recurso se o valor for um <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetString(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="name" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O parâmetro <ph id="ph1">&lt;paramref name="name" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetString(System.String)">
          <source>The resource specified by <ph id="ph1">&lt;paramref name="name" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated">O recurso especificado por <ph id="ph1">&lt;paramref name="name" /&gt;</ph> não é um <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetString(System.String)">
          <source>The object has been closed or disposed.</source>
          <target state="translated">O objeto foi fechado ou descartado.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetString(System.String,System.Boolean)">
          <source>Name of the resource to search for.</source>
          <target state="translated">Nome do recurso a ser pesquisado.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetString(System.String,System.Boolean)">
          <source>Indicates whether the case of the case of the specified name should be ignored.</source>
          <target state="translated">Indica se as maiúsculas/minúsculas do nome especificado devem ser ignoradas.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetString(System.String,System.Boolean)">
          <source>Searches for a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> resource with the specified name in a case-insensitive manner, if requested.</source>
          <target state="translated">Pesquisa um recurso <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> com o nome especificado, não diferenciando maiúsculas de minúsculas, se solicitado.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetString(System.String,System.Boolean)">
          <source>The value of a resource, if the value is a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated">O valor de um recurso se o valor for um <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetString(System.String,System.Boolean)">
          <source>If the value of the <ph id="ph1">`ignoreCase`</ph> parameter is <ph id="ph2">`true`</ph>, a resource with the name "Resource" is equivalent to the resource with the name "resource".</source>
          <target state="translated">Se o valor de <ph id="ph1">`ignoreCase`</ph> parâmetro é <ph id="ph2">`true`</ph>, um recurso com o nome "Recurso" é equivalente ao recurso com o recurso"nome".</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetString(System.String,System.Boolean)">
          <source>Note, however, that this method always performs case-insensitive string comparisons using <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">No entanto, observe que esse método sempre executa comparações de cadeia de caracteres de maiusculas e minúsculas usando <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetString(System.String,System.Boolean)">
          <source>The advantage is that results of case-insensitive string comparisons performed by this method are the same on all computers regardless of culture.</source>
          <target state="translated">A vantagem é que os resultados das comparações de cadeia de caracteres de maiusculas e minúsculas executadas por esse método são os mesmos em todos os computadores, independentemente da cultura.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetString(System.String,System.Boolean)">
          <source>The disadvantage is that the results are not consistent with the casing rules of all cultures.</source>
          <target state="translated">A desvantagem é que os resultados não são consistentes com as regras de maiusculas e minúsculas de todas as culturas.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetString(System.String,System.Boolean)">
          <source>For example, the Turkish alphabet has two versions of the character I: one with a dot and one without a dot.</source>
          <target state="translated">Por exemplo, o alfabeto turco tem duas versões do caractere i: uma com um ponto e sem um ponto.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetString(System.String,System.Boolean)">
          <source>In Turkish, the character I (Unicode 0049) is considered the uppercase version of a different character ı (Unicode 0131).</source>
          <target state="translated">Turco, o caractere I (Unicode 0049) é considerado a versão maiuscula de um caractere diferente ı (0131 Unicode).</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetString(System.String,System.Boolean)">
          <source>The character i (Unicode 0069) is considered the lowercase version of yet another character İ (Unicode 0130).</source>
          <target state="translated">O caractere i (0069 Unicode) é considerado a versão minúscula de outro caractere İ (0130 Unicode).</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetString(System.String,System.Boolean)">
          <source>According to these casing rules, a case-insensitive string comparison of the characters i (Unicode 0069) and I (Unicode 0049) should fail for the culture "tr-TR" (Turkish in Turkey).</source>
          <target state="translated">Acordo com essas regras de maiusculas e minúsculas, uma comparação de cadeia de caracteres de maiusculas e minúsculas dos caracteres i (0069 Unicode) e (Unicode 0049) deve falhar para a cultura "tr-TR" (turco na Turquia).</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.GetString(System.String,System.Boolean)">
          <source>Using the <ph id="ph1">`GetString`</ph> method with <ph id="ph2">`ignoreCase`</ph> set to <ph id="ph3">`true`</ph>, this comparison succeeds.</source>
          <target state="translated">Usando o <ph id="ph1">`GetString`</ph> método com <ph id="ph2">`ignoreCase`</ph> definida como <ph id="ph3">`true`</ph>, essa comparação é bem-sucedida.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetString(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;paramref name="name" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">O parâmetro <ph id="ph1">&lt;paramref name="name" /&gt;</ph> é <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetString(System.String,System.Boolean)">
          <source>The resource specified by <ph id="ph1">&lt;paramref name="name" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated">O recurso especificado por <ph id="ph1">&lt;paramref name="name" /&gt;</ph> não é um <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.GetString(System.String,System.Boolean)">
          <source>The object has been closed or disposed.</source>
          <target state="translated">O objeto foi fechado ou descartado.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="F:System.Resources.ResourceSet.Reader">
          <source>Indicates the <ph id="ph1">&lt;see cref="T:System.Resources.IResourceReader" /&gt;</ph> used to read the resources.</source>
          <target state="translated">Indica o <ph id="ph1">&lt;see cref="T:System.Resources.IResourceReader" /&gt;</ph> usado para ler os recursos.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.ReadResources">
          <source>Reads all the resources and stores them in a <ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph> indicated in the <ph id="ph2">&lt;see cref="F:System.Resources.ResourceSet.Table" /&gt;</ph> property.</source>
          <target state="translated">Lê todos os recursos e os armazena em um <ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph> indicado na propriedade <ph id="ph2">&lt;see cref="F:System.Resources.ResourceSet.Table" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.ReadResources">
          <source>Derived classes of <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph> should explicitly call <ph id="ph2">&lt;see cref="M:System.Resources.ResourceSet.ReadResources" /&gt;</ph> to load all the resources from the <ph id="ph3">&lt;see cref="T:System.Resources.IResourceReader" /&gt;</ph> into <ph id="ph4">&lt;see cref="F:System.Resources.ResourceSet.Table" /&gt;</ph>, generally either in the constructor or lazily on the first call to either <ph id="ph5">&lt;see cref="M:System.Resources.ResourceSet.GetString(System.String)" /&gt;</ph> or <ph id="ph6">&lt;see cref="M:System.Resources.ResourceSet.GetObject(System.String)" /&gt;</ph>.</source>
          <target state="translated">Classes derivadas de <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph> deve chamar explicitamente <ph id="ph2">&lt;see cref="M:System.Resources.ResourceSet.ReadResources" /&gt;</ph> carregar todos os recursos da <ph id="ph3">&lt;see cref="T:System.Resources.IResourceReader" /&gt;</ph> em <ph id="ph4">&lt;see cref="F:System.Resources.ResourceSet.Table" /&gt;</ph>, geralmente no construtor ou lentamente na primeira chamada para <ph id="ph5">&lt;see cref="M:System.Resources.ResourceSet.GetString(System.String)" /&gt;</ph> ou <ph id="ph6">&lt;see cref="M:System.Resources.ResourceSet.GetObject(System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.ReadResources">
          <source>However, if your resource set and IResourceReader already have information about each other and have a more efficient way to load just a few select resources, this step can be skipped.</source>
          <target state="translated">No entanto, se o conjunto de recursos e IResourceReader já tem informações sobre cada um dos outros e tem uma forma mais eficiente para carregar apenas algumas selecionar recursos, essa etapa pode ser ignorada.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceSet.ReadResources">
          <source>To minimize working set, write your resource set in such a way that it queries your IResourceReader for only the resource values requested by your application.</source>
          <target state="translated">Para minimizar o conjunto de trabalho, escreva seu recurso definido de forma que ele consulta o IResourceReader para apenas os valores do recurso solicitado pelo seu aplicativo.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> object to avoid a race condition with <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">Retorna um objeto <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> para evitar uma condição de corrida com <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.System#Collections#IEnumerable#GetEnumerator">
          <source>This member is not intended to be used directly from your code.</source>
          <target state="translated">Este membro não se destina a ser usado diretamente do seu código.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceSet.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator for the current <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph> object.</source>
          <target state="translated">Um enumerador para o objeto <ph id="ph1">&lt;see cref="T:System.Resources.ResourceSet" /&gt;</ph> atual.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="F:System.Resources.ResourceSet.Table">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph> in which the resources are stored.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph> no qual os recursos são armazenados.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>