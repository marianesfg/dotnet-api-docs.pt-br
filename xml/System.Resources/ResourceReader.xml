<Type Name="ResourceReader" FullName="System.Resources.ResourceReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bd0cb8c8f9bab7b3d360dd2941d7f05aafb1edf5" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37472450" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ResourceReader : System.Resources.IResourceReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ResourceReader extends System.Object implements class System.Collections.IEnumerable, class System.IDisposable, class System.Resources.IResourceReader" />
  <TypeSignature Language="DocId" Value="T:System.Resources.ResourceReader" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ResourceReader&#xA;Implements IResourceReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResourceReader sealed : System::Resources::IResourceReader" />
  <TypeSignature Language="F#" Value="type ResourceReader = class&#xA;    interface IResourceReader&#xA;    interface IEnumerable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Resources.Reader</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Resources.ResourceManager</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Resources.IResourceReader</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="e821c-101">Enumerates the resources in a binary resources (.resources) file by reading sequential resource name/value pairs.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e821c-101">Enumerates the resources in a binary resources (.resources) file by reading sequential resource name/value pairs.</span>
      </span>
      <span data-ttu-id="e821c-102">**Security Note**: Calling methods in this class with untrusted data is a security risk.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e821c-102">**Security Note**: Calling methods in this class with untrusted data is a security risk.</span>
      </span>
      <span data-ttu-id="e821c-103">Call the methods in the class only with trusted data.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e821c-103">Call the methods in the class only with trusted data.</span>
      </span>
      <span data-ttu-id="e821c-104">For more information, see [Untrusted Data Security Risks](https://docs.com/rick-anderson-1/8710/untrusted-data-security-risks).</span>
      <span class="sxs-lookup">
        <span data-stu-id="e821c-104">For more information, see [Untrusted Data Security Risks](https://docs.com/rick-anderson-1/8710/untrusted-data-security-risks).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e821c-105">O <xref:System.Resources.ResourceReader> classe fornece uma implementação padrão da <xref:System.Resources.IResourceReader> interface.</span><span class="sxs-lookup"><span data-stu-id="e821c-105">The <xref:System.Resources.ResourceReader> class provides a standard implementation of the <xref:System.Resources.IResourceReader> interface.</span></span> <span data-ttu-id="e821c-106">Um <xref:System.Resources.ResourceReader> instância representa um arquivo. Resources de autônomo ou um arquivo. Resources inserido em um assembly.</span><span class="sxs-lookup"><span data-stu-id="e821c-106">A <xref:System.Resources.ResourceReader> instance represents either a standalone .resources file or a .resources file that is embedded in an assembly.</span></span> <span data-ttu-id="e821c-107">Ele é usado para enumerar os recursos em um arquivo. Resources e recuperar seus pares de nome/valor.</span><span class="sxs-lookup"><span data-stu-id="e821c-107">It is used to enumerate the resources in a .resources file and retrieve its name/value pairs.</span></span> <span data-ttu-id="e821c-108">Ele difere de <xref:System.Resources.ResourceManager> classe, que é usado para recuperar recursos nomeados especificados de um arquivo. Resources inserido em um assembly.</span><span class="sxs-lookup"><span data-stu-id="e821c-108">It differs from the <xref:System.Resources.ResourceManager> class, which is used to retrieve specified named resources from a .resources file that is embedded in an assembly.</span></span> <span data-ttu-id="e821c-109">O <xref:System.Resources.ResourceManager> classe é usada para recuperar os recursos cujos nomes são conhecidos com antecedência, enquanto o <xref:System.Resources.ResourceReader> classe é útil para recuperar recursos cujo número ou os nomes exatos não são conhecidos em tempo de compilação.</span><span class="sxs-lookup"><span data-stu-id="e821c-109">The <xref:System.Resources.ResourceManager> class is used to retrieve resources whose names are known in advance, whereas the <xref:System.Resources.ResourceReader> class is useful for retrieving resources whose number or precise names are not known at compile time.</span></span> <span data-ttu-id="e821c-110">Por exemplo, um aplicativo pode usar um arquivo de recursos para armazenar informações de configuração que são organizadas em seções e itens em uma seção, em que o número de seções ou itens em uma seção não é conhecido de antemão.</span><span class="sxs-lookup"><span data-stu-id="e821c-110">For example, an application may use a resources file to store configuration information that is organized into sections and items in a section, where the number of sections or items in a section is not known in advance.</span></span> <span data-ttu-id="e821c-111">Recursos, em seguida, podem ser nomeados genericamente (como `Section1`, `Section1Item1`, `Section1Item2`e assim por diante) e recuperadas usando uma <xref:System.Resources.ResourceReader> objeto.</span><span class="sxs-lookup"><span data-stu-id="e821c-111">Resources can then be named generically (such as `Section1`, `Section1Item1`, `Section1Item2`, and so on) and retrieved by using a <xref:System.Resources.ResourceReader> object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="e821c-112">Esse tipo implementa o <xref:System.IDisposable> interface.</span><span class="sxs-lookup"><span data-stu-id="e821c-112">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="e821c-113">Quando você terminar de usar o tipo, você deve descartá-lo diretamente ou indiretamente.</span><span class="sxs-lookup"><span data-stu-id="e821c-113">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="e821c-114">Para descartar o tipo diretamente, chame seu <xref:System.IDisposable.Dispose%2A> método em um `try` / `catch` bloco.</span><span class="sxs-lookup"><span data-stu-id="e821c-114">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="e821c-115">Para descartá-los indiretamente, usar uma construção de linguagem, como `using` (em c#) ou `Using` (no Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="e821c-115">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="e821c-116">Para obter mais informações, consulte a seção "Usando um objeto que implementa IDisposable" o <xref:System.IDisposable> tópico da interface.</span><span class="sxs-lookup"><span data-stu-id="e821c-116">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="e821c-117">Para obter mais informações sobre como usar o <xref:System.Resources.ResourceReader> de classe, consulte as seções a seguir:</span><span class="sxs-lookup"><span data-stu-id="e821c-117">For more information about using the <xref:System.Resources.ResourceReader> class, see the following sections:</span></span>  
  
-   [<span data-ttu-id="e821c-118">Criando uma instância de um objeto ResourceReader</span><span class="sxs-lookup"><span data-stu-id="e821c-118">Instantiating a ResourceReader object</span></span>](#instantiate)  
  
-   [<span data-ttu-id="e821c-119">Enumerando recursos de um objeto ResourceReader</span><span class="sxs-lookup"><span data-stu-id="e821c-119">Enumerating a ResourceReader object's resources</span></span>](#enumerate)  
  
    -   [<span data-ttu-id="e821c-120">Recuperando recursos usando propriedades de IDictionaryEnumerator</span><span class="sxs-lookup"><span data-stu-id="e821c-120">Retrieving resources by using IDictionaryEnumerator properties</span></span>](#idictionaryenumerator)  
  
    -   [<span data-ttu-id="e821c-121">Recuperando recursos por nome com GetResourceData</span><span class="sxs-lookup"><span data-stu-id="e821c-121">Retrieving resources by name with GetResourceData</span></span>](#getresourcedata)  
  
<a name="instantiate"></a>   
## <a name="instantiating-a-resourcereader-object"></a><span data-ttu-id="e821c-122">Criando uma instância de um objeto ResourceReader</span><span class="sxs-lookup"><span data-stu-id="e821c-122">Instantiating a ResourceReader Object</span></span>  
 <span data-ttu-id="e821c-123">Um arquivo. Resources é um arquivo binário que foi compilado a partir de um arquivo de texto ou um arquivo. resx XML por [Resgen.exe (gerador de arquivo de recurso)](~/docs/framework/tools/resgen-exe-resource-file-generator.md).</span><span class="sxs-lookup"><span data-stu-id="e821c-123">A .resources file is a binary file that has been compiled from either a text file or an XML .resx file by [Resgen.exe (Resource File Generator)](~/docs/framework/tools/resgen-exe-resource-file-generator.md).</span></span> <span data-ttu-id="e821c-124">Um <xref:System.Resources.ResourceReader> objeto pode representar um arquivo. Resources de autônomo ou um arquivo. Resources que foi incorporado em um assembly.</span><span class="sxs-lookup"><span data-stu-id="e821c-124">A <xref:System.Resources.ResourceReader> object can represent either a standalone .resources file or a .resources file that has been embedded in an assembly.</span></span>  
  
 <span data-ttu-id="e821c-125">Para criar uma instância de um <xref:System.Resources.ResourceReader> objeto que lê de um arquivo. Resources autônomos, usar o <xref:System.Resources.ResourceReader> construtor de classe com um fluxo de entrada ou uma cadeia de caracteres que contém o nome do arquivo. Resources.</span><span class="sxs-lookup"><span data-stu-id="e821c-125">To instantiate a <xref:System.Resources.ResourceReader> object that reads from a standalone .resources file, use the <xref:System.Resources.ResourceReader> class constructor with either an input stream or a string that contains the .resources file name.</span></span> <span data-ttu-id="e821c-126">O exemplo a seguir ilustra as duas abordagens.</span><span class="sxs-lookup"><span data-stu-id="e821c-126">The following example illustrates both approaches.</span></span> <span data-ttu-id="e821c-127">O primeiro cria uma <xref:System.Resources.ResourceReader> objeto que representa um arquivo. Resources chamado `Resources1.resources` usando seu nome de arquivo.</span><span class="sxs-lookup"><span data-stu-id="e821c-127">The first instantiates a <xref:System.Resources.ResourceReader> object that represents a .resources file named `Resources1.resources` by using its file name.</span></span> <span data-ttu-id="e821c-128">O segundo instancia uma <xref:System.Resources.ResourceReader> objeto que representa um arquivo. Resources chamado `Resources2.resources` usando um fluxo criado a partir do arquivo.</span><span class="sxs-lookup"><span data-stu-id="e821c-128">The second instantiates a <xref:System.Resources.ResourceReader> object that represents a .resources file named `Resources2.resources` by using a stream created from the file.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/ctor1.cs#2)]
 [!code-vb[System.Resources.ResourceReader.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/ctor1.vb#2)]  
  
 <span data-ttu-id="e821c-129">Para criar uma <xref:System.Resources.ResourceReader> criar uma instância de objeto que representa um arquivo. Resources incorporado, um <xref:System.Reflection.Assembly> objeto do assembly no qual o arquivo. Resources é incorporado.</span><span class="sxs-lookup"><span data-stu-id="e821c-129">To create a <xref:System.Resources.ResourceReader> object that represents an embedded .resources file, instantiate an <xref:System.Reflection.Assembly> object from the assembly in which the .resources file is embedded.</span></span> <span data-ttu-id="e821c-130">Sua <xref:System.Reflection.Assembly.GetManifestResourceStream%2A?displayProperty=nameWithType> método retorna um <xref:System.IO.Stream> objeto que pode ser passado para o <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> construtor.</span><span class="sxs-lookup"><span data-stu-id="e821c-130">Its <xref:System.Reflection.Assembly.GetManifestResourceStream%2A?displayProperty=nameWithType> method returns a <xref:System.IO.Stream> object that can be passed to the <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor.</span></span> <span data-ttu-id="e821c-131">O exemplo a seguir instancia um <xref:System.Resources.ResourceReader> objeto que representa um arquivo. Resources incorporado.</span><span class="sxs-lookup"><span data-stu-id="e821c-131">The following example instantiates a <xref:System.Resources.ResourceReader> object that represents an embedded .resources file.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/ctor1.cs#3)]
 [!code-vb[System.Resources.ResourceReader.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/ctor1.vb#3)]  
  
<a name="enumerate"></a>   
## <a name="enumerating-a-resourcereader-objects-resources"></a><span data-ttu-id="e821c-132">Enumerando recursos de um objeto ResourceReader</span><span class="sxs-lookup"><span data-stu-id="e821c-132">Enumerating a ResourceReader Object's Resources</span></span>  
 <span data-ttu-id="e821c-133">Para enumerar os recursos em um arquivo. Resources, você chama o <xref:System.Resources.ResourceReader.GetEnumerator%2A> método, que retorna um <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> objeto.</span><span class="sxs-lookup"><span data-stu-id="e821c-133">To enumerate the resources in a .resources file, you call the <xref:System.Resources.ResourceReader.GetEnumerator%2A> method, which returns an <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> object.</span></span> <span data-ttu-id="e821c-134">Você chama o `IDictionaryEnumerator.MoveNext` método para mover de um recurso para o próximo.</span><span class="sxs-lookup"><span data-stu-id="e821c-134">You call the `IDictionaryEnumerator.MoveNext` method to move from one resource to the next.</span></span> <span data-ttu-id="e821c-135">O método retorna `false` quando todos os recursos no arquivo. Resources tiverem sido enumerados.</span><span class="sxs-lookup"><span data-stu-id="e821c-135">The method returns `false` when all the resources in the .resources file have been enumerated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e821c-136">Embora o <xref:System.Resources.ResourceReader> classe implementa o <xref:System.Collections.IEnumerable> interface e o <xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=nameWithType> método, o <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> método não fornece o <xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=nameWithType> implementação.</span><span class="sxs-lookup"><span data-stu-id="e821c-136">Although the <xref:System.Resources.ResourceReader> class implements the <xref:System.Collections.IEnumerable> interface and the <xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=nameWithType> method, the <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> method does not provide the <xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="e821c-137">Em vez disso, o <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> método retorna um <xref:System.Collections.IDictionaryEnumerator> objeto de interface que fornece acesso ao par de nome/valor de cada recurso.</span><span class="sxs-lookup"><span data-stu-id="e821c-137">Instead, the <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> method  returns an <xref:System.Collections.IDictionaryEnumerator> interface object that provides access to each resource's name/value pair.</span></span>  
  
 <span data-ttu-id="e821c-138">Você pode recuperar os recursos individuais na coleção de duas maneiras:</span><span class="sxs-lookup"><span data-stu-id="e821c-138">You can retrieve the individual resources in the collection in two ways:</span></span>  
  
-   <span data-ttu-id="e821c-139">Você pode iterar cada recurso nas <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> coleta e uso <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> propriedades para recuperar o nome do recurso e o valor.</span><span class="sxs-lookup"><span data-stu-id="e821c-139">You can iterate each resource in the <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> collection and use <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> properties to retrieve the resource name and value.</span></span> <span data-ttu-id="e821c-140">Recomendamos essa técnica quando todos os recursos são do mesmo tipo, ou se você souber o tipo de dados de cada recurso.</span><span class="sxs-lookup"><span data-stu-id="e821c-140">We recommend this technique when all the resources are of the same type, or you know the data type of each resource.</span></span>  
  
-   <span data-ttu-id="e821c-141">Você pode recuperar o nome de cada recurso quando você itera os <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> coleta e chamar o <xref:System.Resources.ResourceReader.GetResourceData%2A> método para recuperar os dados do recurso.</span><span class="sxs-lookup"><span data-stu-id="e821c-141">You can retrieve the name of each resource when you iterate the <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> collection and call the <xref:System.Resources.ResourceReader.GetResourceData%2A> method to retrieve the resource's data.</span></span> <span data-ttu-id="e821c-142">Recomendamos essa abordagem quando você não souber o tipo de dados de cada recurso ou se a abordagem anterior lança exceções.</span><span class="sxs-lookup"><span data-stu-id="e821c-142">We recommend this approach when you do not know the data type of each resource or if the previous approach throws exceptions.</span></span>  
  
<a name="idictionaryenumerator"></a>   
### <a name="retrieving-resources-by-using-idictionaryenumerator-properties"></a><span data-ttu-id="e821c-143">Recuperando recursos usando propriedades de IDictionaryEnumerator</span><span class="sxs-lookup"><span data-stu-id="e821c-143">Retrieving Resources by Using IDictionaryEnumerator Properties</span></span>  
 <span data-ttu-id="e821c-144">O primeiro método de enumerar os recursos em um arquivo. Resources envolve a recuperação diretamente o par de nome/valor de cada recurso.</span><span class="sxs-lookup"><span data-stu-id="e821c-144">The first method of enumerating the resources in a .resources file involves directly retrieving each resource's name/value pair.</span></span> <span data-ttu-id="e821c-145">Depois de chamar o `IDictionaryEnumerator.MoveNext` nome de método para mover para cada recurso na coleção, você pode recuperar o recurso do <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> propriedade e os dados de recursos do <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> propriedade.</span><span class="sxs-lookup"><span data-stu-id="e821c-145">After you call the `IDictionaryEnumerator.MoveNext` method to move to each resource in the collection, you can retrieve the resource name from the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> property and the resource data from the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="e821c-146">O exemplo a seguir mostra como recuperar o nome e valor de cada recurso em um arquivo. Resources usando o <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> e <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> propriedades.</span><span class="sxs-lookup"><span data-stu-id="e821c-146">The following example shows how to retrieve the name and value of each resource in a .resources file by using the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> and <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> properties.</span></span> <span data-ttu-id="e821c-147">Para executar o exemplo, crie o seguinte arquivo de texto chamado ApplicationResources.txt para definir recursos de cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="e821c-147">To run the example, create the following text file named ApplicationResources.txt to define string resources.</span></span>  
  
```  
Title="Contact Information"  
Label1="First Name:"  
Label2="Middle Name:"  
Label3="Last Name:"  
Label4="SSN:"  
Label5="Street Address:"  
Label6="City:"  
Label7="State:"  
Label8="Zip Code:"  
Label9="Home Phone:"  
Label10="Business Phone:"  
Label11="Mobile Phone:"  
Label12="Other Phone:"  
Label13="Fax:"  
Label14="Email Address:"  
Label15="Alternate Email Address:"  
```  
  
 <span data-ttu-id="e821c-148">Em seguida, você pode converter o arquivo de recurso de texto em um arquivo binário chamado ApplicationResources.resources usando o seguinte comando:</span><span class="sxs-lookup"><span data-stu-id="e821c-148">You can then convert the text resource file to a binary file named ApplicationResources.resources by using the following command:</span></span>  
  
 <span data-ttu-id="e821c-149">**resgen ApplicationResources.txt**</span><span class="sxs-lookup"><span data-stu-id="e821c-149">**resgen ApplicationResources.txt**</span></span>  
  
 <span data-ttu-id="e821c-150">O exemplo a seguir, em seguida, usa o <xref:System.Resources.ResourceReader> classe para enumerar cada recurso no arquivo. Resources binário autônomo e exibir seu nome de chave e valor correspondente.</span><span class="sxs-lookup"><span data-stu-id="e821c-150">The following example then uses the <xref:System.Resources.ResourceReader> class to enumerate each resource in the standalone binary .resources file and to display its key name and corresponding value.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/class1.cs#1)]
 [!code-vb[System.Resources.ResourceReader.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/class1.vb#1)]  
  
 <span data-ttu-id="e821c-151">A tentativa de recuperar dados de recursos do <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> propriedade pode lançar as seguintes exceções:</span><span class="sxs-lookup"><span data-stu-id="e821c-151">The attempt to retrieve resource data from the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property can throw the following exceptions:</span></span>  
  
-   <span data-ttu-id="e821c-152">Um <xref:System.FormatException> se os dados não estão no formato esperado.</span><span class="sxs-lookup"><span data-stu-id="e821c-152">A <xref:System.FormatException> if the data is not in the expected format.</span></span>  
  
-   <span data-ttu-id="e821c-153">Um <xref:System.IO.FileNotFoundException> se o assembly que contém o tipo ao qual pertencem os dados não pode ser encontrado.</span><span class="sxs-lookup"><span data-stu-id="e821c-153">A <xref:System.IO.FileNotFoundException> if the assembly that contains the type to which the data belongs cannot be found.</span></span>  
  
-   <span data-ttu-id="e821c-154">Um <xref:System.TypeLoadException> se o tipo ao qual pertencem os dados não pode ser não pode ser encontrado.</span><span class="sxs-lookup"><span data-stu-id="e821c-154">A <xref:System.TypeLoadException> if the type to which the data belongs cannot be cannot be found.</span></span>  
  
 <span data-ttu-id="e821c-155">Normalmente, essas exceções forem geradas se o arquivo. Resources foi modificado manualmente, se o assembly no qual um tipo é definido não foram incluídos com um aplicativo ou tiver sido excluído inadvertidamente, ou se o assembly é uma versão mais antiga que preceda um tipo.</span><span class="sxs-lookup"><span data-stu-id="e821c-155">Typically, these exceptions are thrown if the .resources file has been modified manually, if the assembly in which a type is defined has either not been included with an application or has been inadvertently deleted, or if the assembly is an older version that predates a type.</span></span> <span data-ttu-id="e821c-156">Se uma dessas exceções é lançada, você pode recuperar recursos enumerar cada recurso e chamando o <xref:System.Resources.ResourceReader.GetResourceData%2A> método, como mostra a seção a seguir.</span><span class="sxs-lookup"><span data-stu-id="e821c-156">If one of these exceptions is thrown, you can retrieve resources by enumerating each resource and calling the <xref:System.Resources.ResourceReader.GetResourceData%2A> method, as the following section shows.</span></span> <span data-ttu-id="e821c-157">Essa abordagem fornece algumas informações sobre os dados de tipo que o <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> tentativa da propriedade retornar.</span><span class="sxs-lookup"><span data-stu-id="e821c-157">This approach provides you with some information about the data type that the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property attempted to return.</span></span>  
  
<a name="getresourcedata"></a>   
### <a name="retrieving-resources-by-name-with-getresourcedata"></a><span data-ttu-id="e821c-158">Recuperando recursos por nome com GetResourceData</span><span class="sxs-lookup"><span data-stu-id="e821c-158">Retrieving Resources by Name with GetResourceData</span></span>  
 <span data-ttu-id="e821c-159">A segunda abordagem para enumerar recursos em um arquivo. Resources também envolve a navegação por meio dos recursos no arquivo chamando o `IDictionaryEnumerator.MoveNext` método.</span><span class="sxs-lookup"><span data-stu-id="e821c-159">The second approach to enumerating resources in a .resources file also involves navigating through the resources in the file by calling the `IDictionaryEnumerator.MoveNext` method.</span></span> <span data-ttu-id="e821c-160">Para cada recurso, você recupera o nome do recurso do <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> propriedade, que é então passada para o <xref:System.Resources.ResourceReader.GetResourceData%28System.String%2CSystem.String%40%2CSystem.Byte%5B%5D%40%29> método para recuperar os dados do recurso.</span><span class="sxs-lookup"><span data-stu-id="e821c-160">For each resource, you retrieve the resource's name from the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> property, which is then passed to the <xref:System.Resources.ResourceReader.GetResourceData%28System.String%2CSystem.String%40%2CSystem.Byte%5B%5D%40%29> method to retrieve the resource's data.</span></span> <span data-ttu-id="e821c-161">Isto é retornado como uma matriz de bytes no `resourceData` argumento.</span><span class="sxs-lookup"><span data-stu-id="e821c-161">This is returned as a byte array in the `resourceData` argument.</span></span>  
  
 <span data-ttu-id="e821c-162">Essa abordagem é mais complicada do que recuperar o nome do recurso e o valor da <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> e <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> propriedades, porque ele retorna os bytes reais que formam o valor do recurso.</span><span class="sxs-lookup"><span data-stu-id="e821c-162">This approach is more awkward than retrieving the resource name and value from the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> and <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> properties, because it returns the actual bytes that form the resource value.</span></span> <span data-ttu-id="e821c-163">No entanto, se a tentativa de recuperar o recurso gera uma exceção, o <xref:System.Resources.ResourceReader.GetResourceData%2A> método pode ajudar a identificar a origem da exceção, fornecendo informações sobre o tipo de dados do recurso.</span><span class="sxs-lookup"><span data-stu-id="e821c-163">However, if the attempt to retrieve the resource throws an exception, the <xref:System.Resources.ResourceReader.GetResourceData%2A> method can help identify the source of the exception by supplying information about the resource's data type.</span></span> <span data-ttu-id="e821c-164">Para obter mais informações sobre a cadeia de caracteres que indica o tipo de dados do recurso, consulte <xref:System.Resources.ResourceReader.GetResourceData%2A>.</span><span class="sxs-lookup"><span data-stu-id="e821c-164">For more information about the string that indicates the resource's data type, see <xref:System.Resources.ResourceReader.GetResourceData%2A>.</span></span>  
  
 <span data-ttu-id="e821c-165">O exemplo a seguir ilustra como usar essa abordagem para recuperar os recursos e para lidar com todas as exceções que são geradas.</span><span class="sxs-lookup"><span data-stu-id="e821c-165">The following example illustrates how to use this approach to retrieve resources and to handle any exceptions that are thrown.</span></span> <span data-ttu-id="e821c-166">Ele cria programaticamente um arquivo. Resources binário que contém quatro cadeias de caracteres, um booleano, um inteiro, um bitmap e uma personalizada `DateTimeTZI` objeto.</span><span class="sxs-lookup"><span data-stu-id="e821c-166">It programmatically creates a binary .resources file that contains four strings, one Boolean, one integer, one bitmap, and one custom `DateTimeTZI` object.</span></span> <span data-ttu-id="e821c-167">Para executar o exemplo, faça o seguinte:</span><span class="sxs-lookup"><span data-stu-id="e821c-167">To run the example, do the following:</span></span>  
  
1.  <span data-ttu-id="e821c-168">Criar um assembly denominado Library. dll que contém o `DateTimeTZI` estrutura.</span><span class="sxs-lookup"><span data-stu-id="e821c-168">Create an assembly named Library.dll that contains the `DateTimeTZI` structure.</span></span> <span data-ttu-id="e821c-169">Este é o código-fonte para o assembly.</span><span class="sxs-lookup"><span data-stu-id="e821c-169">The following is the source code for the assembly.</span></span>  
  
     [!code-csharp[System.Resources.ResourceReader.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/library.cs#4)]
     [!code-vb[System.Resources.ResourceReader.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/library.vb#4)]  
  
     <span data-ttu-id="e821c-170">Compile o código-fonte em c# usando o seguinte comando:</span><span class="sxs-lookup"><span data-stu-id="e821c-170">Compile the source code in C# by using the following command:</span></span>  
  
    ```  
    csc /t:library library.cs  
    ```  
  
     <span data-ttu-id="e821c-171">Ou, você pode compilá-lo no Visual Basic usando o seguinte comando:</span><span class="sxs-lookup"><span data-stu-id="e821c-171">Or, you can compile it in Visual Basic by using the following command:</span></span>  
  
    ```  
    vbc library.vb /t:library  
    ```  
  
2.  <span data-ttu-id="e821c-172">Compile e execute o seguinte código-fonte, que cria um arquivo. Resources chamado ContactResources.resources.</span><span class="sxs-lookup"><span data-stu-id="e821c-172">Compile and execute the following source code, which creates a .resources file named ContactResources.resources.</span></span>  
  
     [!code-csharp[System.Resources.ResourceReader.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/createresourceex1.cs#5)]
     [!code-vb[System.Resources.ResourceReader.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/createresourceex1.vb#5)]  
  
     <span data-ttu-id="e821c-173">O arquivo de código fonte chamado CreateResources.cs.</span><span class="sxs-lookup"><span data-stu-id="e821c-173">The source code file is named CreateResources.cs.</span></span> <span data-ttu-id="e821c-174">Você pode compilá-lo em c# usando o seguinte comando:</span><span class="sxs-lookup"><span data-stu-id="e821c-174">You can compile it in C# by using the following command:</span></span>  
  
    ```  
    csc CreateResources.cs /r:library.dll  
    ```  
  
     <span data-ttu-id="e821c-175">Ou, você pode compilá-lo no Visual Basic usando o seguinte comando:</span><span class="sxs-lookup"><span data-stu-id="e821c-175">Or, you can compile it in Visual Basic by using the following command:</span></span>  
  
    ```  
    vbc CreateResources.vb /r:library.dll  
    ```  
  
3.  <span data-ttu-id="e821c-176">Compile e execute o seguinte código para enumerar os recursos no arquivo ContactResources.resources.</span><span class="sxs-lookup"><span data-stu-id="e821c-176">Compile and run the following code to enumerate the resources in the ContactResources.resources file.</span></span>  
  
     [!code-csharp[System.Resources.ResourceReader.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/readresourceex1.cs#6)]
     [!code-vb[System.Resources.ResourceReader.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/readresourceex1.vb#6)]  
  
     <span data-ttu-id="e821c-177">Depois de modificar o código-fonte (por exemplo, lançando deliberadamente uma <xref:System.FormatException> no final o `try` bloco) ou renomear o assembly Library. dll para que ele não está disponível em tempo de execução, você pode executar o exemplo para ver como chamadas para <xref:System.Resources.ResourceReader.GetResourceData%2A> que você possa recuperar ou recriar algumas informações de recurso.</span><span class="sxs-lookup"><span data-stu-id="e821c-177">After modifying the source code (for example, by deliberately throwing a <xref:System.FormatException> at the end of the `try` block) or renaming the Library.dll assembly so that it is unavailable at runtime, you can run the example to see how calls to <xref:System.Resources.ResourceReader.GetResourceData%2A> enable you to retrieve or recreate some resource information.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e821c-178">Initializes a new instance of the <see cref="T:System.Resources.ResourceReader" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e821c-178">Initializes a new instance of the <see cref="T:System.Resources.ResourceReader" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="e821c-179">Usando uma instância desse objeto com dados não confiáveis é um risco à segurança.</span><span class="sxs-lookup"><span data-stu-id="e821c-179">Using an instance of this object with untrusted data is a security risk.</span></span> <span data-ttu-id="e821c-180">Use esse objeto somente com dados confiáveis.</span><span class="sxs-lookup"><span data-stu-id="e821c-180">Use this object only with trusted data.</span></span> <span data-ttu-id="e821c-181">Para obter mais informações, consulte [validação de dados](https://www.owasp.org/index.php/Data_Validation).</span><span class="sxs-lookup"><span data-stu-id="e821c-181">For more information, see [Data Validation](https://www.owasp.org/index.php/Data_Validation).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceReader (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceReader(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResourceReader : System.IO.Stream -&gt; System.Resources.ResourceReader" Usage="new System.Resources.ResourceReader stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="e821c-182">The input stream for reading resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e821c-182">The input stream for reading resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e821c-183">Initializes a new instance of the <see cref="T:System.Resources.ResourceReader" /> class for the specified stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e821c-183">Initializes a new instance of the <see cref="T:System.Resources.ResourceReader" /> class for the specified stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e821c-184">O <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> construtor instancia um <xref:System.Resources.ResourceReader> objeto que recupera os recursos a partir de um arquivo. Resources autônomos ou de um. Resources arquivo que é inserido em um assembly.</span><span class="sxs-lookup"><span data-stu-id="e821c-184">The <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor instantiates a <xref:System.Resources.ResourceReader> object that retrieves resources either from a standalone .resources file or from a .resources file that is embedded in an assembly.</span></span> <span data-ttu-id="e821c-185">Para ler de um arquivo. Resources autônomos, instanciar uma <xref:System.IO.Stream> do objeto e passá-lo para o <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> construtor.</span><span class="sxs-lookup"><span data-stu-id="e821c-185">To read from a standalone .resources file, instantiate a <xref:System.IO.Stream> object and pass it to the <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor.</span></span> <span data-ttu-id="e821c-186">Para ler de um arquivo. Resources incorporado, chame o <xref:System.Reflection.Assembly.GetManifestResourceStream%2A?displayProperty=nameWithType> método com o nome diferencia maiusculas de minúsculas do arquivo. Resources e pass retornado <xref:System.IO.Stream> do objeto para o <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> construtor.</span><span class="sxs-lookup"><span data-stu-id="e821c-186">To read from an embedded .resources file, call the <xref:System.Reflection.Assembly.GetManifestResourceStream%2A?displayProperty=nameWithType> method with the case-sensitive name of the .resources file, and pass the returned <xref:System.IO.Stream> object to the <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="e821c-187">Usando uma instância desse objeto com dados não confiáveis é um risco à segurança.</span><span class="sxs-lookup"><span data-stu-id="e821c-187">Using an instance of this object with untrusted data is a security risk.</span></span> <span data-ttu-id="e821c-188">Use esse objeto somente com dados confiáveis.</span><span class="sxs-lookup"><span data-stu-id="e821c-188">Use this object only with trusted data.</span></span> <span data-ttu-id="e821c-189">Para obter mais informações, consulte [validação de dados](https://www.owasp.org/index.php/Data_Validation).</span><span class="sxs-lookup"><span data-stu-id="e821c-189">For more information, see [Data Validation](https://www.owasp.org/index.php/Data_Validation).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e821c-190">O exemplo nesta seção usa o seguinte arquivo. txt chamado `PatientForm.txt` para definir os recursos usados por um aplicativo.</span><span class="sxs-lookup"><span data-stu-id="e821c-190">The example in this section uses the following .txt file named `PatientForm.txt` to define the resources used by an application.</span></span>  
  
```  
  
Title="Top Pet Animal Clinic"  
Label1="Patient Number:"  
Label2="Pet Name:"  
Label3="Species:"  
Label4="Breed:"  
Label5="Date of Birth:"  
Label6="Age:"  
Label7="Owner:"  
Label8="Address:"  
Label9="Home Phone:"  
Label10="Work Phone:"  
Label11="Mobile Phone:"  
  
```  
  
 <span data-ttu-id="e821c-191">Você pode compilar o arquivo. txt em um arquivo. Resources, emitindo o comando a seguir:</span><span class="sxs-lookup"><span data-stu-id="e821c-191">You can compile the .txt file into a .resources file by issuing the following command:</span></span>  
  
 <span data-ttu-id="e821c-192">**resgen PatientForm.txt**</span><span class="sxs-lookup"><span data-stu-id="e821c-192">**resgen PatientForm.txt**</span></span>  
  
 <span data-ttu-id="e821c-193">O exemplo a seguir pressupõe que o arquivo de recurso é inserido no assembly que contém o código executável do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="e821c-193">The following example assumes that the resource file is embedded in the assembly that contains the application's executable code.</span></span> <span data-ttu-id="e821c-194">Ele recupera um arquivo de recurso chamado `PatientForm.resources` dos assemblies em execução no momento e exibe o nome e valor de cada um dos seus recursos.</span><span class="sxs-lookup"><span data-stu-id="e821c-194">It retrieves a resource file named `PatientForm.resources` from the currently executing assemblies and displays the name and value of each of its resources.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/cs/stream1.cs#1)]
 [!code-vb[System.Resources.ResourceReader.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/vb/stream1.vb#1)]  
  
 <span data-ttu-id="e821c-195">Se o exemplo de c# chamado `Example.cs`, você pode compilá-lo usando o seguinte comando:</span><span class="sxs-lookup"><span data-stu-id="e821c-195">If the C# example is named `Example.cs`, you can compile it by using the following command:</span></span>  
  
 <span data-ttu-id="e821c-196">**CSC Example.cs /res:PatientForm.resources**</span><span class="sxs-lookup"><span data-stu-id="e821c-196">**csc Example.cs /res:PatientForm.resources**</span></span>  
  
 <span data-ttu-id="e821c-197">Se o exemplo do Visual Basic chamado `Example.vb`, você pode compilá-lo usando o seguinte comando:</span><span class="sxs-lookup"><span data-stu-id="e821c-197">If the Visual Basic example is named `Example.vb`, you can compile it by using the following command:</span></span>  
  
 <span data-ttu-id="e821c-198">**Vbc example. vb /res:PatientForm.resources**</span><span class="sxs-lookup"><span data-stu-id="e821c-198">**vbc Example.vb /res:PatientForm.resources**</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e821c-199">The <paramref name="stream" /> parameter is not readable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e821c-199">The <paramref name="stream" /> parameter is not readable.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e821c-200">The <paramref name="stream" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e821c-200">The <paramref name="stream" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="e821c-201">An I/O error has occurred while accessing <paramref name="stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e821c-201">An I/O error has occurred while accessing <paramref name="stream" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="e821c-202">para fornecer serviços de serialização.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e821c-202">for providing serialization services.</span>
          </span>
          <span data-ttu-id="e821c-203">Ação de segurança: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e821c-203">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="e821c-204">Enumeração associada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="e821c-204">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="e821c-205">requer confiança total para o chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e821c-205">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="e821c-206">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e821c-206">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Reflection.Assembly.GetManifestResourceStream(System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceReader (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceReader(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResourceReader : string -&gt; System.Resources.ResourceReader" Usage="new System.Resources.ResourceReader fileName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="e821c-207">The path and name of the resource file to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e821c-207">The path and name of the resource file to read.</span>
          </span>
          <span data-ttu-id="e821c-208">
            <c>filename</c> is not case-sensitive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e821c-208">
              <c>filename</c> is not case-sensitive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e821c-209">Initializes a new instance of the <see cref="T:System.Resources.ResourceReader" /> class for the specified named resource file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e821c-209">Initializes a new instance of the <see cref="T:System.Resources.ResourceReader" /> class for the specified named resource file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e821c-210">O <xref:System.Resources.ResourceReader.%23ctor%28System.String%29> construtor instancia um <xref:System.Resources.ResourceReader> objeto que recupera os recursos de um arquivo. Resources autônomos.</span><span class="sxs-lookup"><span data-stu-id="e821c-210">The <xref:System.Resources.ResourceReader.%23ctor%28System.String%29> constructor instantiates a <xref:System.Resources.ResourceReader> object that retrieves resources from a standalone .resources file.</span></span> <span data-ttu-id="e821c-211">Para recuperar recursos de um arquivo. Resources incorporado, use o <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> construtor.</span><span class="sxs-lookup"><span data-stu-id="e821c-211">To retrieve resources from an embedded .resources file, use the <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="e821c-212">Usando uma instância desse objeto com dados não confiáveis é um risco à segurança.</span><span class="sxs-lookup"><span data-stu-id="e821c-212">Using an instance of this object with untrusted data is a security risk.</span></span> <span data-ttu-id="e821c-213">Use esse objeto somente com dados confiáveis.</span><span class="sxs-lookup"><span data-stu-id="e821c-213">Use this object only with trusted data.</span></span> <span data-ttu-id="e821c-214">Para obter mais informações, consulte [validação de dados](https://www.owasp.org/index.php/Data_Validation).</span><span class="sxs-lookup"><span data-stu-id="e821c-214">For more information, see [Data Validation](https://www.owasp.org/index.php/Data_Validation).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e821c-215">O exemplo nesta seção usa o seguinte arquivo. txt chamado `PatientForm.txt` para definir os recursos usados por um aplicativo.</span><span class="sxs-lookup"><span data-stu-id="e821c-215">The example in this section uses the following .txt file named `PatientForm.txt` to define the resources used by an application.</span></span>  
  
```  
  
Title="Top Pet Animal Clinic"  
Label1="Patient Number:"  
Label2="Pet Name:"  
Label3="Species:"  
Label4="Breed:"  
Label5="Date of Birth:"  
Label6="Age:"  
Label7="Owner:"  
Label8="Address:"  
Label9="Home Phone:"  
Label10="Work Phone:"  
Label11="Mobile Phone:"  
  
```  
  
 <span data-ttu-id="e821c-216">Você pode compilar esse arquivo. txt em um arquivo. Resources, emitindo o comando a seguir:</span><span class="sxs-lookup"><span data-stu-id="e821c-216">You can compile this .txt file into a .resources file by issuing the following command:</span></span>  
  
 <span data-ttu-id="e821c-217">**resgen PatientForm.txt**</span><span class="sxs-lookup"><span data-stu-id="e821c-217">**resgen PatientForm.txt**</span></span>  
  
 <span data-ttu-id="e821c-218">O exemplo a seguir enumera os recursos em `PatientForm.resources` e exibe o nome e o valor de cada um.</span><span class="sxs-lookup"><span data-stu-id="e821c-218">The following example enumerates the resources in `PatientForm.resources` and displays the name and value of each.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/cs/stream2.cs#2)]
 [!code-vb[System.Resources.ResourceReader.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/vb/stream2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e821c-219">The <paramref name="fileName" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e821c-219">The <paramref name="fileName" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="e821c-220">The file cannot be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e821c-220">The file cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="e821c-221">An I/O error has occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e821c-221">An I/O error has occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="e821c-222">The resource file has an invalid format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e821c-222">The resource file has an invalid format.</span>
          </span>
          <span data-ttu-id="e821c-223">For example, the length of the file may be zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e821c-223">For example, the length of the file may be zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="resourceReader.Close " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Resources.IResourceReader.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e821c-224">Releases all operating system resources associated with this <see cref="T:System.Resources.ResourceReader" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e821c-224">Releases all operating system resources associated with this <see cref="T:System.Resources.ResourceReader" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e821c-225"><xref:System.Resources.ResourceReader.Close%2A> pode ser chamada várias vezes com segurança.</span><span class="sxs-lookup"><span data-stu-id="e821c-225"><xref:System.Resources.ResourceReader.Close%2A> can be safely called multiple times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e821c-226">O exemplo a seguir move os recursos de um arquivo e exibe todos os pares de chave/valor encontra.</span><span class="sxs-lookup"><span data-stu-id="e821c-226">The following example moves through a file's resources and displays all the key/value pairs it finds.</span></span> <span data-ttu-id="e821c-227">O código, em seguida, usa o <xref:System.Resources.ResourceReader.Close%2A> método para desligar o <xref:System.Resources.ResourceReader> e liberar todos os recursos usados por ele.</span><span class="sxs-lookup"><span data-stu-id="e821c-227">The code then uses the <xref:System.Resources.ResourceReader.Close%2A> method to shut down the <xref:System.Resources.ResourceReader> and to release all resources used by it.</span></span>  
  
 [!code-cpp[System.Resources.ResourceReader.GetEnumerator Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResourceReader.GetEnumerator Example/CPP/getenumerator.cpp#1)]
 [!code-csharp[System.Resources.ResourceReader.GetEnumerator Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResourceReader.GetEnumerator Example/CS/getenumerator.cs#1)]
 [!code-vb[System.Resources.ResourceReader.GetEnumerator Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResourceReader.GetEnumerator Example/VB/getenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="resourceReader.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e821c-228">Releases all resources used by the current instance of the <see cref="T:System.Resources.ResourceReader" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e821c-228">Releases all resources used by the current instance of the <see cref="T:System.Resources.ResourceReader" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e821c-229">Quando tiver terminado de usar essa instância do <xref:System.Resources.ResourceReader>, chame <xref:System.Resources.ResourceReader.Dispose%2A> para liberar todos os recursos usados por esta instância.</span><span class="sxs-lookup"><span data-stu-id="e821c-229">When you are finished using this instance of <xref:System.Resources.ResourceReader>, call <xref:System.Resources.ResourceReader.Dispose%2A> to release all resources used by this instance.</span></span> <span data-ttu-id="e821c-230">Você deve eliminar referência posterior a este <xref:System.Resources.ResourceReader> , de modo que o coletor de lixo possa recuperar a memória da instância, em vez de mantê-lo ativo para a finalização da instância.</span><span class="sxs-lookup"><span data-stu-id="e821c-230">You should eliminate further references to this <xref:System.Resources.ResourceReader> instance so that the garbage collector can reclaim the memory of the instance instead of keeping it alive for finalization.</span></span>  
  
 <span data-ttu-id="e821c-231"><xref:System.Resources.ResourceReader.Dispose%2A> chama o método Dispose (Boolean) particular, que contém o código para liberar recursos gerenciados e não gerenciados.</span><span class="sxs-lookup"><span data-stu-id="e821c-231"><xref:System.Resources.ResourceReader.Dispose%2A> calls the private Dispose(Boolean) method, which contains the code to release managed and unmanaged resources.</span></span> <span data-ttu-id="e821c-232">Para obter mais informações, consulte [implementando um método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="e821c-232">For more information, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator" Usage="resourceReader.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Resources.IResourceReader.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e821c-233">Returns an enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e821c-233">Returns an enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e821c-234">An enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e821c-234">An enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e821c-235">Normalmente, você enumera recursos chamando o <xref:System.Resources.ResourceReader.GetEnumerator%2A> método e, em seguida, chamar repetidamente o <xref:System.Collections.IEnumerator.MoveNext%2A> método em retornado <xref:System.Collections.IDictionaryEnumerator> objeto até que o método retorna `false`.</span><span class="sxs-lookup"><span data-stu-id="e821c-235">Typically, you enumerate resources by calling the <xref:System.Resources.ResourceReader.GetEnumerator%2A> method and then repeatedly calling the <xref:System.Collections.IEnumerator.MoveNext%2A> method on the returned <xref:System.Collections.IDictionaryEnumerator> object until the method returns `false`.</span></span> <span data-ttu-id="e821c-236">O nome do recurso está disponível na <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> propriedade, o valor da <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> propriedade.</span><span class="sxs-lookup"><span data-stu-id="e821c-236">The resource name is available from the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> property; its value from the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="e821c-237">O exemplo ilustra como enumerar recursos dessa maneira.</span><span class="sxs-lookup"><span data-stu-id="e821c-237">The example illustrates how to enumerate resources in this way.</span></span>  
  
 <span data-ttu-id="e821c-238">A implementação do <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> propriedade pelo <xref:System.Resources.ResourceReader> classe pode lançar as seguintes exceções:</span><span class="sxs-lookup"><span data-stu-id="e821c-238">The implementation of the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property by the <xref:System.Resources.ResourceReader> class can throw the following exceptions:</span></span>  
  
-   <xref:System.IO.FileNotFoundException>  
  
     <span data-ttu-id="e821c-239">O assembly que contém o tipo ao qual pertencem os dados não foi encontrado.</span><span class="sxs-lookup"><span data-stu-id="e821c-239">The assembly that contains the type to which the data belongs cannot be found.</span></span>  
  
-   <xref:System.FormatException>  
  
     <span data-ttu-id="e821c-240">Os dados não estão no formato esperado.</span><span class="sxs-lookup"><span data-stu-id="e821c-240">The data is not in the expected format.</span></span>  
  
-   <xref:System.TypeLoadException>  
  
     <span data-ttu-id="e821c-241">O tipo ao qual pertencem os dados não pode ser encontrado.</span><span class="sxs-lookup"><span data-stu-id="e821c-241">The type to which the data belongs cannot be found.</span></span>  
  
 <span data-ttu-id="e821c-242">Você pode tratar a exceção chamando o <xref:System.Resources.ResourceReader.GetResourceData%2A> método para recuperar informações sobre o tipo de dados e a matriz de bytes atribuídos para o recurso denominado.</span><span class="sxs-lookup"><span data-stu-id="e821c-242">You can handle the exception by calling the <xref:System.Resources.ResourceReader.GetResourceData%2A> method to retrieve information about the data type and the byte array assigned to the named resource.</span></span> <span data-ttu-id="e821c-243">Para obter mais informações, consulte a seção "Recuperando recursos por nome com GetResourceData" o <xref:System.Resources.ResourceReader> tópico da classe.</span><span class="sxs-lookup"><span data-stu-id="e821c-243">For more information, see the "Retrieving Resources by Name with GetResourceData" section in the <xref:System.Resources.ResourceReader> class topic.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="e821c-244">O <xref:System.Resources.ResourceReader> classe inclui dois métodos que retornam enumeradores.</span><span class="sxs-lookup"><span data-stu-id="e821c-244">The <xref:System.Resources.ResourceReader> class includes two methods that return enumerators.</span></span> <span data-ttu-id="e821c-245">O <xref:System.Resources.ResourceReader.GetEnumerator%2A> método retorna um <xref:System.Collections.IDictionaryEnumerator> objeto de interface e é o método recomendado a ser chamado quando a enumerar recursos.</span><span class="sxs-lookup"><span data-stu-id="e821c-245">The <xref:System.Resources.ResourceReader.GetEnumerator%2A> method returns an <xref:System.Collections.IDictionaryEnumerator> interface object and is the recommended method to call when enumerating resources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e821c-246">O exemplo nesta seção usa o seguinte arquivo. txt chamado `PatientForm.txt` para definir os recursos usados por um aplicativo.</span><span class="sxs-lookup"><span data-stu-id="e821c-246">The example in this section uses the following .txt file named `PatientForm.txt` to define the resources used by an application.</span></span>  
  
```  
  
Title="Top Pet Animal Clinic"  
Label1="Patient Number:"  
Label2="Pet Name:"  
Label3="Species:"  
Label4="Breed:"  
Label5="Date of Birth:"  
Label6="Age:"  
Label7="Owner:"  
Label8="Address:"  
Label9="Home Phone:"  
Label10="Work Phone:"  
Label11="Mobile Phone:"  
  
```  
  
 <span data-ttu-id="e821c-247">Você pode compilar o arquivo. txt em um arquivo. Resources, emitindo o comando a seguir:</span><span class="sxs-lookup"><span data-stu-id="e821c-247">You can compile the .txt file into a .resources file by issuing the following command:</span></span>  
  
 <span data-ttu-id="e821c-248">**resgen PatientForm.txt**</span><span class="sxs-lookup"><span data-stu-id="e821c-248">**resgen PatientForm.txt**</span></span>  
  
 <span data-ttu-id="e821c-249">O exemplo a seguir enumera os recursos em `PatientForm.resources` e exibe o nome e o valor de cada um.</span><span class="sxs-lookup"><span data-stu-id="e821c-249">The following example enumerates the resources in `PatientForm.resources` and displays the name and value of each.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/cs/stream2.cs#2)]
 [!code-vb[System.Resources.ResourceReader.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/vb/stream2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e821c-250">The reader has been closed or disposed, and cannot be accessed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e821c-250">The reader has been closed or disposed, and cannot be accessed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetResourceData">
      <MemberSignature Language="C#" Value="public void GetResourceData (string resourceName, out string resourceType, out byte[] resourceData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetResourceData(string resourceName, [out] string&amp; resourceType, [out] unsigned int8[]&amp; resourceData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.GetResourceData(System.String,System.String@,System.Byte[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetResourceData (resourceName As String, ByRef resourceType As String, ByRef resourceData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetResourceData(System::String ^ resourceName, [Runtime::InteropServices::Out] System::String ^ % resourceType, [Runtime::InteropServices::Out] cli::array &lt;System::Byte&gt; ^ % resourceData);" />
      <MemberSignature Language="F#" Value="member this.GetResourceData : string *  *  -&gt; unit" Usage="resourceReader.GetResourceData (resourceName, resourceType, resourceData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="resourceType" Type="System.String&amp;" RefType="out" />
        <Parameter Name="resourceData" Type="System.Byte[]&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="resourceName">
          <span data-ttu-id="e821c-251">The name of a resource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e821c-251">The name of a resource.</span>
          </span>
        </param>
        <param name="resourceType">
          <span data-ttu-id="e821c-252">When this method returns, contains a string that represents the type name of the retrieved resource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e821c-252">When this method returns, contains a string that represents the type name of the retrieved resource.</span>
          </span>
          <span data-ttu-id="e821c-253">This parameter is passed uninitialized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e821c-253">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <param name="resourceData">
          <span data-ttu-id="e821c-254">When this method returns, contains a byte array that is the binary representation of the retrieved type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e821c-254">When this method returns, contains a byte array that is the binary representation of the retrieved type.</span>
          </span>
          <span data-ttu-id="e821c-255">This parameter is passed uninitialized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e821c-255">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e821c-256">Retrieves the type name and data of a named resource from an open resource file or stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e821c-256">Retrieves the type name and data of a named resource from an open resource file or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e821c-257">O <xref:System.Resources.ResourceReader.GetResourceData%2A> método recupera o valor de um recurso nomeado como uma matriz de bytes.</span><span class="sxs-lookup"><span data-stu-id="e821c-257">The <xref:System.Resources.ResourceReader.GetResourceData%2A> method retrieves the value of a named resource as a byte array.</span></span> <span data-ttu-id="e821c-258">Ele é normalmente usado quando o <xref:System.Collections.IDictionaryEnumerator.Value%2A> propriedade gera uma exceção ao tentar recuperar o valor de um recurso.</span><span class="sxs-lookup"><span data-stu-id="e821c-258">It is typically used when the <xref:System.Collections.IDictionaryEnumerator.Value%2A> property throws an exception when it tries to retrieve the value of a resource.</span></span>  
  
 <span data-ttu-id="e821c-259">`resourceType` é uma cadeia de caracteres que representa o tipo de dados do recurso.</span><span class="sxs-lookup"><span data-stu-id="e821c-259">`resourceType` is a string that represents the data type of the resource.</span></span> <span data-ttu-id="e821c-260">Ele pode ser qualquer um dos seguintes valores:</span><span class="sxs-lookup"><span data-stu-id="e821c-260">It can be any of the following values:</span></span>  
  
-   <span data-ttu-id="e821c-261">A representação de cadeia de caracteres de um `ResourceTypeCode` membro de enumeração que indica o tipo de dados do recurso.</span><span class="sxs-lookup"><span data-stu-id="e821c-261">The string representation of a `ResourceTypeCode` enumeration member that indicates the data type of the resource.</span></span> <span data-ttu-id="e821c-262">`ResourceTypeCode` é uma enumeração privada que é usada pelo até indicam que um formato binário especial é usado para armazenar um dos tipos de dados comuns 19.</span><span class="sxs-lookup"><span data-stu-id="e821c-262">`ResourceTypeCode` is a private enumeration that is used by .to indicate that a special binary format is used to store one of 19 common data types.</span></span> <span data-ttu-id="e821c-263">Isso inclui os tipos de dados primitivos do .NET Framework (<xref:System.Boolean>, <xref:System.Byte>, <xref:System.Char>, <xref:System.Decimal>, <xref:System.Double>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.Single>, <xref:System.SByte>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>), bem como <xref:System.String>, <xref:System.DateTime>, e <xref:System.TimeSpan>, além disso, o `ResourceTypeCode` enumeração inclui os valores mostrados na tabela a seguir.</span><span class="sxs-lookup"><span data-stu-id="e821c-263">These include the .NET Framework primitive data types (<xref:System.Boolean>, <xref:System.Byte>, <xref:System.Char>, <xref:System.Decimal>, <xref:System.Double>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.Single>, <xref:System.SByte>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>), as well as <xref:System.String>, <xref:System.DateTime>, and <xref:System.TimeSpan>, In addition, the `ResourceTypeCode` enumeration includes the values shown in the following table.</span></span>  
  
    |<span data-ttu-id="e821c-264">Valor de ResourceTypeCode</span><span class="sxs-lookup"><span data-stu-id="e821c-264">ResourceTypeCode value</span></span>|<span data-ttu-id="e821c-265">Descrição</span><span class="sxs-lookup"><span data-stu-id="e821c-265">Description</span></span>|  
    |----------------------------|-----------------|  
    |`ResourceTypeCode.ByteArray`|<span data-ttu-id="e821c-266">Os dados são uma matriz de bytes.</span><span class="sxs-lookup"><span data-stu-id="e821c-266">The data is a byte array.</span></span> <span data-ttu-id="e821c-267">Esse tipo de dados normalmente os resultados da chamada para o <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Byte%5B%5D%29?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="e821c-267">This data type commonly results from the call to the <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Byte%5B%5D%29?displayProperty=nameWithType> method.</span></span>|  
    |`ResourceTypeCode.Null`|<span data-ttu-id="e821c-268">Os dados são uma referência nula.</span><span class="sxs-lookup"><span data-stu-id="e821c-268">The data is a null reference.</span></span> <span data-ttu-id="e821c-269">Esse tipo de dados normalmente os resultados da chamada para o <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Object%29?displayProperty=nameWithType> método com um objeto cujo valor é `null`.</span><span class="sxs-lookup"><span data-stu-id="e821c-269">This data type commonly results from the call to the <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Object%29?displayProperty=nameWithType> method with an object whose value is `null`.</span></span>|  
    |`ResourceTypeCode.Stream`|<span data-ttu-id="e821c-270">Os dados são armazenados em um fluxo.</span><span class="sxs-lookup"><span data-stu-id="e821c-270">The data is stored in a stream.</span></span> <span data-ttu-id="e821c-271">Esse tipo de dados normalmente os resultados da chamada para o <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%29?displayProperty=nameWithType> ou <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%2CSystem.Boolean%29?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="e821c-271">This data type commonly results from the call to the <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%29?displayProperty=nameWithType> or <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%2CSystem.Boolean%29?displayProperty=nameWithType> method.</span></span>|  
  
     <span data-ttu-id="e821c-272">Supondo que `resourceData` não foi corrompido, ele poderá geralmente ser convertido de uma matriz de bytes para seu valor original chamando uma <xref:System.BitConverter> ou <xref:System.IO.BinaryReader> método.</span><span class="sxs-lookup"><span data-stu-id="e821c-272">Assuming that `resourceData` has not been corrupted, it can usually be converted from a byte array back to its original value by calling a <xref:System.BitConverter> or <xref:System.IO.BinaryReader> method.</span></span>  
  
-   <span data-ttu-id="e821c-273">Uma cadeia de caracteres que contém o nome totalmente qualificado do tipo cujos dados serializados são atribuídos para o `resourceData` argumento (por exemplo, `System.String`).</span><span class="sxs-lookup"><span data-stu-id="e821c-273">A string that contains the fully qualified name of the type whose serialized data is assigned to the `resourceData` argument (for example, `System.String`).</span></span> <span data-ttu-id="e821c-274">Além disso, para tipos que não fazem parte da biblioteca de classes do .NET Framework, a cadeia de caracteres inclui o nome, versão, cultura e chave pública do assembly que contém o tipo.</span><span class="sxs-lookup"><span data-stu-id="e821c-274">In addition, for types that are not part of the .NET Framework class library, the string includes the name, version, culture, and public key of the assembly that contains the type.</span></span> <span data-ttu-id="e821c-275">Por exemplo, a cadeia de caracteres a seguir indica que os dados serializados representam uma instância das `Person` digite o `Extensions` namespace, que é encontrada na versão 1.0 de um assembly denominado utilitário que tem nenhuma chave pública e nenhuma cultura específica.</span><span class="sxs-lookup"><span data-stu-id="e821c-275">For example, the following string indicates that the serialized data represents an instance of the `Person` type in the `Extensions` namespace, which is found in version 1.0 of an assembly named Utility that has no public key and no designated culture.</span></span>  
  
     `Extensions.Person, Utility, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null`  
  
     <span data-ttu-id="e821c-276">Supondo que `resourceData` não foi corrompido e que o tipo de fonte está disponível, `resourceData` pode ser convertido de uma matriz de bytes para seu valor original, convertendo a matriz de bytes para um <xref:System.IO.Stream> objeto e passando o fluxo para o <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize%2A?displayProperty=nameWithType>método.</span><span class="sxs-lookup"><span data-stu-id="e821c-276">Assuming that `resourceData` has not been corrupted and that the source type is available, `resourceData` can be converted from a byte array back to its original value by converting the byte array to a <xref:System.IO.Stream> object and passing the stream to the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="e821c-277">A cadeia de caracteres usada para descrever o tipo de dados no <xref:System.Resources.ResourceWriter.AddResourceData%2A?displayProperty=nameWithType> chamada de método.</span><span class="sxs-lookup"><span data-stu-id="e821c-277">The string used to describe the data type in the <xref:System.Resources.ResourceWriter.AddResourceData%2A?displayProperty=nameWithType> method call.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e821c-278">
            <paramref name="resourceName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e821c-278">
              <paramref name="resourceName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e821c-279">
            <paramref name="resourceName" /> does not exist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e821c-279">
              <paramref name="resourceName" /> does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="e821c-280">
            <paramref name="resourceName" /> has an invalid type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e821c-280">
              <paramref name="resourceName" /> has an invalid type.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="e821c-281">The retrieved resource data is corrupt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e821c-281">The retrieved resource data is corrupt.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e821c-282">The current <see cref="T:System.Resources.ResourceReader" /> object is not initialized, probably because it is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e821c-282">The current <see cref="T:System.Resources.ResourceReader" /> object is not initialized, probably because it is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e821c-283">Returns an enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e821c-283">Returns an enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e821c-284">An enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e821c-284">An enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e821c-285"><xref:System.Resources.ResourceReader.System%23Collections%23IEnumerable%23GetEnumerator%2A?displayProperty=nameWithType> é uma implementação de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="e821c-285"><xref:System.Resources.ResourceReader.System%23Collections%23IEnumerable%23GetEnumerator%2A?displayProperty=nameWithType> is an explicit interface implementation.</span></span> <span data-ttu-id="e821c-286">Ele só pode ser usado quando a instância de <xref:System.Resources.ResourceReader> é convertida em uma interface de <xref:System.Collections.IEnumerable>.</span><span class="sxs-lookup"><span data-stu-id="e821c-286">It can be used only when the <xref:System.Resources.ResourceReader> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span> <span data-ttu-id="e821c-287">A abordagem recomendada para enumerar os recursos em um arquivo. Resources é chamar o <xref:System.Collections.IEnumerator.MoveNext%2A> método da <xref:System.Collections.IDictionaryEnumerator> objeto retornado pelo <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="e821c-287">The recommended approach to enumerating the resources in a .resources file is to call the <xref:System.Collections.IEnumerator.MoveNext%2A> method of the <xref:System.Collections.IDictionaryEnumerator> object returned by the <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e821c-288">The reader has already been closed and cannot be accessed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e821c-288">The reader has already been closed and cannot be accessed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>