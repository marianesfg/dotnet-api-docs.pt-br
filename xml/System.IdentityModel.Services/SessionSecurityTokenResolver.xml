<Type Name="SessionSecurityTokenResolver" FullName="System.IdentityModel.Services.SessionSecurityTokenResolver">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="546ee963a07e5890ec55d67795db3a832696f272" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39973489" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SessionSecurityTokenResolver : System.IdentityModel.Selectors.SecurityTokenResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SessionSecurityTokenResolver extends System.IdentityModel.Selectors.SecurityTokenResolver" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Services.SessionSecurityTokenResolver" />
  <TypeSignature Language="VB.NET" Value="Public Class SessionSecurityTokenResolver&#xA;Inherits SecurityTokenResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class SessionSecurityTokenResolver : System::IdentityModel::Selectors::SecurityTokenResolver" />
  <TypeSignature Language="F#" Value="type SessionSecurityTokenResolver = class&#xA;    inherit SecurityTokenResolver" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Selectors.SecurityTokenResolver</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="df313-101">Resolve os tokens de segurança de sessão do cache atual.</span>
      <span class="sxs-lookup">
        <span data-stu-id="df313-101">Resolves session security tokens from the current cache.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityTokenResolver (System.IdentityModel.Tokens.SessionSecurityTokenCache tokenCache, string endpointId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Tokens.SessionSecurityTokenCache tokenCache, string endpointId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.SessionSecurityTokenResolver.#ctor(System.IdentityModel.Tokens.SessionSecurityTokenCache,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tokenCache As SessionSecurityTokenCache, endpointId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityTokenResolver(System::IdentityModel::Tokens::SessionSecurityTokenCache ^ tokenCache, System::String ^ endpointId);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Services.SessionSecurityTokenResolver : System.IdentityModel.Tokens.SessionSecurityTokenCache * string -&gt; System.IdentityModel.Services.SessionSecurityTokenResolver" Usage="new System.IdentityModel.Services.SessionSecurityTokenResolver (tokenCache, endpointId)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tokenCache" Type="System.IdentityModel.Tokens.SessionSecurityTokenCache" />
        <Parameter Name="endpointId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tokenCache">
          <span data-ttu-id="df313-102">O cache de token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df313-102">The token cache.</span>
          </span>
        </param>
        <param name="endpointId">
          <span data-ttu-id="df313-103">O identificador do ponto de extremidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df313-103">The identifier of the endpoint.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="df313-104">Inicializa uma nova instância da classe <see cref="T:System.IdentityModel.Services.SessionSecurityTokenResolver" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df313-104">Initializes a new instance of the <see cref="T:System.IdentityModel.Services.SessionSecurityTokenResolver" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryResolveSecurityKeyCore">
      <MemberSignature Language="C#" Value="protected override bool TryResolveSecurityKeyCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityKey key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool TryResolveSecurityKeyCore(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, [out] class System.IdentityModel.Tokens.SecurityKey&amp; key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.SessionSecurityTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function TryResolveSecurityKeyCore (keyIdentifierClause As SecurityKeyIdentifierClause, ByRef key As SecurityKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool TryResolveSecurityKeyCore(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityKey ^ % key);" />
      <MemberSignature Language="F#" Value="override this.TryResolveSecurityKeyCore : System.IdentityModel.Tokens.SecurityKeyIdentifierClause *  -&gt; bool" Usage="sessionSecurityTokenResolver.TryResolveSecurityKeyCore (keyIdentifierClause, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
        <Parameter Name="key" Type="System.IdentityModel.Tokens.SecurityKey" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause">
          <span data-ttu-id="df313-105">A cláusula do identificador de chave de segurança.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df313-105">The security key identifier clause.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="df313-106">Quando este método retorna, ele contém o núcleo de chave resolvido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df313-106">When this method returns, contains the resolved key core.</span>
          </span>
          <span data-ttu-id="df313-107">Este parâmetro é passado não inicializado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df313-107">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="df313-108">Tenta resolver o núcleo da chave de segurança, considerando uma cláusula de identificador de chave especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df313-108">Attempts to resolve the security key core, given a specified key identifier clause.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="df313-109">
            <see langword="true" /> se o núcleo token de chave tiver sido resolvido com êxito; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df313-109">
              <see langword="true" /> if the key core was successfully resolved; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryResolveTokenCore">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="df313-110">Tenta resolver o token do identificador de chave especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df313-110">Attempts to resolve the token from the specified key identifier.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryResolveTokenCore">
      <MemberSignature Language="C#" Value="protected override bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, out System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool TryResolveTokenCore(class System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, [out] class System.IdentityModel.Tokens.SecurityToken&amp; token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.SessionSecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function TryResolveTokenCore (keyIdentifier As SecurityKeyIdentifier, ByRef token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool TryResolveTokenCore(System::IdentityModel::Tokens::SecurityKeyIdentifier ^ keyIdentifier, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityToken ^ % token);" />
      <MemberSignature Language="F#" Value="override this.TryResolveTokenCore : System.IdentityModel.Tokens.SecurityKeyIdentifier *  -&gt; bool" Usage="sessionSecurityTokenResolver.TryResolveTokenCore (keyIdentifier, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifier">
          <span data-ttu-id="df313-111">O identificador de chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df313-111">The key identifier.</span>
          </span>
        </param>
        <param name="token">
          <span data-ttu-id="df313-112">Quando este método retorna, ele contém o núcleo de chave resolvido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df313-112">When this method returns, contains the resolved key core.</span>
          </span>
          <span data-ttu-id="df313-113">Este parâmetro é passado não inicializado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df313-113">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="df313-114">Tenta resolver o token do identificador de chave especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df313-114">Attempts to resolve the token from the specified key identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="df313-115">
            <see langword="true" /> se o token de chave tiver sido resolvido com êxito; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df313-115">
              <see langword="true" /> if the key token was successfully resolved; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryResolveTokenCore">
      <MemberSignature Language="C#" Value="protected override bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool TryResolveTokenCore(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, [out] class System.IdentityModel.Tokens.SecurityToken&amp; token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.SessionSecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function TryResolveTokenCore (keyIdentifierClause As SecurityKeyIdentifierClause, ByRef token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool TryResolveTokenCore(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityToken ^ % token);" />
      <MemberSignature Language="F#" Value="override this.TryResolveTokenCore : System.IdentityModel.Tokens.SecurityKeyIdentifierClause *  -&gt; bool" Usage="sessionSecurityTokenResolver.TryResolveTokenCore (keyIdentifierClause, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause">
          <span data-ttu-id="df313-116">A cláusula de identificador de chave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df313-116">The key identifier clause.</span>
          </span>
        </param>
        <param name="token">
          <span data-ttu-id="df313-117">Quando este método retorna, ele contém o núcleo de chave resolvido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df313-117">When this method returns, contains the resolved key core.</span>
          </span>
          <span data-ttu-id="df313-118">Este parâmetro é passado não inicializado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df313-118">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="df313-119">Tenta resolver o token da cláusula do identificador de chave especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df313-119">Attempts to resolve the token from the specified key identifier clause.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="df313-120">
            <see langword="true" /> se o token de chave tiver sido resolvido com êxito; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df313-120">
              <see langword="true" /> if the key token was successfully resolved; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>