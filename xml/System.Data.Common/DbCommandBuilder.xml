<Type Name="DbCommandBuilder" FullName="System.Data.Common.DbCommandBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9e97ad01d80f31f30d18baec5746496dd12f5932" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37683577" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DbCommandBuilder : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbCommandBuilder extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.DbCommandBuilder" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DbCommandBuilder&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbCommandBuilder abstract : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type DbCommandBuilder = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Automatically generates single-table commands used to reconcile changes made to a <see cref="T:System.Data.DataSet" /> with the associated database. This is an abstract class that can only be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Data.Common.DbCommandBuilder> classe é fornecida para a conveniência dos gravadores de provedor criando seus próprios construtores de comando. Ao herdar dessa classe, os desenvolvedores podem implementar o comportamento específico do provedor em seu próprio código.  
  
 O <xref:System.Data.Common.DbDataAdapter> não gera automaticamente as instruções SQL necessárias para reconciliar as alterações feitas em um <xref:System.Data.DataSet> com a fonte de dados associado. No entanto, você pode criar uma <xref:System.Data.Common.DbCommandBuilder> objeto para gerar automaticamente instruções SQL para atualizações de tabela única, se você definir o <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> propriedade do <xref:System.Data.Common.DbDataAdapter>. Em seguida, qualquer instrução SQL adicional que você não definir é geradas pelo <xref:System.Data.Common.DbCommandBuilder>.  
  
 O <xref:System.Data.Common.DbCommandBuilder> se registra como um ouvinte <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> eventos sempre que você definir o <xref:System.Data.Common.DbCommandBuilder.DataAdapter%2A> propriedade. Você pode associar apenas um <xref:System.Data.Common.DbDataAdapter> ou <xref:System.Data.Common.DbCommandBuilder> objeto entre si de uma só vez.  
  
 Para gerar instruções INSERT, UPDATE ou DELETE, o <xref:System.Data.Common.DbCommandBuilder> usa o <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> propriedade para recuperar automaticamente o conjunto necessário de metadados. Se você alterar o <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> após terem sido recuperados os metadados (por exemplo, após a primeira atualização), você deve chamar o <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> método para atualizar os metadados.  
  
 O `SelectCommand` também deve retornar pelo menos uma chave primária ou coluna exclusivo. Se não houver nenhum, um <xref:System.InvalidOperationException> exceção é gerada e os comandos não são gerados.  
  
 O <xref:System.Data.Common.DbCommandBuilder> também usa o <xref:System.Data.Common.DbCommand.Connection%2A>, <xref:System.Data.Common.DbCommand.CommandTimeout%2A>, e <xref:System.Data.Common.DbCommand.Transaction%2A> propriedades referenciadas pela <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>. O usuário deve chamar <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> se qualquer uma dessas propriedades são modificadas, ou se o <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> será substituído. Caso contrário, o <xref:System.Data.Common.DbDataAdapter.InsertCommand%2A>, <xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A>, e <xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A> propriedades mantêm os valores anteriores.  
  
 Se você chamar <xref:System.ComponentModel.Component.Dispose%2A>, o <xref:System.Data.Common.DbCommandBuilder> é dissociado do <xref:System.Data.Common.DbDataAdapter>, e os comandos gerados não são mais usados.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbCommandBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbCommandBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of a class that inherits from the <see cref="T:System.Data.Common.DbCommandBuilder" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyParameterInfo">
      <MemberSignature Language="C#" Value="protected abstract void ApplyParameterInfo (System.Data.Common.DbParameter parameter, System.Data.DataRow row, System.Data.StatementType statementType, bool whereClause);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ApplyParameterInfo(class System.Data.Common.DbParameter parameter, class System.Data.DataRow row, valuetype System.Data.StatementType statementType, bool whereClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void ApplyParameterInfo(System::Data::Common::DbParameter ^ parameter, System::Data::DataRow ^ row, System::Data::StatementType statementType, bool whereClause);" />
      <MemberSignature Language="F#" Value="abstract member ApplyParameterInfo : System.Data.Common.DbParameter * System.Data.DataRow * System.Data.StatementType * bool -&gt; unit" Usage="dbCommandBuilder.ApplyParameterInfo (parameter, row, statementType, whereClause)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Common.DbParameter" />
        <Parameter Name="row" Type="System.Data.DataRow" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="whereClause" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="parameter">A <see cref="T:System.Data.Common.DbParameter" /> to which the additional modifications are applied.</param>
        <param name="row">The <see cref="T:System.Data.DataRow" /> from the schema table provided by <see cref="M:System.Data.Common.DbDataReader.GetSchemaTable" />.</param>
        <param name="statementType">The type of command being generated; INSERT, UPDATE or DELETE.</param>
        <param name="whereClause">
          <see langword="true" /> if the parameter is part of the update or delete WHERE clause, <see langword="false" /> if it is part of the insert or update values.</param>
        <summary>Allows the provider implementation of the <see cref="T:System.Data.Common.DbCommandBuilder" /> class to handle additional parameter properties.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método permite que uma implementação do <xref:System.Data.Common.DbCommandBuilder> classe para manipular as propriedades de parâmetro específicas do provedor.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CatalogLocation">
      <MemberSignature Language="C#" Value="public virtual System.Data.Common.CatalogLocation CatalogLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Common.CatalogLocation CatalogLocation" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.CatalogLocation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CatalogLocation As CatalogLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::Common::CatalogLocation CatalogLocation { System::Data::Common::CatalogLocation get(); void set(System::Data::Common::CatalogLocation value); };" />
      <MemberSignature Language="F#" Value="member this.CatalogLocation : System.Data.Common.CatalogLocation with get, set" Usage="System.Data.Common.DbCommandBuilder.CatalogLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.CatalogLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Sets or gets the <see cref="T:System.Data.Common.CatalogLocation" /> for an instance of the <see cref="T:System.Data.Common.DbCommandBuilder" /> class.</summary>
        <value>Um objeto <see cref="T:System.Data.Common.CatalogLocation" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CatalogSeparator">
      <MemberSignature Language="C#" Value="public virtual string CatalogSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CatalogSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.CatalogSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CatalogSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CatalogSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CatalogSeparator : string with get, set" Usage="System.Data.Common.DbCommandBuilder.CatalogSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(".")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Sets or gets a string used as the catalog separator for an instance of the <see cref="T:System.Data.Common.DbCommandBuilder" /> class.</summary>
        <value>Uma cadeia de caracteres que indica o separador de catálogo para uso com uma instância da <see cref="T:System.Data.Common.DbCommandBuilder" /> classe.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConflictOption">
      <MemberSignature Language="C#" Value="public virtual System.Data.ConflictOption ConflictOption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ConflictOption ConflictOption" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.ConflictOption" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConflictOption As ConflictOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::ConflictOption ConflictOption { System::Data::ConflictOption get(); void set(System::Data::ConflictOption value); };" />
      <MemberSignature Language="F#" Value="member this.ConflictOption : System.Data.ConflictOption with get, set" Usage="System.Data.Common.DbCommandBuilder.ConflictOption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ConflictOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifies which <see cref="T:System.Data.ConflictOption" /> is to be used by the <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
        <value>Retorna um dos <see cref="T:System.Data.ConflictOption" /> valores que descrevem o comportamento desta <see cref="T:System.Data.Common.DbCommandBuilder" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataAdapter">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbDataAdapter DataAdapter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbDataAdapter DataAdapter" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.DataAdapter" />
      <MemberSignature Language="VB.NET" Value="Public Property DataAdapter As DbDataAdapter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbDataAdapter ^ DataAdapter { System::Data::Common::DbDataAdapter ^ get(); void set(System::Data::Common::DbDataAdapter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataAdapter : System.Data.Common.DbDataAdapter with get, set" Usage="System.Data.Common.DbCommandBuilder.DataAdapter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataAdapter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a <see cref="T:System.Data.Common.DbDataAdapter" /> object for which Transact-SQL statements are automatically generated.</summary>
        <value>Um objeto <see cref="T:System.Data.Common.DbDataAdapter" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Data.Common.DbCommandBuilder> se registra como um ouvinte <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> eventos que são gerados pelo <xref:System.Data.Common.DbDataAdapter> especificado nessa propriedade.  
  
 Quando você cria uma nova instância da <xref:System.Data.Common.DbCommandBuilder>, todos os existentes <xref:System.Data.Common.DbCommandBuilder> associado a este <xref:System.Data.Common.DbDataAdapter> é liberado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="dbCommandBuilder.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
        <summary>Releases the unmanaged resources used by the <see cref="T:System.Data.Common.DbCommandBuilder" /> and optionally releases the managed resources.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método é chamado pelo método público <xref:System.Data.Common.DbCommandBuilder.Dispose%2A> e pelo método `Finalize`. <xref:System.Data.Common.DbCommandBuilder.Dispose%2A> invoca o protegido <xref:System.Data.Common.DbCommandBuilder.Dispose%2A> método com o parâmetro de descarte definido como `true`. `Finalize` invoca `Dispose` com `disposing` definido como `false`.  
  
 Quando o `disposing` parâmetro é `true`, esse método libera todos os recursos mantidos por qualquer objeto gerenciado que este <xref:System.Data.Common.DbCommandBuilder> referências. Este método invoca o método <xref:System.Data.Common.DbCommandBuilder.Dispose%2A> de cada objeto referenciado.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="Overload:System.Data.Common.DbCommandBuilder.Dispose" /> pode ser chamado várias vezes por outros objetos. Ao substituir <see cref="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)" />, tome cuidado para não referenciar objetos que tenham sido descartados anteriormente em uma chamada anterior para <see cref="Overload:System.Data.Common.DbCommandBuilder.Dispose" />. Para obter mais informações sobre como implementar <see cref="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)" />, consulte [implementando um Method](~/docs/standard/garbage-collection/implementing-dispose.md) Dispose.  Para obter mais informações sobre <see langword="Dispose" /> e <see langword="Finalize" />, consulte [limpeza Resources](~/docs/standard/garbage-collection/unmanaged.md) não gerenciado e [substituindo o método Finalize] (http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDeleteCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform deletions at the data source.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um aplicativo pode usar o <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> método para solução de problemas ou informativas fins porque ele retorna o <xref:System.Data.Common.DbCommand> objeto a ser executado.  
  
 Você também pode usar <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> como a base de um comando modificado. Por exemplo, você pode chamar <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> modificar o texto do comando associado e, em seguida, definir explicitamente que o <xref:System.Data.Common.DbDataAdapter>.  
  
 Depois que a instrução SQL é gerada pela primeira vez, o aplicativo deve chamar explicitamente <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> se ele altera a instrução de forma alguma. Caso contrário, o <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> ainda usarão informações da instrução anterior, que pode não estar correta. As instruções SQL são geradas quando o aplicativo chama <xref:System.Data.Common.DbDataAdapter.Update%2A> ou <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>.  
  
 O comportamento padrão, ao gerar nomes de parâmetros, é usar @p1, @p2, e assim por diante para os vários parâmetros. Se a versão sobrecarregada de <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> permite que você especificar esse comportamento fornecendo um valor booliano, você pode fazer com que o <xref:System.Data.Common.DbCommandBuilder> para gerar os parâmetros com base nos nomes de coluna em vez disso, passando `True`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetDeleteCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetDeleteCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeleteCommand () As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetDeleteCommand();" />
      <MemberSignature Language="F#" Value="member this.GetDeleteCommand : unit -&gt; System.Data.Common.DbCommand" Usage="dbCommandBuilder.GetDeleteCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform deletions at the data source.</summary>
        <returns>The automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform deletions.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um aplicativo pode usar o <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> método para solução de problemas ou informativas fins porque ele retorna o <xref:System.Data.Common.DbCommand> objeto a ser executado.  
  
 Você também pode usar <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> como a base de um comando modificado. Por exemplo, você pode chamar <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> modificar o texto do comando e, em seguida, definir explicitamente que o <xref:System.Data.Common.DbDataAdapter>.  
  
 Depois que a instrução SQL é gerada pela primeira vez, o aplicativo deve chamar explicitamente <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> se ele altera a instrução de forma alguma. Caso contrário, o <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> ainda usarão informações da instrução anterior, que pode não estar correta. As instruções SQL são geradas quando o aplicativo chama <xref:System.Data.Common.DbDataAdapter.Update%2A> ou <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetDeleteCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetDeleteCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeleteCommand (useColumnsForParameterNames As Boolean) As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetDeleteCommand(bool useColumnsForParameterNames);" />
      <MemberSignature Language="F#" Value="member this.GetDeleteCommand : bool -&gt; System.Data.Common.DbCommand" Usage="dbCommandBuilder.GetDeleteCommand useColumnsForParameterNames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">If <see langword="true" />, generate parameter names matching column names, if possible. If <see langword="false" />, generate @p1, @p2, and so on.</param>
        <summary>Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform deletions at the data source, optionally using columns for parameter names.</summary>
        <returns>The automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform deletions.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um aplicativo pode usar o <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> método para solução de problemas ou informativas fins porque ele retorna o <xref:System.Data.Common.DbCommand> objeto a ser executado.  
  
 Você também pode usar <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> como a base de um comando modificado. Por exemplo, você pode chamar <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> modificar o texto do comando e, em seguida, definir explicitamente que o <xref:System.Data.Common.DbDataAdapter>.  
  
 Depois que a instrução SQL é gerada pela primeira vez, o aplicativo deve chamar explicitamente <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> se ele altera a instrução de forma alguma. Caso contrário, o <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> ainda usarão informações da instrução anterior, que pode não estar correta. As instruções SQL são geradas quando o aplicativo chama <xref:System.Data.Common.DbDataAdapter.Update%2A> ou <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>.  
  
 O comportamento padrão, ao gerar nomes de parâmetros, é usar @p1, @p2, e assim por diante para os vários parâmetros. Passando `true` para o `useColumnsForParameterNames` parâmetro permite forçar o <xref:System.Data.Common.DbCommandBuilder> para gerar os parâmetros com base nos nomes de coluna em vez disso. Isso terá êxito apenas se as seguintes condições forem atendidas:  
  
-   O <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> foi especificado e seu comprimento é igual ou maior que o nome do parâmetro gerado.  
  
-   O nome do parâmetro gerado atende aos critérios especificados no <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> expressão regular.  
  
-   Um <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> é especificado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInsertCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform insertions at the data source.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um aplicativo pode usar o <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> método para solução de problemas ou informativas fins porque ele retorna o texto do <xref:System.Data.Common.DbCommand> objeto a ser executado.  
  
 Você também pode usar <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> como a base de um comando modificado. Por exemplo, você pode chamar <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> modificar o texto de comando e, em seguida, definir explicitamente que o <xref:System.Data.Common.DbDataAdapter>.  
  
 Depois que a instrução SQL é gerada pela primeira vez, o aplicativo deve chamar explicitamente <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> se ele altera a instrução de forma alguma. Caso contrário, o <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> ainda usarão informações da instrução anterior, que pode não estar correta. As instruções SQL são geradas quando o aplicativo chama <xref:System.Data.Common.DbDataAdapter.Update%2A> ou <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>.  
  
 O comportamento padrão, ao gerar nomes de parâmetros, é usar @p1, @p2, e assim por diante para os vários parâmetros. Se a versão sobrecarregada de <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> permite que você especificar esse comportamento, você pode fazer com que o <xref:System.Data.Common.DbCommandBuilder> para gerar os parâmetros com base nos nomes de coluna em vez disso.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetInsertCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetInsertCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetInsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertCommand () As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetInsertCommand();" />
      <MemberSignature Language="F#" Value="member this.GetInsertCommand : unit -&gt; System.Data.Common.DbCommand" Usage="dbCommandBuilder.GetInsertCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform insertions at the data source.</summary>
        <returns>The automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform insertions.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um aplicativo pode usar o <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> método para solução de problemas ou informativas fins porque ele retorna o texto do <xref:System.Data.Common.DbCommand> objeto a ser executado.  
  
 Você também pode usar <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> como a base de um comando modificado. Por exemplo, você pode chamar <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> modificar o texto do comando e, em seguida, definir explicitamente que o <xref:System.Data.Common.DbDataAdapter>.  
  
 Depois que a instrução SQL é gerada pela primeira vez, o aplicativo deve chamar explicitamente <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> se ele altera a instrução de forma alguma. Caso contrário, o <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> ainda usarão informações da instrução anterior, que pode não estar correta. As instruções SQL são geradas quando o aplicativo chama <xref:System.Data.Common.DbDataAdapter.Update%2A> ou <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetInsertCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetInsertCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertCommand (useColumnsForParameterNames As Boolean) As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetInsertCommand(bool useColumnsForParameterNames);" />
      <MemberSignature Language="F#" Value="member this.GetInsertCommand : bool -&gt; System.Data.Common.DbCommand" Usage="dbCommandBuilder.GetInsertCommand useColumnsForParameterNames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">If <see langword="true" />, generate parameter names matching column names, if possible. If <see langword="false" />, generate @p1, @p2, and so on.</param>
        <summary>Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform insertions at the data source, optionally using columns for parameter names.</summary>
        <returns>The automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform insertions.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um aplicativo pode usar o <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> método para solução de problemas ou informativas fins porque ele retorna o texto do <xref:System.Data.Common.DbCommand> objeto a ser executado.  
  
 Você também pode usar <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> como a base de um comando modificado. Por exemplo, você pode chamar <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> modificar o texto do comando e, em seguida, definir explicitamente que o <xref:System.Data.Common.DbDataAdapter>.  
  
 Depois que a instrução SQL é gerada pela primeira vez, o aplicativo deve chamar explicitamente <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> se ele altera a instrução de forma alguma. Caso contrário, o <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> ainda usarão informações da instrução anterior, que pode não estar correta. As instruções SQL são geradas quando o aplicativo chama <xref:System.Data.Common.DbDataAdapter.Update%2A> ou <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>.  
  
 O comportamento padrão, ao gerar nomes de parâmetros, é usar @p1, @p2, e assim por diante para os vários parâmetros. Passando `true` para o `useColumnsForParameterNames` parâmetro permite forçar o <xref:System.Data.Common.DbCommandBuilder> para gerar os parâmetros com base nos nomes de coluna em vez disso. Geração de parâmetros com base nos nomes de coluna terá êxito apenas se as seguintes condições forem atendidas:  
  
-   O <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> foi especificado e seu comprimento é igual ou maior que o nome do parâmetro gerado.  
  
-   O nome do parâmetro gerado atende aos critérios especificados no <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> expressão regular.  
  
-   Um <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> é especificado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetParameterName">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Returns the name of the specified parameter.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected abstract string GetParameterName (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetParameterName(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetParameterName (parameterOrdinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::String ^ GetParameterName(int parameterOrdinal);" />
      <MemberSignature Language="F#" Value="abstract member GetParameterName : int -&gt; string" Usage="dbCommandBuilder.GetParameterName parameterOrdinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal">The number to be included as part of the parameter's name..</param>
        <summary>Returns the name of the specified parameter in the format of @p*#*. Use when building a custom command builder.</summary>
        <returns>The name of the parameter with the specified number appended as part of the parameter name.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected abstract string GetParameterName (string parameterName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetParameterName(string parameterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetParameterName (parameterName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::String ^ GetParameterName(System::String ^ parameterName);" />
      <MemberSignature Language="F#" Value="abstract member GetParameterName : string -&gt; string" Usage="dbCommandBuilder.GetParameterName parameterName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameterName">The partial name of the parameter.</param>
        <summary>Returns the full parameter name, given the partial parameter name.</summary>
        <returns>The full parameter name corresponding to the partial parameter name requested.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterPlaceholder">
      <MemberSignature Language="C#" Value="protected abstract string GetParameterPlaceholder (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetParameterPlaceholder(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetParameterPlaceholder (parameterOrdinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::String ^ GetParameterPlaceholder(int parameterOrdinal);" />
      <MemberSignature Language="F#" Value="abstract member GetParameterPlaceholder : int -&gt; string" Usage="dbCommandBuilder.GetParameterPlaceholder parameterOrdinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal">The number to be included as part of the parameter's name.</param>
        <summary>Returns the placeholder for the parameter in the associated SQL statement.</summary>
        <returns>The name of the parameter with the specified number appended.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método destina-se ao uso por criadores de provedor a criação de um construtor de comando personalizado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTable">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataTable GetSchemaTable (System.Data.Common.DbCommand sourceCommand);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataTable GetSchemaTable(class System.Data.Common.DbCommand sourceCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetSchemaTable (sourceCommand As DbCommand) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::DataTable ^ GetSchemaTable(System::Data::Common::DbCommand ^ sourceCommand);" />
      <MemberSignature Language="F#" Value="abstract member GetSchemaTable : System.Data.Common.DbCommand -&gt; System.Data.DataTable&#xA;override this.GetSchemaTable : System.Data.Common.DbCommand -&gt; System.Data.DataTable" Usage="dbCommandBuilder.GetSchemaTable sourceCommand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceCommand" Type="System.Data.Common.DbCommand" />
      </Parameters>
      <Docs>
        <param name="sourceCommand">The <see cref="T:System.Data.Common.DbCommand" /> for which to retrieve the corresponding schema table.</param>
        <summary>Returns the schema table for the <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
        <returns>A <see cref="T:System.Data.DataTable" /> that represents the schema for the specific <see cref="T:System.Data.Common.DbCommand" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método destina-se ao uso por criadores de provedor a criação de um construtor de comando personalizado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUpdateCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform updates at the data source.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um aplicativo pode usar o <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> método para solução de problemas ou informativas fins porque ele retorna o <xref:System.Data.Common.DbCommand> objeto a ser executado.  
  
 Você também pode usar <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> como a base de um comando modificado. Por exemplo, você pode chamar <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> modificar o texto do comando e, em seguida, definir explicitamente que o <xref:System.Data.Common.DbDataAdapter>.  
  
 Depois que a instrução SQL é gerada pela primeira vez, o aplicativo deve chamar explicitamente <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> se ele altera a instrução de forma alguma. Caso contrário, o <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> ainda usarão informações da instrução anterior, que pode não estar correta. As instruções SQL são geradas quando o aplicativo chama <xref:System.Data.Common.DbDataAdapter.Update%2A> ou <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>.  
  
 O comportamento padrão, ao gerar nomes de parâmetros, é usar @p1, @p2, e assim por diante para os vários parâmetros. Se a versão sobrecarregada de <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> permite que você especificar esse comportamento, você pode fazer com que o <xref:System.Data.Common.DbCommandBuilder> para gerar os parâmetros com base nos nomes de coluna em vez disso.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetUpdateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetUpdateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdateCommand () As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetUpdateCommand();" />
      <MemberSignature Language="F#" Value="member this.GetUpdateCommand : unit -&gt; System.Data.Common.DbCommand" Usage="dbCommandBuilder.GetUpdateCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform updates at the data source.</summary>
        <returns>The automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform updates.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um aplicativo pode usar o <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> método para solução de problemas ou informativas fins porque ele retorna o <xref:System.Data.Common.DbCommand> objeto a ser executado.  
  
 Você também pode usar <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> como a base de um comando modificado. Por exemplo, você pode chamar <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> modificar o texto do comando e, em seguida, definir explicitamente que o <xref:System.Data.Common.DbDataAdapter>.  
  
 Depois que a instrução SQL é gerada pela primeira vez, o aplicativo deve chamar explicitamente <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> se ele altera a instrução de forma alguma. Caso contrário, o <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> ainda usarão informações da instrução anterior, que pode não estar correta. As instruções SQL são geradas quando o aplicativo chama <xref:System.Data.Common.DbDataAdapter.Update%2A> ou <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetUpdateCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetUpdateCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdateCommand (useColumnsForParameterNames As Boolean) As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetUpdateCommand(bool useColumnsForParameterNames);" />
      <MemberSignature Language="F#" Value="member this.GetUpdateCommand : bool -&gt; System.Data.Common.DbCommand" Usage="dbCommandBuilder.GetUpdateCommand useColumnsForParameterNames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">If <see langword="true" />, generate parameter names matching column names, if possible. If <see langword="false" />, generate @p1, @p2, and so on.</param>
        <summary>Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform updates at the data source, optionally using columns for parameter names.</summary>
        <returns>The automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform updates.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um aplicativo pode usar o <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> método para solução de problemas ou informativas fins porque ele retorna o <xref:System.Data.Common.DbCommand> objeto a ser executado.  
  
 Você também pode usar <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> como a base de um comando modificado. Por exemplo, você pode chamar <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> modificar o texto de comando e, em seguida, definir explicitamente que o <xref:System.Data.Common.DbDataAdapter>.  
  
 Depois que a instrução SQL é gerada pela primeira vez, o aplicativo deve chamar explicitamente <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> se ele altera a instrução de forma alguma. Caso contrário, o <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> ainda usarão informações da instrução anterior, que pode não estar correta. As instruções SQL são geradas quando o aplicativo chama <xref:System.Data.Common.DbDataAdapter.Update%2A> ou <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>.  
  
 O comportamento padrão, ao gerar nomes de parâmetros, é usar @p1, @p2, e assim por diante para os vários parâmetros. Passando `true` para o `useColumnsForParameterNames` parâmetro permite forçar o <xref:System.Data.Common.DbCommandBuilder> para gerar os parâmetros com base nos nomes de coluna em vez disso. Geração de parâmetros com base nos nomes de coluna terá êxito apenas se as seguintes condições forem atendidas:  
  
-   O <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> foi especificado e seu comprimento é igual ou maior que o nome do parâmetro gerado.  
  
-   O nome do parâmetro gerado atende aos critérios especificados no <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> expressão regular.  
  
-   Um <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> é especificado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeCommand">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.DbCommand InitializeCommand (System.Data.Common.DbCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.DbCommand InitializeCommand(class System.Data.Common.DbCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function InitializeCommand (command As DbCommand) As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::DbCommand ^ InitializeCommand(System::Data::Common::DbCommand ^ command);" />
      <MemberSignature Language="F#" Value="abstract member InitializeCommand : System.Data.Common.DbCommand -&gt; System.Data.Common.DbCommand&#xA;override this.InitializeCommand : System.Data.Common.DbCommand -&gt; System.Data.Common.DbCommand" Usage="dbCommandBuilder.InitializeCommand command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
      </Parameters>
      <Docs>
        <param name="command">The <see cref="T:System.Data.Common.DbCommand" /> to be used by the command builder for the corresponding insert, update, or delete command.</param>
        <summary>Resets the <see cref="P:System.Data.Common.DbCommand.CommandTimeout" />, <see cref="P:System.Data.Common.DbCommand.Transaction" />, <see cref="P:System.Data.Common.DbCommand.CommandType" />, and <see cref="T:System.Data.UpdateRowSource" /> properties on the <see cref="T:System.Data.Common.DbCommand" />.</summary>
        <returns>A <see cref="T:System.Data.Common.DbCommand" /> instance to use for each insert, update, or delete operation. Passing a null value allows the <see cref="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)" /> method to create a <see cref="T:System.Data.Common.DbCommand" /> object based on the Select command associated with the <see cref="T:System.Data.Common.DbCommandBuilder" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método destina-se ao uso por criadores de provedor a criação de um construtor de comando personalizado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QuoteIdentifier">
      <MemberSignature Language="C#" Value="public virtual string QuoteIdentifier (string unquotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string QuoteIdentifier(string unquotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.QuoteIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function QuoteIdentifier (unquotedIdentifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ QuoteIdentifier(System::String ^ unquotedIdentifier);" />
      <MemberSignature Language="F#" Value="abstract member QuoteIdentifier : string -&gt; string&#xA;override this.QuoteIdentifier : string -&gt; string" Usage="dbCommandBuilder.QuoteIdentifier unquotedIdentifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unquotedIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unquotedIdentifier">The original unquoted identifier.</param>
        <summary>Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier, including properly escaping any embedded quotes in the identifier.</summary>
        <returns>The quoted version of the identifier. Embedded quotes within the identifier are properly escaped.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuotePrefix">
      <MemberSignature Language="C#" Value="public virtual string QuotePrefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string QuotePrefix" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.QuotePrefix" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property QuotePrefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ QuotePrefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.QuotePrefix : string with get, set" Usage="System.Data.Common.DbCommandBuilder.QuotePrefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the beginning character or characters to use when specifying database objects (for example, tables or columns) whose names contain characters such as spaces or reserved tokens.</summary>
        <value>O caractere inicial ou caracteres a serem usados. O padrão é uma cadeia de caracteres vazia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Algumas fontes de dados podem ter objetos que podem conter caracteres como espaços, vírgulas e ponto e vírgula. Para acomodar esse recurso, use o <xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A> e <xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A> propriedades para especificar os delimitadores, como um colchete esquerdo e um colchete direito para encapsular o nome do objeto.  
  
> [!NOTE]
>  Embora você não pode alterar o <xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A> ou <xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A> propriedades após uma inserção, atualização ou exclusão comando tiver sido gerado, você pode alterar suas configurações após a chamada a `Update` método de um <xref:System.Data.Common.DbDataAdapter>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">This property cannot be changed after an insert, update, or delete command has been generated.</exception>
      </Docs>
    </Member>
    <Member MemberName="QuoteSuffix">
      <MemberSignature Language="C#" Value="public virtual string QuoteSuffix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string QuoteSuffix" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.QuoteSuffix" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property QuoteSuffix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ QuoteSuffix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.QuoteSuffix : string with get, set" Usage="System.Data.Common.DbCommandBuilder.QuoteSuffix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the ending character or characters to use when specifying database objects (for example, tables or columns) whose names contain characters such as spaces or reserved tokens.</summary>
        <value>O caractere ou caracteres a serem usados finais. O padrão é uma cadeia de caracteres vazia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Algumas fontes de dados podem ter objetos que podem conter caracteres como espaços, vírgulas e ponto e vírgula. Para acomodar esse recurso, use o <xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A> e <xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A> propriedades para especificar os delimitadores, como um colchete esquerdo e um colchete direito para encapsular o nome do objeto.  
  
> [!NOTE]
>  Embora você não pode alterar o <xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A> ou <xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A> propriedades após uma inserção, atualização ou exclusão comando tiver sido gerado, você pode alterar suas configurações após a chamada a `Update` método de um <xref:System.Data.Common.DbDataAdapter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshSchema">
      <MemberSignature Language="C#" Value="public virtual void RefreshSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RefreshSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.RefreshSchema" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RefreshSchema ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RefreshSchema();" />
      <MemberSignature Language="F#" Value="abstract member RefreshSchema : unit -&gt; unit&#xA;override this.RefreshSchema : unit -&gt; unit" Usage="dbCommandBuilder.RefreshSchema " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clears the commands associated with this <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chamar o <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> método remove efetivamente todos os as <xref:System.Data.Common.DbCommand> objetos referenciados pelo <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>,  
  
 <xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A>,  
  
 <xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A>, e  
  
 <xref:System.Data.Common.DbDataAdapter.InsertCommand%2A> Propriedades.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowUpdatingHandler">
      <MemberSignature Language="C#" Value="protected void RowUpdatingHandler (System.Data.Common.RowUpdatingEventArgs rowUpdatingEvent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RowUpdatingHandler(class System.Data.Common.RowUpdatingEventArgs rowUpdatingEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RowUpdatingHandler (rowUpdatingEvent As RowUpdatingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RowUpdatingHandler(System::Data::Common::RowUpdatingEventArgs ^ rowUpdatingEvent);" />
      <MemberSignature Language="F#" Value="member this.RowUpdatingHandler : System.Data.Common.RowUpdatingEventArgs -&gt; unit" Usage="dbCommandBuilder.RowUpdatingHandler rowUpdatingEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowUpdatingEvent" Type="System.Data.Common.RowUpdatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="rowUpdatingEvent">A <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> instance containing information about the event.</param>
        <summary>Adds an event handler for the <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /> event.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaSeparator">
      <MemberSignature Language="C#" Value="public virtual string SchemaSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SchemaSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.SchemaSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SchemaSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SchemaSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SchemaSeparator : string with get, set" Usage="System.Data.Common.DbCommandBuilder.SchemaSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(".")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the character to be used for the separator between the schema identifier and any other identifiers.</summary>
        <value>O caractere a ser usado como separador de esquema.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Geralmente, servidores de banco de dados indicam que o esquema para um identificador, separando o nome do esquema do identificador com algum caractere. Por exemplo, o SQL Server usa dois-pontos, a criação de identificadores completos, como **pessoa: CustomerName**, onde "Person" é o nome do esquema, e "CustomerName" é o identificador. Definir essa propriedade permite aos desenvolvedores modificar esse comportamento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAllValues">
      <MemberSignature Language="C#" Value="public bool SetAllValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SetAllValues" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.SetAllValues" />
      <MemberSignature Language="VB.NET" Value="Public Property SetAllValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SetAllValues { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SetAllValues : bool with get, set" Usage="System.Data.Common.DbCommandBuilder.SetAllValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifies whether all column values in an update statement are included or only changed ones.</summary>
        <value>
          <see langword="true" /> se a declaração de atualização gerada pelo <see cref="T:System.Data.Common.DbCommandBuilder" /> incluir todas as colunas; <see langword="false" /> se ela incluir apenas as colunas alteradas.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A instrução UPDATE gerada por um <xref:System.Data.Common.DbCommandBuilder> pode incluir informações de atualização sobre todas as colunas, ou você pode incluir informações somente sobre as colunas cujos valores foram alterados. Definindo o <xref:System.Data.Common.DbCommandBuilder.SetAllValues%2A> propriedade para `true` faz com que a instrução UPDATE gerada incluir todas as colunas, se seus valores foram alterados ou não.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRowUpdatingHandler">
      <MemberSignature Language="C#" Value="protected abstract void SetRowUpdatingHandler (System.Data.Common.DbDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetRowUpdatingHandler(class System.Data.Common.DbDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub SetRowUpdatingHandler (adapter As DbDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void SetRowUpdatingHandler(System::Data::Common::DbDataAdapter ^ adapter);" />
      <MemberSignature Language="F#" Value="abstract member SetRowUpdatingHandler : System.Data.Common.DbDataAdapter -&gt; unit" Usage="dbCommandBuilder.SetRowUpdatingHandler adapter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.Common.DbDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter">The <see cref="T:System.Data.Common.DbDataAdapter" /> to be used for the update.</param>
        <summary>Registers the <see cref="T:System.Data.Common.DbCommandBuilder" /> to handle the <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /> event for a <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método destina-se ao uso por criadores de provedor a criação de um construtor de comando personalizado. Quando um novo <xref:System.Data.Common.DbDataAdapter> é adicionado para o <xref:System.Data.Common.DbCommandBuilder>, ele é registrado para o DbDataAdapter **RowUpdating** eventos. Se esse método é chamado novamente com o mesmo <xref:System.Data.Common.DbDataAdapter>, o <xref:System.Data.Common.DbCommandBuilder> cancelamento do registro para esse DbDataAdapter **RowUpdating** eventos.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnquoteIdentifier">
      <MemberSignature Language="C#" Value="public virtual string UnquoteIdentifier (string quotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string UnquoteIdentifier(string quotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.UnquoteIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UnquoteIdentifier (quotedIdentifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ UnquoteIdentifier(System::String ^ quotedIdentifier);" />
      <MemberSignature Language="F#" Value="abstract member UnquoteIdentifier : string -&gt; string&#xA;override this.UnquoteIdentifier : string -&gt; string" Usage="dbCommandBuilder.UnquoteIdentifier quotedIdentifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quotedIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="quotedIdentifier">The identifier that will have its embedded quotes removed.</param>
        <summary>Given a quoted identifier, returns the correct unquoted form of that identifier, including properly un-escaping any embedded quotes in the identifier.</summary>
        <returns>The unquoted identifier, with embedded quotes properly un-escaped.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>