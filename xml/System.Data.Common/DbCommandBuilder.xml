<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DbCommandBuilder.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac55bfb54f7b76a4739f53cb9e965eb71e14aa89733.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5bfb54f7b76a4739f53cb9e965eb71e14aa89733</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DbCommandBuilder">
          <source>Automatically generates single-table commands used to reconcile changes made to a <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> with the associated database.</source>
          <target state="translated">Gera automaticamente os comandos de tabela única usados para reconciliar as alterações feitas em um <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> com o banco de dados associado.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DbCommandBuilder">
          <source>This is an abstract class that can only be inherited.</source>
          <target state="translated">Isso é uma classe abstrata que só pode ser herdada.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> class is provided for the convenience of provider writers creating their own command builders.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> classe é fornecida para a conveniência de gravadores de provedor criando suas próprias construtores de comando.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>By inheriting from this class, developers can implement provider specific behavior in their own code.</source>
          <target state="translated">Ao herdar desta classe, os desenvolvedores podem implementar o comportamento específico do provedor em seu próprio código.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> does not automatically generate the SQL statements required to reconcile changes made to a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with the associated data source.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> não gera automaticamente as instruções SQL necessárias para reconciliar as alterações feitas em um <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> com a fonte de dados associado.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>However, you can create a <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> object to automatically generate SQL statements for single-table updates if you set the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</source>
          <target state="translated">No entanto, você pode criar um <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> objeto para gerar automaticamente instruções SQL para atualizações de tabela única se você definir o <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;</ph> propriedade o <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>Then, any additional SQL statements that you do not set are generated by the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph>.</source>
          <target state="translated">Em seguida, qualquer instrução SQL adicional que você não defina é geradas pelo <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> registers itself as a listener for <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating&gt;</ph> events whenever you set the <ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder.DataAdapter%2A&gt;</ph> property.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> se registra como um ouvinte para <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating&gt;</ph> eventos sempre que você definir o <ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder.DataAdapter%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>You can only associate one <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> object with each other at one time.</source>
          <target state="translated">Você só pode associar um <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> ou <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> objeto uns com os outros ao mesmo tempo.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>To generate INSERT, UPDATE, or DELETE statements, the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> uses the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;</ph> property to retrieve a required set of metadata automatically.</source>
          <target state="translated">Para gerar instruções INSERT, UPDATE ou DELETE, o <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> usa o <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;</ph> propriedade para recuperar um conjunto necessário de metadados automaticamente.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>If you change the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;</ph> after the metadata has been retrieved (for example, after the first update), you should call the <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> method to update the metadata.</source>
          <target state="translated">Se você alterar o <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;</ph> após recuperar os metadados (por exemplo, após a primeira atualização), você deve chamar o <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> método para atualizar os metadados.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>The <ph id="ph1">`SelectCommand`</ph> must also return at least one primary key or unique column.</source>
          <target state="translated">O <ph id="ph1">`SelectCommand`</ph> também deve retornar pelo menos uma chave primária ou coluna exclusivo.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>If none exist, an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception is generated, and the commands are not generated.</source>
          <target state="translated">Se não houver nenhum, um <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exceção é gerada e os comandos não são gerados.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> also uses the <ph id="ph2">&lt;xref:System.Data.Common.DbCommand.Connection%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.Common.DbCommand.CommandTimeout%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Data.Common.DbCommand.Transaction%2A&gt;</ph> properties referenced by the <ph id="ph5">&lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> também usa o <ph id="ph2">&lt;xref:System.Data.Common.DbCommand.Connection%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.Common.DbCommand.CommandTimeout%2A&gt;</ph>, e <ph id="ph4">&lt;xref:System.Data.Common.DbCommand.Transaction%2A&gt;</ph> propriedades referenciada pelo <ph id="ph5">&lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>The user should call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if any of these properties are modified, or if the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;</ph> itself is replaced.</source>
          <target state="translated">O usuário deve chamar <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> se qualquer uma dessas propriedades são modificadas, ou se o <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;</ph> será substituído.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>Otherwise the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.InsertCommand%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A&gt;</ph> properties retain their previous values.</source>
          <target state="translated">Caso contrário, o <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.InsertCommand%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A&gt;</ph>, e <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A&gt;</ph> propriedades retêm os valores anteriores.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>If you call <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph>, the <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> is disassociated from the <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>, and the generated commands are no longer used.</source>
          <target state="translated">Se você chamar <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph>, o <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> seja desassociado do <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>, e os comandos gerados não são mais usados.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.#ctor">
          <source>Initializes a new instance of a class that inherits from the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância de uma classe que herda da classe <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.DbParameter" /&gt;</ph> to which the additional modifications are applied.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.Common.DbParameter" /&gt;</ph> ao qual as modificações adicionais são aplicadas.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> from the schema table provided by <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataReader.GetSchemaTable" /&gt;</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> da tabela de esquema fornecida por <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataReader.GetSchemaTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)">
          <source>The type of command being generated; INSERT, UPDATE or DELETE.</source>
          <target state="translated">O tipo de comando que está sendo gerado, INSERT, UPDATE ou DELETE.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the parameter is part of the update or delete WHERE clause, <ph id="ph2">&lt;see langword="false" /&gt;</ph> if it is part of the insert or update values.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o parâmetro fizer parte da cláusula WHERE de atualização ou exclusão, <ph id="ph2">&lt;see langword="false" /&gt;</ph> se for parte dos valores de atualização ou inserção.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)">
          <source>Allows the provider implementation of the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> class to handle additional parameter properties.</source>
          <target state="translated">Permite a implementação de provedor da classe <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> para manipular propriedades de parâmetro adicionais.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)">
          <source>This method allows an implementation of the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> class to handle provider-specific parameter properties.</source>
          <target state="translated">Esse método permite que uma implementação de <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> classe para manipular propriedades de parâmetro específicos do provedor.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbCommandBuilder.CatalogLocation">
          <source>Sets or gets the <ph id="ph1">&lt;see cref="T:System.Data.Common.CatalogLocation" /&gt;</ph> for an instance of the <ph id="ph2">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> class.</source>
          <target state="translated">Define ou obtém o <ph id="ph1">&lt;see cref="T:System.Data.Common.CatalogLocation" /&gt;</ph> para uma instância da classe <ph id="ph2">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.CatalogLocation">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CatalogLocation" /&gt;</ph> object.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Data.Common.CatalogLocation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbCommandBuilder.CatalogSeparator">
          <source>Sets or gets a string used as the catalog separator for an instance of the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> class.</source>
          <target state="translated">Define ou obtém uma cadeia de caracteres usada como o separador de catálogo para uma instância da classe <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.CatalogSeparator">
          <source>A string indicating the catalog separator for use with an instance of the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> class.</source>
          <target state="translated">Uma cadeia de caracteres que indica o separador de catálogo para uso com uma instância do <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbCommandBuilder.ConflictOption">
          <source>Specifies which <ph id="ph1">&lt;see cref="T:System.Data.ConflictOption" /&gt;</ph> is to be used by the <ph id="ph2">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph>.</source>
          <target state="translated">Especifica qual <ph id="ph1">&lt;see cref="T:System.Data.ConflictOption" /&gt;</ph> deve ser usado pelo <ph id="ph2">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.ConflictOption">
          <source>Returns one of the <ph id="ph1">&lt;see cref="T:System.Data.ConflictOption" /&gt;</ph> values describing the behavior of this <ph id="ph2">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph>.</source>
          <target state="translated">Retorna um do <ph id="ph1">&lt;see cref="T:System.Data.ConflictOption" /&gt;</ph> valores que descrevem o comportamento desse <ph id="ph2">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbCommandBuilder.DataAdapter">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> object for which Transact-SQL statements are automatically generated.</source>
          <target state="translated">Obtém ou define um objeto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> para o qual as instruções do Transact-SQL são geradas automaticamente.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.DataAdapter">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> object.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.DataAdapter">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> registers itself as a listener for <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating&gt;</ph> events that are generated by the <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> specified in this property.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> se registra como um ouvinte para <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating&gt;</ph> eventos gerados pelo <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> especificado nesta propriedade.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.DataAdapter">
          <source>When you create a new instance of <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph>, any existing <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> associated with this <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> is released.</source>
          <target state="translated">Quando você cria uma nova instância da <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph>, qualquer existente <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> associado a esta <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> é liberado.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para liberar recursos gerenciados e não gerenciados; <ph id="ph2">&lt;see langword="false" /&gt;</ph> para liberar apenas recursos não gerenciados.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Libera os recursos não gerenciados usados pelo <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> e opcionalmente libera os recursos gerenciados.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.Dispose%2A&gt;</ph> method and the <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">Este método é chamado pelo método público <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.Dispose%2A&gt;</ph> e pelo método <ph id="ph2">`Finalize`</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.Dispose%2A&gt;</ph> invokes the protected <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.Dispose%2A&gt;</ph> method with the disposing parameter set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.Dispose%2A&gt;</ph> invoca o protegido <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.Dispose%2A&gt;</ph> método com o parâmetro descartando definido como <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
          <source><ph id="ph1">`Finalize`</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">`Finalize`</ph> invoca <ph id="ph2">`Dispose`</ph> com <ph id="ph3">`disposing`</ph> definido como <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> references.</source>
          <target state="translated">Quando o <ph id="ph1">`disposing`</ph> parâmetro é <ph id="ph2">`true`</ph>, esse método libera todos os recursos mantidos por qualquer objeto gerenciado que este <ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> referências.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.Dispose%2A&gt;</ph> method of each referenced object.</source>
          <target state="translated">Este método invoca o método <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.Dispose%2A&gt;</ph> de cada objeto referenciado.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see cref="Overload:System.Data.Common.DbCommandBuilder.Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="Overload:System.Data.Common.DbCommandBuilder.Dispose" /&gt;</ph> pode ser chamado várias vezes por outros objetos.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see cref="Overload:System.Data.Common.DbCommandBuilder.Dispose" /&gt;</ph>.</source>
          <target state="translated">Ao substituir <ph id="ph1">&lt;see cref="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)" /&gt;</ph>, tome cuidado para não referenciar objetos que tenham sido descartados anteriormente em uma chamada anterior para <ph id="ph2">&lt;see cref="Overload:System.Data.Common.DbCommandBuilder.Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see cref="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre como implementar <ph id="ph1">&lt;see cref="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)" /&gt;</ph>, consulte <bpt id="p1">[</bpt>implementar um método Dispose<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">Para obter mais informações sobre <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> e <ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>, consulte <bpt id="p1">[</bpt>limpeza de recursos não gerenciados<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> e <bpt id="p2">[</bpt>substituindo o método Finalize<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DbCommandBuilder">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform deletions at the data source.</source>
          <target state="translated">Obtém o objeto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> gerado automaticamente necessário para realizar exclusões na fonte de dados.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Um aplicativo pode usar o <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> fins de método de informação ou solução de problemas, porque retorna a <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> objeto a ser executado.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">Você também pode usar <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> como a base de um comando modificado.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> and modify the associated command text, and then explicitly set that on the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</source>
          <target state="translated">Por exemplo, você pode chamar <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> e modificar o texto de comando associado e, em seguida, definir explicitamente que o <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">Depois que a instrução SQL é gerada pela primeira vez, o aplicativo deve chamar explicitamente <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> se altera a instrução de forma alguma.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">Caso contrário, o <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> ainda estar usando informações da instrução anterior, que pode não estar correta.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>The SQL statements are first generated either when the application calls <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</source>
          <target state="translated">As instruções SQL são geradas quando o aplicativo chama <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">O comportamento padrão, ao gerar nomes de parâmetro, é usar <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, e assim por diante para os vários parâmetros.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>If the overloaded version of <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> allows you to specify this behavior by supplying a Boolean value, you can cause the <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> to generate parameters based on the column names instead by passing <ph id="ph3">`True`</ph>.</source>
          <target state="translated">Se a versão sobrecarregada de <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> permite que você especificar esse comportamento, fornecendo um valor booliano, você pode fazer com que o <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> para gerar parâmetros com base nos nomes de coluna em vez disso, passando <ph id="ph3">`True`</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform deletions at the data source.</source>
          <target state="translated">Obtém o objeto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> gerado automaticamente necessário para realizar exclusões na fonte de dados.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform deletions.</source>
          <target state="translated">O objeto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> gerado automaticamente necessário para executar exclusões.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Um aplicativo pode usar o <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> fins de método de informação ou solução de problemas, porque retorna a <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> objeto a ser executado.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">Você também pode usar <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> como a base de um comando modificado.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> and modify the command text, and then explicitly set that on the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</source>
          <target state="translated">Por exemplo, você pode chamar <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> e modificar o texto de comando e, em seguida, definir explicitamente que o <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">Depois que a instrução SQL é gerada pela primeira vez, o aplicativo deve chamar explicitamente <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> se altera a instrução de forma alguma.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">Caso contrário, o <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> ainda estar usando informações da instrução anterior, que pode não estar correta.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand">
          <source>The SQL statements are first generated either when the application calls <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</source>
          <target state="translated">As instruções SQL são geradas quando o aplicativo chama <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, generate parameter names matching column names, if possible.</source>
          <target state="translated">Se <ph id="ph1">&lt;see langword="true" /&gt;</ph>, gerar nomes de parâmetro correspondentes a nomes de coluna, se possível.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, generate <ph id="ph2">@p1</ph>, <ph id="ph3">@p2</ph>, and so on.</source>
          <target state="translated">Se <ph id="ph1">&lt;see langword="false" /&gt;</ph>, gerar <ph id="ph2">@p1</ph>, <ph id="ph3">@p2</ph> e assim por diante.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform deletions at the data source, optionally using columns for parameter names.</source>
          <target state="translated">Obtém o objeto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> gerado automaticamente necessário para realizar exclusões na fonte de dados, opcionalmente usando colunas para nomes de parâmetros.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform deletions.</source>
          <target state="translated">O objeto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> gerado automaticamente necessário para executar exclusões.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Um aplicativo pode usar o <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> fins de método de informação ou solução de problemas, porque retorna a <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> objeto a ser executado.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">Você também pode usar <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> como a base de um comando modificado.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> and modify the command text, and then explicitly set that on the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</source>
          <target state="translated">Por exemplo, você pode chamar <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> e modificar o texto de comando e, em seguida, definir explicitamente que o <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">Depois que a instrução SQL é gerada pela primeira vez, o aplicativo deve chamar explicitamente <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> se altera a instrução de forma alguma.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">Caso contrário, o <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> ainda estar usando informações da instrução anterior, que pode não estar correta.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The SQL statements are first generated either when the application calls <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</source>
          <target state="translated">As instruções SQL são geradas quando o aplicativo chama <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">O comportamento padrão, ao gerar nomes de parâmetro, é usar <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, e assim por diante para os vários parâmetros.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>Passing <ph id="ph1">`true`</ph> for the <ph id="ph2">`useColumnsForParameterNames`</ph> parameter allows you to force the <ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> to generate parameters based on the column names instead.</source>
          <target state="translated">Passando <ph id="ph1">`true`</ph> para o <ph id="ph2">`useColumnsForParameterNames`</ph> parâmetro permite forçar o <ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> ao gerar parâmetros com base nos nomes de coluna em vez disso.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>This succeeds only if the following conditions are met:</source>
          <target state="translated">Isso é realizada somente se as seguintes condições forem atendidas:</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> has been specified and its length is equal to or greater than the generated parameter name.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> foi especificado e seu comprimento é igual ou maior que o nome de parâmetro gerado.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The generated parameter name meets the criteria specified in the <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> regular expression.</source>
          <target state="translated">O nome de parâmetro gerado atende aos critérios especificados a <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> expressão regular.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>A <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> is specified.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> for especificado.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DbCommandBuilder">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform insertions at the data source.</source>
          <target state="translated">Obtém o objeto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> gerado automaticamente necessário para realizar inserções na fonte de dados.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the text of the <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Um aplicativo pode usar o <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> método para solução de problemas ou informativas fins porque retorna o texto do <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> objeto a ser executado.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">Você também pode usar <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> como a base de um comando modificado.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> and modify command text, and then explicitly set that on the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</source>
          <target state="translated">Por exemplo, você pode chamar <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> e modificar o texto de comando e, em seguida, definir explicitamente que o <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">Depois que a instrução SQL é gerada pela primeira vez, o aplicativo deve chamar explicitamente <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> se altera a instrução de forma alguma.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">Caso contrário, o <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> ainda estar usando informações da instrução anterior, que pode não estar correta.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>The SQL statements are first generated either when the application calls <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph>.</source>
          <target state="translated">As instruções SQL são geradas quando o aplicativo chama <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">O comportamento padrão, ao gerar nomes de parâmetro, é usar <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, e assim por diante para os vários parâmetros.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>If the overloaded version of <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> allows you to specify this behavior, you can cause the <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> to generate parameters based on the column names instead.</source>
          <target state="translated">Se a versão sobrecarregada de <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> permite que você especificar esse comportamento, você pode fazer com que o <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> ao gerar parâmetros com base nos nomes de coluna em vez disso.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform insertions at the data source.</source>
          <target state="translated">Obtém o objeto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> gerado automaticamente necessário para realizar inserções na fonte de dados.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform insertions.</source>
          <target state="translated">O objeto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> gerado automaticamente necessário para executar inserções.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the text of the <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Um aplicativo pode usar o <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> método para solução de problemas ou informativas fins porque retorna o texto do <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> objeto a ser executado.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">Você também pode usar <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> como a base de um comando modificado.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> and modify the command text, and then explicitly set that on the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</source>
          <target state="translated">Por exemplo, você pode chamar <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> e modificar o texto de comando e, em seguida, definir explicitamente que o <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">Depois que a instrução SQL é gerada pela primeira vez, o aplicativo deve chamar explicitamente <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> se altera a instrução de forma alguma.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">Caso contrário, o <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> ainda estar usando informações da instrução anterior, que pode não estar correta.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand">
          <source>The SQL statements are first generated either when the application calls <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph>.</source>
          <target state="translated">As instruções SQL são geradas quando o aplicativo chama <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, generate parameter names matching column names, if possible.</source>
          <target state="translated">Se <ph id="ph1">&lt;see langword="true" /&gt;</ph>, gerar nomes de parâmetro correspondentes a nomes de coluna, se possível.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, generate <ph id="ph2">@p1</ph>, <ph id="ph3">@p2</ph>, and so on.</source>
          <target state="translated">Se <ph id="ph1">&lt;see langword="false" /&gt;</ph>, gerar <ph id="ph2">@p1</ph>, <ph id="ph3">@p2</ph> e assim por diante.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform insertions at the data source, optionally using columns for parameter names.</source>
          <target state="translated">Obtém o objeto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> gerado automaticamente necessário para realizar inserções na fonte de dados, opcionalmente usando colunas para nomes de parâmetros.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform insertions.</source>
          <target state="translated">O objeto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> gerado automaticamente necessário para executar inserções.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the text of the <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Um aplicativo pode usar o <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> método para solução de problemas ou informativas fins porque retorna o texto do <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> objeto a ser executado.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">Você também pode usar <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> como a base de um comando modificado.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> and modify the command text, and then explicitly set that on the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</source>
          <target state="translated">Por exemplo, você pode chamar <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> e modificar o texto de comando e, em seguida, definir explicitamente que o <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">Depois que a instrução SQL é gerada pela primeira vez, o aplicativo deve chamar explicitamente <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> se altera a instrução de forma alguma.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">Caso contrário, o <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> ainda estar usando informações da instrução anterior, que pode não estar correta.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The SQL statements are first generated either when the application calls <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph>.</source>
          <target state="translated">As instruções SQL são geradas quando o aplicativo chama <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">O comportamento padrão, ao gerar nomes de parâmetro, é usar <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, e assim por diante para os vários parâmetros.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>Passing <ph id="ph1">`true`</ph> for the <ph id="ph2">`useColumnsForParameterNames`</ph> parameter allows you to force the <ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> to generate parameters based on the column names instead.</source>
          <target state="translated">Passando <ph id="ph1">`true`</ph> para o <ph id="ph2">`useColumnsForParameterNames`</ph> parâmetro permite forçar o <ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> ao gerar parâmetros com base nos nomes de coluna em vez disso.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>Generation of the parameters based on column names succeeds only if the following conditions are met:</source>
          <target state="translated">A geração dos parâmetros com base nos nomes de coluna terá êxito apenas se as seguintes condições forem atendidas:</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> has been specified and its length is equal to or greater than the generated parameter name.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> foi especificado e seu comprimento é igual ou maior que o nome de parâmetro gerado.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The generated parameter name meets the criteria specified in the <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> regular expression.</source>
          <target state="translated">O nome de parâmetro gerado atende aos critérios especificados a <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> expressão regular.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>A <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> is specified.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> for especificado.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DbCommandBuilder">
          <source>Returns the name of the specified parameter.</source>
          <target state="translated">Retorna o nome do parâmetro especificado.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.Int32)">
          <source>The number to be included as part of the parameter's name..</source>
          <target state="translated">O número a ser incluído como parte do nome do parâmetro.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.Int32)">
          <source>Returns the name of the specified parameter in the format of <ph id="ph1">@p</ph><bpt id="p1">*</bpt><ph id="ph2">#</ph><ept id="p1">*</ept>.</source>
          <target state="translated">Retorna o nome do parâmetro especificado no formato de <ph id="ph1">@p</ph><bpt id="p1">*</bpt><ph id="ph2">#</ph><ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.Int32)">
          <source>Use when building a custom command builder.</source>
          <target state="translated">Use quando estiver criando um construtor de comando personalizado.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.Int32)">
          <source>The name of the parameter with the specified number appended as part of the parameter name.</source>
          <target state="translated">O nome do parâmetro com o número especificado anexado como parte do nome do parâmetro.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.String)">
          <source>The partial name of the parameter.</source>
          <target state="translated">O nome parcial do parâmetro.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.String)">
          <source>Returns the full parameter name, given the partial parameter name.</source>
          <target state="translated">Retorna o nome completo do parâmetro, considerando o nome parcial do parâmetro.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.String)">
          <source>The full parameter name corresponding to the partial parameter name requested.</source>
          <target state="translated">O nome completo do parâmetro correspondente ao nome parcial do parâmetro solicitado.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(System.Int32)">
          <source>The number to be included as part of the parameter's name.</source>
          <target state="translated">O número a ser incluído como parte do nome do parâmetro.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(System.Int32)">
          <source>Returns the placeholder for the parameter in the associated SQL statement.</source>
          <target state="translated">Retorna o espaço reservado para o parâmetro na instrução SQL associada.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(System.Int32)">
          <source>The name of the parameter with the specified number appended.</source>
          <target state="translated">O nome do parâmetro com o número especificado anexado.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(System.Int32)">
          <source>This method is intended for use by provider writers building a custom command builder.</source>
          <target state="translated">Este método destina-se ao uso por gravadores de provedor de criação de um construtor de comando personalizado.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> for which to retrieve the corresponding schema table.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> para o qual recuperar a tabela de esquema correspondente.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)">
          <source>Returns the schema table for the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph>.</source>
          <target state="translated">Retorna a tabela de esquema para o <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> that represents the schema for the specific <ph id="ph2">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph>.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> que representa o esquema para o <ph id="ph2">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> específico.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)">
          <source>This method is intended for use by provider writers building a custom command builder.</source>
          <target state="translated">Este método destina-se ao uso por gravadores de provedor de criação de um construtor de comando personalizado.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DbCommandBuilder">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform updates at the data source.</source>
          <target state="translated">Obtém o objeto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> gerado automaticamente necessário para realizar atualizações na fonte de dados.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Um aplicativo pode usar o <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> fins de método de informação ou solução de problemas, porque retorna a <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> objeto a ser executado.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">Você também pode usar <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> como a base de um comando modificado.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> and modify the command text, and then explicitly set that on the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</source>
          <target state="translated">Por exemplo, você pode chamar <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> e modificar o texto de comando e, em seguida, definir explicitamente que o <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">Depois que a instrução SQL é gerada pela primeira vez, o aplicativo deve chamar explicitamente <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> se altera a instrução de forma alguma.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">Caso contrário, o <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> ainda estar usando informações da instrução anterior, que pode não estar correta.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>The SQL statements are first generated either when the application calls <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</source>
          <target state="translated">As instruções SQL são geradas quando o aplicativo chama <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">O comportamento padrão, ao gerar nomes de parâmetro, é usar <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, e assim por diante para os vários parâmetros.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>If the overloaded version of <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> allows you to specify this behavior, you can cause the <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> to generate parameters based on the column names instead.</source>
          <target state="translated">Se a versão sobrecarregada de <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> permite que você especificar esse comportamento, você pode fazer com que o <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> ao gerar parâmetros com base nos nomes de coluna em vez disso.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform updates at the data source.</source>
          <target state="translated">Obtém o objeto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> gerado automaticamente necessário para realizar atualizações na fonte de dados.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform updates.</source>
          <target state="translated">O objeto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> gerado automaticamente necessário para executar atualizações.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Um aplicativo pode usar o <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> fins de método de informação ou solução de problemas, porque retorna a <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> objeto a ser executado.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">Você também pode usar <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> como a base de um comando modificado.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> and modify the command text, and then explicitly set that on the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</source>
          <target state="translated">Por exemplo, você pode chamar <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> e modificar o texto de comando e, em seguida, definir explicitamente que o <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">Depois que a instrução SQL é gerada pela primeira vez, o aplicativo deve chamar explicitamente <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> se altera a instrução de forma alguma.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">Caso contrário, o <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> ainda estar usando informações da instrução anterior, que pode não estar correta.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand">
          <source>The SQL statements are first generated either when the application calls <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</source>
          <target state="translated">As instruções SQL são geradas quando o aplicativo chama <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, generate parameter names matching column names, if possible.</source>
          <target state="translated">Se <ph id="ph1">&lt;see langword="true" /&gt;</ph>, gerar nomes de parâmetro correspondentes a nomes de coluna, se possível.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, generate <ph id="ph2">@p1</ph>, <ph id="ph3">@p2</ph>, and so on.</source>
          <target state="translated">Se <ph id="ph1">&lt;see langword="false" /&gt;</ph>, gerar <ph id="ph2">@p1</ph>, <ph id="ph3">@p2</ph> e assim por diante.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform updates at the data source, optionally using columns for parameter names.</source>
          <target state="translated">Obtém o objeto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> gerado automaticamente necessário para realizar atualizações na fonte de dados, opcionalmente usando colunas para nomes de parâmetros.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform updates.</source>
          <target state="translated">O objeto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> gerado automaticamente necessário para executar atualizações.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Um aplicativo pode usar o <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> fins de método de informação ou solução de problemas, porque retorna a <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> objeto a ser executado.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">Você também pode usar <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> como a base de um comando modificado.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> and modify command text, and then explicitly set that on the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</source>
          <target state="translated">Por exemplo, você pode chamar <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> e modificar o texto de comando e, em seguida, definir explicitamente que o <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">Depois que a instrução SQL é gerada pela primeira vez, o aplicativo deve chamar explicitamente <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> se altera a instrução de forma alguma.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">Caso contrário, o <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> ainda estar usando informações da instrução anterior, que pode não estar correta.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The SQL statements are first generated either when the application calls <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</source>
          <target state="translated">As instruções SQL são geradas quando o aplicativo chama <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">O comportamento padrão, ao gerar nomes de parâmetro, é usar <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, e assim por diante para os vários parâmetros.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>Passing <ph id="ph1">`true`</ph> for the <ph id="ph2">`useColumnsForParameterNames`</ph> parameter allows you to force the <ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> to generate parameters based on the column names instead.</source>
          <target state="translated">Passando <ph id="ph1">`true`</ph> para o <ph id="ph2">`useColumnsForParameterNames`</ph> parâmetro permite forçar o <ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> ao gerar parâmetros com base nos nomes de coluna em vez disso.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>Generation of the parameters based on column names succeeds only if the following conditions are met:</source>
          <target state="translated">A geração dos parâmetros com base nos nomes de coluna terá êxito apenas se as seguintes condições forem atendidas:</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> has been specified and its length is equal to or greater than the generated parameter name.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> foi especificado e seu comprimento é igual ou maior que o nome de parâmetro gerado.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The generated parameter name meets the criteria specified in the <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> regular expression.</source>
          <target state="translated">O nome de parâmetro gerado atende aos critérios especificados a <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> expressão regular.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>A <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> is specified.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> for especificado.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> to be used by the command builder for the corresponding insert, update, or delete command.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> a ser usado pelo construtor de comando para o comando de inserção, atualização ou exclusão correspondente.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Data.Common.DbCommand.CommandTimeout" /&gt;</ph>, <ph id="ph2">&lt;see cref="P:System.Data.Common.DbCommand.Transaction" /&gt;</ph>, <ph id="ph3">&lt;see cref="P:System.Data.Common.DbCommand.CommandType" /&gt;</ph>, and <ph id="ph4">&lt;see cref="T:System.Data.UpdateRowSource" /&gt;</ph> properties on the <ph id="ph5">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph>.</source>
          <target state="translated">Redefine as propriedades <ph id="ph1">&lt;see cref="P:System.Data.Common.DbCommand.CommandTimeout" /&gt;</ph>, <ph id="ph2">&lt;see cref="P:System.Data.Common.DbCommand.Transaction" /&gt;</ph>, <ph id="ph3">&lt;see cref="P:System.Data.Common.DbCommand.CommandType" /&gt;</ph> e <ph id="ph4">&lt;see cref="T:System.Data.UpdateRowSource" /&gt;</ph> no <ph id="ph5">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> instance to use for each insert, update, or delete operation.</source>
          <target state="translated">Uma instância <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> a ser usada para cada operação de inserção, atualização ou exclusão.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)">
          <source>Passing a null value allows the <ph id="ph1">&lt;see cref="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)" /&gt;</ph> method to create a <ph id="ph2">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object based on the Select command associated with the <ph id="ph3">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph>.</source>
          <target state="translated">Passar um valor nulo permite que o método <ph id="ph1">&lt;see cref="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)" /&gt;</ph> crie um objeto <ph id="ph2">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> com base no comando Select associado ao <ph id="ph3">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)">
          <source>This method is intended for use by provider writers building a custom command builder.</source>
          <target state="translated">Este método destina-se ao uso por gravadores de provedor de criação de um construtor de comando personalizado.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.QuoteIdentifier(System.String)">
          <source>The original unquoted identifier.</source>
          <target state="translated">O identificador original sem aspas.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.QuoteIdentifier(System.String)">
          <source>Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier, including properly escaping any embedded quotes in the identifier.</source>
          <target state="translated">Dado um identificador sem aspas no caso de catálogo correto, retorna a forma entre aspas correta desse identificador, incluindo o escape apropriado de quaisquer aspas inseridas no identificador.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.QuoteIdentifier(System.String)">
          <source>The quoted version of the identifier.</source>
          <target state="translated">A versão entre aspas do identificador.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.QuoteIdentifier(System.String)">
          <source>Embedded quotes within the identifier are properly escaped.</source>
          <target state="translated">As aspas inseridas no identificador são escapadas adequadamente.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbCommandBuilder.QuotePrefix">
          <source>Gets or sets the beginning character or characters to use when specifying database objects (for example, tables or columns) whose names contain characters such as spaces or reserved tokens.</source>
          <target state="translated">Obtém ou define o caractere ou caracteres iniciais a serem usados ao especificar os objetos de banco de dados (por exemplo, tabelas ou colunas) cujos nomes contêm caracteres como espaços ou tokens reservados.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.QuotePrefix">
          <source>The beginning character or characters to use.</source>
          <target state="translated">O caractere inicial ou caracteres a ser usado.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.QuotePrefix">
          <source>The default is an empty string.</source>
          <target state="translated">O padrão é uma cadeia de caracteres vazia.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.QuotePrefix">
          <source>Some data sources may have objects that can contain characters such as spaces, commas, and semicolons.</source>
          <target state="translated">Algumas fontes de dados podem ter objetos que podem conter caracteres como espaços, vírgulas e ponto e vírgula.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.QuotePrefix">
          <source>To accommodate this capability, use the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A&gt;</ph> properties to specify delimiters such as a left bracket and a right bracket to encapsulate the object name.</source>
          <target state="translated">Para acomodar esse recurso, use o <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A&gt;</ph> propriedades para especificar delimitadores como um colchete esquerdo e um colchete direito para encapsular o nome do objeto.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.QuotePrefix">
          <source>Although you cannot change the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A&gt;</ph> properties after an insert, update, or delete command has been generated, you can change their settings after calling the <ph id="ph3">`Update`</ph> method of a <ph id="ph4">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</source>
          <target state="translated">Embora você não pode alterar o <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A&gt;</ph> propriedades após uma inserção, atualização ou exclusão comando tiver sido gerado, você pode alterar suas configurações após a chamada a <ph id="ph3">`Update`</ph> método de um <ph id="ph4">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbCommandBuilder.QuotePrefix">
          <source>This property cannot be changed after an insert, update, or delete command has been generated.</source>
          <target state="translated">Essa propriedade não pode ser alterada após um comando de inserção, atualização ou exclusão ter sido gerado.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbCommandBuilder.QuoteSuffix">
          <source>Gets or sets the ending character or characters to use when specifying database objects (for example, tables or columns) whose names contain characters such as spaces or reserved tokens.</source>
          <target state="translated">Obtém ou define o caractere ou caracteres finais a serem usados ao especificar os objetos de banco de dados (por exemplo, tabelas ou colunas) cujos nomes contêm caracteres como espaços ou tokens reservados.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.QuoteSuffix">
          <source>The ending character or characters to use.</source>
          <target state="translated">O caractere ou caracteres usar final.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.QuoteSuffix">
          <source>The default is an empty string.</source>
          <target state="translated">O padrão é uma cadeia de caracteres vazia.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.QuoteSuffix">
          <source>Some data sources may have objects that can contain characters such as spaces, commas, and semicolons.</source>
          <target state="translated">Algumas fontes de dados podem ter objetos que podem conter caracteres como espaços, vírgulas e ponto e vírgula.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.QuoteSuffix">
          <source>To accommodate this capability, use the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A&gt;</ph> properties to specify delimiters such as a left bracket and a right bracket to encapsulate the object name.</source>
          <target state="translated">Para acomodar esse recurso, use o <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A&gt;</ph> propriedades para especificar delimitadores como um colchete esquerdo e um colchete direito para encapsular o nome do objeto.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.QuoteSuffix">
          <source>Although you cannot change the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A&gt;</ph> properties after an insert, update, or delete command has been generated, you can change their settings after calling the <ph id="ph3">`Update`</ph> method of a <ph id="ph4">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</source>
          <target state="translated">Embora você não pode alterar o <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A&gt;</ph> propriedades após uma inserção, atualização ou exclusão comando tiver sido gerado, você pode alterar suas configurações após a chamada a <ph id="ph3">`Update`</ph> método de um <ph id="ph4">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.RefreshSchema">
          <source>Clears the commands associated with this <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph>.</source>
          <target state="translated">Limpa os comandos associados a este <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.RefreshSchema">
          <source>Calling the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> method effectively removes all the <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> objects referred to by the <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;</ph>,</source>
          <target state="translated">Chamando o <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> método remove efetivamente todos os a <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> objetos referenciado pelo <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.RefreshSchema">
          <source><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.RefreshSchema">
          <source><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A&gt;</ph>, and</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A&gt;</ph>, e</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.RefreshSchema">
          <source><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.InsertCommand%2A&gt;</ph> properties.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.InsertCommand%2A&gt;</ph> Propriedades.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.RowUpdatingEventArgs" /&gt;</ph> instance containing information about the event.</source>
          <target state="translated">Uma instância de <ph id="ph1">&lt;see cref="T:System.Data.Common.RowUpdatingEventArgs" /&gt;</ph> que contém informações sobre o evento.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)">
          <source>Adds an event handler for the <ph id="ph1">&lt;see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /&gt;</ph> event.</source>
          <target state="translated">Adiciona um manipulador de eventos para o evento <ph id="ph1">&lt;see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbCommandBuilder.SchemaSeparator">
          <source>Gets or sets the character to be used for the separator between the schema identifier and any other identifiers.</source>
          <target state="translated">Obtém ou define o caractere a ser usado para o separador entre o identificador do esquema e de quaisquer outros identificadores.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.SchemaSeparator">
          <source>The character to be used as the schema separator.</source>
          <target state="translated">O caractere a ser usado como separador de esquema.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.SchemaSeparator">
          <source>Generally, database servers indicate the schema for an identifier by separating the schema name from the identifier with some character.</source>
          <target state="translated">Geralmente, servidores de banco de dados indicam que o esquema para um identificador, separando o nome do esquema de identificador com alguns caracteres.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.SchemaSeparator">
          <source>For example, SQL Server uses a colon, creating complete identifiers such as <bpt id="p1">**</bpt>Person:CustomerName<ept id="p1">**</ept>, where "Person" is the schema name and "CustomerName" is the identifier.</source>
          <target state="translated">Por exemplo, o SQL Server usa um vírgula, criando identificadores completos como <bpt id="p1">**</bpt>pessoa: CustomerName<ept id="p1">**</ept>, onde "Pessoa" é o nome do esquema, e "CustomerName" é o identificador.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.SchemaSeparator">
          <source>Setting this property allows developers to modify this behavior.</source>
          <target state="translated">Definir esta propriedade permite que desenvolvedores modificar esse comportamento.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbCommandBuilder.SetAllValues">
          <source>Specifies whether all column values in an update statement are included or only changed ones.</source>
          <target state="translated">Especifica se todos os valores de coluna em uma declaração de atualização são incluídos ou apenas aqueles alterados.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.SetAllValues">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the UPDATE statement generated by the <ph id="ph2">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> includes all columns; <ph id="ph3">&lt;see langword="false" /&gt;</ph> if it includes only changed columns.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se a declaração de atualização gerada pelo <ph id="ph2">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> incluir todas as colunas; <ph id="ph3">&lt;see langword="false" /&gt;</ph> se ela incluir apenas as colunas alteradas.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.SetAllValues">
          <source>The UPDATE statement generated by a <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> can include update information about all the columns, or it can include information only about those columns whose values have changed.</source>
          <target state="translated">A instrução de atualização gerada por um <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> pode incluir informações de atualização sobre todas as colunas, ou você pode incluir informações somente sobre as colunas cujos valores foram alterados.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.SetAllValues">
          <source>Setting the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.SetAllValues%2A&gt;</ph> property to <ph id="ph2">`true`</ph> causes the generated UPDATE statement to include all the columns, whether their values have changed or not.</source>
          <target state="translated">Definindo o <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.SetAllValues%2A&gt;</ph> propriedade <ph id="ph2">`true`</ph> faz com que a instrução UPDATE gerada incluir todas as colunas, se seus valores foram alterados ou não.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> to be used for the update.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> a ser usado para a atualização.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)">
          <source>Registers the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> to handle the <ph id="ph2">&lt;see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /&gt;</ph> event for a <ph id="ph3">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph>.</source>
          <target state="translated">Registra o <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> para lidar com o evento <ph id="ph2">&lt;see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /&gt;</ph> para um <ph id="ph3">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)">
          <source>This method is intended for use by provider writers building a custom command builder.</source>
          <target state="translated">Este método destina-se ao uso por gravadores de provedor de criação de um construtor de comando personalizado.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)">
          <source>When a new <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> is added to the <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph>, it is registered for the DbDataAdapter's <bpt id="p1">**</bpt>RowUpdating<ept id="p1">**</ept> event.</source>
          <target state="translated">Quando um novo <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> é adicionada para o <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph>, está registrado para o DbDataAdapter <bpt id="p1">**</bpt>RowUpdating<ept id="p1">**</ept> eventos.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)">
          <source>If this method is called again with the same <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>, the <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> is unregistered for that DbDataAdapter's <bpt id="p1">**</bpt>RowUpdating<ept id="p1">**</ept> event.</source>
          <target state="translated">Se esse método é chamado novamente com o mesmo <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>, o <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> não está registrado para esse DbDataAdapter <bpt id="p1">**</bpt>RowUpdating<ept id="p1">**</ept> eventos.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.UnquoteIdentifier(System.String)">
          <source>The identifier that will have its embedded quotes removed.</source>
          <target state="translated">O identificador que terá suas aspas inseridas removidas.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.UnquoteIdentifier(System.String)">
          <source>Given a quoted identifier, returns the correct unquoted form of that identifier, including properly un-escaping any embedded quotes in the identifier.</source>
          <target state="translated">Dado um identificador entre aspas, retorna a forma sem aspas correta desse identificador, incluindo desfazer o escape adequado de quaisquer aspas inseridas no identificador.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.UnquoteIdentifier(System.String)">
          <source>The unquoted identifier, with embedded quotes properly un-escaped.</source>
          <target state="translated">O identificador sem aspas, com aspas inseridas corretamente sem escape.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>