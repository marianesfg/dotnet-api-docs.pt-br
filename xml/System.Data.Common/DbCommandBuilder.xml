<Type Name="DbCommandBuilder" FullName="System.Data.Common.DbCommandBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9e97ad01d80f31f30d18baec5746496dd12f5932" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37683577" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DbCommandBuilder : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbCommandBuilder extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.DbCommandBuilder" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DbCommandBuilder&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbCommandBuilder abstract : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type DbCommandBuilder = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c1bce-101">Automatically generates single-table commands used to reconcile changes made to a <see cref="T:System.Data.DataSet" /> with the associated database.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c1bce-101">Automatically generates single-table commands used to reconcile changes made to a <see cref="T:System.Data.DataSet" /> with the associated database.</span>
      </span>
      <span data-ttu-id="c1bce-102">This is an abstract class that can only be inherited.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c1bce-102">This is an abstract class that can only be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1bce-103">O <xref:System.Data.Common.DbCommandBuilder> classe é fornecida para a conveniência dos gravadores de provedor criando seus próprios construtores de comando.</span><span class="sxs-lookup"><span data-stu-id="c1bce-103">The <xref:System.Data.Common.DbCommandBuilder> class is provided for the convenience of provider writers creating their own command builders.</span></span> <span data-ttu-id="c1bce-104">Ao herdar dessa classe, os desenvolvedores podem implementar o comportamento específico do provedor em seu próprio código.</span><span class="sxs-lookup"><span data-stu-id="c1bce-104">By inheriting from this class, developers can implement provider specific behavior in their own code.</span></span>  
  
 <span data-ttu-id="c1bce-105">O <xref:System.Data.Common.DbDataAdapter> não gera automaticamente as instruções SQL necessárias para reconciliar as alterações feitas em um <xref:System.Data.DataSet> com a fonte de dados associado.</span><span class="sxs-lookup"><span data-stu-id="c1bce-105">The <xref:System.Data.Common.DbDataAdapter> does not automatically generate the SQL statements required to reconcile changes made to a <xref:System.Data.DataSet> with the associated data source.</span></span> <span data-ttu-id="c1bce-106">No entanto, você pode criar uma <xref:System.Data.Common.DbCommandBuilder> objeto para gerar automaticamente instruções SQL para atualizações de tabela única, se você definir o <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> propriedade do <xref:System.Data.Common.DbDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="c1bce-106">However, you can create a <xref:System.Data.Common.DbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> property of the <xref:System.Data.Common.DbDataAdapter>.</span></span> <span data-ttu-id="c1bce-107">Em seguida, qualquer instrução SQL adicional que você não definir é geradas pelo <xref:System.Data.Common.DbCommandBuilder>.</span><span class="sxs-lookup"><span data-stu-id="c1bce-107">Then, any additional SQL statements that you do not set are generated by the <xref:System.Data.Common.DbCommandBuilder>.</span></span>  
  
 <span data-ttu-id="c1bce-108">O <xref:System.Data.Common.DbCommandBuilder> se registra como um ouvinte <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> eventos sempre que você definir o <xref:System.Data.Common.DbCommandBuilder.DataAdapter%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="c1bce-108">The <xref:System.Data.Common.DbCommandBuilder> registers itself as a listener for <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> events whenever you set the <xref:System.Data.Common.DbCommandBuilder.DataAdapter%2A> property.</span></span> <span data-ttu-id="c1bce-109">Você pode associar apenas um <xref:System.Data.Common.DbDataAdapter> ou <xref:System.Data.Common.DbCommandBuilder> objeto entre si de uma só vez.</span><span class="sxs-lookup"><span data-stu-id="c1bce-109">You can only associate one <xref:System.Data.Common.DbDataAdapter> or <xref:System.Data.Common.DbCommandBuilder> object with each other at one time.</span></span>  
  
 <span data-ttu-id="c1bce-110">Para gerar instruções INSERT, UPDATE ou DELETE, o <xref:System.Data.Common.DbCommandBuilder> usa o <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> propriedade para recuperar automaticamente o conjunto necessário de metadados.</span><span class="sxs-lookup"><span data-stu-id="c1bce-110">To generate INSERT, UPDATE, or DELETE statements, the <xref:System.Data.Common.DbCommandBuilder> uses the <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> property to retrieve a required set of metadata automatically.</span></span> <span data-ttu-id="c1bce-111">Se você alterar o <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> após terem sido recuperados os metadados (por exemplo, após a primeira atualização), você deve chamar o <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> método para atualizar os metadados.</span><span class="sxs-lookup"><span data-stu-id="c1bce-111">If you change the <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> after the metadata has been retrieved (for example, after the first update), you should call the <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> method to update the metadata.</span></span>  
  
 <span data-ttu-id="c1bce-112">O `SelectCommand` também deve retornar pelo menos uma chave primária ou coluna exclusivo.</span><span class="sxs-lookup"><span data-stu-id="c1bce-112">The `SelectCommand` must also return at least one primary key or unique column.</span></span> <span data-ttu-id="c1bce-113">Se não houver nenhum, um <xref:System.InvalidOperationException> exceção é gerada e os comandos não são gerados.</span><span class="sxs-lookup"><span data-stu-id="c1bce-113">If none exist, an <xref:System.InvalidOperationException> exception is generated, and the commands are not generated.</span></span>  
  
 <span data-ttu-id="c1bce-114">O <xref:System.Data.Common.DbCommandBuilder> também usa o <xref:System.Data.Common.DbCommand.Connection%2A>, <xref:System.Data.Common.DbCommand.CommandTimeout%2A>, e <xref:System.Data.Common.DbCommand.Transaction%2A> propriedades referenciadas pela <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="c1bce-114">The <xref:System.Data.Common.DbCommandBuilder> also uses the <xref:System.Data.Common.DbCommand.Connection%2A>, <xref:System.Data.Common.DbCommand.CommandTimeout%2A>, and <xref:System.Data.Common.DbCommand.Transaction%2A> properties referenced by the <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="c1bce-115">O usuário deve chamar <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> se qualquer uma dessas propriedades são modificadas, ou se o <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> será substituído.</span><span class="sxs-lookup"><span data-stu-id="c1bce-115">The user should call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if any of these properties are modified, or if the <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> itself is replaced.</span></span> <span data-ttu-id="c1bce-116">Caso contrário, o <xref:System.Data.Common.DbDataAdapter.InsertCommand%2A>, <xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A>, e <xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A> propriedades mantêm os valores anteriores.</span><span class="sxs-lookup"><span data-stu-id="c1bce-116">Otherwise the <xref:System.Data.Common.DbDataAdapter.InsertCommand%2A>, <xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A>, and <xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A> properties retain their previous values.</span></span>  
  
 <span data-ttu-id="c1bce-117">Se você chamar <xref:System.ComponentModel.Component.Dispose%2A>, o <xref:System.Data.Common.DbCommandBuilder> é dissociado do <xref:System.Data.Common.DbDataAdapter>, e os comandos gerados não são mais usados.</span><span class="sxs-lookup"><span data-stu-id="c1bce-117">If you call <xref:System.ComponentModel.Component.Dispose%2A>, the <xref:System.Data.Common.DbCommandBuilder> is disassociated from the <xref:System.Data.Common.DbDataAdapter>, and the generated commands are no longer used.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbCommandBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbCommandBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c1bce-118">Initializes a new instance of a class that inherits from the <see cref="T:System.Data.Common.DbCommandBuilder" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-118">Initializes a new instance of a class that inherits from the <see cref="T:System.Data.Common.DbCommandBuilder" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyParameterInfo">
      <MemberSignature Language="C#" Value="protected abstract void ApplyParameterInfo (System.Data.Common.DbParameter parameter, System.Data.DataRow row, System.Data.StatementType statementType, bool whereClause);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ApplyParameterInfo(class System.Data.Common.DbParameter parameter, class System.Data.DataRow row, valuetype System.Data.StatementType statementType, bool whereClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void ApplyParameterInfo(System::Data::Common::DbParameter ^ parameter, System::Data::DataRow ^ row, System::Data::StatementType statementType, bool whereClause);" />
      <MemberSignature Language="F#" Value="abstract member ApplyParameterInfo : System.Data.Common.DbParameter * System.Data.DataRow * System.Data.StatementType * bool -&gt; unit" Usage="dbCommandBuilder.ApplyParameterInfo (parameter, row, statementType, whereClause)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Common.DbParameter" />
        <Parameter Name="row" Type="System.Data.DataRow" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="whereClause" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="parameter">
          <span data-ttu-id="c1bce-119">A <see cref="T:System.Data.Common.DbParameter" /> to which the additional modifications are applied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-119">A <see cref="T:System.Data.Common.DbParameter" /> to which the additional modifications are applied.</span>
          </span>
        </param>
        <param name="row">
          <span data-ttu-id="c1bce-120">The <see cref="T:System.Data.DataRow" /> from the schema table provided by <see cref="M:System.Data.Common.DbDataReader.GetSchemaTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-120">The <see cref="T:System.Data.DataRow" /> from the schema table provided by <see cref="M:System.Data.Common.DbDataReader.GetSchemaTable" />.</span>
          </span>
        </param>
        <param name="statementType">
          <span data-ttu-id="c1bce-121">The type of command being generated; INSERT, UPDATE or DELETE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-121">The type of command being generated; INSERT, UPDATE or DELETE.</span>
          </span>
        </param>
        <param name="whereClause">
          <span data-ttu-id="c1bce-122">
            <see langword="true" /> if the parameter is part of the update or delete WHERE clause, <see langword="false" /> if it is part of the insert or update values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-122">
              <see langword="true" /> if the parameter is part of the update or delete WHERE clause, <see langword="false" /> if it is part of the insert or update values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1bce-123">Allows the provider implementation of the <see cref="T:System.Data.Common.DbCommandBuilder" /> class to handle additional parameter properties.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-123">Allows the provider implementation of the <see cref="T:System.Data.Common.DbCommandBuilder" /> class to handle additional parameter properties.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1bce-124">Esse método permite que uma implementação do <xref:System.Data.Common.DbCommandBuilder> classe para manipular as propriedades de parâmetro específicas do provedor.</span><span class="sxs-lookup"><span data-stu-id="c1bce-124">This method allows an implementation of the <xref:System.Data.Common.DbCommandBuilder> class to handle provider-specific parameter properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CatalogLocation">
      <MemberSignature Language="C#" Value="public virtual System.Data.Common.CatalogLocation CatalogLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Common.CatalogLocation CatalogLocation" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.CatalogLocation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CatalogLocation As CatalogLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::Common::CatalogLocation CatalogLocation { System::Data::Common::CatalogLocation get(); void set(System::Data::Common::CatalogLocation value); };" />
      <MemberSignature Language="F#" Value="member this.CatalogLocation : System.Data.Common.CatalogLocation with get, set" Usage="System.Data.Common.DbCommandBuilder.CatalogLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.CatalogLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c1bce-125">Sets or gets the <see cref="T:System.Data.Common.CatalogLocation" /> for an instance of the <see cref="T:System.Data.Common.DbCommandBuilder" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-125">Sets or gets the <see cref="T:System.Data.Common.CatalogLocation" /> for an instance of the <see cref="T:System.Data.Common.DbCommandBuilder" /> class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c1bce-126">Um objeto <see cref="T:System.Data.Common.CatalogLocation" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-126">A <see cref="T:System.Data.Common.CatalogLocation" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CatalogSeparator">
      <MemberSignature Language="C#" Value="public virtual string CatalogSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CatalogSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.CatalogSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CatalogSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CatalogSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CatalogSeparator : string with get, set" Usage="System.Data.Common.DbCommandBuilder.CatalogSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(".")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c1bce-127">Sets or gets a string used as the catalog separator for an instance of the <see cref="T:System.Data.Common.DbCommandBuilder" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-127">Sets or gets a string used as the catalog separator for an instance of the <see cref="T:System.Data.Common.DbCommandBuilder" /> class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c1bce-128">Uma cadeia de caracteres que indica o separador de catálogo para uso com uma instância da <see cref="T:System.Data.Common.DbCommandBuilder" /> classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-128">A string indicating the catalog separator for use with an instance of the <see cref="T:System.Data.Common.DbCommandBuilder" /> class.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConflictOption">
      <MemberSignature Language="C#" Value="public virtual System.Data.ConflictOption ConflictOption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ConflictOption ConflictOption" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.ConflictOption" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConflictOption As ConflictOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::ConflictOption ConflictOption { System::Data::ConflictOption get(); void set(System::Data::ConflictOption value); };" />
      <MemberSignature Language="F#" Value="member this.ConflictOption : System.Data.ConflictOption with get, set" Usage="System.Data.Common.DbCommandBuilder.ConflictOption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ConflictOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c1bce-129">Specifies which <see cref="T:System.Data.ConflictOption" /> is to be used by the <see cref="T:System.Data.Common.DbCommandBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-129">Specifies which <see cref="T:System.Data.ConflictOption" /> is to be used by the <see cref="T:System.Data.Common.DbCommandBuilder" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c1bce-130">Retorna um dos <see cref="T:System.Data.ConflictOption" /> valores que descrevem o comportamento desta <see cref="T:System.Data.Common.DbCommandBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-130">Returns one of the <see cref="T:System.Data.ConflictOption" /> values describing the behavior of this <see cref="T:System.Data.Common.DbCommandBuilder" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataAdapter">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbDataAdapter DataAdapter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbDataAdapter DataAdapter" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.DataAdapter" />
      <MemberSignature Language="VB.NET" Value="Public Property DataAdapter As DbDataAdapter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbDataAdapter ^ DataAdapter { System::Data::Common::DbDataAdapter ^ get(); void set(System::Data::Common::DbDataAdapter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataAdapter : System.Data.Common.DbDataAdapter with get, set" Usage="System.Data.Common.DbCommandBuilder.DataAdapter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataAdapter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c1bce-131">Gets or sets a <see cref="T:System.Data.Common.DbDataAdapter" /> object for which Transact-SQL statements are automatically generated.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-131">Gets or sets a <see cref="T:System.Data.Common.DbDataAdapter" /> object for which Transact-SQL statements are automatically generated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c1bce-132">Um objeto <see cref="T:System.Data.Common.DbDataAdapter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-132">A <see cref="T:System.Data.Common.DbDataAdapter" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1bce-133">O <xref:System.Data.Common.DbCommandBuilder> se registra como um ouvinte <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> eventos que são gerados pelo <xref:System.Data.Common.DbDataAdapter> especificado nessa propriedade.</span><span class="sxs-lookup"><span data-stu-id="c1bce-133">The <xref:System.Data.Common.DbCommandBuilder> registers itself as a listener for <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> events that are generated by the <xref:System.Data.Common.DbDataAdapter> specified in this property.</span></span>  
  
 <span data-ttu-id="c1bce-134">Quando você cria uma nova instância da <xref:System.Data.Common.DbCommandBuilder>, todos os existentes <xref:System.Data.Common.DbCommandBuilder> associado a este <xref:System.Data.Common.DbDataAdapter> é liberado.</span><span class="sxs-lookup"><span data-stu-id="c1bce-134">When you create a new instance of <xref:System.Data.Common.DbCommandBuilder>, any existing <xref:System.Data.Common.DbCommandBuilder> associated with this <xref:System.Data.Common.DbDataAdapter> is released.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="dbCommandBuilder.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="c1bce-135">
            <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-135">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1bce-136">Releases the unmanaged resources used by the <see cref="T:System.Data.Common.DbCommandBuilder" /> and optionally releases the managed resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-136">Releases the unmanaged resources used by the <see cref="T:System.Data.Common.DbCommandBuilder" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1bce-137">Este método é chamado pelo método público <xref:System.Data.Common.DbCommandBuilder.Dispose%2A> e pelo método `Finalize`.</span><span class="sxs-lookup"><span data-stu-id="c1bce-137">This method is called by the public <xref:System.Data.Common.DbCommandBuilder.Dispose%2A> method and the `Finalize` method.</span></span> <span data-ttu-id="c1bce-138"><xref:System.Data.Common.DbCommandBuilder.Dispose%2A> invoca o protegido <xref:System.Data.Common.DbCommandBuilder.Dispose%2A> método com o parâmetro de descarte definido como `true`.</span><span class="sxs-lookup"><span data-stu-id="c1bce-138"><xref:System.Data.Common.DbCommandBuilder.Dispose%2A> invokes the protected <xref:System.Data.Common.DbCommandBuilder.Dispose%2A> method with the disposing parameter set to `true`.</span></span> <span data-ttu-id="c1bce-139">`Finalize` invoca `Dispose` com `disposing` definido como `false`.</span><span class="sxs-lookup"><span data-stu-id="c1bce-139">`Finalize` invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="c1bce-140">Quando o `disposing` parâmetro é `true`, esse método libera todos os recursos mantidos por qualquer objeto gerenciado que este <xref:System.Data.Common.DbCommandBuilder> referências.</span><span class="sxs-lookup"><span data-stu-id="c1bce-140">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Data.Common.DbCommandBuilder> references.</span></span> <span data-ttu-id="c1bce-141">Este método invoca o método <xref:System.Data.Common.DbCommandBuilder.Dispose%2A> de cada objeto referenciado.</span><span class="sxs-lookup"><span data-stu-id="c1bce-141">This method invokes the <xref:System.Data.Common.DbCommandBuilder.Dispose%2A> method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="c1bce-142">
            <para>
              <see cref="Overload:System.Data.Common.DbCommandBuilder.Dispose" /> pode ser chamado várias vezes por outros objetos. Ao substituir <see cref="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)" />, tome cuidado para não referenciar objetos que tenham sido descartados anteriormente em uma chamada anterior para <see cref="Overload:System.Data.Common.DbCommandBuilder.Dispose" />. Para obter mais informações sobre como implementar <see cref="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)" />, consulte [implementando um Method](~/docs/standard/garbage-collection/implementing-dispose.md) Dispose.  Para obter mais informações sobre <see langword="Dispose" /> e <see langword="Finalize" />, consulte [limpeza Resources](~/docs/standard/garbage-collection/unmanaged.md) não gerenciado e [substituindo o método Finalize] (http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-142">
              <para>
                <see cref="Overload:System.Data.Common.DbCommandBuilder.Dispose" /> can be called multiple times by other objects. When overriding <see cref="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see cref="Overload:System.Data.Common.DbCommandBuilder.Dispose" />. For more information about how to implement <see cref="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDeleteCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c1bce-143">Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform deletions at the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-143">Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform deletions at the data source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1bce-144">Um aplicativo pode usar o <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> método para solução de problemas ou informativas fins porque ele retorna o <xref:System.Data.Common.DbCommand> objeto a ser executado.</span><span class="sxs-lookup"><span data-stu-id="c1bce-144">An application can use the <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.Common.DbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="c1bce-145">Você também pode usar <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> como a base de um comando modificado.</span><span class="sxs-lookup"><span data-stu-id="c1bce-145">You can also use <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="c1bce-146">Por exemplo, você pode chamar <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> modificar o texto do comando associado e, em seguida, definir explicitamente que o <xref:System.Data.Common.DbDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="c1bce-146">For example, you might call <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> and modify the associated command text, and then explicitly set that on the <xref:System.Data.Common.DbDataAdapter>.</span></span>  
  
 <span data-ttu-id="c1bce-147">Depois que a instrução SQL é gerada pela primeira vez, o aplicativo deve chamar explicitamente <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> se ele altera a instrução de forma alguma.</span><span class="sxs-lookup"><span data-stu-id="c1bce-147">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="c1bce-148">Caso contrário, o <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> ainda usarão informações da instrução anterior, que pode não estar correta.</span><span class="sxs-lookup"><span data-stu-id="c1bce-148">Otherwise, the <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> will still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="c1bce-149">As instruções SQL são geradas quando o aplicativo chama <xref:System.Data.Common.DbDataAdapter.Update%2A> ou <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="c1bce-149">The SQL statements are first generated either when the application calls <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>.</span></span>  
  
 <span data-ttu-id="c1bce-150">O comportamento padrão, ao gerar nomes de parâmetros, é usar @p1, @p2, e assim por diante para os vários parâmetros.</span><span class="sxs-lookup"><span data-stu-id="c1bce-150">The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters.</span></span> <span data-ttu-id="c1bce-151">Se a versão sobrecarregada de <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> permite que você especificar esse comportamento fornecendo um valor booliano, você pode fazer com que o <xref:System.Data.Common.DbCommandBuilder> para gerar os parâmetros com base nos nomes de coluna em vez disso, passando `True`.</span><span class="sxs-lookup"><span data-stu-id="c1bce-151">If the overloaded version of <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> allows you to specify this behavior by supplying a Boolean value, you can cause the <xref:System.Data.Common.DbCommandBuilder> to generate parameters based on the column names instead by passing `True`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetDeleteCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetDeleteCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeleteCommand () As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetDeleteCommand();" />
      <MemberSignature Language="F#" Value="member this.GetDeleteCommand : unit -&gt; System.Data.Common.DbCommand" Usage="dbCommandBuilder.GetDeleteCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c1bce-152">Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform deletions at the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-152">Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform deletions at the data source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1bce-153">The automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform deletions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-153">The automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform deletions.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1bce-154">Um aplicativo pode usar o <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> método para solução de problemas ou informativas fins porque ele retorna o <xref:System.Data.Common.DbCommand> objeto a ser executado.</span><span class="sxs-lookup"><span data-stu-id="c1bce-154">An application can use the <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.Common.DbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="c1bce-155">Você também pode usar <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> como a base de um comando modificado.</span><span class="sxs-lookup"><span data-stu-id="c1bce-155">You can also use <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="c1bce-156">Por exemplo, você pode chamar <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> modificar o texto do comando e, em seguida, definir explicitamente que o <xref:System.Data.Common.DbDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="c1bce-156">For example, you might call <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> and modify the command text, and then explicitly set that on the <xref:System.Data.Common.DbDataAdapter>.</span></span>  
  
 <span data-ttu-id="c1bce-157">Depois que a instrução SQL é gerada pela primeira vez, o aplicativo deve chamar explicitamente <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> se ele altera a instrução de forma alguma.</span><span class="sxs-lookup"><span data-stu-id="c1bce-157">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="c1bce-158">Caso contrário, o <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> ainda usarão informações da instrução anterior, que pode não estar correta.</span><span class="sxs-lookup"><span data-stu-id="c1bce-158">Otherwise, the <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> will still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="c1bce-159">As instruções SQL são geradas quando o aplicativo chama <xref:System.Data.Common.DbDataAdapter.Update%2A> ou <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="c1bce-159">The SQL statements are first generated either when the application calls <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetDeleteCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetDeleteCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeleteCommand (useColumnsForParameterNames As Boolean) As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetDeleteCommand(bool useColumnsForParameterNames);" />
      <MemberSignature Language="F#" Value="member this.GetDeleteCommand : bool -&gt; System.Data.Common.DbCommand" Usage="dbCommandBuilder.GetDeleteCommand useColumnsForParameterNames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">
          <span data-ttu-id="c1bce-160">If <see langword="true" />, generate parameter names matching column names, if possible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-160">If <see langword="true" />, generate parameter names matching column names, if possible.</span>
          </span>
          <span data-ttu-id="c1bce-161">If <see langword="false" />, generate @p1, @p2, and so on.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-161">If <see langword="false" />, generate @p1, @p2, and so on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1bce-162">Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform deletions at the data source, optionally using columns for parameter names.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-162">Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform deletions at the data source, optionally using columns for parameter names.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1bce-163">The automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform deletions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-163">The automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform deletions.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1bce-164">Um aplicativo pode usar o <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> método para solução de problemas ou informativas fins porque ele retorna o <xref:System.Data.Common.DbCommand> objeto a ser executado.</span><span class="sxs-lookup"><span data-stu-id="c1bce-164">An application can use the <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.Common.DbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="c1bce-165">Você também pode usar <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> como a base de um comando modificado.</span><span class="sxs-lookup"><span data-stu-id="c1bce-165">You can also use <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="c1bce-166">Por exemplo, você pode chamar <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> modificar o texto do comando e, em seguida, definir explicitamente que o <xref:System.Data.Common.DbDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="c1bce-166">For example, you might call <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> and modify the command text, and then explicitly set that on the <xref:System.Data.Common.DbDataAdapter>.</span></span>  
  
 <span data-ttu-id="c1bce-167">Depois que a instrução SQL é gerada pela primeira vez, o aplicativo deve chamar explicitamente <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> se ele altera a instrução de forma alguma.</span><span class="sxs-lookup"><span data-stu-id="c1bce-167">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="c1bce-168">Caso contrário, o <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> ainda usarão informações da instrução anterior, que pode não estar correta.</span><span class="sxs-lookup"><span data-stu-id="c1bce-168">Otherwise, the <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> will still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="c1bce-169">As instruções SQL são geradas quando o aplicativo chama <xref:System.Data.Common.DbDataAdapter.Update%2A> ou <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="c1bce-169">The SQL statements are first generated either when the application calls <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>.</span></span>  
  
 <span data-ttu-id="c1bce-170">O comportamento padrão, ao gerar nomes de parâmetros, é usar @p1, @p2, e assim por diante para os vários parâmetros.</span><span class="sxs-lookup"><span data-stu-id="c1bce-170">The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters.</span></span> <span data-ttu-id="c1bce-171">Passando `true` para o `useColumnsForParameterNames` parâmetro permite forçar o <xref:System.Data.Common.DbCommandBuilder> para gerar os parâmetros com base nos nomes de coluna em vez disso.</span><span class="sxs-lookup"><span data-stu-id="c1bce-171">Passing `true` for the `useColumnsForParameterNames` parameter allows you to force the <xref:System.Data.Common.DbCommandBuilder> to generate parameters based on the column names instead.</span></span> <span data-ttu-id="c1bce-172">Isso terá êxito apenas se as seguintes condições forem atendidas:</span><span class="sxs-lookup"><span data-stu-id="c1bce-172">This succeeds only if the following conditions are met:</span></span>  
  
-   <span data-ttu-id="c1bce-173">O <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> foi especificado e seu comprimento é igual ou maior que o nome do parâmetro gerado.</span><span class="sxs-lookup"><span data-stu-id="c1bce-173">The <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> has been specified and its length is equal to or greater than the generated parameter name.</span></span>  
  
-   <span data-ttu-id="c1bce-174">O nome do parâmetro gerado atende aos critérios especificados no <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> expressão regular.</span><span class="sxs-lookup"><span data-stu-id="c1bce-174">The generated parameter name meets the criteria specified in the <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> regular expression.</span></span>  
  
-   <span data-ttu-id="c1bce-175">Um <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> é especificado.</span><span class="sxs-lookup"><span data-stu-id="c1bce-175">A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> is specified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInsertCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c1bce-176">Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform insertions at the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-176">Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform insertions at the data source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1bce-177">Um aplicativo pode usar o <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> método para solução de problemas ou informativas fins porque ele retorna o texto do <xref:System.Data.Common.DbCommand> objeto a ser executado.</span><span class="sxs-lookup"><span data-stu-id="c1bce-177">An application can use the <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> method for informational or troubleshooting purposes because it returns the text of the <xref:System.Data.Common.DbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="c1bce-178">Você também pode usar <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> como a base de um comando modificado.</span><span class="sxs-lookup"><span data-stu-id="c1bce-178">You can also use <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="c1bce-179">Por exemplo, você pode chamar <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> modificar o texto de comando e, em seguida, definir explicitamente que o <xref:System.Data.Common.DbDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="c1bce-179">For example, you might call <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> and modify command text, and then explicitly set that on the <xref:System.Data.Common.DbDataAdapter>.</span></span>  
  
 <span data-ttu-id="c1bce-180">Depois que a instrução SQL é gerada pela primeira vez, o aplicativo deve chamar explicitamente <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> se ele altera a instrução de forma alguma.</span><span class="sxs-lookup"><span data-stu-id="c1bce-180">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="c1bce-181">Caso contrário, o <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> ainda usarão informações da instrução anterior, que pode não estar correta.</span><span class="sxs-lookup"><span data-stu-id="c1bce-181">Otherwise, the <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> will still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="c1bce-182">As instruções SQL são geradas quando o aplicativo chama <xref:System.Data.Common.DbDataAdapter.Update%2A> ou <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="c1bce-182">The SQL statements are first generated either when the application calls <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>.</span></span>  
  
 <span data-ttu-id="c1bce-183">O comportamento padrão, ao gerar nomes de parâmetros, é usar @p1, @p2, e assim por diante para os vários parâmetros.</span><span class="sxs-lookup"><span data-stu-id="c1bce-183">The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters.</span></span> <span data-ttu-id="c1bce-184">Se a versão sobrecarregada de <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> permite que você especificar esse comportamento, você pode fazer com que o <xref:System.Data.Common.DbCommandBuilder> para gerar os parâmetros com base nos nomes de coluna em vez disso.</span><span class="sxs-lookup"><span data-stu-id="c1bce-184">If the overloaded version of <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> allows you to specify this behavior, you can cause the <xref:System.Data.Common.DbCommandBuilder> to generate parameters based on the column names instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetInsertCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetInsertCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetInsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertCommand () As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetInsertCommand();" />
      <MemberSignature Language="F#" Value="member this.GetInsertCommand : unit -&gt; System.Data.Common.DbCommand" Usage="dbCommandBuilder.GetInsertCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c1bce-185">Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform insertions at the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-185">Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform insertions at the data source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1bce-186">The automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform insertions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-186">The automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform insertions.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1bce-187">Um aplicativo pode usar o <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> método para solução de problemas ou informativas fins porque ele retorna o texto do <xref:System.Data.Common.DbCommand> objeto a ser executado.</span><span class="sxs-lookup"><span data-stu-id="c1bce-187">An application can use the <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> method for informational or troubleshooting purposes because it returns the text of the <xref:System.Data.Common.DbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="c1bce-188">Você também pode usar <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> como a base de um comando modificado.</span><span class="sxs-lookup"><span data-stu-id="c1bce-188">You can also use <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="c1bce-189">Por exemplo, você pode chamar <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> modificar o texto do comando e, em seguida, definir explicitamente que o <xref:System.Data.Common.DbDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="c1bce-189">For example, you might call <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> and modify the command text, and then explicitly set that on the <xref:System.Data.Common.DbDataAdapter>.</span></span>  
  
 <span data-ttu-id="c1bce-190">Depois que a instrução SQL é gerada pela primeira vez, o aplicativo deve chamar explicitamente <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> se ele altera a instrução de forma alguma.</span><span class="sxs-lookup"><span data-stu-id="c1bce-190">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="c1bce-191">Caso contrário, o <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> ainda usarão informações da instrução anterior, que pode não estar correta.</span><span class="sxs-lookup"><span data-stu-id="c1bce-191">Otherwise, the <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> will still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="c1bce-192">As instruções SQL são geradas quando o aplicativo chama <xref:System.Data.Common.DbDataAdapter.Update%2A> ou <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="c1bce-192">The SQL statements are first generated either when the application calls <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetInsertCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetInsertCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertCommand (useColumnsForParameterNames As Boolean) As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetInsertCommand(bool useColumnsForParameterNames);" />
      <MemberSignature Language="F#" Value="member this.GetInsertCommand : bool -&gt; System.Data.Common.DbCommand" Usage="dbCommandBuilder.GetInsertCommand useColumnsForParameterNames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">
          <span data-ttu-id="c1bce-193">If <see langword="true" />, generate parameter names matching column names, if possible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-193">If <see langword="true" />, generate parameter names matching column names, if possible.</span>
          </span>
          <span data-ttu-id="c1bce-194">If <see langword="false" />, generate @p1, @p2, and so on.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-194">If <see langword="false" />, generate @p1, @p2, and so on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1bce-195">Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform insertions at the data source, optionally using columns for parameter names.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-195">Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform insertions at the data source, optionally using columns for parameter names.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1bce-196">The automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform insertions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-196">The automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform insertions.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1bce-197">Um aplicativo pode usar o <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> método para solução de problemas ou informativas fins porque ele retorna o texto do <xref:System.Data.Common.DbCommand> objeto a ser executado.</span><span class="sxs-lookup"><span data-stu-id="c1bce-197">An application can use the <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> method for informational or troubleshooting purposes because it returns the text of the <xref:System.Data.Common.DbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="c1bce-198">Você também pode usar <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> como a base de um comando modificado.</span><span class="sxs-lookup"><span data-stu-id="c1bce-198">You can also use <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="c1bce-199">Por exemplo, você pode chamar <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> modificar o texto do comando e, em seguida, definir explicitamente que o <xref:System.Data.Common.DbDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="c1bce-199">For example, you might call <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> and modify the command text, and then explicitly set that on the <xref:System.Data.Common.DbDataAdapter>.</span></span>  
  
 <span data-ttu-id="c1bce-200">Depois que a instrução SQL é gerada pela primeira vez, o aplicativo deve chamar explicitamente <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> se ele altera a instrução de forma alguma.</span><span class="sxs-lookup"><span data-stu-id="c1bce-200">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="c1bce-201">Caso contrário, o <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> ainda usarão informações da instrução anterior, que pode não estar correta.</span><span class="sxs-lookup"><span data-stu-id="c1bce-201">Otherwise, the <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> will still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="c1bce-202">As instruções SQL são geradas quando o aplicativo chama <xref:System.Data.Common.DbDataAdapter.Update%2A> ou <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="c1bce-202">The SQL statements are first generated either when the application calls <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>.</span></span>  
  
 <span data-ttu-id="c1bce-203">O comportamento padrão, ao gerar nomes de parâmetros, é usar @p1, @p2, e assim por diante para os vários parâmetros.</span><span class="sxs-lookup"><span data-stu-id="c1bce-203">The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters.</span></span> <span data-ttu-id="c1bce-204">Passando `true` para o `useColumnsForParameterNames` parâmetro permite forçar o <xref:System.Data.Common.DbCommandBuilder> para gerar os parâmetros com base nos nomes de coluna em vez disso.</span><span class="sxs-lookup"><span data-stu-id="c1bce-204">Passing `true` for the `useColumnsForParameterNames` parameter allows you to force the <xref:System.Data.Common.DbCommandBuilder> to generate parameters based on the column names instead.</span></span> <span data-ttu-id="c1bce-205">Geração de parâmetros com base nos nomes de coluna terá êxito apenas se as seguintes condições forem atendidas:</span><span class="sxs-lookup"><span data-stu-id="c1bce-205">Generation of the parameters based on column names succeeds only if the following conditions are met:</span></span>  
  
-   <span data-ttu-id="c1bce-206">O <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> foi especificado e seu comprimento é igual ou maior que o nome do parâmetro gerado.</span><span class="sxs-lookup"><span data-stu-id="c1bce-206">The <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> has been specified and its length is equal to or greater than the generated parameter name.</span></span>  
  
-   <span data-ttu-id="c1bce-207">O nome do parâmetro gerado atende aos critérios especificados no <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> expressão regular.</span><span class="sxs-lookup"><span data-stu-id="c1bce-207">The generated parameter name meets the criteria specified in the <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> regular expression.</span></span>  
  
-   <span data-ttu-id="c1bce-208">Um <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> é especificado.</span><span class="sxs-lookup"><span data-stu-id="c1bce-208">A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> is specified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetParameterName">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c1bce-209">Returns the name of the specified parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-209">Returns the name of the specified parameter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected abstract string GetParameterName (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetParameterName(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetParameterName (parameterOrdinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::String ^ GetParameterName(int parameterOrdinal);" />
      <MemberSignature Language="F#" Value="abstract member GetParameterName : int -&gt; string" Usage="dbCommandBuilder.GetParameterName parameterOrdinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal">
          <span data-ttu-id="c1bce-210">The number to be included as part of the parameter's name..</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-210">The number to be included as part of the parameter's name..</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1bce-211">Returns the name of the specified parameter in the format of @p*#*.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-211">Returns the name of the specified parameter in the format of @p*#*.</span>
          </span>
          <span data-ttu-id="c1bce-212">Use when building a custom command builder.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-212">Use when building a custom command builder.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1bce-213">The name of the parameter with the specified number appended as part of the parameter name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-213">The name of the parameter with the specified number appended as part of the parameter name.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected abstract string GetParameterName (string parameterName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetParameterName(string parameterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetParameterName (parameterName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::String ^ GetParameterName(System::String ^ parameterName);" />
      <MemberSignature Language="F#" Value="abstract member GetParameterName : string -&gt; string" Usage="dbCommandBuilder.GetParameterName parameterName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameterName">
          <span data-ttu-id="c1bce-214">The partial name of the parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-214">The partial name of the parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1bce-215">Returns the full parameter name, given the partial parameter name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-215">Returns the full parameter name, given the partial parameter name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1bce-216">The full parameter name corresponding to the partial parameter name requested.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-216">The full parameter name corresponding to the partial parameter name requested.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterPlaceholder">
      <MemberSignature Language="C#" Value="protected abstract string GetParameterPlaceholder (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetParameterPlaceholder(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetParameterPlaceholder (parameterOrdinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::String ^ GetParameterPlaceholder(int parameterOrdinal);" />
      <MemberSignature Language="F#" Value="abstract member GetParameterPlaceholder : int -&gt; string" Usage="dbCommandBuilder.GetParameterPlaceholder parameterOrdinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal">
          <span data-ttu-id="c1bce-217">The number to be included as part of the parameter's name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-217">The number to be included as part of the parameter's name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1bce-218">Returns the placeholder for the parameter in the associated SQL statement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-218">Returns the placeholder for the parameter in the associated SQL statement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1bce-219">The name of the parameter with the specified number appended.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-219">The name of the parameter with the specified number appended.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1bce-220">Este método destina-se ao uso por criadores de provedor a criação de um construtor de comando personalizado.</span><span class="sxs-lookup"><span data-stu-id="c1bce-220">This method is intended for use by provider writers building a custom command builder.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTable">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataTable GetSchemaTable (System.Data.Common.DbCommand sourceCommand);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataTable GetSchemaTable(class System.Data.Common.DbCommand sourceCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetSchemaTable (sourceCommand As DbCommand) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::DataTable ^ GetSchemaTable(System::Data::Common::DbCommand ^ sourceCommand);" />
      <MemberSignature Language="F#" Value="abstract member GetSchemaTable : System.Data.Common.DbCommand -&gt; System.Data.DataTable&#xA;override this.GetSchemaTable : System.Data.Common.DbCommand -&gt; System.Data.DataTable" Usage="dbCommandBuilder.GetSchemaTable sourceCommand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceCommand" Type="System.Data.Common.DbCommand" />
      </Parameters>
      <Docs>
        <param name="sourceCommand">
          <span data-ttu-id="c1bce-221">The <see cref="T:System.Data.Common.DbCommand" /> for which to retrieve the corresponding schema table.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-221">The <see cref="T:System.Data.Common.DbCommand" /> for which to retrieve the corresponding schema table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1bce-222">Returns the schema table for the <see cref="T:System.Data.Common.DbCommandBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-222">Returns the schema table for the <see cref="T:System.Data.Common.DbCommandBuilder" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1bce-223">A <see cref="T:System.Data.DataTable" /> that represents the schema for the specific <see cref="T:System.Data.Common.DbCommand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-223">A <see cref="T:System.Data.DataTable" /> that represents the schema for the specific <see cref="T:System.Data.Common.DbCommand" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1bce-224">Este método destina-se ao uso por criadores de provedor a criação de um construtor de comando personalizado.</span><span class="sxs-lookup"><span data-stu-id="c1bce-224">This method is intended for use by provider writers building a custom command builder.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUpdateCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c1bce-225">Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform updates at the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-225">Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform updates at the data source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1bce-226">Um aplicativo pode usar o <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> método para solução de problemas ou informativas fins porque ele retorna o <xref:System.Data.Common.DbCommand> objeto a ser executado.</span><span class="sxs-lookup"><span data-stu-id="c1bce-226">An application can use the <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.Common.DbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="c1bce-227">Você também pode usar <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> como a base de um comando modificado.</span><span class="sxs-lookup"><span data-stu-id="c1bce-227">You can also use <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="c1bce-228">Por exemplo, você pode chamar <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> modificar o texto do comando e, em seguida, definir explicitamente que o <xref:System.Data.Common.DbDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="c1bce-228">For example, you might call <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> and modify the command text, and then explicitly set that on the <xref:System.Data.Common.DbDataAdapter>.</span></span>  
  
 <span data-ttu-id="c1bce-229">Depois que a instrução SQL é gerada pela primeira vez, o aplicativo deve chamar explicitamente <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> se ele altera a instrução de forma alguma.</span><span class="sxs-lookup"><span data-stu-id="c1bce-229">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="c1bce-230">Caso contrário, o <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> ainda usarão informações da instrução anterior, que pode não estar correta.</span><span class="sxs-lookup"><span data-stu-id="c1bce-230">Otherwise, the <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> will still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="c1bce-231">As instruções SQL são geradas quando o aplicativo chama <xref:System.Data.Common.DbDataAdapter.Update%2A> ou <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="c1bce-231">The SQL statements are first generated either when the application calls <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>.</span></span>  
  
 <span data-ttu-id="c1bce-232">O comportamento padrão, ao gerar nomes de parâmetros, é usar @p1, @p2, e assim por diante para os vários parâmetros.</span><span class="sxs-lookup"><span data-stu-id="c1bce-232">The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters.</span></span> <span data-ttu-id="c1bce-233">Se a versão sobrecarregada de <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> permite que você especificar esse comportamento, você pode fazer com que o <xref:System.Data.Common.DbCommandBuilder> para gerar os parâmetros com base nos nomes de coluna em vez disso.</span><span class="sxs-lookup"><span data-stu-id="c1bce-233">If the overloaded version of <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> allows you to specify this behavior, you can cause the <xref:System.Data.Common.DbCommandBuilder> to generate parameters based on the column names instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetUpdateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetUpdateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdateCommand () As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetUpdateCommand();" />
      <MemberSignature Language="F#" Value="member this.GetUpdateCommand : unit -&gt; System.Data.Common.DbCommand" Usage="dbCommandBuilder.GetUpdateCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c1bce-234">Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform updates at the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-234">Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform updates at the data source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1bce-235">The automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform updates.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-235">The automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform updates.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1bce-236">Um aplicativo pode usar o <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> método para solução de problemas ou informativas fins porque ele retorna o <xref:System.Data.Common.DbCommand> objeto a ser executado.</span><span class="sxs-lookup"><span data-stu-id="c1bce-236">An application can use the <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.Common.DbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="c1bce-237">Você também pode usar <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> como a base de um comando modificado.</span><span class="sxs-lookup"><span data-stu-id="c1bce-237">You can also use <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="c1bce-238">Por exemplo, você pode chamar <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> modificar o texto do comando e, em seguida, definir explicitamente que o <xref:System.Data.Common.DbDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="c1bce-238">For example, you might call <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> and modify the command text, and then explicitly set that on the <xref:System.Data.Common.DbDataAdapter>.</span></span>  
  
 <span data-ttu-id="c1bce-239">Depois que a instrução SQL é gerada pela primeira vez, o aplicativo deve chamar explicitamente <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> se ele altera a instrução de forma alguma.</span><span class="sxs-lookup"><span data-stu-id="c1bce-239">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="c1bce-240">Caso contrário, o <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> ainda usarão informações da instrução anterior, que pode não estar correta.</span><span class="sxs-lookup"><span data-stu-id="c1bce-240">Otherwise, the <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> will still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="c1bce-241">As instruções SQL são geradas quando o aplicativo chama <xref:System.Data.Common.DbDataAdapter.Update%2A> ou <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="c1bce-241">The SQL statements are first generated either when the application calls <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetUpdateCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetUpdateCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdateCommand (useColumnsForParameterNames As Boolean) As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetUpdateCommand(bool useColumnsForParameterNames);" />
      <MemberSignature Language="F#" Value="member this.GetUpdateCommand : bool -&gt; System.Data.Common.DbCommand" Usage="dbCommandBuilder.GetUpdateCommand useColumnsForParameterNames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">
          <span data-ttu-id="c1bce-242">If <see langword="true" />, generate parameter names matching column names, if possible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-242">If <see langword="true" />, generate parameter names matching column names, if possible.</span>
          </span>
          <span data-ttu-id="c1bce-243">If <see langword="false" />, generate @p1, @p2, and so on.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-243">If <see langword="false" />, generate @p1, @p2, and so on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1bce-244">Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform updates at the data source, optionally using columns for parameter names.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-244">Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform updates at the data source, optionally using columns for parameter names.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1bce-245">The automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform updates.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-245">The automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform updates.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1bce-246">Um aplicativo pode usar o <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> método para solução de problemas ou informativas fins porque ele retorna o <xref:System.Data.Common.DbCommand> objeto a ser executado.</span><span class="sxs-lookup"><span data-stu-id="c1bce-246">An application can use the <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.Common.DbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="c1bce-247">Você também pode usar <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> como a base de um comando modificado.</span><span class="sxs-lookup"><span data-stu-id="c1bce-247">You can also use <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="c1bce-248">Por exemplo, você pode chamar <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> modificar o texto de comando e, em seguida, definir explicitamente que o <xref:System.Data.Common.DbDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="c1bce-248">For example, you might call <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> and modify command text, and then explicitly set that on the <xref:System.Data.Common.DbDataAdapter>.</span></span>  
  
 <span data-ttu-id="c1bce-249">Depois que a instrução SQL é gerada pela primeira vez, o aplicativo deve chamar explicitamente <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> se ele altera a instrução de forma alguma.</span><span class="sxs-lookup"><span data-stu-id="c1bce-249">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="c1bce-250">Caso contrário, o <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> ainda usarão informações da instrução anterior, que pode não estar correta.</span><span class="sxs-lookup"><span data-stu-id="c1bce-250">Otherwise, the <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> will still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="c1bce-251">As instruções SQL são geradas quando o aplicativo chama <xref:System.Data.Common.DbDataAdapter.Update%2A> ou <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="c1bce-251">The SQL statements are first generated either when the application calls <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>.</span></span>  
  
 <span data-ttu-id="c1bce-252">O comportamento padrão, ao gerar nomes de parâmetros, é usar @p1, @p2, e assim por diante para os vários parâmetros.</span><span class="sxs-lookup"><span data-stu-id="c1bce-252">The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters.</span></span> <span data-ttu-id="c1bce-253">Passando `true` para o `useColumnsForParameterNames` parâmetro permite forçar o <xref:System.Data.Common.DbCommandBuilder> para gerar os parâmetros com base nos nomes de coluna em vez disso.</span><span class="sxs-lookup"><span data-stu-id="c1bce-253">Passing `true` for the `useColumnsForParameterNames` parameter allows you to force the <xref:System.Data.Common.DbCommandBuilder> to generate parameters based on the column names instead.</span></span> <span data-ttu-id="c1bce-254">Geração de parâmetros com base nos nomes de coluna terá êxito apenas se as seguintes condições forem atendidas:</span><span class="sxs-lookup"><span data-stu-id="c1bce-254">Generation of the parameters based on column names succeeds only if the following conditions are met:</span></span>  
  
-   <span data-ttu-id="c1bce-255">O <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> foi especificado e seu comprimento é igual ou maior que o nome do parâmetro gerado.</span><span class="sxs-lookup"><span data-stu-id="c1bce-255">The <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> has been specified and its length is equal to or greater than the generated parameter name.</span></span>  
  
-   <span data-ttu-id="c1bce-256">O nome do parâmetro gerado atende aos critérios especificados no <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> expressão regular.</span><span class="sxs-lookup"><span data-stu-id="c1bce-256">The generated parameter name meets the criteria specified in the <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> regular expression.</span></span>  
  
-   <span data-ttu-id="c1bce-257">Um <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> é especificado.</span><span class="sxs-lookup"><span data-stu-id="c1bce-257">A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> is specified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeCommand">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.DbCommand InitializeCommand (System.Data.Common.DbCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.DbCommand InitializeCommand(class System.Data.Common.DbCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function InitializeCommand (command As DbCommand) As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::DbCommand ^ InitializeCommand(System::Data::Common::DbCommand ^ command);" />
      <MemberSignature Language="F#" Value="abstract member InitializeCommand : System.Data.Common.DbCommand -&gt; System.Data.Common.DbCommand&#xA;override this.InitializeCommand : System.Data.Common.DbCommand -&gt; System.Data.Common.DbCommand" Usage="dbCommandBuilder.InitializeCommand command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="c1bce-258">The <see cref="T:System.Data.Common.DbCommand" /> to be used by the command builder for the corresponding insert, update, or delete command.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-258">The <see cref="T:System.Data.Common.DbCommand" /> to be used by the command builder for the corresponding insert, update, or delete command.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1bce-259">Resets the <see cref="P:System.Data.Common.DbCommand.CommandTimeout" />, <see cref="P:System.Data.Common.DbCommand.Transaction" />, <see cref="P:System.Data.Common.DbCommand.CommandType" />, and <see cref="T:System.Data.UpdateRowSource" /> properties on the <see cref="T:System.Data.Common.DbCommand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-259">Resets the <see cref="P:System.Data.Common.DbCommand.CommandTimeout" />, <see cref="P:System.Data.Common.DbCommand.Transaction" />, <see cref="P:System.Data.Common.DbCommand.CommandType" />, and <see cref="T:System.Data.UpdateRowSource" /> properties on the <see cref="T:System.Data.Common.DbCommand" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1bce-260">A <see cref="T:System.Data.Common.DbCommand" /> instance to use for each insert, update, or delete operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-260">A <see cref="T:System.Data.Common.DbCommand" /> instance to use for each insert, update, or delete operation.</span>
          </span>
          <span data-ttu-id="c1bce-261">Passing a null value allows the <see cref="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)" /> method to create a <see cref="T:System.Data.Common.DbCommand" /> object based on the Select command associated with the <see cref="T:System.Data.Common.DbCommandBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-261">Passing a null value allows the <see cref="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)" /> method to create a <see cref="T:System.Data.Common.DbCommand" /> object based on the Select command associated with the <see cref="T:System.Data.Common.DbCommandBuilder" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1bce-262">Este método destina-se ao uso por criadores de provedor a criação de um construtor de comando personalizado.</span><span class="sxs-lookup"><span data-stu-id="c1bce-262">This method is intended for use by provider writers building a custom command builder.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QuoteIdentifier">
      <MemberSignature Language="C#" Value="public virtual string QuoteIdentifier (string unquotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string QuoteIdentifier(string unquotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.QuoteIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function QuoteIdentifier (unquotedIdentifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ QuoteIdentifier(System::String ^ unquotedIdentifier);" />
      <MemberSignature Language="F#" Value="abstract member QuoteIdentifier : string -&gt; string&#xA;override this.QuoteIdentifier : string -&gt; string" Usage="dbCommandBuilder.QuoteIdentifier unquotedIdentifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unquotedIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unquotedIdentifier">
          <span data-ttu-id="c1bce-263">The original unquoted identifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-263">The original unquoted identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1bce-264">Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier, including properly escaping any embedded quotes in the identifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-264">Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier, including properly escaping any embedded quotes in the identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1bce-265">The quoted version of the identifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-265">The quoted version of the identifier.</span>
          </span>
          <span data-ttu-id="c1bce-266">Embedded quotes within the identifier are properly escaped.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-266">Embedded quotes within the identifier are properly escaped.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuotePrefix">
      <MemberSignature Language="C#" Value="public virtual string QuotePrefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string QuotePrefix" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.QuotePrefix" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property QuotePrefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ QuotePrefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.QuotePrefix : string with get, set" Usage="System.Data.Common.DbCommandBuilder.QuotePrefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c1bce-267">Gets or sets the beginning character or characters to use when specifying database objects (for example, tables or columns) whose names contain characters such as spaces or reserved tokens.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-267">Gets or sets the beginning character or characters to use when specifying database objects (for example, tables or columns) whose names contain characters such as spaces or reserved tokens.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c1bce-268">O caractere inicial ou caracteres a serem usados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-268">The beginning character or characters to use.</span>
          </span>
          <span data-ttu-id="c1bce-269">O padrão é uma cadeia de caracteres vazia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-269">The default is an empty string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1bce-270">Algumas fontes de dados podem ter objetos que podem conter caracteres como espaços, vírgulas e ponto e vírgula.</span><span class="sxs-lookup"><span data-stu-id="c1bce-270">Some data sources may have objects that can contain characters such as spaces, commas, and semicolons.</span></span> <span data-ttu-id="c1bce-271">Para acomodar esse recurso, use o <xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A> e <xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A> propriedades para especificar os delimitadores, como um colchete esquerdo e um colchete direito para encapsular o nome do objeto.</span><span class="sxs-lookup"><span data-stu-id="c1bce-271">To accommodate this capability, use the <xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A> and <xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A> properties to specify delimiters such as a left bracket and a right bracket to encapsulate the object name.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1bce-272">Embora você não pode alterar o <xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A> ou <xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A> propriedades após uma inserção, atualização ou exclusão comando tiver sido gerado, você pode alterar suas configurações após a chamada a `Update` método de um <xref:System.Data.Common.DbDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="c1bce-272">Although you cannot change the <xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A> or <xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A> properties after an insert, update, or delete command has been generated, you can change their settings after calling the `Update` method of a <xref:System.Data.Common.DbDataAdapter>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c1bce-273">This property cannot be changed after an insert, update, or delete command has been generated.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-273">This property cannot be changed after an insert, update, or delete command has been generated.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="QuoteSuffix">
      <MemberSignature Language="C#" Value="public virtual string QuoteSuffix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string QuoteSuffix" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.QuoteSuffix" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property QuoteSuffix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ QuoteSuffix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.QuoteSuffix : string with get, set" Usage="System.Data.Common.DbCommandBuilder.QuoteSuffix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c1bce-274">Gets or sets the ending character or characters to use when specifying database objects (for example, tables or columns) whose names contain characters such as spaces or reserved tokens.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-274">Gets or sets the ending character or characters to use when specifying database objects (for example, tables or columns) whose names contain characters such as spaces or reserved tokens.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c1bce-275">O caractere ou caracteres a serem usados finais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-275">The ending character or characters to use.</span>
          </span>
          <span data-ttu-id="c1bce-276">O padrão é uma cadeia de caracteres vazia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-276">The default is an empty string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1bce-277">Algumas fontes de dados podem ter objetos que podem conter caracteres como espaços, vírgulas e ponto e vírgula.</span><span class="sxs-lookup"><span data-stu-id="c1bce-277">Some data sources may have objects that can contain characters such as spaces, commas, and semicolons.</span></span> <span data-ttu-id="c1bce-278">Para acomodar esse recurso, use o <xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A> e <xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A> propriedades para especificar os delimitadores, como um colchete esquerdo e um colchete direito para encapsular o nome do objeto.</span><span class="sxs-lookup"><span data-stu-id="c1bce-278">To accommodate this capability, use the <xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A> and <xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A> properties to specify delimiters such as a left bracket and a right bracket to encapsulate the object name.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1bce-279">Embora você não pode alterar o <xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A> ou <xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A> propriedades após uma inserção, atualização ou exclusão comando tiver sido gerado, você pode alterar suas configurações após a chamada a `Update` método de um <xref:System.Data.Common.DbDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="c1bce-279">Although you cannot change the <xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A> or <xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A> properties after an insert, update, or delete command has been generated, you can change their settings after calling the `Update` method of a <xref:System.Data.Common.DbDataAdapter>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshSchema">
      <MemberSignature Language="C#" Value="public virtual void RefreshSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RefreshSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.RefreshSchema" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RefreshSchema ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RefreshSchema();" />
      <MemberSignature Language="F#" Value="abstract member RefreshSchema : unit -&gt; unit&#xA;override this.RefreshSchema : unit -&gt; unit" Usage="dbCommandBuilder.RefreshSchema " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c1bce-280">Clears the commands associated with this <see cref="T:System.Data.Common.DbCommandBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-280">Clears the commands associated with this <see cref="T:System.Data.Common.DbCommandBuilder" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1bce-281">Chamar o <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> método remove efetivamente todos os as <xref:System.Data.Common.DbCommand> objetos referenciados pelo <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>,</span><span class="sxs-lookup"><span data-stu-id="c1bce-281">Calling the <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> method effectively removes all the <xref:System.Data.Common.DbCommand> objects referred to by the <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>,</span></span>  
  
 <span data-ttu-id="c1bce-282"><xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A>,</span><span class="sxs-lookup"><span data-stu-id="c1bce-282"><xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A>,</span></span>  
  
 <span data-ttu-id="c1bce-283"><xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A>, e</span><span class="sxs-lookup"><span data-stu-id="c1bce-283"><xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A>, and</span></span>  
  
 <span data-ttu-id="c1bce-284"><xref:System.Data.Common.DbDataAdapter.InsertCommand%2A> Propriedades.</span><span class="sxs-lookup"><span data-stu-id="c1bce-284"><xref:System.Data.Common.DbDataAdapter.InsertCommand%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowUpdatingHandler">
      <MemberSignature Language="C#" Value="protected void RowUpdatingHandler (System.Data.Common.RowUpdatingEventArgs rowUpdatingEvent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RowUpdatingHandler(class System.Data.Common.RowUpdatingEventArgs rowUpdatingEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RowUpdatingHandler (rowUpdatingEvent As RowUpdatingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RowUpdatingHandler(System::Data::Common::RowUpdatingEventArgs ^ rowUpdatingEvent);" />
      <MemberSignature Language="F#" Value="member this.RowUpdatingHandler : System.Data.Common.RowUpdatingEventArgs -&gt; unit" Usage="dbCommandBuilder.RowUpdatingHandler rowUpdatingEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowUpdatingEvent" Type="System.Data.Common.RowUpdatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="rowUpdatingEvent">
          <span data-ttu-id="c1bce-285">A <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> instance containing information about the event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-285">A <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> instance containing information about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1bce-286">Adds an event handler for the <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-286">Adds an event handler for the <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaSeparator">
      <MemberSignature Language="C#" Value="public virtual string SchemaSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SchemaSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.SchemaSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SchemaSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SchemaSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SchemaSeparator : string with get, set" Usage="System.Data.Common.DbCommandBuilder.SchemaSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(".")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c1bce-287">Gets or sets the character to be used for the separator between the schema identifier and any other identifiers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-287">Gets or sets the character to be used for the separator between the schema identifier and any other identifiers.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c1bce-288">O caractere a ser usado como separador de esquema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-288">The character to be used as the schema separator.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1bce-289">Geralmente, servidores de banco de dados indicam que o esquema para um identificador, separando o nome do esquema do identificador com algum caractere.</span><span class="sxs-lookup"><span data-stu-id="c1bce-289">Generally, database servers indicate the schema for an identifier by separating the schema name from the identifier with some character.</span></span> <span data-ttu-id="c1bce-290">Por exemplo, o SQL Server usa dois-pontos, a criação de identificadores completos, como **pessoa: CustomerName**, onde "Person" é o nome do esquema, e "CustomerName" é o identificador.</span><span class="sxs-lookup"><span data-stu-id="c1bce-290">For example, SQL Server uses a colon, creating complete identifiers such as **Person:CustomerName**, where "Person" is the schema name and "CustomerName" is the identifier.</span></span> <span data-ttu-id="c1bce-291">Definir essa propriedade permite aos desenvolvedores modificar esse comportamento.</span><span class="sxs-lookup"><span data-stu-id="c1bce-291">Setting this property allows developers to modify this behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAllValues">
      <MemberSignature Language="C#" Value="public bool SetAllValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SetAllValues" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.SetAllValues" />
      <MemberSignature Language="VB.NET" Value="Public Property SetAllValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SetAllValues { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SetAllValues : bool with get, set" Usage="System.Data.Common.DbCommandBuilder.SetAllValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c1bce-292">Specifies whether all column values in an update statement are included or only changed ones.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-292">Specifies whether all column values in an update statement are included or only changed ones.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c1bce-293">
            <see langword="true" /> se a declaração de atualização gerada pelo <see cref="T:System.Data.Common.DbCommandBuilder" /> incluir todas as colunas; <see langword="false" /> se ela incluir apenas as colunas alteradas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-293">
              <see langword="true" /> if the UPDATE statement generated by the <see cref="T:System.Data.Common.DbCommandBuilder" /> includes all columns; <see langword="false" /> if it includes only changed columns.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1bce-294">A instrução UPDATE gerada por um <xref:System.Data.Common.DbCommandBuilder> pode incluir informações de atualização sobre todas as colunas, ou você pode incluir informações somente sobre as colunas cujos valores foram alterados.</span><span class="sxs-lookup"><span data-stu-id="c1bce-294">The UPDATE statement generated by a <xref:System.Data.Common.DbCommandBuilder> can include update information about all the columns, or it can include information only about those columns whose values have changed.</span></span> <span data-ttu-id="c1bce-295">Definindo o <xref:System.Data.Common.DbCommandBuilder.SetAllValues%2A> propriedade para `true` faz com que a instrução UPDATE gerada incluir todas as colunas, se seus valores foram alterados ou não.</span><span class="sxs-lookup"><span data-stu-id="c1bce-295">Setting the <xref:System.Data.Common.DbCommandBuilder.SetAllValues%2A> property to `true` causes the generated UPDATE statement to include all the columns, whether their values have changed or not.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRowUpdatingHandler">
      <MemberSignature Language="C#" Value="protected abstract void SetRowUpdatingHandler (System.Data.Common.DbDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetRowUpdatingHandler(class System.Data.Common.DbDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub SetRowUpdatingHandler (adapter As DbDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void SetRowUpdatingHandler(System::Data::Common::DbDataAdapter ^ adapter);" />
      <MemberSignature Language="F#" Value="abstract member SetRowUpdatingHandler : System.Data.Common.DbDataAdapter -&gt; unit" Usage="dbCommandBuilder.SetRowUpdatingHandler adapter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.Common.DbDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter">
          <span data-ttu-id="c1bce-296">The <see cref="T:System.Data.Common.DbDataAdapter" /> to be used for the update.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-296">The <see cref="T:System.Data.Common.DbDataAdapter" /> to be used for the update.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1bce-297">Registers the <see cref="T:System.Data.Common.DbCommandBuilder" /> to handle the <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /> event for a <see cref="T:System.Data.Common.DbDataAdapter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-297">Registers the <see cref="T:System.Data.Common.DbCommandBuilder" /> to handle the <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /> event for a <see cref="T:System.Data.Common.DbDataAdapter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1bce-298">Este método destina-se ao uso por criadores de provedor a criação de um construtor de comando personalizado.</span><span class="sxs-lookup"><span data-stu-id="c1bce-298">This method is intended for use by provider writers building a custom command builder.</span></span> <span data-ttu-id="c1bce-299">Quando um novo <xref:System.Data.Common.DbDataAdapter> é adicionado para o <xref:System.Data.Common.DbCommandBuilder>, ele é registrado para o DbDataAdapter **RowUpdating** eventos.</span><span class="sxs-lookup"><span data-stu-id="c1bce-299">When a new <xref:System.Data.Common.DbDataAdapter> is added to the <xref:System.Data.Common.DbCommandBuilder>, it is registered for the DbDataAdapter's **RowUpdating** event.</span></span> <span data-ttu-id="c1bce-300">Se esse método é chamado novamente com o mesmo <xref:System.Data.Common.DbDataAdapter>, o <xref:System.Data.Common.DbCommandBuilder> cancelamento do registro para esse DbDataAdapter **RowUpdating** eventos.</span><span class="sxs-lookup"><span data-stu-id="c1bce-300">If this method is called again with the same <xref:System.Data.Common.DbDataAdapter>, the <xref:System.Data.Common.DbCommandBuilder> is unregistered for that DbDataAdapter's **RowUpdating** event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnquoteIdentifier">
      <MemberSignature Language="C#" Value="public virtual string UnquoteIdentifier (string quotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string UnquoteIdentifier(string quotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.UnquoteIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UnquoteIdentifier (quotedIdentifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ UnquoteIdentifier(System::String ^ quotedIdentifier);" />
      <MemberSignature Language="F#" Value="abstract member UnquoteIdentifier : string -&gt; string&#xA;override this.UnquoteIdentifier : string -&gt; string" Usage="dbCommandBuilder.UnquoteIdentifier quotedIdentifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quotedIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="quotedIdentifier">
          <span data-ttu-id="c1bce-301">The identifier that will have its embedded quotes removed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-301">The identifier that will have its embedded quotes removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1bce-302">Given a quoted identifier, returns the correct unquoted form of that identifier, including properly un-escaping any embedded quotes in the identifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-302">Given a quoted identifier, returns the correct unquoted form of that identifier, including properly un-escaping any embedded quotes in the identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1bce-303">The unquoted identifier, with embedded quotes properly un-escaped.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1bce-303">The unquoted identifier, with embedded quotes properly un-escaped.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>