<Type Name="DbEnumerator" FullName="System.Data.Common.DbEnumerator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e0bd8241f659b6400cbcaf4c2f4a9c356a8b234b" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57950922" /></Metadata><TypeSignature Language="C#" Value="public class DbEnumerator : System.Collections.IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DbEnumerator extends System.Object implements class System.Collections.IEnumerator" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.DbEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public Class DbEnumerator&#xA;Implements IEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbEnumerator : System::Collections::IEnumerator" />
  <TypeSignature Language="F#" Value="type DbEnumerator = class&#xA;    interface IEnumerator" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="39be2-101">Expõe o método <see cref="M:System.Collections.IEnumerable.GetEnumerator" />, que dá suporte a uma iteração simples em uma coleção por um provedor de dados .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="39be2-101">Exposes the <see cref="M:System.Collections.IEnumerable.GetEnumerator" /> method, which supports a simple iteration over a collection by a .NET Framework data provider.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39be2-102">O <xref:System.Data.Common.DbEnumerator> classe é implementada pelo provedor de dados .NET Framework para oferecer suporte à associação de dados.</span><span class="sxs-lookup"><span data-stu-id="39be2-102">The <xref:System.Data.Common.DbEnumerator> class is implemented by a .NET Framework data provider to provide data binding support.</span></span>  
  
 <span data-ttu-id="39be2-103">Por design, o <xref:System.Data.Common.DbEnumerator> objeto é destinado para uso com apenas um conjunto de resultados.</span><span class="sxs-lookup"><span data-stu-id="39be2-103">By design, the <xref:System.Data.Common.DbEnumerator> object is intended for use with only one resultset.</span></span> <span data-ttu-id="39be2-104">Por exemplo, se você executar uma instrução de lote que contém duas instruções SQL SELECT que retornam esquemas diferentes, a segunda instrução pode retornar o esquema inteiro.</span><span class="sxs-lookup"><span data-stu-id="39be2-104">For example, if you execute a batch statement containing two SQL SELECT statements that return different schemas, the second statement might not retun the entire schema.</span></span> <span data-ttu-id="39be2-105">Para evitar essa situação, obter um <xref:System.Data.Common.DbEnumerator> para cada conjunto de resultados e, em seguida, chame o `NextResult` método de um objeto de DataReader do provedor de dados .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="39be2-105">To avoid this situation, obtain a <xref:System.Data.Common.DbEnumerator> for each resultset, and then call the `NextResult` method of a .NET Framework data provider DataReader object.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="39be2-106">Visão geral do ADO.NET</span><span class="sxs-lookup"><span data-stu-id="39be2-106">ADO.NET Overview</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="39be2-107">Inicializa uma nova instância da classe <see cref="T:System.Data.Common.DbEnumerator" />.</span><span class="sxs-lookup"><span data-stu-id="39be2-107">Initializes a new instance of the <see cref="T:System.Data.Common.DbEnumerator" /> class.</span></span></summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="39be2-108">Visão geral do ADO.NET</span><span class="sxs-lookup"><span data-stu-id="39be2-108">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DbEnumerator (System.Data.Common.DbDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Common.DbDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As DbDataReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DbEnumerator(System::Data::Common::DbDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="new System.Data.Common.DbEnumerator : System.Data.Common.DbDataReader -&gt; System.Data.Common.DbEnumerator" Usage="new System.Data.Common.DbEnumerator reader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="39be2-109">O DataReader por meio do qual iterar.</span><span class="sxs-lookup"><span data-stu-id="39be2-109">The DataReader through which to iterate.</span></span></param>
        <summary><span data-ttu-id="39be2-110">Inicializa uma nova instância da classe <see cref="T:System.Data.Common.DbEnumerator" /> com o leitor de dados fornecido.</span><span class="sxs-lookup"><span data-stu-id="39be2-110">Initializes a new instance of the <see cref="T:System.Data.Common.DbEnumerator" /> class with the give n data reader.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DbEnumerator (System.Data.IDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.IDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As IDataReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DbEnumerator(System::Data::IDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="new System.Data.Common.DbEnumerator : System.Data.IDataReader -&gt; System.Data.Common.DbEnumerator" Usage="new System.Data.Common.DbEnumerator reader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.IDataReader" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="39be2-111">O <see langword="DataReader" /> por meio do qual iterar.</span><span class="sxs-lookup"><span data-stu-id="39be2-111">The <see langword="DataReader" /> through which to iterate.</span></span></param>
        <summary><span data-ttu-id="39be2-112">Inicializa uma nova instância da classe <see cref="T:System.Data.Common.DbEnumerator" /> usando o <see langword="DataReader" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="39be2-112">Initializes a new instance of the <see cref="T:System.Data.Common.DbEnumerator" /> class using the specified <see langword="DataReader" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="39be2-113">Visão geral do ADO.NET</span><span class="sxs-lookup"><span data-stu-id="39be2-113">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DbEnumerator (System.Data.Common.DbDataReader reader, bool closeReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Common.DbDataReader reader, bool closeReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As DbDataReader, closeReader As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DbEnumerator(System::Data::Common::DbDataReader ^ reader, bool closeReader);" />
      <MemberSignature Language="F#" Value="new System.Data.Common.DbEnumerator : System.Data.Common.DbDataReader * bool -&gt; System.Data.Common.DbEnumerator" Usage="new System.Data.Common.DbEnumerator (reader, closeReader)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="closeReader" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="39be2-114">O DataReader por meio do qual iterar.</span><span class="sxs-lookup"><span data-stu-id="39be2-114">The DataReader through which to iterate.</span></span></param>
        <param name="closeReader"><span data-ttu-id="39be2-115"><see langword="true" /> para fechar automaticamente o DataReader após iterar por seus dados, caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="39be2-115"><see langword="true" /> to automatically close the DataReader after iterating through its data; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="39be2-116">Inicializa uma nova instância da classe <see cref="T:System.Data.Common.DbEnumerator" /> usando o leitor especificado e indica se deve fechar o leitor automaticamente após a iteração por meio de seus dados.</span><span class="sxs-lookup"><span data-stu-id="39be2-116">Initializes a new instance of the <see cref="T:System.Data.Common.DbEnumerator" /> class using the specified reader and indicates whether to automatically close the reader after iterating through its data.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DbEnumerator (System.Data.IDataReader reader, bool closeReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.IDataReader reader, bool closeReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As IDataReader, closeReader As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DbEnumerator(System::Data::IDataReader ^ reader, bool closeReader);" />
      <MemberSignature Language="F#" Value="new System.Data.Common.DbEnumerator : System.Data.IDataReader * bool -&gt; System.Data.Common.DbEnumerator" Usage="new System.Data.Common.DbEnumerator (reader, closeReader)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.IDataReader" />
        <Parameter Name="closeReader" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="39be2-117">O <see langword="DataReader" /> por meio do qual iterar.</span><span class="sxs-lookup"><span data-stu-id="39be2-117">The <see langword="DataReader" /> through which to iterate.</span></span></param>
        <param name="closeReader"><span data-ttu-id="39be2-118"><see langword="true" /> para fechar automaticamente o <see langword="DataReader" /> após iterar por seus dados, caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="39be2-118"><see langword="true" /> to automatically close the <see langword="DataReader" /> after iterating through its data; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="39be2-119">Inicializa uma nova instância da classe <see cref="T:System.Data.Common.DbEnumerator" /> usando o <see langword="DataReader" /> especificado e indica se deve fechar o <see langword="DataReader" /> automaticamente após a iteração por meio de seus dados.</span><span class="sxs-lookup"><span data-stu-id="39be2-119">Initializes a new instance of the <see cref="T:System.Data.Common.DbEnumerator" /> class using the specified <see langword="DataReader" />, and indicates whether to automatically close the <see langword="DataReader" /> after iterating through its data.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="39be2-120">Visão geral do ADO.NET</span><span class="sxs-lookup"><span data-stu-id="39be2-120">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public object Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Current" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbEnumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : obj" Usage="System.Data.Common.DbEnumerator.Current" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="39be2-121">Obtém o elemento atual na coleção.</span><span class="sxs-lookup"><span data-stu-id="39be2-121">Gets the current element in the collection.</span></span></summary>
        <value><span data-ttu-id="39be2-122">O elemento atual na coleção.</span><span class="sxs-lookup"><span data-stu-id="39be2-122">The current element in the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39be2-123">Após a criação de um enumerador ou depois de um <xref:System.Data.Common.DbEnumerator.Reset%2A>, <xref:System.Data.Common.DbEnumerator.MoveNext%2A> deve ser chamado para avançar o enumerador para o primeiro elemento da coleção antes de ler o valor de <xref:System.Data.Common.DbEnumerator.Current%2A>; caso contrário, <xref:System.Data.Common.DbEnumerator.Current%2A> é indefinido.</span><span class="sxs-lookup"><span data-stu-id="39be2-123">After an enumerator is created or after a <xref:System.Data.Common.DbEnumerator.Reset%2A>, <xref:System.Data.Common.DbEnumerator.MoveNext%2A> must be called to advance the enumerator to the first element of the collection before reading the value of <xref:System.Data.Common.DbEnumerator.Current%2A>; otherwise, <xref:System.Data.Common.DbEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="39be2-124"><xref:System.Data.Common.DbEnumerator.Current%2A> também gera uma exceção se a última chamada para <xref:System.Data.Common.DbEnumerator.MoveNext%2A> retornou false, que indica o final da coleção.</span><span class="sxs-lookup"><span data-stu-id="39be2-124"><xref:System.Data.Common.DbEnumerator.Current%2A> also throws an exception if the last call to <xref:System.Data.Common.DbEnumerator.MoveNext%2A> returned false, which indicates the end of the collection.</span></span> <span data-ttu-id="39be2-125"><xref:System.Data.Common.DbEnumerator.Current%2A> não move a posição do enumerador e chamadas consecutivas para <xref:System.Data.Common.DbEnumerator.Current%2A> retornar o mesmo objeto até que <xref:System.Data.Common.DbEnumerator.MoveNext%2A> ou <xref:System.Data.Common.DbEnumerator.Reset%2A> é chamado.</span><span class="sxs-lookup"><span data-stu-id="39be2-125"><xref:System.Data.Common.DbEnumerator.Current%2A> does not move the position of the enumerator and consecutive calls to <xref:System.Data.Common.DbEnumerator.Current%2A> return the same object until either <xref:System.Data.Common.DbEnumerator.MoveNext%2A> or <xref:System.Data.Common.DbEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="39be2-126">Um enumerador permanece válido desde que a coleção continue inalterada.</span><span class="sxs-lookup"><span data-stu-id="39be2-126">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="39be2-127">Se forem feitas alterações à coleção, como adicionar, modificar ou excluir elementos, o enumerador será invalidado irrecuperavelmente e a próxima chamada para <xref:System.Data.Common.DbEnumerator.MoveNext%2A> ou <xref:System.Data.Common.DbEnumerator.Reset%2A> gera um <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="39be2-127">If changes are made to the collection, such as adding, modifying or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Data.Common.DbEnumerator.MoveNext%2A> or <xref:System.Data.Common.DbEnumerator.Reset%2A> generates an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="39be2-128">Se a coleção é modificada entre <xref:System.Data.Common.DbEnumerator.MoveNext%2A> e <xref:System.Data.Common.DbEnumerator.Current%2A>, <xref:System.Data.Common.DbEnumerator.Current%2A> retorna o elemento ao qual ela é definida, mesmo se o enumerador já é invalidado.</span><span class="sxs-lookup"><span data-stu-id="39be2-128">If the collection is modified between <xref:System.Data.Common.DbEnumerator.MoveNext%2A> and <xref:System.Data.Common.DbEnumerator.Current%2A>, <xref:System.Data.Common.DbEnumerator.Current%2A> returns the element to which it is set, even if the enumerator is already invalidated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="39be2-129">O enumerador é posicionado antes do primeiro elemento da coleção ou depois do último elemento.</span><span class="sxs-lookup"><span data-stu-id="39be2-129">The enumerator is positioned before the first element of the collection or after the last element.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="39be2-130">Visão geral do ADO.NET</span><span class="sxs-lookup"><span data-stu-id="39be2-130">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbEnumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool&#xA;override this.MoveNext : unit -&gt; bool" Usage="dbEnumerator.MoveNext " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="39be2-131">Avança o enumerador para o próximo elemento da coleção.</span><span class="sxs-lookup"><span data-stu-id="39be2-131">Advances the enumerator to the next element of the collection.</span></span></summary>
        <returns><span data-ttu-id="39be2-132"><see langword="true" /> se o enumerador foi avançado com êxito para o próximo elemento; <see langword="false" /> se o enumerador passou o final da coleção.</span><span class="sxs-lookup"><span data-stu-id="39be2-132"><see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39be2-133">Após a criação de um enumerador ou depois de uma chamada para <xref:System.Data.Common.DbEnumerator.Reset%2A>, um enumerador é posicionado antes do primeiro elemento da coleção e a primeira chamada para <xref:System.Data.Common.DbEnumerator.MoveNext%2A> move o enumerador sobre o primeiro elemento da coleção.</span><span class="sxs-lookup"><span data-stu-id="39be2-133">After an enumerator is created or after a call to <xref:System.Data.Common.DbEnumerator.Reset%2A>, an enumerator is positioned before the first element of the collection, and the first call to <xref:System.Data.Common.DbEnumerator.MoveNext%2A> moves the enumerator over the first element of the collection.</span></span> <span data-ttu-id="39be2-134">Depois que o final da coleção for passadas, chamadas subsequentes para <xref:System.Data.Common.DbEnumerator.MoveNext%2A> retornar false até <xref:System.Data.Common.DbEnumerator.Reset%2A> é chamado.</span><span class="sxs-lookup"><span data-stu-id="39be2-134">After the end of the collection is passed, subsequent calls to <xref:System.Data.Common.DbEnumerator.MoveNext%2A> return false until <xref:System.Data.Common.DbEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="39be2-135">Um enumerador permanece válido desde que a coleção continue inalterada.</span><span class="sxs-lookup"><span data-stu-id="39be2-135">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="39be2-136">Se forem feitas alterações à coleção, como adicionar, modificar ou excluir elementos, o enumerador será invalidado irrecuperavelmente e a próxima chamada para <xref:System.Data.Common.DbEnumerator.MoveNext%2A> ou <xref:System.Data.Common.DbEnumerator.Reset%2A> lança um <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="39be2-136">If changes are made to the collection, such as adding, modifying or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Data.Common.DbEnumerator.MoveNext%2A> or <xref:System.Data.Common.DbEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="39be2-137">A coleção foi modificada depois da criação do enumerador.</span><span class="sxs-lookup"><span data-stu-id="39be2-137">The collection was modified after the enumerator was created.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="39be2-138">Visão geral do ADO.NET</span><span class="sxs-lookup"><span data-stu-id="39be2-138">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbEnumerator.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="dbEnumerator.Reset " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="39be2-139">Define o enumerador com sua posição inicial, que é antes do primeiro elemento da coleção.</span><span class="sxs-lookup"><span data-stu-id="39be2-139">Sets the enumerator to its initial position, which is before the first element in the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39be2-140">Um enumerador permanece válido desde que a coleção continue inalterada.</span><span class="sxs-lookup"><span data-stu-id="39be2-140">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="39be2-141">Se forem feitas alterações à coleção, como adicionar, modificar ou excluir elementos, o enumerador será invalidado irrecuperavelmente e a próxima chamada para <xref:System.Data.Common.DbEnumerator.MoveNext%2A> ou <xref:System.Data.Common.DbEnumerator.Reset%2A> lança um <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="39be2-141">If changes are made to the collection, such as adding, modifying or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Data.Common.DbEnumerator.MoveNext%2A> or <xref:System.Data.Common.DbEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="39be2-142">A coleção foi modificada depois da criação do enumerador.</span><span class="sxs-lookup"><span data-stu-id="39be2-142">The collection was modified after the enumerator was created.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="39be2-143">Visão geral do ADO.NET</span><span class="sxs-lookup"><span data-stu-id="39be2-143">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>