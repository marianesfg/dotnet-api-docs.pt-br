<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DbEnumerator.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac51bde5ae17b68c87de51dbd180afb527c0932b925.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1bde5ae17b68c87de51dbd180afb527c0932b925</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DbEnumerator">
          <source>Exposes the <ph id="ph1">&lt;see cref="M:System.Collections.IEnumerable.GetEnumerator" /&gt;</ph> method, which supports a simple iteration over a collection by a .NET Framework data provider.</source>
          <target state="translated">Expõe o método <ph id="ph1">&lt;see cref="M:System.Collections.IEnumerable.GetEnumerator" /&gt;</ph>, que dá suporte a uma iteração simples em uma coleção por um provedor de dados .NET Framework.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator&gt;</ph> class is implemented by a .NET Framework data provider to provide data binding support.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator&gt;</ph> classe é implementada pelo provedor de dados .NET Framework para oferecer suporte de associação de dados.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbEnumerator">
          <source>By design, the <ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator&gt;</ph> object is intended for use with only one resultset.</source>
          <target state="translated">Por design, o <ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator&gt;</ph> objeto é destinado para uso com apenas um conjunto de resultados.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbEnumerator">
          <source>For example, if you execute a batch statement containing two SQL SELECT statements that return different schemas, the second statement might not retun the entire schema.</source>
          <target state="translated">Por exemplo, se você executar uma instrução de lote que contém duas instruções SQL SELECT que retornam esquemas diferentes, a segunda instrução pode retornar o esquema inteiro.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbEnumerator">
          <source>To avoid this situation, obtain a <ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator&gt;</ph> for each resultset, and then call the <ph id="ph2">`NextResult`</ph> method of a .NET Framework data provider DataReader object.</source>
          <target state="translated">Para evitar essa situação, obter um <ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator&gt;</ph> para cada conjunto de resultados e, em seguida, chame o <ph id="ph2">`NextResult`</ph> método de um objeto de DataReader do provedor de dados do .NET Framework.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DbEnumerator">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbEnumerator" /&gt;</ph> class.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Data.Common.DbEnumerator" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader)">
          <source>The DataReader through which to iterate.</source>
          <target state="translated">O DataReader por meio do qual iterar.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbEnumerator" /&gt;</ph> class with the give n data reader.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Data.Common.DbEnumerator" /&gt;</ph> com o leitor de dados fornecido.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader)">
          <source>The <ph id="ph1">&lt;see langword="DataReader" /&gt;</ph> through which to iterate.</source>
          <target state="translated">O <ph id="ph1">&lt;see langword="DataReader" /&gt;</ph> por meio do qual iterar.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbEnumerator" /&gt;</ph> class using the specified <ph id="ph2">&lt;see langword="DataReader" /&gt;</ph>.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Data.Common.DbEnumerator" /&gt;</ph> usando o <ph id="ph2">&lt;see langword="DataReader" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader,System.Boolean)">
          <source>The DataReader through which to iterate.</source>
          <target state="translated">O DataReader por meio do qual iterar.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to automatically close the DataReader after iterating through its data; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para fechar automaticamente o DataReader após iterar por seus dados, caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbEnumerator" /&gt;</ph> class using the specified reader and indicates whether to automatically close the reader after iterating through its data.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Data.Common.DbEnumerator" /&gt;</ph> usando o leitor especificado e indica se deve fechar o leitor automaticamente após a iteração por meio de seus dados.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader,System.Boolean)">
          <source>The <ph id="ph1">&lt;see langword="DataReader" /&gt;</ph> through which to iterate.</source>
          <target state="translated">O <ph id="ph1">&lt;see langword="DataReader" /&gt;</ph> por meio do qual iterar.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to automatically close the <ph id="ph2">&lt;see langword="DataReader" /&gt;</ph> after iterating through its data; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para fechar automaticamente o <ph id="ph2">&lt;see langword="DataReader" /&gt;</ph> após iterar por seus dados, caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbEnumerator" /&gt;</ph> class using the specified <ph id="ph2">&lt;see langword="DataReader" /&gt;</ph>, and indicates whether to automatically close the <ph id="ph3">&lt;see langword="DataReader" /&gt;</ph> after iterating through its data.</source>
          <target state="translated">Inicializa uma nova instância da classe <ph id="ph1">&lt;see cref="T:System.Data.Common.DbEnumerator" /&gt;</ph> usando o <ph id="ph2">&lt;see langword="DataReader" /&gt;</ph> especificado e indica se deve fechar o <ph id="ph3">&lt;see langword="DataReader" /&gt;</ph> automaticamente após a iteração por meio de seus dados.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbEnumerator.Current">
          <source>Gets the current element in the collection.</source>
          <target state="translated">Obtém o elemento atual na coleção.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbEnumerator.Current">
          <source>The current element in the collection.</source>
          <target state="translated">O elemento atual na coleção.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbEnumerator.Current">
          <source>After an enumerator is created or after a <ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</ph> must be called to advance the enumerator to the first element of the collection before reading the value of <ph id="ph3">&lt;xref:System.Data.Common.DbEnumerator.Current%2A&gt;</ph>; otherwise, <ph id="ph4">&lt;xref:System.Data.Common.DbEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Após a criação de um enumerador ou depois de um <ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</ph> deve ser chamado para avançar o enumerador para o primeiro elemento da coleção antes de ler o valor de <ph id="ph3">&lt;xref:System.Data.Common.DbEnumerator.Current%2A&gt;</ph>; caso contrário, <ph id="ph4">&lt;xref:System.Data.Common.DbEnumerator.Current%2A&gt;</ph> é indefinido.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbEnumerator.Current">
          <source><ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator.Current%2A&gt;</ph> also throws an exception if the last call to <ph id="ph2">&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</ph> returned false, which indicates the end of the collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator.Current%2A&gt;</ph> também gera uma exceção se a última chamada <ph id="ph2">&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</ph> retornou false, que indica o final da coleção.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbEnumerator.Current">
          <source><ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator.Current%2A&gt;</ph> does not move the position of the enumerator and consecutive calls to <ph id="ph2">&lt;xref:System.Data.Common.DbEnumerator.Current%2A&gt;</ph> return the same object until either <ph id="ph3">&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator.Current%2A&gt;</ph> não move a posição do enumerador e chamadas consecutivas para <ph id="ph2">&lt;xref:System.Data.Common.DbEnumerator.Current%2A&gt;</ph> retornar o mesmo objeto até que o <ph id="ph3">&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</ph> ou <ph id="ph4">&lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;</ph> é chamado.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbEnumerator.Current">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Um enumerador permanece válido desde que a coleção continue inalterada.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbEnumerator.Current">
          <source>If changes are made to the collection, such as adding, modifying or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;</ph> generates an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Se forem feitas alterações à coleção, como adicionar, modificar ou excluir elementos, o enumerador será invalidado irrecuperavelmente e a próxima chamada para <ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;</ph> gera um <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbEnumerator.Current">
          <source>If the collection is modified between <ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.Common.DbEnumerator.Current%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.Common.DbEnumerator.Current%2A&gt;</ph> returns the element to which it is set, even if the enumerator is already invalidated.</source>
          <target state="translated">Se a coleção é modificada entre <ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</ph> e <ph id="ph2">&lt;xref:System.Data.Common.DbEnumerator.Current%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.Common.DbEnumerator.Current%2A&gt;</ph> retorna o elemento ao qual ele é definido, mesmo se o enumerador já é invalidado.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbEnumerator.Current">
          <source>The enumerator is positioned before the first element of the collection or after the last element.</source>
          <target state="translated">O enumerador é posicionado antes do primeiro elemento da coleção ou depois do último elemento.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbEnumerator.MoveNext">
          <source>Advances the enumerator to the next element of the collection.</source>
          <target state="translated">Avança o enumerador para o próximo elemento da coleção.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbEnumerator.MoveNext">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the enumerator was successfully advanced to the next element; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the enumerator has passed the end of the collection.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o enumerador foi avançado com êxito para o próximo elemento; <ph id="ph2">&lt;see langword="false" /&gt;</ph> se o enumerador passou o final da coleção.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbEnumerator.MoveNext">
          <source>After an enumerator is created or after a call to <ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;</ph>, an enumerator is positioned before the first element of the collection, and the first call to <ph id="ph2">&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</ph> moves the enumerator over the first element of the collection.</source>
          <target state="translated">Após a criação de um enumerador ou depois de uma chamada para <ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;</ph>, um enumerador está posicionado antes do primeiro elemento da coleção e a primeira chamada para <ph id="ph2">&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</ph> move o enumerador sobre o primeiro elemento da coleção.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbEnumerator.MoveNext">
          <source>After the end of the collection is passed, subsequent calls to <ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</ph> return false until <ph id="ph2">&lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated">Depois que o final da coleção for passadas, chamadas subsequentes para <ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</ph> retornar false até <ph id="ph2">&lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;</ph> é chamado.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbEnumerator.MoveNext">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Um enumerador permanece válido desde que a coleção continue inalterada.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbEnumerator.MoveNext">
          <source>If changes are made to the collection, such as adding, modifying or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Se forem feitas alterações à coleção, como adicionar, modificar ou excluir elementos, o enumerador será invalidado irrecuperavelmente e a próxima chamada para <ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;</ph> lança um <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbEnumerator.MoveNext">
          <source>The collection was modified after the enumerator was created.</source>
          <target state="translated">A coleção foi modificada depois da criação do enumerador.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbEnumerator.Reset">
          <source>Sets the enumerator to its initial position, which is before the first element in the collection.</source>
          <target state="translated">Define o enumerador com sua posição inicial, que é antes do primeiro elemento da coleção.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbEnumerator.Reset">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Um enumerador permanece válido desde que a coleção continue inalterada.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbEnumerator.Reset">
          <source>If changes are made to the collection, such as adding, modifying or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Se forem feitas alterações à coleção, como adicionar, modificar ou excluir elementos, o enumerador será invalidado irrecuperavelmente e a próxima chamada para <ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;</ph> lança um <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbEnumerator.Reset">
          <source>The collection was modified after the enumerator was created.</source>
          <target state="translated">A coleção foi modificada depois da criação do enumerador.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>