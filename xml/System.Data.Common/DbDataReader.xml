<Type Name="DbDataReader" FullName="System.Data.Common.DbDataReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="65591f393942c0370c8a0497e357dafbb98c53b4" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37683551" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DbDataReader : MarshalByRefObject, IDisposable, System.Collections.IEnumerable, System.Data.IDataReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbDataReader extends System.MarshalByRefObject implements class System.Collections.IEnumerable, class System.Data.IDataReader, class System.Data.IDataRecord, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.DbDataReader" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DbDataReader&#xA;Inherits MarshalByRefObject&#xA;Implements IDataReader, IDisposable, IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbDataReader abstract : MarshalByRefObject, IDisposable, System::Collections::IEnumerable, System::Data::IDataReader" />
  <TypeSignature Language="F#" Value="type DbDataReader = class&#xA;    inherit MarshalByRefObject&#xA;    interface IDataReader&#xA;    interface IEnumerable&#xA;    interface IDisposable&#xA;    interface IDataRecord" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Data.IDataReader</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="14cce-101">Lê um fluxo de linhas apenas de encaminhamento a partir de uma fonte de dados.</span>
      <span class="sxs-lookup">
        <span data-stu-id="14cce-101">Reads a forward-only stream of rows from a data source.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbDataReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbDataReader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="14cce-102">Inicializa uma nova instância da classe <see cref="T:System.Data.Common.DbDataReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-102">Initializes a new instance of the <see cref="T:System.Data.Common.DbDataReader" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="dbDataReader.Close " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataReader.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="14cce-103">Fecha o objeto <see cref="T:System.Data.Common.DbDataReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-103">Closes the <see cref="T:System.Data.Common.DbDataReader" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public abstract int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Data.Common.DbDataReader.Depth" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataReader.Depth</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="14cce-104">Obtém um valor que indica a profundidade de aninhamento da linha atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-104">Gets a value indicating the depth of nesting for the current row.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="14cce-105">A profundidade de aninhamento da linha atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-105">The depth of nesting for the current row.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14cce-106">A tabela mais externa tem uma profundidade igual a zero.</span><span class="sxs-lookup"><span data-stu-id="14cce-106">The outermost table has a depth of zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="14cce-107">Libera os recursos usados pelo <see cref="T:System.Data.Common.DbDataReader" /> e chama <see cref="M:System.Data.SqlClient.SqlDataReader.Close" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-107">Releases the resources used by the <see cref="T:System.Data.Common.DbDataReader" /> and calls <see cref="M:System.Data.SqlClient.SqlDataReader.Close" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="dbDataReader.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="14cce-108">Libera todos os recursos usados pela instância atual da classe <see cref="T:System.Data.Common.DbDataReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-108">Releases all resources used by the current instance of the <see cref="T:System.Data.Common.DbDataReader" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14cce-109">Chame `Dispose` quando tiver terminado de usar o <xref:System.Data.Common.DbDataReader>.</span><span class="sxs-lookup"><span data-stu-id="14cce-109">Call `Dispose` when you are finished using the <xref:System.Data.Common.DbDataReader>.</span></span> <span data-ttu-id="14cce-110">O `Dispose` método deixa o <xref:System.Data.Common.DbDataReader> em um estado inutilizável.</span><span class="sxs-lookup"><span data-stu-id="14cce-110">The `Dispose` method leaves the <xref:System.Data.Common.DbDataReader> in an unusable state.</span></span> <span data-ttu-id="14cce-111">Depois de chamar `Dispose`, você deve liberar todas as referências para o <xref:System.Data.Common.DbDataReader> para que o coletor de lixo possa recuperar a memória que o <xref:System.Data.Common.DbDataReader> estava ocupando.</span><span class="sxs-lookup"><span data-stu-id="14cce-111">After calling `Dispose`, you must release all references to the <xref:System.Data.Common.DbDataReader> so the garbage collector can reclaim the memory that the <xref:System.Data.Common.DbDataReader> was occupying.</span></span>  
  
 <span data-ttu-id="14cce-112">Para obter mais informações, consulte [limpeza de recursos não gerenciados](~/docs/standard/garbage-collection/unmanaged.md) e [implementando um método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="14cce-112">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="14cce-113">Sempre chamar `Dispose` antes de liberar sua última referência para o <xref:System.Data.Common.DbDataReader>.</span><span class="sxs-lookup"><span data-stu-id="14cce-113">Always call `Dispose` before you release your last reference to the <xref:System.Data.Common.DbDataReader>.</span></span> <span data-ttu-id="14cce-114">Caso contrário, os recursos que ele está usando não serão liberados até que o coletor de lixo chame o <xref:System.Data.Common.DbDataReader> do objeto `Finalize` método.</span><span class="sxs-lookup"><span data-stu-id="14cce-114">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Data.Common.DbDataReader> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="dbDataReader.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="14cce-115">
            <see langword="true" /> para liberar recursos gerenciados e não gerenciados, <see langword="false" /> para liberar apenas recursos não gerenciados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-115">
              <see langword="true" /> to release managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14cce-116">Libera os recursos gerenciados usados pelo <see cref="T:System.Data.Common.DbDataReader" /> e opcionalmente libera os recursos não gerenciados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-116">Releases the managed resources used by the <see cref="T:System.Data.Common.DbDataReader" /> and optionally releases the unmanaged resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14cce-117">Esse método chama <xref:System.Data.SqlClient.SqlDataReader.Close%2A>.</span><span class="sxs-lookup"><span data-stu-id="14cce-117">This method calls <xref:System.Data.SqlClient.SqlDataReader.Close%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldCount">
      <MemberSignature Language="C#" Value="public abstract int FieldCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FieldCount" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataReader.FieldCount" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property FieldCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int FieldCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FieldCount : int" Usage="System.Data.Common.DbDataReader.FieldCount" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataRecord.FieldCount</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="14cce-118">Obtém o número de colunas na linha atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-118">Gets the number of columns in the current row.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="14cce-119">O número de colunas na linha atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-119">The number of columns in the current row.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14cce-120">Inclui campos ocultos.</span><span class="sxs-lookup"><span data-stu-id="14cce-120">Includes hidden fields.</span></span> <span data-ttu-id="14cce-121">Use <xref:System.Data.Common.DbDataReader.VisibleFieldCount%2A> para excluir campos ocultos.</span><span class="sxs-lookup"><span data-stu-id="14cce-121">Use <xref:System.Data.Common.DbDataReader.VisibleFieldCount%2A> to exclude hidden fields.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="14cce-122">Não há conexão atual com uma instância do SQL Server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-122">There is no current connection to an instance of SQL Server.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public abstract bool GetBoolean (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetBoolean(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetBoolean(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetBoolean (ordinal As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool GetBoolean(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetBoolean : int -&gt; bool" Usage="dbDataReader.GetBoolean ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetBoolean(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="14cce-123">O ordinal da coluna baseado em zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-123">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14cce-124">Obtém o valor da coluna especificada como um booliano.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-124">Gets the value of the specified column as a Boolean.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14cce-125">O valor da coluna especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-125">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="14cce-126">A conversão especificada não é válida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-126">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetByte">
      <MemberSignature Language="C#" Value="public abstract byte GetByte (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8 GetByte(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetByte(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetByte (ordinal As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Byte GetByte(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetByte : int -&gt; byte" Usage="dbDataReader.GetByte ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetByte(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="14cce-127">O ordinal da coluna baseado em zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-127">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14cce-128">Obtém o valor da coluna especificada como um byte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-128">Gets the value of the specified column as a byte.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14cce-129">O valor da coluna especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-129">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="14cce-130">A conversão especificada não é válida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-130">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public abstract long GetBytes (int ordinal, long dataOffset, byte[] buffer, int bufferOffset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetBytes(int32 ordinal, int64 dataOffset, unsigned int8[] buffer, int32 bufferOffset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetBytes (ordinal As Integer, dataOffset As Long, buffer As Byte(), bufferOffset As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract long GetBytes(int ordinal, long dataOffset, cli::array &lt;System::Byte&gt; ^ buffer, int bufferOffset, int length);" />
      <MemberSignature Language="F#" Value="abstract member GetBytes : int * int64 * byte[] * int * int -&gt; int64" Usage="dbDataReader.GetBytes (ordinal, dataOffset, buffer, bufferOffset, length)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
        <Parameter Name="dataOffset" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="bufferOffset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="14cce-131">O ordinal da coluna baseado em zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-131">The zero-based column ordinal.</span>
          </span>
        </param>
        <param name="dataOffset">
          <span data-ttu-id="14cce-132">O índice na linha na qual a operação de leitura é iniciada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-132">The index within the row from which to begin the read operation.</span>
          </span>
        </param>
        <param name="buffer">
          <span data-ttu-id="14cce-133">O buffer no qual os dados são copiados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-133">The buffer into which to copy the data.</span>
          </span>
        </param>
        <param name="bufferOffset">
          <span data-ttu-id="14cce-134">O índice com o buffer no qual os dados serão copiados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-134">The index with the buffer to which the data will be copied.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="14cce-135">O número máximo de caracteres a serem lidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-135">The maximum number of characters to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14cce-136">Lê um fluxo de bytes na coluna especificada, iniciando no local indicado por <paramref name="dataOffset" />, no buffer, iniciando na posição indicada por <paramref name="bufferOffset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-136">Reads a stream of bytes from the specified column, starting at location indicated by <paramref name="dataOffset" />, into the buffer, starting at the location indicated by <paramref name="bufferOffset" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14cce-137">O número real de bytes lidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-137">The actual number of bytes read.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="14cce-138">A conversão especificada não é válida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-138">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetChar">
      <MemberSignature Language="C#" Value="public abstract char GetChar (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char GetChar(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetChar(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetChar (ordinal As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract char GetChar(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetChar : int -&gt; char" Usage="dbDataReader.GetChar ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetChar(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="14cce-139">O ordinal da coluna baseado em zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-139">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14cce-140">Obtém o valor da coluna especificada como um único caractere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-140">Gets the value of the specified column as a single character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14cce-141">O valor da coluna especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-141">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="14cce-142">A conversão especificada não é válida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-142">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public abstract long GetChars (int ordinal, long dataOffset, char[] buffer, int bufferOffset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetChars(int32 ordinal, int64 dataOffset, char[] buffer, int32 bufferOffset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetChars (ordinal As Integer, dataOffset As Long, buffer As Char(), bufferOffset As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract long GetChars(int ordinal, long dataOffset, cli::array &lt;char&gt; ^ buffer, int bufferOffset, int length);" />
      <MemberSignature Language="F#" Value="abstract member GetChars : int * int64 * char[] * int * int -&gt; int64" Usage="dbDataReader.GetChars (ordinal, dataOffset, buffer, bufferOffset, length)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
        <Parameter Name="dataOffset" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="bufferOffset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="14cce-143">O ordinal da coluna baseado em zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-143">The zero-based column ordinal.</span>
          </span>
        </param>
        <param name="dataOffset">
          <span data-ttu-id="14cce-144">O índice na linha na qual a operação de leitura é iniciada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-144">The index within the row from which to begin the read operation.</span>
          </span>
        </param>
        <param name="buffer">
          <span data-ttu-id="14cce-145">O buffer no qual os dados são copiados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-145">The buffer into which to copy the data.</span>
          </span>
        </param>
        <param name="bufferOffset">
          <span data-ttu-id="14cce-146">O índice com o buffer no qual os dados serão copiados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-146">The index with the buffer to which the data will be copied.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="14cce-147">O número máximo de caracteres a serem lidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-147">The maximum number of characters to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14cce-148">Lê um fluxo de caracteres na coluna especificada, iniciando no local indicado por <paramref name="dataOffset" />, no buffer, iniciando na posição indicada por <paramref name="bufferOffset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-148">Reads a stream of characters from the specified column, starting at location indicated by <paramref name="dataOffset" />, into the buffer, starting at the location indicated by <paramref name="bufferOffset" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14cce-149">O número real de caracteres lidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-149">The actual number of characters read.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbDataReader GetData (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbDataReader GetData(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetData(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (ordinal As Integer) As DbDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbDataReader ^ GetData(int ordinal);" />
      <MemberSignature Language="F#" Value="member this.GetData : int -&gt; System.Data.Common.DbDataReader" Usage="dbDataReader.GetData ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="14cce-150">O ordinal da coluna baseado em zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-150">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14cce-151">Retorna um objeto <see cref="T:System.Data.Common.DbDataReader" /> para o ordinal da coluna solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-151">Returns a <see cref="T:System.Data.Common.DbDataReader" /> object for the requested column ordinal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14cce-152">Um objeto <see cref="T:System.Data.Common.DbDataReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-152">A <see cref="T:System.Data.Common.DbDataReader" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataTypeName">
      <MemberSignature Language="C#" Value="public abstract string GetDataTypeName (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetDataTypeName(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetDataTypeName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetDataTypeName (ordinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetDataTypeName(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetDataTypeName : int -&gt; string" Usage="dbDataReader.GetDataTypeName ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetDataTypeName(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="14cce-153">O ordinal da coluna baseado em zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-153">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14cce-154">Obtém o nome do tipo de dados da coluna especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-154">Gets name of the data type of the specified column.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14cce-155">Uma cadeia de caracteres que representa o nome do tipo de dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-155">A string representing the name of the data type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
```  
private static void GetDataTypes(String connectiongString) {       
   using (SqlConnection conn = new SqlConnection(connectiongString)) {  
      String queryString = "Select [CourseID],[Title],[Credits] from [MySchool].[dbo].[Course]";  
      using (DbCommand command = new SqlCommand(queryString, conn)) {  
         conn.Open();               
         using (DbDataReader reader = command.ExecuteReader()) {  
            for (Int32 i = 0; i < reader.FieldCount; i++) {  
               Console.WriteLine("ColumnName:{0,-15}DataType:{1,-15}",reader.GetName(i),reader.GetDataTypeName(i));  
            }  
         }  
      }  
   }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="14cce-156">A conversão especificada não é válida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-156">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDateTime">
      <MemberSignature Language="C#" Value="public abstract DateTime GetDateTime (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime GetDateTime(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetDateTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetDateTime (ordinal As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract DateTime GetDateTime(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetDateTime : int -&gt; DateTime" Usage="dbDataReader.GetDateTime ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetDateTime(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="14cce-157">O ordinal da coluna baseado em zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-157">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14cce-158">Obtém o valor da coluna especificada como um objeto <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-158">Gets the value of the specified column as a <see cref="T:System.DateTime" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14cce-159">O valor da coluna especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-159">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="14cce-160">A conversão especificada não é válida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-160">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDbDataReader">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.DbDataReader GetDbDataReader (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.DbDataReader GetDbDataReader(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetDbDataReader (ordinal As Integer) As DbDataReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::DbDataReader ^ GetDbDataReader(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetDbDataReader : int -&gt; System.Data.Common.DbDataReader&#xA;override this.GetDbDataReader : int -&gt; System.Data.Common.DbDataReader" Usage="dbDataReader.GetDbDataReader ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="14cce-161">O ordinal da coluna baseado em zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-161">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14cce-162">Retorna um objeto <see cref="T:System.Data.Common.DbDataReader" /> para o ordinal da coluna solicitado que pode ser substituído por uma implementação específica do provedor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-162">Returns a <see cref="T:System.Data.Common.DbDataReader" /> object for the requested column ordinal that can be overridden with a provider-specific implementation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14cce-163">Um objeto <see cref="T:System.Data.Common.DbDataReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-163">A <see cref="T:System.Data.Common.DbDataReader" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDecimal">
      <MemberSignature Language="C#" Value="public abstract decimal GetDecimal (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Decimal GetDecimal(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetDecimal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetDecimal (ordinal As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Decimal GetDecimal(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetDecimal : int -&gt; decimal" Usage="dbDataReader.GetDecimal ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetDecimal(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="14cce-164">O ordinal da coluna baseado em zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-164">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14cce-165">Obtém o valor da coluna especificada como um objeto <see cref="T:System.Decimal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-165">Gets the value of the specified column as a <see cref="T:System.Decimal" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14cce-166">O valor da coluna especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-166">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="14cce-167">A conversão especificada não é válida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-167">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public abstract double GetDouble (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 GetDouble(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetDouble(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetDouble (ordinal As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract double GetDouble(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetDouble : int -&gt; double" Usage="dbDataReader.GetDouble ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetDouble(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="14cce-168">O ordinal da coluna baseado em zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-168">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14cce-169">Obtém o valor da coluna especificada como um número de ponto flutuante de precisão dupla.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-169">Gets the value of the specified column as a double-precision floating point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14cce-170">O valor da coluna especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-170">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="14cce-171">A conversão especificada não é válida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-171">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public abstract System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="dbDataReader.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="14cce-172">Retorna um <see cref="T:System.Collections.IEnumerator" /> que pode ser usado para iterar pelas linhas do leitor de dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-172">Returns an <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the rows in the data reader.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14cce-173">Um <see cref="T:System.Collections.IEnumerator" /> que pode ser usado para iterar pelas linhas do leitor de dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-173">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the rows in the data reader.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14cce-174">Embora você possa usar esse método para recuperar um construtor explícito, em linguagens que dão suporte a uma explícita **foreach** construção, é mais simples de usar o constructo de loop diretamente para iterar pelas linhas do leitor de dados.</span><span class="sxs-lookup"><span data-stu-id="14cce-174">Although you can use this method to retrieve an explicit constructor, in languages that support an explicit **foreach** construct, it is simpler to use the looping construct directly in order to iterate through the rows in the data reader.</span></span>  
  
 <span data-ttu-id="14cce-175">Se você implementar esse método, ele deverá retornar uma nova instância da <xref:System.Data.Common.DbEnumerator> ou certifique-se de que o enumerador os retorna <xref:System.Data.IDataRecord> objetos.</span><span class="sxs-lookup"><span data-stu-id="14cce-175">If you implement this method, it should return a new instance of <xref:System.Data.Common.DbEnumerator> or ensure that your enumerator returns <xref:System.Data.IDataRecord> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFieldType">
      <MemberSignature Language="C#" Value="public abstract Type GetFieldType (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetFieldType(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetFieldType (ordinal As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Type ^ GetFieldType(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetFieldType : int -&gt; Type" Usage="dbDataReader.GetFieldType ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetFieldType(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="14cce-176">O ordinal da coluna baseado em zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-176">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14cce-177">Obtém o tipo de dados da coluna especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-177">Gets the data type of the specified column.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14cce-178">O tipo de dados da coluna especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-178">The data type of the specified column.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="14cce-179">A conversão especificada não é válida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-179">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFieldValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual T GetFieldValue&lt;T&gt; (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T GetFieldValue&lt;T&gt;(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFieldValue(Of T) (ordinal As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; virtual T GetFieldValue(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetFieldValue : int -&gt; 'T&#xA;override this.GetFieldValue : int -&gt; 'T" Usage="dbDataReader.GetFieldValue ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="14cce-180">Obtém de forma síncrona o valor da coluna especificada como um tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-180">Synchronously gets the value of the specified column as a type.</span>
          </span>
        </typeparam>
        <param name="ordinal">
          <span data-ttu-id="14cce-181">A coluna a ser recuperada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-181">The column to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14cce-182">Obtém de forma síncrona o valor da coluna especificada como um tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-182">Synchronously gets the value of the specified column as a type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14cce-183">A coluna a ser recuperada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-183">The column to be retrieved.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14cce-184">Para obter mais informações, consulte [suporte de Streaming do SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span><span class="sxs-lookup"><span data-stu-id="14cce-184">For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="14cce-185">A conexão cai ou é fechada durante a recuperação de dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-185">The connection drops or is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="14cce-186">O <see cref="T:System.Data.SqlClient.SqlDataReader" /> é fechado durante a recuperação de dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-186">The <see cref="T:System.Data.SqlClient.SqlDataReader" /> is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="14cce-187">Não há dados prontos para serem lidos (por exemplo, o primeiro <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> não foi chamado ou retornou false).</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-187">There is no data ready to be read (for example, the first <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> hasn't been called, or returned false).</span>
          </span>
          <span data-ttu-id="14cce-188">Tentativa de ler uma coluna lida anteriormente no modo sequencial.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-188">Tried to read a previously-read column in sequential mode.</span>
          </span>
          <span data-ttu-id="14cce-189">Havia uma operação assíncrona em andamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-189">There was an asynchronous operation in progress.</span>
          </span>
          <span data-ttu-id="14cce-190">Isso se aplica a todos os métodos Get\* executados no modo sequencial, pois eles podem ser chamados durante a leitura de um fluxo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-190">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="14cce-191">Tentativa de ler uma coluna não existente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-191">Trying to read a column that does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="14cce-192">
            <paramref name="T" /> não corresponde ao tipo retornado pelo SQL Server ou não pode ser convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-192">
              <paramref name="T" /> doesn’t match the type returned by SQL Server or cannot be cast.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFieldValueAsync&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="14cce-193">Obtém de forma assíncrona o valor da coluna especificada como um tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-193">Asynchronously gets the value of the specified column as a type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14cce-194">Para obter mais informações, consulte [suporte de Streaming do SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span><span class="sxs-lookup"><span data-stu-id="14cce-194">For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFieldValueAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;T&gt; GetFieldValueAsync&lt;T&gt; (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!T&gt; GetFieldValueAsync&lt;T&gt;(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFieldValueAsync(Of T) (ordinal As Integer) As Task(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Threading::Tasks::Task&lt;T&gt; ^ GetFieldValueAsync(int ordinal);" />
      <MemberSignature Language="F#" Value="member this.GetFieldValueAsync : int -&gt; System.Threading.Tasks.Task&lt;'T&gt;" Usage="dbDataReader.GetFieldValueAsync ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="14cce-195">O tipo do valor a ser retornado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-195">The type of the value to be returned.</span>
          </span>
        </typeparam>
        <param name="ordinal">
          <span data-ttu-id="14cce-196">O tipo do valor a ser retornado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-196">The type of the value to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14cce-197">Obtém de forma assíncrona o valor da coluna especificada como um tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-197">Asynchronously gets the value of the specified column as a type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14cce-198">O tipo do valor a ser retornado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-198">The type of the value to be returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14cce-199">`T` pode ser um dos seguintes tipos:</span><span class="sxs-lookup"><span data-stu-id="14cce-199">`T` can be one of the following types:</span></span>  
  
|||||  
|-|-|-|-|  
|<span data-ttu-id="14cce-200">Boolean</span><span class="sxs-lookup"><span data-stu-id="14cce-200">Boolean</span></span>|<span data-ttu-id="14cce-201">Byte</span><span class="sxs-lookup"><span data-stu-id="14cce-201">Byte</span></span>|<span data-ttu-id="14cce-202">Char</span><span class="sxs-lookup"><span data-stu-id="14cce-202">Char</span></span>|<span data-ttu-id="14cce-203">DateTime</span><span class="sxs-lookup"><span data-stu-id="14cce-203">DateTime</span></span>|  
|<span data-ttu-id="14cce-204">DateTimeOffset</span><span class="sxs-lookup"><span data-stu-id="14cce-204">DateTimeOffset</span></span>|<span data-ttu-id="14cce-205">Decimal</span><span class="sxs-lookup"><span data-stu-id="14cce-205">Decimal</span></span>|<span data-ttu-id="14cce-206">Duplo</span><span class="sxs-lookup"><span data-stu-id="14cce-206">Double</span></span>|<span data-ttu-id="14cce-207">Float</span><span class="sxs-lookup"><span data-stu-id="14cce-207">Float</span></span>|  
|<span data-ttu-id="14cce-208">Guid</span><span class="sxs-lookup"><span data-stu-id="14cce-208">Guid</span></span>|<span data-ttu-id="14cce-209">Int16</span><span class="sxs-lookup"><span data-stu-id="14cce-209">Int16</span></span>|<span data-ttu-id="14cce-210">Int32</span><span class="sxs-lookup"><span data-stu-id="14cce-210">Int32</span></span>|<span data-ttu-id="14cce-211">Int64</span><span class="sxs-lookup"><span data-stu-id="14cce-211">Int64</span></span>|  
|<span data-ttu-id="14cce-212">Cadeia de Caracteres</span><span class="sxs-lookup"><span data-stu-id="14cce-212">String</span></span>||||  
  
 <span data-ttu-id="14cce-213">Para obter mais informações, consulte [suporte de Streaming do SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span><span class="sxs-lookup"><span data-stu-id="14cce-213">For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="14cce-214">A conexão cai ou é fechada durante a recuperação de dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-214">The connection drops or is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="14cce-215">O <see cref="T:System.Data.Common.DbDataReader" /> é fechado durante a recuperação de dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-215">The <see cref="T:System.Data.Common.DbDataReader" /> is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="14cce-216">Não há dados prontos para serem lidos (por exemplo, o primeiro <see cref="M:System.Data.Common.DbDataReader.Read" /> não foi chamado ou retornou false).</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-216">There is no data ready to be read (for example, the first <see cref="M:System.Data.Common.DbDataReader.Read" /> hasn't been called, or returned false).</span>
          </span>
          <span data-ttu-id="14cce-217">Tentativa de ler uma coluna lida anteriormente no modo sequencial.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-217">Tried to read a previously-read column in sequential mode.</span>
          </span>
          <span data-ttu-id="14cce-218">Havia uma operação assíncrona em andamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-218">There was an asynchronous operation in progress.</span>
          </span>
          <span data-ttu-id="14cce-219">Isso se aplica a todos os métodos Get\* executados no modo sequencial, pois eles podem ser chamados durante a leitura de um fluxo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-219">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="14cce-220">Tentativa de ler uma coluna não existente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-220">Trying to read a column that does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="14cce-221">
            <paramref name="T" /> não corresponde ao tipo retornado pela fonte de dados ou não pode ser convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-221">
              <paramref name="T" /> doesn’t match the type returned by the data source  or cannot be cast.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFieldValueAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;T&gt; GetFieldValueAsync&lt;T&gt; (int ordinal, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;!!T&gt; GetFieldValueAsync&lt;T&gt;(int32 ordinal, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; virtual System::Threading::Tasks::Task&lt;T&gt; ^ GetFieldValueAsync(int ordinal, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="abstract member GetFieldValueAsync : int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'T&gt;&#xA;override this.GetFieldValueAsync : int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'T&gt;" Usage="dbDataReader.GetFieldValueAsync (ordinal, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="14cce-222">O tipo do valor a ser retornado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-222">The type of the value to be returned.</span>
          </span>
        </typeparam>
        <param name="ordinal">
          <span data-ttu-id="14cce-223">O tipo do valor a ser retornado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-223">The type of the value to be returned.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="14cce-224">A instrução de cancelamento que propaga uma notificação de que as operações devem ser canceladas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-224">The cancellation instruction, which propagates a notification that operations should be canceled.</span>
          </span>
          <span data-ttu-id="14cce-225">Isso não assegura o cancelamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-225">This does not guarantee the cancellation.</span>
          </span>
          <span data-ttu-id="14cce-226">Uma configuração de <see langword="CancellationToken.None" /> torna esse método equivalente a <see cref="M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-226">A setting of <see langword="CancellationToken.None" /> makes this method equivalent to <see cref="M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)" />.</span>
          </span>
          <span data-ttu-id="14cce-227">A tarefa retornada deve ser marcada como cancelada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-227">The returned task must be marked as cancelled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14cce-228">Obtém de forma assíncrona o valor da coluna especificada como um tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-228">Asynchronously gets the value of the specified column as a type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14cce-229">O tipo do valor a ser retornado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-229">The type of the value to be returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14cce-230">`T` pode ser um dos seguintes tipos:</span><span class="sxs-lookup"><span data-stu-id="14cce-230">`T` can be one of the following types:</span></span>  
  
|||||  
|-|-|-|-|  
|<span data-ttu-id="14cce-231">Boolean</span><span class="sxs-lookup"><span data-stu-id="14cce-231">Boolean</span></span>|<span data-ttu-id="14cce-232">Byte</span><span class="sxs-lookup"><span data-stu-id="14cce-232">Byte</span></span>|<span data-ttu-id="14cce-233">Char</span><span class="sxs-lookup"><span data-stu-id="14cce-233">Char</span></span>|<span data-ttu-id="14cce-234">DateTime</span><span class="sxs-lookup"><span data-stu-id="14cce-234">DateTime</span></span>|  
|<span data-ttu-id="14cce-235">DateTimeOffset</span><span class="sxs-lookup"><span data-stu-id="14cce-235">DateTimeOffset</span></span>|<span data-ttu-id="14cce-236">Decimal</span><span class="sxs-lookup"><span data-stu-id="14cce-236">Decimal</span></span>|<span data-ttu-id="14cce-237">Duplo</span><span class="sxs-lookup"><span data-stu-id="14cce-237">Double</span></span>|<span data-ttu-id="14cce-238">Float</span><span class="sxs-lookup"><span data-stu-id="14cce-238">Float</span></span>|  
|<span data-ttu-id="14cce-239">Guid</span><span class="sxs-lookup"><span data-stu-id="14cce-239">Guid</span></span>|<span data-ttu-id="14cce-240">Int16</span><span class="sxs-lookup"><span data-stu-id="14cce-240">Int16</span></span>|<span data-ttu-id="14cce-241">Int32</span><span class="sxs-lookup"><span data-stu-id="14cce-241">Int32</span></span>|<span data-ttu-id="14cce-242">Int64</span><span class="sxs-lookup"><span data-stu-id="14cce-242">Int64</span></span>|  
|<span data-ttu-id="14cce-243">Cadeia de Caracteres</span><span class="sxs-lookup"><span data-stu-id="14cce-243">String</span></span>||||  
  
 <span data-ttu-id="14cce-244">Para obter mais informações, consulte [suporte de Streaming do SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span><span class="sxs-lookup"><span data-stu-id="14cce-244">For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="14cce-245">A conexão cai ou é fechada durante a recuperação de dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-245">The connection drops or is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="14cce-246">O <see cref="T:System.Data.Common.DbDataReader" /> é fechado durante a recuperação de dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-246">The <see cref="T:System.Data.Common.DbDataReader" /> is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="14cce-247">Não há dados prontos para serem lidos (por exemplo, o primeiro <see cref="M:System.Data.Common.DbDataReader.Read" /> não foi chamado ou retornou false).</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-247">There is no data ready to be read (for example, the first <see cref="M:System.Data.Common.DbDataReader.Read" /> hasn't been called, or returned false).</span>
          </span>
          <span data-ttu-id="14cce-248">Tentativa de ler uma coluna lida anteriormente no modo sequencial.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-248">Tried to read a previously-read column in sequential mode.</span>
          </span>
          <span data-ttu-id="14cce-249">Havia uma operação assíncrona em andamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-249">There was an asynchronous operation in progress.</span>
          </span>
          <span data-ttu-id="14cce-250">Isso se aplica a todos os métodos Get\* executados no modo sequencial, pois eles podem ser chamados durante a leitura de um fluxo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-250">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="14cce-251">Tentativa de ler uma coluna não existente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-251">Trying to read a column that does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="14cce-252">
            <paramref name="T" /> não corresponde ao tipo retornado pela fonte de dados ou não pode ser convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-252">
              <paramref name="T" /> doesn’t match the type returned by the data source or cannot be cast.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public abstract float GetFloat (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 GetFloat(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetFloat(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetFloat (ordinal As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract float GetFloat(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetFloat : int -&gt; single" Usage="dbDataReader.GetFloat ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetFloat(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="14cce-253">O ordinal da coluna baseado em zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-253">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14cce-254">Obtém o valor da coluna especificada como um número de ponto flutuante de precisão simples.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-254">Gets the value of the specified column as a single-precision floating point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14cce-255">O valor da coluna especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-255">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="14cce-256">A conversão especificada não é válida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-256">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGuid">
      <MemberSignature Language="C#" Value="public abstract Guid GetGuid (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Guid GetGuid(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetGuid(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetGuid (ordinal As Integer) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Guid GetGuid(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetGuid : int -&gt; Guid" Usage="dbDataReader.GetGuid ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetGuid(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="14cce-257">O ordinal da coluna baseado em zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-257">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14cce-258">Obtém o valor da coluna especificada como um GUID (identificador global exclusivo).</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-258">Gets the value of the specified column as a globally-unique identifier (GUID).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14cce-259">O valor da coluna especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-259">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="14cce-260">A conversão especificada não é válida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-260">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt16">
      <MemberSignature Language="C#" Value="public abstract short GetInt16 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int16 GetInt16(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetInt16(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetInt16 (ordinal As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract short GetInt16(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetInt16 : int -&gt; int16" Usage="dbDataReader.GetInt16 ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetInt16(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="14cce-261">O ordinal da coluna baseado em zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-261">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14cce-262">Obtém o valor da coluna especificada como um inteiro com sinal de 16 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-262">Gets the value of the specified column as a 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14cce-263">O valor da coluna especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-263">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="14cce-264">A conversão especificada não é válida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-264">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt32">
      <MemberSignature Language="C#" Value="public abstract int GetInt32 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetInt32(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetInt32 (ordinal As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetInt32(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetInt32 : int -&gt; int" Usage="dbDataReader.GetInt32 ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetInt32(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="14cce-265">O ordinal da coluna baseado em zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-265">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14cce-266">Obtém o valor da coluna especificada como um inteiro com sinal de 32 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-266">Gets the value of the specified column as a 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14cce-267">O valor da coluna especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-267">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
```  
private static void GetCredits(String connectiongString) {  
   using (SqlConnection conn = new SqlConnection(connectiongString)) {  
      String queryString = "Select [CourseID],[Title],[Credits] from [MySchool].[dbo].[Course]";   
      using (DbCommand command = new SqlCommand(queryString, conn)) {  
         conn.Open();   
         using (DbDataReader reader = command.ExecuteReader()) {  
            while (reader.Read()) {  
               // Credits column is the integer column, and you can use the GetInt32 method                        
               // to return a 32-bit signed integer.                       
               Console.WriteLine("Course:{0,-15} Credits:{1}",reader[1],reader.GetInt32(2));   
            }  
         }  
      }  
   }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="14cce-268">A conversão especificada não é válida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-268">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt64">
      <MemberSignature Language="C#" Value="public abstract long GetInt64 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetInt64(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetInt64(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetInt64 (ordinal As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract long GetInt64(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetInt64 : int -&gt; int64" Usage="dbDataReader.GetInt64 ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetInt64(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="14cce-269">O ordinal da coluna baseado em zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-269">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14cce-270">Obtém o valor da coluna especificada como um inteiro com sinal de 64 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-270">Gets the value of the specified column as a 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14cce-271">O valor da coluna especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-271">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="14cce-272">A conversão especificada não é válida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-272">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public abstract string GetName (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetName(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetName (ordinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetName(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetName : int -&gt; string" Usage="dbDataReader.GetName ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetName(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="14cce-273">O ordinal da coluna baseado em zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-273">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14cce-274">Obtém o nome da coluna, dado o ordinal da coluna com base em zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-274">Gets the name of the column, given the zero-based column ordinal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14cce-275">O nome da coluna especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-275">The name of the specified column.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrdinal">
      <MemberSignature Language="C#" Value="public abstract int GetOrdinal (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetOrdinal(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetOrdinal(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetOrdinal (name As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetOrdinal(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetOrdinal : string -&gt; int" Usage="dbDataReader.GetOrdinal name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetOrdinal(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="14cce-276">O nome da coluna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-276">The name of the column.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14cce-277">Obtém o ordinal da coluna, de acordo com o nome da coluna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-277">Gets the column ordinal given the name of the column.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14cce-278">O ordinal da coluna baseado em zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-278">The zero-based column ordinal.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="14cce-279">O nome especificado não é um nome de coluna válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-279">The name specified is not a valid column name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificFieldType">
      <MemberSignature Language="C#" Value="public virtual Type GetProviderSpecificFieldType (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetProviderSpecificFieldType(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProviderSpecificFieldType (ordinal As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetProviderSpecificFieldType(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetProviderSpecificFieldType : int -&gt; Type&#xA;override this.GetProviderSpecificFieldType : int -&gt; Type" Usage="dbDataReader.GetProviderSpecificFieldType ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="14cce-280">O ordinal da coluna baseado em zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-280">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14cce-281">Retorna o tipo de campo específico do provedor da coluna especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-281">Returns the provider-specific field type of the specified column.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14cce-282">O objeto <see cref="T:System.Type" /> que descreve o tipo de dados da coluna especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-282">The <see cref="T:System.Type" /> object that describes the data type of the specified column.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificValue">
      <MemberSignature Language="C#" Value="public virtual object GetProviderSpecificValue (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetProviderSpecificValue(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetProviderSpecificValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProviderSpecificValue (ordinal As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetProviderSpecificValue(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetProviderSpecificValue : int -&gt; obj&#xA;override this.GetProviderSpecificValue : int -&gt; obj" Usage="dbDataReader.GetProviderSpecificValue ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="14cce-283">O ordinal da coluna baseado em zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-283">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14cce-284">Obtém o valor da coluna especificada como uma instância de <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-284">Gets the value of the specified column as an instance of <see cref="T:System.Object" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14cce-285">O valor da coluna especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-285">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14cce-286">Para determinar o tipo específico de objeto retornado, use <xref:System.Data.Common.DbDataReader.GetProviderSpecificFieldType%2A>.</span><span class="sxs-lookup"><span data-stu-id="14cce-286">To determine the specific type of the object returned, use <xref:System.Data.Common.DbDataReader.GetProviderSpecificFieldType%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificValues">
      <MemberSignature Language="C#" Value="public virtual int GetProviderSpecificValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetProviderSpecificValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProviderSpecificValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetProviderSpecificValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="abstract member GetProviderSpecificValues : obj[] -&gt; int&#xA;override this.GetProviderSpecificValues : obj[] -&gt; int" Usage="dbDataReader.GetProviderSpecificValues values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values">
          <span data-ttu-id="14cce-287">Uma matriz de <see cref="T:System.Object" /> na qual as colunas de atributo serão copiadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-287">An array of <see cref="T:System.Object" /> into which to copy the attribute columns.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14cce-288">Obtém todas as colunas de atributo específicas do provedor na coleção para a linha atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-288">Gets all provider-specific attribute columns in the collection for the current row.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14cce-289">O número de instâncias de <see cref="T:System.Object" /> na matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-289">The number of instances of <see cref="T:System.Object" /> in the array.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTable">
      <MemberSignature Language="C#" Value="public virtual System.Data.DataTable GetSchemaTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.DataTable GetSchemaTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetSchemaTable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSchemaTable () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::DataTable ^ GetSchemaTable();" />
      <MemberSignature Language="F#" Value="abstract member GetSchemaTable : unit -&gt; System.Data.DataTable&#xA;override this.GetSchemaTable : unit -&gt; System.Data.DataTable" Usage="dbDataReader.GetSchemaTable " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataReader.GetSchemaTable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="14cce-290">Retorna um <see cref="T:System.Data.DataTable" /> que descreve os metadados da coluna do <see cref="T:System.Data.Common.DbDataReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-290">Returns a <see cref="T:System.Data.DataTable" /> that describes the column metadata of the <see cref="T:System.Data.Common.DbDataReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14cce-291">Um <see cref="T:System.Data.DataTable" /> que descreve os metadados de coluna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-291">A <see cref="T:System.Data.DataTable" /> that describes the column metadata.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="14cce-292">O <see cref="T:System.Data.SqlClient.SqlDataReader" /> está fechado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-292">The <see cref="T:System.Data.SqlClient.SqlDataReader" /> is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream GetStream (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetStream(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetStream(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStream (ordinal As Integer) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ GetStream(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetStream : int -&gt; System.IO.Stream&#xA;override this.GetStream : int -&gt; System.IO.Stream" Usage="dbDataReader.GetStream ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="14cce-293">Recupera os dados como um <see cref="T:System.IO.Stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-293">Retrieves data as a <see cref="T:System.IO.Stream" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14cce-294">Recupera os dados como um <see cref="T:System.IO.Stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-294">Retrieves data as a <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14cce-295">O objeto retornado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-295">The returned object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14cce-296"><xref:System.Data.Common.DbDataReader.GetStream%2A> dá suporte apenas a recuperação de valores que podem ser convertidas em matrizes de bytes.</span><span class="sxs-lookup"><span data-stu-id="14cce-296"><xref:System.Data.Common.DbDataReader.GetStream%2A> only supports the retrieval of values that can be converted to byte arrays.</span></span>  
  
 <span data-ttu-id="14cce-297">Para obter mais informações, consulte [suporte de Streaming do SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span><span class="sxs-lookup"><span data-stu-id="14cce-297">For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="14cce-298">A conexão cai ou é fechada durante a recuperação de dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-298">The connection drops or is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="14cce-299">O <see cref="T:System.Data.Common.DbDataReader" /> é fechado durante a recuperação de dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-299">The <see cref="T:System.Data.Common.DbDataReader" /> is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="14cce-300">Não há dados prontos para serem lidos (por exemplo, o primeiro <see cref="M:System.Data.Common.DbDataReader.Read" /> não foi chamado ou retornou false).</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-300">There is no data ready to be read (for example, the first <see cref="M:System.Data.Common.DbDataReader.Read" /> hasn't been called, or returned false).</span>
          </span>
          <span data-ttu-id="14cce-301">Tentativa de ler uma coluna lida anteriormente no modo sequencial.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-301">Tried to read a previously-read column in sequential mode.</span>
          </span>
          <span data-ttu-id="14cce-302">Havia uma operação assíncrona em andamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-302">There was an asynchronous operation in progress.</span>
          </span>
          <span data-ttu-id="14cce-303">Isso se aplica a todos os métodos Get\* executados no modo sequencial, pois eles podem ser chamados durante a leitura de um fluxo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-303">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="14cce-304">Tentativa de ler uma coluna não existente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-304">Trying to read a column that does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="14cce-305">O tipo retornado não era um dos tipos abaixo: - binary - image - varbinary - udt</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-305">The returned type was not one of the types below:  -   binary  -   image  -   varbinary  -   udt</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public abstract string GetString (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetString(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetString (ordinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetString(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetString : int -&gt; string" Usage="dbDataReader.GetString ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetString(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="14cce-306">O ordinal da coluna baseado em zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-306">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14cce-307">Obtém o valor da coluna especificada como uma instância de <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-307">Gets the value of the specified column as an instance of <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14cce-308">O valor da coluna especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-308">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="14cce-309">A conversão especificada não é válida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-309">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTextReader">
      <MemberSignature Language="C#" Value="public virtual System.IO.TextReader GetTextReader (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.TextReader GetTextReader(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetTextReader(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTextReader (ordinal As Integer) As TextReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::TextReader ^ GetTextReader(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetTextReader : int -&gt; System.IO.TextReader&#xA;override this.GetTextReader : int -&gt; System.IO.TextReader" Usage="dbDataReader.GetTextReader ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="14cce-310">Recupera os dados como um <see cref="T:System.IO.TextReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-310">Retrieves data as a <see cref="T:System.IO.TextReader" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14cce-311">Recupera os dados como um <see cref="T:System.IO.TextReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-311">Retrieves data as a <see cref="T:System.IO.TextReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14cce-312">O objeto retornado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-312">The returned object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14cce-313"><xref:System.Data.Common.DbDataReader.GetTextReader%2A> dá suporte apenas a recuperação de valores que podem ser convertidas em matrizes de caracteres (cadeias de caracteres).</span><span class="sxs-lookup"><span data-stu-id="14cce-313"><xref:System.Data.Common.DbDataReader.GetTextReader%2A> only supports the retrieval of values that can be converted to character arrays (strings).</span></span>  
  
 <span data-ttu-id="14cce-314">Para obter mais informações, consulte [suporte de Streaming do SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span><span class="sxs-lookup"><span data-stu-id="14cce-314">For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="14cce-315">A conexão cai ou é fechada durante a recuperação de dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-315">The connection drops or is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="14cce-316">O <see cref="T:System.Data.Common.DbDataReader" /> é fechado durante a recuperação de dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-316">The <see cref="T:System.Data.Common.DbDataReader" /> is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="14cce-317">Não há dados prontos para serem lidos (por exemplo, o primeiro <see cref="M:System.Data.Common.DbDataReader.Read" /> não foi chamado ou retornou false).</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-317">There is no data ready to be read (for example, the first <see cref="M:System.Data.Common.DbDataReader.Read" /> hasn't been called, or returned false).</span>
          </span>
          <span data-ttu-id="14cce-318">Tentativa de ler uma coluna lida anteriormente no modo sequencial.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-318">Tried to read a previously-read column in sequential mode.</span>
          </span>
          <span data-ttu-id="14cce-319">Havia uma operação assíncrona em andamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-319">There was an asynchronous operation in progress.</span>
          </span>
          <span data-ttu-id="14cce-320">Isso se aplica a todos os métodos Get\* executados no modo sequencial, pois eles podem ser chamados durante a leitura de um fluxo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-320">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="14cce-321">Tentativa de ler uma coluna não existente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-321">Trying to read a column that does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="14cce-322">O tipo retornado não era um dos tipos abaixo: - char - nchar - ntext - nvarchar - text - varchar</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-322">The returned type was not one of the types below:  -   char  -   nchar  -   ntext  -   nvarchar  -   text  -   varchar</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public abstract object GetValue (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetValue(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetValue (ordinal As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetValue(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member GetValue : int -&gt; obj" Usage="dbDataReader.GetValue ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetValue(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="14cce-323">O ordinal da coluna baseado em zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-323">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14cce-324">Obtém o valor da coluna especificada como uma instância de <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-324">Gets the value of the specified column as an instance of <see cref="T:System.Object" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14cce-325">O valor da coluna especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-325">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public abstract int GetValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.GetValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="abstract member GetValues : obj[] -&gt; int" Usage="dbDataReader.GetValues values" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetValues(System.Object[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values">
          <span data-ttu-id="14cce-326">Uma matriz de <see cref="T:System.Object" /> na qual as colunas de atributo serão copiadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-326">An array of <see cref="T:System.Object" /> into which to copy the attribute columns.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14cce-327">Popula uma matriz de objetos com os valores da coluna da linha atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-327">Populates an array of objects with the column values of the current row.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14cce-328">O número de instâncias de <see cref="T:System.Object" /> na matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-328">The number of instances of <see cref="T:System.Object" /> in the array.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasRows">
      <MemberSignature Language="C#" Value="public abstract bool HasRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasRows" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataReader.HasRows" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property HasRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool HasRows { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasRows : bool" Usage="System.Data.Common.DbDataReader.HasRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="14cce-329">Obtém um valor que indica se este <see cref="T:System.Data.Common.DbDataReader" /> contém uma ou mais linhas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-329">Gets a value that indicates whether this <see cref="T:System.Data.Common.DbDataReader" /> contains one or more rows.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="14cce-330">
            <see langword="true" /> se o <see cref="T:System.Data.Common.DbDataReader" /> contiver uma ou mais linhas; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-330">
              <see langword="true" /> if the <see cref="T:System.Data.Common.DbDataReader" /> contains one or more rows; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public abstract bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataReader.IsClosed" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsClosed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsClosed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsClosed : bool" Usage="System.Data.Common.DbDataReader.IsClosed" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataReader.IsClosed</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="14cce-331">Obtém um valor que indica se o <see cref="T:System.Data.Common.DbDataReader" /> está fechado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-331">Gets a value indicating whether the <see cref="T:System.Data.Common.DbDataReader" /> is closed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="14cce-332">
            <see langword="true" /> Se o <see cref="T:System.Data.Common.DbDataReader" /> estiver fechado; caso contrário <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-332">
              <see langword="true" /> if the <see cref="T:System.Data.Common.DbDataReader" /> is closed; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="14cce-333">O <see cref="T:System.Data.SqlClient.SqlDataReader" /> está fechado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-333">The <see cref="T:System.Data.SqlClient.SqlDataReader" /> is closed.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="14cce-334">
            <para>Essa propriedade e <see cref="P:System.Data.Common.DbDataReader.RecordsAffected" /> deve ser implementado para retornar um valor quando o leitor está fechado.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-334">
              <para>This property and <see cref="P:System.Data.Common.DbDataReader.RecordsAffected" /> should be implemented to return a value when the reader is closed.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IsDBNull">
      <MemberSignature Language="C#" Value="public abstract bool IsDBNull (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDBNull(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.IsDBNull(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsDBNull (ordinal As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsDBNull(int ordinal);" />
      <MemberSignature Language="F#" Value="abstract member IsDBNull : int -&gt; bool" Usage="dbDataReader.IsDBNull ordinal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.IsDBNull(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="14cce-335">O ordinal da coluna baseado em zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-335">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14cce-336">Obtém um valor que indica se a coluna contém valores ausentes ou inexistentes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-336">Gets a value that indicates whether the column contains nonexistent or missing values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14cce-337">
            <see langword="true" /> se a coluna especificada for equivalente a <see cref="T:System.DBNull" />, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-337">
              <see langword="true" /> if the specified column is equivalent to <see cref="T:System.DBNull" />; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14cce-338">Chame esse método para verificar para métodos de obtenção de valores de coluna nulos antes de chamar com tipo (por exemplo, <xref:System.Data.Common.DbDataReader.GetByte%2A>, <xref:System.Data.Common.DbDataReader.GetChar%2A>e assim por diante) para evitar gerar um erro.</span><span class="sxs-lookup"><span data-stu-id="14cce-338">Call this method to check for null column values before calling the typed get methods (for example, <xref:System.Data.Common.DbDataReader.GetByte%2A>, <xref:System.Data.Common.DbDataReader.GetChar%2A>, and so on) to avoid raising an error.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsDBNullAsync">
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="14cce-339">Uma versão assíncrona de <see cref="M:System.Data.Common.DbDataReader.IsDBNull(System.Int32)" />, que obtém um valor que indica se a coluna contém valores ausentes ou inexistente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-339">An asynchronous version of <see cref="M:System.Data.Common.DbDataReader.IsDBNull(System.Int32)" />, which gets a value that indicates whether the column contains non-existent or missing values.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsDBNullAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; IsDBNullAsync (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;bool&gt; IsDBNullAsync(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDBNullAsync (ordinal As Integer) As Task(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;bool&gt; ^ IsDBNullAsync(int ordinal);" />
      <MemberSignature Language="F#" Value="member this.IsDBNullAsync : int -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="dbDataReader.IsDBNullAsync ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="14cce-340">A coluna com base em zero a ser recuperada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-340">The zero-based column to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14cce-341">Uma versão assíncrona de <see cref="M:System.Data.Common.DbDataReader.IsDBNull(System.Int32)" />, que obtém um valor que indica se a coluna contém valores ausentes ou inexistente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-341">An asynchronous version of <see cref="M:System.Data.Common.DbDataReader.IsDBNull(System.Int32)" />, which gets a value that indicates whether the column contains non-existent or missing values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14cce-342">
            <see langword="true" /> se o valor da coluna especificada for equivalente a <see langword="DBNull" />, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-342">
              <see langword="true" /> if the specified column value is equivalent to <see langword="DBNull" /> otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14cce-343">Para obter mais informações, consulte [suporte de Streaming do SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span><span class="sxs-lookup"><span data-stu-id="14cce-343">For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="14cce-344">A conexão cai ou é fechada durante a recuperação de dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-344">The connection drops or is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="14cce-345">O <see cref="T:System.Data.Common.DbDataReader" /> é fechado durante a recuperação de dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-345">The <see cref="T:System.Data.Common.DbDataReader" /> is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="14cce-346">Não há dados prontos para serem lidos (por exemplo, o primeiro <see cref="M:System.Data.Common.DbDataReader.Read" /> não foi chamado ou retornou false).</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-346">There is no data ready to be read (for example, the first <see cref="M:System.Data.Common.DbDataReader.Read" /> hasn't been called, or returned false).</span>
          </span>
          <span data-ttu-id="14cce-347">Tentando ler uma coluna lida anteriormente no modo sequencial.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-347">Trying to read a previously read column in sequential mode.</span>
          </span>
          <span data-ttu-id="14cce-348">Havia uma operação assíncrona em andamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-348">There was an asynchronous operation in progress.</span>
          </span>
          <span data-ttu-id="14cce-349">Isso se aplica a todos os métodos Get\* executados no modo sequencial, pois eles podem ser chamados durante a leitura de um fluxo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-349">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="14cce-350">Tentativa de ler uma coluna não existente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-350">Trying to read a column that does not exist.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDBNullAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;bool&gt; IsDBNullAsync (int ordinal, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; IsDBNullAsync(int32 ordinal, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;bool&gt; ^ IsDBNullAsync(int ordinal, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="abstract member IsDBNullAsync : int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;&#xA;override this.IsDBNullAsync : int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="dbDataReader.IsDBNullAsync (ordinal, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="14cce-351">A coluna com base em zero a ser recuperada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-351">The zero-based column to be retrieved.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="14cce-352">A instrução de cancelamento que propaga uma notificação de que as operações devem ser canceladas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-352">The cancellation instruction, which propagates a notification that operations should be canceled.</span>
          </span>
          <span data-ttu-id="14cce-353">Isso não assegura o cancelamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-353">This does not guarantee the cancellation.</span>
          </span>
          <span data-ttu-id="14cce-354">Uma configuração de <see langword="CancellationToken.None" /> torna esse método equivalente a <see cref="M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-354">A setting of <see langword="CancellationToken.None" /> makes this method equivalent to <see cref="M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)" />.</span>
          </span>
          <span data-ttu-id="14cce-355">A tarefa retornada deve ser marcada como cancelada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-355">The returned task must be marked as cancelled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14cce-356">Uma versão assíncrona de <see cref="M:System.Data.Common.DbDataReader.IsDBNull(System.Int32)" />, que obtém um valor que indica se a coluna contém valores ausentes ou inexistente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-356">An asynchronous version of <see cref="M:System.Data.Common.DbDataReader.IsDBNull(System.Int32)" />, which gets a value that indicates whether the column contains non-existent or missing values.</span>
          </span>
          <span data-ttu-id="14cce-357">Opcionalmente, envia uma notificação de que as operações devem ser canceladas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-357">Optionally, sends a notification that operations should be cancelled.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14cce-358">
            <see langword="true" /> se o valor da coluna especificada for equivalente a <see langword="DBNull" />, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-358">
              <see langword="true" /> if the specified column value is equivalent to <see langword="DBNull" /> otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14cce-359">Para obter mais informações, consulte [suporte de Streaming do SqlClient](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span><span class="sxs-lookup"><span data-stu-id="14cce-359">For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="14cce-360">A conexão cai ou é fechada durante a recuperação de dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-360">The connection drops or is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="14cce-361">O <see cref="T:System.Data.Common.DbDataReader" /> é fechado durante a recuperação de dados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-361">The <see cref="T:System.Data.Common.DbDataReader" /> is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="14cce-362">Não há dados prontos para serem lidos (por exemplo, o primeiro <see cref="M:System.Data.Common.DbDataReader.Read" /> não foi chamado ou retornou false).</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-362">There is no data ready to be read (for example, the first <see cref="M:System.Data.Common.DbDataReader.Read" /> hasn't been called, or returned false).</span>
          </span>
          <span data-ttu-id="14cce-363">Tentando ler uma coluna lida anteriormente no modo sequencial.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-363">Trying to read a previously read column in sequential mode.</span>
          </span>
          <span data-ttu-id="14cce-364">Havia uma operação assíncrona em andamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-364">There was an asynchronous operation in progress.</span>
          </span>
          <span data-ttu-id="14cce-365">Isso se aplica a todos os métodos Get\* executados no modo sequencial, pois eles podem ser chamados durante a leitura de um fluxo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-365">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="14cce-366">Tentativa de ler uma coluna não existente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-366">Trying to read a column that does not exist.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="14cce-367">Obtém o valor de uma coluna especificada como uma instância de <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-367">Gets the value of a specified column as an instance of <see cref="T:System.Object" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public abstract object this[int ordinal] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataReader.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public MustOverride ReadOnly Property Item(ordinal As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Object ^ default[int] { System::Object ^ get(int ordinal); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj" Usage="System.Data.Common.DbDataReader.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataRecord.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="14cce-368">O ordinal da coluna baseado em zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-368">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14cce-369">Obtém o valor da coluna especificada como uma instância de <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-369">Gets the value of the specified column as an instance of <see cref="T:System.Object" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="14cce-370">O valor da coluna especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-370">The value of the specified column.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="14cce-371">O índice passado estava fora do intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-371">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public abstract object this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataReader.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public MustOverride ReadOnly Property Item(name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj" Usage="System.Data.Common.DbDataReader.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataRecord.Item(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="14cce-372">O nome da coluna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-372">The name of the column.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14cce-373">Obtém o valor da coluna especificada como uma instância de <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-373">Gets the value of the specified column as an instance of <see cref="T:System.Object" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="14cce-374">O valor da coluna especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-374">The value of the specified column.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="14cce-375">Nenhuma coluna com o nome especificado foi encontrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-375">No column with the specified name was found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NextResult">
      <MemberSignature Language="C#" Value="public abstract bool NextResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool NextResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.NextResult" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function NextResult () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool NextResult();" />
      <MemberSignature Language="F#" Value="abstract member NextResult : unit -&gt; bool" Usage="dbDataReader.NextResult " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataReader.NextResult</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="14cce-376">Avança o leitor para o resultado seguinte ao ler os resultados de um lote de instruções.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-376">Advances the reader to the next result when reading the results of a batch of statements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14cce-377">
            <see langword="true" /> se houver mais conjuntos de resultados; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-377">
              <see langword="true" /> if there are more result sets; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14cce-378">Esse método permite processar vários conjuntos de resultados retornados quando um lote é enviado ao provedor de dados.</span><span class="sxs-lookup"><span data-stu-id="14cce-378">This method allows you to process multiple result sets returned when a batch is submitted to the data provider.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="NextResultAsync">
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="14cce-379">Implementa a versão assíncrona do <see cref="M:System.Data.Common.DbDataReader.NextResult" />, mas retorna uma Tarefa de forma assíncrona, bloqueando o thread de chamada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-379">Implements the asynchronous version of <see cref="M:System.Data.Common.DbDataReader.NextResult" />, but returns a Task synchronously, blocking the calling thread.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14cce-380">Para obter mais informações sobre a programação assíncrona, consulte [programação assíncrona](~/docs/framework/data/adonet/asynchronous-programming.md).</span><span class="sxs-lookup"><span data-stu-id="14cce-380">For more information about asynchronous programming, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="NextResultAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; NextResultAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;bool&gt; NextResultAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.NextResultAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function NextResultAsync () As Task(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;bool&gt; ^ NextResultAsync();" />
      <MemberSignature Language="F#" Value="member this.NextResultAsync : unit -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="dbDataReader.NextResultAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="14cce-381">Uma versão assíncrona de <see cref="M:System.Data.Common.DbDataReader.NextResult" />, que avança o leitor para o resultado seguinte ao ler os resultados de um lote de instruções.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-381">An asynchronous version of <see cref="M:System.Data.Common.DbDataReader.NextResult" />, which advances the reader to the next result when reading the results of a batch of statements.</span>
          </span>
          <span data-ttu-id="14cce-382">Invoca <see cref="M:System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)" /> com CancellationToken.None.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-382">Invokes <see cref="M:System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)" /> with CancellationToken.None.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14cce-383">Uma tarefa que representa a operação assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-383">A task representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14cce-384">Para obter mais informações sobre a programação assíncrona, consulte [programação assíncrona](~/docs/framework/data/adonet/asynchronous-programming.md).</span><span class="sxs-lookup"><span data-stu-id="14cce-384">For more information about asynchronous programming, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.Common.DbException">
          <span data-ttu-id="14cce-385">Ocorreu um erro ao executar o texto do comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-385">An error occurred while executing the command text.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NextResultAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;bool&gt; NextResultAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; NextResultAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;bool&gt; ^ NextResultAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="abstract member NextResultAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;&#xA;override this.NextResultAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="dbDataReader.NextResultAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <span data-ttu-id="14cce-386">A instrução de cancelamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-386">The cancellation instruction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14cce-387">Essa é a versão assíncrona de <see cref="M:System.Data.Common.DbDataReader.NextResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-387">This is the asynchronous version of <see cref="M:System.Data.Common.DbDataReader.NextResult" />.</span>
          </span>
          <span data-ttu-id="14cce-388">Provedores devem substituir com uma implementação apropriada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-388">Providers should override with an appropriate implementation.</span>
          </span>
          <span data-ttu-id="14cce-389">O <paramref name="cancellationToken" /> opcionalmente pode ser ignorado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-389">The <paramref name="cancellationToken" /> may optionally be ignored.</span>
          </span>
          <span data-ttu-id="14cce-390">A implementação padrão invoca o método <see cref="M:System.Data.Common.DbDataReader.NextResult" /> síncrono e retorna uma tarefa concluída, bloqueando o thread de chamada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-390">The default implementation invokes the synchronous <see cref="M:System.Data.Common.DbDataReader.NextResult" /> method and returns a completed task, blocking the calling thread.</span>
          </span>
          <span data-ttu-id="14cce-391">A implementação padrão retornará uma tarefa cancelada se já tiver passado um <paramref name="cancellationToken" /> cancelado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-391">The default implementation will return a cancelled task if passed an already cancelled <paramref name="cancellationToken" />.</span>
          </span>
          <span data-ttu-id="14cce-392">Exceções geradas por <see cref="M:System.Data.Common.DbDataReader.NextResult" /> serão comunicadas por meio da propriedade Exceção de Tarefa retornada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-392">Exceptions thrown by <see cref="M:System.Data.Common.DbDataReader.NextResult" /> will be communicated via the returned Task Exception property.</span>
          </span>
          <span data-ttu-id="14cce-393">Outros métodos e propriedades do objeto DbDataReader não devem ser chamados enquanto a Tarefa retornada ainda não tiver sido concluída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-393">Other methods and properties of the DbDataReader object should not be invoked while the returned Task is not yet completed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14cce-394">Uma tarefa que representa a operação assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-394">A task representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14cce-395">Para obter mais informações sobre a programação assíncrona, consulte [programação assíncrona](~/docs/framework/data/adonet/asynchronous-programming.md).</span><span class="sxs-lookup"><span data-stu-id="14cce-395">For more information about asynchronous programming, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.Common.DbException">
          <span data-ttu-id="14cce-396">Ocorreu um erro ao executar o texto do comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-396">An error occurred while executing the command text.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public abstract bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Read();" />
      <MemberSignature Language="F#" Value="abstract member Read : unit -&gt; bool" Usage="dbDataReader.Read " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataReader.Read</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="14cce-397">Avança o leitor para o próximo registro em um conjunto de resultados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-397">Advances the reader to the next record in a result set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14cce-398">
            <see langword="true" /> se houver mais linhas; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-398">
              <see langword="true" /> if there are more rows; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14cce-399">A posição padrão de um leitor de dados é antes do primeiro registro.</span><span class="sxs-lookup"><span data-stu-id="14cce-399">The default position of a data reader is before the first record.</span></span> <span data-ttu-id="14cce-400">Portanto, você deve chamar <xref:System.Data.Common.DbDataReader.Read%2A> para começar a acessar os dados.</span><span class="sxs-lookup"><span data-stu-id="14cce-400">Therefore, you must call <xref:System.Data.Common.DbDataReader.Read%2A> to begin accessing data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadAsync">
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="14cce-401">Implementa a versão assíncrona do <see cref="M:System.Data.Common.DbDataReader.Read" />, mas retorna uma Tarefa de forma assíncrona, bloqueando o thread de chamada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-401">Implements the asynchronous version of <see cref="M:System.Data.Common.DbDataReader.Read" />, but returns a Task synchronously, blocking the calling thread.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14cce-402">Para obter mais informações sobre a programação assíncrona, consulte [programação assíncrona](~/docs/framework/data/adonet/asynchronous-programming.md).</span><span class="sxs-lookup"><span data-stu-id="14cce-402">For more information about asynchronous programming, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; ReadAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;bool&gt; ReadAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.ReadAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadAsync () As Task(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;bool&gt; ^ ReadAsync();" />
      <MemberSignature Language="F#" Value="member this.ReadAsync : unit -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="dbDataReader.ReadAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="14cce-403">Uma versão assíncrona de <see cref="M:System.Data.Common.DbDataReader.Read" />, que avança o leitor para o próximo registro em um conjunto de resultados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-403">An asynchronous version of <see cref="M:System.Data.Common.DbDataReader.Read" />, which advances the reader to the next record in a result set.</span>
          </span>
          <span data-ttu-id="14cce-404">Esse método invoca o <see cref="M:System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)" /> com CancellationToken.None.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-404">This method invokes <see cref="M:System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)" /> with CancellationToken.None.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14cce-405">Uma tarefa que representa a operação assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-405">A task representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14cce-406">Para obter mais informações sobre a programação assíncrona, consulte [programação assíncrona](~/docs/framework/data/adonet/asynchronous-programming.md).</span><span class="sxs-lookup"><span data-stu-id="14cce-406">For more information about asynchronous programming, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.Common.DbException">
          <span data-ttu-id="14cce-407">Ocorreu um erro ao executar o texto do comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-407">An error occurred while executing the command text.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;bool&gt; ReadAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; ReadAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;bool&gt; ^ ReadAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="abstract member ReadAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;&#xA;override this.ReadAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="dbDataReader.ReadAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <span data-ttu-id="14cce-408">A instrução de cancelamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-408">The cancellation instruction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14cce-409">Essa é a versão assíncrona de <see cref="M:System.Data.Common.DbDataReader.Read" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-409">This is the asynchronous version of <see cref="M:System.Data.Common.DbDataReader.Read" />.</span>
          </span>
          <span data-ttu-id="14cce-410">Provedores devem substituir com uma implementação apropriada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-410">Providers should override with an appropriate implementation.</span>
          </span>
          <span data-ttu-id="14cce-411">Opcionalmente, o cancellationToken pode ser ignorado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-411">The cancellationToken may optionally be ignored.</span>
          </span>
          <span data-ttu-id="14cce-412">A implementação padrão invoca o método <see cref="M:System.Data.Common.DbDataReader.Read" /> síncrono e retorna uma tarefa concluída, bloqueando o thread de chamada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-412">The default implementation invokes the synchronous <see cref="M:System.Data.Common.DbDataReader.Read" /> method and returns a completed task, blocking the calling thread.</span>
          </span>
          <span data-ttu-id="14cce-413">A implementação padrão retornará uma tarefa cancelada se já tiver passado um cancellationToken cancelado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-413">The default implementation will return a cancelled task if passed an already cancelled cancellationToken.</span>
          </span>
          <span data-ttu-id="14cce-414">Exceções geradas por Read serão comunicadas por meio da propriedade Exceção de Tarefa retornada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-414">Exceptions thrown by Read will be communicated via the returned Task Exception property.</span>
          </span>
          <span data-ttu-id="14cce-415">Não invoque outros métodos e propriedades do objeto <see langword="DbDataReader" /> até a Tarefa retornada ser concluída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-415">Do not invoke other methods and properties of the <see langword="DbDataReader" /> object until the returned Task is complete.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14cce-416">Uma tarefa que representa a operação assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-416">A task representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14cce-417">Para obter mais informações sobre a programação assíncrona, consulte [programação assíncrona](~/docs/framework/data/adonet/asynchronous-programming.md).</span><span class="sxs-lookup"><span data-stu-id="14cce-417">For more information about asynchronous programming, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.Common.DbException">
          <span data-ttu-id="14cce-418">Ocorreu um erro ao executar o texto do comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-418">An error occurred while executing the command text.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RecordsAffected">
      <MemberSignature Language="C#" Value="public abstract int RecordsAffected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecordsAffected" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataReader.RecordsAffected" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property RecordsAffected As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int RecordsAffected { int get(); };" />
      <MemberSignature Language="F#" Value="member this.RecordsAffected : int" Usage="System.Data.Common.DbDataReader.RecordsAffected" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataReader.RecordsAffected</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="14cce-419">Obtém o número de linhas alteradas, inseridas ou excluídas pela execução da instrução SQL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-419">Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="14cce-420">O número de linhas alteradas, inseridas ou excluídas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-420">The number of rows changed, inserted, or deleted.</span>
          </span>
          <span data-ttu-id="14cce-421">-1 para instruções SELECT; 0 se nenhuma linha foi afetada ou se a instrução falhou.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-421">-1 for SELECT statements; 0 if no rows were affected or the statement failed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14cce-422">O `RecordsAffected` propriedade não é definida até que todas as linhas são lidas e você fechar o `DataReader`.</span><span class="sxs-lookup"><span data-stu-id="14cce-422">The `RecordsAffected` property is not set until all rows are read and you close the `DataReader`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="14cce-423">
            <para>Essa propriedade e <see cref="P:System.Data.Common.DbDataReader.IsClosed" /> deve ser implementado para retornar um valor quando o leitor está fechado.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-423">
              <para>This property and <see cref="P:System.Data.Common.DbDataReader.IsClosed" /> should be implemented to return a value when the reader is closed.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDataReader.Close">
      <MemberSignature Language="C#" Value="void IDataReader.Close ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Data.IDataReader.Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.System#Data#IDataReader#Close" />
      <MemberSignature Language="VB.NET" Value="Sub Close () Implements IDataReader.Close" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Data.IDataReader.Close() = System::Data::IDataReader::Close;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataReader.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDataReader.GetSchemaTable">
      <MemberSignature Language="C#" Value="System.Data.DataTable IDataReader.GetSchemaTable ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.DataTable System.Data.IDataReader.GetSchemaTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.System#Data#IDataReader#GetSchemaTable" />
      <MemberSignature Language="VB.NET" Value="Function GetSchemaTable () As DataTable Implements IDataReader.GetSchemaTable" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::DataTable ^ System.Data.IDataReader.GetSchemaTable() = System::Data::IDataReader::GetSchemaTable;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataReader.GetSchemaTable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDataRecord.GetData">
      <MemberSignature Language="C#" Value="System.Data.IDataReader IDataRecord.GetData (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDataReader System.Data.IDataRecord.GetData(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Function GetData (ordinal As Integer) As IDataReader Implements IDataRecord.GetData" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDataReader ^ System.Data.IDataRecord.GetData(int ordinal) = System::Data::IDataRecord::GetData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetData(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="14cce-424">O ordinal da coluna baseado em zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-424">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14cce-425">Para obter uma descrição desse membro, consulte <see cref="M:System.Data.IDataRecord.GetData(System.Int32)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-425">For a description of this member, see <see cref="M:System.Data.IDataRecord.GetData(System.Int32)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14cce-426">Uma instância de <see cref="T:System.Data.IDataReader" /> a ser usada quando o campo aponta para dados mais dados estruturados remotos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-426">An instance of <see cref="T:System.Data.IDataReader" /> to be used when the field points to more remote structured data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14cce-427">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="14cce-427">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="14cce-428">Ele só pode ser usado quando a instância de <xref:System.Data.Common.DbDataReader> é convertida em uma interface de <xref:System.Data.IDataRecord>.</span><span class="sxs-lookup"><span data-stu-id="14cce-428">It can be used only when the <xref:System.Data.Common.DbDataReader> instance is cast to an <xref:System.Data.IDataRecord> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VisibleFieldCount">
      <MemberSignature Language="C#" Value="public virtual int VisibleFieldCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VisibleFieldCount" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataReader.VisibleFieldCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property VisibleFieldCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int VisibleFieldCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.VisibleFieldCount : int" Usage="System.Data.Common.DbDataReader.VisibleFieldCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="14cce-429">Obtém o número de campos em <see cref="T:System.Data.Common.DbDataReader" /> que não estão ocultos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-429">Gets the number of fields in the <see cref="T:System.Data.Common.DbDataReader" /> that are not hidden.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="14cce-430">O número de campos que não estão ocultos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="14cce-430">The number of fields that are not hidden.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14cce-431">Esse valor é usado para determinar quantos campos no <xref:System.Data.Common.DbDataReader> estão visíveis.</span><span class="sxs-lookup"><span data-stu-id="14cce-431">This value is used to determine how many fields in the <xref:System.Data.Common.DbDataReader> are visible.</span></span> <span data-ttu-id="14cce-432">Por exemplo, SELECT em uma chave primária parcial retorna as partes restantes da chave como campos ocultos.</span><span class="sxs-lookup"><span data-stu-id="14cce-432">For example, a SELECT on a partial primary key returns the remaining parts of the key as hidden fields.</span></span> <span data-ttu-id="14cce-433">Os campos ocultos são acrescentados sempre por trás os campos visíveis.</span><span class="sxs-lookup"><span data-stu-id="14cce-433">The hidden fields are always appended behind the visible fields.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>