<Type Name="ValueTask&lt;TResult&gt;" FullName="System.Threading.Tasks.ValueTask&lt;TResult&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5f78221c1b0cfa096a6ac681b4867a96f0e80e0e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct ValueTask&lt;TResult&gt; : IEquatable&lt;System.Threading.Tasks.ValueTask&lt;TResult&gt;&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ValueTask`1&lt;TResult&gt; extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Threading.Tasks.ValueTask`1&lt;!TResult&gt;&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.ValueTask`1" />
  <TypeSignature Language="VB.NET" Value="Public Structure ValueTask(Of TResult)&#xA;Implements IEquatable(Of ValueTask(Of TResult))" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TResult&gt;&#xA;public value class ValueTask : IEquatable&lt;System::Threading::Tasks::ValueTask&lt;TResult&gt;&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TResult" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Threading.Tasks.ValueTask&lt;TResult&gt;&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.AsyncMethodBuilder(typeof(System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TResult">
      <span data-ttu-id="49de7-101">O resultado.</span>
      <span class="sxs-lookup">
        <span data-stu-id="49de7-101">The result.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="49de7-102">Fornece um tipo de valor que encapsula um <see cref="T:System.Threading.Tasks.Task`1" /> e um <typeparamref name="TResult" />. Somente um de cada é usado.</span>
      <span class="sxs-lookup">
        <span data-stu-id="49de7-102">Provides a value type that wraps a <see cref="T:System.Threading.Tasks.Task`1" /> and a <typeparamref name="TResult" />, only one of which is used.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[ 

## Remarks  
<span data-ttu-id="49de7-103">Um método pode retornar uma instância deste tipo de valor quando é provável que o resultado de sua operação estarão disponível forma síncrona, e quando se espera ser invocado com tanta frequência que o custo de alocar um novo <xref:System.Threading.Tasks.Task%601> para cada chamada será um obstáculo.</span><span class="sxs-lookup"><span data-stu-id="49de7-103">A method may return an instance of this value type when it's likely that the result of its operation will be available synchronously, and when it's expected to be invoked so frequently that the cost of allocating a new <xref:System.Threading.Tasks.Task%601> for each call will be prohibitive.</span></span>   

<span data-ttu-id="49de7-104">Há vantagens e desvantagens de usar um <xref:System.Threading.Tasks.ValueTask%601> em vez de um <xref:System.Threading.Tasks.Task%601>.</span><span class="sxs-lookup"><span data-stu-id="49de7-104">There are tradeoffs to using a <xref:System.Threading.Tasks.ValueTask%601> instead of a <xref:System.Threading.Tasks.Task%601>.</span></span> <span data-ttu-id="49de7-105">Por exemplo, um <xref:System.Threading.Tasks.ValueTask%601> pode ajudar a evitar uma alocação no caso em que o resultado com êxito está disponível sincronicamente, ele também contém dois campos, enquanto um <xref:System.Threading.Tasks.Task%601> como uma referência de tipo é um campo único.</span><span class="sxs-lookup"><span data-stu-id="49de7-105">For example, while a <xref:System.Threading.Tasks.ValueTask%601> can help avoid an allocation in the case where the successful result is available synchronously, it also contains two fields, whereas a <xref:System.Threading.Tasks.Task%601> as a reference type is a single field.</span></span> <span data-ttu-id="49de7-106">Isso significa que uma chamada de método retorna dois campos que vale a pena de dados em vez de um, que é mais dados a serem copiados.</span><span class="sxs-lookup"><span data-stu-id="49de7-106">This means that a method call returns two fields worth of data instead of one, which is more data to copy.</span></span> <span data-ttu-id="49de7-107">Ele também significa que se um método que retorna um <xref:System.Threading.Tasks.ValueTask%601> é esperada dentro de um método assíncrono, a máquina de estado para esse método assíncrono será maior, porque ele deve armazenar uma estrutura que contém dois campos, em vez de uma única referência.</span><span class="sxs-lookup"><span data-stu-id="49de7-107">It also means, that if a method that returns a <xref:System.Threading.Tasks.ValueTask%601> is awaited within an async method, the state machine for that async method will be larger, because it must store a struct containing two fields instead of a single reference.</span></span>   

<span data-ttu-id="49de7-108">Para usos diferentes consumindo o resultado de uma operação assíncrona usando await, <xref:System.Threading.Tasks.ValueTask%601> pode levar a um modelo de programação mais complicado que requer mais alocações.</span><span class="sxs-lookup"><span data-stu-id="49de7-108">For uses other than consuming the result of an asynchronous operation using await, <xref:System.Threading.Tasks.ValueTask%601> can lead to a more convoluted programming model that requires more allocations.</span></span> <span data-ttu-id="49de7-109">Por exemplo, considere um método que pode retornar um <xref:System.Threading.Tasks.Task%601> com uma tarefa em cache como um resultado comum ou um <xref:System.Threading.Tasks.ValueTask%601>.</span><span class="sxs-lookup"><span data-stu-id="49de7-109">For example, consider a method that could return either a <xref:System.Threading.Tasks.Task%601> with a cached task as a common result or a <xref:System.Threading.Tasks.ValueTask%601>.</span></span> <span data-ttu-id="49de7-110">Se o consumidor do resultado deseja usá-lo como um <xref:System.Threading.Tasks.Task%601> em um método como <xref:System.Threading.Tasks.Task.WhenAll%2A> ou <xref:System.Threading.Tasks.Task.WhenAny%2A>, o <xref:System.Threading.Tasks.ValueTask%601> devem primeiro ser convertido em um <xref:System.Threading.Tasks.Task%601> usando <xref:System.Threading.Tasks.ValueTask%601.AsTask%2A>, à esquerda para uma alocação que seria evitada se um em cache <xref:System.Threading.Tasks.Task%601> tenha sido usada em primeiro lugar.</span><span class="sxs-lookup"><span data-stu-id="49de7-110">If the consumer of the result wants to use it as a <xref:System.Threading.Tasks.Task%601> in a method like <xref:System.Threading.Tasks.Task.WhenAll%2A> or <xref:System.Threading.Tasks.Task.WhenAny%2A>, the <xref:System.Threading.Tasks.ValueTask%601> must first be converted to a <xref:System.Threading.Tasks.Task%601> using <xref:System.Threading.Tasks.ValueTask%601.AsTask%2A>, leading to an allocation that would have been avoided if a cached <xref:System.Threading.Tasks.Task%601> had been used in the first place.</span></span>   

<span data-ttu-id="49de7-111">Como tal, a escolha padrão para qualquer método assíncrono deve ser para retornar um <xref:System.Threading.Tasks.Task> ou <xref:System.Threading.Tasks.Task%601>.</span><span class="sxs-lookup"><span data-stu-id="49de7-111">As such, the default choice for any asynchronous method should be to return a <xref:System.Threading.Tasks.Task> or <xref:System.Threading.Tasks.Task%601>.</span></span> <span data-ttu-id="49de7-112">Somente se a análise de desempenho de prova vale a pena deve um <xref:System.Threading.Tasks.ValueTask%601> ser usado em vez de um <xref:System.Threading.Tasks.Task%601>.</span><span class="sxs-lookup"><span data-stu-id="49de7-112">Only if performance analysis proves it worthwhile should a <xref:System.Threading.Tasks.ValueTask%601> be used instead of a <xref:System.Threading.Tasks.Task%601>.</span></span> <span data-ttu-id="49de7-113">Não há nenhuma versão de não-genérica do <xref:System.Threading.Tasks.ValueTask%601>, como o <xref:System.Threading.Tasks.Task.CompletedTask> propriedade pode ser usada para devolver um singleton concluído com êxito no caso em que um método retornando um <xref:System.Threading.Tasks.Task> é concluída de forma síncrona e com êxito.</span><span class="sxs-lookup"><span data-stu-id="49de7-113">There is no non-generic version of <xref:System.Threading.Tasks.ValueTask%601>, as the <xref:System.Threading.Tasks.Task.CompletedTask> property may be used to hand back a successfully completed singleton in the case where a method returning a <xref:System.Threading.Tasks.Task> completes synchronously and successfully.</span></span>   

> [!NOTE]
>  <span data-ttu-id="49de7-114">O uso do <xref:System.Threading.Tasks.ValueTask%601> tipo é suportado com C# 7 e não há suporte para qualquer versão do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="49de7-114">The use of the <xref:System.Threading.Tasks.ValueTask%601> type is supported starting with C# 7, and is not supported by any version of Visual Basic.</span></span>
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValueTask (System.Threading.Tasks.Task&lt;TResult&gt; task);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.Tasks.Task`1&lt;!TResult&gt; task) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask`1.#ctor(System.Threading.Tasks.Task{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (task As Task(Of TResult))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ValueTask(System::Threading::Tasks::Task&lt;TResult&gt; ^ task);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="task" Type="System.Threading.Tasks.Task&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <param name="task">
          <span data-ttu-id="49de7-115">A tarefa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49de7-115">The task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49de7-116">Inicializa uma nova instância da classe <see cref="T:System.Threading.Tasks.ValueTask`1" /> usando a tarefa fornecida que representa a operação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49de7-116">Initializes a new instance of the <see cref="T:System.Threading.Tasks.ValueTask`1" /> class using the supplied task that represents the operation.</span>
          </span>
        </summary>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="49de7-117">O argumento <paramref name="task" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49de7-117">The <paramref name="task" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValueTask (TResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!TResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask`1.#ctor(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (result As TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ValueTask(TResult result);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="result" Type="TResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="49de7-118">O resultado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49de7-118">The result.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49de7-119">Inicializa uma nova instância da classe <see cref="T:System.Threading.Tasks.ValueTask`1" /> usando o resultado fornecido de uma operação bem-sucedida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49de7-119">Initializes a new instance of the <see cref="T:System.Threading.Tasks.ValueTask`1" /> class using the supplied result of a successful operation.</span>
          </span>
        </summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="AsTask">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; AsTask ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; AsTask() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask`1.AsTask" />
      <MemberSignature Language="VB.NET" Value="Public Function AsTask () As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ AsTask();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="49de7-120">Recupera um objeto <see cref="T:System.Threading.Tasks.Task`1" /> que representa este <see cref="T:System.Threading.Tasks.ValueTask`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49de7-120">Retrieves a <see cref="T:System.Threading.Tasks.Task`1" /> object that represents this <see cref="T:System.Threading.Tasks.ValueTask`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49de7-121">O objeto <see cref="T:System.Threading.Tasks.Task`1" /> que é encapsulado neste <see cref="T:System.Threading.Tasks.ValueTask`1" />, caso exista ou um novo objeto <see cref="T:System.Threading.Tasks.Task`1" /> que representa o resultado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49de7-121">The <see cref="T:System.Threading.Tasks.Task`1" /> object that is wrapped in this <see cref="T:System.Threading.Tasks.ValueTask`1" /> if one exists, or a new <see cref="T:System.Threading.Tasks.Task`1" /> object that represents the result.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureAwait">
      <MemberSignature Language="C#" Value="public System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable&lt;TResult&gt; ConfigureAwait (bool continueOnCapturedContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable`1&lt;!TResult&gt; ConfigureAwait(bool continueOnCapturedContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask`1.ConfigureAwait(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConfigureAwait (continueOnCapturedContext As Boolean) As ConfiguredValueTaskAwaitable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::CompilerServices::ConfiguredValueTaskAwaitable&lt;TResult&gt; ConfigureAwait(bool continueOnCapturedContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="continueOnCapturedContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="continueOnCapturedContext">
          <span data-ttu-id="49de7-122">
            <see langword="true" /> para tentar realizar marshaling na continuação de volta para o contexto capturado, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49de7-122">
              <see langword="true" /> to attempt to marshal the continuation back to the captured context; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49de7-123">Configura um awaiter para esse valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49de7-123">Configures an awaiter for this value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49de7-124">O awaiter configurado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49de7-124">The configured awaiter.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAsyncMethodBuilder">
      <MemberSignature Language="C#" Value="public static System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder&lt;TResult&gt; CreateAsyncMethodBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1&lt;!TResult&gt; CreateAsyncMethodBuilder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask`1.CreateAsyncMethodBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateAsyncMethodBuilder () As AsyncValueTaskMethodBuilder(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::CompilerServices::AsyncValueTaskMethodBuilder&lt;TResult&gt; CreateAsyncMethodBuilder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="49de7-125">Cria um construtor de método para ser usado com um método assíncrono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49de7-125">Creates a method builder for use with an async method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49de7-126">O construtor criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49de7-126">The created builder.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask`1.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="49de7-127">O objeto a ser comparado com o objeto atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49de7-127">The object to compare with the current object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49de7-128">Determina se o objeto especificado é igual ao objeto atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49de7-128">Determines whether the specified object is equal to the current object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49de7-129">
            <see langword="true" /> se o objeto especificado for igual ao objeto atual, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49de7-129">
              <see langword="true" /> if the specified object is equal to the current object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Threading.Tasks.ValueTask&lt;TResult&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Threading.Tasks.ValueTask`1&lt;!TResult&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask`1.Equals(System.Threading.Tasks.ValueTask{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As ValueTask(Of TResult)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Threading::Tasks::ValueTask&lt;TResult&gt; other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Threading.Tasks.ValueTask&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="49de7-130">O objeto a ser comparado com o objeto atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49de7-130">The object to compare with the current object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49de7-131">Determina se o objeto <see cref="T:System.Threading.Tasks.ValueTask`1" /> especificado é igual ao objeto <see cref="T:System.Threading.Tasks.ValueTask`1" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49de7-131">Determines whether the specified <see cref="T:System.Threading.Tasks.ValueTask`1" /> object is equal to the current <see cref="T:System.Threading.Tasks.ValueTask`1" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49de7-132">
            <see langword="true" /> se o objeto especificado for igual ao objeto atual, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49de7-132">
              <see langword="true" /> if the specified object is equal to the current object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAwaiter">
      <MemberSignature Language="C#" Value="public System.Runtime.CompilerServices.ValueTaskAwaiter&lt;TResult&gt; GetAwaiter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Runtime.CompilerServices.ValueTaskAwaiter`1&lt;!TResult&gt; GetAwaiter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask`1.GetAwaiter" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAwaiter () As ValueTaskAwaiter(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::CompilerServices::ValueTaskAwaiter&lt;TResult&gt; GetAwaiter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.CompilerServices.ValueTaskAwaiter&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="49de7-133">Cria um awaiter para esse valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49de7-133">Creates an awaiter for this value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49de7-134">O awaiter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49de7-134">The awaiter.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask`1.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="49de7-135">Retorna o código hash para essa instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49de7-135">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49de7-136">O código hash do objeto atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49de7-136">The hash code for the current object.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCanceled">
      <MemberSignature Language="C#" Value="public bool IsCanceled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCanceled" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ValueTask`1.IsCanceled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCanceled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCanceled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="49de7-137">Obtém um valor que indica se este objeto representa uma operação cancelada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49de7-137">Gets a value that indicates whether this object represents a canceled operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="49de7-138">
            <see langword="true" /> Se este objeto representa uma operação cancelada. Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49de7-138">
              <see langword="true" /> if this object represents a canceled operation; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCompleted">
      <MemberSignature Language="C#" Value="public bool IsCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompleted" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ValueTask`1.IsCompleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCompleted { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="49de7-139">Obtém um valor que indica se este objeto representa uma operação concluída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49de7-139">Gets a value that indicates whether this object represents a completed operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="49de7-140">
            <see langword="true" /> Se este objeto representa uma operação concluída; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49de7-140">
              <see langword="true" /> if this object represents a completed operation; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCompletedSuccessfully">
      <MemberSignature Language="C#" Value="public bool IsCompletedSuccessfully { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompletedSuccessfully" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ValueTask`1.IsCompletedSuccessfully" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCompletedSuccessfully As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCompletedSuccessfully { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="49de7-141">Obtém um valor que indica se este objeto representa uma operação concluída com êxito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49de7-141">Gets a value that indicates whether this object represents a successfully completed operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="49de7-142">
            <see langword="true" /> Se este objeto representa uma operação concluída com êxito; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49de7-142">
              <see langword="true" /> if this object represents a successfully completed operation; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFaulted">
      <MemberSignature Language="C#" Value="public bool IsFaulted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFaulted" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ValueTask`1.IsFaulted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFaulted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFaulted { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="49de7-143">Obtém um valor que indica se este objeto representa uma operação com falha.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49de7-143">Gets a value that indicates whether this object represents a failed operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="49de7-144">
            <see langword="true" /> Se este objeto representa uma operação com falha; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49de7-144">
              <see langword="true" /> if this object represents a failed operation; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Threading.Tasks.ValueTask&lt;TResult&gt; left, System.Threading.Tasks.ValueTask&lt;TResult&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Threading.Tasks.ValueTask`1&lt;!TResult&gt; left, valuetype System.Threading.Tasks.ValueTask`1&lt;!TResult&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask`1.op_Equality(System.Threading.Tasks.ValueTask{`0},System.Threading.Tasks.ValueTask{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As ValueTask(Of TResult), right As ValueTask(Of TResult)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Threading::Tasks::ValueTask&lt;TResult&gt; left, System::Threading::Tasks::ValueTask&lt;TResult&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Threading.Tasks.ValueTask&lt;TResult&gt;" />
        <Parameter Name="right" Type="System.Threading.Tasks.ValueTask&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="49de7-145">O primeiro valor a ser comparado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49de7-145">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="49de7-146">O segundo valor a ser comparado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49de7-146">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49de7-147">Compara dois valores quanto à igualdade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49de7-147">Compares two values for equality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49de7-148">
            <see langword="true" /> se os dois valores de <see cref="T:System.Threading.Tasks.ValueTask`1" /> forem iguais, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49de7-148">
              <see langword="true" /> if the two <see cref="T:System.Threading.Tasks.ValueTask`1" /> values are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Threading.Tasks.ValueTask&lt;TResult&gt; left, System.Threading.Tasks.ValueTask&lt;TResult&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Threading.Tasks.ValueTask`1&lt;!TResult&gt; left, valuetype System.Threading.Tasks.ValueTask`1&lt;!TResult&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask`1.op_Inequality(System.Threading.Tasks.ValueTask{`0},System.Threading.Tasks.ValueTask{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As ValueTask(Of TResult), right As ValueTask(Of TResult)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Threading::Tasks::ValueTask&lt;TResult&gt; left, System::Threading::Tasks::ValueTask&lt;TResult&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Threading.Tasks.ValueTask&lt;TResult&gt;" />
        <Parameter Name="right" Type="System.Threading.Tasks.ValueTask&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="49de7-149">O primeiro valor a ser comparado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49de7-149">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="49de7-150">O segundo valor a ser comparado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49de7-150">The seconed value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49de7-151">Determina se dois valores <see cref="T:System.Threading.Tasks.ValueTask`1" /> são diferentes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49de7-151">Determines whether two <see cref="T:System.Threading.Tasks.ValueTask`1" /> values are unequal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49de7-152">
            <see langword="true" /> se os dois valores de <see cref="T:System.Threading.Tasks.ValueTask`1" /> não forem iguais, caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49de7-152">
              <see langword="true" /> if the two <see cref="T:System.Threading.Tasks.ValueTask`1" /> values are not equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Result">
      <MemberSignature Language="C#" Value="public TResult Result { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TResult Result" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ValueTask`1.Result" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Result As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TResult Result { TResult get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="49de7-153">Obtém o resultado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49de7-153">Gets the result.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="49de7-154">O resultado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49de7-154">The result.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
## Remarks  
 <span data-ttu-id="49de7-155">Se este <xref:System.Threading.Tasks.ValueTask%601> encapsula um resultado com êxito, essa propriedade retorna diretamente.</span><span class="sxs-lookup"><span data-stu-id="49de7-155">If this <xref:System.Threading.Tasks.ValueTask%601> wraps a successful result, this property returns it directly.</span></span>

 <span data-ttu-id="49de7-156">Se ele encapsula uma <xref:System.Threading.Tasks.Task%601>, o comportamento de <xref:System.Threading.Tasks.ValueTask%601.Result%2A> é semelhante ao comportamento de acessar <xref:System.Threading.Tasks.Task%601.Result%2A> na tarefa encapsulada: se a tarefa não foi concluída, acessar a propriedade bloqueia o thread de chamada até que ela seja concluída; se a tarefa foi concluída com êxito, a propriedade retorna o resultado; Se a tarefa falhou ou foi cancellecd, acessando a propriedade gera uma exceção.</span><span class="sxs-lookup"><span data-stu-id="49de7-156">If it wraps a <xref:System.Threading.Tasks.Task%601>, the behavior of <xref:System.Threading.Tasks.ValueTask%601.Result%2A> is similar to the behavior of accessing <xref:System.Threading.Tasks.Task%601.Result%2A> on the wrapped task: if the task hasn't completed, accessing the property blocks the calling thread until it completes; if the task has completed successfully, the property returns the result; if the task has faulted or was cancellecd, accessing the property throws an exception.</span></span> <span data-ttu-id="49de7-157">A exceção lançada não é empacotada em um <xref:System.AggregateException>, que é diferente do comportamento do <xref:System.Threading.Tasks.Task%601.Result%2A> na mesma situação.</span><span class="sxs-lookup"><span data-stu-id="49de7-157">The thrown exception is not wrapped in an <xref:System.AggregateException>, which is different from the behavior of <xref:System.Threading.Tasks.Task%601.Result%2A> in the same situation.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask`1.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="49de7-158">Retorna uma cadeia de caracteres que representa o objeto atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49de7-158">Returns a string that represents the current object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49de7-159">Uma cadeia de caracteres que representa o objeto atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49de7-159">A string that represents the current object.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
  </Members>
</Type>