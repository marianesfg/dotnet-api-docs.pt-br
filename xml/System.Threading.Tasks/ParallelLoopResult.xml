<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ParallelLoopResult.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5afaa97be2577030d0474fb91f8285761b19119c4.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">afaa97be2577030d0474fb91f8285761b19119c4</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Threading.Tasks.ParallelLoopResult">
          <source>Provides completion status on the execution of a <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Parallel" /&gt;</ph> loop.</source>
          <target state="translated">Fornece o status de conclusão da execução de um loop <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Parallel" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.ParallelLoopResult">
          <source>If <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopResult.IsCompleted%2A&gt;</ph> returns true, then the loop ran to completion, such that all iterations of the loop were executed.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopResult.IsCompleted%2A&gt;</ph> retornar true, em seguida, o loop é executado até a conclusão, que foram executadas todas as iterações do loop.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.ParallelLoopResult">
          <source>If <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopResult.IsCompleted%2A&gt;</ph> returns false and <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopResult.LowestBreakIteration%2A&gt;</ph> returns null, a call to <ph id="ph3">&lt;xref:System.Threading.Tasks.ParallelLoopState.Stop%2A&gt;</ph> was used to end the loop prematurely.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopResult.IsCompleted%2A&gt;</ph> retorna false e <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopResult.LowestBreakIteration%2A&gt;</ph> retornará um valor nulo, uma chamada para <ph id="ph3">&lt;xref:System.Threading.Tasks.ParallelLoopState.Stop%2A&gt;</ph> foi usada para encerrar o loop prematuramente.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.ParallelLoopResult">
          <source>If <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopResult.IsCompleted%2A&gt;</ph> returns false and <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopResult.LowestBreakIteration%2A&gt;</ph> returns a non-null integral value, <ph id="ph3">&lt;xref:System.Threading.Tasks.ParallelLoopState.Break%2A&gt;</ph> was used to end the loop prematurely.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopResult.IsCompleted%2A&gt;</ph> retorna false e <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopResult.LowestBreakIteration%2A&gt;</ph> retorna um valor inteiro não nulo, <ph id="ph3">&lt;xref:System.Threading.Tasks.ParallelLoopState.Break%2A&gt;</ph> foi usada para encerrar o loop prematuramente.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.ParallelLoopResult">
          <source>All public members of <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.ParallelLoopResult" /&gt;</ph> are thread safe and may be called from multiple threads concurrently.</source>
          <target state="translated">Todos os membros públicos de <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.ParallelLoopResult" /&gt;</ph> são thread-safe e pode ser chamado de vários threads simultaneamente.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="P:System.Threading.Tasks.ParallelLoopResult.IsCompleted">
          <source>Gets whether the loop ran to completion, such that all iterations of the loop were executed and the loop didn't receive a request to end prematurely.</source>
          <target state="translated">Especifica se o loop foi executado até a conclusão, por exemplo, todas as iterações do loop foram executadas e o loop não recebeu uma solicitação para ser encerrado prematuramente.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.ParallelLoopResult.IsCompleted">
          <source>true if the loop ran to completion; otherwise false;</source>
          <target state="translated">true se o loop foi executado até a conclusão; caso contrário, false;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="P:System.Threading.Tasks.ParallelLoopResult.LowestBreakIteration">
          <source>Gets the index of the lowest iteration from which <ph id="ph1">&lt;see cref="M:System.Threading.Tasks.ParallelLoopState.Break" /&gt;</ph> was called.</source>
          <target state="translated">Obtém o índice de menor iteração do qual <ph id="ph1">&lt;see cref="M:System.Threading.Tasks.ParallelLoopState.Break" /&gt;</ph> foi chamado.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.ParallelLoopResult.LowestBreakIteration">
          <source>Returns an integer that represents the lowest iteration from which the Break statement was called.</source>
          <target state="translated">Retorna um inteiro que representa a iteração menor do que a instrução Break foi chamada.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.ParallelLoopResult.LowestBreakIteration">
          <source>If <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState.Break%2A&gt;</ph> was not employed, this property will return null.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState.Break%2A&gt;</ph> não foi utilizados, esta propriedade retornará nulo.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>