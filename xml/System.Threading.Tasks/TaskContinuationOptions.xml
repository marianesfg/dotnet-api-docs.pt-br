<Type Name="TaskContinuationOptions" FullName="System.Threading.Tasks.TaskContinuationOptions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a1c7a235951de4ea0250e610e035f8451c659154" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30529370" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum TaskContinuationOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed TaskContinuationOptions extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.TaskContinuationOptions" />
  <TypeSignature Language="VB.NET" Value="Public Enum TaskContinuationOptions" />
  <TypeSignature Language="C++ CLI" Value="public enum class TaskContinuationOptions" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c19ac-101">Especifica o comportamento de uma tarefa criada com o método <see cref="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" /> ou <see cref="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.Tasks.TaskContinuationOptions)" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c19ac-101">Specifies the behavior for a task that is created by using the <see cref="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" /> or <see cref="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.Tasks.TaskContinuationOptions)" /> method.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AttachedToParent">
      <MemberSignature Language="C#" Value="AttachedToParent" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.Tasks.TaskContinuationOptions AttachedToParent = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.Tasks.TaskContinuationOptions.AttachedToParent" />
      <MemberSignature Language="VB.NET" Value="AttachedToParent" />
      <MemberSignature Language="C++ CLI" Value="AttachedToParent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskContinuationOptions</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c19ac-102">Especifica que a continuação, se for uma tarefa filho, será anexada a um pai na hierarquia de tarefas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c19ac-102">Specifies that the continuation, if it is a child task, is attached to a parent in the task hierarchy.</span>
          </span>
          <span data-ttu-id="c19ac-103">A continuação poderá ser uma tarefa filho somente se seu antecessor também for uma tarefa filho.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c19ac-103">The continuation can be a child task only if its antecedent is also a child task.</span>
          </span>
          <span data-ttu-id="c19ac-104">Por padrão, uma tarefa filho (ou seja, uma tarefa interna criada por uma tarefa externa) é executada independentemente de seu pai.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c19ac-104">By default, a child task (that is, an inner task created by an outer task) executes independently of its parent.</span>
          </span>
          <span data-ttu-id="c19ac-105">Use a opção <see cref="F:System.Threading.Tasks.TaskContinuationOptions.AttachedToParent" /> para que as tarefas pai e filho sejam sincronizadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c19ac-105">You can use the <see cref="F:System.Threading.Tasks.TaskContinuationOptions.AttachedToParent" /> option so that the parent and child tasks are synchronized.</span>
          </span>
          <span data-ttu-id="c19ac-106">Observe que, se uma tarefa pai estiver configurada com a opção <see cref="F:System.Threading.Tasks.TaskCreationOptions.DenyChildAttach" />, a opção <see cref="F:System.Threading.Tasks.TaskCreationOptions.AttachedToParent" /> na tarefa filho não terá efeito, e a tarefa filho será executada como uma tarefa filho desanexada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c19ac-106">Note that if a parent task is configured with the <see cref="F:System.Threading.Tasks.TaskCreationOptions.DenyChildAttach" /> option, the <see cref="F:System.Threading.Tasks.TaskCreationOptions.AttachedToParent" /> option in the child task has no effect, and the child task will execute as a detached child task.</span>
          </span>
          <span data-ttu-id="c19ac-107">Para obter mais informações, consulte [Tarefas filho anexadas e desanexadas](~/docs/standard/parallel-programming/attached-and-detached-child-tasks.md).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c19ac-107">For more information, see [Attached and Detached Child Tasks](~/docs/standard/parallel-programming/attached-and-detached-child-tasks.md).</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="DenyChildAttach">
      <MemberSignature Language="C#" Value="DenyChildAttach" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.Tasks.TaskContinuationOptions DenyChildAttach = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.Tasks.TaskContinuationOptions.DenyChildAttach" />
      <MemberSignature Language="VB.NET" Value="DenyChildAttach" />
      <MemberSignature Language="C++ CLI" Value="DenyChildAttach" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskContinuationOptions</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c19ac-108">Especifica que qualquer tarefa filho (ou seja, qualquer tarefa interna aninhada criada por essa continuação) criada com a opção <see cref="F:System.Threading.Tasks.TaskCreationOptions.AttachedToParent" /> e que tenta ser executada como uma tarefa filho anexada não poderá ser anexada à tarefa pai e será executada como uma tarefa filho desanexada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c19ac-108">Specifies that any child task (that is, any nested inner task created by this continuation) that is created with the <see cref="F:System.Threading.Tasks.TaskCreationOptions.AttachedToParent" /> option and attempts to execute as an attached child task will not be able to attach to the parent task and will execute instead as a detached child task.</span>
          </span>
          <span data-ttu-id="c19ac-109">Para obter mais informações, consulte [Tarefas filho anexadas e desanexadas](~/docs/standard/parallel-programming/attached-and-detached-child-tasks.md).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c19ac-109">For more information, see [Attached and Detached Child Tasks](~/docs/standard/parallel-programming/attached-and-detached-child-tasks.md).</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ExecuteSynchronously">
      <MemberSignature Language="C#" Value="ExecuteSynchronously" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.Tasks.TaskContinuationOptions ExecuteSynchronously = int32(524288)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously" />
      <MemberSignature Language="VB.NET" Value="ExecuteSynchronously" />
      <MemberSignature Language="C++ CLI" Value="ExecuteSynchronously" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskContinuationOptions</ReturnType>
      </ReturnValue>
      <MemberValue>524288</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c19ac-110">Especifica que a tarefa de continuação deve ser executada de forma síncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c19ac-110">Specifies that the continuation task should be executed synchronously.</span>
          </span>
          <span data-ttu-id="c19ac-111">Com essa opção especificada, a continuação é executada no mesmo thread que faz com que a tarefa do antecessor faça a transição para o estado final.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c19ac-111">With this option specified, the continuation runs on the same thread that causes the antecedent task to transition into its final state.</span>
          </span>
          <span data-ttu-id="c19ac-112">Se o antecessor já tiver sido concluído quando a continuação for criada, a continuação será executada no thread que cria a continuação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c19ac-112">If the antecedent is already complete when the continuation is created, the continuation will run on the thread that creates the continuation.</span>
          </span>
          <span data-ttu-id="c19ac-113">Se o <see cref="T:System.Threading.CancellationTokenSource" /> do antecessor for descartado em um bloco <see langword="finally" /> (<see langword="Finally" /> no Visual Basic), uma continuação com essa opção será executada nesse bloco <see langword="finally" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c19ac-113">If the antecedent's <see cref="T:System.Threading.CancellationTokenSource" /> is disposed in a <see langword="finally" /> block (<see langword="Finally" /> in Visual Basic), a continuation with this option will run in that <see langword="finally" /> block.</span>
          </span>
          <span data-ttu-id="c19ac-114">Somente continuações de execução muito curta devem ser executadas de forma síncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c19ac-114">Only very short-running continuations should be executed synchronously.</span>
          </span>
          <span data-ttu-id="c19ac-115">Como a tarefa é executada de forma síncrona, não é necessário chamar um método como <see cref="M:System.Threading.Tasks.Task.Wait" /> para garantir que o thread de chamada aguarda até que a tarefa seja concluída.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c19ac-115">Because the task executes synchronously, there is no need to call a method such as <see cref="M:System.Threading.Tasks.Task.Wait" /> to ensure that the calling thread waits for the task to complete.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="HideScheduler">
      <MemberSignature Language="C#" Value="HideScheduler" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.Tasks.TaskContinuationOptions HideScheduler = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.Tasks.TaskContinuationOptions.HideScheduler" />
      <MemberSignature Language="VB.NET" Value="HideScheduler" />
      <MemberSignature Language="C++ CLI" Value="HideScheduler" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskContinuationOptions</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c19ac-116">Especifica que as tarefas criadas pela continuação com a chamada de métodos como <see cref="M:System.Threading.Tasks.Task.Run(System.Action)" /> ou <see cref="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task})" /> observem o agendador padrão (<see cref="P:System.Threading.Tasks.TaskScheduler.Default" />) em vez do agendador no qual essa continuação está sendo executada como o agendador atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c19ac-116">Specifies that tasks created by the continuation by calling methods such as <see cref="M:System.Threading.Tasks.Task.Run(System.Action)" /> or <see cref="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task})" /> see the default scheduler (<see cref="P:System.Threading.Tasks.TaskScheduler.Default" />) rather than the scheduler on which this continuation is running as the current scheduler.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="LazyCancellation">
      <MemberSignature Language="C#" Value="LazyCancellation" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.Tasks.TaskContinuationOptions LazyCancellation = int32(32)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.Tasks.TaskContinuationOptions.LazyCancellation" />
      <MemberSignature Language="VB.NET" Value="LazyCancellation" />
      <MemberSignature Language="C++ CLI" Value="LazyCancellation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskContinuationOptions</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c19ac-117">Em caso de cancelamento da continuação, impede a conclusão da continuação até que o antecessor seja concluído.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c19ac-117">In the case of continuation cancellation, prevents completion of the continuation until the antecedent has completed.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="LongRunning">
      <MemberSignature Language="C#" Value="LongRunning" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.Tasks.TaskContinuationOptions LongRunning = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.Tasks.TaskContinuationOptions.LongRunning" />
      <MemberSignature Language="VB.NET" Value="LongRunning" />
      <MemberSignature Language="C++ CLI" Value="LongRunning" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskContinuationOptions</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c19ac-118">Especifica que uma continuação será uma operação de execução longa e de alta granularidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c19ac-118">Specifies that a continuation will be a long-running, course-grained operation.</span>
          </span>
          <span data-ttu-id="c19ac-119">Fornece uma dica para o <see cref="T:System.Threading.Tasks.TaskScheduler" /> de que podem ser necessárias assinaturas em excesso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c19ac-119">It provides a hint to the <see cref="T:System.Threading.Tasks.TaskScheduler" /> that oversubscription may be warranted.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.Tasks.TaskContinuationOptions None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.Tasks.TaskContinuationOptions.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskContinuationOptions</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c19ac-120">Quando nenhuma opção de continuação é especificada, especifica que o comportamento padrão deve ser usado ao executar uma continuação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c19ac-120">When no continuation options are specified, specifies that default behavior should be used when executing a continuation.</span>
          </span>
          <span data-ttu-id="c19ac-121">A continuação é executada de forma assíncrona quando a tarefa do antecessor é concluída, independentemente do valor da propriedade <see cref="P:System.Threading.Tasks.Task.Status" /> final do antecessor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c19ac-121">The continuation runs asynchronously when the antecedent task completes, regardless of the antecedent's final <see cref="P:System.Threading.Tasks.Task.Status" /> property value.</span>
          </span>
          <span data-ttu-id="c19ac-122">Se a continuação for uma tarefa filho, ela será criada como uma tarefa aninhada desanexada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c19ac-122">It the continuation is a child task, it is created as a detached nested task.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="NotOnCanceled">
      <MemberSignature Language="C#" Value="NotOnCanceled" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.Tasks.TaskContinuationOptions NotOnCanceled = int32(262144)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.Tasks.TaskContinuationOptions.NotOnCanceled" />
      <MemberSignature Language="VB.NET" Value="NotOnCanceled" />
      <MemberSignature Language="C++ CLI" Value="NotOnCanceled" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskContinuationOptions</ReturnType>
      </ReturnValue>
      <MemberValue>262144</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c19ac-123">Especifica que a tarefa de continuação não deve ser agendada se seu antecessor foi cancelado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c19ac-123">Specifies that the continuation task should not be scheduled if its antecedent was canceled.</span>
          </span>
          <span data-ttu-id="c19ac-124">Um antecessor será cancelado se a propriedade <see cref="P:System.Threading.Tasks.Task.Status" /> após a conclusão for <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c19ac-124">An antecedent is canceled if its <see cref="P:System.Threading.Tasks.Task.Status" /> property upon completion is <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" />.</span>
          </span>
          <span data-ttu-id="c19ac-125">Essa opção não é válida para continuações de várias tarefas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c19ac-125">This option is not valid for multi-task continuations.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="NotOnFaulted">
      <MemberSignature Language="C#" Value="NotOnFaulted" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.Tasks.TaskContinuationOptions NotOnFaulted = int32(131072)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.Tasks.TaskContinuationOptions.NotOnFaulted" />
      <MemberSignature Language="VB.NET" Value="NotOnFaulted" />
      <MemberSignature Language="C++ CLI" Value="NotOnFaulted" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskContinuationOptions</ReturnType>
      </ReturnValue>
      <MemberValue>131072</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c19ac-126">Especifica que a tarefa de continuação não deve ser agendada se seu antecessor gerou uma exceção sem tratamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c19ac-126">Specifies that the continuation task should not be scheduled if its antecedent threw an unhandled exception.</span>
          </span>
          <span data-ttu-id="c19ac-127">Um antecessor gerará uma exceção sem tratamento se a propriedade <see cref="P:System.Threading.Tasks.Task.Status" /> após a conclusão for <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c19ac-127">An antecedent throws an unhandled exception if its <see cref="P:System.Threading.Tasks.Task.Status" /> property upon completion is <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />.</span>
          </span>
          <span data-ttu-id="c19ac-128">Essa opção não é válida para continuações de várias tarefas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c19ac-128">This option is not valid for multi-task continuations.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="NotOnRanToCompletion">
      <MemberSignature Language="C#" Value="NotOnRanToCompletion" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.Tasks.TaskContinuationOptions NotOnRanToCompletion = int32(65536)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.Tasks.TaskContinuationOptions.NotOnRanToCompletion" />
      <MemberSignature Language="VB.NET" Value="NotOnRanToCompletion" />
      <MemberSignature Language="C++ CLI" Value="NotOnRanToCompletion" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskContinuationOptions</ReturnType>
      </ReturnValue>
      <MemberValue>65536</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c19ac-129">Especifica que a tarefa de continuação não deve ser agendada se seu antecessor foi executado até a conclusão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c19ac-129">Specifies that the continuation task should not be scheduled if its antecedent ran to completion.</span>
          </span>
          <span data-ttu-id="c19ac-130">Um antecessor será executado até a conclusão se a propriedade <see cref="P:System.Threading.Tasks.Task.Status" /> após a conclusão for <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c19ac-130">An antecedent runs to completion if its <see cref="P:System.Threading.Tasks.Task.Status" /> property upon completion is <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" />.</span>
          </span>
          <span data-ttu-id="c19ac-131">Essa opção não é válida para continuações de várias tarefas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c19ac-131">This option is not valid for multi-task continuations.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="OnlyOnCanceled">
      <MemberSignature Language="C#" Value="OnlyOnCanceled" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.Tasks.TaskContinuationOptions OnlyOnCanceled = int32(196608)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled" />
      <MemberSignature Language="VB.NET" Value="OnlyOnCanceled" />
      <MemberSignature Language="C++ CLI" Value="OnlyOnCanceled" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskContinuationOptions</ReturnType>
      </ReturnValue>
      <MemberValue>196608</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c19ac-132">Especifica que a continuação deve ser agendada somente se seu antecessor foi cancelado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c19ac-132">Specifies that the continuation should be scheduled only if its antecedent was canceled.</span>
          </span>
          <span data-ttu-id="c19ac-133">Um antecessor será cancelado se a propriedade <see cref="P:System.Threading.Tasks.Task.Status" /> após a conclusão for <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c19ac-133">An antecedent is canceled if its <see cref="P:System.Threading.Tasks.Task.Status" /> property upon completion is <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" />.</span>
          </span>
          <span data-ttu-id="c19ac-134">Essa opção não é válida para continuações de várias tarefas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c19ac-134">This option is not valid for multi-task continuations.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="OnlyOnFaulted">
      <MemberSignature Language="C#" Value="OnlyOnFaulted" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.Tasks.TaskContinuationOptions OnlyOnFaulted = int32(327680)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnFaulted" />
      <MemberSignature Language="VB.NET" Value="OnlyOnFaulted" />
      <MemberSignature Language="C++ CLI" Value="OnlyOnFaulted" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskContinuationOptions</ReturnType>
      </ReturnValue>
      <MemberValue>327680</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c19ac-135">Especifica que a tarefa de continuação deve ser agendada somente se seu antecessor gerou uma exceção sem tratamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c19ac-135">Specifies that the continuation task should be scheduled only if its antecedent threw an unhandled exception.</span>
          </span>
          <span data-ttu-id="c19ac-136">Um antecessor gerará uma exceção sem tratamento se a propriedade <see cref="P:System.Threading.Tasks.Task.Status" /> após a conclusão for <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c19ac-136">An antecedent throws an unhandled exception if its <see cref="P:System.Threading.Tasks.Task.Status" /> property upon completion is <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />.</span>
          </span>
          <span data-ttu-id="c19ac-137">A opção <see cref="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnFaulted" /> garante que a propriedade <see cref="P:System.Threading.Tasks.Task.Exception" /> no antecessor não é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c19ac-137">The <see cref="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnFaulted" /> option guarantees that the <see cref="P:System.Threading.Tasks.Task.Exception" /> property in the antecedent is not <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c19ac-138">Use essa propriedade para capturar a exceção e ver qual exceção causou a falha na tarefa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c19ac-138">You can use that property to catch the exception and see which exception caused the task to fault.</span>
          </span>
          <span data-ttu-id="c19ac-139">Se você não acessar a propriedade <see cref="P:System.Threading.Tasks.Task.Exception" />, a exceção não será tratada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c19ac-139">If you do not access the <see cref="P:System.Threading.Tasks.Task.Exception" /> property, the exception is unhandled.</span>
          </span>
          <span data-ttu-id="c19ac-140">Além disso, se você tentar acessar a propriedade <see cref="P:System.Threading.Tasks.Task`1.Result" /> de uma tarefa cancelada ou que apresentou falha, uma nova exceção será gerada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c19ac-140">Also, if you attempt to access the <see cref="P:System.Threading.Tasks.Task`1.Result" /> property of a task that has been canceled or has faulted, a new exception is thrown.</span>
          </span>
          <span data-ttu-id="c19ac-141">Essa opção não é válida para continuações de várias tarefas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c19ac-141">This option is not valid for multi-task continuations.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="OnlyOnRanToCompletion">
      <MemberSignature Language="C#" Value="OnlyOnRanToCompletion" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.Tasks.TaskContinuationOptions OnlyOnRanToCompletion = int32(393216)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnRanToCompletion" />
      <MemberSignature Language="VB.NET" Value="OnlyOnRanToCompletion" />
      <MemberSignature Language="C++ CLI" Value="OnlyOnRanToCompletion" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskContinuationOptions</ReturnType>
      </ReturnValue>
      <MemberValue>393216</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c19ac-142">Especifica que a continuação deve ser agendada somente se seu antecessor foi executado até a conclusão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c19ac-142">Specifies that the continuation should be scheduled only if its antecedent ran to completion.</span>
          </span>
          <span data-ttu-id="c19ac-143">Um antecessor será executado até a conclusão se a propriedade <see cref="P:System.Threading.Tasks.Task.Status" /> após a conclusão for <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c19ac-143">An antecedent runs to completion if its <see cref="P:System.Threading.Tasks.Task.Status" /> property upon completion is <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" />.</span>
          </span>
          <span data-ttu-id="c19ac-144">Essa opção não é válida para continuações de várias tarefas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c19ac-144">This option is not valid for multi-task continuations.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="PreferFairness">
      <MemberSignature Language="C#" Value="PreferFairness" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.Tasks.TaskContinuationOptions PreferFairness = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.Tasks.TaskContinuationOptions.PreferFairness" />
      <MemberSignature Language="VB.NET" Value="PreferFairness" />
      <MemberSignature Language="C++ CLI" Value="PreferFairness" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskContinuationOptions</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c19ac-145">Uma dica para um <see cref="T:System.Threading.Tasks.TaskScheduler" /> para agendar a tarefa na ordem em que as tarefas foram agendadas, para que seja mais provável que as tarefas agendadas anteriormente sejam executadas antes e as tarefas agendadas posteriormente sejam executadas depois.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c19ac-145">A hint to a <see cref="T:System.Threading.Tasks.TaskScheduler" /> to schedule task in the order in which they were scheduled, so that tasks scheduled sooner are more likely to run sooner, and tasks scheduled later are more likely to run later.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="RunContinuationsAsynchronously">
      <MemberSignature Language="C#" Value="RunContinuationsAsynchronously" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.Tasks.TaskContinuationOptions RunContinuationsAsynchronously = int32(64)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.Tasks.TaskContinuationOptions.RunContinuationsAsynchronously" />
      <MemberSignature Language="VB.NET" Value="RunContinuationsAsynchronously" />
      <MemberSignature Language="C++ CLI" Value="RunContinuationsAsynchronously" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskContinuationOptions</ReturnType>
      </ReturnValue>
      <MemberValue>64</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c19ac-146">Especifica que a tarefa de continuação deve ser executada de forma assíncrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c19ac-146">Specifies that the continuation task should be run asynchronously.</span>
          </span>
          <span data-ttu-id="c19ac-147">Essa opção tem precedência sobre <see cref="F:System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c19ac-147">This option has precedence over <see cref="F:System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously" />.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>