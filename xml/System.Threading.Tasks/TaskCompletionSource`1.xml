<Type Name="TaskCompletionSource&lt;TResult&gt;" FullName="System.Threading.Tasks.TaskCompletionSource&lt;TResult&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8c4cf0aa0e3897849dd73d7ddc18f615feebe630" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51933747" /></Metadata><TypeSignature Language="C#" Value="public class TaskCompletionSource&lt;TResult&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TaskCompletionSource`1&lt;TResult&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.TaskCompletionSource`1" />
  <TypeSignature Language="VB.NET" Value="Public Class TaskCompletionSource(Of TResult)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TResult&gt;&#xA;public ref class TaskCompletionSource" />
  <TypeSignature Language="F#" Value="type TaskCompletionSource&lt;'Result&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TResult" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TResult"><span data-ttu-id="d31b6-101">O tipo de valor do resultado associado a este <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />.</span><span class="sxs-lookup"><span data-stu-id="d31b6-101">The type of the result value assocatied with this <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />.</span></span></typeparam>
    <summary><span data-ttu-id="d31b6-102">Representa o lado do produtor de um <see cref="T:System.Threading.Tasks.Task`1" /> não associado a um delegado, fornecendo acesso ao lado do consumidor por meio da propriedade <see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" />.</span><span class="sxs-lookup"><span data-stu-id="d31b6-102">Represents the producer side of a <see cref="T:System.Threading.Tasks.Task`1" /> unbound to a delegate, providing access to the consumer side through the <see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" /> property.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d31b6-103">Em muitos cenários, é útil habilitar um <xref:System.Threading.Tasks.Task%601> para representar uma operação assíncrona externa.</span><span class="sxs-lookup"><span data-stu-id="d31b6-103">In many scenarios, it is useful to enable a <xref:System.Threading.Tasks.Task%601> to represent an external asynchronous operation.</span></span> <span data-ttu-id="d31b6-104"><xref:System.Threading.Tasks.TaskCompletionSource%601> é fornecido para essa finalidade.</span><span class="sxs-lookup"><span data-stu-id="d31b6-104"><xref:System.Threading.Tasks.TaskCompletionSource%601> is provided for this purpose.</span></span> <span data-ttu-id="d31b6-105">Ele permite a criação de uma tarefa que pode ser enviada para os consumidores.</span><span class="sxs-lookup"><span data-stu-id="d31b6-105">It enables the creation of a task that can be handed out to consumers.</span></span> <span data-ttu-id="d31b6-106">Os consumidores podem usar os membros da tarefa da mesma forma como faria em qualquer outro cenário de manipulação de variáveis de membro de tarefas.</span><span class="sxs-lookup"><span data-stu-id="d31b6-106">The consumers can use the members of the task the same way as they would in any other scenario handling task member variables.</span></span> <span data-ttu-id="d31b6-107">No entanto, ao contrário da maioria das tarefas, o estado de uma tarefa criada por um TaskCompletionSource é controlado explicitamente por métodos em TaskCompletionSource.</span><span class="sxs-lookup"><span data-stu-id="d31b6-107">However, unlike most tasks, the state of a task created by a TaskCompletionSource is controlled explicitly by the methods on TaskCompletionSource.</span></span> <span data-ttu-id="d31b6-108">Isso permite que a conclusão da operação assíncrona externa sejam propagadas para a tarefa subjacente.</span><span class="sxs-lookup"><span data-stu-id="d31b6-108">This enables the completion of the external asynchronous operation to be propagated to the underlying Task.</span></span> <span data-ttu-id="d31b6-109">A separação também garante que os consumidores não são capazes de fazer a transição de estado sem acesso a TaskCompletionSource correspondente.</span><span class="sxs-lookup"><span data-stu-id="d31b6-109">The separation also ensures that consumers are not able to transition the state without access to the corresponding TaskCompletionSource.</span></span> <span data-ttu-id="d31b6-110">Para obter mais informações, consulte a entrada [natureza de TaskCompletionSource\<TResult >](https://blogs.msdn.com/b/pfxteam/archive/2009/06/02/9685804.aspx) na programação paralela no blog do .NET.</span><span class="sxs-lookup"><span data-stu-id="d31b6-110">For more information, see the entry [The Nature of TaskCompletionSource\<TResult>](https://blogs.msdn.com/b/pfxteam/archive/2009/06/02/9685804.aspx) in the Parallel Programming with .NET blog.</span></span>  
  
 <span data-ttu-id="d31b6-111">O [exemplos de extensões paralelas](https://go.microsoft.com/fwlink/?LinkID=165717) também contêm exemplos de como usar <xref:System.Threading.Tasks.TaskCompletionSource%601>.</span><span class="sxs-lookup"><span data-stu-id="d31b6-111">The [Parallel Extensions samples](https://go.microsoft.com/fwlink/?LinkID=165717) also contain examples of how to use <xref:System.Threading.Tasks.TaskCompletionSource%601>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d31b6-112">O exemplo a seguir mostra como usar um <xref:System.Threading.Tasks.TaskCompletionSource%601>:</span><span class="sxs-lookup"><span data-stu-id="d31b6-112">The following example shows how to use a <xref:System.Threading.Tasks.TaskCompletionSource%601>:</span></span>  
  
 [!code-csharp[System.Threading.Tasks.TaskCompletionSource#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.taskcompletionsource/cs/taskcompletionsource.cs#01)]
 [!code-vb[System.Threading.Tasks.TaskCompletionSource#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.taskcompletionsource/vb/taskcompletionsource.vb#01)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="d31b6-113">Todos os membros de <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" /> são thread-safe e podem ser usados simultaneamente de vários threads.</span><span class="sxs-lookup"><span data-stu-id="d31b6-113">All members of <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" /> are thread-safe and may be used from multiple threads concurrently.</span></span></threadsafe>
    <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="d31b6-114">Usando TPL com outros padrões assíncronos</span><span class="sxs-lookup"><span data-stu-id="d31b6-114">Using TPL with Other Asynchronous Patterns</span></span></related>
    <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md"><span data-ttu-id="d31b6-115">Como encapsular padrões de EAP em uma tarefa</span><span class="sxs-lookup"><span data-stu-id="d31b6-115">How to: Wrap EAP Patterns in a Task</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d31b6-116">Cria um objeto <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />.</span><span class="sxs-lookup"><span data-stu-id="d31b6-116">Creates a <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskCompletionSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskCompletionSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d31b6-117">Cria um <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />.</span><span class="sxs-lookup"><span data-stu-id="d31b6-117">Creates a <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="d31b6-118">Usando TPL com outros padrões assíncronos</span><span class="sxs-lookup"><span data-stu-id="d31b6-118">Using TPL with Other Asynchronous Patterns</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md"><span data-ttu-id="d31b6-119">Como encapsular padrões de EAP em uma tarefa</span><span class="sxs-lookup"><span data-stu-id="d31b6-119">How to: Wrap EAP Patterns in a Task</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskCompletionSource (object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskCompletionSource(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.TaskCompletionSource&lt;'Result&gt; : obj -&gt; System.Threading.Tasks.TaskCompletionSource&lt;'Result&gt;" Usage="new System.Threading.Tasks.TaskCompletionSource&lt;'Result&gt; state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="d31b6-120">O estado a ser usado como o AsyncState subjacente da <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="d31b6-120">The state to use as the underlying <see cref="T:System.Threading.Tasks.Task`1" />'s AsyncState.</span></span></param>
        <summary><span data-ttu-id="d31b6-121">Cria uma <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" /> com o estado especificado.</span><span class="sxs-lookup"><span data-stu-id="d31b6-121">Creates a <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" /> with the specified state.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="d31b6-122">Usando TPL com outros padrões assíncronos</span><span class="sxs-lookup"><span data-stu-id="d31b6-122">Using TPL with Other Asynchronous Patterns</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md"><span data-ttu-id="d31b6-123">Como encapsular padrões de EAP em uma tarefa</span><span class="sxs-lookup"><span data-stu-id="d31b6-123">How to: Wrap EAP Patterns in a Task</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskCompletionSource (System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (creationOptions As TaskCreationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskCompletionSource(System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.TaskCompletionSource&lt;'Result&gt; : System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.TaskCompletionSource&lt;'Result&gt;" Usage="new System.Threading.Tasks.TaskCompletionSource&lt;'Result&gt; creationOptions" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="creationOptions"><span data-ttu-id="d31b6-124">As opções a serem usadas ao criar o <see cref="T:System.Threading.Tasks.Task`1" /> subjacente.</span><span class="sxs-lookup"><span data-stu-id="d31b6-124">The options to use when creating the underlying <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></param>
        <summary><span data-ttu-id="d31b6-125">Cria um <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" /> com as opções especificadas.</span><span class="sxs-lookup"><span data-stu-id="d31b6-125">Creates a <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" /> with the specified options.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d31b6-126">O <xref:System.Threading.Tasks.Task%601> criado por essa instância e acessível por meio de seu <xref:System.Threading.Tasks.TaskCompletionSource%601.Task%2A> propriedade será instanciada usando especificado `creationOptions`.</span><span class="sxs-lookup"><span data-stu-id="d31b6-126">The <xref:System.Threading.Tasks.Task%601> created by this instance and accessible through its <xref:System.Threading.Tasks.TaskCompletionSource%601.Task%2A> property will be instantiated using the specified `creationOptions`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d31b6-127">O <paramref name="creationOptions" /> representa opções inválidas para uso com um <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />.</span><span class="sxs-lookup"><span data-stu-id="d31b6-127">The <paramref name="creationOptions" /> represent options invalid for use with a <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="d31b6-128">Usando TPL com outros padrões assíncronos</span><span class="sxs-lookup"><span data-stu-id="d31b6-128">Using TPL with Other Asynchronous Patterns</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md"><span data-ttu-id="d31b6-129">Como encapsular padrões de EAP em uma tarefa</span><span class="sxs-lookup"><span data-stu-id="d31b6-129">How to: Wrap EAP Patterns in a Task</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskCompletionSource (object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As Object, creationOptions As TaskCreationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskCompletionSource(System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.TaskCompletionSource&lt;'Result&gt; : obj * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.TaskCompletionSource&lt;'Result&gt;" Usage="new System.Threading.Tasks.TaskCompletionSource&lt;'Result&gt; (state, creationOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="d31b6-130">O estado a ser usado como o AsyncState subjacente da <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="d31b6-130">The state to use as the underlying <see cref="T:System.Threading.Tasks.Task`1" />'s AsyncState.</span></span></param>
        <param name="creationOptions"><span data-ttu-id="d31b6-131">As opções a serem usadas ao criar o <see cref="T:System.Threading.Tasks.Task`1" /> subjacente.</span><span class="sxs-lookup"><span data-stu-id="d31b6-131">The options to use when creating the underlying <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></param>
        <summary><span data-ttu-id="d31b6-132">Cria uma <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" /> com o estado e as opções especificados.</span><span class="sxs-lookup"><span data-stu-id="d31b6-132">Creates a <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" /> with the specified state and options.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d31b6-133">O <paramref name="creationOptions" /> representa opções inválidas para uso com um <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />.</span><span class="sxs-lookup"><span data-stu-id="d31b6-133">The <paramref name="creationOptions" /> represent options invalid for use with a <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="d31b6-134">Usando TPL com outros padrões assíncronos</span><span class="sxs-lookup"><span data-stu-id="d31b6-134">Using TPL with Other Asynchronous Patterns</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md"><span data-ttu-id="d31b6-135">Como encapsular padrões de EAP em uma tarefa</span><span class="sxs-lookup"><span data-stu-id="d31b6-135">How to: Wrap EAP Patterns in a Task</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetCanceled">
      <MemberSignature Language="C#" Value="public void SetCanceled ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCanceled() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource`1.SetCanceled" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCanceled ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCanceled();" />
      <MemberSignature Language="F#" Value="member this.SetCanceled : unit -&gt; unit" Usage="taskCompletionSource.SetCanceled " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d31b6-136">Faz a transição do <see cref="T:System.Threading.Tasks.Task`1" /> subjacente para o estado <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" />.</span><span class="sxs-lookup"><span data-stu-id="d31b6-136">Transitions the underlying <see cref="T:System.Threading.Tasks.Task`1" /> into the <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" /> state.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d31b6-137">O <see cref="T:System.Threading.Tasks.Task`1" /> subjacente já está em um dos três estados finais: <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" />, <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> ou <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" />, ou se o <see cref="T:System.Threading.Tasks.Task`1" /> subjacente já tiver sido descartado.</span><span class="sxs-lookup"><span data-stu-id="d31b6-137">The underlying <see cref="T:System.Threading.Tasks.Task`1" /> is already in one of the three final states: <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" />, <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />, or <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" />, or if the underlying <see cref="T:System.Threading.Tasks.Task`1" /> has already been disposed.</span></span></exception>
        <altmember cref="M:System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled" />
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="d31b6-138">Usando TPL com outros padrões assíncronos</span><span class="sxs-lookup"><span data-stu-id="d31b6-138">Using TPL with Other Asynchronous Patterns</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md"><span data-ttu-id="d31b6-139">Como encapsular padrões de EAP em uma tarefa</span><span class="sxs-lookup"><span data-stu-id="d31b6-139">How to: Wrap EAP Patterns in a Task</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md"><span data-ttu-id="d31b6-140">Cancelamento da tarefa</span><span class="sxs-lookup"><span data-stu-id="d31b6-140">Task Cancellation</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetException">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d31b6-141">Faz a transição do objeto <see cref="T:System.Threading.Tasks.Task`1" /> subjacente para o estado <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />.</span><span class="sxs-lookup"><span data-stu-id="d31b6-141">Transitions the underlying <see cref="T:System.Threading.Tasks.Task`1" /> object into the <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> state.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetException">
      <MemberSignature Language="C#" Value="public void SetException (System.Collections.Generic.IEnumerable&lt;Exception&gt; exceptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetException(class System.Collections.Generic.IEnumerable`1&lt;class System.Exception&gt; exceptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource`1.SetException(System.Collections.Generic.IEnumerable{System.Exception})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetException (exceptions As IEnumerable(Of Exception))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetException(System::Collections::Generic::IEnumerable&lt;Exception ^&gt; ^ exceptions);" />
      <MemberSignature Language="F#" Value="member this.SetException : seq&lt;Exception&gt; -&gt; unit" Usage="taskCompletionSource.SetException exceptions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exceptions" Type="System.Collections.Generic.IEnumerable&lt;System.Exception&gt;" />
      </Parameters>
      <Docs>
        <param name="exceptions"><span data-ttu-id="d31b6-142">A coleção de exceções para associar a este <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="d31b6-142">The collection of exceptions to bind to this <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></param>
        <summary><span data-ttu-id="d31b6-143">Faz a transição do <see cref="T:System.Threading.Tasks.Task`1" /> subjacente para o estado <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> e associa uma coleção de objetos de exceção a ele.</span><span class="sxs-lookup"><span data-stu-id="d31b6-143">Transitions the underlying <see cref="T:System.Threading.Tasks.Task`1" /> into the <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> state and binds a collection of exception objects to it.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d31b6-144">O <see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" /> foi descartado.</span><span class="sxs-lookup"><span data-stu-id="d31b6-144">The <see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" /> was disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d31b6-145">O argumento <paramref name="exceptions" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="d31b6-145">The <paramref name="exceptions" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d31b6-146">Há um ou mais elementos nulos em <paramref name="exceptions" />.</span><span class="sxs-lookup"><span data-stu-id="d31b6-146">There are one or more null elements in <paramref name="exceptions" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d31b6-147">O <see cref="T:System.Threading.Tasks.Task`1" /> subjacente já está em um dos três estados finais: <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" />, <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> ou <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" />.</span><span class="sxs-lookup"><span data-stu-id="d31b6-147">The underlying <see cref="T:System.Threading.Tasks.Task`1" /> is already in one of the three final states: <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" />, <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />, or <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="d31b6-148">Usando TPL com outros padrões assíncronos</span><span class="sxs-lookup"><span data-stu-id="d31b6-148">Using TPL with Other Asynchronous Patterns</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md"><span data-ttu-id="d31b6-149">Como encapsular padrões de EAP em uma tarefa</span><span class="sxs-lookup"><span data-stu-id="d31b6-149">How to: Wrap EAP Patterns in a Task</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetException">
      <MemberSignature Language="C#" Value="public void SetException (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetException(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource`1.SetException(System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetException(Exception ^ exception);" />
      <MemberSignature Language="F#" Value="member this.SetException : Exception -&gt; unit" Usage="taskCompletionSource.SetException exception" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception"><span data-ttu-id="d31b6-150">A exceção para associar a este <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="d31b6-150">The exception to bind to this <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></param>
        <summary><span data-ttu-id="d31b6-151">Faz a transição do <see cref="T:System.Threading.Tasks.Task`1" /> subjacente para o estado <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> e associa-o a uma exceção especificada.</span><span class="sxs-lookup"><span data-stu-id="d31b6-151">Transitions the underlying <see cref="T:System.Threading.Tasks.Task`1" /> into the <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> state and binds it to a specified exception.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d31b6-152">O <see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" /> foi descartado.</span><span class="sxs-lookup"><span data-stu-id="d31b6-152">The <see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" /> was disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d31b6-153">O argumento <paramref name="exception" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="d31b6-153">The <paramref name="exception" /> argument is null.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d31b6-154">O <see cref="T:System.Threading.Tasks.Task`1" /> subjacente já está em um dos três estados finais: <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" />, <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> ou <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" />.</span><span class="sxs-lookup"><span data-stu-id="d31b6-154">The underlying <see cref="T:System.Threading.Tasks.Task`1" /> is already in one of the three final states: <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" />, <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />, or <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="d31b6-155">Usando TPL com outros padrões assíncronos</span><span class="sxs-lookup"><span data-stu-id="d31b6-155">Using TPL with Other Asynchronous Patterns</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md"><span data-ttu-id="d31b6-156">Como encapsular padrões de EAP em uma tarefa</span><span class="sxs-lookup"><span data-stu-id="d31b6-156">How to: Wrap EAP Patterns in a Task</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetResult">
      <MemberSignature Language="C#" Value="public void SetResult (TResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetResult(!TResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource`1.SetResult(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetResult (result As TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetResult(TResult result);" />
      <MemberSignature Language="F#" Value="member this.SetResult : 'Result -&gt; unit" Usage="taskCompletionSource.SetResult result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="TResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="d31b6-157">O valor do resultado a se associar a esse <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="d31b6-157">The result value to bind to this <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></param>
        <summary><span data-ttu-id="d31b6-158">Faz a transição do <see cref="T:System.Threading.Tasks.Task`1" /> subjacente para o estado <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" />.</span><span class="sxs-lookup"><span data-stu-id="d31b6-158">Transitions the underlying <see cref="T:System.Threading.Tasks.Task`1" /> into the <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" /> state.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d31b6-159">O <see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" /> foi descartado.</span><span class="sxs-lookup"><span data-stu-id="d31b6-159">The <see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" /> was disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d31b6-160">O <see cref="T:System.Threading.Tasks.Task`1" /> subjacente já está em um dos três estados finais: <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" />, <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> ou <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" />.</span><span class="sxs-lookup"><span data-stu-id="d31b6-160">The underlying <see cref="T:System.Threading.Tasks.Task`1" /> is already in one of the three final states: <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" />, <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />, or <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="d31b6-161">Usando TPL com outros padrões assíncronos</span><span class="sxs-lookup"><span data-stu-id="d31b6-161">Using TPL with Other Asynchronous Patterns</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md"><span data-ttu-id="d31b6-162">Como encapsular padrões de EAP em uma tarefa</span><span class="sxs-lookup"><span data-stu-id="d31b6-162">How to: Wrap EAP Patterns in a Task</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Task">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; Task { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; Task" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.TaskCompletionSource`1.Task" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Task As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::Task&lt;TResult&gt; ^ Task { System::Threading::Tasks::Task&lt;TResult&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Task : System.Threading.Tasks.Task&lt;'Result&gt;" Usage="System.Threading.Tasks.TaskCompletionSource&lt;'Result&gt;.Task" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d31b6-163">Obtém o <see cref="T:System.Threading.Tasks.Task`1" /> criado por esse <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />.</span><span class="sxs-lookup"><span data-stu-id="d31b6-163">Gets the <see cref="T:System.Threading.Tasks.Task`1" /> created by this <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />.</span></span></summary>
        <value><span data-ttu-id="d31b6-164">Retorna o <see cref="T:System.Threading.Tasks.Task`1" /> criado por esse <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />.</span><span class="sxs-lookup"><span data-stu-id="d31b6-164">Returns the <see cref="T:System.Threading.Tasks.Task`1" /> created by this <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d31b6-165">Essa propriedade permite que um consumidor acessar o <xref:System.Threading.Tasks.Task%601> que é controlado por essa instância.</span><span class="sxs-lookup"><span data-stu-id="d31b6-165">This property enables a consumer to access the <xref:System.Threading.Tasks.Task%601> that is controlled by this instance.</span></span> <span data-ttu-id="d31b6-166">Quando você cria um <xref:System.Threading.Tasks.TaskCompletionSource%601> objeto, o <xref:System.Threading.Tasks.Task.Status%2A> propriedade deste <xref:System.Threading.Tasks.Task%601> retorna do objeto <xref:System.Threading.Tasks.TaskStatus.WaitingForActivation></span><span class="sxs-lookup"><span data-stu-id="d31b6-166">When you create a <xref:System.Threading.Tasks.TaskCompletionSource%601> object, the <xref:System.Threading.Tasks.Task.Status%2A> property of this <xref:System.Threading.Tasks.Task%601> object returns <xref:System.Threading.Tasks.TaskStatus.WaitingForActivation></span></span>  
  
 <span data-ttu-id="d31b6-167">O <xref:System.Threading.Tasks.TaskCompletionSource%601.SetResult%2A>, <xref:System.Threading.Tasks.TaskCompletionSource%601.SetException%2A>, <xref:System.Threading.Tasks.TaskCompletionSource%601.SetException%2A>, e <xref:System.Threading.Tasks.TaskCompletionSource%601.SetCanceled%2A> métodos (e suas variantes de "Try") nesta instância todos resultam nas transições de estado relevante sobre isso subjacente da tarefa.</span><span class="sxs-lookup"><span data-stu-id="d31b6-167">The <xref:System.Threading.Tasks.TaskCompletionSource%601.SetResult%2A>, <xref:System.Threading.Tasks.TaskCompletionSource%601.SetException%2A>, <xref:System.Threading.Tasks.TaskCompletionSource%601.SetException%2A>, and <xref:System.Threading.Tasks.TaskCompletionSource%601.SetCanceled%2A> methods (and their "Try" variants) on this instance all result in the relevant state transitions on this underlying Task.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="d31b6-168">Usando TPL com outros padrões assíncronos</span><span class="sxs-lookup"><span data-stu-id="d31b6-168">Using TPL with Other Asynchronous Patterns</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md"><span data-ttu-id="d31b6-169">Como encapsular padrões de EAP em uma tarefa</span><span class="sxs-lookup"><span data-stu-id="d31b6-169">How to: Wrap EAP Patterns in a Task</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-based-asynchronous-programming.md"><span data-ttu-id="d31b6-170">Programação assíncrona baseada em tarefas</span><span class="sxs-lookup"><span data-stu-id="d31b6-170">Task-based Asynchronous Programming</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="TrySetCanceled">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d31b6-171">Tenta fazer a transição do <see cref="T:System.Threading.Tasks.Task`1" /> subjacente para o estado <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" />.</span><span class="sxs-lookup"><span data-stu-id="d31b6-171">Attempts to transition the underlying <see cref="T:System.Threading.Tasks.Task`1" /> into the <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" /> state.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TrySetCanceled">
      <MemberSignature Language="C#" Value="public bool TrySetCanceled ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TrySetCanceled() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled" />
      <MemberSignature Language="VB.NET" Value="Public Function TrySetCanceled () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TrySetCanceled();" />
      <MemberSignature Language="F#" Value="member this.TrySetCanceled : unit -&gt; bool" Usage="taskCompletionSource.TrySetCanceled " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d31b6-172">Tenta fazer a transição do <see cref="T:System.Threading.Tasks.Task`1" /> subjacente para o estado <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" />.</span><span class="sxs-lookup"><span data-stu-id="d31b6-172">Attempts to transition the underlying <see cref="T:System.Threading.Tasks.Task`1" /> into the <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" /> state.</span></span></summary>
        <returns><span data-ttu-id="d31b6-173">True se a operação for bem-sucedida; false se a operação for malsucedida ou o objeto já tiver sido descartado.</span><span class="sxs-lookup"><span data-stu-id="d31b6-173">True if the operation was successful; false if the operation was unsuccessful or the object has already been disposed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d31b6-174">Essa operação retornará false se o <xref:System.Threading.Tasks.Task%601> já está em um dos três estados finais: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, ou <xref:System.Threading.Tasks.TaskStatus.Canceled>.</span><span class="sxs-lookup"><span data-stu-id="d31b6-174">This operation will return false if the <xref:System.Threading.Tasks.Task%601> is already in one of the three final states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled>.</span></span>  
  
 <span data-ttu-id="d31b6-175">Esse método também retornará false se subjacente <xref:System.Threading.Tasks.Task%601> já foi descartado.</span><span class="sxs-lookup"><span data-stu-id="d31b6-175">This method also returns false if the underlying <xref:System.Threading.Tasks.Task%601> has already been disposed.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="d31b6-176">Usando TPL com outros padrões assíncronos</span><span class="sxs-lookup"><span data-stu-id="d31b6-176">Using TPL with Other Asynchronous Patterns</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md"><span data-ttu-id="d31b6-177">Como encapsular padrões de EAP em uma tarefa</span><span class="sxs-lookup"><span data-stu-id="d31b6-177">How to: Wrap EAP Patterns in a Task</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TrySetCanceled">
      <MemberSignature Language="C#" Value="public bool TrySetCanceled (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TrySetCanceled(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TrySetCanceled(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.TrySetCanceled : System.Threading.CancellationToken -&gt; bool" Usage="taskCompletionSource.TrySetCanceled cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"><span data-ttu-id="d31b6-178">Um token de cancelamento.</span><span class="sxs-lookup"><span data-stu-id="d31b6-178">A cancellation token.</span></span></param>
        <summary><span data-ttu-id="d31b6-179">Tenta fazer a transição do <see cref="T:System.Threading.Tasks.Task`1" /> subjacente para o estado <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" /> e permite que um token de cancelamento seja armazenado na tarefa cancelada.</span><span class="sxs-lookup"><span data-stu-id="d31b6-179">Attempts to transition the underlying <see cref="T:System.Threading.Tasks.Task`1" /> into the <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" /> state and enables a cancellation token to be stored in the canceled task.</span></span></summary>
        <returns><span data-ttu-id="d31b6-180"><see langword="true" /> se a operação for bem-sucedida; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d31b6-180"><see langword="true" /> if the operation is successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d31b6-181">O método retornará false se subjacente <xref:System.Threading.Tasks.Task%601> objeto já está em um dos três estados finais.</span><span class="sxs-lookup"><span data-stu-id="d31b6-181">The method returns false if the underlying <xref:System.Threading.Tasks.Task%601> object is already in one of the following three final states.</span></span>  
  
-   <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType>  
  
-   <xref:System.Threading.Tasks.TaskStatus.Faulted?displayProperty=nameWithType>  
  
-   <xref:System.Threading.Tasks.TaskStatus.RanToCompletion?displayProperty=nameWithType>  
  
 <span data-ttu-id="d31b6-182">Esse método também retornará `false` se subjacente <xref:System.Threading.Tasks.Task%601> já foi descartado.</span><span class="sxs-lookup"><span data-stu-id="d31b6-182">This method also returns `false` if the underlying <xref:System.Threading.Tasks.Task%601> object has already been disposed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TrySetException">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d31b6-183">Tenta fazer a transição do objeto <see cref="T:System.Threading.Tasks.Task`1" /> subjacente para o estado <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />.</span><span class="sxs-lookup"><span data-stu-id="d31b6-183">Attempts to transition the underlying <see cref="T:System.Threading.Tasks.Task`1" /> object into the <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> state.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TrySetException">
      <MemberSignature Language="C#" Value="public bool TrySetException (System.Collections.Generic.IEnumerable&lt;Exception&gt; exceptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TrySetException(class System.Collections.Generic.IEnumerable`1&lt;class System.Exception&gt; exceptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource`1.TrySetException(System.Collections.Generic.IEnumerable{System.Exception})" />
      <MemberSignature Language="VB.NET" Value="Public Function TrySetException (exceptions As IEnumerable(Of Exception)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TrySetException(System::Collections::Generic::IEnumerable&lt;Exception ^&gt; ^ exceptions);" />
      <MemberSignature Language="F#" Value="member this.TrySetException : seq&lt;Exception&gt; -&gt; bool" Usage="taskCompletionSource.TrySetException exceptions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exceptions" Type="System.Collections.Generic.IEnumerable&lt;System.Exception&gt;" />
      </Parameters>
      <Docs>
        <param name="exceptions"><span data-ttu-id="d31b6-184">A coleção de exceções para associar a este <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="d31b6-184">The collection of exceptions to bind to this <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></param>
        <summary><span data-ttu-id="d31b6-185">Tenta fazer a transição do <see cref="T:System.Threading.Tasks.Task`1" /> subjacente para o estado <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> e associa uma coleção de objetos de exceção a ele.</span><span class="sxs-lookup"><span data-stu-id="d31b6-185">Attempts to transition the underlying <see cref="T:System.Threading.Tasks.Task`1" /> into the <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> state and binds a collection of exception objects to it.</span></span></summary>
        <returns><span data-ttu-id="d31b6-186">True se a operação tiver sido bem-sucedida; caso contrário, false.</span><span class="sxs-lookup"><span data-stu-id="d31b6-186">True if the operation was successful; otherwise, false.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d31b6-187">Essa operação retornará false se o <xref:System.Threading.Tasks.Task%601> já está em um dos três estados finais: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, ou <xref:System.Threading.Tasks.TaskStatus.Canceled>.</span><span class="sxs-lookup"><span data-stu-id="d31b6-187">This operation will return false if the <xref:System.Threading.Tasks.Task%601> is already in one of the three final states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d31b6-188">O <see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" /> foi descartado.</span><span class="sxs-lookup"><span data-stu-id="d31b6-188">The <see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" /> was disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d31b6-189">O argumento <paramref name="exceptions" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="d31b6-189">The <paramref name="exceptions" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d31b6-190">Há um ou mais elementos nulos em <paramref name="exceptions" />.</span><span class="sxs-lookup"><span data-stu-id="d31b6-190">There are one or more null elements in <paramref name="exceptions" />.</span></span>  
  
<span data-ttu-id="d31b6-191">- ou -</span><span class="sxs-lookup"><span data-stu-id="d31b6-191">-or-</span></span> 
<span data-ttu-id="d31b6-192">A coleção <paramref name="exceptions" /> está vazia.</span><span class="sxs-lookup"><span data-stu-id="d31b6-192">The <paramref name="exceptions" /> collection is empty.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="d31b6-193">Usando TPL com outros padrões assíncronos</span><span class="sxs-lookup"><span data-stu-id="d31b6-193">Using TPL with Other Asynchronous Patterns</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md"><span data-ttu-id="d31b6-194">Como encapsular padrões de EAP em uma tarefa</span><span class="sxs-lookup"><span data-stu-id="d31b6-194">How to: Wrap EAP Patterns in a Task</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TrySetException">
      <MemberSignature Language="C#" Value="public bool TrySetException (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TrySetException(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource`1.TrySetException(System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TrySetException(Exception ^ exception);" />
      <MemberSignature Language="F#" Value="member this.TrySetException : Exception -&gt; bool" Usage="taskCompletionSource.TrySetException exception" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception"><span data-ttu-id="d31b6-195">A exceção para associar a este <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="d31b6-195">The exception to bind to this <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></param>
        <summary><span data-ttu-id="d31b6-196">Tenta fazer a transição do <see cref="T:System.Threading.Tasks.Task`1" /> subjacente para o estado <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> e o associa a uma exceção especificada.</span><span class="sxs-lookup"><span data-stu-id="d31b6-196">Attempts to transition the underlying <see cref="T:System.Threading.Tasks.Task`1" /> into the <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> state and binds it to a specified exception.</span></span></summary>
        <returns><span data-ttu-id="d31b6-197">True se a operação tiver sido bem-sucedida; caso contrário, false.</span><span class="sxs-lookup"><span data-stu-id="d31b6-197">True if the operation was successful; otherwise, false.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d31b6-198">Essa operação retornará false se o <xref:System.Threading.Tasks.Task%601> já está em um dos três estados finais: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, ou <xref:System.Threading.Tasks.TaskStatus.Canceled>.</span><span class="sxs-lookup"><span data-stu-id="d31b6-198">This operation will return false if the <xref:System.Threading.Tasks.Task%601> is already in one of the three final states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d31b6-199">O <see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" /> foi descartado.</span><span class="sxs-lookup"><span data-stu-id="d31b6-199">The <see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" /> was disposed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d31b6-200">O argumento <paramref name="exception" /> é nulo.</span><span class="sxs-lookup"><span data-stu-id="d31b6-200">The <paramref name="exception" /> argument is null.</span></span></exception>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="d31b6-201">Usando TPL com outros padrões assíncronos</span><span class="sxs-lookup"><span data-stu-id="d31b6-201">Using TPL with Other Asynchronous Patterns</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md"><span data-ttu-id="d31b6-202">Como encapsular padrões de EAP em uma tarefa</span><span class="sxs-lookup"><span data-stu-id="d31b6-202">How to: Wrap EAP Patterns in a Task</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TrySetResult">
      <MemberSignature Language="C#" Value="public bool TrySetResult (TResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TrySetResult(!TResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource`1.TrySetResult(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function TrySetResult (result As TResult) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TrySetResult(TResult result);" />
      <MemberSignature Language="F#" Value="member this.TrySetResult : 'Result -&gt; bool" Usage="taskCompletionSource.TrySetResult result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="TResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="d31b6-203">O valor do resultado a se associar a esse <see cref="T:System.Threading.Tasks.Task`1" />.</span><span class="sxs-lookup"><span data-stu-id="d31b6-203">The result value to bind to this <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></param>
        <summary><span data-ttu-id="d31b6-204">Tenta fazer a transição do <see cref="T:System.Threading.Tasks.Task`1" /> subjacente para o estado <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" />.</span><span class="sxs-lookup"><span data-stu-id="d31b6-204">Attempts to transition the underlying <see cref="T:System.Threading.Tasks.Task`1" /> into the <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" /> state.</span></span></summary>
        <returns><span data-ttu-id="d31b6-205">True se a operação tiver sido bem-sucedida; caso contrário, false.</span><span class="sxs-lookup"><span data-stu-id="d31b6-205">True if the operation was successful; otherwise, false.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d31b6-206">Essa operação retornará false se o <xref:System.Threading.Tasks.Task%601> já está em um dos três estados finais: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, ou <xref:System.Threading.Tasks.TaskStatus.Canceled>.</span><span class="sxs-lookup"><span data-stu-id="d31b6-206">This operation will return false if the <xref:System.Threading.Tasks.Task%601> is already in one of the three final states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled>.</span></span>  
  
 <span data-ttu-id="d31b6-207">Esse método também retornará false se subjacente <xref:System.Threading.Tasks.Task%601> já foi descartado.</span><span class="sxs-lookup"><span data-stu-id="d31b6-207">This method also returns false if the underlying <xref:System.Threading.Tasks.Task%601> has already been disposed.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md"><span data-ttu-id="d31b6-208">Usando TPL com outros padrões assíncronos</span><span class="sxs-lookup"><span data-stu-id="d31b6-208">Using TPL with Other Asynchronous Patterns</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md"><span data-ttu-id="d31b6-209">Como encapsular padrões de EAP em uma tarefa</span><span class="sxs-lookup"><span data-stu-id="d31b6-209">How to: Wrap EAP Patterns in a Task</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>