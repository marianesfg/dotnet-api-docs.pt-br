<Type Name="IWsdlExportExtension" FullName="System.ServiceModel.Description.IWsdlExportExtension">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e406e68bf451c2255e551d55a19e32774dc9762d" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57962037" /></Metadata><TypeSignature Language="C#" Value="public interface IWsdlExportExtension" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWsdlExportExtension" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.IWsdlExportExtension" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWsdlExportExtension" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWsdlExportExtension" />
  <TypeSignature Language="F#" Value="type IWsdlExportExtension = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Define os comportamentos de ponto de extremidade ou de contrato que podem exportar metadados personalizados.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para modificar e estender a descrição de linguagem WSDL (Web Services) exportado por <xref:System.ServiceModel.Description.WsdlExporter> objetos, implementar o <xref:System.ServiceModel.Description.IWsdlExportExtension> interface em um comportamento de ponto de extremidade, contrato ou operação (um objeto que implementa <xref:System.ServiceModel.Description.IContractBehavior>, <xref:System.ServiceModel.Description.IEndpointBehavior>, ou <xref:System.ServiceModel.Description.IOperationBehavior>) e adicione o comportamento para o <xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A>, <xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A>, ou <xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A> propriedade. Além disso, você também pode implementar <xref:System.ServiceModel.Description.IWsdlExportExtension> em um <xref:System.ServiceModel.Channels.BindingElement>.  
  
> [!NOTE]
>  <xref:System.ServiceModel.Description.IWsdlExportExtension> implementações nunca sejam invocadas se eles são implementados como um <xref:System.ServiceModel.Description.IServiceBehavior>.  
  
 <xref:System.ServiceModel.Description.IWsdlExportExtension> não exporta declarações de política personalizada, mesmo que o Windows Communication Foundation (WCF) exporta declarações de política de associação personalizada para o elemento apropriado dentro do WSDL. Se você quiser exportar declarações de política personalizada, implemente o <xref:System.ServiceModel.Description.IPolicyExportExtension> interface.  
  
 O processo de publicação de metadados começa chamando <xref:System.ServiceModel.Description.WsdlExporter.ExportEndpoints%2A?displayProperty=nameWithType> que por sua vez chama <xref:System.ServiceModel.Description.WsdlExporter.ExportEndpoint%2A?displayProperty=nameWithType> para cada ponto de extremidade.  
  
 O ponto de extremidade é exportado, primeiro exportando seu contrato. Ao exportar um contrato a <xref:System.ServiceModel.Description.WsdlExporter?displayProperty=nameWithType> chamadas a <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A?displayProperty=nameWithType> método em todos os <xref:System.ServiceModel.Description.IWsdlExportExtension> implementações no contrato e comportamentos de operação do contrato. Operações que usam as ações de curinga não são exportadas nos metadados, portanto, <xref:System.ServiceModel.Description.IWsdlExportExtension> implementações em comportamentos de operação para essas operações não são exportadas.  
  
 Depois de exportar o contrato, a porta e associação são exportadas e exportados são anexadas a expressões de política.  
  
 Tanto a <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A> e o <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint%2A> métodos fornecem acesso ao <xref:System.ServiceModel.Description.WsdlExporter> , de modo que <xref:System.ServiceModel.Description.IWsdlExportExtension> implementações podem relatar erros recuperáveis e avisos por meio do <xref:System.ServiceModel.Description.MetadataExporter.Errors%2A> propriedade. Os objetos de contexto passados para os dois métodos fornecem convenientes mapeamentos dos elementos WSDL exportados para propriedades de <xref:System.ServiceModel.Description.ContractDescription> e <xref:System.ServiceModel.Description.ServiceEndpoint> objetos.  
  
 Se um <xref:System.ServiceModel.Description.IWsdlExportExtension> implementação lança uma exceção na exportação, os metadados gerados estão em um estado inconsistente e o <xref:System.ServiceModel.Description.WsdlExporter> objeto deve ser descartado.  
  
> [!NOTE]
>  Extensão de exportação personalizada deve ser executado depois que o serializador interno preenche a descrição do serviço.  
  
   
  
## Examples  
 O seguinte exemplo de código mostra um <xref:System.ServiceModel.Description.IWsdlExportExtension> que adiciona os atributos da documentação personalizada para o arquivo WSDL como anotações de WSDL.  
  
 [!code-csharp[C_CustomWSDLExtensions#6](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#6)]  
[!code-csharp[C_CustomWSDLExtensions#7](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#7)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ExportContract">
      <MemberSignature Language="C#" Value="public void ExportContract (System.ServiceModel.Description.WsdlExporter exporter, System.ServiceModel.Description.WsdlContractConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportContract(class System.ServiceModel.Description.WsdlExporter exporter, class System.ServiceModel.Description.WsdlContractConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IWsdlExportExtension.ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportContract (exporter As WsdlExporter, context As WsdlContractConversionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExportContract(System::ServiceModel::Description::WsdlExporter ^ exporter, System::ServiceModel::Description::WsdlContractConversionContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ExportContract : System.ServiceModel.Description.WsdlExporter * System.ServiceModel.Description.WsdlContractConversionContext -&gt; unit" Usage="iWsdlExportExtension.ExportContract (exporter, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.WsdlExporter" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="context" Type="System.ServiceModel.Description.WsdlContractConversionContext" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="exporter">O <see cref="T:System.ServiceModel.Description.WsdlExporter" /> que exporta as informações do contrato.</param>
        <param name="context">Fornece mapeamentos de elementos WSDL exportados para a descrição do contrato.</param>
        <summary>Grava elementos de WSDL (linguagem WSDL) personalizados na WSDL gerada para um contrato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A> método é chamado quando o sistema de exportação de metadados está exportando o contrato. Comportamentos de contrato e operação únicos implementando <xref:System.ServiceModel.Description.IWsdlExportExtension> obter o <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A> chamar. Todos os comportamentos implementando <xref:System.ServiceModel.Description.IWsdlExportExtension> obter o <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint%2A> chamar.  
  
 Use o `context` parâmetro para modificar o WSDL a ser exportado. Para obter um exemplo, consulte a seção de exemplo.  
  
   
  
## Examples  
 O seguinte exemplo de código mostra um <xref:System.ServiceModel.Description.IWsdlExportExtension> que adiciona os atributos da documentação personalizada para o arquivo WSDL como anotações de WSDL.  
  
 [!code-csharp[C_CustomWSDLExtensions#6](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#6)]  
[!code-csharp[C_CustomWSDLExtensions#7](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportEndpoint">
      <MemberSignature Language="C#" Value="public void ExportEndpoint (System.ServiceModel.Description.WsdlExporter exporter, System.ServiceModel.Description.WsdlEndpointConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportEndpoint(class System.ServiceModel.Description.WsdlExporter exporter, class System.ServiceModel.Description.WsdlEndpointConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportEndpoint (exporter As WsdlExporter, context As WsdlEndpointConversionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExportEndpoint(System::ServiceModel::Description::WsdlExporter ^ exporter, System::ServiceModel::Description::WsdlEndpointConversionContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ExportEndpoint : System.ServiceModel.Description.WsdlExporter * System.ServiceModel.Description.WsdlEndpointConversionContext -&gt; unit" Usage="iWsdlExportExtension.ExportEndpoint (exporter, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.WsdlExporter" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="context" Type="System.ServiceModel.Description.WsdlEndpointConversionContext" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="exporter">O <see cref="T:System.ServiceModel.Description.WsdlExporter" /> que exporta as informações do ponto de extremidade.</param>
        <param name="context">Fornece mapeamentos de elementos WSDL exportados para a descrição do ponto de extremidade.</param>
        <summary>Grava elementos WSDL (linguagem WSDL) personalizados no WSDL gerado para um ponto de extremidade.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementar o <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint%2A> método para modificar o WSDL exportados para um ponto de extremidade. Esse método é chamado depois que o contrato tiver sido exportado por <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A>.  
  
   
  
## Examples  
 O seguinte exemplo de código mostra um <xref:System.ServiceModel.Description.IWsdlExportExtension> que adiciona os atributos da documentação personalizada para o arquivo WSDL como anotações de WSDL.  
  
 [!code-csharp[C_CustomWSDLExtensions#6](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#6)]  
[!code-csharp[C_CustomWSDLExtensions#7](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>