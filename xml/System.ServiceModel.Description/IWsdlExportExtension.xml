<Type Name="IWsdlExportExtension" FullName="System.ServiceModel.Description.IWsdlExportExtension">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9bbc35369008c2910214deb8cef97563fd3fafa8" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34315040" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IWsdlExportExtension" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWsdlExportExtension" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.IWsdlExportExtension" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWsdlExportExtension" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWsdlExportExtension" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Define os comportamentos de ponto de extremidade ou de contrato que podem exportar metadados personalizados.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para modificar e estender o WSDL Web Services Description Language () exportada por <xref:System.ServiceModel.Description.WsdlExporter> objetos, implementar a <xref:System.ServiceModel.Description.IWsdlExportExtension> interface em um comportamento de ponto de extremidade, contrato ou operação (um objeto que implementa o <xref:System.ServiceModel.Description.IContractBehavior>, <xref:System.ServiceModel.Description.IEndpointBehavior>, ou <xref:System.ServiceModel.Description.IOperationBehavior>) e adicionar o comportamento para o <xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A>, <xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A>, ou <xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A> propriedade. Além disso, você também pode implementar <xref:System.ServiceModel.Description.IWsdlExportExtension> em um <xref:System.ServiceModel.Channels.BindingElement>.  
  
> [!NOTE]
>  <xref:System.ServiceModel.Description.IWsdlExportExtension> implementações nunca sejam invocadas se eles são implementados como um <xref:System.ServiceModel.Description.IServiceBehavior>.  
  
 <xref:System.ServiceModel.Description.IWsdlExportExtension> não exportar declarações de política personalizada, embora o Windows Communication Foundation (WCF) exporta as declarações de política de associação personalizada para o elemento apropriado em WSDL. Se você quiser exportar declarações de política personalizada, implemente o <xref:System.ServiceModel.Description.IPolicyExportExtension> interface.  
  
 Inicia o processo de publicação de metadados chamando <xref:System.ServiceModel.Description.WsdlExporter.ExportEndpoints%2A?displayProperty=nameWithType> chama <xref:System.ServiceModel.Description.WsdlExporter.ExportEndpoint%2A?displayProperty=nameWithType> para cada ponto de extremidade.  
  
 O ponto de extremidade é exportado pelo primeiro exportar seu contrato. Ao exportar um contrato a <xref:System.ServiceModel.Description.WsdlExporter?displayProperty=nameWithType> chama o <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A?displayProperty=nameWithType> método em todos os <xref:System.ServiceModel.Description.IWsdlExportExtension> implementações no contrato e comportamentos de operação para esse contrato. Operações que usam as ações de curinga não são exportadas em metadados, portanto <xref:System.ServiceModel.Description.IWsdlExportExtension> implementações em comportamentos de operação para essas operações não são exportadas.  
  
 Depois de exportar o contrato, a porta e associação são exportadas e exportados são anexadas a expressões de política.  
  
 Tanto o <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A> e o <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint%2A> métodos fornecem acesso ao <xref:System.ServiceModel.Description.WsdlExporter> para que <xref:System.ServiceModel.Description.IWsdlExportExtension> implementações podem relatar erros recuperáveis e avisos por meio de <xref:System.ServiceModel.Description.MetadataExporter.Errors%2A> propriedade. Os objetos de contexto passados para ambos os métodos fornecem convenientes mapeamentos de elementos WSDL exportados para propriedades de <xref:System.ServiceModel.Description.ContractDescription> e <xref:System.ServiceModel.Description.ServiceEndpoint> objetos.  
  
 Se um <xref:System.ServiceModel.Description.IWsdlExportExtension> implementação lança uma exceção na exportação, os metadados gerado estão em um estado inconsistente e o <xref:System.ServiceModel.Description.WsdlExporter> objeto deve ser descartado.  
  
> [!NOTE]
>  Extensão de exportação personalizados deve ser executados após o serializador interno preenche a descrição do serviço.  
  
   
  
## Examples  
 O seguinte exemplo de código mostra um <xref:System.ServiceModel.Description.IWsdlExportExtension> que adiciona os atributos personalizados de documentação para o arquivo WSDL como anotações de WSDL.  
  
 [!code-csharp[C_CustomWSDLExtensions#6](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#6)]  
[!code-csharp[C_CustomWSDLExtensions#7](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#7)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ExportContract">
      <MemberSignature Language="C#" Value="public void ExportContract (System.ServiceModel.Description.WsdlExporter exporter, System.ServiceModel.Description.WsdlContractConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportContract(class System.ServiceModel.Description.WsdlExporter exporter, class System.ServiceModel.Description.WsdlContractConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IWsdlExportExtension.ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportContract (exporter As WsdlExporter, context As WsdlContractConversionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExportContract(System::ServiceModel::Description::WsdlExporter ^ exporter, System::ServiceModel::Description::WsdlContractConversionContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.WsdlExporter" />
        <Parameter Name="context" Type="System.ServiceModel.Description.WsdlContractConversionContext" />
      </Parameters>
      <Docs>
        <param name="exporter">O <see cref="T:System.ServiceModel.Description.WsdlExporter" /> que exporta as informações do contrato.</param>
        <param name="context">Fornece mapeamentos de elementos WSDL exportados para a descrição do contrato.</param>
        <summary>Grava elementos de WSDL (linguagem WSDL) personalizados na WSDL gerada para um contrato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A> método é chamado quando o sistema de exportação de metadados está exportando o contrato. Comportamentos de contrato e operação únicos implementação <xref:System.ServiceModel.Description.IWsdlExportExtension> obter o <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A> chamar. Todos os comportamentos implementando <xref:System.ServiceModel.Description.IWsdlExportExtension> obter o <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint%2A> chamar.  
  
 Use o `context` parâmetro para modificar o WSDL a ser exportado. Para obter um exemplo, consulte a seção de exemplo.  
  
   
  
## Examples  
 O seguinte exemplo de código mostra um <xref:System.ServiceModel.Description.IWsdlExportExtension> que adiciona os atributos personalizados de documentação para o arquivo WSDL como anotações de WSDL.  
  
 [!code-csharp[C_CustomWSDLExtensions#6](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#6)]  
[!code-csharp[C_CustomWSDLExtensions#7](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportEndpoint">
      <MemberSignature Language="C#" Value="public void ExportEndpoint (System.ServiceModel.Description.WsdlExporter exporter, System.ServiceModel.Description.WsdlEndpointConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportEndpoint(class System.ServiceModel.Description.WsdlExporter exporter, class System.ServiceModel.Description.WsdlEndpointConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportEndpoint (exporter As WsdlExporter, context As WsdlEndpointConversionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExportEndpoint(System::ServiceModel::Description::WsdlExporter ^ exporter, System::ServiceModel::Description::WsdlEndpointConversionContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.WsdlExporter" />
        <Parameter Name="context" Type="System.ServiceModel.Description.WsdlEndpointConversionContext" />
      </Parameters>
      <Docs>
        <param name="exporter">O <see cref="T:System.ServiceModel.Description.WsdlExporter" /> que exporta as informações do ponto de extremidade.</param>
        <param name="context">Fornece mapeamentos de elementos WSDL exportados para a descrição do ponto de extremidade.</param>
        <summary>Grava elementos WSDL (linguagem WSDL) personalizados no WSDL gerado para um ponto de extremidade.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementar o <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint%2A> método para modificar o WSDL exportado para um ponto de extremidade. Este método é chamado depois que o contrato foi exportado por <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A>.  
  
   
  
## Examples  
 O seguinte exemplo de código mostra um <xref:System.ServiceModel.Description.IWsdlExportExtension> que adiciona os atributos personalizados de documentação para o arquivo WSDL como anotações de WSDL.  
  
 [!code-csharp[C_CustomWSDLExtensions#6](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#6)]  
[!code-csharp[C_CustomWSDLExtensions#7](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>