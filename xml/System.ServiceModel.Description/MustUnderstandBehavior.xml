<Type Name="MustUnderstandBehavior" FullName="System.ServiceModel.Description.MustUnderstandBehavior">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d9dd81cf5c350e4365c196e9d7d1de22a54b5e5b" />
    <Meta Name="ms.sourcegitcommit" Value="cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="05/03/2018" />
    <Meta Name="ms.locfileid" Value="32691546" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MustUnderstandBehavior : System.ServiceModel.Description.IEndpointBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MustUnderstandBehavior extends System.Object implements class System.ServiceModel.Description.IEndpointBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.MustUnderstandBehavior" />
  <TypeSignature Language="VB.NET" Value="Public Class MustUnderstandBehavior&#xA;Implements IEndpointBehavior" />
  <TypeSignature Language="C++ CLI" Value="public ref class MustUnderstandBehavior : System::ServiceModel::Description::IEndpointBehavior" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IEndpointBehavior</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Instrui a WCF (Windows Communication Foundation) a desabilitar o processamento obrigatório de cabeçalhos que não estão na coleção <see cref="P:System.ServiceModel.Channels.MessageHeaders.UnderstoodHeaders" /> que devem ser compreendidos de acordo com as especificações SOAP 1.1 e 1.2.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Por padrão, o WCF em tempo de execução do cliente ou serviço gera uma exceção quando encontra um <xref:System.ServiceModel.Channels.MessageHeader?displayProperty=nameWithType> em uma mensagem para a qual o <xref:System.ServiceModel.Channels.MessageHeader.MustUnderstand%2A?displayProperty=nameWithType> é de propriedade `true` , mas o cabeçalho não está no <xref:System.ServiceModel.Channels.MessageHeaders.UnderstoodHeaders%2A?displayProperty=nameWithType> propriedade para a mensagem.  
  
 Para evitar esse comportamento, use o <xref:System.ServiceModel.Description.MustUnderstandBehavior> e defina o <xref:System.ServiceModel.Description.MustUnderstandBehavior.ValidateMustUnderstand%2A> propriedade `false`. Normalmente, isso é usado em cenários em que o conteúdo da mensagem deve ser retransmitida em outro lugar e não processados, como um serviço de roteador.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MustUnderstandBehavior (bool validate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool validate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MustUnderstandBehavior.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (validate As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MustUnderstandBehavior(bool validate);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="validate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="validate">Um valor que especifica se é preciso impor a validação de cabeçalhos <see langword="mustUnderstand" />.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.Description.MustUnderstandBehavior" /> usando o valor especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Passar `false` como o `validate` parâmetro para esse construtor para impedir que uma exceção de ser lançada quando o tempo de execução encontra uma <xref:System.ServiceModel.Channels.MessageHeader?displayProperty=nameWithType> em uma mensagem para a qual o <xref:System.ServiceModel.Channels.MessageHeader.MustUnderstand%2A?displayProperty=nameWithType> é de propriedade `true` , mas o cabeçalho não está no <xref:System.ServiceModel.Channels.MessageHeaders.UnderstoodHeaders%2A?displayProperty=nameWithType> propriedade para a mensagem.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters">
      <MemberSignature Language="C#" Value="void IEndpointBehavior.AddBindingParameters (System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Channels.BindingParameterCollection bindingParameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(class System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, class System.ServiceModel.Channels.BindingParameterCollection bindingParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MustUnderstandBehavior.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(System::ServiceModel::Description::ServiceEndpoint ^ serviceEndpoint, System::ServiceModel::Channels::BindingParameterCollection ^ bindingParameters) = System::ServiceModel::Description::IEndpointBehavior::AddBindingParameters;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceEndpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="bindingParameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="serviceEndpoint">O ponto de extremidade ao qual o comportamento se aplica.</param>
        <param name="bindingParameters">Os parâmetros de associação para o comportamento.</param>
        <summary>É compatível com a funcionalidade de comportamento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementa <xref:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters%2A> para dar suporte à funcionalidade de comportamento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior">
      <MemberSignature Language="C#" Value="void IEndpointBehavior.ApplyClientBehavior (System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Dispatcher.ClientRuntime behavior);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(class System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, class System.ServiceModel.Dispatcher.ClientRuntime behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MustUnderstandBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(System::ServiceModel::Description::ServiceEndpoint ^ serviceEndpoint, System::ServiceModel::Dispatcher::ClientRuntime ^ behavior) = System::ServiceModel::Description::IEndpointBehavior::ApplyClientBehavior;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceEndpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="behavior" Type="System.ServiceModel.Dispatcher.ClientRuntime" />
      </Parameters>
      <Docs>
        <param name="serviceEndpoint">O ponto de extremidade ao qual o comportamento se aplica.</param>
        <param name="behavior">O tempo de execução do cliente a definir.</param>
        <summary>Atribui o valor de <see cref="P:System.ServiceModel.Description.MustUnderstandBehavior.ValidateMustUnderstand" /> à propriedade <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.ValidateMustUnderstand" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementa o <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A> método para dar suporte à funcionalidade de comportamento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="void IEndpointBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Dispatcher.EndpointDispatcher endpointDispatcher);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(class System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, class System.ServiceModel.Dispatcher.EndpointDispatcher endpointDispatcher) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MustUnderstandBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System::ServiceModel::Description::ServiceEndpoint ^ serviceEndpoint, System::ServiceModel::Dispatcher::EndpointDispatcher ^ endpointDispatcher) = System::ServiceModel::Description::IEndpointBehavior::ApplyDispatchBehavior;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceEndpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="endpointDispatcher" Type="System.ServiceModel.Dispatcher.EndpointDispatcher" />
      </Parameters>
      <Docs>
        <param name="serviceEndpoint">O ponto de extremidade ao qual o comportamento se aplica.</param>
        <param name="endpointDispatcher">O dispatcher a ser definido.</param>
        <summary>Atribui o valor de <see cref="P:System.ServiceModel.Description.MustUnderstandBehavior.ValidateMustUnderstand" /> à propriedade <see cref="P:System.ServiceModel.Dispatcher.DispatchRuntime.ValidateMustUnderstand" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementa o <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A> para dar suporte à funcionalidade de comportamento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IEndpointBehavior.Validate">
      <MemberSignature Language="C#" Value="void IEndpointBehavior.Validate (System.ServiceModel.Description.ServiceEndpoint serviceEndpoint);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IEndpointBehavior.Validate(class System.ServiceModel.Description.ServiceEndpoint serviceEndpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MustUnderstandBehavior.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IEndpointBehavior.Validate(System::ServiceModel::Description::ServiceEndpoint ^ serviceEndpoint) = System::ServiceModel::Description::IEndpointBehavior::Validate;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IEndpointBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceEndpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
      </Parameters>
      <Docs>
        <param name="serviceEndpoint">O ponto de extremidade a ser validado.</param>
        <summary>É compatível com a funcionalidade de comportamento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementa o <xref:System.ServiceModel.Description.IEndpointBehavior.Validate%2A> método para dar suporte à funcionalidade de comportamento.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateMustUnderstand">
      <MemberSignature Language="C#" Value="public bool ValidateMustUnderstand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidateMustUnderstand" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.MustUnderstandBehavior.ValidateMustUnderstand" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateMustUnderstand As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidateMustUnderstand { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que especifica se é preciso garantir que um cabeçalho seja compreendido de acordo com as especificações SOAP 1.1 e 1.2.</summary>
        <value>
          <see langword="true" /> Se o cabeçalho deve ser processado corretamente ou uma falha é lançada; Caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Definir o <xref:System.ServiceModel.Description.MustUnderstandBehavior.ValidateMustUnderstand%2A> propriedade para `false` para impedir que uma exceção de ser lançada quando o tempo de execução encontra um <xref:System.ServiceModel.Channels.MessageHeader?displayProperty=nameWithType> em uma mensagem para a qual o <xref:System.ServiceModel.Channels.MessageHeader.MustUnderstand%2A?displayProperty=nameWithType> é de propriedade `true` , mas o cabeçalho não está no <xref:System.ServiceModel.Channels.MessageHeaders.UnderstoodHeaders%2A?displayProperty=nameWithType> propriedade para a mensagem.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>