<Type Name="PrincipalPermissionMode" FullName="System.ServiceModel.Description.PrincipalPermissionMode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e5c8ecf5abf2547a2effb8abed0583303cbd094f" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34316067" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum PrincipalPermissionMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PrincipalPermissionMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.PrincipalPermissionMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum PrincipalPermissionMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class PrincipalPermissionMode" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Define o modo para verificações de autorização ao usar o <see cref="T:System.Security.Permissions.PrincipalPermissionAttribute" /> para controlar o acesso a um método.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ao aplicar o <xref:System.Security.Permissions.PrincipalPermissionAttribute> para um método, esse modo Especifica qual conjunto de funções para usar ao autorizar o acesso. Por padrão, o atributo usa grupos do Windows (como `Administrator` ou `Users`) para especificar a função à qual o usuário deve pertencer.  
  
 Para definir o modo programaticamente, crie uma instância do `ServiceHost` classe e, em seguida, localizar o <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior> em sua coleção de comportamentos e defina o <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.PrincipalPermissionMode%2A> à enumeração apropriada. O exemplo a seguir define a propriedade como UseAspNetRoles.  
  
 [!code-csharp[PrincipalPermissionMode#1](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#1)]
 [!code-vb[PrincipalPermissionMode#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#1)]  
  
 Você também pode definir o comportamento na configuração, adicionando um [ &lt;serviceAuthorization&gt; ](~/docs/framework/configure-apps/file-schema/wcf/serviceauthorization-element.md) para o [ &lt;serviceBehaviors&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicebehaviors.md) de um arquivo de configuração, conforme mostrado no código a seguir.  
  
 [!code-csharp[PrincipalPermissionMode#10](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#10)]
 [!code-vb[PrincipalPermissionMode#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#10)]  
  
 A enumeração afeta como o <xref:System.Security.Permissions.PrincipalPermissionAttribute> atributo autoriza um usuário quando ele é aplicado a um método. O exemplo a seguir aplica o atributo para um método e demandas de que o usuário pertence ao grupo de usuários no computador. Esse código funciona somente quando o <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.PrincipalPermissionMode%2A> é definido como `UseWindowsGroup` (a configuração padrão).  
  
 [!code-csharp[PrincipalPermissionMode#2](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#2)]
 [!code-vb[PrincipalPermissionMode#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#2)]  
  
## <a name="useaspnetroles"></a>UseAspNetRoles  
 O valor de UseAspNetRoles é usado para todos os tipos de credencial. Esse modo permite que o Windows Communication Foundation (WCF) para usar o provedor de função do ASP.NET para tomar decisões de autorização.  
  
 Quando a credencial para um serviço é um certificado x. 509, você pode definir o `Name` propriedade o <xref:System.Security.Permissions.PrincipalPermissionAttribute> para uma cadeia de caracteres que consiste em valores concatenados de campo de assunto e o campo impressão digital, como mostrado no exemplo a seguir.  
  
 [!code-csharp[PrincipalPermissionMode#3](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#3)]
 [!code-vb[PrincipalPermissionMode#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#3)]  
  
 A cadeia de caracteres concatenada consiste nos valores de entidade e impressão digital separados por ponto e vírgula e um espaço.  
  
 Também é possível que um certificado para ter um campo de assunto definido como uma cadeia de caracteres nula. Nesse caso, você pode definir o `Name` propriedade para um ponto e vírgula seguido por um espaço e, em seguida, a impressão digital, como mostrado no exemplo a seguir.  
  
 [!code-csharp[PrincipalPermissionMode#4](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#4)]
 [!code-vb[PrincipalPermissionMode#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#4)]  
  
 Se houver um provedor de função do ASP.NET, você também pode definir o <xref:System.Security.Permissions.PrincipalPermissionAttribute.Role%2A> propriedade a uma função no banco de dados. Por padrão, o banco de dados é representado pelo <xref:System.Web.Security.SqlRoleProvider>. Você também pode definir um provedor de função personalizada com o <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.RoleProvider%2A> propriedade o <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior> classe. O código a seguir define a função como `Administrators`. Observe que o provedor de função deve mapear a conta de usuário para essa função.  
  
 [!code-csharp[PrincipalPermissionMode#13](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#13)]
 [!code-vb[PrincipalPermissionMode#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#13)]  
  
 Para obter mais informações sobre o provedor de função do ASP.NET, consulte [como: Use o Gerenciador de função no ASP.NET 2.0](http://go.microsoft.com/fwlink/?LinkId=96692).  
  
 Para obter mais informações sobre como usar o WCF e o provedor de função, consulte [como: usar o provedor de função ASP.NET com um serviço](~/docs/framework/wcf/feature-details/how-to-use-the-aspnet-role-provider-with-a-service.md).  
  
## <a name="custom"></a>Personalizado  
 Quando a propriedade é definida como Custom, você também deve fornecer uma classe personalizada que implementa o <xref:System.IdentityModel.Policy.IAuthorizationPolicy> classe. Essa classe é responsável por fornecer o chamador `IPrincipal` representação dentro do <xref:System.IdentityModel.Policy.EvaluationContext.Properties%2A> coleção. Ele deve armazenar o `IPrincipal` instância para a coleção de propriedades usando a chave de cadeia de caracteres "Principal", conforme mostrado no exemplo a seguir.  
  
```  
evaluationContext.Properties["Principal"]=new CustomPrincipal(identity);  
```  
  
## <a name="background"></a>Informações preliminares  
 A segurança baseada em função no [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] permite que os aplicativos especifiquem autorizações através do código. Especificando o <xref:System.Security.Permissions.PrincipalPermission> por demanda, o <xref:System.Threading.Thread.CurrentPrincipal%2A> devem atender a `PrincipalPermission` requisito. Por exemplo, o usuário deve ser em um grupo ou função específica. Caso contrário, o thread não está autorizado a executar o código, o que resulta em uma exceção. O WCF fornece um conjunto de <xref:System.ServiceModel.Description.PrincipalPermissionMode> seleções para especificar o <xref:System.Threading.Thread.CurrentPrincipal%2A> com base em <xref:System.Security.SecurityContext> adequadamente.  
  
   
  
## Examples  
 O exemplo a seguir mostra como especificar UseAspNetRoles.  
  
 [!code-csharp[PrincipalPermissionMode#7](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#7)]
 [!code-vb[PrincipalPermissionMode#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#7)]  
  
 O exemplo a seguir mostra como especificar personalizado.  
  
 [!code-csharp[PrincipalPermissionMode#8](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#8)]
 [!code-vb[PrincipalPermissionMode#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#8)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Always">
      <MemberSignature Language="C#" Value="Always" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode Always = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.Always" />
      <MemberSignature Language="VB.NET" Value="Always" />
      <MemberSignature Language="C++ CLI" Value="Always" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Sempre permite que o usuário especifique uma classe <see cref="T:System.Security.Principal.IPrincipal" /> para <see cref="P:System.Threading.Thread.CurrentPrincipal" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="Custom">
      <MemberSignature Language="C#" Value="Custom" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode Custom = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.Custom" />
      <MemberSignature Language="VB.NET" Value="Custom" />
      <MemberSignature Language="C++ CLI" Value="Custom" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Permite que o usuário especifique uma classe <see cref="T:System.Security.Principal.IPrincipal" /> personalizada para <see cref="P:System.Threading.Thread.CurrentPrincipal" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <see cref="P:System.Threading.Thread.CurrentPrincipal" /> não está definido.</summary>
      </Docs>
    </Member>
    <Member MemberName="UseAspNetRoles">
      <MemberSignature Language="C#" Value="UseAspNetRoles" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode UseAspNetRoles = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.UseAspNetRoles" />
      <MemberSignature Language="VB.NET" Value="UseAspNetRoles" />
      <MemberSignature Language="C++ CLI" Value="UseAspNetRoles" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <see cref="P:System.Threading.Thread.CurrentPrincipal" /> é definida com base no provedor de função do [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] (<see cref="T:System.Web.Security.RoleProvider" />).</summary>
      </Docs>
    </Member>
    <Member MemberName="UseWindowsGroups">
      <MemberSignature Language="C#" Value="UseWindowsGroups" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode UseWindowsGroups = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.UseWindowsGroups" />
      <MemberSignature Language="VB.NET" Value="UseWindowsGroups" />
      <MemberSignature Language="C++ CLI" Value="UseWindowsGroups" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <see cref="P:System.Threading.Thread.CurrentPrincipal" /> é baseado em conjuntos no Windows (<see cref="T:System.Security.Principal.WindowsPrincipal" />). Se a identidade do usuário não estiver associada uma conta do Windows, o Windows anônimo será usado.</summary>
      </Docs>
    </Member>
  </Members>
</Type>