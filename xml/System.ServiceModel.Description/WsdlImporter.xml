<Type Name="WsdlImporter" FullName="System.ServiceModel.Description.WsdlImporter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b47edaf10a95a32e92b6f5de62ecc5e7de6104a2" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36416818" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WsdlImporter : System.ServiceModel.Description.MetadataImporter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WsdlImporter extends System.ServiceModel.Description.MetadataImporter" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.WsdlImporter" />
  <TypeSignature Language="VB.NET" Value="Public Class WsdlImporter&#xA;Inherits MetadataImporter" />
  <TypeSignature Language="C++ CLI" Value="public ref class WsdlImporter : System::ServiceModel::Description::MetadataImporter" />
  <TypeSignature Language="F#" Value="type WsdlImporter = class&#xA;    inherit MetadataImporter" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Description.MetadataImporter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Importa metadados da linguagem WSDL 1.1 com anexos WS-Policy.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.ServiceModel.Description.WsdlImporter> classe para importar metadados, bem como converter essas informações em várias classes que representam informações de contrato e o ponto de extremidade.  
  
 A classe base para <xref:System.ServiceModel.Description.WsdlImporter>, o <xref:System.ServiceModel.Description.MetadataImporter> da classe, que define métodos que seletivamente importar informações de contrato e o ponto de extremidade e propriedades que expõem os erros de importação e aceitam informações relevantes para o processo de importação e a conversão do tipo. O <xref:System.ServiceModel.Description.WsdlImporter> tipo usa os importadores de políticas personalizadas (<xref:System.ServiceModel.Description.IPolicyImportExtension> implementações) de seu tipo de pai para lidar com declarações de política personalizada e suas própria importadores WSDL personalizados (<xref:System.ServiceModel.Description.IWsdlImportExtension> implementações) para lidar com elementos WSDL personalizados. Para obter detalhes, consulte [estendendo o sistema de metadados](~/docs/framework/wcf/extending/extending-the-metadata-system.md).  
  
 Ao importar a política de documentos WSDL, o <xref:System.ServiceModel.Description.WsdlImporter> tipo tentará até 32 combinações de alternativas de política anexadas para as entidades de política WSDL diferentes.  Se nenhuma combinação importa corretamente, a primeira combinação é usada para construir uma associação personalizada parcial.  
  
 Além desses métodos e propriedades, <xref:System.ServiceModel.Description.WsdlImporter> também implementa métodos que oferecem suporte a importação de informações de associação e propriedades que fornecem acesso a todos os documentos de política, documentos WSDL, extensões WSDL e documentos de esquema XML. Para obter informações sobre como estender <xref:System.ServiceModel.Description.WsdlImporter> para dar suporte a elementos WSDL personalizados, consulte <xref:System.ServiceModel.Description.IWsdlImportExtension>.  
  
 Normalmente o <xref:System.ServiceModel.Description.WsdlImporter> classe é usada em um processo de três etapas.  
  
1.  Criar um <xref:System.ServiceModel.Description.WsdlImporter> de objeto e passar uma <xref:System.ServiceModel.Description.MetadataSet> objeto para o construtor.  
  
2.  Chamar o `Import` método para recuperar os resultados.  
  
3.  Verifique o <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> propriedade para determinar se há erros de importação.  
  
> [!NOTE]
>  Ao importar tipos de porta WSDL, se o QName do tipo porta corresponde a uma entrada no <xref:System.ServiceModel.Description.MetadataImporter.KnownContracts%2A> dicionário, em seguida, o tipo de porta não será importado e o contrato conhecido é usado em vez disso.  
  
 Nenhum valor é retornado do <xref:System.ServiceModel.Description.WsdlImporter> propriedades até que um dos métodos de importação seja chamado. Personalizar <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType> objetos ou podem ser carregados no <xref:System.ServiceModel.Description.WsdlImporter> programaticamente ou usando a configuração do cliente [ &lt;wsdlImporters&gt; ](~/docs/framework/configure-apps/file-schema/wcf/wsdlimporters.md) elemento.  
  
 Metadados que foram importados como pontos de extremidade de serviço não podem ser usado para criar um tempo de execução ou exportar os metadados porque os pontos de extremidade importados não contêm nenhuma informação de tipo gerenciado. Para usar os metadados para criar um tempo de execução do cliente ou serviço ou gerar metadados, você deve primeiro gerar e compilar o código do metadados e usar esse tipo de informações para criar um novo <xref:System.ServiceModel.Description.ContractDescription?displayProperty=nameWithType> objeto usando <xref:System.ServiceModel.Description.ContractDescription.GetContract%2A>.  
  
   
  
## Examples  
 O exemplo de código a seguir mostra como usar o <xref:System.ServiceModel.Description.WsdlImporter> para adicionar um personalizado <xref:System.Runtime.Serialization.IDataContractSurrogate?displayProperty=nameWithType>, importar todos os contratos e esses contratos de compilação e salvá-los em um arquivo.  
  
 [!code-csharp[C_CustomWSDLExtensions#8](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#8)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.Description.WsdlImporter" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WsdlImporter (System.ServiceModel.Description.MetadataSet metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Description.MetadataSet metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.#ctor(System.ServiceModel.Description.MetadataSet)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (metadata As MetadataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WsdlImporter(System::ServiceModel::Description::MetadataSet ^ metadata);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Description.WsdlImporter : System.ServiceModel.Description.MetadataSet -&gt; System.ServiceModel.Description.WsdlImporter" Usage="new System.ServiceModel.Description.WsdlImporter metadata" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="metadata" Type="System.ServiceModel.Description.MetadataSet" />
      </Parameters>
      <Docs>
        <param name="metadata">Uma coleção de documentos de metadados do qual devem ser extraídas informações de contrato, ponto de extremidade e associação.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.ServiceModel.Description.WsdlImporter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.ServiceModel.Description.WsdlImporter.%23ctor%2A> construtor para criar um <xref:System.ServiceModel.Description.WsdlImporter> objeto de um conjunto de documentos de metadados.  
  
   
  
## Examples  
 O exemplo de código a seguir mostra o uso mais comum de <xref:System.ServiceModel.Description.WsdlImporter> classe com o <xref:System.ServiceModel.Description.MetadataResolver> classe.  
  
 [!code-csharp[C_CustomWSDLExtensions#10](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WsdlImporter (System.ServiceModel.Description.MetadataSet metadata, System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IPolicyImportExtension&gt; policyImportExtensions, System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IWsdlImportExtension&gt; wsdlImportExtensions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Description.MetadataSet metadata, class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.IPolicyImportExtension&gt; policyImportExtensions, class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.IWsdlImportExtension&gt; wsdlImportExtensions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.#ctor(System.ServiceModel.Description.MetadataSet,System.Collections.Generic.IEnumerable{System.ServiceModel.Description.IPolicyImportExtension},System.Collections.Generic.IEnumerable{System.ServiceModel.Description.IWsdlImportExtension})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (metadata As MetadataSet, policyImportExtensions As IEnumerable(Of IPolicyImportExtension), wsdlImportExtensions As IEnumerable(Of IWsdlImportExtension))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WsdlImporter(System::ServiceModel::Description::MetadataSet ^ metadata, System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::IPolicyImportExtension ^&gt; ^ policyImportExtensions, System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::IWsdlImportExtension ^&gt; ^ wsdlImportExtensions);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Description.WsdlImporter : System.ServiceModel.Description.MetadataSet * seq&lt;System.ServiceModel.Description.IPolicyImportExtension&gt; * seq&lt;System.ServiceModel.Description.IWsdlImportExtension&gt; -&gt; System.ServiceModel.Description.WsdlImporter" Usage="new System.ServiceModel.Description.WsdlImporter (metadata, policyImportExtensions, wsdlImportExtensions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="metadata" Type="System.ServiceModel.Description.MetadataSet" />
        <Parameter Name="policyImportExtensions" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IPolicyImportExtension&gt;" />
        <Parameter Name="wsdlImportExtensions" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IWsdlImportExtension&gt;" />
      </Parameters>
      <Docs>
        <param name="metadata">Os metadados baixados.</param>
        <param name="policyImportExtensions">Os importadores de políticas personalizados usados para importar as declarações de políticas personalizadas.</param>
        <param name="wsdlImportExtensions">Os importadores de WSDL personalizados usados para importar elementos WSDL personalizados.</param>
        <summary>Cria um objeto <see cref="T:System.ServiceModel.Description.WsdlImporter" /> dos metadados especificados, dos importadores de políticas personalizados e dos importadores de WSDL personalizados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use este construtor para controlar os metadados a serem importados e a política e importadores WSDL a ser usado.  
  
> [!NOTE]
>  Se importadores de políticas personalizadas ou importadores WSDL personalizados são passados para o construtor qualquer importadores personalizados especificados nos arquivos de configuração do aplicativo não foram carregados. Se você quiser adicionar um importador personalizado, deve reconstruir as coleções importadores antes de usar este construtor. Consulte a seção de exemplo.  
  
   
  
## Examples  
 O exemplo de código a seguir mostra como adicionar um novo importador WSDL personalizado (o `WSDLDocumentationImporter`) para o conjunto padrão de importadores antes de usar o <xref:System.ServiceModel.Description.WsdlImporter> objeto.  
  
 [!code-csharp[C_CustomWSDLExtensions#11](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O argumento <paramref name="metadata" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WsdlImporter (System.ServiceModel.Description.MetadataSet metadata, System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IPolicyImportExtension&gt; policyImportExtensions, System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IWsdlImportExtension&gt; wsdlImportExtensions, System.ServiceModel.Description.MetadataImporterQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Description.MetadataSet metadata, class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.IPolicyImportExtension&gt; policyImportExtensions, class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.IWsdlImportExtension&gt; wsdlImportExtensions, class System.ServiceModel.Description.MetadataImporterQuotas quotas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.#ctor(System.ServiceModel.Description.MetadataSet,System.Collections.Generic.IEnumerable{System.ServiceModel.Description.IPolicyImportExtension},System.Collections.Generic.IEnumerable{System.ServiceModel.Description.IWsdlImportExtension},System.ServiceModel.Description.MetadataImporterQuotas)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (metadata As MetadataSet, policyImportExtensions As IEnumerable(Of IPolicyImportExtension), wsdlImportExtensions As IEnumerable(Of IWsdlImportExtension), quotas As MetadataImporterQuotas)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WsdlImporter(System::ServiceModel::Description::MetadataSet ^ metadata, System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::IPolicyImportExtension ^&gt; ^ policyImportExtensions, System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::IWsdlImportExtension ^&gt; ^ wsdlImportExtensions, System::ServiceModel::Description::MetadataImporterQuotas ^ quotas);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Description.WsdlImporter : System.ServiceModel.Description.MetadataSet * seq&lt;System.ServiceModel.Description.IPolicyImportExtension&gt; * seq&lt;System.ServiceModel.Description.IWsdlImportExtension&gt; * System.ServiceModel.Description.MetadataImporterQuotas -&gt; System.ServiceModel.Description.WsdlImporter" Usage="new System.ServiceModel.Description.WsdlImporter (metadata, policyImportExtensions, wsdlImportExtensions, quotas)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="metadata" Type="System.ServiceModel.Description.MetadataSet" />
        <Parameter Name="policyImportExtensions" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IPolicyImportExtension&gt;" />
        <Parameter Name="wsdlImportExtensions" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IWsdlImportExtension&gt;" />
        <Parameter Name="quotas" Type="System.ServiceModel.Description.MetadataImporterQuotas" />
      </Parameters>
      <Docs>
        <param name="metadata">Os metadados baixados.</param>
        <param name="policyImportExtensions">Os importadores de políticas personalizados usados para importar as declarações de políticas personalizadas.</param>
        <param name="wsdlImportExtensions">Os importadores de WSDL personalizados usados para importar elementos WSDL personalizados.</param>
        <param name="quotas">A quantidade de metadados a serem recuperados por vez</param>
        <summary>Cria um objeto <see cref="T:System.ServiceModel.Description.WsdlImporter" /> dos metadados especificados, dos importadores de políticas personalizados e dos importadores de WSDL personalizados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use este construtor para controlar os metadados a serem importados e a política e importadores WSDL a ser usado.  
  
> [!NOTE]
>  Se importadores de políticas personalizadas ou importadores WSDL personalizados são passados para o construtor qualquer importadores personalizados especificados nos arquivos de configuração do aplicativo não foram carregados. Se você quiser adicionar um importador personalizado, deve reconstruir as coleções importadores antes de usar este construtor. Consulte a seção de exemplo.  
  
   
  
## Examples  
 O exemplo de código a seguir mostra como adicionar um novo importador WSDL personalizado (o `WSDLDocumentationImporter`) para o conjunto padrão de importadores antes de usar o <xref:System.ServiceModel.Description.WsdlImporter> objeto.  
  
 [!code-csharp[C_CustomWSDLExtensions#11](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">O argumento <paramref name="metadata" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportAllBindings">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Channels.Binding&gt; ImportAllBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Channels.Binding&gt; ImportAllBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportAllBindings" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportAllBindings () As Collection(Of Binding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Channels::Binding ^&gt; ^ ImportAllBindings();" />
      <MemberSignature Language="F#" Value="member this.ImportAllBindings : unit -&gt; System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Channels.Binding&gt;" Usage="wsdlImporter.ImportAllBindings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Channels.Binding&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna um conjunto de objetos <see cref="T:System.ServiceModel.Channels.Binding" /> importados dos documentos de metadados.</summary>
        <returns>Um conjunto de objetos <see cref="T:System.ServiceModel.Channels.Binding" /> importados de documentos de metadados.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.ServiceModel.Description.WsdlImporter.ImportAllBindings%2A> método para importar todas as informações de associação de documentos de metadados e retorná-los como <xref:System.ServiceModel.Channels.Binding> objetos. Verifique o <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> propriedade para determinar se há erros de importação antes de usar os objetos retornados.  
  
 Para importar uma associação WSDL específica, consulte o <xref:System.ServiceModel.Description.WsdlImporter.ImportBinding%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">O <see cref="T:System.ServiceModel.Description.WsdlImporter" /> encontrou um erro.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportAllContracts">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ContractDescription&gt; ImportAllContracts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.ContractDescription&gt; ImportAllContracts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportAllContracts" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ImportAllContracts () As Collection(Of ContractDescription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ ImportAllContracts();" />
      <MemberSignature Language="F#" Value="override this.ImportAllContracts : unit -&gt; System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ContractDescription&gt;" Usage="wsdlImporter.ImportAllContracts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ContractDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna um conjunto de objetos <see cref="T:System.ServiceModel.Description.ContractDescription" /> que representam informações de tipo de porta nos documentos de metadados.</summary>
        <returns>Um conjunto de objetos <see cref="T:System.ServiceModel.Description.ContractDescription" /> que representam informações de tipo de porta nos documentos de metadados.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.ServiceModel.Description.WsdlImporter.ImportAllContracts%2A> método para importar todas as informações de tipo de porta WSDL em relação aos documentos de metadados e retorná-los como <xref:System.ServiceModel.Description.ContractDescription> objetos. É recomendável verificar o <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> propriedade para determinar se há erros de importação antes de usar os objetos retornados.  
  
 Para importar o tipo de uma porta, consulte o <xref:System.ServiceModel.Description.WsdlImporter.ImportContract%2A> método.  
  
   
  
## Examples  
 O exemplo de código a seguir mostra como usar o <xref:System.ServiceModel.Description.WsdlImporter> para adicionar um personalizado <xref:System.Runtime.Serialization.IDataContractSurrogate?displayProperty=nameWithType>, importar todos os contratos e esses contratos de compilação e salvá-los em um arquivo.  
  
 [!code-csharp[C_CustomWSDLExtensions#8](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">O <see cref="T:System.ServiceModel.Description.WsdlImporter" /> encontrou um erro.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportAllEndpoints">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Description.ServiceEndpointCollection ImportAllEndpoints ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Description.ServiceEndpointCollection ImportAllEndpoints() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportAllEndpoints" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ImportAllEndpoints () As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Description::ServiceEndpointCollection ^ ImportAllEndpoints();" />
      <MemberSignature Language="F#" Value="override this.ImportAllEndpoints : unit -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="wsdlImporter.ImportAllEndpoints " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retorna um <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> que representa os pontos de extremidade em documentos WSDL.</summary>
        <returns>Um <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> que representa os pontos de extremidade em documentos WSDL.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.ServiceModel.Description.WsdlImporter.ImportAllEndpoints%2A> método para importar todas as informações de ponto de extremidade de documentos de metadados e retorná-los como uma coleção de <xref:System.ServiceModel.Description.ServiceEndpoint> objetos. Verifique o <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> propriedade para determinar se há erros de importação antes de usar os objetos retornados.  
  
 Para importar apenas uma porta específica da WSDL, consulte o <xref:System.ServiceModel.Description.WsdlImporter.ImportEndpoint%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">O <see cref="T:System.ServiceModel.Description.WsdlImporter" /> encontrou um erro.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportBinding">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Binding ImportBinding (System.Web.Services.Description.Binding wsdlBinding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Channels.Binding ImportBinding(class System.Web.Services.Description.Binding wsdlBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportBinding(System.Web.Services.Description.Binding)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportBinding (wsdlBinding As Binding) As Binding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Channels::Binding ^ ImportBinding(System::Web::Services::Description::Binding ^ wsdlBinding);" />
      <MemberSignature Language="F#" Value="member this.ImportBinding : System.Web.Services.Description.Binding -&gt; System.ServiceModel.Channels.Binding" Usage="wsdlImporter.ImportBinding wsdlBinding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Binding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlBinding" Type="System.Web.Services.Description.Binding" />
      </Parameters>
      <Docs>
        <param name="wsdlBinding">Um objeto <see cref="T:System.Web.Services.Description.Binding" /> que representa as informações de associação em um arquivo de metadados.</param>
        <summary>Retorna um objeto <see cref="T:System.ServiceModel.Channels.Binding" /> que representa as informações de associação de um conjunto de documentos de metadados.</summary>
        <returns>Um objeto <see cref="T:System.ServiceModel.Channels.Binding" /> que representa as informações de associação de um conjunto de documentos de metadados.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.ServiceModel.Description.WsdlImporter.ImportBinding%2A> método para usar um <xref:System.Web.Services.Description.Binding?displayProperty=nameWithType> objeto para localizar informações de associação nos metadados e retornar informações de associação como uma <xref:System.ServiceModel.Channels.Binding?displayProperty=nameWithType> objeto. Verifique o <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> propriedade para determinar se há erros de importação antes de usar o objeto retornado.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">O <see cref="T:System.ServiceModel.Description.WsdlImporter" /> encontrou um erro.</exception>
        <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="wsdlBinding" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportContract">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ContractDescription ImportContract (System.Web.Services.Description.PortType wsdlPortType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ContractDescription ImportContract(class System.Web.Services.Description.PortType wsdlPortType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportContract(System.Web.Services.Description.PortType)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportContract (wsdlPortType As PortType) As ContractDescription" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ContractDescription ^ ImportContract(System::Web::Services::Description::PortType ^ wsdlPortType);" />
      <MemberSignature Language="F#" Value="member this.ImportContract : System.Web.Services.Description.PortType -&gt; System.ServiceModel.Description.ContractDescription" Usage="wsdlImporter.ImportContract wsdlPortType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ContractDescription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlPortType" Type="System.Web.Services.Description.PortType" />
      </Parameters>
      <Docs>
        <param name="wsdlPortType">Um objeto <see cref="T:System.Web.Services.Description.PortType" /> que representa o tipo de posta desejado.</param>
        <summary>Retorna um objeto <see cref="T:System.ServiceModel.Description.ContractDescription" /> que representa metadados localizados segundo as informações de tipo de porta especificadas.</summary>
        <returns>Um objeto <see cref="T:System.ServiceModel.Description.ContractDescription" /> que representa metadados localizados segundo as informações de tipo de porta especificadas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.ServiceModel.Description.WsdlImporter.ImportContract%2A> método para usar um <xref:System.Web.Services.Description.PortType?displayProperty=nameWithType> objeto para localizar informações de tipo de porta nos metadados e retornar informações como um <xref:System.ServiceModel.Description.ContractDescription> objeto. Verifique o <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> propriedade para determinar se há erros de importação antes de usar o objeto retornado.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">O <see cref="T:System.ServiceModel.Description.WsdlImporter" /> encontrou um erro.</exception>
        <exception cref="T:System.ArgumentNullException">O tipo de porta é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportEndpoint">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint ImportEndpoint (System.Web.Services.Description.Port wsdlPort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint ImportEndpoint(class System.Web.Services.Description.Port wsdlPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportEndpoint(System.Web.Services.Description.Port)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportEndpoint (wsdlPort As Port) As ServiceEndpoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ ImportEndpoint(System::Web::Services::Description::Port ^ wsdlPort);" />
      <MemberSignature Language="F#" Value="member this.ImportEndpoint : System.Web.Services.Description.Port -&gt; System.ServiceModel.Description.ServiceEndpoint" Usage="wsdlImporter.ImportEndpoint wsdlPort" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlPort" Type="System.Web.Services.Description.Port" />
      </Parameters>
      <Docs>
        <param name="wsdlPort">Um objeto <see cref="T:System.Web.Services.Description.Port" /> que representa as informações de porta WSDL desejadas.</param>
        <summary>Retorna um <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> de um conjunto de documentos de metadados que usa as informações do objeto <see cref="T:System.Web.Services.Description.Port" /> especificado.</summary>
        <returns>Um objeto <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> que representa informações de porta WSDL específicas no documento de metadados.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.ServiceModel.Description.WsdlImporter.ImportEndpoint%2A> método para usar um <xref:System.Web.Services.Description.Port?displayProperty=nameWithType> objeto para localizar informações de tipo de porta nos metadados e retornar informações como um <xref:System.ServiceModel.Description.ServiceEndpoint> objeto. Verifique o <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> propriedade para determinar se há erros de importação antes de usar o objeto retornado.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">O <see cref="T:System.ServiceModel.Description.WsdlImporter" /> encontrou um erro.</exception>
        <exception cref="T:System.ArgumentNullException">O <paramref name="wsdlPort" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ImportEndpoints">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retorna uma coleção de objetos <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> que corresponde a todas as portas WSDL que usam uma associação especificada, que são associadas a um tipo de porta especificado ou que estão em um serviço WSDL especificado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ImportEndpoints">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpointCollection ImportEndpoints (System.Web.Services.Description.Binding wsdlBinding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpointCollection ImportEndpoints(class System.Web.Services.Description.Binding wsdlBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportEndpoints(System.Web.Services.Description.Binding)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportEndpoints (wsdlBinding As Binding) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpointCollection ^ ImportEndpoints(System::Web::Services::Description::Binding ^ wsdlBinding);" />
      <MemberSignature Language="F#" Value="member this.ImportEndpoints : System.Web.Services.Description.Binding -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="wsdlImporter.ImportEndpoints wsdlBinding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlBinding" Type="System.Web.Services.Description.Binding" />
      </Parameters>
      <Docs>
        <param name="wsdlBinding">Um objeto <see cref="T:System.Web.Services.Description.Binding" /> usado em uma porta WSDL.</param>
        <summary>Retorna um <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> que representa todos os tipos de porta WSDL que usam a <see cref="T:System.Web.Services.Description.Binding" /> especificada.</summary>
        <returns>Uma <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> que representa todos os tipos de porta WSDL que usam a <see cref="T:System.Web.Services.Description.Binding" /> especificada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verifique o <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> propriedade para determinar se há erros de importação antes de usar o objeto retornado.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">O <see cref="T:System.ServiceModel.Description.WsdlImporter" /> encontrou um erro.</exception>
        <exception cref="T:System.ArgumentNullException">O <paramref name="wsdlBinding" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportEndpoints">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpointCollection ImportEndpoints (System.Web.Services.Description.PortType wsdlPortType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpointCollection ImportEndpoints(class System.Web.Services.Description.PortType wsdlPortType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportEndpoints(System.Web.Services.Description.PortType)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportEndpoints (wsdlPortType As PortType) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpointCollection ^ ImportEndpoints(System::Web::Services::Description::PortType ^ wsdlPortType);" />
      <MemberSignature Language="F#" Value="member this.ImportEndpoints : System.Web.Services.Description.PortType -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="wsdlImporter.ImportEndpoints wsdlPortType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlPortType" Type="System.Web.Services.Description.PortType" />
      </Parameters>
      <Docs>
        <param name="wsdlPortType">O objeto <see cref="T:System.Web.Services.Description.PortType" /> que é usado para localizar as informações da porta WSDL associada.</param>
        <summary>Retorna uma <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> que representa todos os tipos de porta WSDL associados ao <see cref="T:System.Web.Services.Description.PortType" />.</summary>
        <returns>Um <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> que representa todos os tipos de porta WSDL associados ao <see cref="T:System.Web.Services.Description.PortType" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verifique o <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> propriedade para determinar se há erros de importação antes de usar o objeto retornado.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">O <see cref="T:System.ServiceModel.Description.WsdlImporter" /> encontrou um erro.</exception>
        <exception cref="T:System.ArgumentNullException">O <paramref name="wsdlPortType" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportEndpoints">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpointCollection ImportEndpoints (System.Web.Services.Description.Service wsdlService);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpointCollection ImportEndpoints(class System.Web.Services.Description.Service wsdlService) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportEndpoints(System.Web.Services.Description.Service)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportEndpoints (wsdlService As Service) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpointCollection ^ ImportEndpoints(System::Web::Services::Description::Service ^ wsdlService);" />
      <MemberSignature Language="F#" Value="member this.ImportEndpoints : System.Web.Services.Description.Service -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="wsdlImporter.ImportEndpoints wsdlService" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlService" Type="System.Web.Services.Description.Service" />
      </Parameters>
      <Docs>
        <param name="wsdlService">O objeto <see cref="T:System.Web.Services.Description.Service" /> no qual se deve pesquisar as informações de porta WSDL.</param>
        <summary>Retorna uma <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> que representa todos os tipos de porta WSDL no <see cref="T:System.Web.Services.Description.Service" /> especificado.</summary>
        <returns>Uma <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> que representa todos os tipos de porta WSDL no <see cref="T:System.Web.Services.Description.Service" /> especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verifique o <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> propriedade para determinar se há erros de importação antes de usar o objeto retornado.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">O <see cref="T:System.ServiceModel.Description.WsdlImporter" /> encontrou um erro.</exception>
        <exception cref="T:System.ArgumentNullException">O <paramref name="wsdlService" /> é <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WsdlDocuments">
      <MemberSignature Language="C#" Value="public System.Web.Services.Description.ServiceDescriptionCollection WsdlDocuments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Services.Description.ServiceDescriptionCollection WsdlDocuments" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.WsdlImporter.WsdlDocuments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WsdlDocuments As ServiceDescriptionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Description::ServiceDescriptionCollection ^ WsdlDocuments { System::Web::Services::Description::ServiceDescriptionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WsdlDocuments : System.Web.Services.Description.ServiceDescriptionCollection" Usage="System.ServiceModel.Description.WsdlImporter.WsdlDocuments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Description.ServiceDescriptionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um conjunto de objetos <see cref="T:System.Web.Services.Description.ServiceDescription" /> que descrevem as informações de contrato nos documentos de metadados.</summary>
        <value>Uma coleção de <see cref="T:System.Web.Services.Description.ServiceDescription" /> objetos que descrevem as informações de contrato nos documentos de metadados.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.ServiceModel.Description.WsdlImporter.WsdlDocuments%2A> propriedade não é populada até que um método de importação é chamado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WsdlImportExtensions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IWsdlImportExtension&gt; WsdlImportExtensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.KeyedByTypeCollection`1&lt;class System.ServiceModel.Description.IWsdlImportExtension&gt; WsdlImportExtensions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WsdlImportExtensions As KeyedByTypeCollection(Of IWsdlImportExtension)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::KeyedByTypeCollection&lt;System::ServiceModel::Description::IWsdlImportExtension ^&gt; ^ WsdlImportExtensions { System::Collections::Generic::KeyedByTypeCollection&lt;System::ServiceModel::Description::IWsdlImportExtension ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WsdlImportExtensions : System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IWsdlImportExtension&gt;" Usage="System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IWsdlImportExtension&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um conjunto de objetos <see cref="T:System.ServiceModel.Description.IWsdlImportExtension" /> usados para importar informações de WSDL personalizado.</summary>
        <value>Um conjunto de <see cref="T:System.ServiceModel.Description.IWsdlImportExtension" /> objetos usados para importar informações de WSDL personalizadas.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions%2A> propriedade para adicionar ou remover importadores WSDL personalizados.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSchemas">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSet XmlSchemas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaSet XmlSchemas" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.WsdlImporter.XmlSchemas" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlSchemas As XmlSchemaSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaSet ^ XmlSchemas { System::Xml::Schema::XmlSchemaSet ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlSchemas : System.Xml.Schema.XmlSchemaSet" Usage="System.ServiceModel.Description.WsdlImporter.XmlSchemas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém um conjunto de objetos <see cref="T:System.Xml.Schema.XmlSchema" /> que descrevem os tipos nos metadados.</summary>
        <value>Um conjunto de <see cref="T:System.Xml.Schema.XmlSchema" /> objetos que descrevem os tipos nos metadados.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Essa propriedade não está preenchida até que um dos métodos de importação seja chamado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>