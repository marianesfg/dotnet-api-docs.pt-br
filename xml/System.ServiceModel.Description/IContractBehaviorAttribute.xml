<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IContractBehaviorAttribute.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c49274278dbaf51e1412020923ae5709dcab6cca.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c49274278dbaf51e1412020923ae5709dcab6cca</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Description.IContractBehaviorAttribute">
          <source>Specifies the contract for which an attribute that implements the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.IContractBehavior" /&gt;</ph> interface is active.</source>
          <target state="translated">Especifica o contrato para o qual um atributo que implementa a interface <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.IContractBehavior" /&gt;</ph> está ativo.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehaviorAttribute">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute&gt;</ph> interface on an attribute that is also an <ph id="ph2">&lt;xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType&gt;</ph> object to enable the use of that contract behavior attribute on a service type but restrict its application to the contract specified in the <ph id="ph3">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A&gt;</ph> property.</source>
          <target state="translated">Implementar o <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute&gt;</ph> interface em um atributo que é também um <ph id="ph2">&lt;xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType&gt;</ph> objeto para permitir o uso desse atributo de comportamento de contrato em um tipo de serviço, mas restringe o seu aplicativo para o contrato especificado no <ph id="ph3">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehaviorAttribute">
          <source>There is no requirement to implement <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute&gt;</ph> on custom contract behavior attributes, and if the attribute is applied either to a contract interface or to a duplex callback class the value of the <ph id="ph2">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A&gt;</ph> property is ignored.</source>
          <target state="translated">Não há nenhum requisito para implementar <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute&gt;</ph> em Personalizar os atributos de comportamento de contrato e se o atributo é aplicado a uma interface de contrato ou para um retorno de chamada duplex classe o valor da <ph id="ph2">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A&gt;</ph> propriedade será ignorada.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehaviorAttribute">
          <source>For more information, see <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Para obter mais informações, consulte <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehaviorAttribute">
          <source>The following code example assumes a custom <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider?displayProperty=nameWithType&gt;</ph> implementation called <ph id="ph2">`ObjectProviderBehavior`</ph> that provides a "singleton" behavior; it always returns the same service instance and does not recycle it.</source>
          <target state="translated">O exemplo de código a seguir pressupõe um personalizado <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider?displayProperty=nameWithType&gt;</ph> implementação chamado <ph id="ph2">`ObjectProviderBehavior`</ph> que fornece um comportamento de "simples"; ele sempre retorna a mesma instância de serviço e não reciclar.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehaviorAttribute">
          <source>To insert the instance provider customization, the example shows how to implement a custom attribute (<ph id="ph1">`SingletonBehaviorAttribute`</ph>) that implements <ph id="ph2">&lt;xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType&gt;</ph> to insert the custom service instance provider.</source>
          <target state="translated">Para inserir a personalização do provedor de instância, o exemplo mostra como implementar um atributo personalizado (<ph id="ph1">`SingletonBehaviorAttribute`</ph>) que implementa <ph id="ph2">&lt;xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType&gt;</ph> para inserir o provedor de instância de serviço personalizado.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IContractBehaviorAttribute">
          <source>It also implements <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute&gt;</ph>, which binds its application to the <ph id="ph2">`ISampleService`</ph> contract.</source>
          <target state="translated">Ele também implementa <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute&gt;</ph>, que associa o seu aplicativo para o <ph id="ph2">`ISampleService`</ph> contrato.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract">
          <source>Gets the type of the contract to which the contract behavior is applicable.</source>
          <target state="translated">Obtém o tipo do contrato ao qual o comportamento de contrato é aplicável.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract">
          <source>The contract to which the contract behavior is applicable.</source>
          <target state="translated">O contrato ao qual o comportamento de contrato é aplicável.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A&gt;</ph> property to specify the contract to which the contract behavior is applied when the implementing <ph id="ph2">&lt;xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType&gt;</ph> attribute is applied to a service class.</source>
          <target state="translated">Implementar o <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A&gt;</ph> propriedade para especificar o contrato ao qual o comportamento de contrato é aplicado quando a implementação <ph id="ph2">&lt;xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType&gt;</ph> atributo é aplicado a uma classe de serviço.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract">
          <source>The following code example assumes a custom <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider?displayProperty=nameWithType&gt;</ph> implementation called <ph id="ph2">`ObjectProviderBehavior`</ph> that provides a "singleton" behavior; it always returns the same service instance and does not recycle it.</source>
          <target state="translated">O exemplo de código a seguir pressupõe um personalizado <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider?displayProperty=nameWithType&gt;</ph> implementação chamado <ph id="ph2">`ObjectProviderBehavior`</ph> que fornece um comportamento de "simples"; ele sempre retorna a mesma instância de serviço e não reciclar.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract">
          <source>To insert the instance provider customization, the example shows how to implement a custom attribute (<ph id="ph1">`SingletonBehaviorAttribute`</ph>) that implements <ph id="ph2">&lt;xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType&gt;</ph> to insert the custom service instance provider.</source>
          <target state="translated">Para inserir a personalização do provedor de instância, o exemplo mostra como implementar um atributo personalizado (<ph id="ph1">`SingletonBehaviorAttribute`</ph>) que implementa <ph id="ph2">&lt;xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType&gt;</ph> para inserir o provedor de instância de serviço personalizado.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract">
          <source>It also implements <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute&gt;</ph>, which binds its application to the <ph id="ph2">`ISampleService`</ph> contract.</source>
          <target state="translated">Ele também implementa <ph id="ph1">&lt;xref:System.ServiceModel.Description.IContractBehaviorAttribute&gt;</ph>, que associa o seu aplicativo para o <ph id="ph2">`ISampleService`</ph> contrato.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>