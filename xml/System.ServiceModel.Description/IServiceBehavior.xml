<Type Name="IServiceBehavior" FullName="System.ServiceModel.Description.IServiceBehavior">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="778e3fb7b36e48f48f3deab84c6e43e92c9aeebe" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IServiceBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IServiceBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.IServiceBehavior" />
  <TypeSignature Language="VB.NET" Value="Public Interface IServiceBehavior" />
  <TypeSignature Language="C++ CLI" Value="public interface class IServiceBehavior" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c2ce0-101">Fornece um mecanismo para modificar ou inserir extensões personalizadas em um serviço inteiro, incluindo o <see cref="T:System.ServiceModel.ServiceHostBase" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c2ce0-101">Provides a mechanism to modify or insert custom extensions across an entire service, including the <see cref="T:System.ServiceModel.ServiceHostBase" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2ce0-102">Implementar <xref:System.ServiceModel.Description.IServiceBehavior> para modificar, examinar ou estender algum aspecto da execução de todo o serviço no nível do aplicativo:</span><span class="sxs-lookup"><span data-stu-id="c2ce0-102">Implement <xref:System.ServiceModel.Description.IServiceBehavior> to modify, examine, or extend some aspect of service-wide execution at the application level:</span></span>  
  
-   <span data-ttu-id="c2ce0-103">Use o <xref:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior%2A> método para alterar valores de propriedade de tempo de execução ou inserir objetos de extensão personalizada, como manipuladores de erro, os interceptadores de mensagem ou parâmetro, extensões de segurança e outros objetos de extensão personalizada.</span><span class="sxs-lookup"><span data-stu-id="c2ce0-103">Use the <xref:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior%2A> method to change run-time property values or insert custom extension objects such as error handlers, message or parameter interceptors, security extensions, and other custom extension objects.</span></span>  
  
-   <span data-ttu-id="c2ce0-104">Use o <xref:System.ServiceModel.Description.IServiceBehavior.Validate%2A> método para examinar a descrição antes [!INCLUDE[indigo1](~/includes/indigo1-md.md)] constrói o serviço em execução para confirmar que ela pode ser executada corretamente.</span><span class="sxs-lookup"><span data-stu-id="c2ce0-104">Use the <xref:System.ServiceModel.Description.IServiceBehavior.Validate%2A> method to examine the description before [!INCLUDE[indigo1](~/includes/indigo1-md.md)] constructs the executing service to confirm that it can execute properly.</span></span>  
  
-   <span data-ttu-id="c2ce0-105">Use o <xref:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters%2A> método para passar para um elemento de associação as informações personalizadas para o serviço de forma que ela pode suportar o serviço corretamente.</span><span class="sxs-lookup"><span data-stu-id="c2ce0-105">Use the <xref:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters%2A> method to pass to a binding element the custom information for the service so that it can support the service correctly.</span></span>  
  
 <span data-ttu-id="c2ce0-106"><xref:System.ServiceModel.Description.IServiceBehavior> podem ser usados de qualquer um desses métodos, mas somente um é importante. Nesses casos, os métodos não utilizados podem retornar sem um valor.</span><span class="sxs-lookup"><span data-stu-id="c2ce0-106"><xref:System.ServiceModel.Description.IServiceBehavior> objects can make use of any of these methods, but often only one is important; in such cases the unused methods can return without a value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c2ce0-107">Todos os <xref:System.ServiceModel.Description.IServiceBehavior> métodos passam <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType> e <xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType> objetos como parâmetros.</span><span class="sxs-lookup"><span data-stu-id="c2ce0-107">All of the <xref:System.ServiceModel.Description.IServiceBehavior> methods pass <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType> and <xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType> objects as a parameters.</span></span> <span data-ttu-id="c2ce0-108">O <xref:System.ServiceModel.Description.ServiceDescription> parâmetro para exame apenas; se você modificar esses objetos o comportamento de execução é indefinido.</span><span class="sxs-lookup"><span data-stu-id="c2ce0-108">The <xref:System.ServiceModel.Description.ServiceDescription> parameter is for examination only; if you modify these objects the execution behavior is undefined.</span></span>  
  
 <span data-ttu-id="c2ce0-109">Para executar a tarefa de personalização para a qual destina-se, o <xref:System.ServiceModel.Description.IServiceBehavior> objeto deve ser adicionado para o <xref:System.ServiceModel.Description.ServiceDescription.Behaviors%2A> propriedade antes da construção de tempo de execução do serviço.</span><span class="sxs-lookup"><span data-stu-id="c2ce0-109">To perform the customization task for which it is intended, the <xref:System.ServiceModel.Description.IServiceBehavior> object must be added to the <xref:System.ServiceModel.Description.ServiceDescription.Behaviors%2A> property prior to the construction of the service runtime.</span></span> <span data-ttu-id="c2ce0-110">Há três maneiras de fazer isso:</span><span class="sxs-lookup"><span data-stu-id="c2ce0-110">There are three ways to do this:</span></span>  
  
-   <span data-ttu-id="c2ce0-111">Adicionar programaticamente o comportamento de serviço personalizado para o <xref:System.ServiceModel.Description.ServiceDescription.Behaviors%2A> propriedade antes do ponto em que o <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType> método é chamado no <xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType> objeto.</span><span class="sxs-lookup"><span data-stu-id="c2ce0-111">Programmatically add the custom service behavior to the <xref:System.ServiceModel.Description.ServiceDescription.Behaviors%2A> property prior to the point where the <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType> method is called on the <xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType> object.</span></span>  
  
-   <span data-ttu-id="c2ce0-112">Criar um atributo personalizado que implementa <xref:System.ServiceModel.Description.IServiceBehavior> e usá-lo para marcar as classes de serviço devem ser modificada.</span><span class="sxs-lookup"><span data-stu-id="c2ce0-112">Create a custom attribute that implements <xref:System.ServiceModel.Description.IServiceBehavior> and use it to mark service classes that are to be modified.</span></span> <span data-ttu-id="c2ce0-113">Quando um <xref:System.ServiceModel.ServiceHost> objeto for construído, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] usa reflexão para descobrir os atributos do tipo de serviço.</span><span class="sxs-lookup"><span data-stu-id="c2ce0-113">When a <xref:System.ServiceModel.ServiceHost> object is constructed, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] uses reflection to discover the attributes on the service type.</span></span> <span data-ttu-id="c2ce0-114">Se nenhum atributo implementar <xref:System.ServiceModel.Description.IServiceBehavior>, eles são adicionados à coleção de comportamentos em <xref:System.ServiceModel.Description.ServiceDescription>.</span><span class="sxs-lookup"><span data-stu-id="c2ce0-114">If any attributes implement <xref:System.ServiceModel.Description.IServiceBehavior>, they are added to the behaviors collection on <xref:System.ServiceModel.Description.ServiceDescription>.</span></span>  
  
-   <span data-ttu-id="c2ce0-115">Estender o <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType> classe para oferecer suporte a especificação do comportamento em um aplicativo ou arquivo de configuração de máquina.</span><span class="sxs-lookup"><span data-stu-id="c2ce0-115">Extend the <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType> class to support the specification of the behavior in an application or machine configuration file.</span></span> <span data-ttu-id="c2ce0-116">Consulte a seção de exemplo para obter mais informações.</span><span class="sxs-lookup"><span data-stu-id="c2ce0-116">See the Example section for more information.</span></span>  
  
 <span data-ttu-id="c2ce0-117">Exemplos dos comportamentos de serviço no [!INCLUDE[indigo2](~/includes/indigo2-md.md)] incluem o <xref:System.ServiceModel.ServiceBehaviorAttribute> atributo, o <xref:System.ServiceModel.Description.ServiceThrottlingBehavior?displayProperty=nameWithType>, o <xref:System.ServiceModel.Description.ServiceDebugBehavior?displayProperty=nameWithType> e <xref:System.ServiceModel.Description.ServiceMetadataBehavior?displayProperty=nameWithType> comportamento.</span><span class="sxs-lookup"><span data-stu-id="c2ce0-117">Examples of service behaviors in [!INCLUDE[indigo2](~/includes/indigo2-md.md)] include the <xref:System.ServiceModel.ServiceBehaviorAttribute> attribute, the <xref:System.ServiceModel.Description.ServiceThrottlingBehavior?displayProperty=nameWithType>, the <xref:System.ServiceModel.Description.ServiceDebugBehavior?displayProperty=nameWithType> and the <xref:System.ServiceModel.Description.ServiceMetadataBehavior?displayProperty=nameWithType> behavior.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2ce0-118">O exemplo de código a seguir mostra o uso de um comportamento de serviço especificado em um arquivo de configuração para inserir um manipulador de erro personalizada em um aplicativo de serviço.</span><span class="sxs-lookup"><span data-stu-id="c2ce0-118">The following code example shows the use of a service behavior specified in a configuration file to insert a custom error handler in a service application.</span></span> <span data-ttu-id="c2ce0-119">Neste exemplo, o manipulador de erro captura todas as exceções e converte-os em um personalizado `GreetingFault` Falha SOAP que é retornada ao cliente.</span><span class="sxs-lookup"><span data-stu-id="c2ce0-119">In this example, the error handler catches all exceptions and converts them into a custom `GreetingFault` SOAP fault that is then returned to the client.</span></span>  
  
 <span data-ttu-id="c2ce0-120">O seguinte <xref:System.ServiceModel.Description.IServiceBehavior> implementação não adiciona nenhum objeto de parâmetro de associação, adiciona personalizado <xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType> objeto para cada <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType> propriedade e valida que cada operação do serviço ao qual o comportamento de serviço é aplicado e tem um <xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType>do tipo `GreetingFault`.</span><span class="sxs-lookup"><span data-stu-id="c2ce0-120">The following <xref:System.ServiceModel.Description.IServiceBehavior> implementation adds no binding parameter objects, adds the custom <xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType> object to each <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType> property, and validates that each operation of the service to which the service behavior is applied and has a <xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType> of type `GreetingFault`.</span></span>  
  
 [!code-csharp[IErrorHandler#7](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#7)]
 [!code-vb[IErrorHandler#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#7)]  
  
 <span data-ttu-id="c2ce0-121">Neste exemplo, a classe de comportamento também implementa <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType>, que permite que o comportamento de serviço a ser inserido usando-o em um arquivo de configuração do aplicativo, como o exemplo de código a seguir demonstra.</span><span class="sxs-lookup"><span data-stu-id="c2ce0-121">In this example, the behavior class also implements <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType>, which enables the service behavior to be inserted by using it in an application configuration file, as the following code example demonstrates.</span></span>  
  
 [!code-xml[IErrorHandler#4](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/hostapplication.exe.config#4)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddBindingParameters">
      <MemberSignature Language="C#" Value="public void AddBindingParameters (System.ServiceModel.Description.ServiceDescription serviceDescription, System.ServiceModel.ServiceHostBase serviceHostBase, System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, System.ServiceModel.Channels.BindingParameterCollection bindingParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddBindingParameters(class System.ServiceModel.Description.ServiceDescription serviceDescription, class System.ServiceModel.ServiceHostBase serviceHostBase, class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, class System.ServiceModel.Channels.BindingParameterCollection bindingParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBindingParameters(System::ServiceModel::Description::ServiceDescription ^ serviceDescription, System::ServiceModel::ServiceHostBase ^ serviceHostBase, System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::ServiceEndpoint ^&gt; ^ endpoints, System::ServiceModel::Channels::BindingParameterCollection ^ bindingParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceDescription" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
        <Parameter Name="endpoints" Type="System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt;" />
        <Parameter Name="bindingParameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="serviceDescription">
          <span data-ttu-id="c2ce0-122">A descrição do serviço.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ce0-122">The service description of the service.</span>
          </span>
        </param>
        <param name="serviceHostBase">
          <span data-ttu-id="c2ce0-123">O host do serviço.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ce0-123">The host of the service.</span>
          </span>
        </param>
        <param name="endpoints">
          <span data-ttu-id="c2ce0-124">Os pontos de extremidade de serviço.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ce0-124">The service endpoints.</span>
          </span>
        </param>
        <param name="bindingParameters">
          <span data-ttu-id="c2ce0-125">Objetos personalizados aos quais os elementos de associação têm acesso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ce0-125">Custom objects to which binding elements have access.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c2ce0-126">Fornece a capacidade de passar dados personalizados para elementos de associação para dar suporte à implementação do contrato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ce0-126">Provides the ability to pass custom data to binding elements to support the contract implementation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2ce0-127">Use o <xref:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters%2A> objetos para adicionar dados personalizados para o `parameters` coleção de elementos de associação podem usar para adquirir informações adicionais para habilitar o suporte para o contrato.</span><span class="sxs-lookup"><span data-stu-id="c2ce0-127">Use the <xref:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters%2A> method to add custom data objects to the `parameters` collection that binding elements can use to acquire extra information to enable them to support the contract.</span></span>  
  
 <span data-ttu-id="c2ce0-128">Esse método é chamado uma vez para cada URI de escuta.</span><span class="sxs-lookup"><span data-stu-id="c2ce0-128">This method is called once for each listen URI.</span></span> <span data-ttu-id="c2ce0-129">Por exemplo, se um serviço tem quatro pontos de extremidade e duas delas têm o mesmo URI de escuta, em seguida, esse método é chamado de três vezes.</span><span class="sxs-lookup"><span data-stu-id="c2ce0-129">For example, if a service has four endpoints, and two of them have the same listen URI, then this method gets called three times.</span></span> <span data-ttu-id="c2ce0-130">A razão é que o `bindingParameters` cada pilha de canais de destino e não houver uma pilha de canais para cada URI de escuta.</span><span class="sxs-lookup"><span data-stu-id="c2ce0-130">The reason is that the `bindingParameters` target each channel stack and there is one channel stack for each listen URI.</span></span> <span data-ttu-id="c2ce0-131">Como cada chamada recebe esses pontos de extremidade em que escutam URI, dois chama cada get um único <xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=nameWithType>, e uma chamada obtém uma coleção de dois <xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=nameWithType> objetos.</span><span class="sxs-lookup"><span data-stu-id="c2ce0-131">Because each call receives those endpoints at that listen URI, two calls each get a single <xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=nameWithType>, and one call gets a collection of two <xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=nameWithType> objects.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c2ce0-132">Todos os <xref:System.ServiceModel.Description.IServiceBehavior> métodos passam <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType> e <xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType> objetos como parâmetros.</span><span class="sxs-lookup"><span data-stu-id="c2ce0-132">All of the <xref:System.ServiceModel.Description.IServiceBehavior> methods pass <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType> and <xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType> objects as a parameters.</span></span> <span data-ttu-id="c2ce0-133">O <xref:System.ServiceModel.Description.ServiceDescription> parâmetro para exame e a inserção de personalizações apenas; se você modificar esses objetos o comportamento de execução é indefinido.</span><span class="sxs-lookup"><span data-stu-id="c2ce0-133">The <xref:System.ServiceModel.Description.ServiceDescription> parameter is for examination and insertion of customizations only; if you otherwise modify these objects the execution behavior is undefined.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="public void ApplyDispatchBehavior (System.ServiceModel.Description.ServiceDescription serviceDescription, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyDispatchBehavior(class System.ServiceModel.Description.ServiceDescription serviceDescription, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyDispatchBehavior(System::ServiceModel::Description::ServiceDescription ^ serviceDescription, System::ServiceModel::ServiceHostBase ^ serviceHostBase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceDescription" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="serviceDescription">
          <span data-ttu-id="c2ce0-134">A descrição do serviço.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ce0-134">The service description.</span>
          </span>
        </param>
        <param name="serviceHostBase">
          <span data-ttu-id="c2ce0-135">O host que está sendo criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ce0-135">The host that is currently being built.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c2ce0-136">Fornece a capacidade de alterar valores de propriedade de tempo de execução ou inserir objetos de extensão personalizados, como manipuladores de erro, interceptores de mensagens ou parâmetros, extensões de segurança e outros objetos de extensão personalizados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ce0-136">Provides the ability to change run-time property values or insert custom extension objects such as error handlers, message or parameter interceptors, security extensions, and other custom extension objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2ce0-137">Implementar o <xref:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior%2A> método inspecionar ou modificar o <xref:System.ServiceModel.ServiceHostBase> objeto que está sendo construído para oferecer suporte a alguns cenário de execução personalizado.</span><span class="sxs-lookup"><span data-stu-id="c2ce0-137">Implement the <xref:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior%2A> method to inspect or modify the <xref:System.ServiceModel.ServiceHostBase> object that is being constructed in order to support some custom execution scenario.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c2ce0-138">Todos os <xref:System.ServiceModel.Description.IServiceBehavior> métodos passam <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType> e <xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType> objetos como parâmetros.</span><span class="sxs-lookup"><span data-stu-id="c2ce0-138">All of the <xref:System.ServiceModel.Description.IServiceBehavior> methods pass <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType> and <xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType> objects as a parameters.</span></span> <span data-ttu-id="c2ce0-139">O <xref:System.ServiceModel.Description.ServiceDescription> parâmetro para exame e a inserção de personalizações apenas; se você modificar esses objetos o comportamento de execução é indefinido.</span><span class="sxs-lookup"><span data-stu-id="c2ce0-139">The <xref:System.ServiceModel.Description.ServiceDescription> parameter is for examination and insertion of customizations only; if you otherwise modify these objects the execution behavior is undefined.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2ce0-140">O exemplo de código a seguir mostra o uso de um comportamento de serviço especificado em um arquivo de configuração para inserir um manipulador de erro personalizada em um aplicativo de serviço.</span><span class="sxs-lookup"><span data-stu-id="c2ce0-140">The following code example shows the use of a service behavior specified in a configuration file to insert a custom error handler in a service application.</span></span> <span data-ttu-id="c2ce0-141">Neste exemplo, o manipulador de erro captura todas as exceções e converte-os em um personalizado `GreetingFault` Falha SOAP que é retornada ao cliente.</span><span class="sxs-lookup"><span data-stu-id="c2ce0-141">In this example, the error handler catches all exceptions and converts them into a custom `GreetingFault` SOAP fault that is then returned to the client.</span></span>  
  
 <span data-ttu-id="c2ce0-142">O seguinte <xref:System.ServiceModel.Description.IServiceBehavior> implementação não adiciona nenhum objeto de parâmetro de associação, adiciona personalizado <xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType> objeto para cada <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType> propriedade e valida que cada operação do serviço ao qual o comportamento de serviço é aplicado e tem um <xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType>do tipo `GreetingFault`.</span><span class="sxs-lookup"><span data-stu-id="c2ce0-142">The following <xref:System.ServiceModel.Description.IServiceBehavior> implementation adds no binding parameter objects, adds the custom <xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType> object to each <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType> property, and validates that each operation of the service to which the service behavior is applied and has a <xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType> of type `GreetingFault`.</span></span>  
  
 [!code-csharp[IErrorHandler#7](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#7)]
 [!code-vb[IErrorHandler#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#7)]  
  
 <span data-ttu-id="c2ce0-143">Neste exemplo, a classe de comportamento também implementa <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType>, que permite que o comportamento de serviço a ser inserido usando-o em um arquivo de configuração do aplicativo, como o exemplo de código a seguir demonstra.</span><span class="sxs-lookup"><span data-stu-id="c2ce0-143">In this example, the behavior class also implements <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType>, which enables the service behavior to be inserted by using it in an application configuration file, as the following code example demonstrates.</span></span>  
  
 [!code-xml[IErrorHandler#4](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/hostapplication.exe.config#4)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public void Validate (System.ServiceModel.Description.ServiceDescription serviceDescription, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate(class System.ServiceModel.Description.ServiceDescription serviceDescription, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Validate(System::ServiceModel::Description::ServiceDescription ^ serviceDescription, System::ServiceModel::ServiceHostBase ^ serviceHostBase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceDescription" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="serviceDescription">
          <span data-ttu-id="c2ce0-144">A descrição do serviço.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ce0-144">The service description.</span>
          </span>
        </param>
        <param name="serviceHostBase">
          <span data-ttu-id="c2ce0-145">O host de serviço que está sendo construído atualmente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ce0-145">The service host that is currently being constructed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c2ce0-146">Fornece a capacidade de inspecionar o host de serviço e a descrição do serviço para confirmar se o serviço pode ser executado com êxito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c2ce0-146">Provides the ability to inspect the service host and the service description to confirm that the service can run successfully.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2ce0-147">Use o <xref:System.ServiceModel.Description.IServiceBehavior.Validate%2A> método para confirmar se o serviço atual pode executar corretamente de acordo com a sua situação.</span><span class="sxs-lookup"><span data-stu-id="c2ce0-147">Use the <xref:System.ServiceModel.Description.IServiceBehavior.Validate%2A> method to confirm whether the current service can execute properly according to your scenario.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c2ce0-148">Todos os <xref:System.ServiceModel.Description.IServiceBehavior> métodos passam <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType> e <xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType> objetos como parâmetros.</span><span class="sxs-lookup"><span data-stu-id="c2ce0-148">All of the <xref:System.ServiceModel.Description.IServiceBehavior> methods pass <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType> and <xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType> objects as a parameters.</span></span> <span data-ttu-id="c2ce0-149">O <xref:System.ServiceModel.Description.ServiceDescription> parâmetro para exame e a inserção de personalizações apenas; se você modificar esses objetos o comportamento de execução é indefinido.</span><span class="sxs-lookup"><span data-stu-id="c2ce0-149">The <xref:System.ServiceModel.Description.ServiceDescription> parameter is for examination and insertion of customizations only; if you otherwise modify these objects the execution behavior is undefined.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2ce0-150">O exemplo de código a seguir mostra o uso de um comportamento de serviço especificado em um arquivo de configuração para inserir um manipulador de erro personalizada em um aplicativo de serviço.</span><span class="sxs-lookup"><span data-stu-id="c2ce0-150">The following code example shows the use of a service behavior specified in a configuration file to insert a custom error handler in a service application.</span></span> <span data-ttu-id="c2ce0-151">Neste exemplo, o manipulador de erro captura todas as exceções e converte-os em um personalizado `GreetingFault` Falha SOAP que é retornada ao cliente.</span><span class="sxs-lookup"><span data-stu-id="c2ce0-151">In this example, the error handler catches all exceptions and converts them into a custom `GreetingFault` SOAP fault that is then returned to the client.</span></span>  
  
 <span data-ttu-id="c2ce0-152">O seguinte <xref:System.ServiceModel.Description.IServiceBehavior> implementação não adiciona nenhum objeto de parâmetro de associação, adiciona personalizado <xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType> objeto para cada <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType> propriedade e valida que cada operação do serviço ao qual o comportamento de serviço é aplicado e tem um <xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType>do tipo `GreetingFault`.</span><span class="sxs-lookup"><span data-stu-id="c2ce0-152">The following <xref:System.ServiceModel.Description.IServiceBehavior> implementation adds no binding parameter objects, adds the custom <xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType> object to each <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType> property, and validates that each operation of the service to which the service behavior is applied and has a <xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType> of type `GreetingFault`.</span></span>  
  
 [!code-csharp[IErrorHandler#7](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#7)]
 [!code-vb[IErrorHandler#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#7)]  
  
 <span data-ttu-id="c2ce0-153">Neste exemplo, a classe de comportamento também implementa <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType>, que permite que o comportamento de serviço a ser inserido usando-o em um arquivo de configuração do aplicativo, como o exemplo de código a seguir demonstra.</span><span class="sxs-lookup"><span data-stu-id="c2ce0-153">In this example, the behavior class also implements <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType>, which enables the service behavior to be inserted by using it in an application configuration file, as the following code example demonstrates.</span></span>  
  
 [!code-xml[IErrorHandler#4](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/hostapplication.exe.config#4)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>