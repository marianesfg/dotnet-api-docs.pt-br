<Type Name="ArrangedElementCollection" FullName="System.Windows.Forms.Layout.ArrangedElementCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="56b857b69f24b281f188b57eb23382cc5229764b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ArrangedElementCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ArrangedElementCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Layout.ArrangedElementCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ArrangedElementCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class ArrangedElementCollection : System::Collections::IList" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="c7793-101">Representa uma coleção de objetos.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c7793-101">Represents a collection of objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7793-102">O <xref:System.Windows.Forms.Layout.ArrangedElementCollection> classe representa uma coleção de objetos organizados em uma superfície de design ou dentro de um pai <xref:System.Windows.Forms.ContainerControl?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c7793-102">The <xref:System.Windows.Forms.Layout.ArrangedElementCollection> class represents a collection of objects arranged on a design surface or inside a parent <xref:System.Windows.Forms.ContainerControl?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="c7793-103">Não há nenhum construtor público definido em <xref:System.Windows.Forms.Layout.ArrangedElementCollection> porque ele é projetado para ser usado apenas internamente dentro de [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span><span class="sxs-lookup"><span data-stu-id="c7793-103">There are no publicly defined constructors in <xref:System.Windows.Forms.Layout.ArrangedElementCollection> because it is designed to be used only internally within the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="c7793-104">No entanto, as classes derivadas de <xref:System.Windows.Forms.Layout.ArrangedElementCollection>, como <xref:System.Windows.Forms.Control.ControlCollection?displayProperty=nameWithType>, estão disponíveis para o desenvolvedor.</span><span class="sxs-lookup"><span data-stu-id="c7793-104">However, classes derived from <xref:System.Windows.Forms.Layout.ArrangedElementCollection>, such as <xref:System.Windows.Forms.Control.ControlCollection?displayProperty=nameWithType>, are available to the developer.</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="c7793-105">Público <see langword="static" /> (<see langword="Shared" /> no Visual Basic) membros desse tipo são thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c7793-105">Public <see langword="static" /> (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="c7793-106">Membros de instância não há garantia de ser thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c7793-106">Instance members are not guaranteed to be thread safe.</span>
      </span>
      <span data-ttu-id="c7793-107">Um <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> pode dar suporte a vários leitores simultaneamente, desde que a coleção não é modificada.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c7793-107">An <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> can support multiple readers concurrently, as long as the collection is not modified.</span>
      </span>
      <span data-ttu-id="c7793-108">O <see cref="M:System.Windows.Forms.Layout.ArrangedElementCollection.GetEnumerator" /> método retorna um <see cref="T:System.Collections.IEnumerator" /> que pode ser usado para acessar elementos.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c7793-108">The <see cref="M:System.Windows.Forms.Layout.ArrangedElementCollection.GetEnumerator" /> method returns an <see cref="T:System.Collections.IEnumerator" /> that can be used to access elements.</span>
      </span>
      <span data-ttu-id="c7793-109">A enumeração por meio de uma coleção não é um procedimento thread-safe intrínseco.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c7793-109">Enumerating through a collection is intrinsically not a thread-safe procedure.</span>
      </span>
      <span data-ttu-id="c7793-110">Mesmo quando uma coleção é sincronizada, outros threads ainda podem modificar a coleção, o que faz com que o enumerador lançar uma exceção.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c7793-110">Even when a collection is synchronized, other threads could still modify the collection, which causes the enumerator to throw an exception.</span>
      </span>
      <span data-ttu-id="c7793-111">Para garantir thread-safe durante a enumeração, é possível bloquear a coleção durante toda a enumeração ou verificar as exceções resultantes das alterações feitas por outros threads.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c7793-111">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Collections.ArrayList" />
    <altmember cref="T:System.Windows.Forms.Control.ControlCollection" />
    <altmember cref="M:System.Windows.Forms.Layout.ArrangedElementCollection.GetEnumerator" />
  </Docs>
  <Members>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="c7793-112">O <see cref="T:System.Array" /> unidimensional que é o destino dos elementos copiados da coleção atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7793-112">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the current collection.</span>
          </span>
          <span data-ttu-id="c7793-113">A matriz deve ter indexação com base em zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7793-113">The array must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="c7793-114">O índice baseado em zero na <c>array</c> na qual a cópia começa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7793-114">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c7793-115">Copia todo o conteúdo dessa coleção para um <see cref="T:System.Array" /> unidimensional compatível, começando pelo índice especificado da matriz de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7793-115">Copies the entire contents of this collection to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7793-116">O tipo da matriz especificada deve ser compatível com a coleção de origem.</span><span class="sxs-lookup"><span data-stu-id="c7793-116">The type of the specified array must be compatible with the source collection.</span></span>  
  
 <span data-ttu-id="c7793-117">Esse método usa o <xref:System.Array.Copy%2A?displayProperty=nameWithType> método para copiar os elementos.</span><span class="sxs-lookup"><span data-stu-id="c7793-117">This method uses the <xref:System.Array.Copy%2A?displayProperty=nameWithType> method to copy the elements.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c7793-118">
            <paramref name="array" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7793-118">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c7793-119">
            <paramref name="index" /> é menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7793-119">
              <paramref name="index" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c7793-120">
            <paramref name="array" /> é multidimensional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7793-120">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="c7793-121">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7793-121">-or-</span>
          </span>
          <span data-ttu-id="c7793-122">O número de elementos na coleção de origem é maior do que o espaço disponível de <paramref name="index" /> até o final do <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7793-122">The number of elements in the source collection is greater than the available space from <paramref name="index" /> to the end of <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="c7793-123">O tipo do elemento de origem não pode ser convertido automaticamente para o tipo de <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7793-123">The type of the source element cannot be cast automatically to the type of <paramref name="array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.Layout.ArrangedElementCollection.GetEnumerator" />
        <altmember cref="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Contains(System.Object)" />
        <altmember cref="P:System.Windows.Forms.Layout.ArrangedElementCollection.Count" />
        <altmember cref="Overload:System.Collections.ArrayList.CopyTo" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Layout.ArrangedElementCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c7793-124">Obtém o número de elementos na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7793-124">Gets the number of elements in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c7793-125">O número de elementos contidos no momento na coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7793-125">The number of elements currently contained in the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7793-126">Quando necessário, a capacidade da coleção aumentará dinamicamente para aceitar mais elementos.</span><span class="sxs-lookup"><span data-stu-id="c7793-126">When required, the capacity of the collection will dynamically increase to accept more elements.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Contains(System.Object)" />
        <altmember cref="P:System.Collections.ArrayList.Count" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="c7793-127">O <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> a ser comparado com o <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7793-127">The <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> to compare with the current <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c7793-128">Determina se duas instâncias <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> são iguais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7793-128">Determines whether two <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> instances are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c7793-129">
            <see langword="true" /> se o <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> especificado for igual ao <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> atual; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7793-129">
              <see langword="true" /> if the specified <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> is equal to the current <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c7793-130">Retorna um enumerador para toda a coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7793-130">Returns an enumerator for the entire collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c7793-131">Um <see cref="T:System.Collections.IEnumerator" /> para toda a coleção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7793-131">An <see cref="T:System.Collections.IEnumerator" /> for the entire collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7793-132">Normalmente o enumerador não tem acesso exclusivo à coleção; Portanto, enumerando através de uma coleção intrinsecamente não é um procedimento de thread-safe.</span><span class="sxs-lookup"><span data-stu-id="c7793-132">Typically the enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="c7793-133">Mesmo quando uma coleção é sincronizada, outros threads ainda podem modificar a coleção, o que faz com que o enumerador lançar uma exceção.</span><span class="sxs-lookup"><span data-stu-id="c7793-133">Even when a collection is synchronized, other threads could still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="c7793-134">Para garantir a segurança de thread durante a enumeração, você pode seguir uma das seguintes estratégias:</span><span class="sxs-lookup"><span data-stu-id="c7793-134">To guarantee thread safety during enumeration, you can follow one of the following strategies:</span></span>  
  
-   <span data-ttu-id="c7793-135">Bloquear a coleção durante a enumeração inteira usando um <xref:System.Threading.Monitor>.</span><span class="sxs-lookup"><span data-stu-id="c7793-135">Lock the collection during the entire enumeration using a <xref:System.Threading.Monitor>.</span></span>  
  
-   <span data-ttu-id="c7793-136">Capturar e manipular as exceções que resultam de alterações feitas por outros threads.</span><span class="sxs-lookup"><span data-stu-id="c7793-136">Catch and handle the exceptions that result from changes made by other threads.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Layout.ArrangedElementCollection.CopyTo(System.Array,System.Int32)" />
        <altmember cref="T:System.Collections.IEnumerator" />
        <altmember cref="Overload:System.Collections.ArrayList.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c7793-137">Retorna o código hash para essa instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7793-137">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c7793-138">Um código hash do <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7793-138">A hash code for the current <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Layout.ArrangedElementCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c7793-139">Obtém um valor que indica se a coleção é somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7793-139">Gets a value indicating whether the collection is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c7793-140">
            <see langword="true" /> se a coleção for somente leitura; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7793-140">
              <see langword="true" /> if the collection is read-only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c7793-141">O padrão é <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7793-141">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7793-142">Uma coleção somente leitura não permite a adição, remoção ou modificação de elementos após a criação da coleção.</span><span class="sxs-lookup"><span data-stu-id="c7793-142">A read-only collection does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="c7793-143">Uma coleção somente leitura é simplesmente uma coleção com um wrapper que impede a modificação da coleção.</span><span class="sxs-lookup"><span data-stu-id="c7793-143">A read-only collection is simply a collection with a wrapper that prevents modifying the collection.</span></span> <span data-ttu-id="c7793-144">Se forem feitas alterações à coleção subjacente, a coleção somente leitura reflete as alterações.</span><span class="sxs-lookup"><span data-stu-id="c7793-144">If changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Add(System.Object)" />
        <altmember cref="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Remove(System.Object)" />
        <altmember cref="P:System.Collections.ArrayList.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c7793-145">Para obter uma descrição desse membro, consulte o propriedade <see cref="P:System.Collections.ICollection.IsSynchronized" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7793-145">For a description of this member, see the <see cref="P:System.Collections.ICollection.IsSynchronized" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c7793-146">
            <see langword="true" /> caso o acesso ao <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> seja sincronizado (thread-safe); do contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7793-146">
              <see langword="true" /> if access to the <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7793-147">Esse método é uma implementação de membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="c7793-147">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="c7793-148">Ele só pode ser usado quando a instância de <xref:System.Windows.Forms.Layout.ArrangedElementCollection> é convertida em uma interface de <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="c7793-148">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c7793-149">Para obter uma descrição desse membro, consulte o propriedade <see cref="P:System.Collections.ICollection.SyncRoot" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7793-149">For a description of this member, see the <see cref="P:System.Collections.ICollection.SyncRoot" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c7793-150">Um objeto que pode ser usado para sincronizar o acesso ao <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7793-150">An object that can be used to synchronize access to the <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7793-151">Esse método é uma implementação de membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="c7793-151">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="c7793-152">Ele só pode ser usado quando a instância de <xref:System.Windows.Forms.Layout.ArrangedElementCollection> é convertida em uma interface de <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="c7793-152">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c7793-153">O <see cref="T:System.Object" /> para adicionar ao <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7793-153">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c7793-154">Para obter uma descrição desse membro, consulte o método <see cref="M:System.Collections.IList.Add(System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7793-154">For a description of this member, see the <see cref="M:System.Collections.IList.Add(System.Object)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c7793-155">A posição na qual o novo elemento foi inserido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7793-155">The position into which the new element was inserted.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7793-156">Esse método é uma implementação de membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="c7793-156">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="c7793-157">Ele só pode ser usado quando a instância de <xref:System.Windows.Forms.Layout.ArrangedElementCollection> é convertida em uma interface de <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="c7793-157">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c7793-158">Para obter uma descrição desse membro, consulte o método <see cref="M:System.Collections.IList.Clear" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7793-158">For a description of this member, see the <see cref="M:System.Collections.IList.Clear" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7793-159">Esse método é uma implementação de membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="c7793-159">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="c7793-160">Ele só pode ser usado quando a instância de <xref:System.Windows.Forms.Layout.ArrangedElementCollection> é convertida em uma interface de <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="c7793-160">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c7793-161">O <see cref="T:System.Object" /> a ser localizado no <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7793-161">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c7793-162">Para obter uma descrição desse membro, consulte o método <see cref="M:System.Collections.IList.Contains(System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7793-162">For a description of this member, see the <see cref="M:System.Collections.IList.Contains(System.Object)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c7793-163">
            <see langword="true" /> se o <see cref="T:System.Object" /> for encontrado no <see cref="T:System.Collections.IList" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7793-163">
              <see langword="true" /> if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Collections.IList" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7793-164">Esse método é uma implementação de membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="c7793-164">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="c7793-165">Ele só pode ser usado quando a instância de <xref:System.Windows.Forms.Layout.ArrangedElementCollection> é convertida em uma interface de <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="c7793-165">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c7793-166">O <see cref="T:System.Object" /> a ser localizado no <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7793-166">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c7793-167">Para obter uma descrição desse membro, consulte o método <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7793-167">For a description of this member, see the <see cref="M:System.Collections.IList.IndexOf(System.Object)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c7793-168">O índice de <paramref name="value" /> se encontrado na lista; caso contrário, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7793-168">The index of <paramref name="value" /> if found in the list; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7793-169">Esse método é uma implementação de membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="c7793-169">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="c7793-170">Ele só pode ser usado quando a instância de <xref:System.Windows.Forms.Layout.ArrangedElementCollection> é convertida em uma interface de <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="c7793-170">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="c7793-171">O índice baseado em zero no qual o <c>valor</c> deve ser inserido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7793-171">The zero-based index at which <c>value</c> should be inserted.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c7793-172">O <see cref="T:System.Object" /> a ser inserido no <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7793-172">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c7793-173">Para obter uma descrição desse membro, consulte o método <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7793-173">For a description of this member, see the <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7793-174">Esse método é uma implementação de membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="c7793-174">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="c7793-175">Ele só pode ser usado quando a instância de <xref:System.Windows.Forms.Layout.ArrangedElementCollection> é convertida em uma interface de <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="c7793-175">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c7793-176">Para obter uma descrição desse membro, consulte o propriedade <see cref="P:System.Collections.IList.IsFixedSize" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7793-176">For a description of this member, see the <see cref="P:System.Collections.IList.IsFixedSize" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c7793-177">
            <see langword="true" /> se o <see cref="T:System.Collections.IList" /> tiver um valor fixo; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7793-177">
              <see langword="true" /> if the <see cref="T:System.Collections.IList" /> has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7793-178">Esse método é uma implementação de membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="c7793-178">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="c7793-179">Ele só pode ser usado quando a instância de <xref:System.Windows.Forms.Layout.ArrangedElementCollection> é convertida em uma interface de <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="c7793-179">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="c7793-180">O índice baseado em zero do elemento a ser obtido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7793-180">The zero-based index of the element to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c7793-181">Para obter uma descrição desse membro, consulte o propriedade <see cref="P:System.Collections.IList.Item(System.Int32)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7793-181">For a description of this member, see the <see cref="P:System.Collections.IList.Item(System.Int32)" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c7793-182">O elemento no índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7793-182">The element at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7793-183">Esse método é uma implementação de membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="c7793-183">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="c7793-184">Ele só pode ser usado quando a instância de <xref:System.Windows.Forms.Layout.ArrangedElementCollection> é convertida em uma interface de <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="c7793-184">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c7793-185">O <see cref="T:System.Object" /> a ser removido de <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7793-185">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c7793-186">Para obter uma descrição desse membro, consulte o método <see cref="M:System.Collections.IList.Remove(System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7793-186">For a description of this member, see the <see cref="M:System.Collections.IList.Remove(System.Object)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7793-187">Esse método é uma implementação de membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="c7793-187">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="c7793-188">Ele só pode ser usado quando a instância de <xref:System.Windows.Forms.Layout.ArrangedElementCollection> é convertida em uma interface de <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="c7793-188">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.RemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="c7793-189">O índice com base em zero do item a ser removido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7793-189">The zero-based index of the item to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c7793-190">Para obter uma descrição desse membro, consulte o método <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7793-190">For a description of this member, see the <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7793-191">Esse método é uma implementação de membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="c7793-191">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="c7793-192">Ele só pode ser usado quando a instância de <xref:System.Windows.Forms.Layout.ArrangedElementCollection> é convertida em uma interface de <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="c7793-192">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>