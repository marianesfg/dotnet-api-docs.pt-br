<Type Name="IPlaybackControl" FullName="System.EnterpriseServices.IPlaybackControl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9110597651512178c67edfe7320178c083861fad" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55344907" /></Metadata><TypeSignature Language="C#" Value="public interface IPlaybackControl" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPlaybackControl" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.IPlaybackControl" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPlaybackControl" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPlaybackControl" />
  <TypeSignature Language="F#" Value="type IPlaybackControl = interface" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("51372AFD-CAE7-11CF-BE81-00AA00A2FA25")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Funções em Componentes na Fila no tratamento anormal de erros de reprodução do lado do servidor e de falhas do lado do cliente do mecanismo de entrega do Enfileiramento de Mensagens.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A classe de exceção definida para o componente no catálogo COM+ implementa ambos <xref:System.EnterpriseServices.IPlaybackControl> e a interface para a classe original. As implementações de método da interface de classe original são usadas para executar a tratamento de exceção para os métodos com falha na própria classe. Serão chamados depois <xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A> ou <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A> para processar exceções para o método chamado originalmente.  
  
 O Player de componentes na fila chama os métodos de <xref:System.EnterpriseServices.IPlaybackControl> para informar o objeto de manipulador de exceção que uma mensagem está prestes a ser colocado na fila repousar ou mensagens mortas final. O Player de componentes na fila, em seguida, chama o mesmo método no objeto de manipulador de exceção que falhou na chamada do método original. O objeto de manipulador de exceção pode implementar uma alternativa, por exemplo, coletando informações de diagnóstico do problema ou geração de um objeto ou uma mensagem que informa o cliente do problema. Se o aplicativo não implementar <xref:System.EnterpriseServices.IPlaybackControl>, a mensagem suspeita é colocada na fila repousar ou mensagens mortas final quando o Player de componentes na fila esgotar todas as novas tentativas.  
  
 Uma mensagem suspeita é uma mensagem que não pode ser processada por algum motivo, talvez devido a um problema com o servidor ou sistema de enfileiramento de mensagens. A transação é revertida e a mensagem suspeita vai para o topo da fila. Quando a mensagem é removida da fila novamente, a mesma condição ocorre. Essa mensagem pode continuar indefinidamente até que algo seja feito para corrigir o problema de loop. O serviço de componentes na fila manipula a mensagem suspeita usando uma série de novas tentativas. Após várias tentativas sem êxito, a mensagem é movida para uma fila de repouso final. Mensagens suspeitas permanecem na fila de repouso até movido manualmente usando a ferramenta movimentador de mensagens de componentes na fila.  
  
 A situação de mensagens suspeitas pode também ser resolvida de forma programática, usando o <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A> método, que informa o autor do componente do lado do servidor que todas as tentativas de reproduzir a ativação adiada falharam.  
  
 Se você descobrir uma mensagem suspeita, você poderá resolver a causa do problema rapidamente. Por exemplo, se o servidor ficar offline por algum motivo, você pode colocar o servidor online novamente. Se você não conseguir resolver o problema rapidamente, você pode gerar outra transação que notifica o solicitante que a transação não ocorre automaticamente. O solicitante pode fazer uma transação de compensação que inverte o efeito de uma transação que já foi confirmada.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="FinalClientRetry">
      <MemberSignature Language="C#" Value="public void FinalClientRetry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FinalClientRetry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.IPlaybackControl.FinalClientRetry" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinalClientRetry ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinalClientRetry();" />
      <MemberSignature Language="F#" Value="abstract member FinalClientRetry : unit -&gt; unit" Usage="iPlaybackControl.FinalClientRetry " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Informa ao componente de tratamento de exceção do lado do cliente que todas as tentativas feitas pelo Enfileiramento de Mensagens de entregar a mensagem para o servidor foram rejeitadas e a mensagem ficou na fila de mensagens mortas do Xact do lado do cliente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Enquanto as mensagens chegam na fila de mensagens mortas Xact, COM+ tentar invocar um manipulador de exceção do lado do cliente relacionado à classe de servidor para fornecer essa notificação. Isso é feito pelo primeiro chamar <xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A>, em seguida, chamando a versão de manipulação de exceção do método com falha no objeto de manipulador de exceção. Esse método de exceção, em seguida, pode levar a uma ação de exceção, como registrar a falha, enviando uma mensagem de email para o administrador ou executar uma ação de compensação do lado do cliente (inverter o efeito de uma transação anterior). Se o método de exceção não for bem-sucedida, a mensagem permanecerá na fila de mensagens mortas Xact.  
  
 A fila de mensagens mortas Xact pode ser exibida no Gerenciador do Microsoft Message Queue (MSMQ).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FinalServerRetry">
      <MemberSignature Language="C#" Value="public void FinalServerRetry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FinalServerRetry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.IPlaybackControl.FinalServerRetry" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinalServerRetry ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinalServerRetry();" />
      <MemberSignature Language="F#" Value="abstract member FinalServerRetry : unit -&gt; unit" Usage="iPlaybackControl.FinalServerRetry " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Informa a implementação de classe de exceção do lado do servidor que todas as tentativas de reproduzir a ativação adiada para o servidor falharam e a mensagem está prestes a ser movida para a sua fila de repouso final.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Enquanto as mensagens chegam na fila de mensagens mortas Xact, COM+ tentar invocar um manipulador de exceção do lado do servidor relacionado à classe de servidor para fornecer essa notificação. Isso é feito pelo primeiro chamar <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A>, em seguida, chamar a versão do método com falha no objeto de manipulador de exceção de manipulação de exceção. Esse método de exceção, em seguida, pode levar a uma ação de exceção, como registrar a falha, enviando uma mensagem de email para o administrador ou executar uma ação de compensação do lado do cliente (inverter o efeito de uma transação anterior). O objeto de servidor deve se esforçar para concluir esta transação com êxito. Caso contrário, a intervenção manual é necessária para processar novamente a mensagem. Se o método de exceção não for bem-sucedida, a mensagem é movida para a fila de repouso final.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>