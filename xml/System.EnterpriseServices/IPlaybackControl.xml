<Type Name="IPlaybackControl" FullName="System.EnterpriseServices.IPlaybackControl">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="54fcf7590327e9d2356fc883bfae633d190f6a78" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IPlaybackControl" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPlaybackControl" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.IPlaybackControl" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPlaybackControl" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPlaybackControl" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("51372AFD-CAE7-11CF-BE81-00AA00A2FA25")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="9efe3-101">Functions in Queued Components in the abnormal handling of server-side playback errors and client-side failures of the Message Queuing delivery mechanism.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9efe3-101">Functions in Queued Components in the abnormal handling of server-side playback errors and client-side failures of the Message Queuing delivery mechanism.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9efe3-102">A classe de exceção definida para o componente no catálogo COM+ implementa ambos <xref:System.EnterpriseServices.IPlaybackControl> e a interface para a classe original.</span><span class="sxs-lookup"><span data-stu-id="9efe3-102">The exception class defined for the component in the COM+ catalog implements both <xref:System.EnterpriseServices.IPlaybackControl> and the interface for the original class.</span></span> <span data-ttu-id="9efe3-103">As implementações de método da interface de classe original são usadas para executar o manipulação de exceções para os métodos com falha na própria classe.</span><span class="sxs-lookup"><span data-stu-id="9efe3-103">The method implementations of the original class interface are used to perform the exception handling for the failed methods in the class itself.</span></span> <span data-ttu-id="9efe3-104">Serão chamados após <xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A> ou <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A> para processar exceções para o método chamado originalmente.</span><span class="sxs-lookup"><span data-stu-id="9efe3-104">They will be called after <xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A> or <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A> to process exceptions for the method originally called.</span></span>  
  
 <span data-ttu-id="9efe3-105">O Player de componentes na fila chama os métodos de <xref:System.EnterpriseServices.IPlaybackControl> para informar o objeto do manipulador de exceção que uma mensagem está prestes a ser colocado na fila final repousar ou mensagens mortas.</span><span class="sxs-lookup"><span data-stu-id="9efe3-105">The Queued Components Player calls the methods of <xref:System.EnterpriseServices.IPlaybackControl> to inform the exception-handler object that a message is about to be placed on the final resting or dead letter queue.</span></span> <span data-ttu-id="9efe3-106">O Player de componentes na fila, em seguida, chama o mesmo método no objeto de manipulador de exceção que falhou na chamada do método original.</span><span class="sxs-lookup"><span data-stu-id="9efe3-106">The Queued Components Player then calls the same method in the exception-handler object that had failed in the original method call.</span></span> <span data-ttu-id="9efe3-107">O objeto do manipulador de exceção pode implementar uma alternativa, por exemplo, coletando informações de diagnóstico do problema ou gerando um objeto ou uma mensagem que informa o cliente do problema.</span><span class="sxs-lookup"><span data-stu-id="9efe3-107">The exception-handler object can implement an alternative, for example, by gathering problem diagnosis information or generating an object or message that informs the client of the problem.</span></span> <span data-ttu-id="9efe3-108">Se o aplicativo não implementa <xref:System.EnterpriseServices.IPlaybackControl>, a mensagem suspeita é colocada na fila repousar ou mensagens mortas final quando o Player de componentes na fila esvazia todas as novas tentativas.</span><span class="sxs-lookup"><span data-stu-id="9efe3-108">If the application does not implement <xref:System.EnterpriseServices.IPlaybackControl>, the poison message is placed on the final resting or dead letter queue when the Queued Components Player exhausts all retries.</span></span>  
  
 <span data-ttu-id="9efe3-109">Uma mensagem suspeita é uma mensagem que não pode ser processada por algum motivo, talvez devido a um problema com o servidor ou o sistema de enfileiramento de mensagens.</span><span class="sxs-lookup"><span data-stu-id="9efe3-109">A poison message is a message that cannot be processed for some reason, perhaps because of a problem with the server or queuing system.</span></span> <span data-ttu-id="9efe3-110">A transação é revertida e a mensagem suspeita vai para o início da fila.</span><span class="sxs-lookup"><span data-stu-id="9efe3-110">The transaction is rolled back, and the poison message goes to the top of the queue.</span></span> <span data-ttu-id="9efe3-111">Quando a mensagem é removida da fila novamente, ocorre a mesma condição.</span><span class="sxs-lookup"><span data-stu-id="9efe3-111">When the message is dequeued again, the same condition occurs.</span></span> <span data-ttu-id="9efe3-112">Essa mensagem pode continuar indefinidamente até que algo é feito para corrigir o problema.</span><span class="sxs-lookup"><span data-stu-id="9efe3-112">This message can continue looping indefinitely until something is done to correct the problem.</span></span> <span data-ttu-id="9efe3-113">O serviço de componentes na fila lida com a mensagem suspeita usando uma série de novas tentativas.</span><span class="sxs-lookup"><span data-stu-id="9efe3-113">The Queued Components service handles the poison message by using a series of retries.</span></span> <span data-ttu-id="9efe3-114">Após várias tentativas sem êxito, a mensagem é movida para uma fila de repouso final.</span><span class="sxs-lookup"><span data-stu-id="9efe3-114">After several unsuccessful retries, the message is moved to a final resting queue.</span></span> <span data-ttu-id="9efe3-115">Mensagens suspeitas permanecem na fila de repouso até movido manualmente usando a ferramenta de motor de mensagem de componentes na fila.</span><span class="sxs-lookup"><span data-stu-id="9efe3-115">Poison messages remain in the resting queue until manually moved by using the Queued Components Message Mover tool.</span></span>  
  
 <span data-ttu-id="9efe3-116">A situação de mensagem suspeita também pode ser resolvida programaticamente, usando o <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A> método, que informa o autor do componente do servidor que todas as tentativas para reproduzir a ativação adiada falharam.</span><span class="sxs-lookup"><span data-stu-id="9efe3-116">The poison message situation can also be resolved programmatically, using the <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A> method, which informs the server-side component author that all attempts to play back the deferred activation have failed.</span></span>  
  
 <span data-ttu-id="9efe3-117">Se você descobrir uma mensagem suspeita, você poderá resolver a causa do problema rapidamente.</span><span class="sxs-lookup"><span data-stu-id="9efe3-117">If you discover a poison message, you might be able to solve the underlying cause of the problem quickly.</span></span> <span data-ttu-id="9efe3-118">Por exemplo, se o servidor estiver offline por algum motivo, você pode colocar o servidor online novamente.</span><span class="sxs-lookup"><span data-stu-id="9efe3-118">For example, if the server was offline for some reason, you can bring the server back online.</span></span> <span data-ttu-id="9efe3-119">Se você não conseguir resolver o problema rapidamente, você pode gerar automaticamente a outra transação que notifica o solicitante que a transação não tivesse ocorrido.</span><span class="sxs-lookup"><span data-stu-id="9efe3-119">If you cannot solve the problem quickly, you can automatically generate another transaction that notifies the requestor that the transaction did not occur.</span></span> <span data-ttu-id="9efe3-120">O solicitante pode fazer em seguida, uma transação de compensação que reverte o efeito de uma transação que já foi confirmada.</span><span class="sxs-lookup"><span data-stu-id="9efe3-120">The requestor can then make a compensating transaction that reverses the effect of a transaction that has already committed.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="FinalClientRetry">
      <MemberSignature Language="C#" Value="public void FinalClientRetry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FinalClientRetry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.IPlaybackControl.FinalClientRetry" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinalClientRetry ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinalClientRetry();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9efe3-121">Informs the client-side exception-handling component that all Message Queuing attempts to deliver the message to the server were rejected, and the message ended up on the client-side Xact Dead Letter queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9efe3-121">Informs the client-side exception-handling component that all Message Queuing attempts to deliver the message to the server were rejected, and the message ended up on the client-side Xact Dead Letter queue.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9efe3-122">Enquanto as mensagens chegam na fila de mensagens mortas de Xact, COM+ tentar invocar um manipulador de exceção do lado do cliente relacionado à classe de servidor para fornecer essa notificação.</span><span class="sxs-lookup"><span data-stu-id="9efe3-122">As messages arrive in the Xact Dead Letter queue, COM+ attempts to invoke a client-side exception handler related to the server class to deliver this notification.</span></span> <span data-ttu-id="9efe3-123">Isso é feito chamando primeiro <xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A>, em seguida, chamar a versão de tratamento de exceção do método com falha no objeto do manipulador de exceção.</span><span class="sxs-lookup"><span data-stu-id="9efe3-123">It does so by first calling <xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A>, then calling the exception-handling version of the failed method in the exception-handler object.</span></span> <span data-ttu-id="9efe3-124">Esse método de exceção, em seguida, poderá executar uma ação de exceção, como registrar a falha, enviando uma mensagem de email para o administrador ou executar uma ação de compensação do lado do cliente (Revertendo o efeito de uma transação anterior).</span><span class="sxs-lookup"><span data-stu-id="9efe3-124">This exception method can then take an exception action, such as recording the failure, sending a mail message to the administrator, or taking client-side compensating action (reversing the effect of an earlier transaction).</span></span> <span data-ttu-id="9efe3-125">Se o método de exceção não for bem-sucedida, a mensagem permanecerá na fila de mensagens mortas de Xact.</span><span class="sxs-lookup"><span data-stu-id="9efe3-125">If the exception method is not successful, the message is left on the Xact Dead Letter queue.</span></span>  
  
 <span data-ttu-id="9efe3-126">Fila de mensagens mortas de Xact pode ser exibida no Gerenciador de fila de mensagens da Microsoft (MSMQ).</span><span class="sxs-lookup"><span data-stu-id="9efe3-126">The Xact Dead Letter queue can be viewed in the Microsoft Message Queue (MSMQ) Explorer.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FinalServerRetry">
      <MemberSignature Language="C#" Value="public void FinalServerRetry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FinalServerRetry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.IPlaybackControl.FinalServerRetry" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinalServerRetry ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinalServerRetry();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9efe3-127">Informs the server-side exception class implementation that all attempts to play back the deferred activation to the server have failed, and the message is about to be moved to its final resting queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9efe3-127">Informs the server-side exception class implementation that all attempts to play back the deferred activation to the server have failed, and the message is about to be moved to its final resting queue.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9efe3-128">Enquanto as mensagens chegam na fila de mensagens mortas de Xact, COM+ tentar invocar um manipulador de exceção do lado do servidor relacionado à classe de servidor para fornecer essa notificação.</span><span class="sxs-lookup"><span data-stu-id="9efe3-128">As messages arrive on the Xact Dead Letter queue, COM+ attempts to invoke a server-side exception handler related to the server class to deliver this notification.</span></span> <span data-ttu-id="9efe3-129">Isso é feito chamando primeiro <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A>, em seguida, chamar a versão do método com falha no objeto do manipulador de exceção de manipulação de exceção.</span><span class="sxs-lookup"><span data-stu-id="9efe3-129">It does so by first calling <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A>, then calling the exception handling version of the failed method in the exception handler object.</span></span> <span data-ttu-id="9efe3-130">Esse método de exceção, em seguida, poderá executar uma ação de exceção, como registrar a falha, enviando uma mensagem de email para o administrador ou executar uma ação de compensação do lado do cliente (Revertendo o efeito de uma transação anterior).</span><span class="sxs-lookup"><span data-stu-id="9efe3-130">This exception method can then take an exception action, such as recording the failure, sending a mail message to the administrator, or taking client-side compensating action (reversing the effect of an earlier transaction).</span></span> <span data-ttu-id="9efe3-131">O objeto de servidor deve fazer todos os esforços para concluir a transação com êxito.</span><span class="sxs-lookup"><span data-stu-id="9efe3-131">The server object should make every effort to complete this transaction successfully.</span></span> <span data-ttu-id="9efe3-132">Caso contrário, é necessária a intervenção manual para reprocessar a mensagem.</span><span class="sxs-lookup"><span data-stu-id="9efe3-132">Otherwise, manual intervention is required to reprocess the message.</span></span> <span data-ttu-id="9efe3-133">Se o método de exceção não for bem-sucedida, a mensagem é movida para a fila de repouso final.</span><span class="sxs-lookup"><span data-stu-id="9efe3-133">If the exception method is not successful, the message is moved to the final resting queue.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>