<Type Name="ServicedComponent" FullName="System.EnterpriseServices.ServicedComponent">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d7ed2d31e426020359bf888e9c66db4b575ea0bf" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48688116" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ServicedComponent : ContextBoundObject, IDisposable, System.EnterpriseServices.IRemoteDispatch, System.EnterpriseServices.IServicedComponentInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable ServicedComponent extends System.ContextBoundObject implements class System.EnterpriseServices.IRemoteDispatch, class System.EnterpriseServices.IServicedComponentInfo, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.ServicedComponent" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ServicedComponent&#xA;Inherits ContextBoundObject&#xA;Implements IDisposable, IRemoteDispatch, IServicedComponentInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServicedComponent abstract : ContextBoundObject, IDisposable, System::EnterpriseServices::IRemoteDispatch, System::EnterpriseServices::IServicedComponentInfo" />
  <TypeSignature Language="F#" Value="type ServicedComponent = class&#xA;    inherit ContextBoundObject&#xA;    interface IRemoteDispatch&#xA;    interface IDisposable&#xA;    interface IServicedComponentInfo" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ContextBoundObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.EnterpriseServices.IRemoteDispatch</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.EnterpriseServices.IServicedComponentInfo</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="521d5-101">Representa a classe base de todas as classes usando serviços COM+.</span>
      <span class="sxs-lookup">
        <span data-stu-id="521d5-101">Represents the base class of all classes using COM+ services.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="521d5-102">Sob certas condições, uma classe derivada de <xref:System.EnterpriseServices.ServicedComponent> que é executado em um aplicativo COM+ pode parar de responder.</span><span class="sxs-lookup"><span data-stu-id="521d5-102">Under certain conditions, a class that is derived from <xref:System.EnterpriseServices.ServicedComponent> that runs in a COM+ application may stop responding.</span></span> <span data-ttu-id="521d5-103">Esse problema é causado por um deadlock de atividade.</span><span class="sxs-lookup"><span data-stu-id="521d5-103">This problem is caused by an Activity deadlock.</span></span> <span data-ttu-id="521d5-104">As atividades podem acarretar deadlock em aplicativos com multithread devido a uma limpeza assíncrona de referências de componentes.</span><span class="sxs-lookup"><span data-stu-id="521d5-104">Activities can deadlock on multithreaded applications because of an asynchronous cleanup of component references.</span></span> <span data-ttu-id="521d5-105">Para contornar esse problema, chame o <xref:System.EnterpriseServices.ServicedComponent.Dispose%2A> método quando você concluir o trabalho com objetos derivado <xref:System.EnterpriseServices.ServicedComponent>.</span><span class="sxs-lookup"><span data-stu-id="521d5-105">To work around this problem, call the <xref:System.EnterpriseServices.ServicedComponent.Dispose%2A> method when you complete work with objects derived from <xref:System.EnterpriseServices.ServicedComponent>.</span></span> <span data-ttu-id="521d5-106">Para obter mais informações, consulte [ http://support.microsoft.com/default.aspx?scid=kb; en-us; 327443](http://support.microsoft.com/default.aspx?scid=kb;en-us;327443).</span><span class="sxs-lookup"><span data-stu-id="521d5-106">For more information, see [http://support.microsoft.com/default.aspx?scid=kb;en-us;327443](http://support.microsoft.com/default.aspx?scid=kb;en-us;327443).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="521d5-107">Código do cliente deve chamar `Dispose` em componentes para garantir a operação correta de serviço.</span><span class="sxs-lookup"><span data-stu-id="521d5-107">Client code must call `Dispose` on serviced components to ensure proper operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="521d5-108">O exemplo de código a seguir demonstra como expor uma classe como um componente COM configurado.</span><span class="sxs-lookup"><span data-stu-id="521d5-108">The following code example demonstrates how to expose a class as a configured COM component.</span></span>  
  
 [!code-cpp[EnterpriseServices_Basic#1](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Basic/CPP/calculator.cpp#1)]
 [!code-csharp[EnterpriseServices_Basic#1](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Basic/CS/calculator.cs#1)]  
  
 <span data-ttu-id="521d5-109">Para implantar essa classe como um componente COM configurado, gerar uma chave forte, compile a classe como uma biblioteca e registrar a biblioteca.</span><span class="sxs-lookup"><span data-stu-id="521d5-109">To deploy this class as a configured COM component, you must generate a strong key, compile the class as a library, and register the library.</span></span> <span data-ttu-id="521d5-110">Essas três etapas são realizadas pelos três comandos a seguir.</span><span class="sxs-lookup"><span data-stu-id="521d5-110">These three steps are accomplished by the following three commands.</span></span>  
  
```  
sn -k Calculator.snk  
csc /t:library Calculator.cs  
regsvcs Calculator.dll  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServicedComponent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ServicedComponent.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServicedComponent();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="521d5-111">Inicializa uma nova instância da classe <see cref="T:System.EnterpriseServices.ServicedComponent" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="521d5-111">Initializes a new instance of the <see cref="T:System.EnterpriseServices.ServicedComponent" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="521d5-112">Esse construtor é chamado por construtores de classe derivada para inicializar o estado nesse tipo.</span><span class="sxs-lookup"><span data-stu-id="521d5-112">This constructor is called by derived class constructors to initialize state in this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="protected internal virtual void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Activate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ServicedComponent.Activate" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Activate ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Activate();" />
      <MemberSignature Language="F#" Value="abstract member Activate : unit -&gt; unit&#xA;override this.Activate : unit -&gt; unit" Usage="servicedComponent.Activate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="521d5-113">Chamado pela infraestrutura quando o objeto é criado ou alocado de um pool.</span>
          <span class="sxs-lookup">
            <span data-stu-id="521d5-113">Called by the infrastructure when the object is created or allocated from a pool.</span>
          </span>
          <span data-ttu-id="521d5-114">Substitua este método para adicionar código de inicialização personalizada aos objetos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="521d5-114">Override this method to add custom initialization code to objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="521d5-115">O exemplo de código a seguir demonstra o uso desse método.</span><span class="sxs-lookup"><span data-stu-id="521d5-115">The following code example demonstrates the use of this method.</span></span>  
  
 [!code-cpp[EnterpriseServices_Pooling#3](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Pooling/CPP/inspector.cpp#3)]
 [!code-csharp[EnterpriseServices_Pooling#3](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Pooling/CS/inspector.cs#3)]
 [!code-vb[EnterpriseServices_Pooling#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Pooling/VB/inspector.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanBePooled">
      <MemberSignature Language="C#" Value="protected internal virtual bool CanBePooled ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool CanBePooled() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ServicedComponent.CanBePooled" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CanBePooled () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool CanBePooled();" />
      <MemberSignature Language="F#" Value="abstract member CanBePooled : unit -&gt; bool&#xA;override this.CanBePooled : unit -&gt; bool" Usage="servicedComponent.CanBePooled " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="521d5-116">Este método é chamado pela infraestrutura antes que o objeto seja colocado de volta no pool.</span>
          <span class="sxs-lookup">
            <span data-stu-id="521d5-116">This method is called by the infrastructure before the object is put back into the pool.</span>
          </span>
          <span data-ttu-id="521d5-117">Substitua este método para votar se o objeto deve ser colocado de volta no pool.</span>
          <span class="sxs-lookup">
            <span data-stu-id="521d5-117">Override this method to vote on whether the object is put back into the pool.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="521d5-118">
            <see langword="true" /> se o componente atendido pode ser colocado no pool; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="521d5-118">
              <see langword="true" /> if the serviced component can be pooled; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="521d5-119">O exemplo de código a seguir demonstra o uso desse método.</span><span class="sxs-lookup"><span data-stu-id="521d5-119">The following code example demonstrates the use of this method.</span></span>  
  
 [!code-cpp[EnterpriseServices_Pooling#5](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Pooling/CPP/inspector.cpp#5)]
 [!code-csharp[EnterpriseServices_Pooling#5](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Pooling/CS/inspector.cs#5)]
 [!code-vb[EnterpriseServices_Pooling#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Pooling/VB/inspector.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Construct">
      <MemberSignature Language="C#" Value="protected internal virtual void Construct (string s);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Construct(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ServicedComponent.Construct(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Construct (s As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Construct(System::String ^ s);" />
      <MemberSignature Language="F#" Value="abstract member Construct : string -&gt; unit&#xA;override this.Construct : string -&gt; unit" Usage="servicedComponent.Construct s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="521d5-120">A cadeia de caracteres de construção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="521d5-120">The construction string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="521d5-121">Chamado pela infraestrutura logo após o construtor ser chamado, passando a cadeia de caracteres do construtor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="521d5-121">Called by the infrastructure just after the constructor is called, passing in the constructor string.</span>
          </span>
          <span data-ttu-id="521d5-122">Substitua este método para fazer uso do valor da cadeia de caracteres de construção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="521d5-122">Override this method to make use of the construction string value.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deactivate">
      <MemberSignature Language="C#" Value="protected internal virtual void Deactivate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Deactivate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ServicedComponent.Deactivate" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Deactivate ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Deactivate();" />
      <MemberSignature Language="F#" Value="abstract member Deactivate : unit -&gt; unit&#xA;override this.Deactivate : unit -&gt; unit" Usage="servicedComponent.Deactivate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="521d5-123">Chamado pela infraestrutura quando o objeto está prestes a ser desativado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="521d5-123">Called by the infrastructure when the object is about to be deactivated.</span>
          </span>
          <span data-ttu-id="521d5-124">Substitua este método para adicionar código de finalização personalizado a objetos quando o código compilado JIT (Just-In-Time) ou o pool de objetos for usado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="521d5-124">Override this method to add custom finalization code to objects when just-in-time (JIT) compiled code or object pooling is used.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="521d5-125">O exemplo de código a seguir demonstra o uso desse método.</span><span class="sxs-lookup"><span data-stu-id="521d5-125">The following code example demonstrates the use of this method.</span></span>  
  
 [!code-cpp[EnterpriseServices_Pooling#4](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Pooling/CPP/inspector.cpp#4)]
 [!code-csharp[EnterpriseServices_Pooling#4](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Pooling/CS/inspector.cs#4)]
 [!code-vb[EnterpriseServices_Pooling#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Pooling/VB/inspector.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="521d5-126">Libera os recursos usados pelo <see cref="T:System.EnterpriseServices.ServicedComponent" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="521d5-126">Releases the resources used by the <see cref="T:System.EnterpriseServices.ServicedComponent" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ServicedComponent.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="servicedComponent.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="521d5-127">Libera todos os recursos usados pelo <see cref="T:System.EnterpriseServices.ServicedComponent" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="521d5-127">Releases all resources used by the <see cref="T:System.EnterpriseServices.ServicedComponent" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="521d5-128">Finaliza o objeto e remove o contexto de COM+ associado.</span><span class="sxs-lookup"><span data-stu-id="521d5-128">Finalizes the object and removes the associated COM+ context.</span></span>  
  
 <span data-ttu-id="521d5-129">É recomendável liberar explicitamente objetos COM+ e recursos externos antes que o coletor de lixo libera o objeto.</span><span class="sxs-lookup"><span data-stu-id="521d5-129">It is recommended to explicitly release COM+ objects and external resources before the garbage collector frees the object.</span></span> <span data-ttu-id="521d5-130">Se o recurso externo é cara ou escassos, melhorar o desempenho pode ser obtido liberando explicitamente COM+ recursos quando eles não são mais necessários.</span><span class="sxs-lookup"><span data-stu-id="521d5-130">If the external resource is scarce or expensive, better performance can be achieved by explicitly releasing COM+ resources when they are no longer needed.</span></span> <span data-ttu-id="521d5-131">Controle explícito é fornecido pelo <xref:System.EnterpriseServices.ServicedComponent.Dispose%2A> método.</span><span class="sxs-lookup"><span data-stu-id="521d5-131">Explicit control is provided by the <xref:System.EnterpriseServices.ServicedComponent.Dispose%2A> method.</span></span>  
  
 <span data-ttu-id="521d5-132">Chamando <xref:System.EnterpriseServices.ServicedComponent.Dispose%2A> permite que os recursos usados pelo <xref:System.EnterpriseServices.ServicedComponent> para ser realocados para outras finalidades.</span><span class="sxs-lookup"><span data-stu-id="521d5-132">Calling <xref:System.EnterpriseServices.ServicedComponent.Dispose%2A> allows the resources used by the <xref:System.EnterpriseServices.ServicedComponent> to be reallocated for other purposes.</span></span> <span data-ttu-id="521d5-133">Para obter mais informações sobre <xref:System.EnterpriseServices.ServicedComponent.Dispose%2A>, consulte [limpeza de recursos não gerenciados](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="521d5-133">For more information about <xref:System.EnterpriseServices.ServicedComponent.Dispose%2A>, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="521d5-134">Substituir o <see cref="M:System.EnterpriseServices.ServicedComponent.Dispose(System.Boolean)" /> método para personalizar a lógica de descarte para essa classe.</span>
            <span class="sxs-lookup">
              <span data-stu-id="521d5-134">Override the <see cref="M:System.EnterpriseServices.ServicedComponent.Dispose(System.Boolean)" /> method to customize the dispose logic for this class.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ServicedComponent.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="servicedComponent.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="521d5-135">
            <see langword="true" /> para liberar recursos gerenciados e não gerenciados; caso contrário, <see langword="false" /> para liberar apenas recursos não gerenciados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="521d5-135">
              <see langword="true" /> to release both managed and unmanaged resources; otherwise, <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="521d5-136">Libera os recursos não gerenciados usados pelo <see cref="T:System.EnterpriseServices.ServicedComponent" /> e opcionalmente libera os recursos gerenciados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="521d5-136">Releases the unmanaged resources used by the <see cref="T:System.EnterpriseServices.ServicedComponent" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="521d5-137">Este método é chamado pelo método público `Dispose` e pelo método <xref:System.Object.Finalize%2A>.</span><span class="sxs-lookup"><span data-stu-id="521d5-137">This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="521d5-138">`Dispose` invoca o método `Dispose(Boolean)` protegido com o parâmetro `disposing` definido como `true`.</span><span class="sxs-lookup"><span data-stu-id="521d5-138">`Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="521d5-139"><xref:System.Object.Finalize%2A> invoca `Dispose` com `disposing` definido como `false`.</span><span class="sxs-lookup"><span data-stu-id="521d5-139"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="521d5-140">Quando o `disposing` parâmetro é `true`, esse método libera todos os recursos mantidos por qualquer objeto gerenciado que este <xref:System.EnterpriseServices.ServicedComponent> referências.</span><span class="sxs-lookup"><span data-stu-id="521d5-140">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.EnterpriseServices.ServicedComponent> references.</span></span> <span data-ttu-id="521d5-141">Este método invoca o método `Dispose` de cada objeto referenciado.</span><span class="sxs-lookup"><span data-stu-id="521d5-141">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="521d5-142">
              <see langword="Dispose" /> pode ser chamado várias vezes por outros objetos.</span>
            <span class="sxs-lookup">
              <span data-stu-id="521d5-142">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="521d5-143">Ao substituir <see langword="Dispose(Boolean)" />, tome cuidado para não referenciar objetos que tenham sido descartados anteriormente em uma chamada anterior para <see langword="Dispose" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="521d5-143">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="521d5-144">Para obter mais informações sobre como implementar <see langword="Dispose(Boolean)" />, consulte [implementando um método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="521d5-144">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="521d5-145">Para obter mais informações sobre <see langword="Dispose" /> e <see cref="M:System.Object.Finalize" />, consulte [limpeza de recursos não gerenciados](~/docs/standard/garbage-collection/unmanaged.md) e [substituindo o método Finalize](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span>
            <span class="sxs-lookup">
              <span data-stu-id="521d5-145">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DisposeObject">
      <MemberSignature Language="C#" Value="public static void DisposeObject (System.EnterpriseServices.ServicedComponent sc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DisposeObject(class System.EnterpriseServices.ServicedComponent sc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ServicedComponent.DisposeObject(System.EnterpriseServices.ServicedComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DisposeObject (sc As ServicedComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DisposeObject(System::EnterpriseServices::ServicedComponent ^ sc);" />
      <MemberSignature Language="F#" Value="static member DisposeObject : System.EnterpriseServices.ServicedComponent -&gt; unit" Usage="System.EnterpriseServices.ServicedComponent.DisposeObject sc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sc" Type="System.EnterpriseServices.ServicedComponent" />
      </Parameters>
      <Docs>
        <param name="sc">
          <span data-ttu-id="521d5-146">O objeto a ser descartado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="521d5-146">The object to dispose.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="521d5-147">Finaliza o objeto e remove a referência de COM+ associada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="521d5-147">Finalizes the object and removes the associated COM+ reference.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="521d5-148">É preferível usar o `Dispose` padrão de design em vez de <xref:System.EnterpriseServices.ServicedComponent.DisposeObject%2A>.</span><span class="sxs-lookup"><span data-stu-id="521d5-148">It is preferable to use the `Dispose` design pattern rather than <xref:System.EnterpriseServices.ServicedComponent.DisposeObject%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.EnterpriseServices.IRemoteDispatch.RemoteDispatchAutoDone">
      <MemberSignature Language="C#" Value="string IRemoteDispatch.RemoteDispatchAutoDone (string s);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.EnterpriseServices.IRemoteDispatch.RemoteDispatchAutoDone(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IRemoteDispatch#RemoteDispatchAutoDone(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function RemoteDispatchAutoDone (s As String) As String Implements IRemoteDispatch.RemoteDispatchAutoDone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.EnterpriseServices.IRemoteDispatch.RemoteDispatchAutoDone(System::String ^ s) = System::EnterpriseServices::IRemoteDispatch::RemoteDispatchAutoDone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.IRemoteDispatch.RemoteDispatchAutoDone(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.EnterpriseServices.AutoComplete(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <summary>
          <span data-ttu-id="521d5-149">Garante que, no contexto COM+, o bit <see langword="done" /> da classe <see cref="T:System.EnterpriseServices.ServicedComponent" /> do objeto seja definido como <see langword="true" /> após uma invocação de método remoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="521d5-149">Ensures that, in the COM+ context, the <see cref="T:System.EnterpriseServices.ServicedComponent" /> class object's <see langword="done" /> bit is set to <see langword="true" /> after a remote method invocation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="521d5-150">Uma cadeia de caracteres convertida de um objeto de resposta que implementa a interface <see cref="T:System.Runtime.Remoting.Messaging.IMethodReturnMessage" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="521d5-150">A string converted from a response object that implements the <see cref="T:System.Runtime.Remoting.Messaging.IMethodReturnMessage" /> interface.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="521d5-151">O <xref:System.EnterpriseServices.IRemoteDispatch.RemoteDispatchAutoDone%2A> método não pertence à interface publicada do <xref:System.EnterpriseServices.ServicedComponent> de classe e não precisa ser implementado em outro lugar.</span><span class="sxs-lookup"><span data-stu-id="521d5-151">The <xref:System.EnterpriseServices.IRemoteDispatch.RemoteDispatchAutoDone%2A> method does not belong to the published interface of the <xref:System.EnterpriseServices.ServicedComponent> class and does not need to be implemented elsewhere.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.EnterpriseServices.IRemoteDispatch.RemoteDispatchNotAutoDone">
      <MemberSignature Language="C#" Value="string IRemoteDispatch.RemoteDispatchNotAutoDone (string s);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.EnterpriseServices.IRemoteDispatch.RemoteDispatchNotAutoDone(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IRemoteDispatch#RemoteDispatchNotAutoDone(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function RemoteDispatchNotAutoDone (s As String) As String Implements IRemoteDispatch.RemoteDispatchNotAutoDone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.EnterpriseServices.IRemoteDispatch.RemoteDispatchNotAutoDone(System::String ^ s) = System::EnterpriseServices::IRemoteDispatch::RemoteDispatchNotAutoDone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.IRemoteDispatch.RemoteDispatchNotAutoDone(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.EnterpriseServices.AutoComplete(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="521d5-152">Uma cadeia de caracteres a ser convertida em um objeto de solicitação que implementa a interface <see cref="T:System.Runtime.Remoting.Messaging.IMessage" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="521d5-152">A string to be converted into a request object that implements the <see cref="T:System.Runtime.Remoting.Messaging.IMessage" /> interface.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="521d5-153">Não garante que, no contexto COM+, o bit <see langword="done" /> da classe <see cref="T:System.EnterpriseServices.ServicedComponent" /> do objeto seja definido como <see langword="true" /> após uma invocação de método remoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="521d5-153">Does not ensure that, in the COM+ context, the <see cref="T:System.EnterpriseServices.ServicedComponent" /> class object's <see langword="done" /> bit is set to <see langword="true" /> after a remote method invocation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="521d5-154">Uma cadeia de caracteres convertida de um objeto de resposta que implementa a interface <see cref="T:System.Runtime.Remoting.Messaging.IMethodReturnMessage" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="521d5-154">A string converted from a response object that implements the <see cref="T:System.Runtime.Remoting.Messaging.IMethodReturnMessage" /> interface.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="521d5-155">O <xref:System.EnterpriseServices.IRemoteDispatch.RemoteDispatchNotAutoDone%2A> método não pertence à interface publicada do <xref:System.EnterpriseServices.ServicedComponent> de classe e não precisa ser implementado em outro lugar.</span><span class="sxs-lookup"><span data-stu-id="521d5-155">The <xref:System.EnterpriseServices.IRemoteDispatch.RemoteDispatchNotAutoDone%2A> method does not belong to the published interface of the <xref:System.EnterpriseServices.ServicedComponent> class and does not need to be implemented elsewhere.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.EnterpriseServices.IServicedComponentInfo.GetComponentInfo">
      <MemberSignature Language="C#" Value="void IServicedComponentInfo.GetComponentInfo (ref int infoMask, out string[] infoArray);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.EnterpriseServices.IServicedComponentInfo.GetComponentInfo(int32&amp; infoMask, [out] string[]&amp; infoArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IServicedComponentInfo#GetComponentInfo(System.Int32@,System.String[]@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetComponentInfo (ByRef infoMask As Integer, ByRef infoArray As String()) Implements IServicedComponentInfo.GetComponentInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.EnterpriseServices.IServicedComponentInfo.GetComponentInfo(int % infoMask, [Runtime::InteropServices::Out] cli::array &lt;System::String ^&gt; ^ % infoArray) = System::EnterpriseServices::IServicedComponentInfo::GetComponentInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.IServicedComponentInfo.GetComponentInfo(System.Int32@,System.String[]@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="infoMask" Type="System.Int32" RefType="ref" />
        <Parameter Name="infoArray" Type="System.String[]" RefType="out" />
      </Parameters>
      <Docs>
        <param name="infoMask">
          <span data-ttu-id="521d5-156">Um bitmask em que 0x00000001 é uma chave para a ID de processo do componente atendido, 0x00000002 é uma chave para a ID do domínio do aplicativo e 0x00000004 é uma chave para o URI remoto do componente atendido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="521d5-156">A bitmask where 0x00000001 is a key for the serviced component's process ID, 0x00000002 is a key for the application domain ID, and 0x00000004 is a key for the serviced component's remote URI.</span>
          </span>
        </param>
        <param name="infoArray">
          <span data-ttu-id="521d5-157">Uma matriz de cadeia de caracteres que pode conter qualquer ou todos os seguintes itens, em ordem: a ID de processo do componente atendido, a ID do domínio do aplicativo e o URI remoto do componente atendido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="521d5-157">A string array that may contain any or all of the following, in order: the serviced component's process ID, the application domain ID, and the serviced component's remote URI.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="521d5-158">Obtém determinadas informações sobre a instância da classe <see cref="T:System.EnterpriseServices.ServicedComponent" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="521d5-158">Obtains certain information about the <see cref="T:System.EnterpriseServices.ServicedComponent" /> class instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="521d5-159">O <xref:System.EnterpriseServices.IServicedComponentInfo.GetComponentInfo%2A> método não pertence à interface publicada do <xref:System.EnterpriseServices.ServicedComponent> de classe e não precisa ser implementado em outro lugar.</span><span class="sxs-lookup"><span data-stu-id="521d5-159">The <xref:System.EnterpriseServices.IServicedComponentInfo.GetComponentInfo%2A> method does not belong to the published interface of the <xref:System.EnterpriseServices.ServicedComponent> class and does not need to be implemented elsewhere.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>