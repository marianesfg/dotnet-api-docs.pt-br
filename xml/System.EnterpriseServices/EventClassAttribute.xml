<Type Name="EventClassAttribute" FullName="System.EnterpriseServices.EventClassAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="050aa9a57626a941061de7ff4e9d699f32a81041" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55393684" /></Metadata><TypeSignature Language="C#" Value="public sealed class EventClassAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EventClassAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.EventClassAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EventClassAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventClassAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type EventClassAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c6f6d-101">Marca a classe atribuída como uma classe de evento.</span><span class="sxs-lookup"><span data-stu-id="c6f6d-101">Marks the attributed class as an event class.</span></span> <span data-ttu-id="c6f6d-102">Essa classe não pode ser herdada.</span><span class="sxs-lookup"><span data-stu-id="c6f6d-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6f6d-103">Se `EventClass` for especificado, ele não deve ser desabilitado no catálogo COM+; se habilitados no catálogo COM+, ele deve ser especificado no componente.</span><span class="sxs-lookup"><span data-stu-id="c6f6d-103">If `EventClass` is specified, it must not be disabled in the COM+ catalog; if enabled in the COM+ catalog, it must be specified on the component.</span></span>  
  
 <span data-ttu-id="c6f6d-104">Chamadas de método em uma classe de evento nunca são enviadas para a implementação; em vez disso, eles são entregues aos assinantes do evento.</span><span class="sxs-lookup"><span data-stu-id="c6f6d-104">Method calls on an event class are never delivered to the implementation; they are instead delivered to event subscribers.</span></span>  
  
 <span data-ttu-id="c6f6d-105">Para obter uma lista de valores de propriedade inicial para uma instância do <xref:System.EnterpriseServices.EventClassAttribute>, consulte o <xref:System.EnterpriseServices.EventClassAttribute.%23ctor%2A> construtor.</span><span class="sxs-lookup"><span data-stu-id="c6f6d-105">For a list of initial property values for an instance of <xref:System.EnterpriseServices.EventClassAttribute>, see the <xref:System.EnterpriseServices.EventClassAttribute.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="c6f6d-106">Para obter mais informações sobre como usar atributos, consulte [atributos](~/docs/standard/attributes/index.md).</span><span class="sxs-lookup"><span data-stu-id="c6f6d-106">For more information about using attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventClassAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.EventClassAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventClassAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c6f6d-107">Inicializa uma nova instância da classe <see cref="T:System.EnterpriseServices.EventClassAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="c6f6d-107">Initializes a new instance of the <see cref="T:System.EnterpriseServices.EventClassAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6f6d-108">Não há nenhum valor padrão não configurado para esse atributo.</span><span class="sxs-lookup"><span data-stu-id="c6f6d-108">There is no unconfigured default value for this attribute.</span></span> <span data-ttu-id="c6f6d-109">A tabela a seguir mostra os valores de propriedade inicial para uma instância configurada do <xref:System.EnterpriseServices.EventClassAttribute>.</span><span class="sxs-lookup"><span data-stu-id="c6f6d-109">The following table shows initial property values for a configured instance of <xref:System.EnterpriseServices.EventClassAttribute>.</span></span>  
  
|<span data-ttu-id="c6f6d-110">Propriedade</span><span class="sxs-lookup"><span data-stu-id="c6f6d-110">Property</span></span>|<span data-ttu-id="c6f6d-111">Valor</span><span class="sxs-lookup"><span data-stu-id="c6f6d-111">Value</span></span>|  
|--------------|-----------|  
|`FireInParallel`|`false`|  
|`AllowInProcSubscribers`|`true`|  
|`PublisherFilter`|`null`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowInprocSubscribers">
      <MemberSignature Language="C#" Value="public bool AllowInprocSubscribers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowInprocSubscribers" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.EventClassAttribute.AllowInprocSubscribers" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowInprocSubscribers As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowInprocSubscribers { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowInprocSubscribers : bool with get, set" Usage="System.EnterpriseServices.EventClassAttribute.AllowInprocSubscribers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c6f6d-112">Obtém ou define um valor que indica se os assinantes podem ser ativados no processo do editor.</span><span class="sxs-lookup"><span data-stu-id="c6f6d-112">Gets or sets a value that indicates whether subscribers can be activated in the publisher's process.</span></span></summary>
        <value><span data-ttu-id="c6f6d-113"><see langword="true" /> Se os assinantes podem ser ativados no processo do Editor; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c6f6d-113"><see langword="true" /> if subscribers can be activated in the publisher's process; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FireInParallel">
      <MemberSignature Language="C#" Value="public bool FireInParallel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FireInParallel" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.EventClassAttribute.FireInParallel" />
      <MemberSignature Language="VB.NET" Value="Public Property FireInParallel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FireInParallel { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.FireInParallel : bool with get, set" Usage="System.EnterpriseServices.EventClassAttribute.FireInParallel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c6f6d-114">Obtém ou define um valor que indica se os eventos devem ser entregues aos assinantes em paralelo.</span><span class="sxs-lookup"><span data-stu-id="c6f6d-114">Gets or sets a value that indicates whether events are to be delivered to subscribers in parallel.</span></span></summary>
        <value><span data-ttu-id="c6f6d-115"><see langword="true" /> Se os eventos devem ser entregues aos assinantes em paralelo; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c6f6d-115"><see langword="true" /> if events are to be delivered to subscribers in parallel; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PublisherFilter">
      <MemberSignature Language="C#" Value="public string PublisherFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PublisherFilter" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.EventClassAttribute.PublisherFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property PublisherFilter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PublisherFilter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PublisherFilter : string with get, set" Usage="System.EnterpriseServices.EventClassAttribute.PublisherFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c6f6d-116">Obtém ou define um filtro de editor para um método de evento.</span><span class="sxs-lookup"><span data-stu-id="c6f6d-116">Gets or sets a publisher filter for an event method.</span></span></summary>
        <value><span data-ttu-id="c6f6d-117">O filtro de editor.</span><span class="sxs-lookup"><span data-stu-id="c6f6d-117">The publisher filter.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>