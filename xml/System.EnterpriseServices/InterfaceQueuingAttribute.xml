<Type Name="InterfaceQueuingAttribute" FullName="System.EnterpriseServices.InterfaceQueuingAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5eb652f9db3e63a1294ac0696c54e21a1698ad0b" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37760200" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class InterfaceQueuingAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit InterfaceQueuingAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.InterfaceQueuingAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class InterfaceQueuingAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class InterfaceQueuingAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type InterfaceQueuingAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface, AllowMultiple=true, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a0a87-101">Habilita o suporte de enfileiramento para a interface marcada.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a0a87-101">Enables queuing support for the marked interface.</span>
      </span>
      <span data-ttu-id="a0a87-102">Essa classe não pode ser herdada.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a0a87-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0a87-103">Chamadas na interface em questão serão enfileiradas usando o enfileiramento de mensagens.</span><span class="sxs-lookup"><span data-stu-id="a0a87-103">Calls on this interface will be queued using Message Queuing.</span></span>  
  
 <span data-ttu-id="a0a87-104">Para marcar uma interface como enfileirado, aplicar esse atributo para a interface usando a seguinte sintaxe: `[InterfaceQueuing]`.</span><span class="sxs-lookup"><span data-stu-id="a0a87-104">To mark an interface as queued, apply this attribute to the interface using the following syntax: `[InterfaceQueuing]`.</span></span>  
  
 <span data-ttu-id="a0a87-105">Os métodos de membro de uma interface em fila devem atender os requisitos para chamadas de método na fila, como ter nenhuma `out` ou `ref` parâmetros.</span><span class="sxs-lookup"><span data-stu-id="a0a87-105">The member methods of a queued interface must fulfill the requirements for queued method calls, such as having no `out` or `ref` parameters.</span></span>  
  
 <span data-ttu-id="a0a87-106">Para obter mais informações sobre como usar atributos, consulte [atributos](~/docs/standard/attributes/index.md).</span><span class="sxs-lookup"><span data-stu-id="a0a87-106">For more information about using attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0a87-107">O exemplo de código a seguir mostra como usar o `InterfaceQueuingAttribute` atributo.</span><span class="sxs-lookup"><span data-stu-id="a0a87-107">The following code example shows how to use the `InterfaceQueuingAttribute` attribute.</span></span>  
  
 [!code-cpp[System.EnterpriseServices.QueuedComponents#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.EnterpriseServices.QueuedComponents/CPP/queuedcomponent.cpp#2)]
 [!code-csharp[System.EnterpriseServices.QueuedComponents#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.EnterpriseServices.QueuedComponents/CS/queuedcomponent.cs#2)]  
  
 <span data-ttu-id="a0a87-108">O exemplo de código a seguir mostra como marcar um aplicativo COM+, como em fila no tempo de compilação usando o `ApplicationQueuing` de atributos e habilitar a escuta do COM+, definindo o `QueueListenerEnabled` como true</span><span class="sxs-lookup"><span data-stu-id="a0a87-108">The following code example shows how to mark a COM+ application as queued at compile time by using the `ApplicationQueuing` attribute, and enable the COM+ listener by setting the `QueueListenerEnabled` to true</span></span>  
  
 [!code-cpp[System.EnterpriseServices.QueuedComponents#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.EnterpriseServices.QueuedComponents/CPP/queuedcomponent.cpp#1)]
 [!code-csharp[System.EnterpriseServices.QueuedComponents#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.EnterpriseServices.QueuedComponents/CS/queuedcomponent.cs#1)]  
  
 <span data-ttu-id="a0a87-109">O exemplo de código a seguir mostra como usar `BindToMoniker` para executar o moniker em fila, para obter uma instância do registrador, chame o método que será gravado e força a versão do objeto de gravador, para enviar a mensagem à fila.</span><span class="sxs-lookup"><span data-stu-id="a0a87-109">The following code example shows how to use `BindToMoniker` to run the queued moniker, to get an instance of the recorder, call the method that will be recorded, and force the release of the recorder object, to send the message to the queue.</span></span>  
  
 [!code-cpp[System.EnterpriseServices.QueuedComponents#0](~/samples/snippets/cpp/VS_Snippets_Remoting/System.EnterpriseServices.QueuedComponents/CPP/queuedcomponentclientclass.cpp#0)]
 [!code-csharp[System.EnterpriseServices.QueuedComponents#0](~/samples/snippets/csharp/VS_Snippets_Remoting/System.EnterpriseServices.QueuedComponents/CS/queuedcomponentclientclass.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a0a87-110">Inicializa uma nova instância da classe <see cref="T:System.EnterpriseServices.InterfaceQueuingAttribute" />, habilitando o suporte ao enfileiramento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0a87-110">Initializes a new instance of the <see cref="T:System.EnterpriseServices.InterfaceQueuingAttribute" /> class, enabling queuing support.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InterfaceQueuingAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.InterfaceQueuingAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InterfaceQueuingAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a0a87-111">Inicializa uma nova instância da classe <see cref="T:System.EnterpriseServices.InterfaceQueuingAttribute" /> definindo as propriedades <see cref="P:System.EnterpriseServices.InterfaceQueuingAttribute.Enabled" /> e <see cref="P:System.EnterpriseServices.InterfaceQueuingAttribute.Interface" /> com seus valores padrão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0a87-111">Initializes a new instance of the <see cref="T:System.EnterpriseServices.InterfaceQueuingAttribute" /> class setting the <see cref="P:System.EnterpriseServices.InterfaceQueuingAttribute.Enabled" /> and <see cref="P:System.EnterpriseServices.InterfaceQueuingAttribute.Interface" /> properties to their default values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0a87-112">A tabela a seguir mostra os valores de propriedade inicial para uma instância do <xref:System.EnterpriseServices.InterfaceQueuingAttribute>.</span><span class="sxs-lookup"><span data-stu-id="a0a87-112">The following table shows initial property values for an instance of <xref:System.EnterpriseServices.InterfaceQueuingAttribute>.</span></span>  
  
|<span data-ttu-id="a0a87-113">Propriedade</span><span class="sxs-lookup"><span data-stu-id="a0a87-113">Property</span></span>|<span data-ttu-id="a0a87-114">Valor</span><span class="sxs-lookup"><span data-stu-id="a0a87-114">Value</span></span>|  
|--------------|-----------|  
|<span data-ttu-id="a0a87-115">Habilitada</span><span class="sxs-lookup"><span data-stu-id="a0a87-115">Enabled</span></span>|`true`|  
|<span data-ttu-id="a0a87-116">Interface</span><span class="sxs-lookup"><span data-stu-id="a0a87-116">Interface</span></span>|`null`|  
  
   
  
## Examples  
 <span data-ttu-id="a0a87-117">O exemplo de código a seguir cria um novo <xref:System.EnterpriseServices.InterfaceQueuingAttribute>.</span><span class="sxs-lookup"><span data-stu-id="a0a87-117">The following code example creates a new <xref:System.EnterpriseServices.InterfaceQueuingAttribute>.</span></span>  
  
 [!code-cpp[EnterpriseServicesInterfaceQueuingAttribute#1](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServicesInterfaceQueuingAttribute/CPP/class1.cpp#1)]
 [!code-csharp[EnterpriseServicesInterfaceQueuingAttribute#1](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesInterfaceQueuingAttribute/CS/class1.cs#1)]
 [!code-vb[EnterpriseServicesInterfaceQueuingAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesInterfaceQueuingAttribute/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InterfaceQueuingAttribute (bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.InterfaceQueuingAttribute.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (enabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InterfaceQueuingAttribute(bool enabled);" />
      <MemberSignature Language="F#" Value="new System.EnterpriseServices.InterfaceQueuingAttribute : bool -&gt; System.EnterpriseServices.InterfaceQueuingAttribute" Usage="new System.EnterpriseServices.InterfaceQueuingAttribute enabled" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enabled">
          <span data-ttu-id="a0a87-118">
            <see langword="true" /> para habilitar o suporte ao enfileiramento; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0a87-118">
              <see langword="true" /> to enable queuing support; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0a87-119">Inicializa uma nova instância da classe <see cref="T:System.EnterpriseServices.InterfaceQueuingAttribute" />, desabilitando opcionalmente o suporte ao enfileiramento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0a87-119">Initializes a new instance of the <see cref="T:System.EnterpriseServices.InterfaceQueuingAttribute" /> class, optionally disabling queuing support.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a0a87-120">O exemplo de código a seguir cria um novo <xref:System.EnterpriseServices.InterfaceQueuingAttribute>.</span><span class="sxs-lookup"><span data-stu-id="a0a87-120">The following code example creates a new <xref:System.EnterpriseServices.InterfaceQueuingAttribute>.</span></span>  
  
 [!code-cpp[EnterpriseServicesInterfaceQueuingAttribute#2](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServicesInterfaceQueuingAttribute/CPP/class1.cpp#2)]
 [!code-csharp[EnterpriseServicesInterfaceQueuingAttribute#2](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesInterfaceQueuingAttribute/CS/class1.cs#2)]
 [!code-vb[EnterpriseServicesInterfaceQueuingAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesInterfaceQueuingAttribute/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.InterfaceQueuingAttribute.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.EnterpriseServices.InterfaceQueuingAttribute.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a0a87-121">Obtém ou define um valor que indica se o suporte ao enfileiramento está habilitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0a87-121">Gets or sets a value indicating whether queuing support is enabled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a0a87-122">
            <see langword="true" /> Se o suporte ao enfileiramento está habilitado; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0a87-122">
              <see langword="true" /> if queuing support is enabled; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a0a87-123">O padrão é <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0a87-123">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0a87-124">Essa propriedade corresponde à `Queuing-Enabled` propriedade no COM+.</span><span class="sxs-lookup"><span data-stu-id="a0a87-124">This property corresponds to the `Queuing-Enabled` property in COM+.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Interface">
      <MemberSignature Language="C#" Value="public string Interface { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Interface" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.InterfaceQueuingAttribute.Interface" />
      <MemberSignature Language="VB.NET" Value="Public Property Interface As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Interface { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Interface : string with get, set" Usage="System.EnterpriseServices.InterfaceQueuingAttribute.Interface" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a0a87-125">Obtém ou define o nome da interface em que o enfileiramento está habilitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0a87-125">Gets or sets the name of the interface on which queuing is enabled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a0a87-126">O nome da interface em que o enfileiramento de mensagens está habilitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0a87-126">The name of the interface on which queuing is enabled.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>