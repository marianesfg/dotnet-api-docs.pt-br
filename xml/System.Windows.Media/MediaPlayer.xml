<Type Name="MediaPlayer" FullName="System.Windows.Media.MediaPlayer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2646cb4135c9656722ab27d52880b9aacf382fd8" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37496049" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MediaPlayer : System.Windows.Media.Animation.Animatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MediaPlayer extends System.Windows.Media.Animation.Animatable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.MediaPlayer" />
  <TypeSignature Language="VB.NET" Value="Public Class MediaPlayer&#xA;Inherits Animatable" />
  <TypeSignature Language="C++ CLI" Value="public ref class MediaPlayer : System::Windows::Media::Animation::Animatable" />
  <TypeSignature Language="F#" Value="type MediaPlayer = class&#xA;    inherit Animatable&#xA;    interface DUCE.IResource" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.Animatable</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c739e-101">Fornece reprodução de mídia para desenhos.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c739e-101">Provides media playback for drawings.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c739e-102">Embora seja possível declarar uma instância desta classe na [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], você não pode carregar e reproduzir a mídia sem usar código.</span><span class="sxs-lookup"><span data-stu-id="c739e-102">Although you can declare an instance of this class in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], you cannot load and play its media without using code.</span></span> <span data-ttu-id="c739e-103">Reproduzir mídia em [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] apenas, use um <xref:System.Windows.Controls.MediaElement>.</span><span class="sxs-lookup"><span data-stu-id="c739e-103">To play media in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] only, use a <xref:System.Windows.Controls.MediaElement>.</span></span> <span data-ttu-id="c739e-104">Além disso, se você declarar uma instância em [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], o uso prático só é preencher a sintaxe de elemento de propriedade para o <xref:System.Windows.Media.VideoDrawing.Player%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="c739e-104">Also, if you declare an instance in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], the only practical use is to fill property element syntax for the <xref:System.Windows.Media.VideoDrawing.Player%2A> property.</span></span>  
  
 <span data-ttu-id="c739e-105">Ao distribuir mídia com seu aplicativo, você não pode usar um arquivo de mídia como um recurso do projeto.</span><span class="sxs-lookup"><span data-stu-id="c739e-105">When distributing media with your application, you cannot use a media file as a project resource.</span></span> <span data-ttu-id="c739e-106">Em seu arquivo de projeto, em vez disso, você deve definir o tipo de mídia como `Content` e defina `CopyToOutputDirectory` para `PreserveNewest` ou `Always`.</span><span class="sxs-lookup"><span data-stu-id="c739e-106">In your project file, you must instead set the media type to `Content` and set `CopyToOutputDirectory` to `PreserveNewest` or `Always`.</span></span>  
  
 <span data-ttu-id="c739e-107"><xref:System.Windows.Media.MediaPlayer> pode ser usado em dois modos diferentes, dependendo do que está orientando o player: modo independente ou relógio.</span><span class="sxs-lookup"><span data-stu-id="c739e-107"><xref:System.Windows.Media.MediaPlayer> can be used in two different modes, depending on what is driving the player: independent mode or clock mode.</span></span> <span data-ttu-id="c739e-108">No modo independente, o <xref:System.Windows.Media.MediaPlayer> é análoga a uma imagem e a mídia aberta por meio de <xref:System.Windows.Media.MediaPlayer.Open%2A> reprodução de unidades de método.</span><span class="sxs-lookup"><span data-stu-id="c739e-108">In independent mode, the <xref:System.Windows.Media.MediaPlayer> is analogous to an image and the media opened through the <xref:System.Windows.Media.MediaPlayer.Open%2A> method drives playback.</span></span> <span data-ttu-id="c739e-109">No modo relógio, o <xref:System.Windows.Media.MediaPlayer> pode ser pensada como um destino para uma animação e, portanto, ela terá correspondente <xref:System.Windows.Media.Animation.Timeline> e <xref:System.Windows.Media.Animation.Clock> entradas de tempo que controla a reprodução de árvore.</span><span class="sxs-lookup"><span data-stu-id="c739e-109">In Clock mode, the <xref:System.Windows.Media.MediaPlayer> can be thought of as a target for an animation, and thus it will have corresponding <xref:System.Windows.Media.Animation.Timeline> and <xref:System.Windows.Media.Animation.Clock> entries in the Timing tree which controls playback.</span></span> <span data-ttu-id="c739e-110">Para obter mais informações sobre os modos de mídia, consulte o [visão geral de multimídia](~/docs/framework/wpf/graphics-multimedia/multimedia-overview.md).</span><span class="sxs-lookup"><span data-stu-id="c739e-110">For more information on media modes, see the [Multimedia Overview](~/docs/framework/wpf/graphics-multimedia/multimedia-overview.md).</span></span>  
  
 <span data-ttu-id="c739e-111"><xref:System.Windows.Media.MediaPlayer> é diferente de um <xref:System.Windows.Controls.MediaElement> em que ele não é um controle que pode ser adicionado diretamente para o [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] de um aplicativo.</span><span class="sxs-lookup"><span data-stu-id="c739e-111"><xref:System.Windows.Media.MediaPlayer> is different from a <xref:System.Windows.Controls.MediaElement> in that it is not a control that can be added directly to the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] of an application.</span></span> <span data-ttu-id="c739e-112">Para exibir a mídia carregada usando <xref:System.Windows.Media.MediaPlayer>, um <xref:System.Windows.Media.VideoDrawing> ou <xref:System.Windows.Media.DrawingContext> deve ser usado.</span><span class="sxs-lookup"><span data-stu-id="c739e-112">To display media loaded using <xref:System.Windows.Media.MediaPlayer>, a <xref:System.Windows.Media.VideoDrawing> or <xref:System.Windows.Media.DrawingContext> must be used.</span></span>  
  
   
  
## Examples  
 [<span data-ttu-id="c739e-113">Como executar mídia usando um VideoDrawing</span><span class="sxs-lookup"><span data-stu-id="c739e-113">How to: Play Media using a VideoDrawing</span></span>](~/docs/framework/wpf/graphics-multimedia/how-to-play-media-using-a-videodrawing.md)  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.Drawing" />
    <altmember cref="T:System.Windows.Media.VideoDrawing" />
    <altmember cref="T:System.Windows.Media.DrawingContext" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MediaPlayer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MediaPlayer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c739e-114">Inicializa uma nova instância da classe <see cref="T:System.Windows.Media.MediaPlayer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-114">Initializes a new instance of the <see cref="T:System.Windows.Media.MediaPlayer" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Balance">
      <MemberSignature Language="C#" Value="public double Balance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Balance" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.Balance" />
      <MemberSignature Language="VB.NET" Value="Public Property Balance As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Balance { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Balance : double with get, set" Usage="System.Windows.Media.MediaPlayer.Balance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c739e-115">Obtém ou define o equilíbrio entre os volumes dos alto-falantes da esquerda e da direita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-115">Gets or sets the balance between the left and right speaker volumes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c739e-116">A taxa do volume entre os alto-falantes esquerdo e direito em um intervalo entre -1 e 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-116">The ratio of volume across the left and right speakers in a range between -1 and 1.</span>
          </span>
          <span data-ttu-id="c739e-117">O padrão é 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-117">The default is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c739e-118">Um valor -1 representa 100% dos alto-falantes do lado esquerdo e 1 representa 100% dos alto-falantes do lado direito.</span><span class="sxs-lookup"><span data-stu-id="c739e-118">A value of -1 represents 100% of the left side speakers and 1 represents 100% of the right side speakers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferingEnded">
      <MemberSignature Language="C#" Value="public event EventHandler BufferingEnded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BufferingEnded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.MediaPlayer.BufferingEnded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BufferingEnded As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BufferingEnded;" />
      <MemberSignature Language="F#" Value="member this.BufferingEnded : EventHandler " Usage="member this.BufferingEnded : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c739e-119">Ocorre quando o buffer foi concluído.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-119">Occurs when buffering has finished.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferingProgress">
      <MemberSignature Language="C#" Value="public double BufferingProgress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 BufferingProgress" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.BufferingProgress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BufferingProgress As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double BufferingProgress { double get(); };" />
      <MemberSignature Language="F#" Value="member this.BufferingProgress : double" Usage="System.Windows.Media.MediaPlayer.BufferingProgress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c739e-120">Obtém o percentual de buffer concluído para o conteúdo de streaming.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-120">Gets the percentage of buffering completed for streaming content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c739e-121">A porcentagem de buffer concluído para streaming de conteúdo representado em um valor entre 0 e 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-121">The percentage of buffering completed for streaming content represented in a value between 0 and 1.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferingStarted">
      <MemberSignature Language="C#" Value="public event EventHandler BufferingStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BufferingStarted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.MediaPlayer.BufferingStarted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BufferingStarted As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BufferingStarted;" />
      <MemberSignature Language="F#" Value="member this.BufferingStarted : EventHandler " Usage="member this.BufferingStarted : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c739e-122">Ocorre quando o buffer foi iniciado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-122">Occurs when buffering has started.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanPause">
      <MemberSignature Language="C#" Value="public bool CanPause { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanPause" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.CanPause" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanPause As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanPause { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanPause : bool" Usage="System.Windows.Media.MediaPlayer.CanPause" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c739e-123">Obtém um valor que indica se a mídia pode ser colocada em pausa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-123">Gets a value indicating whether the media can be paused.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c739e-124">True se a mídia pode ser pausada; Caso contrário, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-124">true if the media can be paused; otherwise, false.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clock">
      <MemberSignature Language="C#" Value="public System.Windows.Media.MediaClock Clock { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.MediaClock Clock" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.Clock" />
      <MemberSignature Language="VB.NET" Value="Public Property Clock As MediaClock" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::MediaClock ^ Clock { System::Windows::Media::MediaClock ^ get(); void set(System::Windows::Media::MediaClock ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Clock : System.Windows.Media.MediaClock with get, set" Usage="System.Windows.Media.MediaPlayer.Clock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.MediaClock</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c739e-125">Obtém ou define o <see cref="T:System.Windows.Media.MediaClock" /> associado ao <see cref="T:System.Windows.Media.MediaTimeline" /> a ser reproduzido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-125">Gets or sets the <see cref="T:System.Windows.Media.MediaClock" /> associated with the <see cref="T:System.Windows.Media.MediaTimeline" /> to be played.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c739e-126">O relógio associado ao <see cref="T:System.Windows.Media.MediaTimeline" /> a ser reproduzido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-126">The clock associated with the <see cref="T:System.Windows.Media.MediaTimeline" /> to be played.</span>
          </span>
          <span data-ttu-id="c739e-127">O padrão é nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-127">The default is null.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c739e-128">Definir essa propriedade informa o <xref:System.Windows.Media.MediaPlayer> seja controlado por relógio e utilizará o mecanismo de tempo, colocando o player no modo relógio.</span><span class="sxs-lookup"><span data-stu-id="c739e-128">Setting this property tells the <xref:System.Windows.Media.MediaPlayer> to be clock driven and will utilize the timing engine, placing the player in Clock mode.</span></span> <span data-ttu-id="c739e-129">Qualquer mídia em execução é interrompida e o <xref:System.Uri> associado ao novo relógio é aberto.</span><span class="sxs-lookup"><span data-stu-id="c739e-129">Any media that is playing is stopped and the <xref:System.Uri> associated with the new clock is opened.</span></span>  
  
 <span data-ttu-id="c739e-130">Quando o player está no modo relógio, busca usando <xref:System.Windows.Media.MediaPlayer.Position%2A> ou chamando o <xref:System.Windows.Media.MediaPlayer.Play%2A>, <xref:System.Windows.Media.MediaPlayer.Pause%2A>, ou <xref:System.Windows.Media.MediaPlayer.Stop%2A> métodos lançará um <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="c739e-130">When the player is in clock mode, seeking using <xref:System.Windows.Media.MediaPlayer.Position%2A> or calling the <xref:System.Windows.Media.MediaPlayer.Play%2A>, <xref:System.Windows.Media.MediaPlayer.Pause%2A>, or <xref:System.Windows.Media.MediaPlayer.Stop%2A> methods will throw an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="c739e-131">Essas operações estão disponíveis somente quando o jogador <xref:System.Windows.Media.MediaPlayer.Clock%2A> é nulo.</span><span class="sxs-lookup"><span data-stu-id="c739e-131">These operations are only available when the player <xref:System.Windows.Media.MediaPlayer.Clock%2A> is null.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCore">
      <MemberSignature Language="C#" Value="protected override void CloneCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.CloneCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member CloneCore : System.Windows.Freezable -&gt; unit&#xA;override this.CloneCore : System.Windows.Freezable -&gt; unit" Usage="mediaPlayer.CloneCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">
          <span data-ttu-id="c739e-132">O <see cref="T:System.Windows.Media.MediaPlayer" /> a ser clonado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-132">The <see cref="T:System.Windows.Media.MediaPlayer" /> to clone.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c739e-133">Torna essa instância uma cópia profunda do <see cref="T:System.Windows.Media.MediaPlayer" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-133">Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.MediaPlayer" />.</span>
          </span>
          <span data-ttu-id="c739e-134">Ao copiar as propriedades de dependência, esse método copia associações de dados e referências de recurso (mas eles não podem mais resolver), mas não animações ou seus valores atuais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-134">When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c739e-135">Esse método é chamado pelo <xref:System.Windows.Freezable.Clone%2A> método e não deve ser chamado diretamente do seu código de exceção ao chamar a implementação base ao substituir esse método.</span><span class="sxs-lookup"><span data-stu-id="c739e-135">This method is called by the <xref:System.Windows.Freezable.Clone%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="c739e-136">Para criar uma cópia modificável do objeto atual, chame <xref:System.Windows.Freezable.Clone%2A> em vez de chamar este método diretamente.</span><span class="sxs-lookup"><span data-stu-id="c739e-136">To create a modifiable copy of the current object, call <xref:System.Windows.Freezable.Clone%2A> instead of calling this method directly.</span></span>  
  
 <span data-ttu-id="c739e-137">Para obter mais informações, consulte <xref:System.Windows.Freezable.CloneCore%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c739e-137">For more information, see <xref:System.Windows.Freezable.CloneCore%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValueCore">
      <MemberSignature Language="C#" Value="protected override void CloneCurrentValueCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCurrentValueCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.CloneCurrentValueCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCurrentValueCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCurrentValueCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member CloneCurrentValueCore : System.Windows.Freezable -&gt; unit&#xA;override this.CloneCurrentValueCore : System.Windows.Freezable -&gt; unit" Usage="mediaPlayer.CloneCurrentValueCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">
          <span data-ttu-id="c739e-138">O <see cref="T:System.Windows.Media.MediaPlayer" /> a ser clonado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-138">The <see cref="T:System.Windows.Media.MediaPlayer" /> to clone.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c739e-139">Torna essa instância uma cópia profunda modificável do <see cref="T:System.Windows.Media.MediaPlayer" /> especificado usando os valores de propriedade atuais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-139">Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.MediaPlayer" /> using current property values.</span>
          </span>
          <span data-ttu-id="c739e-140">Referências a recursos, vinculações de dados e animações não são copiadas, mas seus valores atuais são.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-140">Resource references, data bindings, and animations are not copied, but their current values are.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c739e-141">Esse método é chamado pelo <xref:System.Windows.Freezable.CloneCurrentValue%2A> método e não deve ser chamado diretamente do seu código de exceção ao chamar a implementação base ao substituir esse método.</span><span class="sxs-lookup"><span data-stu-id="c739e-141">This method is called by the <xref:System.Windows.Freezable.CloneCurrentValue%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="c739e-142">Para criar uma cópia modificável do objeto atual, chame <xref:System.Windows.Freezable.CloneCurrentValue%2A> em vez de chamar este método diretamente.</span><span class="sxs-lookup"><span data-stu-id="c739e-142">To create a modifiable copy of the current object, call <xref:System.Windows.Freezable.CloneCurrentValue%2A> instead of calling this method directly.</span></span>  
  
 <span data-ttu-id="c739e-143">Para obter mais informações, consulte <xref:System.Windows.Freezable.CloneCurrentValueCore%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c739e-143">For more information, see <xref:System.Windows.Freezable.CloneCurrentValueCore%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="mediaPlayer.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c739e-144">Fecha a mídia subjacente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-144">Closes the underlying media.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c739e-145">O <xref:System.Windows.Media.MediaPlayer> pode ser novamente aberta chamando o <xref:System.Windows.Media.MediaPlayer.Open%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c739e-145">The <xref:System.Windows.Media.MediaPlayer> can be opened again by calling the <xref:System.Windows.Media.MediaPlayer.Open%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceCore : unit -&gt; System.Windows.Freezable&#xA;override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="mediaPlayer.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c739e-146">Cria uma nova instância <see cref="T:System.Windows.Media.MediaPlayer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-146">Creates a new <see cref="T:System.Windows.Media.MediaPlayer" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c739e-147">Uma nova instância de <see cref="T:System.Windows.Media.MediaPlayer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-147">A new <see cref="T:System.Windows.Media.MediaPlayer" /> instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadProgress">
      <MemberSignature Language="C#" Value="public double DownloadProgress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 DownloadProgress" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.DownloadProgress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DownloadProgress As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double DownloadProgress { double get(); };" />
      <MemberSignature Language="F#" Value="member this.DownloadProgress : double" Usage="System.Windows.Media.MediaPlayer.DownloadProgress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c739e-148">Obtém o percentual de andamento do download para o conteúdo localizado em um servidor remoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-148">Gets the percentage of download progress for content located at a remote server.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c739e-149">A porcentagem de andamento do download de conteúdo localizado em um servidor remoto representado por um valor entre 0 e 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-149">The percentage of download progress for content located at a remote server represented by a value between 0 and 1.</span>
          </span>
          <span data-ttu-id="c739e-150">O padrão é 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-150">The default is 0.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.GetAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member GetAsFrozenCore : System.Windows.Freezable -&gt; unit&#xA;override this.GetAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="mediaPlayer.GetAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">
          <span data-ttu-id="c739e-151">O objeto <see cref="T:System.Windows.Media.MediaPlayer" /> a ser clonado e congelado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-151">The <see cref="T:System.Windows.Media.MediaPlayer" /> object to clone and freeze.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c739e-152">Torna essa instância um clone do objeto <see cref="T:System.Windows.Media.MediaPlayer" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-152">Makes this instance a clone of the specified <see cref="T:System.Windows.Media.MediaPlayer" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c739e-153">Ao copiar as propriedades de dependência, esse método copia associações de dados e referências de recurso (mas eles não podem mais resolver), mas não animações ou seus valores atuais.</span><span class="sxs-lookup"><span data-stu-id="c739e-153">When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</span></span> <span data-ttu-id="c739e-154">Observe que, se essas propriedades contêm referências de recursos ou associações de dados <xref:System.Windows.Freezable.GetAsFrozen%2A> falhará quando tentar congelar o objeto e lançará um <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="c739e-154">Note that if these properties contain resource references or data bindings, <xref:System.Windows.Freezable.GetAsFrozen%2A> will fail when trying to freeze the object and will throw an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="c739e-155">Esse método é chamado pelo <xref:System.Windows.Freezable.GetAsFrozen%2A> método e não deve ser chamado diretamente do seu código de exceção ao chamar a implementação base ao substituir esse método.</span><span class="sxs-lookup"><span data-stu-id="c739e-155">This method is called by the <xref:System.Windows.Freezable.GetAsFrozen%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="c739e-156">Para criar uma cópia congelada do objeto atual, chame <xref:System.Windows.Freezable.GetAsFrozen%2A> em vez de chamar este método diretamente.</span><span class="sxs-lookup"><span data-stu-id="c739e-156">To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetAsFrozen%2A> instead of calling this method directly.</span></span>  
  
 <span data-ttu-id="c739e-157">Para obter mais informações, consulte <xref:System.Windows.Freezable.GetAsFrozenCore%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c739e-157">For more information, see <xref:System.Windows.Freezable.GetAsFrozenCore%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAudio">
      <MemberSignature Language="C#" Value="public bool HasAudio { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAudio" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.HasAudio" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasAudio As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasAudio { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasAudio : bool" Usage="System.Windows.Media.MediaPlayer.HasAudio" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c739e-158">Obtém um valor que indica se a mídia tem saída de áudio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-158">Gets a value that indicating whether the media has audio output.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c739e-159">True se a mídia tem saída de áudio; Caso contrário, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-159">true if the media has audio output; otherwise, false.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasVideo">
      <MemberSignature Language="C#" Value="public bool HasVideo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasVideo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.HasVideo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasVideo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasVideo { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasVideo : bool" Usage="System.Windows.Media.MediaPlayer.HasVideo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c739e-160">Obtém um valor que indica se a mídia tem saída de vídeo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-160">Gets a value that indicates whether the media has video output.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c739e-161">true se a mídia tiver saída de vídeo; caso contrário, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-161">true if the media has video output; otherwise, false.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBuffering">
      <MemberSignature Language="C#" Value="public bool IsBuffering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBuffering" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.IsBuffering" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBuffering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBuffering { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBuffering : bool" Usage="System.Windows.Media.MediaPlayer.IsBuffering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c739e-162">Obtém um valor que indica se a mídia está armazenando em buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-162">Gets a value that indicates whether the media is buffering.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c739e-163">True se a mídia de armazenamento em buffer; Caso contrário, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-163">true if the media is buffering; otherwise, false.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMuted">
      <MemberSignature Language="C#" Value="public bool IsMuted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMuted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.IsMuted" />
      <MemberSignature Language="VB.NET" Value="Public Property IsMuted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMuted { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsMuted : bool with get, set" Usage="System.Windows.Media.MediaPlayer.IsMuted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c739e-164">Obtém um valor que indica se a mídia é silenciada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-164">Gets a value that indicates whether the media is muted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c739e-165">True se a mídia é silenciada; Caso contrário, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-165">true if the media is muted; otherwise, false.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MediaEnded">
      <MemberSignature Language="C#" Value="public event EventHandler MediaEnded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MediaEnded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.MediaPlayer.MediaEnded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MediaEnded As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MediaEnded;" />
      <MemberSignature Language="F#" Value="member this.MediaEnded : EventHandler " Usage="member this.MediaEnded : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c739e-166">Ocorre quando a mídia conclui a reprodução.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-166">Occurs when the media has finished playback.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MediaFailed">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Media.ExceptionEventArgs&gt; MediaFailed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Media.ExceptionEventArgs&gt; MediaFailed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.MediaPlayer.MediaFailed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MediaFailed As EventHandler(Of ExceptionEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Media::ExceptionEventArgs ^&gt; ^ MediaFailed;" />
      <MemberSignature Language="F#" Value="member this.MediaFailed : EventHandler&lt;System.Windows.Media.ExceptionEventArgs&gt; " Usage="member this.MediaFailed : System.EventHandler&lt;System.Windows.Media.ExceptionEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Media.ExceptionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c739e-167">Ocorre quando um erro é encontrado</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-167">Occurs when an error is encountered</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MediaFailed"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c739e-168">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c739e-168">XAML Attribute Usage</span></span>  
  
```  
<object MediaFailed="EventHandler"/>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MediaOpened">
      <MemberSignature Language="C#" Value="public event EventHandler MediaOpened;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MediaOpened" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.MediaPlayer.MediaOpened" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MediaOpened As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MediaOpened;" />
      <MemberSignature Language="F#" Value="member this.MediaOpened : EventHandler " Usage="member this.MediaOpened : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c739e-169">Ocorre quando a mídia é aberta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-169">Occurs when the media is opened.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NaturalDuration">
      <MemberSignature Language="C#" Value="public System.Windows.Duration NaturalDuration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Duration NaturalDuration" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.NaturalDuration" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NaturalDuration As Duration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Duration NaturalDuration { System::Windows::Duration get(); };" />
      <MemberSignature Language="F#" Value="member this.NaturalDuration : System.Windows.Duration" Usage="System.Windows.Media.MediaPlayer.NaturalDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Duration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c739e-170">Obtém a duração normal da mídia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-170">Gets the natural duration of the media.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c739e-171">A duração normal da mídia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-171">The natural duration of the media.</span>
          </span>
          <span data-ttu-id="c739e-172">O padrão é <see cref="P:System.Windows.Duration.Automatic" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-172">The default is <see cref="P:System.Windows.Duration.Automatic" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c739e-173"><xref:System.Windows.Media.MediaPlayer.NaturalDuration%2A> não pode ser determinada até após <xref:System.Windows.Media.MediaPlayer.MediaOpened> ocorreu.</span><span class="sxs-lookup"><span data-stu-id="c739e-173"><xref:System.Windows.Media.MediaPlayer.NaturalDuration%2A> cannot be determined until after <xref:System.Windows.Media.MediaPlayer.MediaOpened> has occurred.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NaturalVideoHeight">
      <MemberSignature Language="C#" Value="public int NaturalVideoHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NaturalVideoHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.NaturalVideoHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NaturalVideoHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NaturalVideoHeight { int get(); };" />
      <MemberSignature Language="F#" Value="member this.NaturalVideoHeight : int" Usage="System.Windows.Media.MediaPlayer.NaturalVideoHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c739e-174">Obtém a altura de pixel do vídeo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-174">Gets the pixel height of the video.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c739e-175">A altura de pixel do vídeo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-175">The pixel height of the video.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c739e-176">NULL será retornado se o tipo de mídia é áudio.</span><span class="sxs-lookup"><span data-stu-id="c739e-176">Null is returned if the media type is audio.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NaturalVideoWidth">
      <MemberSignature Language="C#" Value="public int NaturalVideoWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NaturalVideoWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.NaturalVideoWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NaturalVideoWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NaturalVideoWidth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.NaturalVideoWidth : int" Usage="System.Windows.Media.MediaPlayer.NaturalVideoWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c739e-177">Obtém a largura de pixel do vídeo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-177">Gets the pixel width of the video.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c739e-178">A largura de pixel do vídeo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-178">The pixel width of the video.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c739e-179">NULL será retornado se o tipo de mídia é áudio.</span><span class="sxs-lookup"><span data-stu-id="c739e-179">Null is returned if the media type is audio.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public void Open (Uri source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Open(class System.Uri source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.Open(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Open (source As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Open(Uri ^ source);" />
      <MemberSignature Language="F#" Value="member this.Open : Uri -&gt; unit" Usage="mediaPlayer.Open source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="c739e-180">A origem de mídia <see cref="T:System.Uri" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-180">The media source <see cref="T:System.Uri" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c739e-181">Abre o <see cref="T:System.Uri" /> determinado para reprodução de mídia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-181">Opens the given <see cref="T:System.Uri" /> for media playback.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.Pause" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause();" />
      <MemberSignature Language="F#" Value="member this.Pause : unit -&gt; unit" Usage="mediaPlayer.Pause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c739e-182">Pausa a reprodução de mídia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-182">Pauses media playback.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c739e-183">Chamando <xref:System.Windows.Media.MediaPlayer.Pause%2A> quando um player deve possuir um <xref:System.Windows.Media.MediaPlayer.Clock%2A> lançará um <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="c739e-183">Calling <xref:System.Windows.Media.MediaPlayer.Pause%2A> when a player has an associated <xref:System.Windows.Media.MediaPlayer.Clock%2A> will throw an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="c739e-184"><xref:System.Windows.Media.MediaPlayer.Pause%2A> não pode ser chamado enquanto o mecanismo de temporização conduz a reprodução de mídia.</span><span class="sxs-lookup"><span data-stu-id="c739e-184"><xref:System.Windows.Media.MediaPlayer.Pause%2A> cannot be called while the timing engine drives media playback.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Play">
      <MemberSignature Language="C#" Value="public void Play ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Play() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.Play" />
      <MemberSignature Language="VB.NET" Value="Public Sub Play ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Play();" />
      <MemberSignature Language="F#" Value="member this.Play : unit -&gt; unit" Usage="mediaPlayer.Play " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c739e-185">Reproduz a mídia do <see cref="P:System.Windows.Media.MediaPlayer.Position" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-185">Plays media from the current <see cref="P:System.Windows.Media.MediaPlayer.Position" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c739e-186">Chamando <xref:System.Windows.Media.MediaPlayer.Play%2A> quando um player deve possuir um <xref:System.Windows.Media.MediaPlayer.Clock%2A> lançará um <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="c739e-186">Calling <xref:System.Windows.Media.MediaPlayer.Play%2A> when a player has an associated <xref:System.Windows.Media.MediaPlayer.Clock%2A> will throw an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="c739e-187"><xref:System.Windows.Media.MediaPlayer.Play%2A> não pode ser chamado enquanto o mecanismo de temporização conduz a reprodução de mídia.</span><span class="sxs-lookup"><span data-stu-id="c739e-187"><xref:System.Windows.Media.MediaPlayer.Play%2A> cannot be called while the timing engine drives media playback.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public TimeSpan Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Position" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.Position" />
      <MemberSignature Language="VB.NET" Value="Public Property Position As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan Position { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.Position : TimeSpan with get, set" Usage="System.Windows.Media.MediaPlayer.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c739e-188">Obtém ou define a posição atual da mídia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-188">Gets or sets the current position of the media.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c739e-189">A posição atual da mídia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-189">The current position of the media.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c739e-190">Se o jogador deve possuir um <xref:System.Windows.Media.MediaPlayer.Clock%2A>, definindo <xref:System.Windows.Media.MediaPlayer.Position%2A> lançará um <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="c739e-190">If the player has an associated <xref:System.Windows.Media.MediaPlayer.Clock%2A>, setting <xref:System.Windows.Media.MediaPlayer.Position%2A> will throw an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="c739e-191"><xref:System.Windows.Media.MediaPlayer.Position%2A> não é possível definir o mecanismo de temporização conduz a reprodução de mídia.</span><span class="sxs-lookup"><span data-stu-id="c739e-191"><xref:System.Windows.Media.MediaPlayer.Position%2A> cannot be set while the timing engine drives media playback.</span></span>  
  
<a name="xamlTextUsage_Position"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="c739e-192">Uso de texto XAML</span><span class="sxs-lookup"><span data-stu-id="c739e-192">XAML Text Usage</span></span>  
 <span data-ttu-id="c739e-193">Não é usado normalmente em [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="c739e-193">Not typically used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadPreamble">
      <MemberSignature Language="C#" Value="protected void ReadPreamble ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ReadPreamble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.ReadPreamble" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ReadPreamble ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ReadPreamble();" />
      <MemberSignature Language="F#" Value="member this.ReadPreamble : unit -&gt; unit" Usage="mediaPlayer.ReadPreamble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c739e-194">Garante que o MediaPlayer esteja sendo acessado de um thread válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-194">Ensures that the MediaPlayer is being accessed from a valid thread.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScriptCommand">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Media.MediaScriptCommandEventArgs&gt; ScriptCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Media.MediaScriptCommandEventArgs&gt; ScriptCommand" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.MediaPlayer.ScriptCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ScriptCommand As EventHandler(Of MediaScriptCommandEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Media::MediaScriptCommandEventArgs ^&gt; ^ ScriptCommand;" />
      <MemberSignature Language="F#" Value="member this.ScriptCommand : EventHandler&lt;System.Windows.Media.MediaScriptCommandEventArgs&gt; " Usage="member this.ScriptCommand : System.EventHandler&lt;System.Windows.Media.MediaScriptCommandEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Media.MediaScriptCommandEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c739e-195">Ocorre quando um comando de script foi encontrado na mídia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-195">Occurs when a script command has been encountered within the media.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_ScriptCommand"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c739e-196">Uso do Atributo XAML</span><span class="sxs-lookup"><span data-stu-id="c739e-196">XAML Attribute Usage</span></span>  
  
```  
<object ScriptCommand="EventHandler"/>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrubbingEnabled">
      <MemberSignature Language="C#" Value="public bool ScrubbingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ScrubbingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.ScrubbingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrubbingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ScrubbingEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ScrubbingEnabled : bool with get, set" Usage="System.Windows.Media.MediaPlayer.ScrubbingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c739e-197">Obtém ou define um valor que indica se a remoção está habilitada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-197">Gets or sets a value that indicates whether scrubbing is enabled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c739e-198">
            <see langword="true" /> se a anulação estiver habilitada; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-198">
              <see langword="true" /> if scrubbing is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public Uri Source { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.Source" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Source As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Source { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Source : Uri" Usage="System.Windows.Media.MediaPlayer.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c739e-199">Obtém a mídia <see cref="T:System.Uri" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-199">Gets the media <see cref="T:System.Uri" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c739e-200">A mídia <see cref="T:System.Uri" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-200">The current media <see cref="T:System.Uri" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c739e-201"><xref:System.Windows.Media.MediaPlayer.Source%2A> é somente leitura.</span><span class="sxs-lookup"><span data-stu-id="c739e-201"><xref:System.Windows.Media.MediaPlayer.Source%2A> is read-only.</span></span> <span data-ttu-id="c739e-202">Essa propriedade obtém a <xref:System.Uri> que é aberto por meio das <xref:System.Windows.Media.MediaPlayer.Open%2A> método ou o <xref:System.Uri> associado com o <xref:System.Windows.Media.MediaPlayer.Clock%2A>.</span><span class="sxs-lookup"><span data-stu-id="c739e-202">This property gets the <xref:System.Uri> that is opened through the <xref:System.Windows.Media.MediaPlayer.Open%2A> method or the <xref:System.Uri> associated with the <xref:System.Windows.Media.MediaPlayer.Clock%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeedRatio">
      <MemberSignature Language="C#" Value="public double SpeedRatio { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SpeedRatio" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.SpeedRatio" />
      <MemberSignature Language="VB.NET" Value="Public Property SpeedRatio As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SpeedRatio { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.SpeedRatio : double with get, set" Usage="System.Windows.Media.MediaPlayer.SpeedRatio" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c739e-203">Obtém ou define a taxa de velocidade em que mídia é reproduzida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-203">Gets or sets the ratio of speed that media is played at.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c739e-204">A taxa de velocidade que a mídia é reproduzida back representado por um valor entre 0 e o maior valor duplo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-204">The ratio of speed that media is played back represented by a value between 0 and the largest double value.</span>
          </span>
          <span data-ttu-id="c739e-205">O padrão é 1.0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-205">The default is 1.0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c739e-206">Os valores de menos de um yield mais lento do que a reprodução normal, enquanto valores maiores que um produz mais rápido do que a reprodução normal.</span><span class="sxs-lookup"><span data-stu-id="c739e-206">Values less than one yield slower than normal playback while values greater than one yields faster than normal playback.</span></span>  
  
 <span data-ttu-id="c739e-207">Se o jogador deve possuir um <xref:System.Windows.Media.MediaPlayer.Clock%2A>, definindo <xref:System.Windows.Media.MediaPlayer.SpeedRatio%2A> não é permitido.</span><span class="sxs-lookup"><span data-stu-id="c739e-207">If the player has an associated <xref:System.Windows.Media.MediaPlayer.Clock%2A>, setting <xref:System.Windows.Media.MediaPlayer.SpeedRatio%2A> is not allowed.</span></span> <span data-ttu-id="c739e-208"><xref:System.Windows.Media.MediaPlayer.SpeedRatio%2A> não é possível definir o mecanismo de temporização conduz a reprodução de mídia.</span><span class="sxs-lookup"><span data-stu-id="c739e-208"><xref:System.Windows.Media.MediaPlayer.SpeedRatio%2A> cannot be set while the timing engine drives media playback.</span></span>  
  
 <span data-ttu-id="c739e-209">Quando não há garantia de reprodução de áudio <xref:System.Windows.Controls.MediaElement.SpeedRatio%2A> não é `1`.</span><span class="sxs-lookup"><span data-stu-id="c739e-209">Audio playback is not guaranteed when <xref:System.Windows.Controls.MediaElement.SpeedRatio%2A> is not `1`.</span></span>  
  
<a name="xamlTextUsage_SpeedRatio"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="c739e-210">Uso de texto XAML</span><span class="sxs-lookup"><span data-stu-id="c739e-210">XAML Text Usage</span></span>  
 <span data-ttu-id="c739e-211">Não é usado normalmente em [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="c739e-211">Not typically used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="mediaPlayer.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c739e-212">Interrompe a reprodução de mídia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-212">Stops media playback.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c739e-213">Chamando <xref:System.Windows.Media.MediaPlayer.Stop%2A> quando um player deve possuir um <xref:System.Windows.Media.MediaPlayer.Clock%2A> lançará um <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="c739e-213">Calling <xref:System.Windows.Media.MediaPlayer.Stop%2A> when a player has an associated <xref:System.Windows.Media.MediaPlayer.Clock%2A> will throw an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="c739e-214"><xref:System.Windows.Media.MediaPlayer.Stop%2A> não pode ser chamado enquanto o mecanismo de temporização conduz a reprodução de mídia.</span><span class="sxs-lookup"><span data-stu-id="c739e-214"><xref:System.Windows.Media.MediaPlayer.Stop%2A> cannot be called while the timing engine drives media playback.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Volume">
      <MemberSignature Language="C#" Value="public double Volume { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Volume" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.Volume" />
      <MemberSignature Language="VB.NET" Value="Public Property Volume As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Volume { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Volume : double with get, set" Usage="System.Windows.Media.MediaPlayer.Volume" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c739e-215">Obtém ou define o volume de mídia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-215">Gets or sets the media's volume.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c739e-216">O volume de mídia representado em uma escala linear entre 0 e 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-216">The media's volume represented on a linear scale between 0 and 1.</span>
          </span>
          <span data-ttu-id="c739e-217">O padrão é 0,5.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-217">The default is 0.5.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlTextUsage_Volume"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="c739e-218">Uso de texto XAML</span><span class="sxs-lookup"><span data-stu-id="c739e-218">XAML Text Usage</span></span>  
 <span data-ttu-id="c739e-219">Não é usado normalmente em [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="c739e-219">Not typically used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WritePreamble">
      <MemberSignature Language="C#" Value="protected void WritePreamble ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WritePreamble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.WritePreamble" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WritePreamble ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WritePreamble();" />
      <MemberSignature Language="F#" Value="member this.WritePreamble : unit -&gt; unit" Usage="mediaPlayer.WritePreamble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c739e-220">Verifica se o MediaPlayer não está congelado e está sendo acessado de um contexto de threading válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c739e-220">Verifies that the MediaPlayer is not frozen and that it is being accessed from a valid threading context.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>