<Type Name="GlyphRun" FullName="System.Windows.Media.GlyphRun">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ec532137ce335b92af39163c5b08bd86c80bee4e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36468324" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class GlyphRun : System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GlyphRun extends System.Object implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.GlyphRun" />
  <TypeSignature Language="VB.NET" Value="Public Class GlyphRun&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class GlyphRun : System::ComponentModel::ISupportInitialize" />
  <TypeSignature Language="F#" Value="type GlyphRun = class&#xA;    interface DUCE.IResource&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="cc25c-101">Representa uma sequência de glifos de uma única face de uma única fonte em um tamanho único, com um único estilo de renderização.</span>
      <span class="sxs-lookup">
        <span data-stu-id="cc25c-101">Represents a sequence of glyphs from a single face of a single font at a single size, and with a single rendering style.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc25c-102">O <xref:System.Windows.Media.GlyphRun> objeto inclui detalhes da fonte como índices de glyph e posições glifo individuais.</span><span class="sxs-lookup"><span data-stu-id="cc25c-102">The <xref:System.Windows.Media.GlyphRun> object includes font details such as glyph indices and individual glyph positions.</span></span> <span data-ttu-id="cc25c-103">Além disso, o <xref:System.Windows.Media.GlyphRun> objeto contém os pontos de código Unicode originais a execução foi gerada, informações de mapeamento e sinalizadores por caracteres e por glifo de deslocamento de caractere para o buffer de glifo.</span><span class="sxs-lookup"><span data-stu-id="cc25c-103">In addition, The <xref:System.Windows.Media.GlyphRun> object contains the original Unicode code points the run was generated from, character to glyph buffer offset mapping information, and per-character and per-glyph flags.</span></span>  
  
 <span data-ttu-id="cc25c-104">O <xref:System.Windows.Documents.Glyphs> elemento representa a saída de um <xref:System.Windows.Media.GlyphRun> em XAML.</span><span class="sxs-lookup"><span data-stu-id="cc25c-104">The <xref:System.Windows.Documents.Glyphs> element represents the output of a <xref:System.Windows.Media.GlyphRun> in XAML.</span></span> <span data-ttu-id="cc25c-105">A seguinte sintaxe de marcação é usada para descrever o <xref:System.Windows.Documents.Glyphs> elemento.</span><span class="sxs-lookup"><span data-stu-id="cc25c-105">The following markup syntax is used to describe the <xref:System.Windows.Documents.Glyphs> element.</span></span>  
  
 [!code-xaml[GlyphsOvwSample1#1](~/samples/snippets/csharp/VS_Snippets_Wpf/GlyphsOvwSample1/CS/default.xaml#1)]   
  
 <span data-ttu-id="cc25c-106">Cada glifo define métricas que especificam como ele se alinha com outros <xref:System.Windows.Documents.Glyphs>.</span><span class="sxs-lookup"><span data-stu-id="cc25c-106">Each glyph defines metrics that specify how it aligns with other <xref:System.Windows.Documents.Glyphs>.</span></span> <span data-ttu-id="cc25c-107">O gráfico a seguir define as várias qualidades tipográficas de dois caracteres de glifo diferentes.</span><span class="sxs-lookup"><span data-stu-id="cc25c-107">The following graphic defines the various typographic qualities of two different glyph characters.</span></span>  
  
 <span data-ttu-id="cc25c-108">![Diagrama de gráfico de medidas de glifo](~/add/media/glyph-example.png "Diagrama gráfico de medidas de glifo")</span><span class="sxs-lookup"><span data-stu-id="cc25c-108">![Diagraph of glyph measurements](~/add/media/glyph-example.png "Diagraph of glyph measurements")</span></span>  
<span data-ttu-id="cc25c-109">Várias qualidades tipográficas de dois caracteres de glifo diferentes</span><span class="sxs-lookup"><span data-stu-id="cc25c-109">Various typographic qualities of two different glyph characters</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cc25c-110">Inicializa uma nova instância da classe <see cref="T:System.Windows.Media.GlyphRun" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-110">Initializes a new instance of the <see cref="T:System.Windows.Media.GlyphRun" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GlyphRun ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.GlyphRun.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GlyphRun();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use the PixelsPerDip override", false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cc25c-111">Inicializa uma nova instância da classe <see cref="T:System.Windows.Media.GlyphRun" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-111">Initializes a new instance of the <see cref="T:System.Windows.Media.GlyphRun" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GlyphRun (float pixelsPerDip);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 pixelsPerDip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.GlyphRun.#ctor(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pixelsPerDip As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GlyphRun(float pixelsPerDip);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.GlyphRun : single -&gt; System.Windows.Media.GlyphRun" Usage="new System.Windows.Media.GlyphRun pixelsPerDip" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pixelsPerDip" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pixelsPerDip">
          <span data-ttu-id="cc25c-112">O valor de Pixels por Pixel Independente de Densidade, que é o equivalente do fator de escala.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-112">The Pixels Per Density Independent Pixel value, which is the equivalent of the scale factor.</span>
          </span>
          <span data-ttu-id="cc25c-113">Por exemplo, se o DPI da tela for 120 (ou 1,25 porque 120/96 = 1,25), será desenhado 1,25 pixel por pixel independente de densidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-113">For example, if the DPI of a screen is 120 (or 1.25 because 120/96 = 1.25) , 1.25 pixel per density independent pixel is drawn.</span>
          </span>
          <span data-ttu-id="cc25c-114">DIP é a unidade de medida usada pelo WPF para ser independente da resolução do dispositivo e DPIs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-114">DIP is the unit of measurement used by WPF to be independent of device resolution and DPIs.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc25c-115">Inicializa uma nova instância da classe <see cref="T:System.Windows.Media.GlyphRun" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-115">Initializes a new instance of the <see cref="T:System.Windows.Media.GlyphRun" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GlyphRun (System.Windows.Media.GlyphTypeface glyphTypeface, int bidiLevel, bool isSideways, double renderingEmSize, System.Collections.Generic.IList&lt;ushort&gt; glyphIndices, System.Windows.Point baselineOrigin, System.Collections.Generic.IList&lt;double&gt; advanceWidths, System.Collections.Generic.IList&lt;System.Windows.Point&gt; glyphOffsets, System.Collections.Generic.IList&lt;char&gt; characters, string deviceFontName, System.Collections.Generic.IList&lt;ushort&gt; clusterMap, System.Collections.Generic.IList&lt;bool&gt; caretStops, System.Windows.Markup.XmlLanguage language);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Media.GlyphTypeface glyphTypeface, int32 bidiLevel, bool isSideways, float64 renderingEmSize, class System.Collections.Generic.IList`1&lt;unsigned int16&gt; glyphIndices, valuetype System.Windows.Point baselineOrigin, class System.Collections.Generic.IList`1&lt;float64&gt; advanceWidths, class System.Collections.Generic.IList`1&lt;valuetype System.Windows.Point&gt; glyphOffsets, class System.Collections.Generic.IList`1&lt;char&gt; characters, string deviceFontName, class System.Collections.Generic.IList`1&lt;unsigned int16&gt; clusterMap, class System.Collections.Generic.IList`1&lt;bool&gt; caretStops, class System.Windows.Markup.XmlLanguage language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.GlyphRun.#ctor(System.Windows.Media.GlyphTypeface,System.Int32,System.Boolean,System.Double,System.Collections.Generic.IList{System.UInt16},System.Windows.Point,System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Windows.Point},System.Collections.Generic.IList{System.Char},System.String,System.Collections.Generic.IList{System.UInt16},System.Collections.Generic.IList{System.Boolean},System.Windows.Markup.XmlLanguage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GlyphRun(System::Windows::Media::GlyphTypeface ^ glyphTypeface, int bidiLevel, bool isSideways, double renderingEmSize, System::Collections::Generic::IList&lt;System::UInt16&gt; ^ glyphIndices, System::Windows::Point baselineOrigin, System::Collections::Generic::IList&lt;double&gt; ^ advanceWidths, System::Collections::Generic::IList&lt;System::Windows::Point&gt; ^ glyphOffsets, System::Collections::Generic::IList&lt;char&gt; ^ characters, System::String ^ deviceFontName, System::Collections::Generic::IList&lt;System::UInt16&gt; ^ clusterMap, System::Collections::Generic::IList&lt;bool&gt; ^ caretStops, System::Windows::Markup::XmlLanguage ^ language);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.GlyphRun : System.Windows.Media.GlyphTypeface * int * bool * double * System.Collections.Generic.IList&lt;uint16&gt; * System.Windows.Point * System.Collections.Generic.IList&lt;double&gt; * System.Collections.Generic.IList&lt;System.Windows.Point&gt; * System.Collections.Generic.IList&lt;char&gt; * string * System.Collections.Generic.IList&lt;uint16&gt; * System.Collections.Generic.IList&lt;bool&gt; * System.Windows.Markup.XmlLanguage -&gt; System.Windows.Media.GlyphRun" Usage="new System.Windows.Media.GlyphRun (glyphTypeface, bidiLevel, isSideways, renderingEmSize, glyphIndices, baselineOrigin, advanceWidths, glyphOffsets, characters, deviceFontName, clusterMap, caretStops, language)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("Use the PixelsPerDip override", false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="glyphTypeface" Type="System.Windows.Media.GlyphTypeface" />
        <Parameter Name="bidiLevel" Type="System.Int32" />
        <Parameter Name="isSideways" Type="System.Boolean" />
        <Parameter Name="renderingEmSize" Type="System.Double" />
        <Parameter Name="glyphIndices" Type="System.Collections.Generic.IList&lt;System.UInt16&gt;" />
        <Parameter Name="baselineOrigin" Type="System.Windows.Point" />
        <Parameter Name="advanceWidths" Type="System.Collections.Generic.IList&lt;System.Double&gt;" />
        <Parameter Name="glyphOffsets" Type="System.Collections.Generic.IList&lt;System.Windows.Point&gt;" />
        <Parameter Name="characters" Type="System.Collections.Generic.IList&lt;System.Char&gt;" />
        <Parameter Name="deviceFontName" Type="System.String" />
        <Parameter Name="clusterMap" Type="System.Collections.Generic.IList&lt;System.UInt16&gt;" />
        <Parameter Name="caretStops" Type="System.Collections.Generic.IList&lt;System.Boolean&gt;" />
        <Parameter Name="language" Type="System.Windows.Markup.XmlLanguage" />
      </Parameters>
      <Docs>
        <param name="glyphTypeface">
          <span data-ttu-id="cc25c-116">Um valor do tipo <see cref="T:System.Windows.Media.GlyphTypeface" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-116">A value of type <see cref="T:System.Windows.Media.GlyphTypeface" />.</span>
          </span>
        </param>
        <param name="bidiLevel">
          <span data-ttu-id="cc25c-117">Um valor do tipo <see cref="T:System.Int32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-117">A value of type <see cref="T:System.Int32" />.</span>
          </span>
        </param>
        <param name="isSideways">
          <span data-ttu-id="cc25c-118">Um valor do tipo <see cref="T:System.Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-118">A value of type <see cref="T:System.Boolean" />.</span>
          </span>
        </param>
        <param name="renderingEmSize">
          <span data-ttu-id="cc25c-119">Um valor do tipo <see cref="T:System.Double" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-119">A value of type <see cref="T:System.Double" />.</span>
          </span>
        </param>
        <param name="glyphIndices">
          <span data-ttu-id="cc25c-120">Uma matriz do tipo <see cref="T:System.Collections.Generic.IList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-120">An array of type <see cref="T:System.Collections.Generic.IList`1" />.</span>
          </span>
        </param>
        <param name="baselineOrigin">
          <span data-ttu-id="cc25c-121">Um valor do tipo <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-121">A value of type <see cref="T:System.Windows.Point" />.</span>
          </span>
        </param>
        <param name="advanceWidths">
          <span data-ttu-id="cc25c-122">Uma matriz do tipo <see cref="T:System.Collections.Generic.IList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-122">An array of type <see cref="T:System.Collections.Generic.IList`1" />.</span>
          </span>
        </param>
        <param name="glyphOffsets">
          <span data-ttu-id="cc25c-123">Uma matriz do tipo <see cref="T:System.Collections.Generic.IList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-123">An array of type <see cref="T:System.Collections.Generic.IList`1" />.</span>
          </span>
        </param>
        <param name="characters">
          <span data-ttu-id="cc25c-124">Uma matriz do tipo <see cref="T:System.Collections.Generic.IList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-124">An array of type <see cref="T:System.Collections.Generic.IList`1" />.</span>
          </span>
        </param>
        <param name="deviceFontName">
          <span data-ttu-id="cc25c-125">Um valor do tipo <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-125">A value of type <see cref="T:System.String" />.</span>
          </span>
        </param>
        <param name="clusterMap">
          <span data-ttu-id="cc25c-126">Uma matriz do tipo <see cref="T:System.Collections.Generic.IList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-126">An array of type <see cref="T:System.Collections.Generic.IList`1" />.</span>
          </span>
        </param>
        <param name="caretStops">
          <span data-ttu-id="cc25c-127">Uma matriz do tipo <see cref="T:System.Collections.Generic.IList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-127">An array of type <see cref="T:System.Collections.Generic.IList`1" />.</span>
          </span>
        </param>
        <param name="language">
          <span data-ttu-id="cc25c-128">Um valor do tipo <see cref="T:System.Windows.Markup.XmlLanguage" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-128">A value of type <see cref="T:System.Windows.Markup.XmlLanguage" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc25c-129">Inicializa uma nova instância da classe <see cref="T:System.Windows.Media.GlyphRun" /> especificando propriedades da classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-129">Initializes a new instance of the <see cref="T:System.Windows.Media.GlyphRun" /> class by specifying properties of the class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GlyphRun (System.Windows.Media.GlyphTypeface glyphTypeface, int bidiLevel, bool isSideways, double renderingEmSize, float pixelsPerDip, System.Collections.Generic.IList&lt;ushort&gt; glyphIndices, System.Windows.Point baselineOrigin, System.Collections.Generic.IList&lt;double&gt; advanceWidths, System.Collections.Generic.IList&lt;System.Windows.Point&gt; glyphOffsets, System.Collections.Generic.IList&lt;char&gt; characters, string deviceFontName, System.Collections.Generic.IList&lt;ushort&gt; clusterMap, System.Collections.Generic.IList&lt;bool&gt; caretStops, System.Windows.Markup.XmlLanguage language);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Media.GlyphTypeface glyphTypeface, int32 bidiLevel, bool isSideways, float64 renderingEmSize, float32 pixelsPerDip, class System.Collections.Generic.IList`1&lt;unsigned int16&gt; glyphIndices, valuetype System.Windows.Point baselineOrigin, class System.Collections.Generic.IList`1&lt;float64&gt; advanceWidths, class System.Collections.Generic.IList`1&lt;valuetype System.Windows.Point&gt; glyphOffsets, class System.Collections.Generic.IList`1&lt;char&gt; characters, string deviceFontName, class System.Collections.Generic.IList`1&lt;unsigned int16&gt; clusterMap, class System.Collections.Generic.IList`1&lt;bool&gt; caretStops, class System.Windows.Markup.XmlLanguage language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.GlyphRun.#ctor(System.Windows.Media.GlyphTypeface,System.Int32,System.Boolean,System.Double,System.Single,System.Collections.Generic.IList{System.UInt16},System.Windows.Point,System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Windows.Point},System.Collections.Generic.IList{System.Char},System.String,System.Collections.Generic.IList{System.UInt16},System.Collections.Generic.IList{System.Boolean},System.Windows.Markup.XmlLanguage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GlyphRun(System::Windows::Media::GlyphTypeface ^ glyphTypeface, int bidiLevel, bool isSideways, double renderingEmSize, float pixelsPerDip, System::Collections::Generic::IList&lt;System::UInt16&gt; ^ glyphIndices, System::Windows::Point baselineOrigin, System::Collections::Generic::IList&lt;double&gt; ^ advanceWidths, System::Collections::Generic::IList&lt;System::Windows::Point&gt; ^ glyphOffsets, System::Collections::Generic::IList&lt;char&gt; ^ characters, System::String ^ deviceFontName, System::Collections::Generic::IList&lt;System::UInt16&gt; ^ clusterMap, System::Collections::Generic::IList&lt;bool&gt; ^ caretStops, System::Windows::Markup::XmlLanguage ^ language);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.GlyphRun : System.Windows.Media.GlyphTypeface * int * bool * double * single * System.Collections.Generic.IList&lt;uint16&gt; * System.Windows.Point * System.Collections.Generic.IList&lt;double&gt; * System.Collections.Generic.IList&lt;System.Windows.Point&gt; * System.Collections.Generic.IList&lt;char&gt; * string * System.Collections.Generic.IList&lt;uint16&gt; * System.Collections.Generic.IList&lt;bool&gt; * System.Windows.Markup.XmlLanguage -&gt; System.Windows.Media.GlyphRun" Usage="new System.Windows.Media.GlyphRun (glyphTypeface, bidiLevel, isSideways, renderingEmSize, pixelsPerDip, glyphIndices, baselineOrigin, advanceWidths, glyphOffsets, characters, deviceFontName, clusterMap, caretStops, language)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="glyphTypeface" Type="System.Windows.Media.GlyphTypeface" />
        <Parameter Name="bidiLevel" Type="System.Int32" />
        <Parameter Name="isSideways" Type="System.Boolean" />
        <Parameter Name="renderingEmSize" Type="System.Double" />
        <Parameter Name="pixelsPerDip" Type="System.Single" />
        <Parameter Name="glyphIndices" Type="System.Collections.Generic.IList&lt;System.UInt16&gt;" />
        <Parameter Name="baselineOrigin" Type="System.Windows.Point" />
        <Parameter Name="advanceWidths" Type="System.Collections.Generic.IList&lt;System.Double&gt;" />
        <Parameter Name="glyphOffsets" Type="System.Collections.Generic.IList&lt;System.Windows.Point&gt;" />
        <Parameter Name="characters" Type="System.Collections.Generic.IList&lt;System.Char&gt;" />
        <Parameter Name="deviceFontName" Type="System.String" />
        <Parameter Name="clusterMap" Type="System.Collections.Generic.IList&lt;System.UInt16&gt;" />
        <Parameter Name="caretStops" Type="System.Collections.Generic.IList&lt;System.Boolean&gt;" />
        <Parameter Name="language" Type="System.Windows.Markup.XmlLanguage" />
      </Parameters>
      <Docs>
        <param name="glyphTypeface">
          <span data-ttu-id="cc25c-130">Um valor do tipo <see cref="T:System.Windows.Media.GlyphTypeface" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-130">A value of type <see cref="T:System.Windows.Media.GlyphTypeface" />.</span>
          </span>
        </param>
        <param name="bidiLevel">
          <span data-ttu-id="cc25c-131">Um valor do tipo <see cref="T:System.Int32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-131">A value of type <see cref="T:System.Int32" />.</span>
          </span>
        </param>
        <param name="isSideways">
          <span data-ttu-id="cc25c-132">Um valor do tipo <see cref="T:System.Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-132">A value of type <see cref="T:System.Boolean" />.</span>
          </span>
        </param>
        <param name="renderingEmSize">
          <span data-ttu-id="cc25c-133">Um valor do tipo <see cref="T:System.Double" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-133">A  value of type <see cref="T:System.Double" />.</span>
          </span>
        </param>
        <param name="pixelsPerDip">
          <span data-ttu-id="cc25c-134">Um valor do tipo <see cref="T:System.Double" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-134">A  value of type <see cref="T:System.Double" />.</span>
          </span>
        </param>
        <param name="glyphIndices">
          <span data-ttu-id="cc25c-135">Uma matriz do tipo <see cref="T:System.Collections.Generic.IList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-135">An array of type <see cref="T:System.Collections.Generic.IList`1" />.</span>
          </span>
        </param>
        <param name="baselineOrigin">
          <span data-ttu-id="cc25c-136">Um valor do tipo <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-136">A value of type <see cref="T:System.Windows.Point" />.</span>
          </span>
        </param>
        <param name="advanceWidths">
          <span data-ttu-id="cc25c-137">Uma matriz do tipo <see cref="T:System.Collections.Generic.IList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-137">An array of type <see cref="T:System.Collections.Generic.IList`1" />.</span>
          </span>
        </param>
        <param name="glyphOffsets">
          <span data-ttu-id="cc25c-138">Uma matriz do tipo <see cref="T:System.Collections.Generic.IList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-138">An array of type <see cref="T:System.Collections.Generic.IList`1" />.</span>
          </span>
        </param>
        <param name="characters">
          <span data-ttu-id="cc25c-139">Uma matriz do tipo <see cref="T:System.Collections.Generic.IList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-139">An array of type <see cref="T:System.Collections.Generic.IList`1" />.</span>
          </span>
        </param>
        <param name="deviceFontName">
          <span data-ttu-id="cc25c-140">Um valor do tipo <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-140">A value of type <see cref="T:System.String" />.</span>
          </span>
        </param>
        <param name="clusterMap">
          <span data-ttu-id="cc25c-141">Uma matriz do tipo <see cref="T:System.Collections.Generic.IList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-141">An array of type <see cref="T:System.Collections.Generic.IList`1" />.</span>
          </span>
        </param>
        <param name="caretStops">
          <span data-ttu-id="cc25c-142">Uma matriz do tipo <see cref="T:System.Collections.Generic.IList`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-142">An array of type <see cref="T:System.Collections.Generic.IList`1" />.</span>
          </span>
        </param>
        <param name="language">
          <span data-ttu-id="cc25c-143">Um valor do tipo <see cref="T:System.Windows.Markup.XmlLanguage" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-143">A value of type <see cref="T:System.Windows.Markup.XmlLanguage" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc25c-144">Inicializa uma nova instância da classe <see cref="T:System.Windows.Media.GlyphRun" /> especificando propriedades da classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-144">Initializes a new instance of the <see cref="T:System.Windows.Media.GlyphRun" /> class by specifying properties of the class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AdvanceWidths">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;double&gt; AdvanceWidths { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;float64&gt; AdvanceWidths" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.AdvanceWidths" />
      <MemberSignature Language="VB.NET" Value="Public Property AdvanceWidths As IList(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;double&gt; ^ AdvanceWidths { System::Collections::Generic::IList&lt;double&gt; ^ get(); void set(System::Collections::Generic::IList&lt;double&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AdvanceWidths : System.Collections.Generic.IList&lt;double&gt; with get, set" Usage="System.Windows.Media.GlyphRun.AdvanceWidths" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Media.Converters.DoubleIListConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cc25c-145">Obtém ou define a lista de valores <see cref="T:System.Double" /> que representam as larguras de avanço correspondentes aos índices de glifo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-145">Gets or sets the list of <see cref="T:System.Double" /> values that represent the advance widths corresponding to the glyph indices.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cc25c-146">Uma lista de <see cref="T:System.Double" /> valores que representam as larguras de avanço.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-146">A list of <see cref="T:System.Double" /> values that represent the advance widths.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc25c-147">Cada item na lista de larguras de avanço corresponde aos valores glifo retornados pelo <xref:System.Windows.Media.GlyphRun.GlyphIndices%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="cc25c-147">Each item in the list of advance widths corresponds to the glyph values returned by the <xref:System.Windows.Media.GlyphRun.GlyphIndices%2A> property.</span></span> <span data-ttu-id="cc25c-148">A origem nominal de n<sup>th</sup> glifo na execução (n > 0) nominal gerou a n-1<sup>th</sup> glifo mais de n-1<sup>th</sup> adiantar largura adicionada ao longo do vetor de avanço é executado.</span><span class="sxs-lookup"><span data-stu-id="cc25c-148">The nominal origin of the n<sup>th</sup> glyph in the run (n>0) is the nominal origin of the n-1<sup>th</sup> glyph plus the n-1<sup>th</sup> advance width added along the runs advance vector.</span></span> <span data-ttu-id="cc25c-149">Glifos base geralmente têm uma largura de avanço diferente de zero, enquanto combinando glifos geralmente têm uma largura zero antecipada.</span><span class="sxs-lookup"><span data-stu-id="cc25c-149">Base glyphs generally have a non-zero advance width, whereas combining glyphs generally have a zero advance width.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaselineOrigin">
      <MemberSignature Language="C#" Value="public System.Windows.Point BaselineOrigin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point BaselineOrigin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.BaselineOrigin" />
      <MemberSignature Language="VB.NET" Value="Public Property BaselineOrigin As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point BaselineOrigin { System::Windows::Point get(); void set(System::Windows::Point value); };" />
      <MemberSignature Language="F#" Value="member this.BaselineOrigin : System.Windows.Point with get, set" Usage="System.Windows.Media.GlyphRun.BaselineOrigin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cc25c-150">Obtém ou define a origem de linha de base do <see cref="T:System.Windows.Media.GlyphRun" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-150">Gets or sets the baseline origin of the <see cref="T:System.Windows.Media.GlyphRun" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cc25c-151">Um <see cref="T:System.Windows.Point" /> valor que representa a origem de linha de base.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-151">A <see cref="T:System.Windows.Point" /> value representing the baseline origin.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BidiLevel">
      <MemberSignature Language="C#" Value="public int BidiLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BidiLevel" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.BidiLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property BidiLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BidiLevel { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BidiLevel : int with get, set" Usage="System.Windows.Media.GlyphRun.BidiLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cc25c-152">Obtém ou define o nível de aninhamento bidirecional do <see cref="T:System.Windows.Media.GlyphRun" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-152">Gets or sets the bidirectional nesting level of the <see cref="T:System.Windows.Media.GlyphRun" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cc25c-153">Um <see cref="T:System.Int32" /> valor que representa o nível de aninhamento bidirecional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-153">An <see cref="T:System.Int32" /> value that represents the bidirectional nesting level.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildGeometry">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Geometry BuildGeometry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Geometry BuildGeometry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.GlyphRun.BuildGeometry" />
      <MemberSignature Language="VB.NET" Value="Public Function BuildGeometry () As Geometry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Geometry ^ BuildGeometry();" />
      <MemberSignature Language="F#" Value="member this.BuildGeometry : unit -&gt; System.Windows.Media.Geometry" Usage="glyphRun.BuildGeometry " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cc25c-154">Recupera o <see cref="T:System.Windows.Media.Geometry" /> para o <see cref="T:System.Windows.Media.GlyphRun" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-154">Retrieves the <see cref="T:System.Windows.Media.Geometry" /> for the <see cref="T:System.Windows.Media.GlyphRun" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc25c-155">O <see cref="T:System.Windows.Media.Geometry" /> correspondente ao <see cref="T:System.Windows.Media.GlyphRun" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-155">The <see cref="T:System.Windows.Media.Geometry" /> corresponding to the <see cref="T:System.Windows.Media.GlyphRun" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc25c-156">O <xref:System.Windows.Media.Geometry> retornado contém a geometria combinada de todos os glifos no <xref:System.Windows.Media.GlyphRun>.</span><span class="sxs-lookup"><span data-stu-id="cc25c-156">The <xref:System.Windows.Media.Geometry> returned contains the combined geometry of all glyphs in the <xref:System.Windows.Media.GlyphRun>.</span></span> <span data-ttu-id="cc25c-157">Delimitações sobrepostas são mescladas, executando uma operação de união Boolean.</span><span class="sxs-lookup"><span data-stu-id="cc25c-157">Overlapping contours are merged by performing a Boolean union operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaretStops">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;bool&gt; CaretStops { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;bool&gt; CaretStops" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.CaretStops" />
      <MemberSignature Language="VB.NET" Value="Public Property CaretStops As IList(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;bool&gt; ^ CaretStops { System::Collections::Generic::IList&lt;bool&gt; ^ get(); void set(System::Collections::Generic::IList&lt;bool&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CaretStops : System.Collections.Generic.IList&lt;bool&gt; with get, set" Usage="System.Windows.Media.GlyphRun.CaretStops" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Media.Converters.BoolIListConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cc25c-158">Obtém ou define a lista de valores <see cref="T:System.Boolean" /> que determinam se há paradas de circunflexo para cada ponto de código UTF16 no Unicode representando o <see cref="T:System.Windows.Media.GlyphRun" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-158">Gets or sets the list of <see cref="T:System.Boolean" /> values that determine whether there are caret stops for every UTF16 code point in the Unicode representing the <see cref="T:System.Windows.Media.GlyphRun" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cc25c-159">Uma lista de <see cref="T:System.Boolean" /> valores que representam se há paradas do sinal de intercalação.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-159">A list of <see cref="T:System.Boolean" /> values that represent whether there are caret stops.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc25c-160">O valor de retorno é `null` se houver uma parada de cursor para cada ponto de código UTF16 em Unicode que que representa o <xref:System.Windows.Media.GlyphRun>.</span><span class="sxs-lookup"><span data-stu-id="cc25c-160">The return value is `null` if there is a caret stop for every UTF16 code point in the Unicode representing the <xref:System.Windows.Media.GlyphRun>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Characters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;char&gt; Characters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;char&gt; Characters" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.Characters" />
      <MemberSignature Language="VB.NET" Value="Public Property Characters As IList(Of Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;char&gt; ^ Characters { System::Collections::Generic::IList&lt;char&gt; ^ get(); void set(System::Collections::Generic::IList&lt;char&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Characters : System.Collections.Generic.IList&lt;char&gt; with get, set" Usage="System.Windows.Media.GlyphRun.Characters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Media.Converters.CharIListConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Char&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cc25c-161">Obtém ou define a lista de pontos de código UTF16 que representam o conteúdo Unicode do <see cref="T:System.Windows.Media.GlyphRun" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-161">Gets or sets the list of UTF16 code points that represent the Unicode content of the <see cref="T:System.Windows.Media.GlyphRun" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cc25c-162">Uma lista de <see cref="T:System.Char" /> valores que representam o conteúdo Unicode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-162">A list of <see cref="T:System.Char" /> values that represent Unicode content.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClusterMap">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;ushort&gt; ClusterMap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;unsigned int16&gt; ClusterMap" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.ClusterMap" />
      <MemberSignature Language="VB.NET" Value="Public Property ClusterMap As IList(Of UShort)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::UInt16&gt; ^ ClusterMap { System::Collections::Generic::IList&lt;System::UInt16&gt; ^ get(); void set(System::Collections::Generic::IList&lt;System::UInt16&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClusterMap : System.Collections.Generic.IList&lt;uint16&gt; with get, set" Usage="System.Windows.Media.GlyphRun.ClusterMap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Media.Converters.UShortIListConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cc25c-163">Obtém ou define a lista de valores <see cref="T:System.UInt16" /> que mapeiam caracteres no <see cref="T:System.Windows.Media.GlyphRun" /> para índices de glifo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-163">Gets or sets the list of <see cref="T:System.UInt16" /> values that maps characters in the <see cref="T:System.Windows.Media.GlyphRun" /> to glyph indices.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cc25c-164">Uma lista de <see cref="T:System.UInt16" /> valores que representam os índices de glyph mapeada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-164">A list of <see cref="T:System.UInt16" /> values that represent mapped glyph indices.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc25c-165">Há uma entrada por caractere na lista.</span><span class="sxs-lookup"><span data-stu-id="cc25c-165">There is one entry per character in the list.</span></span> <span data-ttu-id="cc25c-166">Cada valor na lista fornece o deslocamento do primeiro glifo, representado por <xref:System.Windows.Media.GlyphRun.GlyphIndices%2A>, como o caractere correspondente, representado pelo <xref:System.Windows.Media.GlyphRun.Characters%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc25c-166">Each value in the list gives the offset of the first glyph, represented by <xref:System.Windows.Media.GlyphRun.GlyphIndices%2A>, to the corresponding character, represented by <xref:System.Windows.Media.GlyphRun.Characters%2A>.</span></span>  
  
 <span data-ttu-id="cc25c-167">Onde vários caracteres mapeiam para um glifo único ou a um grupo de glifo não pode ser dividido para caracteres exatamente à individuais do mapa, as entradas para todos os caracteres que têm o mesmo valor: o deslocamento do primeiro glifo que representa este grupo de caracteres.</span><span class="sxs-lookup"><span data-stu-id="cc25c-167">Where multiple characters map to a single glyph, or to a glyph group that cannot be broken down to map exactly to individual characters, the entries for all the characters have the same value: the offset of the first glyph that represents this group of characters.</span></span>  
  
 <span data-ttu-id="cc25c-168">Se a lista estiver `null` ou igual a <xref:System.String.Empty>, será pressuposto o mapeamento de 1 a 1 sequencial.</span><span class="sxs-lookup"><span data-stu-id="cc25c-168">If the list is `null` or equal to <xref:System.String.Empty>, sequential 1 to 1 mapping is assumed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComputeAlignmentBox">
      <MemberSignature Language="C#" Value="public System.Windows.Rect ComputeAlignmentBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Rect ComputeAlignmentBox() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.GlyphRun.ComputeAlignmentBox" />
      <MemberSignature Language="VB.NET" Value="Public Function ComputeAlignmentBox () As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Rect ComputeAlignmentBox();" />
      <MemberSignature Language="F#" Value="member this.ComputeAlignmentBox : unit -&gt; System.Windows.Rect" Usage="glyphRun.ComputeAlignmentBox " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cc25c-169">Recupera a caixa de alinhamento para o <see cref="T:System.Windows.Media.GlyphRun" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-169">Retrieves the alignment box for the <see cref="T:System.Windows.Media.GlyphRun" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc25c-170">Um <see cref="T:System.Windows.Rect" /> que representa a caixa de alinhamento do <see cref="T:System.Windows.Media.GlyphRun" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-170">A <see cref="T:System.Windows.Rect" /> that represents the alignment box for the <see cref="T:System.Windows.Media.GlyphRun" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc25c-171">Retornado <xref:System.Windows.Rect> é relativo à origem do <xref:System.Windows.Media.GlyphRun>.</span><span class="sxs-lookup"><span data-stu-id="cc25c-171">The returned <xref:System.Windows.Rect> is relative to the origin of the <xref:System.Windows.Media.GlyphRun>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComputeInkBoundingBox">
      <MemberSignature Language="C#" Value="public System.Windows.Rect ComputeInkBoundingBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Rect ComputeInkBoundingBox() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.GlyphRun.ComputeInkBoundingBox" />
      <MemberSignature Language="VB.NET" Value="Public Function ComputeInkBoundingBox () As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Rect ComputeInkBoundingBox();" />
      <MemberSignature Language="F#" Value="member this.ComputeInkBoundingBox : unit -&gt; System.Windows.Rect" Usage="glyphRun.ComputeInkBoundingBox " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cc25c-172">Recupera a caixa delimitadora de tinta do <see cref="T:System.Windows.Media.GlyphRun" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-172">Retrieves the ink bounding box for the <see cref="T:System.Windows.Media.GlyphRun" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc25c-173">Obtém um <see cref="T:System.Windows.Rect" /> que representa a caixa delimitadora do <see cref="T:System.Windows.Media.GlyphRun" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-173">A <see cref="T:System.Windows.Rect" /> that represents the ink bounding box the <see cref="T:System.Windows.Media.GlyphRun" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc25c-174">Retornado <xref:System.Windows.Rect> é relativo à origem do <xref:System.Windows.Media.GlyphRun>.</span><span class="sxs-lookup"><span data-stu-id="cc25c-174">The returned <xref:System.Windows.Rect> is relative to the origin of the <xref:System.Windows.Media.GlyphRun>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeviceFontName">
      <MemberSignature Language="C#" Value="public string DeviceFontName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeviceFontName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.DeviceFontName" />
      <MemberSignature Language="VB.NET" Value="Public Property DeviceFontName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DeviceFontName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeviceFontName : string with get, set" Usage="System.Windows.Media.GlyphRun.DeviceFontName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cc25c-175">Obtém ou define a fonte do dispositivo específica para a qual o <see cref="T:System.Windows.Media.GlyphRun" /> foi otimizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-175">Gets or sets the specific device font for which the <see cref="T:System.Windows.Media.GlyphRun" /> has been optimized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cc25c-176">Um <see cref="T:System.String" /> valor que representa a fonte do dispositivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-176">A <see cref="T:System.String" /> value that represents the device font.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc25c-177">Quando um <xref:System.Windows.Media.GlyphRun> é processado em um dispositivo que tem suporte interno para a fonte do dispositivo nomeado, o <xref:System.Windows.Media.GlyphRun> deve ser renderizado usando um mecanismo específico do dispositivo para a seleção de fonte e enviando pontos de código Unicode em vez de índices de glyph.</span><span class="sxs-lookup"><span data-stu-id="cc25c-177">When a <xref:System.Windows.Media.GlyphRun> is rendered on a device that has built-in support for the named device font, the <xref:System.Windows.Media.GlyphRun> should be rendered using a device specific mechanism for selecting that font, and by sending Unicode code points rather than glyph indices.</span></span> <span data-ttu-id="cc25c-178">Durante a renderização em um dispositivo que não inclui suporte interno para a fonte, o dispositivo nomeado <xref:System.Windows.Media.GlyphRun.DeviceFontName%2A> devem ser ignoradas.</span><span class="sxs-lookup"><span data-stu-id="cc25c-178">When rendering onto a device that does not include built-in support for the named device font, <xref:System.Windows.Media.GlyphRun.DeviceFontName%2A> should be ignored.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontRenderingEmSize">
      <MemberSignature Language="C#" Value="public double FontRenderingEmSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 FontRenderingEmSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.FontRenderingEmSize" />
      <MemberSignature Language="VB.NET" Value="Public Property FontRenderingEmSize As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double FontRenderingEmSize { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.FontRenderingEmSize : double with get, set" Usage="System.Windows.Media.GlyphRun.FontRenderingEmSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cc25c-179">Obtém ou define o tamanho em usado para renderizar a <see cref="T:System.Windows.Media.GlyphRun" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-179">Gets or sets the em size used for rendering the <see cref="T:System.Windows.Media.GlyphRun" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cc25c-180">Um <see cref="T:System.Double" /> valor que representa o tamanho em usada para renderização.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-180">A <see cref="T:System.Double" /> value that represents the em size used for rendering.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCaretCharacterHitFromDistance">
      <MemberSignature Language="C#" Value="public System.Windows.Media.TextFormatting.CharacterHit GetCaretCharacterHitFromDistance (double distance, out bool isInside);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.TextFormatting.CharacterHit GetCaretCharacterHitFromDistance(float64 distance, [out] bool&amp; isInside) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.GlyphRun.GetCaretCharacterHitFromDistance(System.Double,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCaretCharacterHitFromDistance (distance As Double, ByRef isInside As Boolean) As CharacterHit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::TextFormatting::CharacterHit GetCaretCharacterHitFromDistance(double distance, [Runtime::InteropServices::Out] bool % isInside);" />
      <MemberSignature Language="F#" Value="member this.GetCaretCharacterHitFromDistance : double *  -&gt; System.Windows.Media.TextFormatting.CharacterHit" Usage="glyphRun.GetCaretCharacterHitFromDistance (distance, isInside)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.CharacterHit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="distance" Type="System.Double" />
        <Parameter Name="isInside" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="distance">
          <span data-ttu-id="cc25c-181">Deslocamento a ser usado para calcular a ocorrência do circunflexo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-181">Offset to use for computing the caret character hit.</span>
          </span>
        </param>
        <param name="isInside">
          <span data-ttu-id="cc25c-182">Determina se a ocorrência do caractere está dentro do <see cref="T:System.Windows.Media.GlyphRun" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-182">Determines whether the character hit is inside the <see cref="T:System.Windows.Media.GlyphRun" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc25c-183">Recupera o valor <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> que representa a ocorrência do caractere do circunflexo do <see cref="T:System.Windows.Media.GlyphRun" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-183">Retrieves the <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> value that represents the character hit of the caret of the <see cref="T:System.Windows.Media.GlyphRun" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc25c-184">Um valor <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> que representa a ocorrências de caractere mais próxima do valor <paramref name="distance" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-184">A <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> value that represents the character hit that is closest to the <paramref name="distance" /> value.</span>
          </span>
          <span data-ttu-id="cc25c-185">O parâmetro de saída <paramref name="isInside" /> retorna <see langword="true" /> se a ocorrência do caractere está dentro do <see cref="T:System.Windows.Media.GlyphRun" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-185">The out parameter <paramref name="isInside" /> returns <see langword="true" /> if the character hit is inside the <see cref="T:System.Windows.Media.GlyphRun" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc25c-186">O `distance` valor representa o deslocamento da borda esquerda do <xref:System.Windows.Media.GlyphRun>.</span><span class="sxs-lookup"><span data-stu-id="cc25c-186">The `distance` value represents the offset from the leading edge of the <xref:System.Windows.Media.GlyphRun>.</span></span>  
  
 <span data-ttu-id="cc25c-187">Se a ocorrência está fora do <xref:System.Windows.Media.GlyphRun>, a ocorrência de caracteres representa o caractere de sinal de intercalação mais próximo acessado no <xref:System.Windows.Media.GlyphRun>.</span><span class="sxs-lookup"><span data-stu-id="cc25c-187">If the hit is outside the <xref:System.Windows.Media.GlyphRun>, the character hit represents the closest caret character hit within the <xref:System.Windows.Media.GlyphRun>.</span></span>  
  
 <span data-ttu-id="cc25c-188">O <xref:System.Windows.Media.TextFormatting.CharacterHit> estrutura representa informações sobre um caractere acessado em uma <xref:System.Windows.Media.GlyphRun>— o índice do primeiro caractere que foi atingido, bem como informações sobre a borda direita ou à esquerda.</span><span class="sxs-lookup"><span data-stu-id="cc25c-188">The <xref:System.Windows.Media.TextFormatting.CharacterHit> structure represents information about a character hit within a <xref:System.Windows.Media.GlyphRun>—the index of the first character that was hit as well as information about the leading or trailing edge.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDistanceFromCaretCharacterHit">
      <MemberSignature Language="C#" Value="public double GetDistanceFromCaretCharacterHit (System.Windows.Media.TextFormatting.CharacterHit characterHit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GetDistanceFromCaretCharacterHit(valuetype System.Windows.Media.TextFormatting.CharacterHit characterHit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.GlyphRun.GetDistanceFromCaretCharacterHit(System.Windows.Media.TextFormatting.CharacterHit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GetDistanceFromCaretCharacterHit(System::Windows::Media::TextFormatting::CharacterHit characterHit);" />
      <MemberSignature Language="F#" Value="member this.GetDistanceFromCaretCharacterHit : System.Windows.Media.TextFormatting.CharacterHit -&gt; double" Usage="glyphRun.GetDistanceFromCaretCharacterHit characterHit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="characterHit" Type="System.Windows.Media.TextFormatting.CharacterHit" />
      </Parameters>
      <Docs>
        <param name="characterHit">
          <span data-ttu-id="cc25c-189">O <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> a ser usado para calcular o deslocamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-189">The <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> to use for computing the offset.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc25c-190">Recupera o deslocamento da borda esquerda do <see cref="T:System.Windows.Media.GlyphRun" /> para a borda à esquerda ou à direita de uma parada de circunflexo que contém a ocorrência de caractere especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-190">Retrieves the offset from the leading edge of the <see cref="T:System.Windows.Media.GlyphRun" /> to the leading or trailing edge of a caret stop containing the specified character hit.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc25c-191">Um <see cref="T:System.Double" /> que representa o deslocamento da borda à esquerda do <see cref="T:System.Windows.Media.GlyphRun" /> para a borda à esquerda ou à direita de uma parada de circunflexo que contém a ocorrência de caractere.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-191">A <see cref="T:System.Double" /> that represents the offset from the leading edge of the <see cref="T:System.Windows.Media.GlyphRun" /> to the leading or trailing edge of a caret stop containing the character hit.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc25c-192">Se o <xref:System.Windows.Media.GlyphRun> for atingido não podem ser testados, a distância de 0,0 é retornada.</span><span class="sxs-lookup"><span data-stu-id="cc25c-192">If the <xref:System.Windows.Media.GlyphRun> is not hit testable, the distance of 0.0 is returned.</span></span> <span data-ttu-id="cc25c-193">Use o <xref:System.Windows.Media.GlyphRun.IsHitTestable%2A> para determinar se um <xref:System.Windows.Media.GlyphRun> pode ser o teste de clique.</span><span class="sxs-lookup"><span data-stu-id="cc25c-193">Use the <xref:System.Windows.Media.GlyphRun.IsHitTestable%2A> property to determine if a <xref:System.Windows.Media.GlyphRun> can be hit test.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cc25c-194">A ocorrência de caractere está fora do intervalo especificado pela cadeia de caracteres Unicode <see cref="T:System.Windows.Media.GlyphRun" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-194">The character hit is outside the range specified by the <see cref="T:System.Windows.Media.GlyphRun" /> Unicode string.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNextCaretCharacterHit">
      <MemberSignature Language="C#" Value="public System.Windows.Media.TextFormatting.CharacterHit GetNextCaretCharacterHit (System.Windows.Media.TextFormatting.CharacterHit characterHit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.TextFormatting.CharacterHit GetNextCaretCharacterHit(valuetype System.Windows.Media.TextFormatting.CharacterHit characterHit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.GlyphRun.GetNextCaretCharacterHit(System.Windows.Media.TextFormatting.CharacterHit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::TextFormatting::CharacterHit GetNextCaretCharacterHit(System::Windows::Media::TextFormatting::CharacterHit characterHit);" />
      <MemberSignature Language="F#" Value="member this.GetNextCaretCharacterHit : System.Windows.Media.TextFormatting.CharacterHit -&gt; System.Windows.Media.TextFormatting.CharacterHit" Usage="glyphRun.GetNextCaretCharacterHit characterHit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.CharacterHit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="characterHit" Type="System.Windows.Media.TextFormatting.CharacterHit" />
      </Parameters>
      <Docs>
        <param name="characterHit">
          <span data-ttu-id="cc25c-195">O <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> a ser usado para calcular o próximo valor de ocorrência.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-195">The <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> to use for computing the next hit value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc25c-196">Recupera a próxima ocorrência de circunflexo válida na direção lógica no <see cref="T:System.Windows.Media.GlyphRun" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-196">Retrieves the next valid caret character hit in the logical direction in the <see cref="T:System.Windows.Media.GlyphRun" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc25c-197">Um <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> que representa a próxima ocorrência de circunflexo válida na direção lógica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-197">A <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> that represents the next valid caret character hit in the logical direction.</span>
          </span>
          <span data-ttu-id="cc25c-198">Se o valor retornado é igual a <paramref name="characterHit" />, nenhuma navegação adicional é possível no <see cref="T:System.Windows.Media.GlyphRun" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-198">If the return value is equal to <paramref name="characterHit" />, no further navigation is possible in the <see cref="T:System.Windows.Media.GlyphRun" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc25c-199">Para recuperar a ocorrência anterior de caractere de cursor válido, use <xref:System.Windows.Media.GlyphRun.GetPreviousCaretCharacterHit%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc25c-199">To retrieve the previous valid caret character hit, use <xref:System.Windows.Media.GlyphRun.GetPreviousCaretCharacterHit%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPreviousCaretCharacterHit">
      <MemberSignature Language="C#" Value="public System.Windows.Media.TextFormatting.CharacterHit GetPreviousCaretCharacterHit (System.Windows.Media.TextFormatting.CharacterHit characterHit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.TextFormatting.CharacterHit GetPreviousCaretCharacterHit(valuetype System.Windows.Media.TextFormatting.CharacterHit characterHit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.GlyphRun.GetPreviousCaretCharacterHit(System.Windows.Media.TextFormatting.CharacterHit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::TextFormatting::CharacterHit GetPreviousCaretCharacterHit(System::Windows::Media::TextFormatting::CharacterHit characterHit);" />
      <MemberSignature Language="F#" Value="member this.GetPreviousCaretCharacterHit : System.Windows.Media.TextFormatting.CharacterHit -&gt; System.Windows.Media.TextFormatting.CharacterHit" Usage="glyphRun.GetPreviousCaretCharacterHit characterHit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.CharacterHit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="characterHit" Type="System.Windows.Media.TextFormatting.CharacterHit" />
      </Parameters>
      <Docs>
        <param name="characterHit">
          <span data-ttu-id="cc25c-200">O <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> a ser usado para calcular o valor de ocorrência anterior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-200">The <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> to use for computing the previous hit value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc25c-201">Recupera a ocorrência de circunflexo válida anterior na direção lógica no <see cref="T:System.Windows.Media.GlyphRun" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-201">Retrieves the previous valid caret character hit in the logical direction in the <see cref="T:System.Windows.Media.GlyphRun" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc25c-202">Um <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> que representa a ocorrência de circunflexo válida anterior na direção lógica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-202">A <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> that represents the previous valid caret character hit in the logical direction.</span>
          </span>
          <span data-ttu-id="cc25c-203">Se o valor retornado é igual a <paramref name="characterHit" />, nenhuma navegação adicional é possível no <see cref="T:System.Windows.Media.GlyphRun" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-203">If the return value is equal to <paramref name="characterHit" />, no further navigation is possible in the <see cref="T:System.Windows.Media.GlyphRun" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc25c-204">Para recuperar a próxima ocorrência do caractere de cursor válido, use <xref:System.Windows.Media.GlyphRun.GetNextCaretCharacterHit%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc25c-204">To retrieve the next valid caret character hit, use <xref:System.Windows.Media.GlyphRun.GetNextCaretCharacterHit%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GlyphIndices">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;ushort&gt; GlyphIndices { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;unsigned int16&gt; GlyphIndices" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.GlyphIndices" />
      <MemberSignature Language="VB.NET" Value="Public Property GlyphIndices As IList(Of UShort)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::UInt16&gt; ^ GlyphIndices { System::Collections::Generic::IList&lt;System::UInt16&gt; ^ get(); void set(System::Collections::Generic::IList&lt;System::UInt16&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GlyphIndices : System.Collections.Generic.IList&lt;uint16&gt; with get, set" Usage="System.Windows.Media.GlyphRun.GlyphIndices" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Media.Converters.UShortIListConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cc25c-205">Obtém ou define uma matriz de valores <see cref="T:System.UInt16" /> que representam os índices de glifo na fonte física de renderização.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-205">Gets or sets an array of <see cref="T:System.UInt16" /> values that represent the glyph indices in the rendering physical font.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cc25c-206">Uma lista de <see cref="T:System.UInt16" /> valores que representam os índices de glifo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-206">A list of <see cref="T:System.UInt16" /> values that represent the glyph indices.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc25c-207">O valor padrão de índices de glyph são definidos por tabela de mapa de caracteres da fonte para os pontos de código Unicode correspondentes no texto interno.</span><span class="sxs-lookup"><span data-stu-id="cc25c-207">The default value of the glyph indices are defined by the font's character map table for the corresponding Unicode code points in the inner text.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GlyphOffsets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Windows.Point&gt; GlyphOffsets { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype System.Windows.Point&gt; GlyphOffsets" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.GlyphOffsets" />
      <MemberSignature Language="VB.NET" Value="Public Property GlyphOffsets As IList(Of Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Windows::Point&gt; ^ GlyphOffsets { System::Collections::Generic::IList&lt;System::Windows::Point&gt; ^ get(); void set(System::Collections::Generic::IList&lt;System::Windows::Point&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GlyphOffsets : System.Collections.Generic.IList&lt;System.Windows.Point&gt; with get, set" Usage="System.Windows.Media.GlyphRun.GlyphOffsets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Media.Converters.PointIListConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Windows.Point&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cc25c-208">Obtém ou define uma matriz de valores <see cref="T:System.Windows.Point" /> que representam os deslocamentos de glifos no <see cref="T:System.Windows.Media.GlyphRun" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-208">Gets or sets an array of <see cref="T:System.Windows.Point" /> values representing the offsets of the glyphs in the <see cref="T:System.Windows.Media.GlyphRun" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cc25c-209">Uma lista de <see cref="T:System.Windows.Point" /> valores que representam os deslocamentos de glifo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-209">A list of <see cref="T:System.Windows.Point" /> values representing the offsets of glyph.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc25c-210">Os valores de deslocamento de glifo são adicionados para a origem de glifo nominal para gerar a origem final do glifo.</span><span class="sxs-lookup"><span data-stu-id="cc25c-210">The glyph offset values are added to the nominal glyph origin to generate the final origin for the glyph.</span></span> <span data-ttu-id="cc25c-211">O <xref:System.Windows.Media.GlyphRun.AdvanceWidths%2A> propriedade representa os valores de origens de glifo nominal para o <xref:System.Windows.Media.GlyphRun>.</span><span class="sxs-lookup"><span data-stu-id="cc25c-211">The <xref:System.Windows.Media.GlyphRun.AdvanceWidths%2A> property represents the values of the nominal glyph origins for the <xref:System.Windows.Media.GlyphRun>.</span></span>  
  
 <span data-ttu-id="cc25c-212">Glifos base geralmente têm um deslocamento de glifo de (0, 0), combinando glifos geralmente têm um deslocamento que coloca corretamente sobre imediatamente precedente glifos base.</span><span class="sxs-lookup"><span data-stu-id="cc25c-212">Base glyphs generally have a glyph offset of (0, 0), combining glyphs generally have an offset that places them correctly on top of the nearest preceding base glyph.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GlyphTypeface">
      <MemberSignature Language="C#" Value="public System.Windows.Media.GlyphTypeface GlyphTypeface { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.GlyphTypeface GlyphTypeface" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.GlyphTypeface" />
      <MemberSignature Language="VB.NET" Value="Public Property GlyphTypeface As GlyphTypeface" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::GlyphTypeface ^ GlyphTypeface { System::Windows::Media::GlyphTypeface ^ get(); void set(System::Windows::Media::GlyphTypeface ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GlyphTypeface : System.Windows.Media.GlyphTypeface with get, set" Usage="System.Windows.Media.GlyphRun.GlyphTypeface" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.GlyphTypeface</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cc25c-213">Obtém ou define o <see cref="T:System.Windows.Media.GlyphTypeface" /> do <see cref="T:System.Windows.Media.GlyphRun" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-213">Gets or sets the <see cref="T:System.Windows.Media.GlyphTypeface" /> for the <see cref="T:System.Windows.Media.GlyphRun" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cc25c-214">O <see cref="T:System.Windows.Media.GlyphTypeface" /> para o <see cref="T:System.Windows.Media.GlyphRun" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-214">The <see cref="T:System.Windows.Media.GlyphTypeface" /> for the <see cref="T:System.Windows.Media.GlyphRun" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHitTestable">
      <MemberSignature Language="C#" Value="public bool IsHitTestable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHitTestable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.IsHitTestable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsHitTestable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsHitTestable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsHitTestable : bool" Usage="System.Windows.Media.GlyphRun.IsHitTestable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cc25c-215">Obtém um valor que indica se há quaisquer ocorrências de circunflexo válidas dentro do <see cref="T:System.Windows.Media.GlyphRun" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-215">Gets a value indicating whether there are any valid caret character hits within the <see cref="T:System.Windows.Media.GlyphRun" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cc25c-216">
            <see langword="true" /> Se houver ocorrências do caractere de cursor válido; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-216">
              <see langword="true" /> if there are valid caret character hits; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSideways">
      <MemberSignature Language="C#" Value="public bool IsSideways { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSideways" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.IsSideways" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSideways As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSideways { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsSideways : bool with get, set" Usage="System.Windows.Media.GlyphRun.IsSideways" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cc25c-217">Obtém ou define um valor que indica se a rotação de glifos deve ser realizada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-217">Gets or sets a value indicating whether to rotate glyphs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cc25c-218">
            <see langword="true" /> Se os glifos são girados; Caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-218">
              <see langword="true" /> if the glyphs are rotated; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc25c-219">Se <xref:System.Windows.Media.GlyphRun.IsSideways%2A> é `true`, os glifos que compõem a caracteres de texto são girado 90 ° no sentido anti-horário, usando a linha de base vertical métricas de posicionamento.</span><span class="sxs-lookup"><span data-stu-id="cc25c-219">If <xref:System.Windows.Media.GlyphRun.IsSideways%2A> is `true`, the glyphs that make up text characters are rotated 90° counter-clockwise, using vertical baseline positioning metrics.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public System.Windows.Markup.XmlLanguage Language { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Markup.XmlLanguage Language" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.Language" />
      <MemberSignature Language="VB.NET" Value="Public Property Language As XmlLanguage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Markup::XmlLanguage ^ Language { System::Windows::Markup::XmlLanguage ^ get(); void set(System::Windows::Markup::XmlLanguage ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Language : System.Windows.Markup.XmlLanguage with get, set" Usage="System.Windows.Media.GlyphRun.Language" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.XmlLanguage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cc25c-220">Obtém ou define o <see cref="T:System.Windows.Markup.XmlLanguage" /> do <see cref="T:System.Windows.Media.GlyphRun" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-220">Gets or sets the <see cref="T:System.Windows.Markup.XmlLanguage" /> for the <see cref="T:System.Windows.Media.GlyphRun" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cc25c-221">O <see cref="T:System.Windows.Markup.XmlLanguage" /> para o <see cref="T:System.Windows.Media.GlyphRun" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-221">The <see cref="T:System.Windows.Markup.XmlLanguage" /> for the <see cref="T:System.Windows.Media.GlyphRun" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelsPerDip">
      <MemberSignature Language="C#" Value="public float PixelsPerDip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 PixelsPerDip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GlyphRun.PixelsPerDip" />
      <MemberSignature Language="VB.NET" Value="Public Property PixelsPerDip As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float PixelsPerDip { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.PixelsPerDip : single with get, set" Usage="System.Windows.Media.GlyphRun.PixelsPerDip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cc25c-222">Obtém ou define o PixelsPerDip em que o texto deve ser renderizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-222">Get or sets the PixelsPerDip at which the text should be rendered.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cc25c-223">O valor <see cref="P:System.Windows.Media.GlyphRun.PixelsPerDip" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-223">The current <see cref="P:System.Windows.Media.GlyphRun.PixelsPerDip" /> value.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.BeginInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.GlyphRun.System#ComponentModel#ISupportInitialize#BeginInit" />
      <MemberSignature Language="VB.NET" Value="Sub BeginInit () Implements ISupportInitialize.BeginInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.BeginInit() = System::ComponentModel::ISupportInitialize::BeginInit;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cc25c-224">Para obter uma descrição desse membro, consulte <see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-224">For a description of this member, see <see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.EndInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.GlyphRun.System#ComponentModel#ISupportInitialize#EndInit" />
      <MemberSignature Language="VB.NET" Value="Sub EndInit () Implements ISupportInitialize.EndInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.EndInit() = System::ComponentModel::ISupportInitialize::EndInit;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cc25c-225">Para obter uma descrição desse membro, consulte <see cref="M:System.ComponentModel.ISupportInitialize.EndInit" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc25c-225">For a description of this member, see <see cref="M:System.ComponentModel.ISupportInitialize.EndInit" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>