<Type Name="Color" FullName="System.Windows.Media.Color">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1b57739c885224b165598749a41e639f601c0b17" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37497414" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct Color : IEquatable&lt;System.Windows.Media.Color&gt;, IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit Color extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Windows.Media.Color&gt;, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Color" />
  <TypeSignature Language="VB.NET" Value="Public Structure Color&#xA;Implements IEquatable(Of Color), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class Color : IEquatable&lt;System::Windows::Media::Color&gt;, IFormattable" />
  <TypeSignature Language="F#" Value="type Color = struct&#xA;    interface IFormattable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Windows.Media.Color&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Media.ColorConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Describes a color in terms of alpha, red, green, and blue channels.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_Color"></a>   
## <a name="xaml-attribute-usage"></a>Uso do Atributo XAML  
  
```  
<object property="predefinedColor"/>  
- or -  
<object property="#rgb"/>  
- or -  
<object property="#argb"/>  
- or -  
<object property="#rrggbb"/>  
- or -  
<object property="#aarrggbb"/>  
- or -  
<object property="sc# scA,scR,scG,scB"/>  
- or -  
<object property="ContextColor profileUri alphaValue,colorValue"/>  
  
```  
  
<a name="xamlValues_Color"></a>   
## <a name="xaml-values"></a>Valores XAML  
 *predefinedColor*  
 Uma das cores predefinidas pelo <xref:System.Windows.Media.Colors> classe.  
  
 *rgb*  
 Um número hexadecimal de três dígitos. O primeiro dígito que especifica a cor <xref:System.Windows.Media.Color.R%2A> de valor, o segundo dígito Especifica a <xref:System.Windows.Media.Color.G%2A> valor e o terceiro dígito Especifica o <xref:System.Windows.Media.Color.B%2A> valor. Por exemplo, `00F`.  
  
 *argb*  
 Um número hexadecimal de quatro dígitos. O primeiro dígito que especifica a cor <xref:System.Windows.Media.Color.A%2A> de valor, o segundo dígito especifica sua <xref:System.Windows.Media.Color.R%2A> de valor, o próximo dígito Especifica a <xref:System.Windows.Media.Color.G%2A> valor e o dígito final especifica seu <xref:System.Windows.Media.Color.B%2A> valor. Por exemplo, `F00F`.  
  
 *rrggbb*  
 Um número hexadecimal de seis dígitos. Os dois primeiros dígitos especificam a cor <xref:System.Windows.Media.Color.R%2A> de valor, especificam as próximas duas seus <xref:System.Windows.Media.Color.G%2A> valor e os dois finais especificam seus <xref:System.Windows.Media.Color.B%2A> valor. Por exemplo, `0000FF`.  
  
 *aarrggbb*  
 Um número hexadecimal de oito dígitos. Os dois primeiros dígitos especificam a cor <xref:System.Windows.Media.Color.A%2A> de valor, especificam as próximas duas seu <xref:System.Windows.Media.Color.R%2A> de valor, especificam as próximas duas seu <xref:System.Windows.Media.Color.G%2A> valor e os dois finais especificam seus <xref:System.Windows.Media.Color.B%2A> valor. Por exemplo, `FF0000FF`.  
  
 *scA*  
 <xref:System.Single?displayProperty=nameWithType>  
  
 A cor <xref:System.Windows.Media.Color.ScA%2A> valor.  
  
 *scR*  
 <xref:System.Single?displayProperty=nameWithType>  
  
 A cor <xref:System.Windows.Media.Color.ScR%2A> valor.  
  
 *scG*  
 <xref:System.Single?displayProperty=nameWithType>  
  
 A cor <xref:System.Windows.Media.Color.ScG%2A> valor.  
  
 *scB*  
 <xref:System.Single?displayProperty=nameWithType>  
  
 A cor <xref:System.Windows.Media.Color.ScB%2A> valor.  
  
 *profileUri*  
 <xref:System.Uri?displayProperty=nameWithType>  
  
 O [!INCLUDE[TLA#tla_icc](~/includes/tlasharptla-icc-md.md)] ou [!INCLUDE[TLA#tla_icm](~/includes/tlasharptla-icm-md.md)] perfil de cor.  
  
 *alphaValue*  
 <xref:System.Single?displayProperty=nameWithType>  
  
 O valor de cor do canal alfa. O intervalo de valores é de 0,0 a 1,0.  
  
 *colorValue*  
 <xref:System.Single?displayProperty=nameWithType>  
  
 Uma lista delimitada por vírgulas de três a oito valores que representam os canais de cor do perfil de cor. O intervalo de valores é de 0,0 a 1,0.  
  
   
  
## Examples  
 Este exemplo mostra como usar sRGB, ScRGB e valores de perfil de cor para criar a cor azul.  
  
 [!code-xaml[GraphicsMMMiscSnippets_snip#ColorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/GraphicsMMMiscSnippets_snip/CS/ColorExample.xaml#colorexample)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="A">
      <MemberSignature Language="C#" Value="public byte A { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 A" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Color.A" />
      <MemberSignature Language="VB.NET" Value="Public Property A As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte A { System::Byte get(); void set(System::Byte value); };" />
      <MemberSignature Language="F#" Value="member this.A : byte with get, set" Usage="System.Windows.Media.Color.A" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see langword="sRGB" /> alpha channel value of the color.</summary>
        <value>O valor de canal alfa <see langword="sRGB" /> da cor, um valor entre 0 e 255.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O canal alfa de um <xref:System.Windows.Media.Color> estrutura determina a quantidade de transparência a <xref:System.Windows.Media.Color> tem.  Um valor alfa de 255 indica a <xref:System.Windows.Media.Color> é completamente opaco e um valor de 0 indica a cor é completamente transparente.  
  
 O `sRGB` canais (<xref:System.Windows.Media.Color.A%2A>, <xref:System.Windows.Media.Color.R%2A>, <xref:System.Windows.Media.Color.G%2A>, <xref:System.Windows.Media.Color.B%2A>) e os canais de ScRGB (<xref:System.Windows.Media.Color.ScA%2A>, <xref:System.Windows.Media.Color.ScR%2A>, <xref:System.Windows.Media.Color.ScG%2A>, <xref:System.Windows.Media.Color.ScB%2A>) do <xref:System.Windows.Media.Color> estrutura são sincronizados Propriedades.  Por exemplo, quando <xref:System.Windows.Media.Color.A%2A>, o `sRGB` canal alfa, for modificado, o `ScRGB` canal alfa, <xref:System.Windows.Media.Color.ScA%2A>, é convertido para o equivalente usando o valor de 0 a 1 de valor de intervalo que o `Sc` esquema dá suporte a.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Color Add (System.Windows.Media.Color color1, System.Windows.Media.Color color2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Media.Color Add(valuetype System.Windows.Media.Color color1, valuetype System.Windows.Media.Color color2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Color.Add(System.Windows.Media.Color,System.Windows.Media.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (color1 As Color, color2 As Color) As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Color Add(System::Windows::Media::Color color1, System::Windows::Media::Color color2);" />
      <MemberSignature Language="F#" Value="static member Add : System.Windows.Media.Color * System.Windows.Media.Color -&gt; System.Windows.Media.Color" Usage="System.Windows.Media.Color.Add (color1, color2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color1" Type="System.Windows.Media.Color" />
        <Parameter Name="color2" Type="System.Windows.Media.Color" />
      </Parameters>
      <Docs>
        <param name="color1">The first <see cref="T:System.Windows.Media.Color" /> structure to add.</param>
        <param name="color2">The second <see cref="T:System.Windows.Media.Color" /> structure to add.</param>
        <summary>Adds two <see cref="T:System.Windows.Media.Color" /> structures.</summary>
        <returns>A new <see cref="T:System.Windows.Media.Color" /> structure whose color values are the results of the addition operation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Color> estruturas são adicionadas juntos, adicionando os canais alfabéticos, vermelhos, verdes e azuis da cor de primeiro aos canais alfabéticos, vermelhos, verdes e azuis da cor de segundo. Por exemplo, o canal alfa das `color1` e o canal alfa da `color2` são adicionados juntos para produzir o canal alfa da cor resultante. O mesmo é feito com os canais de vermelhos, verdes e azuis para produzir os canais de vermelhos, verdes e azuis da nova cor.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Color.op_Addition(System.Windows.Media.Color,System.Windows.Media.Color)" />
      </Docs>
    </Member>
    <Member MemberName="AreClose">
      <MemberSignature Language="C#" Value="public static bool AreClose (System.Windows.Media.Color color1, System.Windows.Media.Color color2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool AreClose(valuetype System.Windows.Media.Color color1, valuetype System.Windows.Media.Color color2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Color.AreClose(System.Windows.Media.Color,System.Windows.Media.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AreClose (color1 As Color, color2 As Color) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool AreClose(System::Windows::Media::Color color1, System::Windows::Media::Color color2);" />
      <MemberSignature Language="F#" Value="static member AreClose : System.Windows.Media.Color * System.Windows.Media.Color -&gt; bool" Usage="System.Windows.Media.Color.AreClose (color1, color2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color1" Type="System.Windows.Media.Color" />
        <Parameter Name="color2" Type="System.Windows.Media.Color" />
      </Parameters>
      <Docs>
        <param name="color1">The first color to compare.</param>
        <param name="color2">The second color to compare.</param>
        <summary>Compares two <see cref="T:System.Windows.Media.Color" /> structures for fuzzy equality.</summary>
        <returns>
          <see langword="true" /> if <paramref name="color1" /> and <paramref name="color2" /> are nearly identical; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método de igualdade compensa o fato de que os valores de ponto flutuante podem adquirir uma pequena quantidade de erro quando operada.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Color.AreClose(System.Windows.Media.Color,System.Windows.Media.Color)" />
        <altmember cref="Overload:System.Windows.Media.Color.Equals" />
        <altmember cref="M:System.Windows.Media.Color.op_Equality(System.Windows.Media.Color,System.Windows.Media.Color)" />
        <altmember cref="M:System.Windows.Media.Color.op_Inequality(System.Windows.Media.Color,System.Windows.Media.Color)" />
      </Docs>
    </Member>
    <Member MemberName="B">
      <MemberSignature Language="C#" Value="public byte B { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 B" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Color.B" />
      <MemberSignature Language="VB.NET" Value="Public Property B As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte B { System::Byte get(); void set(System::Byte value); };" />
      <MemberSignature Language="F#" Value="member this.B : byte with get, set" Usage="System.Windows.Media.Color.B" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see langword="sRGB" /> blue channel value of the color.</summary>
        <value>O <see langword="sRGB" /> valor de canal de azul a <see cref="T:System.Windows.Media.Color" /> estruturar um valor entre 0 e 255.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `sRGB` canais (<xref:System.Windows.Media.Color.A%2A>, <xref:System.Windows.Media.Color.R%2A>, <xref:System.Windows.Media.Color.G%2A>, <xref:System.Windows.Media.Color.B%2A>) e o `ScRGB` canais (<xref:System.Windows.Media.Color.ScA%2A>, <xref:System.Windows.Media.Color.ScR%2A>, <xref:System.Windows.Media.Color.ScG%2A>, <xref:System.Windows.Media.Color.ScB%2A>) do <xref:System.Windows.Media.Color> são de estrutura propriedades sincronizadas.  Por exemplo, quando <xref:System.Windows.Media.Color.B%2A>, o `sRGB` azul canal, que é modificado, o `ScRGB` canal azul, <xref:System.Windows.Media.Color.ScB%2A>, é convertido para o equivalente usando o valor de 0 a 1 de valor de intervalo que o `Sc` esquema dá suporte a.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public void Clamp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clamp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Color.Clamp" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clamp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clamp();" />
      <MemberSignature Language="F#" Value="member this.Clamp : unit -&gt; unit" Usage="color.Clamp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sets the <see langword="ScRGB" /> channels of the color to within the gamut of 0 to 1, if they are outside that range.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A grande diversidade do `ScRGB` espaço de cores é maior que o intervalo de clamp, portanto, o uso desse método pode resultar na perda de informações de cores.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorContext">
      <MemberSignature Language="C#" Value="public System.Windows.Media.ColorContext ColorContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.ColorContext ColorContext" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Color.ColorContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColorContext As ColorContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::ColorContext ^ ColorContext { System::Windows::Media::ColorContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ColorContext : System.Windows.Media.ColorContext" Usage="System.Windows.Media.Color.ColorContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.ColorContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the [!INCLUDE[TLA#tla_icc](~/includes/tlasharptla-icc-md.md)] or [!INCLUDE[TLA#tla_icm](~/includes/tlasharptla-icm-md.md)] color profile of the color.</summary>
        <value>O [! INCLUDE[TLA#tla_icc](~/Includes/tlasharptla-ICC-MD.MD)] ou [! Perfil de cor include[TLA#tla_icm](~/Includes/tlasharptla-ICM-MD.MD)] da cor.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um [!INCLUDE[TLA#tla_icc](~/includes/tlasharptla-icc-md.md)] ou [!INCLUDE[TLA#tla_icm](~/includes/tlasharptla-icm-md.md)] perfil de cor contém um perfil de sistema de cores para um determinado aplicativo ou dispositivo, como uma impressora de cor. Este perfil é correspondente a um perfil comum que por sua vez, pode ser mapeado para os perfis individuais de outros dispositivos. Isso permite que o sistema de cores usado pelo dispositivo de um computador para corresponder as cores de outros aplicativos e dispositivos na mesma ou em outros sistemas de computador.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tests whether two <see cref="T:System.Windows.Media.Color" /> structures are identical.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Color.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="color.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">The object to compare to this <see cref="T:System.Windows.Media.Color" /> structure.</param>
        <summary>Tests whether the specified object is a <see cref="T:System.Windows.Media.Color" /> structure and is equivalent to this color.</summary>
        <returns>
          <see langword="true" /> if the specified object is a <see cref="T:System.Windows.Media.Color" /> structure and is identical to the current <see cref="T:System.Windows.Media.Color" /> structure; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Valores de ponto flutuante podem adquirir um pequeno grau de erro quando eles são operados.  O <xref:System.Windows.Media.Color.Equals%2A> método, o <xref:System.Windows.Media.Color.op_Equality%2A> operador e o <xref:System.Windows.Media.Color.op_Inequality%2A> operador não compensar isso e, portanto, podem não retornar o resultado booliano esperado.  
  
 O <xref:System.Windows.Media.Color.AreClose%2A> método usa um algoritmo de igualdade difusa compensa esse erro de aritmético de ponto flutuante, retornando `true` para obter uma comparação de dois <xref:System.Windows.Media.Color> estruturas que são praticamente idênticos, mas cujos valores podem ser diferentes por um Quantidade minuscule.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Color.AreClose(System.Windows.Media.Color,System.Windows.Media.Color)" />
        <altmember cref="M:System.Windows.Media.Color.op_Equality(System.Windows.Media.Color,System.Windows.Media.Color)" />
        <altmember cref="M:System.Windows.Media.Color.op_Inequality(System.Windows.Media.Color,System.Windows.Media.Color)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.Media.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Windows.Media.Color color) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Color.Equals(System.Windows.Media.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Windows::Media::Color color);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Windows.Media.Color -&gt; bool" Usage="color.Equals color" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="System.Windows.Media.Color" />
      </Parameters>
      <Docs>
        <param name="color">The <see cref="T:System.Windows.Media.Color" /> structure to compare to the current <see cref="T:System.Windows.Media.Color" /> structure.</param>
        <summary>Tests whether the specified <see cref="T:System.Windows.Media.Color" /> structure is identical to this color.</summary>
        <returns>
          <see langword="true" /> if the specified <see cref="T:System.Windows.Media.Color" /> structure is identical to the current <see cref="T:System.Windows.Media.Color" /> structure; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (System.Windows.Media.Color color1, System.Windows.Media.Color color2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.Windows.Media.Color color1, valuetype System.Windows.Media.Color color2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Color.Equals(System.Windows.Media.Color,System.Windows.Media.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (color1 As Color, color2 As Color) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(System::Windows::Media::Color color1, System::Windows::Media::Color color2);" />
      <MemberSignature Language="F#" Value="static member Equals : System.Windows.Media.Color * System.Windows.Media.Color -&gt; bool" Usage="System.Windows.Media.Color.Equals (color1, color2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color1" Type="System.Windows.Media.Color" />
        <Parameter Name="color2" Type="System.Windows.Media.Color" />
      </Parameters>
      <Docs>
        <param name="color1">The first <see cref="T:System.Windows.Media.Color" /> structure to compare.</param>
        <param name="color2">The second <see cref="T:System.Windows.Media.Color" /> structure to compare.</param>
        <summary>Tests whether two <see cref="T:System.Windows.Media.Color" /> structures are identical.</summary>
        <returns>
          <see langword="true" /> if <paramref name="color1" /> and <paramref name="color2" /> are exactly identical; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Valores de ponto flutuante podem adquirir um pequeno grau de erro quando eles são operados.  O <xref:System.Windows.Media.Color.Equals%2A> método, o <xref:System.Windows.Media.Color.op_Equality%2A> operador e o <xref:System.Windows.Media.Color.op_Inequality%2A> operador não compensar isso e, portanto, podem não retornar o resultado booliano esperado.  
  
 O <xref:System.Windows.Media.Color.AreClose%2A> método usa um algoritmo de igualdade difusa compensa esse erro de aritmético de ponto flutuante, retornando `true` para obter uma comparação de dois <xref:System.Windows.Media.Color> estruturas que são praticamente idênticos, mas cujos valores podem ser diferentes por um Quantidade minuscule.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Color.AreClose(System.Windows.Media.Color,System.Windows.Media.Color)" />
        <altmember cref="M:System.Windows.Media.Color.op_Equality(System.Windows.Media.Color,System.Windows.Media.Color)" />
        <altmember cref="M:System.Windows.Media.Color.op_Inequality(System.Windows.Media.Color,System.Windows.Media.Color)" />
      </Docs>
    </Member>
    <Member MemberName="FromArgb">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Color FromArgb (byte a, byte r, byte g, byte b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Media.Color FromArgb(unsigned int8 a, unsigned int8 r, unsigned int8 g, unsigned int8 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Color.FromArgb(System.Byte,System.Byte,System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromArgb (a As Byte, r As Byte, g As Byte, b As Byte) As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Color FromArgb(System::Byte a, System::Byte r, System::Byte g, System::Byte b);" />
      <MemberSignature Language="F#" Value="static member FromArgb : byte * byte * byte * byte -&gt; System.Windows.Media.Color" Usage="System.Windows.Media.Color.FromArgb (a, r, g, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Byte" />
        <Parameter Name="r" Type="System.Byte" />
        <Parameter Name="g" Type="System.Byte" />
        <Parameter Name="b" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="a">The alpha channel, <see cref="P:System.Windows.Media.Color.A" />, of the new color.</param>
        <param name="r">The red channel, <see cref="P:System.Windows.Media.Color.R" />, of the new color.</param>
        <param name="g">The green channel, <see cref="P:System.Windows.Media.Color.G" />, of the new color.</param>
        <param name="b">The blue channel, <see cref="P:System.Windows.Media.Color.B" />, of the new color.</param>
        <summary>Creates a new <see cref="T:System.Windows.Media.Color" /> structure by using the specified <see langword="sRGB" /> alpha channel and color channel values.</summary>
        <returns>A <see cref="T:System.Windows.Media.Color" /> structure with the specified values.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Media.Color.FromArgb%2A> método permite que você especifique o canal alfa; o <xref:System.Windows.Media.Color.FromRgb%2A> método usa um valor padrão de 255 para o canal alfa.  
  
 O canal alfa da cor determina a quantidade de transparência da cor. Um valor alfa de 255 indica que a cor é completamente opaca e um valor de 0 indica que a cor é completamente transparente.  
  
   
  
## Examples  
 [!code-csharp[BrushesMiscSnippets_procedural_snip#FromArgbExample](~/samples/snippets/csharp/VS_Snippets_Wpf/BrushesMiscSnippets_procedural_snip/CSharp/CreateColorsFromExample.cs#fromargbexample)]
 [!code-vb[BrushesMiscSnippets_procedural_snip#FromArgbExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BrushesMiscSnippets_procedural_snip/visualbasic/createcolorsfromexample.vb#fromargbexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Color.FromRgb(System.Byte,System.Byte,System.Byte)" />
        <altmember cref="M:System.Windows.Media.Color.FromScRgb(System.Single,System.Single,System.Single,System.Single)" />
        <altmember cref="M:System.Windows.Media.Color.FromAValues(System.Single,System.Single[],System.Uri)" />
        <altmember cref="M:System.Windows.Media.Color.FromValues(System.Single[],System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="FromAValues">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Color FromAValues (float a, float[] values, Uri profileUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Media.Color FromAValues(float32 a, float32[] values, class System.Uri profileUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Color.FromAValues(System.Single,System.Single[],System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromAValues (a As Single, values As Single(), profileUri As Uri) As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Color FromAValues(float a, cli::array &lt;float&gt; ^ values, Uri ^ profileUri);" />
      <MemberSignature Language="F#" Value="static member FromAValues : single * single[] * Uri -&gt; System.Windows.Media.Color" Usage="System.Windows.Media.Color.FromAValues (a, values, profileUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Single" />
        <Parameter Name="values" Type="System.Single[]" />
        <Parameter Name="profileUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="a">The alpha channel for the new color,a value between 0 and 1.</param>
        <param name="values">A collection of values that specify the color channels for the new color. These values map to the <c>profileUri</c>.</param>
        <param name="profileUri">The [!INCLUDE[TLA#tla_icc](~/includes/tlasharptla-icc-md.md)] or [!INCLUDE[TLA#tla_icm](~/includes/tlasharptla-icm-md.md)] color profile for the new color.</param>
        <summary>Creates a new <see cref="T:System.Windows.Media.Color" /> structure by using the specified alpha channel, color channel values, and color profile.</summary>
        <returns>A <see cref="T:System.Windows.Media.Color" /> structure with the specified values.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um [!INCLUDE[TLA#tla_icc](~/includes/tlasharptla-icc-md.md)] ou [!INCLUDE[TLA#tla_icm](~/includes/tlasharptla-icm-md.md)] perfil de cor contém um perfil de sistema de cores para um determinado aplicativo ou dispositivo, como uma impressora de cor. Este perfil é correspondente a um perfil comum que por sua vez, pode ser mapeado para os perfis individuais de outros dispositivos. Isso permite que o sistema de cores usado pelo dispositivo de um computador para corresponder as cores de outros aplicativos e dispositivos na mesma ou em outros sistemas de computador.  
  
   
  
## Examples  
 O exemplo a seguir mostra como usar o <xref:System.Windows.Media.Color.FromAValues%2A> método para criar um <xref:System.Windows.Media.Color> estrutura.  
  
 [!code-csharp[BrushesMiscSnippets_procedural_snip#FromAValuesExample](~/samples/snippets/csharp/VS_Snippets_Wpf/BrushesMiscSnippets_procedural_snip/CSharp/CreateColorsFromExample.cs#fromavaluesexample)]
 [!code-vb[BrushesMiscSnippets_procedural_snip#FromAValuesExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BrushesMiscSnippets_procedural_snip/visualbasic/createcolorsfromexample.vb#fromavaluesexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromRgb">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Color FromRgb (byte r, byte g, byte b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Media.Color FromRgb(unsigned int8 r, unsigned int8 g, unsigned int8 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Color.FromRgb(System.Byte,System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromRgb (r As Byte, g As Byte, b As Byte) As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Color FromRgb(System::Byte r, System::Byte g, System::Byte b);" />
      <MemberSignature Language="F#" Value="static member FromRgb : byte * byte * byte -&gt; System.Windows.Media.Color" Usage="System.Windows.Media.Color.FromRgb (r, g, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="System.Byte" />
        <Parameter Name="g" Type="System.Byte" />
        <Parameter Name="b" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="r">The <see langword="sRGB" /> red channel, <see cref="P:System.Windows.Media.Color.R" />, of the new color.</param>
        <param name="g">The <see langword="sRGB" /> green channel, <see cref="P:System.Windows.Media.Color.G" />, of the new color.</param>
        <param name="b">The <see langword="sRGB" /> blue channel, <see cref="P:System.Windows.Media.Color.B" />, of the new color.</param>
        <summary>Creates a new <see cref="T:System.Windows.Media.Color" /> structure by using the specified <see langword="sRGB" /> color channel values.</summary>
        <returns>A <see cref="T:System.Windows.Media.Color" /> structure with the specified values and an alpha channel value of 255.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Media.Color.FromArgb%2A> método permite que você especifique o canal alfa; o <xref:System.Windows.Media.Color.FromRgb%2A> método usa um valor padrão de 1 para o canal alfa.  
  
 O canal alfa da cor determina a quantidade de transparência da cor. Um valor alfa de 1 indica que a cor é completamente opaca e um valor de 0 indica que a cor é completamente transparente.  
  
 Os canais sRGB (<xref:System.Windows.Media.Color.A%2A>, <xref:System.Windows.Media.Color.R%2A>, <xref:System.Windows.Media.Color.G%2A>, <xref:System.Windows.Media.Color.B%2A>) e os canais de ScRGB (<xref:System.Windows.Media.Color.ScA%2A>, <xref:System.Windows.Media.Color.ScR%2A>, <xref:System.Windows.Media.Color.ScG%2A>, <xref:System.Windows.Media.Color.ScB%2A>) do <xref:System.Windows.Media.Color> estrutura são sincronizados de propriedades.  Por exemplo, quando <xref:System.Windows.Media.Color.R%2A>, o canal sRGB vermelho, é modificado o canal de ScRGB vermelho, <xref:System.Windows.Media.Color.ScR%2A>, for transformada para o valor equivalente.  
  
   
  
## Examples  
 O exemplo a seguir mostra como usar o <xref:System.Windows.Media.Color.FromRgb%2A> método para criar um <xref:System.Windows.Media.Color> estrutura.  
  
 [!code-csharp[BrushesMiscSnippets_procedural_snip#FromRgbExample](~/samples/snippets/csharp/VS_Snippets_Wpf/BrushesMiscSnippets_procedural_snip/CSharp/CreateColorsFromExample.cs#fromrgbexample)]
 [!code-vb[BrushesMiscSnippets_procedural_snip#FromRgbExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BrushesMiscSnippets_procedural_snip/visualbasic/createcolorsfromexample.vb#fromrgbexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Color.FromArgb(System.Byte,System.Byte,System.Byte,System.Byte)" />
        <altmember cref="M:System.Windows.Media.Color.FromScRgb(System.Single,System.Single,System.Single,System.Single)" />
        <altmember cref="M:System.Windows.Media.Color.FromAValues(System.Single,System.Single[],System.Uri)" />
        <altmember cref="M:System.Windows.Media.Color.FromValues(System.Single[],System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="FromScRgb">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Color FromScRgb (float a, float r, float g, float b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Media.Color FromScRgb(float32 a, float32 r, float32 g, float32 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Color.FromScRgb(System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromScRgb (a As Single, r As Single, g As Single, b As Single) As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Color FromScRgb(float a, float r, float g, float b);" />
      <MemberSignature Language="F#" Value="static member FromScRgb : single * single * single * single -&gt; System.Windows.Media.Color" Usage="System.Windows.Media.Color.FromScRgb (a, r, g, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Single" />
        <Parameter Name="r" Type="System.Single" />
        <Parameter Name="g" Type="System.Single" />
        <Parameter Name="b" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="a">The <see langword="ScRGB" /> alpha channel, <see cref="P:System.Windows.Media.Color.ScA" />, of the new color.</param>
        <param name="r">The <see langword="ScRGB" /> red channel, <see cref="P:System.Windows.Media.Color.ScR" />, of the new color.</param>
        <param name="g">The <see langword="ScRGB" /> green channel, <see cref="P:System.Windows.Media.Color.ScG" />, of the new color.</param>
        <param name="b">The <see langword="ScRGB" /> blue channel, <see cref="P:System.Windows.Media.Color.ScB" />, of the new color.</param>
        <summary>Creates a new <see cref="T:System.Windows.Media.Color" /> structure by using the specified <see langword="ScRGB" /> alpha channel and color channel values.</summary>
        <returns>A <see cref="T:System.Windows.Media.Color" /> structure with the specified values.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O canal alfa da cor determina a quantidade de transparência da cor. Um valor alfa de 1 indica que a cor é completamente opaca e um valor de 0 indica que a cor é completamente transparente.  
  
   
  
## Examples  
 [!code-csharp[BrushesMiscSnippets_procedural_snip#FromScRgbExample](~/samples/snippets/csharp/VS_Snippets_Wpf/BrushesMiscSnippets_procedural_snip/CSharp/CreateColorsFromExample.cs#fromscrgbexample)]
 [!code-vb[BrushesMiscSnippets_procedural_snip#FromScRgbExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BrushesMiscSnippets_procedural_snip/visualbasic/createcolorsfromexample.vb#fromscrgbexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Color.FromRgb(System.Byte,System.Byte,System.Byte)" />
        <altmember cref="M:System.Windows.Media.Color.FromArgb(System.Byte,System.Byte,System.Byte,System.Byte)" />
        <altmember cref="M:System.Windows.Media.Color.FromValues(System.Single[],System.Uri)" />
        <altmember cref="M:System.Windows.Media.Color.FromAValues(System.Single,System.Single[],System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="FromValues">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Color FromValues (float[] values, Uri profileUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Media.Color FromValues(float32[] values, class System.Uri profileUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Color.FromValues(System.Single[],System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromValues (values As Single(), profileUri As Uri) As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Color FromValues(cli::array &lt;float&gt; ^ values, Uri ^ profileUri);" />
      <MemberSignature Language="F#" Value="static member FromValues : single[] * Uri -&gt; System.Windows.Media.Color" Usage="System.Windows.Media.Color.FromValues (values, profileUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Single[]" />
        <Parameter Name="profileUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="values">A collection of values that specify the color channels for the new color. These values map to the <c>profileUri</c>.</param>
        <param name="profileUri">The [!INCLUDE[TLA#tla_icc](~/includes/tlasharptla-icc-md.md)] or [!INCLUDE[TLA#tla_icm](~/includes/tlasharptla-icm-md.md)] color profile for the new color.</param>
        <summary>Creates a new <see cref="T:System.Windows.Media.Color" /> structure by using the specified color channel values and color profile.</summary>
        <returns>A <see cref="T:System.Windows.Media.Color" /> structure with the specified values and an alpha channel value of 1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um [!INCLUDE[TLA#tla_icc](~/includes/tlasharptla-icc-md.md)] ou [!INCLUDE[TLA#tla_icm](~/includes/tlasharptla-icm-md.md)] perfil de cor contém um perfil de sistema de cores para um determinado aplicativo ou dispositivo, como uma impressora de cor. Este perfil é correspondente a um perfil comum que por sua vez, pode ser mapeado para os perfis individuais de outros dispositivos. Isso permite que o sistema de cores usado pelo dispositivo de um computador para corresponder as cores de outros aplicativos e dispositivos na mesma ou em outros sistemas de computador.  
  
   
  
## Examples  
 O exemplo a seguir mostra como usar o <xref:System.Windows.Media.Color.FromValues%2A> método para criar um <xref:System.Windows.Media.Color> estrutura.  
  
 [!code-csharp[BrushesMiscSnippets_procedural_snip#FromValuesExample](~/samples/snippets/csharp/VS_Snippets_Wpf/BrushesMiscSnippets_procedural_snip/CSharp/CreateColorsFromExample.cs#fromvaluesexample)]
 [!code-vb[BrushesMiscSnippets_procedural_snip#FromValuesExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BrushesMiscSnippets_procedural_snip/visualbasic/createcolorsfromexample.vb#fromvaluesexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="G">
      <MemberSignature Language="C#" Value="public byte G { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 G" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Color.G" />
      <MemberSignature Language="VB.NET" Value="Public Property G As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte G { System::Byte get(); void set(System::Byte value); };" />
      <MemberSignature Language="F#" Value="member this.G : byte with get, set" Usage="System.Windows.Media.Color.G" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see langword="sRGB" /> green channel value of the color.</summary>
        <value>O <see langword="sRGB" /> valor de canal de verde a <see cref="T:System.Windows.Media.Color" /> estruturar um valor entre 0 e 255.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `sRGB` canais (<xref:System.Windows.Media.Color.A%2A>, <xref:System.Windows.Media.Color.R%2A>, <xref:System.Windows.Media.Color.G%2A>, <xref:System.Windows.Media.Color.B%2A>) e o `ScRGB` canais (<xref:System.Windows.Media.Color.ScA%2A>, <xref:System.Windows.Media.Color.ScR%2A>, <xref:System.Windows.Media.Color.ScG%2A>, <xref:System.Windows.Media.Color.ScB%2A>) do <xref:System.Windows.Media.Color> são de estrutura propriedades sincronizadas.  Por exemplo, quando <xref:System.Windows.Media.Color.G%2A>, o `sRGB` verde canal, que é modificado, o `ScRGB` canal verde, <xref:System.Windows.Media.Color.ScG%2A>, é convertido para o equivalente usando o valor de 0 a 1 de valor de intervalo que o `Sc` esquema dá suporte a.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Color.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="color.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets a hash code for this <see cref="T:System.Windows.Media.Color" /> structure.</summary>
        <returns>A hash code for this <see cref="T:System.Windows.Media.Color" /> structure.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNativeColorValues">
      <MemberSignature Language="C#" Value="public float[] GetNativeColorValues ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32[] GetNativeColorValues() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Color.GetNativeColorValues" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNativeColorValues () As Single()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;float&gt; ^ GetNativeColorValues();" />
      <MemberSignature Language="F#" Value="member this.GetNativeColorValues : unit -&gt; single[]" Usage="color.GetNativeColorValues " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the color channel values of the color.</summary>
        <returns>An array of color channel values.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Color Multiply (System.Windows.Media.Color color, float coefficient);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Media.Color Multiply(valuetype System.Windows.Media.Color color, float32 coefficient) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Color.Multiply(System.Windows.Media.Color,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Color Multiply(System::Windows::Media::Color color, float coefficient);" />
      <MemberSignature Language="F#" Value="static member Multiply : System.Windows.Media.Color * single -&gt; System.Windows.Media.Color" Usage="System.Windows.Media.Color.Multiply (color, coefficient)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="System.Windows.Media.Color" />
        <Parameter Name="coefficient" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="color">The <see cref="T:System.Windows.Media.Color" /> to be multiplied.</param>
        <param name="coefficient">The value to multiply by.</param>
        <summary>Multiplies the alpha, red, blue, and green channels of the specified <see cref="T:System.Windows.Media.Color" /> structure by the specified value.</summary>
        <returns>A new <see cref="T:System.Windows.Media.Color" /> structure whose color values are the results of the multiplication operation.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Media.Color.op_Multiply(System.Windows.Media.Color,System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Color operator + (System.Windows.Media.Color color1, System.Windows.Media.Color color2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Media.Color op_Addition(valuetype System.Windows.Media.Color color1, valuetype System.Windows.Media.Color color2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Color.op_Addition(System.Windows.Media.Color,System.Windows.Media.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (color1 As Color, color2 As Color) As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Color operator +(System::Windows::Media::Color color1, System::Windows::Media::Color color2);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Windows.Media.Color * System.Windows.Media.Color -&gt; System.Windows.Media.Color" Usage="color1 + color2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color1" Type="System.Windows.Media.Color" />
        <Parameter Name="color2" Type="System.Windows.Media.Color" />
      </Parameters>
      <Docs>
        <param name="color1">The first <see cref="T:System.Windows.Media.Color" /> structure to add.</param>
        <param name="color2">The second <see cref="T:System.Windows.Media.Color" /> structure to add.</param>
        <summary>Adds two <see cref="T:System.Windows.Media.Color" /> structures.</summary>
        <returns>A new <see cref="T:System.Windows.Media.Color" /> structure whose color values are the results of the addition operation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Color> estruturas são adicionadas juntos, adicionando os canais alfabéticos, vermelhos, verdes e azuis da cor de primeiro aos canais alfabéticos, vermelhos, verdes e azuis da cor de segundo.  Por exemplo, o canal alfa das `color1` e o canal alfa da `color2` são adicionados juntos para produzir o canal alfa da cor resultante.  O mesmo é feito com os canais de vermelhos, verdes e azuis para produzir os canais de vermelhos, verdes e azuis da nova cor.  
  
 É o método equivalente para esse operador <xref:System.Windows.Media.Color.Add%28System.Windows.Media.Color%2CSystem.Windows.Media.Color%29?displayProperty=nameWithType>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Media.Color color1, System.Windows.Media.Color color2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Media.Color color1, valuetype System.Windows.Media.Color color2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Color.op_Equality(System.Windows.Media.Color,System.Windows.Media.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (color1 As Color, color2 As Color) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Media::Color color1, System::Windows::Media::Color color2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Media.Color * System.Windows.Media.Color -&gt; bool" Usage="color1 = color2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color1" Type="System.Windows.Media.Color" />
        <Parameter Name="color2" Type="System.Windows.Media.Color" />
      </Parameters>
      <Docs>
        <param name="color1">The first <see cref="T:System.Windows.Media.Color" /> structure to compare.</param>
        <param name="color2">The second <see cref="T:System.Windows.Media.Color" /> structure to compare.</param>
        <summary>Tests whether two <see cref="T:System.Windows.Media.Color" /> structures are identical.</summary>
        <returns>
          <see langword="true" /> if <paramref name="color1" /> and <paramref name="color2" /> are exactly identical; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Valores de ponto flutuante podem adquirir um pequeno grau de erro quando eles são operados.  O <xref:System.Windows.Media.Color.Equals%2A> método, o <xref:System.Windows.Media.Color.op_Equality%2A> operador e o <xref:System.Windows.Media.Color.op_Inequality%2A> operador não compensar isso e, portanto, podem não retornar o resultado booliano esperado.  
  
 O <xref:System.Windows.Media.Color.AreClose%2A> método usa um algoritmo de igualdade difusa compensa esse erro de aritmético de ponto flutuante, retornando `true` para obter uma comparação de dois <xref:System.Windows.Media.Color> estruturas que são praticamente idênticos, mas cujos valores podem ser diferentes por um Quantidade minuscule.  
  
 É o método equivalente para esse operador <xref:System.Windows.Media.Color.Equals%28System.Windows.Media.Color%2CSystem.Windows.Media.Color%29?displayProperty=nameWithType>]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Color.AreClose(System.Windows.Media.Color,System.Windows.Media.Color)" />
        <altmember cref="Overload:System.Windows.Media.Color.Equals" />
        <altmember cref="M:System.Windows.Media.Color.op_Inequality(System.Windows.Media.Color,System.Windows.Media.Color)" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Media.Color color1, System.Windows.Media.Color color2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Media.Color color1, valuetype System.Windows.Media.Color color2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Color.op_Inequality(System.Windows.Media.Color,System.Windows.Media.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (color1 As Color, color2 As Color) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Media::Color color1, System::Windows::Media::Color color2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Media.Color * System.Windows.Media.Color -&gt; bool" Usage="System.Windows.Media.Color.op_Inequality (color1, color2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color1" Type="System.Windows.Media.Color" />
        <Parameter Name="color2" Type="System.Windows.Media.Color" />
      </Parameters>
      <Docs>
        <param name="color1">The first <see cref="T:System.Windows.Media.Color" /> structure to compare.</param>
        <param name="color2">The second <see cref="T:System.Windows.Media.Color" /> structure to compare.</param>
        <summary>Tests whether two <see cref="T:System.Windows.Media.Color" /> structures are not identical.</summary>
        <returns>
          <see langword="true" /> if <paramref name="color1" /> and <paramref name="color2" /> are not equal; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Valores de ponto flutuante podem adquirir um pequeno grau de erro quando eles são operados.  O <xref:System.Windows.Media.Color.Equals%2A> método, o <xref:System.Windows.Media.Color.op_Equality%2A> operador e o <xref:System.Windows.Media.Color.op_Inequality%2A> operador não compensar isso e, portanto, podem não retornar o resultado booliano esperado.  
  
 O <xref:System.Windows.Media.Color.AreClose%2A> método usa um algoritmo de igualdade difusa compensa esse erro de aritmético de ponto flutuante, retornando `true` para obter uma comparação de dois <xref:System.Windows.Media.Color> estruturas que são praticamente idênticos, mas cujos valores podem ser diferentes por um Quantidade minuscule.  
  
 É o método equivalente para esse operador <xref:System.Windows.Media.Color.Equals%28System.Windows.Media.Color%2CSystem.Windows.Media.Color%29?displayProperty=nameWithType>]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Color.AreClose(System.Windows.Media.Color,System.Windows.Media.Color)" />
        <altmember cref="Overload:System.Windows.Media.Color.Equals" />
        <altmember cref="M:System.Windows.Media.Color.op_Equality(System.Windows.Media.Color,System.Windows.Media.Color)" />
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Color operator * (System.Windows.Media.Color color, float coefficient);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Media.Color op_Multiply(valuetype System.Windows.Media.Color color, float32 coefficient) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Color.op_Multiply(System.Windows.Media.Color,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Color operator *(System::Windows::Media::Color color, float coefficient);" />
      <MemberSignature Language="F#" Value="static member ( * ) : System.Windows.Media.Color * single -&gt; System.Windows.Media.Color" Usage="color * coefficient" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="System.Windows.Media.Color" />
        <Parameter Name="coefficient" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="color">The <see cref="T:System.Windows.Media.Color" /> to be multiplied.</param>
        <param name="coefficient">The value to multiply by.</param>
        <summary>Multiplies the alpha, red, blue, and green channels of the specified <see cref="T:System.Windows.Media.Color" /> structure by the specified value.</summary>
        <returns>A new <see cref="T:System.Windows.Media.Color" /> structure whose color values are the results of the multiplication operation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[É o método equivalente para esse operador <xref:System.Windows.Media.Color.Multiply%28System.Windows.Media.Color%2CSystem.Single%29?displayProperty=nameWithType>]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Color.Multiply(System.Windows.Media.Color,System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Color operator - (System.Windows.Media.Color color1, System.Windows.Media.Color color2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Media.Color op_Subtraction(valuetype System.Windows.Media.Color color1, valuetype System.Windows.Media.Color color2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Color.op_Subtraction(System.Windows.Media.Color,System.Windows.Media.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (color1 As Color, color2 As Color) As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Color operator -(System::Windows::Media::Color color1, System::Windows::Media::Color color2);" />
      <MemberSignature Language="F#" Value="static member ( - ) : System.Windows.Media.Color * System.Windows.Media.Color -&gt; System.Windows.Media.Color" Usage="color1 - color2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color1" Type="System.Windows.Media.Color" />
        <Parameter Name="color2" Type="System.Windows.Media.Color" />
      </Parameters>
      <Docs>
        <param name="color1">The <see cref="T:System.Windows.Media.Color" /> structure to be subtracted from.</param>
        <param name="color2">The <see cref="T:System.Windows.Media.Color" /> structure to subtract from <c>color1</c>.</param>
        <summary>Subtracts a <see cref="T:System.Windows.Media.Color" /> structure from a <see cref="T:System.Windows.Media.Color" /> structure.</summary>
        <returns>A new <see cref="T:System.Windows.Media.Color" /> structure whose color values are the results of the subtraction operation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Color> estruturas são subtraídas uns dos outros, subtraindo os canais alfabéticos, vermelhos, verdes e azuis da cor do segundo pelos canais alfabéticos, vermelhos, verdes e azuis da cor de primeiro.  Por exemplo, o canal alfa das `color2` é subtraído do canal alfa das `color1` para produzir o canal alfa da resultante <xref:System.Windows.Media.Color> estrutura.  O mesmo é feito com os canais de vermelhos, verdes e azuis para produzir os canais de vermelhos, verdes e azuis da nova <xref:System.Windows.Media.Color> estrutura.  
  
 É o método equivalente para esse operador <xref:System.Windows.Media.Color.Subtract%28System.Windows.Media.Color%2CSystem.Windows.Media.Color%29?displayProperty=nameWithType>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="R">
      <MemberSignature Language="C#" Value="public byte R { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 R" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Color.R" />
      <MemberSignature Language="VB.NET" Value="Public Property R As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte R { System::Byte get(); void set(System::Byte value); };" />
      <MemberSignature Language="F#" Value="member this.R : byte with get, set" Usage="System.Windows.Media.Color.R" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see langword="sRGB" /> red channel value of the color.</summary>
        <value>O <see langword="sRGB" /> valor de canal vermelho do <see cref="T:System.Windows.Media.Color" /> estruturar um valor entre 0 e 255.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `sRGB` canais (<xref:System.Windows.Media.Color.A%2A>, <xref:System.Windows.Media.Color.R%2A>, <xref:System.Windows.Media.Color.G%2A>, <xref:System.Windows.Media.Color.B%2A>) e o `ScRGB` canais (<xref:System.Windows.Media.Color.ScA%2A>, <xref:System.Windows.Media.Color.ScR%2A>, <xref:System.Windows.Media.Color.ScG%2A>, <xref:System.Windows.Media.Color.ScB%2A>) do <xref:System.Windows.Media.Color> são de estrutura propriedades sincronizadas.  Por exemplo, quando <xref:System.Windows.Media.Color.R%2A>, o `sRGB` canal vermelho, for modificado, o `ScRGB` canal vermelho, <xref:System.Windows.Media.Color.ScR%2A>, é convertido para o equivalente usando o valor de 0 a 1 de valor de intervalo que o `Sc` esquema dá suporte a.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScA">
      <MemberSignature Language="C#" Value="public float ScA { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 ScA" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Color.ScA" />
      <MemberSignature Language="VB.NET" Value="Public Property ScA As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float ScA { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.ScA : single with get, set" Usage="System.Windows.Media.Color.ScA" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see langword="ScRGB" /> alpha channel value of the color.</summary>
        <value>O valor de canal alfa <see langword="ScRGB" /> da estrutura <see cref="T:System.Windows.Media.Color" />, um valor entre 0 e 1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O canal alfa de um <xref:System.Windows.Media.Color> estrutura determina a quantidade de transparência a <xref:System.Windows.Media.Color> tem.  Um valor alfa de 1 indica o <xref:System.Windows.Media.Color> é completamente opaco e um valor de 0 indica a cor é completamente transparente.  
  
 O `sRGB` canais (<xref:System.Windows.Media.Color.A%2A>, <xref:System.Windows.Media.Color.R%2A>, <xref:System.Windows.Media.Color.G%2A>, <xref:System.Windows.Media.Color.B%2A>) e o `ScRGB` canais (<xref:System.Windows.Media.Color.ScA%2A>, <xref:System.Windows.Media.Color.ScR%2A>, <xref:System.Windows.Media.Color.ScG%2A>, <xref:System.Windows.Media.Color.ScB%2A>) do <xref:System.Windows.Media.Color> são de estrutura propriedades sincronizadas.  Por exemplo, quando <xref:System.Windows.Media.Color.A%2A>, o `sRGB` canal alfa, for modificado, o `ScRGB` canal alfa, <xref:System.Windows.Media.Color.ScA%2A> é convertido para o equivalente usando o valor de 0 a 1 de valor de intervalo que o `Sc` esquema dá suporte a.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScB">
      <MemberSignature Language="C#" Value="public float ScB { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 ScB" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Color.ScB" />
      <MemberSignature Language="VB.NET" Value="Public Property ScB As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float ScB { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.ScB : single with get, set" Usage="System.Windows.Media.Color.ScB" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the ScRGB blue channel value of the color.</summary>
        <value>O valor de canal vermelho ScRGB do <see cref="T:System.Windows.Media.Color" /> estruturar um valor entre 0 e 1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `sRGB` canais (<xref:System.Windows.Media.Color.A%2A>, <xref:System.Windows.Media.Color.R%2A>, <xref:System.Windows.Media.Color.G%2A>, <xref:System.Windows.Media.Color.B%2A>) e o `ScRGB` canais (<xref:System.Windows.Media.Color.ScA%2A>, <xref:System.Windows.Media.Color.ScR%2A>, <xref:System.Windows.Media.Color.ScG%2A>, <xref:System.Windows.Media.Color.ScB%2A>) do <xref:System.Windows.Media.Color> são de estrutura propriedades sincronizadas.  Por exemplo, quando <xref:System.Windows.Media.Color.B%2A>, o `sRGB` azul canal, que é modificado, o `ScRGB` canal azul, <xref:System.Windows.Media.Color.ScB%2A>, é convertido para o equivalente usando o valor de 0 a 1 de valor de intervalo que o `Sc` esquema dá suporte a.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScG">
      <MemberSignature Language="C#" Value="public float ScG { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 ScG" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Color.ScG" />
      <MemberSignature Language="VB.NET" Value="Public Property ScG As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float ScG { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.ScG : single with get, set" Usage="System.Windows.Media.Color.ScG" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see langword="ScRGB" /> green channel value of the color.</summary>
        <value>O <see langword="ScRGB" /> valor de canal de verde a <see cref="T:System.Windows.Media.Color" /> estruturar um valor entre 0 e 1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `sRGB` canais (<xref:System.Windows.Media.Color.A%2A>, <xref:System.Windows.Media.Color.R%2A>, <xref:System.Windows.Media.Color.G%2A>, <xref:System.Windows.Media.Color.B%2A>) e o `ScRGB` canais (<xref:System.Windows.Media.Color.ScA%2A>, <xref:System.Windows.Media.Color.ScR%2A>, <xref:System.Windows.Media.Color.ScG%2A>, <xref:System.Windows.Media.Color.ScB%2A>) do <xref:System.Windows.Media.Color> são de estrutura propriedades sincronizadas.  Por exemplo, quando <xref:System.Windows.Media.Color.G%2A>, o `sRGB` verde canal, que é modificado, o `ScRGB` canal verde, <xref:System.Windows.Media.Color.ScG%2A> é convertido para o equivalente usando o valor de 0 a 1 de valor de intervalo que o `Sc` esquema dá suporte a.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScR">
      <MemberSignature Language="C#" Value="public float ScR { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 ScR" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Color.ScR" />
      <MemberSignature Language="VB.NET" Value="Public Property ScR As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float ScR { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.ScR : single with get, set" Usage="System.Windows.Media.Color.ScR" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see langword="ScRGB" /> red channel value of the color.</summary>
        <value>O <see langword="ScRGB" /> valor de canal vermelho do <see cref="T:System.Windows.Media.Color" /> estruturar um valor entre 0 e 1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O `sRGB` canais (<xref:System.Windows.Media.Color.A%2A>, <xref:System.Windows.Media.Color.R%2A>, <xref:System.Windows.Media.Color.G%2A>, <xref:System.Windows.Media.Color.B%2A>) e o `ScRGB` canais (<xref:System.Windows.Media.Color.ScA%2A>, <xref:System.Windows.Media.Color.ScR%2A>, <xref:System.Windows.Media.Color.ScG%2A>, <xref:System.Windows.Media.Color.ScB%2A>) do <xref:System.Windows.Media.Color> são de estrutura propriedades sincronizadas.  Por exemplo, quando <xref:System.Windows.Media.Color.R%2A>, o `sRGB` canal vermelho, for modificado, o `ScRGB` canal vermelho, <xref:System.Windows.Media.Color.ScR%2A>, é convertido para o equivalente usando o valor de 0 a 1 de valor de intervalo que o `Sc` esquema dá suporte a.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Color Subtract (System.Windows.Media.Color color1, System.Windows.Media.Color color2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Media.Color Subtract(valuetype System.Windows.Media.Color color1, valuetype System.Windows.Media.Color color2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Color.Subtract(System.Windows.Media.Color,System.Windows.Media.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Subtract (color1 As Color, color2 As Color) As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Color Subtract(System::Windows::Media::Color color1, System::Windows::Media::Color color2);" />
      <MemberSignature Language="F#" Value="static member Subtract : System.Windows.Media.Color * System.Windows.Media.Color -&gt; System.Windows.Media.Color" Usage="System.Windows.Media.Color.Subtract (color1, color2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color1" Type="System.Windows.Media.Color" />
        <Parameter Name="color2" Type="System.Windows.Media.Color" />
      </Parameters>
      <Docs>
        <param name="color1">The <see cref="T:System.Windows.Media.Color" /> structure to be subtracted from.</param>
        <param name="color2">The <see cref="T:System.Windows.Media.Color" /> structure to subtract from <c>color1</c>.</param>
        <summary>Subtracts a <see cref="T:System.Windows.Media.Color" /> structure from a <see cref="T:System.Windows.Media.Color" /> structure.</summary>
        <returns>A new <see cref="T:System.Windows.Media.Color" /> structure whose color values are the results of the subtraction operation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Color> estruturas são subtraídas uns dos outros, subtraindo os canais alfabéticos, vermelhos, verdes e azuis da cor do segundo pelos canais alfabéticos, vermelhos, verdes e azuis da cor de primeiro.  Por exemplo, o canal alfa das `color2` é subtraído do canal alfa das `color1` para produzir o canal alfa da resultante <xref:System.Windows.Media.Color> estrutura.  O mesmo é feito com os canais de vermelhos, verdes e azuis para produzir os canais de vermelhos, verdes e azuis da nova <xref:System.Windows.Media.Color> estrutura.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Color.op_Subtraction(System.Windows.Media.Color,System.Windows.Media.Color)" />
      </Docs>
    </Member>
    <Member MemberName="System.IFormattable.ToString">
      <MemberSignature Language="C#" Value="string IFormattable.ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IFormattable.ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Color.System#IFormattable#ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (format As String, provider As IFormatProvider) As String Implements IFormattable.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IFormattable.ToString(System::String ^ format, IFormatProvider ^ provider) = IFormattable::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">The format to use.  -or-  A null reference (<see langword="Nothing" /> in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</param>
        <param name="provider">The provider to use to format the value.  -or-  A null reference (<see langword="Nothing" /> in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</param>
        <summary>Formats the value of the current instance using the specified format.</summary>
        <returns>The value of the current instance in the specified format.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Creates a string representation of the color by using the <see langword="sRGB" /> channels.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Color.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="color.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a string representation of the color using the <see langword="sRGB" /> channels.</summary>
        <returns>The string representation of the color. The default implementation represents the <see cref="T:System.Byte" /> values in hex form, prefixes with the <c>#</c> character, and starts with the alpha channel. For example, the <see cref="M:System.Windows.Media.Color.ToString" /> value for <see cref="P:System.Windows.Media.Colors.AliceBlue" /> is <c>#FFF0F8FF</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Color.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="color.ToString provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">Culture-specific formatting information.</param>
        <summary>Creates a string representation of the color by using the <see langword="sRGB" /> channels and the specified format provider.</summary>
        <returns>The string representation of the color.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>