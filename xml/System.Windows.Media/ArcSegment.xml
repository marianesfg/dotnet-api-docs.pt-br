<Type Name="ArcSegment" FullName="System.Windows.Media.ArcSegment">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4ea813a0debea0d5d584dbffe701f14ae99e44bf" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30669240" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ArcSegment : System.Windows.Media.PathSegment" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ArcSegment extends System.Windows.Media.PathSegment" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.ArcSegment" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ArcSegment&#xA;Inherits PathSegment" />
  <TypeSignature Language="C++ CLI" Value="public ref class ArcSegment sealed : System::Windows::Media::PathSegment" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.PathSegment</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa um arco elíptico entre dois pontos.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use um <xref:System.Windows.Media.PathFigure> objeto para armazenar <xref:System.Windows.Media.ArcSegment> objetos e outros segmentos.  
  
 Um arco elíptico é definido por seu fator de rotação de eixo x do pontos inicial e final, raios x e y-, um valor que indica se o arco deve ser maior que 180 graus e um valor que descreve a direção na qual o arco é desenhado. O <xref:System.Windows.Media.ArcSegment> classe não contém uma propriedade para o ponto de partida do arco; ela somente define o ponto de destino do arco representa. O ponto de início do arco é o ponto atual do <xref:System.Windows.Media.PathFigure> para que o <xref:System.Windows.Media.ArcSegment> é adicionado.  
  
 As ilustrações a seguir demonstram o ponto de extremidade diferente, <xref:System.Windows.Media.ArcSegment.Size%2A>, e <xref:System.Windows.Media.ArcSegment.RotationAngle%2A> configurações.  
  
 ![ArcSegments com diferentes configurações de ponto](~/add/media/arcsegment-point.png "ArcSegments com diferentes configurações de ponto")  
  
 ![ArcSegments com diferentes configurações de tamanho](~/add/media/arcsegment-size.png "ArcSegments com diferentes configurações de tamanho")  
  
 ![ArcSegments com diferentes configurações de RotationAngle](~/add/media/arcsegment-rotationangle.png "ArcSegments com diferentes configurações de RotationAngle")  
  
## <a name="islargearc-and-sweepdirection"></a>IsLargeArc e SweepDirection  
 Para a maioria dos arcos de uma posição específica, o tamanho e a rotação, há quatro arcos diferentes que podem ser desenhados; o <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> e <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> propriedades indicam quais arco para usar.  
  
 De varreduras o arco quatro candidato, dois representam arcos grandes com varreduras de 180 graus ou maior, e dois representam arcos menores com varreduras 180 graus ou menos. Se <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> é **true**, um as dois varreduras de arco maior é escolhido; caso contrário, se é **false**, um do arco menor varreduras é escolhida. Cada os candidatos de duas arco restantes são desenhados em uma direção diferente: <xref:System.Windows.Media.SweepDirection.Counterclockwise> ou <xref:System.Windows.Media.SweepDirection.Clockwise>. O <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> propriedade especifica qual delas usar.  
  
 As ilustrações a seguir mostram diferentes <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> e <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> configurações.  
  
 ![ArcSegments com diferentes configurações de IsLargeArc](~/add/media/arcsegment-islargearc.png "ArcSegments com diferentes configurações de IsLargeArc")  
ArcSegment objetos com diferentes configurações de IsLargeArc  
  
 ![ArcSegments com diferentes configurações de SweepDirection](~/add/media/arcsegment-sweepdirection.png "ArcSegments com diferentes configurações de SweepDirection")  
ArcSegment objetos com diferentes configurações de SweepDirection  
  
## <a name="freezable-features"></a>Recursos congeláveis  
 Um <xref:System.Windows.Media.ArcSegment> é um tipo de <xref:System.Windows.Freezable> objeto. Para obter informações sobre <xref:System.Windows.Freezable> recursos, como congelamento e clonagem, consulte o [visão geral de objetos Freezable](~/docs/framework/wpf/advanced/freezable-objects-overview.md).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.PathFigure" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Media.ArcSegment" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Media.ArcSegment> classe define apenas o ponto de destino do arco representa; o ponto de início do arco é o ponto atual do <xref:System.Windows.Media.PathFigure>, para que o <xref:System.Windows.Media.ArcSegment> é adicionado.  
  
 Para arcos elípticos mais de uma posição específica, o tamanho e a rotação, há quatro arcos diferentes que podem ser desenhados; o `largeArc` e `sweepDirection` parâmetros indicam quais arco para usar.  
  
 De varreduras o arco quatro candidato, dois representam arcos grandes com varreduras de 180 graus ou maior, e dois representam arcos menores com varreduras 180 graus ou menos. Se `largeArc` é **true**, um as dois varreduras de arco maior é escolhido; caso contrário, se `largeArc` é **false**, um do arco menor varreduras é escolhida.  
  
 Se `sweepDirection` é <xref:System.Windows.Media.SweepDirection.Clockwise>, o arco é desenhado na direção ângulo-positiva. Se `sweepDirection` é <xref:System.Windows.Media.SweepDirection.Counterclockwise>, o arco é desenhado em uma direção negativa ângulo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArcSegment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.ArcSegment.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArcSegment();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Media.ArcSegment" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Media.ArcSegment> classe define apenas o ponto de destino do arco representa; o ponto de início do arco é o ponto atual do <xref:System.Windows.Media.PathFigure>, para que o <xref:System.Windows.Media.ArcSegment> é adicionado.  
  
 Para arcos elípticos mais de uma posição específica, o tamanho e a rotação, há quatro arcos diferentes que podem ser desenhados; o `largeArc` e `sweepDirection` parâmetros indicam quais arco para usar.  
  
 De varreduras o arco quatro candidato, dois representam arcos grandes com varreduras de 180 graus ou maior, e dois representam arcos menores com varreduras 180 graus ou menos. Se `largeArc` é **true**, um as dois varreduras de arco maior é escolhido; caso contrário, se `largeArc` é **false**, um do arco menor varreduras é escolhida.  
  
 Se `sweepDirection` é <xref:System.Windows.Media.SweepDirection.Clockwise>, o arco é desenhado na direção ângulo-positiva. Se `sweepDirection` é <xref:System.Windows.Media.SweepDirection.Counterclockwise>, o arco é desenhado em uma direção negativa ângulo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArcSegment (System.Windows.Point point, System.Windows.Size size, double rotationAngle, bool isLargeArc, System.Windows.Media.SweepDirection sweepDirection, bool isStroked);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Point point, valuetype System.Windows.Size size, float64 rotationAngle, bool isLargeArc, valuetype System.Windows.Media.SweepDirection sweepDirection, bool isStroked) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.ArcSegment.#ctor(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArcSegment(System::Windows::Point point, System::Windows::Size size, double rotationAngle, bool isLargeArc, System::Windows::Media::SweepDirection sweepDirection, bool isStroked);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="size" Type="System.Windows.Size" />
        <Parameter Name="rotationAngle" Type="System.Double" />
        <Parameter Name="isLargeArc" Type="System.Boolean" />
        <Parameter Name="sweepDirection" Type="System.Windows.Media.SweepDirection" />
        <Parameter Name="isStroked" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point">O ponto de destino do arco; o ponto inicial do arco é definido como o ponto atual do <see cref="T:System.Windows.Media.PathFigure" /> ao qual o <see cref="T:System.Windows.Media.ArcSegment" /> é adicionado.</param>
        <param name="size">Os raios x e y do arco. O raio x é especificado pela estrutura <see cref="T:System.Windows.Size" />, propriedade <see cref="P:System.Windows.Size.Width" />; o raio y é especificado pela estrutura <see cref="T:System.Windows.Size" />, propriedade <see cref="P:System.Windows.Size.Height" />.</param>
        <param name="rotationAngle">A rotação do eixo x da elipse.</param>
        <param name="isLargeArc">Se o arco deve ser maior que 180 graus.</param>
        <param name="sweepDirection">Defina como <see cref="F:System.Windows.Media.SweepDirection.Clockwise" /> para desenhar o arco em uma orientação de ângulo positivo; defina como <see cref="F:System.Windows.Media.SweepDirection.Counterclockwise" /> para desenhar o arco em uma orientação de ângulo negativo.</param>
        <param name="isStroked">Defina como <c>true</c> para traçar o arco quando um <see cref="T:System.Windows.Media.Pen" /> for usado para renderizar o segmento; caso contrário, <c>false</c>.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Media.ArcSegment" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Media.ArcSegment> classe define apenas o ponto de destino do arco representa; o ponto de início do arco é o ponto atual do <xref:System.Windows.Media.PathFigure>, para que o <xref:System.Windows.Media.ArcSegment> é adicionado.  
  
 Para arcos elípticos mais de uma posição específica, o tamanho e a rotação, há quatro arcos diferentes que podem ser desenhados; o `largeArc` e `sweepDirection` parâmetros indicam quais arco para usar.  
  
 De varreduras o arco quatro candidato, dois representam arcos grandes com varreduras de 180 graus ou maior, e dois representam arcos menores com varreduras 180 graus ou menos. Se `largeArc` é **true**, um as dois varreduras de arco maior é escolhido; caso contrário, se `largeArc` é **false**, um do arco menor varreduras é escolhida.  
  
 Se `sweepDirection` é <xref:System.Windows.Media.SweepDirection.Clockwise>, o arco é desenhado na direção ângulo-positiva. Se `sweepDirection` é <xref:System.Windows.Media.SweepDirection.Counterclockwise>, o arco é desenhado em uma direção negativa ângulo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.ArcSegment Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.ArcSegment Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.ArcSegment.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As ArcSegment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::ArcSegment ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.ArcSegment</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cria um clone modificável desse <see cref="T:System.Windows.Media.ArcSegment" />, fazendo cópias em profundidade dos valores do objeto. Ao copiar as propriedades de dependência, esse método copia associações de dados e referências de recurso (mas eles não podem mais resolver), mas não animações ou seus valores atuais.</summary>
        <returns>Um clone modificável do objeto atual. A propriedade <see cref="P:System.Windows.Freezable.IsFrozen" /> do objeto clonado será <see langword="false" />, mesmo se a propriedade <see cref="P:System.Windows.Freezable.IsFrozen" /> da origem tiver sido <see langword="true." /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método é usado para produzir cópias modificáveis de congelada <xref:System.Windows.Freezable> objetos (ou qualquer <xref:System.Windows.Freezable> objeto). Para sua conveniência, este método sombreia a versão herdada com uma implementação fortemente tipada.  
  
 Para obter mais informações, consulte <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.ArcSegment CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.ArcSegment CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.ArcSegment.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As ArcSegment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::ArcSegment ^ CloneCurrentValue();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.ArcSegment</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cria um clone modificável desse objeto <see cref="T:System.Windows.Media.ArcSegment" />, fazendo cópias em profundidade dos valores do objeto atual. Referências a recursos, vinculações de dados e animações não são copiadas, mas seus valores atuais são.</summary>
        <returns>Um clone modificável do objeto atual. A propriedade <see cref="P:System.Windows.Freezable.IsFrozen" /> do objeto clonado será <see langword="false" />, mesmo se a propriedade <see cref="P:System.Windows.Freezable.IsFrozen" /> da origem tiver sido <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esse método é usado para produzir cópias modificáveis de congelada <xref:System.Windows.Freezable> objetos (ou qualquer <xref:System.Windows.Freezable> objeto). Para sua conveniência, este método sombreia a versão herdada com uma implementação fortemente tipada.  
  
 Para obter mais informações, consulte <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.ArcSegment.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLargeArc">
      <MemberSignature Language="C#" Value="public bool IsLargeArc { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLargeArc" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.ArcSegment.IsLargeArc" />
      <MemberSignature Language="VB.NET" Value="Public Property IsLargeArc As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLargeArc { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se o arco deve ser maior que 180 graus.</summary>
        <value>**true** se o arco deve ser maior que 180 graus; caso contrário, **false**. O valor padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para a maioria dos arcos de uma posição específica, o tamanho e a rotação, há quatro arcos diferentes que podem ser desenhados; o <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> e <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> propriedades indicam quais arco para usar.  
  
 De varreduras o arco quatro candidato, dois representam arcos grandes com varreduras de 180 graus ou maior, e dois representam arcos menores com varreduras 180 graus ou menos. Se <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> é **true**, um as dois varreduras de arco maior é escolhido; caso contrário, se é **false**, um do arco menor varreduras é escolhida. Cada os candidatos de duas arco restantes são desenhados em uma direção diferente: <xref:System.Windows.Media.SweepDirection.Counterclockwise> ou <xref:System.Windows.Media.SweepDirection.Clockwise>. O <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> propriedade especifica qual delas usar.  
  
 A ilustração a seguir mostra dois arcos elípticos idênticos, exceto para seus <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> configurações.  
  
 ![ArcSegments com diferentes configurações de IsLargeArc](~/add/media/arcsegment-islargearc.png "ArcSegments com diferentes configurações de IsLargeArc")  
ArcSegment objetos com diferentes configurações de IsLargeArc  
  
<a name="dependencyPropertyInfo_IsLargeArc"></a>   
## <a name="dependency-property-information"></a>Informações da propriedade de dependência  
  
|||  
|-|-|  
|Campo de identificador|<xref:System.Windows.Media.ArcSegment.IsLargeArcProperty>|  
|Definir propriedades de metadados **true**|Nenhum|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLargeArcProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsLargeArcProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsLargeArcProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.ArcSegment.IsLargeArcProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsLargeArcProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsLargeArcProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica a propriedade de dependência <see cref="P:System.Windows.Media.ArcSegment.IsLargeArc" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Point">
      <MemberSignature Language="C#" Value="public System.Windows.Point Point { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point Point" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.ArcSegment.Point" />
      <MemberSignature Language="VB.NET" Value="Public Property Point As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point Point { System::Windows::Point get(); void set(System::Windows::Point value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o ponto de extremidade do arco elíptico.</summary>
        <value>O ponto em que o arco é desenhado. O valor padrão é (0,0).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O <xref:System.Windows.Media.ArcSegment> classe define apenas o ponto de destino do arco representa; o ponto de início do arco é o ponto atual do <xref:System.Windows.Media.PathFigure> para que o <xref:System.Windows.Media.ArcSegment> é adicionado.  
  
 Se o ponto inicial e o ponto de extremidade do segmento de arco são os mesmos, nenhuma arco é desenhado.  
  
 Para a maioria dos arcos de uma posição específica, o tamanho e a rotação, há quatro arcos diferentes que podem ser desenhados; o <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> e <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> propriedades indicam quais arco para usar.  
  
 De varreduras o arco quatro candidato, dois representam arcos grandes com varreduras de 180 graus ou maior, e dois representam arcos menores com varreduras 180 graus ou menos. Se <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> é **true**, um as dois varreduras de arco maior é escolhido; caso contrário, se é **false**, um do arco menor varreduras é escolhida. Cada os candidatos de duas arco restantes são desenhados em uma direção diferente: <xref:System.Windows.Media.SweepDirection.Counterclockwise> ou <xref:System.Windows.Media.SweepDirection.Clockwise>. O <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> propriedade especifica qual delas usar.  
  
 A ilustração a seguir mostra vários arcos elípticos idênticos, exceto para seus <xref:System.Windows.Media.ArcSegment.Point%2A> configurações.  
  
 ![ArcSegments com diferentes configurações de ponto](~/add/media/arcsegment-point.png "ArcSegments com diferentes configurações de ponto")  
Vários objetos de ArcSegment com diferentes configurações de ponto  
  
<a name="dependencyPropertyInfo_Point"></a>   
## <a name="dependency-property-information"></a>Informações da propriedade de dependência  
  
|||  
|-|-|  
|Campo de identificador|<xref:System.Windows.Media.ArcSegment.PointProperty>|  
|Definir propriedades de metadados **true**|Nenhum|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PointProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PointProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PointProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.ArcSegment.PointProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PointProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PointProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica a propriedade de dependência <see cref="P:System.Windows.Media.ArcSegment.Point" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RotationAngle">
      <MemberSignature Language="C#" Value="public double RotationAngle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 RotationAngle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.ArcSegment.RotationAngle" />
      <MemberSignature Language="VB.NET" Value="Public Property RotationAngle As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double RotationAngle { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o valor (em graus) pelo qual a elipse é girada sobre o eixo x.</summary>
        <value>O valor (em graus) pelo qual a elipse é girada sobre o eixo x. O valor padrão é 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A ilustração a seguir mostra vários arcos elípticos idênticos, exceto para seus <xref:System.Windows.Media.ArcSegment.RotationAngle%2A> configurações.  
  
 ![ArcSegments com diferentes configurações de RotationAngle](~/add/media/arcsegment-rotationangle.png "ArcSegments com diferentes configurações de RotationAngle")  
Vários objetos de ArcSegment com diferentes configurações de RotationAngle  
  
 Observe que, se o arco largura e altura são os mesmos, a definição dessa propriedade não terá efeito.  
  
<a name="dependencyPropertyInfo_RotationAngle"></a>   
## <a name="dependency-property-information"></a>Informações da propriedade de dependência  
  
|||  
|-|-|  
|Campo de identificador|<xref:System.Windows.Media.ArcSegment.RotationAngleProperty>|  
|Definir propriedades de metadados **true**|Nenhum|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotationAngleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RotationAngleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RotationAngleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.ArcSegment.RotationAngleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RotationAngleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ RotationAngleProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica a propriedade de dependência <see cref="P:System.Windows.Media.ArcSegment.RotationAngle" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public System.Windows.Size Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Size Size" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.ArcSegment.Size" />
      <MemberSignature Language="VB.NET" Value="Public Property Size As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Size Size { System::Windows::Size get(); void set(System::Windows::Size value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define o raio x e y do arco como uma estrutura <see cref="T:System.Windows.Size" />.</summary>
        <value>Uma estrutura <see cref="T:System.Windows.Size" /> que descreve o raio x e y do arco elíptico. O <see cref="T:System.Windows.Size" /> da estrutura <see cref="P:System.Windows.Size.Width" /> propriedade especifica o raio do arco x; seu <see cref="P:System.Windows.Size.Height" /> propriedade especifica o raio do arco y. O valor padrão é 0,0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A ilustração a seguir mostra vários arcos elípticos idênticos, exceto para seus <xref:System.Windows.Media.ArcSegment.Size%2A> configurações.  
  
 ![ArcSegments com diferentes configurações de tamanho](~/add/media/arcsegment-size.png "ArcSegments com diferentes configurações de tamanho")  
Vários objetos de ArcSegment com diferentes configurações de tamanho  
  
<a name="dependencyPropertyInfo_Size"></a>   
## <a name="dependency-property-information"></a>Informações da propriedade de dependência  
  
|||  
|-|-|  
|Campo de identificador|<xref:System.Windows.Media.ArcSegment.SizeProperty>|  
|Definir propriedades de metadados **true**|Nenhum|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SizeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SizeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SizeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.ArcSegment.SizeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SizeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SizeProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica a propriedade de dependência <see cref="P:System.Windows.Media.ArcSegment.Size" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SweepDirection">
      <MemberSignature Language="C#" Value="public System.Windows.Media.SweepDirection SweepDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.SweepDirection SweepDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.ArcSegment.SweepDirection" />
      <MemberSignature Language="VB.NET" Value="Public Property SweepDirection As SweepDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::SweepDirection SweepDirection { System::Windows::Media::SweepDirection get(); void set(System::Windows::Media::SweepDirection value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.SweepDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que especifica se o arco é desenhado na direção <see cref="F:System.Windows.Media.SweepDirection.Clockwise" /> ou <see cref="F:System.Windows.Media.SweepDirection.Counterclockwise" />.</summary>
        <value>Um valor que especifica a direção na qual o arco é desenhado. O valor padrão é <see cref="F:System.Windows.Media.SweepDirection.Counterclockwise" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para uma <xref:System.Windows.Media.ArcSegment> com um determinado <xref:System.Windows.Media.ArcSegment.Size%2A>, <xref:System.Windows.Media.ArcSegment.RotationAngle%2A>ponto inicial e final <xref:System.Windows.Media.ArcSegment.Point%2A>, quatro arcos diferentes são possíveis. Especificando o <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> propriedade reduz o número de possíveis arcos a dois: um arco desenhado do ponto de início até o final <xref:System.Windows.Media.ArcSegment.Point%2A> em uma <xref:System.Windows.Media.SweepDirection.Clockwise> direção e um arco desenhada do ponto de início para o ponto de extremidade em um <xref:System.Windows.Media.SweepDirection.Counterclockwise> direção.  
  
 A ilustração a seguir mostra dois arcos elípticos idênticos, exceto para seus <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> configurações.  
  
 ![ArcSegments com diferentes configurações de SweepDirection](~/add/media/arcsegment-sweepdirection.png "ArcSegments com diferentes configurações de SweepDirection")  
ArcSegment objetos com diferentes configurações de SweepDirection  
  
<a name="dependencyPropertyInfo_SweepDirection"></a>   
## <a name="dependency-property-information"></a>Informações da propriedade de dependência  
  
|||  
|-|-|  
|Campo de identificador|<xref:System.Windows.Media.ArcSegment.SweepDirectionProperty>|  
|Definir propriedades de metadados **true**|Nenhum|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SweepDirectionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SweepDirectionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SweepDirectionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.ArcSegment.SweepDirectionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SweepDirectionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SweepDirectionProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica a propriedade de dependência <see cref="P:System.Windows.Media.ArcSegment.SweepDirection" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>