<Type Name="BitmapCache" FullName="System.Windows.Media.BitmapCache">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="16841ab74f71b43ddc1207112b6c8fa572ab3a85" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="36489801" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class BitmapCache : System.Windows.Media.CacheMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed BitmapCache extends System.Windows.Media.CacheMode" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.BitmapCache" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BitmapCache&#xA;Inherits CacheMode" />
  <TypeSignature Language="C++ CLI" Value="public ref class BitmapCache sealed : System::Windows::Media::CacheMode" />
  <TypeSignature Language="F#" Value="type BitmapCache = class&#xA;    inherit CacheMode" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.CacheMode</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Cria e armazena em cache uma representação de um <see cref="T:System.Windows.UIElement" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Windows.Media.BitmapCache> classe para melhorar o desempenho de renderização de um complexo <xref:System.Windows.UIElement>. Criar uma <xref:System.Windows.Media.BitmapCache> e atribuí-lo para o <xref:System.Windows.UIElement.CacheMode%2A> propriedade de um <xref:System.Windows.UIElement> para armazenar em cache o elemento e sua subárvore como um bitmap na memória de vídeo. Isso é útil quando você precisa animar, converter ou dimensionar uma <xref:System.Windows.UIElement> assim que possível. Essa abordagem permite um equilíbrio entre desempenho e qualidade visual, enquanto o conteúdo é armazenado em cache.  
  
 Use o <xref:System.Windows.Media.BitmapCacheBrush> classe reutilizar com eficiência um elemento armazenado em cache.  
  
 Defina o <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> propriedade dimensionar o cache de bitmap. Isso é útil se um elemento será reduzido, e você deseja que o elemento para renderizar a forma mais clara do que seria se o cache simplesmente foram gerado em resolução nativa do elemento.  
  
 Defina o <xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A> propriedade quando o cache exibe o conteúdo que requer alinhamento de pixel sejam renderizados corretamente, como o texto ClearType. Essa propriedade será ignorada pelo <xref:System.Windows.Media.BitmapCacheBrush> e <xref:System.Windows.Media.Media3D.Viewport2DVisual3D> classes.  
  
 Um controle de cache não afeta o comportamento de passar o mouse, então, passa o mouse sobre teste de clique opera como se fosse o bitmap de um controle em tempo real.  
  
 Regeneração de cache ocorre somente quando a estrutura do <xref:System.Windows.UIElement> ou as alterações de subárvore, ou quando o <xref:System.Windows.Media.CacheMode> alteração das configurações. Definindo o <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> ou <xref:System.Windows.Media.BitmapCache.EnableClearType%2A> causas de propriedades cache regeneração. Alterações na árvore visual do pai do cache no <xref:System.Windows.UIElement>, como transformações, escalas, opacidades e efeitos, não afetam o cache.  
  
 As funções de cache quando a aceleração de hardware não está disponível. Nesse caso, o bitmap é renderizado em software e as dimensões do bitmap máximo são 2048x2048.  
  
> [!NOTE]
>  <xref:System.Windows.Media.RenderOptions> e <xref:System.Windows.Media.TextOptions> não são propagadas por meio de um elemento armazenado em cache. Talvez você precise definir essas opções novamente nos elementos filho abaixo do cache.  
  
   
  
## Examples  
 O XAML a seguir mostra como o cache um <xref:System.Windows.Controls.Canvas> elemento. No exemplo de código completo, consulte [como: melhorar o desempenho de renderização armazenando em cache um elemento](~/docs/framework/wpf/graphics-multimedia/how-to-improve-rendering-performance-by-caching-an-element.md).  
  
 [!code-xaml[System.Windows.Media.BitmapCache#_BitmapCacheCreation](~/samples/snippets/csharp/VS_Snippets_Wpf/system.windows.media.bitmapcache/cs/window1.xaml#_bitmapcachecreation)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Windows.UIElement.CacheMode" />
    <altmember cref="T:System.Windows.Media.BitmapCacheBrush" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Media.BitmapCache" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BitmapCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.BitmapCache.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BitmapCache();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Media.BitmapCache" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BitmapCache (double renderAtScale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 renderAtScale) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.BitmapCache.#ctor(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (renderAtScale As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BitmapCache(double renderAtScale);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.BitmapCache : double -&gt; System.Windows.Media.BitmapCache" Usage="new System.Windows.Media.BitmapCache renderAtScale" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="renderAtScale" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="renderAtScale">Um duplo que dimensiona o bitmap.</param>
        <summary>Inicializa uma nova instância da classe <see cref="T:System.Windows.Media.BitmapCache" /> com a escala especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 O XAML a seguir mostra como criar e atribuir uma <xref:System.Windows.Media.BitmapCache> para um <xref:System.Windows.Controls.Canvas> elemento. No exemplo de código completo, consulte [como: melhorar o desempenho de renderização armazenando em cache um elemento](~/docs/framework/wpf/graphics-multimedia/how-to-improve-rendering-performance-by-caching-an-element.md).  
  
 [!code-xaml[System.Windows.Media.BitmapCache#_BitmapCacheCreation](~/samples/snippets/csharp/VS_Snippets_Wpf/system.windows.media.bitmapcache/cs/window1.xaml#_bitmapcachecreation)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.CacheMode" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.BitmapCache Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.BitmapCache Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.BitmapCache.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As BitmapCache" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::BitmapCache ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.BitmapCache" Usage="bitmapCache.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.BitmapCache</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cria um clone modificável do <see cref="T:System.Windows.Media.BitmapCache" />, fazendo cópias em profundidade dos valores do objeto. Ao copiar as propriedades de dependência do objeto, esse método copia as expressões (que talvez não possam mais ser resolvidas), mas não as animações nem seus valores atuais.</summary>
        <returns>Um clone modificável do objeto atual. A propriedade <see cref="P:System.Windows.Freezable.IsFrozen" /> do objeto clonado será <see langword="false" />, mesmo se a propriedade <see cref="P:System.Windows.Freezable.IsFrozen" /> da origem for <see langword="true." /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.BitmapCache CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.BitmapCache CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.BitmapCache.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As BitmapCache" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::BitmapCache ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValue : unit -&gt; System.Windows.Media.BitmapCache" Usage="bitmapCache.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.BitmapCache</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cria um clone modificável (cópia profunda) do <see cref="T:System.Windows.Media.BitmapCache" /> usando seus valores atuais.</summary>
        <returns>Um clone modificável do objeto atual. A propriedade <see cref="P:System.Windows.Freezable.IsFrozen" /> do objeto clonado será <see langword="false" />, mesmo se a propriedade <see cref="P:System.Windows.Freezable.IsFrozen" /> da origem for <see langword="true." /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.BitmapCache.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceCore : unit -&gt; System.Windows.Freezable&#xA;override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="bitmapCache.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableClearType">
      <MemberSignature Language="C#" Value="public bool EnableClearType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableClearType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.BitmapCache.EnableClearType" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableClearType As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableClearType { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableClearType : bool with get, set" Usage="System.Windows.Media.BitmapCache.EnableClearType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se o bitmap é renderizado com o ClearType ativado.</summary>
        <value>
          <see langword="true" /> Se o ClearType estiver ativo; Caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Defina o <xref:System.Windows.Media.BitmapCache.EnableClearType%2A> propriedade para permitir que o texto ClearType a ser renderizado no cache.  
  
 Quando o <xref:System.Windows.Media.BitmapCache.EnableClearType%2A> é de propriedade `true`, seu aplicativo deve processar todo seu texto ClearType em um plano de fundo opaco.  
  
 Quando o <xref:System.Windows.Media.BitmapCache.EnableClearType%2A> é de propriedade `false`, o texto no cache é renderizado com suavização de escala de cinza.  
  
 Texto ClearType exige alinhamento de pixels correta de caracteres renderizados, portanto, você deve definir a <xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A> propriedade para `true`. Se você não definir essa propriedade, o conteúdo não pode mesclar corretamente.  
  
 Use o <xref:System.Windows.Media.BitmapCache.EnableClearType%2A> propriedade quando você souber que o cache é renderizada em limites de pixel, portanto, é seguro para armazenar em cache o texto ClearType. Essa situação geralmente ocorre em cenários de rolagem de texto.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.RenderOptions.ClearTypeHint" />
      </Docs>
    </Member>
    <Member MemberName="EnableClearTypeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty EnableClearTypeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty EnableClearTypeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.BitmapCache.EnableClearTypeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EnableClearTypeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ EnableClearTypeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable EnableClearTypeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.BitmapCache.EnableClearTypeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica a propriedade de dependência <see cref="P:System.Windows.Media.BitmapCache.EnableClearType" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderAtScale">
      <MemberSignature Language="C#" Value="public double RenderAtScale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 RenderAtScale" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.BitmapCache.RenderAtScale" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderAtScale As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double RenderAtScale { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.RenderAtScale : double with get, set" Usage="System.Windows.Media.BitmapCache.RenderAtScale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica a escala aplicada ao bitmap.</summary>
        <value>A escala é aplicada ao bitmap. O padrão é 1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use o <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> propriedade para renderizar o <xref:System.Windows.Media.BitmapCache> em um múltiplo do tamanho do bitmap normal. O tamanho normal é determinado pelo tamanho do elemento local.  
  
 Valores maiores que 1 aumentar a resolução do bitmap em relação a resolução nativa do elemento e valores de menor que 1 diminuir a resolução. Por exemplo, se o <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> estiver definida como 2.0 e aplicar uma transformação de escala que amplia o conteúdo por um fator de 2, o conteúdo terá o mesmo conteúdo com a mesma qualidade visual <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> definido como 1.0 e uma escala de transformação de 1.  
  
 Quando <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> é definido como 0, nenhum bitmap é renderizado. Valores negativos são fixados como 0.  
  
 Se você alterar esse valor, o cache é regenerado na nova resolução apropriada.  
  
 As imagens a seguir mostram como o mesmo conteúdo é exibida para valores diferentes da <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> propriedade.  
  
 **RenderAtScale = 1**  
  
 ![RenderAtScale &#61; 1](~/add/media/ndp-scale-1.png "RenderAtScale = 1")  
  
 **RenderAtScale = 0,5**  
  
 ![RenderAtScale &#61; 0,5](~/add/media/ndp-scale05.png "RenderAtScale = 0,5")  
  
 **RenderAtScale = 0,2**  
  
 ![RenderAtScale &#61; 0.2](~/add/media/ndp-scale02.png "RenderAtScale = 0,2")  
  
 A imagem a seguir mostra uma transformação de zoom que é aplicada a um ancestral do elemento em cache. Quando o zoom é definido como 1 e <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> é definido como 1, a qualidade da imagem é quase o mesmo que quando <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> é definido como 2. Mas quando o zoom é maior que 1, definindo <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> 2 será ter melhor qualidade da imagem.  
  
 **RenderAtScale = 1.0**  
  
 ![RenderAtScale &#61; 1.0](~/add/media/ndp-scale-10.png "RenderAtScale = 1.0")  
  
 **RenderAtScale = 2.0**  
  
 ![RenderAtScale &#61; 2.0](~/add/media/ndp-scale-20.png "RenderAtScale = 2.0")  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderAtScaleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RenderAtScaleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RenderAtScaleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.BitmapCache.RenderAtScaleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RenderAtScaleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ RenderAtScaleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable RenderAtScaleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.BitmapCache.RenderAtScaleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica a propriedade de dependência <see cref="P:System.Windows.Media.BitmapCache.RenderAtScale" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SnapsToDevicePixels">
      <MemberSignature Language="C#" Value="public bool SnapsToDevicePixels { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SnapsToDevicePixels" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.BitmapCache.SnapsToDevicePixels" />
      <MemberSignature Language="VB.NET" Value="Public Property SnapsToDevicePixels As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SnapsToDevicePixels { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SnapsToDevicePixels : bool with get, set" Usage="System.Windows.Media.BitmapCache.SnapsToDevicePixels" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtém ou define um valor que indica se o bitmap é renderizado com o ajuste de pixels.</summary>
        <value>
          <see langword="true" /> Se o ajuste de pixels estiver ativo; Caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Defina o <xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A> propriedade quando o cache exibe o conteúdo que requer alinhamento de pixel para renderização correta. Esse é o caso para texto ClearType. Se você definir a <xref:System.Windows.Media.BitmapCache.EnableClearType%2A> propriedade para `true`, considere a configuração <xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A> para `true` para garantir que a renderização correta.  
  
 Quando o <xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A> estiver definida como `false`, você pode mover e redimensionar o elemento armazenado em cache por uma fração de um pixel e filtragem bilinear é aplicada.  
  
 Quando o <xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A> estiver definida como `true`, o cache de bitmap é alinhado com os limites de pixel do destino. Se você mover ou dimensionar o elemento armazenado em cache por uma fração de um pixel, o bitmap se ajusta à grade de pixels. Nesse caso, o canto superior esquerdo do bitmap é arredondado para cima e ajustado à grade de pixel, mas o canto inferior direito está em um limite de pixel fracionários.  
  
 O <xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A> propriedade será ignorada pelo <xref:System.Windows.Media.BitmapCacheBrush> e, quando usado com um <xref:System.Windows.Media.Media3D.Viewport2DVisual3D>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.BitmapCacheBrush" />
      </Docs>
    </Member>
    <Member MemberName="SnapsToDevicePixelsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SnapsToDevicePixelsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SnapsToDevicePixelsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.BitmapCache.SnapsToDevicePixelsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SnapsToDevicePixelsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SnapsToDevicePixelsProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SnapsToDevicePixelsProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.BitmapCache.SnapsToDevicePixelsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica a propriedade de dependência <see cref="P:System.Windows.Media.BitmapCache.SnapsToDevicePixels" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>