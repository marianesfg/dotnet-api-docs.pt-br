<Type Name="ValueTypePropertyReference&lt;TOperand,TResult&gt;" FullName="System.Activities.Expressions.ValueTypePropertyReference&lt;TOperand,TResult&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c8e9a6c662e17ffb87d27949b066cd23521619cc" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ValueTypePropertyReference&lt;TOperand,TResult&gt; : System.Activities.CodeActivity&lt;System.Activities.Location&lt;TResult&gt;&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ValueTypePropertyReference`2&lt;TOperand, TResult&gt; extends System.Activities.CodeActivity`1&lt;class System.Activities.Location`1&lt;!TResult&gt;&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Expressions.ValueTypePropertyReference`2" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ValueTypePropertyReference(Of TOperand, TResult)&#xA;Inherits CodeActivity(Of Location(Of TResult))" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TOperand, typename TResult&gt;&#xA;public ref class ValueTypePropertyReference sealed : System::Activities::CodeActivity&lt;System::Activities::Location&lt;TResult&gt; ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TOperand" />
    <TypeParameter Name="TResult" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Activities.CodeActivity&lt;System.Activities.Location&lt;TResult&gt;&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TResult">System.Activities.Location&lt;TResult&gt;</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TOperand">
      <span data-ttu-id="b0074-101">O tipo de valor.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b0074-101">The value type.</span>
      </span>
    </typeparam>
    <typeparam name="TResult">
      <span data-ttu-id="b0074-102">O tipo de propriedade.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b0074-102">The property type.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="b0074-103">Representa uma propriedade em um tipo de valor que pode ser usada como um l-value em uma expressão.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b0074-103">Represents a property on a value type that can be used as an l-value in an expression.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0074-104">O seguinte exemplo de código usa <xref:System.Activities.Expressions.ValueTypePropertyReference%602> em uma `Assign` atividade para atribuir um `string` valor a uma propriedade e imprime o valor da propriedade para o console.</span><span class="sxs-lookup"><span data-stu-id="b0074-104">The following code example uses <xref:System.Activities.Expressions.ValueTypePropertyReference%602> in an `Assign` activity to assign a `string` value to a property and prints the property value to the console.</span></span> <span data-ttu-id="b0074-105">O `Assign` atividade é equivalente à instrução a seguir ao usar o `struct` definida no exemplo a seguir: `myStructVariable.AProperty = "Hello";`.</span><span class="sxs-lookup"><span data-stu-id="b0074-105">The `Assign` activity is equivalent to the following statement when using the `struct` defined in the following example: `myStructVariable.AProperty = "Hello";`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b0074-106">Em vez de criar uma instância de <xref:System.Activities.Expressions.ValueTypePropertyReference%602> atividade de expressão de valor de l diretamente, é altamente recomendável que você chamar <xref:System.Activities.Expressions.ExpressionServices.ConvertReference%2A>, que fornece um nível mais alto de abstração e permite que você implemente seu fluxo de trabalho de maneira mais intuitiva.</span><span class="sxs-lookup"><span data-stu-id="b0074-106">Instead of instantiating the <xref:System.Activities.Expressions.ValueTypePropertyReference%602> l-value expression activity directly, it is strongly recommended that you call <xref:System.Activities.Expressions.ExpressionServices.ConvertReference%2A>, which provides a higher level of abstraction and enables you to implement your workflow more intuitively.</span></span>  
  
```  
  
// Define a struct with a property named AProperty.  
struct StructWithProperty  
{  
    public string AProperty { get; set; }  
}  
  
public static void ValueTypePropertyReferenceSample()  
{  
    // Create a variable of type StructWithProperty to store the property.  
    var swpvar = new Variable<StructWithProperty>("swpvar", new StructWithProperty());  
  
    // Create the top-level activity to be invoked later.  
    Activity myActivity = new Sequence  
    {  
        Variables = { swpvar },  
        Activities =   
        {                      
            // Create an Assign activity for a property named AProperty.  
            new Assign<string>  
            {  
                To = new ValueTypePropertyReference<StructWithProperty, string>  
                {  
                    OperandLocation = swpvar,  
                    PropertyName = "AProperty",  
                },  
                // Assign a string literal to AProperty.  
                Value = "Hello",  
            },  
            // Create a WriteLine activity to write the value of AProperty to the console.  
            new WriteLine()  
            {  
                Text = ExpressionServices.Convert<string>(ctx => swpvar.Get(ctx).AProperty),  
            }  
        }  
    };  
  
    // Invoke the Sequence activity.  
    WorkflowInvoker.Invoke(myActivity);  
}  
  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValueTypePropertyReference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Expressions.ValueTypePropertyReference`2.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ValueTypePropertyReference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b0074-107">Inicializa uma nova instância da classe <see cref="T:System.Activities.Expressions.ValueTypePropertyReference`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0074-107">Initializes a new instance of the <see cref="T:System.Activities.Expressions.ValueTypePropertyReference`2" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheMetadata">
      <MemberSignature Language="C#" Value="protected override void CacheMetadata (System.Activities.CodeActivityMetadata metadata);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CacheMetadata(valuetype System.Activities.CodeActivityMetadata metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Expressions.ValueTypePropertyReference`2.CacheMetadata(System.Activities.CodeActivityMetadata)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CacheMetadata (metadata As CodeActivityMetadata)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CacheMetadata(System::Activities::CodeActivityMetadata metadata);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Activities.CodeActivityMetadata" />
      </Parameters>
      <Docs>
        <param name="metadata">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected override System.Activities.Location&lt;TResult&gt; Execute (System.Activities.CodeActivityContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Activities.Location`1&lt;!TResult&gt; Execute(class System.Activities.CodeActivityContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Expressions.ValueTypePropertyReference`2.Execute(System.Activities.CodeActivityContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Execute (context As CodeActivityContext) As Location(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Activities::Location&lt;TResult&gt; ^ Execute(System::Activities::CodeActivityContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Location&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.CodeActivityContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OperandLocation">
      <MemberSignature Language="C#" Value="public System.Activities.InOutArgument&lt;TOperand&gt; OperandLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.InOutArgument`1&lt;!TOperand&gt; OperandLocation" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Expressions.ValueTypePropertyReference`2.OperandLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property OperandLocation As InOutArgument(Of TOperand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::InOutArgument&lt;TOperand&gt; ^ OperandLocation { System::Activities::InOutArgument&lt;TOperand&gt; ^ get(); void set(System::Activities::InOutArgument&lt;TOperand&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.InOutArgument&lt;TOperand&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b0074-108">Obtém ou define a instância do tipo de valor que contém a propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0074-108">Gets or sets the instance of the value type that contains the property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b0074-109">A instância do tipo de valor que contém a propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0074-109">The instance of the value type that contains the property.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyName">
      <MemberSignature Language="C#" Value="public string PropertyName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PropertyName" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Expressions.ValueTypePropertyReference`2.PropertyName" />
      <MemberSignature Language="VB.NET" Value="Public Property PropertyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PropertyName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b0074-110">Obtém ou define o nome da propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0074-110">Gets or sets the name of the property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b0074-111">O nome da propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0074-111">The name of the property.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>