<Type Name="CompiledExpressionInvoker" FullName="System.Activities.Expressions.CompiledExpressionInvoker">
  <TypeSignature Language="C#" Value="public class CompiledExpressionInvoker" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CompiledExpressionInvoker extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Expressions.CompiledExpressionInvoker" />
  <TypeSignature Language="VB.NET" Value="Public Class CompiledExpressionInvoker" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompiledExpressionInvoker" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="186a0-101">Representa um chamador de expressão compilada.</span><span class="sxs-lookup"><span data-stu-id="186a0-101">Represents a compiled expression invoker.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompiledExpressionInvoker (System.Activities.Expressions.ITextExpression expression, bool isReference, System.Activities.CodeActivityMetadata metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.Expressions.ITextExpression expression, bool isReference, valuetype System.Activities.CodeActivityMetadata metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Expressions.CompiledExpressionInvoker.#ctor(System.Activities.Expressions.ITextExpression,System.Boolean,System.Activities.CodeActivityMetadata)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (expression As ITextExpression, isReference As Boolean, metadata As CodeActivityMetadata)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompiledExpressionInvoker(System::Activities::Expressions::ITextExpression ^ expression, bool isReference, System::Activities::CodeActivityMetadata metadata);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expression" Type="System.Activities.Expressions.ITextExpression" />
        <Parameter Name="isReference" Type="System.Boolean" />
        <Parameter Name="metadata" Type="System.Activities.CodeActivityMetadata" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="186a0-102">A expressão.</span><span class="sxs-lookup"><span data-stu-id="186a0-102">The expression.</span></span></param>
        <param name="isReference">
          <span data-ttu-id="186a0-103"><see langword="True" /> para manter os dados de referência de objeto; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="186a0-103"><see langword="True" /> to keep object reference data; otherwise, <see langword="false" />.</span></span></param>
        <param name="metadata"><span data-ttu-id="186a0-104">Os metadados de atividade.</span><span class="sxs-lookup"><span data-stu-id="186a0-104">The activity metadata.</span></span></param>
        <summary><span data-ttu-id="186a0-105">Inicializa uma nova instância da classe <see cref="T:System.Activities.Expressions.CompiledExpressionInvoker" /> usando a expressão, isReference e metadados.</span><span class="sxs-lookup"><span data-stu-id="186a0-105">Initializes a new instance of the <see cref="T:System.Activities.Expressions.CompiledExpressionInvoker" /> class using the expression, isReference and metadata.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCompiledExpressionRoot">
      <MemberSignature Language="C#" Value="public static object GetCompiledExpressionRoot (object target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetCompiledExpressionRoot(object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Expressions.CompiledExpressionInvoker.GetCompiledExpressionRoot(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCompiledExpressionRoot (target As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetCompiledExpressionRoot(System::Object ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="186a0-106">O destino.</span><span class="sxs-lookup"><span data-stu-id="186a0-106">The target.</span></span></param>
        <summary><span data-ttu-id="186a0-107">Define a raiz de expressão compilada.</span><span class="sxs-lookup"><span data-stu-id="186a0-107">Sets the compiled expression root.</span></span></summary>
        <returns><span data-ttu-id="186a0-108">A raiz da expressão compilada.</span><span class="sxs-lookup"><span data-stu-id="186a0-108">The compiled expression root.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCompiledExpressionRootForImplementation">
      <MemberSignature Language="C#" Value="public static object GetCompiledExpressionRootForImplementation (object target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetCompiledExpressionRootForImplementation(object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Expressions.CompiledExpressionInvoker.GetCompiledExpressionRootForImplementation(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCompiledExpressionRootForImplementation (target As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetCompiledExpressionRootForImplementation(System::Object ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="186a0-109">O destino.</span><span class="sxs-lookup"><span data-stu-id="186a0-109">The target.</span></span></param>
        <summary><span data-ttu-id="186a0-110">Obtém a raiz de expressão compilada para a implementação de <see cref="T:System.Activities.Expressions.CompiledExpressionInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="186a0-110">Gets the compiled expression root for the implementation of <see cref="T:System.Activities.Expressions.CompiledExpressionInvoker" />.</span></span></summary>
        <returns><span data-ttu-id="186a0-111">A raiz da expressão compilada.</span><span class="sxs-lookup"><span data-stu-id="186a0-111">The compiled expression root.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeExpression">
      <MemberSignature Language="C#" Value="public object InvokeExpression (System.Activities.ActivityContext activityContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object InvokeExpression(class System.Activities.ActivityContext activityContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Expressions.CompiledExpressionInvoker.InvokeExpression(System.Activities.ActivityContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ InvokeExpression(System::Activities::ActivityContext ^ activityContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityContext" Type="System.Activities.ActivityContext" />
      </Parameters>
      <Docs>
        <param name="activityContext"><span data-ttu-id="186a0-112">O contexto da atividade.</span><span class="sxs-lookup"><span data-stu-id="186a0-112">The activity context.</span></span></param>
        <summary><span data-ttu-id="186a0-113">Invoca a expressão compilada.</span><span class="sxs-lookup"><span data-stu-id="186a0-113">Invokes the compiled expression.</span></span></summary>
        <returns><span data-ttu-id="186a0-114">A expressão invocada.</span><span class="sxs-lookup"><span data-stu-id="186a0-114">The invoked expression.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStaticallyCompiled">
      <MemberSignature Language="C#" Value="public bool IsStaticallyCompiled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStaticallyCompiled" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Expressions.CompiledExpressionInvoker.IsStaticallyCompiled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStaticallyCompiled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStaticallyCompiled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="186a0-115">Obtém ou define se o chamador de expressão compilada é compilado estaticamente.</span><span class="sxs-lookup"><span data-stu-id="186a0-115">Gets or sets whether the compiled expression invoker is statically compiled.</span></span></summary>
        <value>
          <span data-ttu-id="186a0-116"><see langword="true" /> Se o chamador de expressão compilada é compilado estaticamente. Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="186a0-116"><see langword="true" /> if the compiled expression invoker is statically compiled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCompiledExpressionRoot">
      <MemberSignature Language="C#" Value="public static void SetCompiledExpressionRoot (object target, System.Activities.XamlIntegration.ICompiledExpressionRoot compiledExpressionRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCompiledExpressionRoot(object target, class System.Activities.XamlIntegration.ICompiledExpressionRoot compiledExpressionRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Expressions.CompiledExpressionInvoker.SetCompiledExpressionRoot(System.Object,System.Activities.XamlIntegration.ICompiledExpressionRoot)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetCompiledExpressionRoot (target As Object, compiledExpressionRoot As ICompiledExpressionRoot)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetCompiledExpressionRoot(System::Object ^ target, System::Activities::XamlIntegration::ICompiledExpressionRoot ^ compiledExpressionRoot);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="compiledExpressionRoot" Type="System.Activities.XamlIntegration.ICompiledExpressionRoot" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="186a0-117">O destino.</span><span class="sxs-lookup"><span data-stu-id="186a0-117">The target.</span></span></param>
        <param name="compiledExpressionRoot"><span data-ttu-id="186a0-118">A raiz da expressão compilada a ser definida.</span><span class="sxs-lookup"><span data-stu-id="186a0-118">The compiled expression root to be set.</span></span></param>
        <summary><span data-ttu-id="186a0-119">Define a raiz de expressão compilada.</span><span class="sxs-lookup"><span data-stu-id="186a0-119">Sets the compiled expression root.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186a0-120">A raiz da expressão compilada.</span><span class="sxs-lookup"><span data-stu-id="186a0-120">The compiled expression root.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCompiledExpressionRootForImplementation">
      <MemberSignature Language="C#" Value="public static void SetCompiledExpressionRootForImplementation (object target, System.Activities.XamlIntegration.ICompiledExpressionRoot compiledExpressionRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCompiledExpressionRootForImplementation(object target, class System.Activities.XamlIntegration.ICompiledExpressionRoot compiledExpressionRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Expressions.CompiledExpressionInvoker.SetCompiledExpressionRootForImplementation(System.Object,System.Activities.XamlIntegration.ICompiledExpressionRoot)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetCompiledExpressionRootForImplementation (target As Object, compiledExpressionRoot As ICompiledExpressionRoot)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetCompiledExpressionRootForImplementation(System::Object ^ target, System::Activities::XamlIntegration::ICompiledExpressionRoot ^ compiledExpressionRoot);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="compiledExpressionRoot" Type="System.Activities.XamlIntegration.ICompiledExpressionRoot" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="186a0-121">O destino.</span><span class="sxs-lookup"><span data-stu-id="186a0-121">The target.</span></span></param>
        <param name="compiledExpressionRoot"><span data-ttu-id="186a0-122">A raiz da expressão compilada a ser definida.</span><span class="sxs-lookup"><span data-stu-id="186a0-122">The compiled expression root to be set.</span></span></param>
        <summary><span data-ttu-id="186a0-123">Define a raiz de expressão compilada para a implementação de <see cref="T:System.Activities.Expressions.CompiledExpressionInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="186a0-123">Sets the compiled expression root for the implementation of <see cref="T:System.Activities.Expressions.CompiledExpressionInvoker" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="186a0-124">A raiz da expressão compilada.</span><span class="sxs-lookup"><span data-stu-id="186a0-124">The compiled expression root.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>