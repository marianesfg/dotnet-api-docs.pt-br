<Type Name="Operators" FullName="Microsoft.VisualBasic.CompilerServices.Operators">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="af2dd8a7ad836cfb8c02f81398f8f2b5a8c37ef5" />
    <Meta Name="ms.sourcegitcommit" Value="723b8a6d92667ba86fcda96190bad3b4a03283b3" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="11/09/2018" />
    <Meta Name="ms.locfileid" Value="51319907" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Operators" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Operators extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.CompilerServices.Operators" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Operators" />
  <TypeSignature Language="C++ CLI" Value="public ref class Operators sealed" />
  <TypeSignature Language="F#" Value="type Operators = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="727c7-101">Fornece operadores de matemática de associação tardia, tal como <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" /> e <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />, que o compilador do Visual Basic usa internamente.</span>
      <span class="sxs-lookup">
        <span data-stu-id="727c7-101">Provides late-bound math operators, such as <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" /> and <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />, which the Visual Basic compiler uses internally.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727c7-102">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="727c7-102">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
    <related type="Article" href="~/docs/visual-basic/language-reference/operators/index.md">
      <span data-ttu-id="727c7-103">Operadores (Visual Basic)</span>
      <span class="sxs-lookup">
        <span data-stu-id="727c7-103">Operators (Visual Basic)</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName="AddObject">
      <MemberSignature Language="C#" Value="public static object AddObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object AddObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ AddObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member AddObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.AddObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="727c7-104">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-104">Required.</span>
          </span>
          <span data-ttu-id="727c7-105">Qualquer expressão numérica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-105">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="727c7-106">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-106">Required.</span>
          </span>
          <span data-ttu-id="727c7-107">Qualquer expressão numérica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-107">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727c7-108">Representa o operador de adição (+) do Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-108">Represents the Visual Basic addition (+) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727c7-109">A soma de <paramref name="Left" /> e <paramref name="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-109">The sum of <paramref name="Left" /> and <paramref name="Right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727c7-110">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="727c7-110">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/addition-operator.md">
          <span data-ttu-id="727c7-111">Operador + (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-111">+ Operator (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="AndObject">
      <MemberSignature Language="C#" Value="public static object AndObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object AndObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.AndObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AndObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ AndObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member AndObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.AndObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="727c7-112">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-112">Required.</span>
          </span>
          <span data-ttu-id="727c7-113">Qualquer <see langword="Boolean" /> ou expressão numérica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-113">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="727c7-114">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-114">Required.</span>
          </span>
          <span data-ttu-id="727c7-115">Qualquer <see langword="Boolean" /> ou expressão numérica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-115">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727c7-116">Representa o operador <see langword="And" /> do Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-116">Represents the Visual Basic <see langword="And" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727c7-117">Para operações <see langword="Boolean" />, <see langword="True" /> se tanto <paramref name="Left" /> quanto <paramref name="Right" /> forem avaliados como <see langword="True" />; caso contrário, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-117">For <see langword="Boolean" /> operations, <see langword="True" /> if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to <see langword="True" />; otherwise, <see langword="False" />.</span>
          </span>
          <span data-ttu-id="727c7-118">Para operações bit a bit, 1 se tanto <paramref name="Left" /> quanto <paramref name="Right" /> forem avaliados como 1; caso contrário, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-118">For bitwise operations, 1 if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to 1; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727c7-119">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="727c7-119">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/and-operator.md">
          <span data-ttu-id="727c7-120">Operador And (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-120">And Operator (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CompareObject">
      <MemberSignature Language="C#" Value="public static int CompareObject (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 CompareObject(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObject (Left As Object, Right As Object, TextCompare As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CompareObject(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObject : obj * obj * bool -&gt; int" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObject (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="727c7-121">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-121">Required.</span>
          </span>
          <span data-ttu-id="727c7-122">Qualquer expressão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-122">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="727c7-123">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-123">Required.</span>
          </span>
          <span data-ttu-id="727c7-124">Qualquer expressão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-124">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="727c7-125">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-125">Required.</span>
          </span>
          <span data-ttu-id="727c7-126">
            <see langword="True" /> para executar uma comparação de cadeias de caracteres que diferencia maiúsculas de minúsculas; caso contrário, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-126">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727c7-127">Representa os operadores de comparação do Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-127">Represents Visual Basic comparison operators.</span>
          </span>
        </summary>
        <returns>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="727c7-128">Valor</span>
                <span class="sxs-lookup">
                  <span data-stu-id="727c7-128">Value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="727c7-129">Condição</span>
                <span class="sxs-lookup">
                  <span data-stu-id="727c7-129">Condition</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="727c7-130">-1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="727c7-130">-1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="727c7-131">
                  <paramref name="Left" /> é menor que <paramref name="Right" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="727c7-131">
                    <paramref name="Left" /> is less than <paramref name="Right" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="727c7-132">0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="727c7-132">0</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="727c7-133">
                  <paramref name="Left" /> e <paramref name="Right" /> são iguais.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="727c7-133">
                    <paramref name="Left" /> and <paramref name="Right" /> are equal.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="727c7-134">1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="727c7-134">1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="727c7-135">
                  <paramref name="Left" /> é maior que <paramref name="Right" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="727c7-135">
                    <paramref name="Left" /> is greater than <paramref name="Right" />.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727c7-136">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="727c7-136">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md">
          <span data-ttu-id="727c7-137">Operadores de comparação (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-137">Comparison Operators (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="727c7-138">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-138">Required.</span>
          </span>
          <span data-ttu-id="727c7-139">Qualquer expressão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-139">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="727c7-140">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-140">Required.</span>
          </span>
          <span data-ttu-id="727c7-141">Qualquer expressão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-141">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="727c7-142">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-142">Required.</span>
          </span>
          <span data-ttu-id="727c7-143">
            <see langword="True" /> para executar uma comparação de cadeias de caracteres que diferencia maiúsculas de minúsculas; caso contrário, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-143">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727c7-144">Representa o operador de igual (=) do Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-144">Represents the Visual Basic equal (=) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727c7-145">
            <see langword="True" /> se <paramref name="Left" /> e <paramref name="Right" /> forem iguais; caso contrário, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-145">
              <see langword="True" /> if <paramref name="Left" /> and <paramref name="Right" /> are equal; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727c7-146">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="727c7-146">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md">
          <span data-ttu-id="727c7-147">Operadores de comparação (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-147">Comparison Operators (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectGreater">
      <MemberSignature Language="C#" Value="public static object CompareObjectGreater (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectGreater(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectGreater (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectGreater(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectGreater : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="727c7-148">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-148">Required.</span>
          </span>
          <span data-ttu-id="727c7-149">Qualquer expressão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-149">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="727c7-150">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-150">Required.</span>
          </span>
          <span data-ttu-id="727c7-151">Qualquer expressão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-151">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="727c7-152">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-152">Required.</span>
          </span>
          <span data-ttu-id="727c7-153">
            <see langword="True" /> para executar uma comparação de cadeias de caracteres que diferencia maiúsculas de minúsculas; caso contrário, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-153">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727c7-154">Representa o operador de maior que (&gt;) do Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-154">Represents the Visual Basic greater-than (&gt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727c7-155">
            <see langword="True" /> caso <paramref name="Left" /> seja maior que <paramref name="Right" />; do contrário, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-155">
              <see langword="True" /> if <paramref name="Left" /> is greater than <paramref name="Right" />; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727c7-156">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="727c7-156">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md">
          <span data-ttu-id="727c7-157">Operadores de comparação (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-157">Comparison Operators (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectGreaterEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectGreaterEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectGreaterEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectGreaterEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectGreaterEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectGreaterEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="727c7-158">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-158">Required.</span>
          </span>
          <span data-ttu-id="727c7-159">Qualquer expressão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-159">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="727c7-160">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-160">Required.</span>
          </span>
          <span data-ttu-id="727c7-161">Qualquer expressão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-161">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="727c7-162">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-162">Required.</span>
          </span>
          <span data-ttu-id="727c7-163">
            <see langword="True" /> para executar uma comparação de cadeias de caracteres que diferencia maiúsculas de minúsculas; caso contrário, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-163">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727c7-164">Representa o operador de maior ou igual a (&gt;=) do Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-164">Represents the Visual Basic greater-than or equal-to (&gt;=) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727c7-165">
            <see langword="True" /> se <paramref name="Left" /> for maior ou igual a <paramref name="Right" />; caso contrário, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-165">
              <see langword="True" /> if <paramref name="Left" /> is greater than or equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727c7-166">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="727c7-166">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md">
          <span data-ttu-id="727c7-167">Operadores de comparação (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-167">Comparison Operators (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectLess">
      <MemberSignature Language="C#" Value="public static object CompareObjectLess (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectLess(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectLess (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectLess(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectLess : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="727c7-168">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-168">Required.</span>
          </span>
          <span data-ttu-id="727c7-169">Qualquer expressão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-169">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="727c7-170">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-170">Required.</span>
          </span>
          <span data-ttu-id="727c7-171">Qualquer expressão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-171">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="727c7-172">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-172">Required.</span>
          </span>
          <span data-ttu-id="727c7-173">
            <see langword="True" /> para executar uma comparação de cadeias de caracteres que diferencia maiúsculas de minúsculas; caso contrário, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-173">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727c7-174">Representa o operador de menor que (&lt;) do Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-174">Represents the Visual Basic less-than (&lt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727c7-175">
            <see langword="True" /> caso <paramref name="Left" /> seja menor que <paramref name="Right" />; do contrário, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-175">
              <see langword="True" /> if <paramref name="Left" /> is less than <paramref name="Right" />; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727c7-176">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="727c7-176">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md">
          <span data-ttu-id="727c7-177">Operadores de comparação (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-177">Comparison Operators (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectLessEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectLessEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectLessEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectLessEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectLessEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectLessEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="727c7-178">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-178">Required.</span>
          </span>
          <span data-ttu-id="727c7-179">Qualquer expressão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-179">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="727c7-180">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-180">Required.</span>
          </span>
          <span data-ttu-id="727c7-181">Qualquer expressão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-181">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="727c7-182">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-182">Required.</span>
          </span>
          <span data-ttu-id="727c7-183">
            <see langword="True" /> para executar uma comparação de cadeias de caracteres que diferencia maiúsculas de minúsculas; caso contrário, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-183">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727c7-184">Representa o operador de menor ou igual a (&lt;=) do Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-184">Represents the Visual Basic less-than or equal-to (&lt;=) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727c7-185">
            <see langword="True" /> se <paramref name="Left" /> for menor ou igual a <paramref name="Right" />; caso contrário, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-185">
              <see langword="True" /> if <paramref name="Left" /> is less than or equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727c7-186">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="727c7-186">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md">
          <span data-ttu-id="727c7-187">Operadores de comparação (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-187">Comparison Operators (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectNotEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectNotEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectNotEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectNotEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectNotEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectNotEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="727c7-188">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-188">Required.</span>
          </span>
          <span data-ttu-id="727c7-189">Qualquer expressão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-189">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="727c7-190">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-190">Required.</span>
          </span>
          <span data-ttu-id="727c7-191">Qualquer expressão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-191">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="727c7-192">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-192">Required.</span>
          </span>
          <span data-ttu-id="727c7-193">
            <see langword="True" /> para executar uma comparação de cadeias de caracteres que diferencia maiúsculas de minúsculas; caso contrário, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-193">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727c7-194">Representa o operador de não igual (&lt;&gt;) do Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-194">Represents the Visual Basic not-equal (&lt;&gt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727c7-195">
            <see langword="True" /> se <paramref name="Left" /> não for igual a <paramref name="Right" />; caso contrário, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-195">
              <see langword="True" /> if <paramref name="Left" /> is not equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727c7-196">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="727c7-196">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md">
          <span data-ttu-id="727c7-197">Operadores de comparação (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-197">Comparison Operators (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CompareString">
      <MemberSignature Language="C#" Value="public static int CompareString (string Left, string Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 CompareString(string Left, string Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareString (Left As String, Right As String, TextCompare As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CompareString(System::String ^ Left, System::String ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareString : string * string * bool -&gt; int" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareString (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.String" />
        <Parameter Name="Right" Type="System.String" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="727c7-198">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-198">Required.</span>
          </span>
          <span data-ttu-id="727c7-199">Qualquer expressão de <see langword="String" /> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-199">Any <see langword="String" /> expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="727c7-200">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-200">Required.</span>
          </span>
          <span data-ttu-id="727c7-201">Qualquer expressão de <see langword="String" /> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-201">Any <see langword="String" /> expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="727c7-202">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-202">Required.</span>
          </span>
          <span data-ttu-id="727c7-203">
            <see langword="True" /> para executar uma comparação de cadeias de caracteres que diferencia maiúsculas de minúsculas; caso contrário, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-203">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727c7-204">Executa a comparação de cadeias de caracteres de texto ou binárias dadas duas cadeias de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-204">Performs binary or text string comparison when given two strings.</span>
          </span>
        </summary>
        <returns>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="727c7-205">Valor</span>
                <span class="sxs-lookup">
                  <span data-stu-id="727c7-205">Value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="727c7-206">Condição</span>
                <span class="sxs-lookup">
                  <span data-stu-id="727c7-206">Condition</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="727c7-207">-1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="727c7-207">-1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="727c7-208">
                  <paramref name="Left" /> é menor que <paramref name="Right" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="727c7-208">
                    <paramref name="Left" /> is less than <paramref name="Right" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="727c7-209">0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="727c7-209">0</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="727c7-210">
                  <paramref name="Left" /> é igual a <paramref name="Right" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="727c7-210">
                    <paramref name="Left" /> is equal to <paramref name="Right" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="727c7-211">1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="727c7-211">1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="727c7-212">
                  <paramref name="Left" /> é maior que <paramref name="Right" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="727c7-212">
                    <paramref name="Left" /> is greater than <paramref name="Right" />.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727c7-213">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="727c7-213">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 <span data-ttu-id="727c7-214">Quando o operador de igualdade do Visual Basic é usado para comparar duas cadeias de caracteres, ele passa as cadeias de caracteres para o <xref:Microsoft.VisualBasic.CompilerServices.Operators.CompareString%2A> método juntamente com um valor de `False` para o `TextCompare` argumento.</span><span class="sxs-lookup"><span data-stu-id="727c7-214">When the Visual Basic equality operator is used to compare two strings, it passes the strings to the <xref:Microsoft.VisualBasic.CompilerServices.Operators.CompareString%2A> method along with a value of `False` for the `TextCompare` argument.</span></span> <span data-ttu-id="727c7-215">Isso executa uma comparação diferencia maiusculas de minúsculas que é ordinal ou com base na cultura atual, dependendo do valor da instrução.</span><span class="sxs-lookup"><span data-stu-id="727c7-215">This performs a case-sensitive comparison that is either ordinal or based on the current culture, depending on the value of the  statement.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md">
          <span data-ttu-id="727c7-216">Operadores de comparação (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-216">Comparison Operators (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ConcatenateObject">
      <MemberSignature Language="C#" Value="public static object ConcatenateObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ConcatenateObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConcatenateObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ConcatenateObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member ConcatenateObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="727c7-217">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-217">Required.</span>
          </span>
          <span data-ttu-id="727c7-218">Qualquer expressão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-218">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="727c7-219">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-219">Required.</span>
          </span>
          <span data-ttu-id="727c7-220">Qualquer expressão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-220">Any expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727c7-221">Representa o operador de concatenação (&amp;) do Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-221">Represents the Visual Basic concatenation (&amp;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727c7-222">Uma cadeia de caracteres que representa a concatenação de <paramref name="Left" /> e <paramref name="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-222">A string representing the concatenation of <paramref name="Left" /> and <paramref name="Right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727c7-223">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="727c7-223">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/concatenation-operator.md">
          <span data-ttu-id="727c7-224">&amp; Operador (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-224">&amp; Operator (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="727c7-225">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-225">Required.</span>
          </span>
          <span data-ttu-id="727c7-226">Qualquer expressão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-226">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="727c7-227">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-227">Required.</span>
          </span>
          <span data-ttu-id="727c7-228">Qualquer expressão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-228">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="727c7-229">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-229">Required.</span>
          </span>
          <span data-ttu-id="727c7-230">
            <see langword="True" /> para executar uma comparação de cadeias de caracteres que diferencia maiúsculas de minúsculas; caso contrário, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-230">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727c7-231">Representa o operador equals (=) sobrecarregado do Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-231">Represents the overloaded Visual Basic equals (=) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727c7-232">O resultado do operador equals sobrecarregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-232">The result of the overloaded equals operator.</span>
          </span>
          <span data-ttu-id="727c7-233">
            <see langword="False" /> se não houver suporte para a sobrecarga de operador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-233">
              <see langword="False" /> if operator overloading is not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727c7-234">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="727c7-234">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md">
          <span data-ttu-id="727c7-235">Procedimentos do operador</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-235">Operator Procedures</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectGreater">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectGreater (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectGreater(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectGreater (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectGreater(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectGreater : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="727c7-236">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-236">Required.</span>
          </span>
          <span data-ttu-id="727c7-237">Qualquer expressão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-237">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="727c7-238">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-238">Required.</span>
          </span>
          <span data-ttu-id="727c7-239">Qualquer expressão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-239">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="727c7-240">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-240">Required.</span>
          </span>
          <span data-ttu-id="727c7-241">
            <see langword="True" /> para executar uma comparação de cadeias de caracteres que diferencia maiúsculas de minúsculas; caso contrário, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-241">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727c7-242">Representa o operador de maior que (&gt;) sobrecarregado do Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-242">Represents the overloaded Visual Basic greater-than (&gt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727c7-243">O resultado do operador de maior que sobrecarregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-243">The result of the overloaded greater-than operator.</span>
          </span>
          <span data-ttu-id="727c7-244">
            <see langword="False" /> se não houver suporte para a sobrecarga de operador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-244">
              <see langword="False" /> if operator overloading is not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727c7-245">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="727c7-245">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md">
          <span data-ttu-id="727c7-246">Procedimentos do operador</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-246">Operator Procedures</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectGreaterEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectGreaterEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectGreaterEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectGreaterEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectGreaterEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectGreaterEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="727c7-247">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-247">Required.</span>
          </span>
          <span data-ttu-id="727c7-248">Qualquer expressão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-248">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="727c7-249">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-249">Required.</span>
          </span>
          <span data-ttu-id="727c7-250">Qualquer expressão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-250">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="727c7-251">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-251">Required.</span>
          </span>
          <span data-ttu-id="727c7-252">
            <see langword="True" /> para executar uma comparação de cadeias de caracteres que diferencia maiúsculas de minúsculas; caso contrário, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-252">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727c7-253">Representa o operador de maior ou igual a (&gt;=) sobrecarregado do Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-253">Represents the overloaded Visual Basic greater-than or equal-to (&gt;=) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727c7-254">O resultado do operador de maior que ou igual a sobrecarregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-254">The result of the overloaded greater-than or equal-to operator.</span>
          </span>
          <span data-ttu-id="727c7-255">
            <see langword="False" /> se não houver suporte para a sobrecarga de operador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-255">
              <see langword="False" /> if operator overloading is not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727c7-256">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="727c7-256">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md">
          <span data-ttu-id="727c7-257">Procedimentos do operador</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-257">Operator Procedures</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectLess">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectLess (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectLess(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectLess (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectLess(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectLess : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="727c7-258">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-258">Required.</span>
          </span>
          <span data-ttu-id="727c7-259">Qualquer expressão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-259">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="727c7-260">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-260">Required.</span>
          </span>
          <span data-ttu-id="727c7-261">Qualquer expressão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-261">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="727c7-262">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-262">Required.</span>
          </span>
          <span data-ttu-id="727c7-263">
            <see langword="True" /> para executar uma comparação de cadeias de caracteres que diferencia maiúsculas de minúsculas; caso contrário, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-263">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727c7-264">Representa o operador de menor que (&lt;) sobrecarregado do Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-264">Represents the overloaded Visual Basic less-than (&lt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727c7-265">O resultado do operador de menor que sobrecarregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-265">The result of the overloaded less-than operator.</span>
          </span>
          <span data-ttu-id="727c7-266">
            <see langword="False" /> se não houver suporte para a sobrecarga de operador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-266">
              <see langword="False" /> if operator overloading is not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727c7-267">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="727c7-267">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md">
          <span data-ttu-id="727c7-268">Procedimentos do operador</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-268">Operator Procedures</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectLessEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectLessEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectLessEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectLessEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectLessEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectLessEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="727c7-269">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-269">Required.</span>
          </span>
          <span data-ttu-id="727c7-270">Qualquer expressão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-270">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="727c7-271">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-271">Required.</span>
          </span>
          <span data-ttu-id="727c7-272">Qualquer expressão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-272">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="727c7-273">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-273">Required.</span>
          </span>
          <span data-ttu-id="727c7-274">
            <see langword="True" /> para executar uma comparação de cadeias de caracteres que diferencia maiúsculas de minúsculas; caso contrário, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-274">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727c7-275">Representa o operador de menor ou igual a (&lt;=) sobrecarregado do Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-275">Represents the overloaded Visual Basic less-than or equal-to (&lt;=) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727c7-276">O resultado do operador de menor que ou igual a de sobrecarregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-276">The result of the overloaded less-than or equal-to operator.</span>
          </span>
          <span data-ttu-id="727c7-277">
            <see langword="False" /> se não houver suporte para a sobrecarga de operador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-277">
              <see langword="False" /> if operator overloading is not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727c7-278">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="727c7-278">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md">
          <span data-ttu-id="727c7-279">Procedimentos do operador</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-279">Operator Procedures</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectNotEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectNotEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectNotEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectNotEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectNotEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectNotEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="727c7-280">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-280">Required.</span>
          </span>
          <span data-ttu-id="727c7-281">Qualquer expressão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-281">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="727c7-282">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-282">Required.</span>
          </span>
          <span data-ttu-id="727c7-283">Qualquer expressão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-283">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="727c7-284">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-284">Required.</span>
          </span>
          <span data-ttu-id="727c7-285">
            <see langword="True" /> para executar uma comparação de cadeias de caracteres que diferencia maiúsculas de minúsculas; caso contrário, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-285">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727c7-286">Representa o operador de não igual equals (&lt;&gt;) sobrecarregado do Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-286">Represents the overloaded Visual Basic not-equal (&lt;&gt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727c7-287">O resultado do operador de não igual sobrecarregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-287">The result of the overloaded not-equal operator.</span>
          </span>
          <span data-ttu-id="727c7-288">
            <see langword="False" /> se não houver suporte para a sobrecarga de operador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-288">
              <see langword="False" /> if operator overloading is not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727c7-289">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="727c7-289">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md">
          <span data-ttu-id="727c7-290">Procedimentos do operador</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-290">Operator Procedures</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="DivideObject">
      <MemberSignature Language="C#" Value="public static object DivideObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object DivideObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.DivideObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivideObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ DivideObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member DivideObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.DivideObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="727c7-291">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-291">Required.</span>
          </span>
          <span data-ttu-id="727c7-292">Qualquer expressão numérica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-292">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="727c7-293">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-293">Required.</span>
          </span>
          <span data-ttu-id="727c7-294">Qualquer expressão numérica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-294">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727c7-295">Representa o operador de divisão (/) do Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-295">Represents the Visual Basic division (/) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727c7-296">O quociente total de <paramref name="Left" /> dividido por <paramref name="Right" />, incluindo qualquer resto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-296">The full quotient of <paramref name="Left" /> divided by <paramref name="Right" />, including any remainder.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727c7-297">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="727c7-297">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/floating-point-division-operator.md">
          <span data-ttu-id="727c7-298">Operador / (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-298">/ Operator (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ExponentObject">
      <MemberSignature Language="C#" Value="public static object ExponentObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ExponentObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExponentObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ExponentObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member ExponentObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="727c7-299">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-299">Required.</span>
          </span>
          <span data-ttu-id="727c7-300">Qualquer expressão numérica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-300">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="727c7-301">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-301">Required.</span>
          </span>
          <span data-ttu-id="727c7-302">Qualquer expressão numérica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-302">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727c7-303">Representa o operador de expoente (^) do Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-303">Represents the Visual Basic exponent (^) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727c7-304">O resultado de <paramref name="Left" /> elevado à potência de <paramref name="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-304">The result of <paramref name="Left" /> raised to the power of <paramref name="Right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727c7-305">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="727c7-305">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/exponentiation-operators.md">
          <span data-ttu-id="727c7-306">Operador ^ (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-306">^ Operator (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="FallbackInvokeUserDefinedOperator">
      <MemberSignature Language="C#" Value="public static object FallbackInvokeUserDefinedOperator (object vbOp, object[] Arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static object FallbackInvokeUserDefinedOperator(object vbOp, object[] Arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator(System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FallbackInvokeUserDefinedOperator (vbOp As Object, Arguments As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ FallbackInvokeUserDefinedOperator(System::Object ^ vbOp, cli::array &lt;System::Object ^&gt; ^ Arguments);" />
      <MemberSignature Language="F#" Value="static member FallbackInvokeUserDefinedOperator : obj * obj[] -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator (vbOp, Arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("do not use this method", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vbOp" Type="System.Object" />
        <Parameter Name="Arguments" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="vbOp">
          <span data-ttu-id="727c7-307">O operador definido pelo usuário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-307">The user-defined operator.</span>
          </span>
        </param>
        <param name="Arguments">
          <span data-ttu-id="727c7-308">Valores de argumento a passar ao operador definido pelo usuário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-308">Argument values to pass to the user-defined operator.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727c7-309">Executa uma avaliação de associação tardia de um operador definido pelo usuário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-309">Executes a late-bound evaluation of a user-defined operator.</span>
          </span>
          <span data-ttu-id="727c7-310">Esse método auxiliar não deve ser chamado diretamente do seu código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-310">This helper method is not meant to be called directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727c7-311">O resultado retornado do operador definido pelo usuário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-311">The result returned from the user-defined operator.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IntDivideObject">
      <MemberSignature Language="C#" Value="public static object IntDivideObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object IntDivideObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IntDivideObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ IntDivideObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member IntDivideObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="727c7-312">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-312">Required.</span>
          </span>
          <span data-ttu-id="727c7-313">Qualquer expressão numérica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-313">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="727c7-314">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-314">Required.</span>
          </span>
          <span data-ttu-id="727c7-315">Qualquer expressão numérica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-315">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727c7-316">Representa o operador de divisão de inteiro (\\) do Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-316">Represents the Visual Basic integer division (\\) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727c7-317">O quociente de inteiro de <paramref name="Left" /> dividido por <paramref name="Right" />, que descarta qualquer resto e retém apenas a parte do inteiro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-317">The integer quotient of <paramref name="Left" /> divided by <paramref name="Right" />, which discards any remainder and retains only the integer portion.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727c7-318">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="727c7-318">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/integer-division-operator.md">
          <span data-ttu-id="727c7-319">Operador \\</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-319">\ Operator</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="LeftShiftObject">
      <MemberSignature Language="C#" Value="public static object LeftShiftObject (object Operand, object Amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static object LeftShiftObject(object Operand, object Amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LeftShiftObject (Operand As Object, Amount As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LeftShiftObject(System::Object ^ Operand, System::Object ^ Amount);" />
      <MemberSignature Language="F#" Value="static member LeftShiftObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject (Operand, Amount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
        <Parameter Name="Amount" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand">
          <span data-ttu-id="727c7-320">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-320">Required.</span>
          </span>
          <span data-ttu-id="727c7-321">Expressão numérica integral.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-321">Integral numeric expression.</span>
          </span>
          <span data-ttu-id="727c7-322">O padrão de bit a ser deslocado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-322">The bit pattern to be shifted.</span>
          </span>
          <span data-ttu-id="727c7-323">O tipo de dados deve ser um tipo integral (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> ou <see langword="ULong" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-323">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span>
          </span>
        </param>
        <param name="Amount">
          <span data-ttu-id="727c7-324">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-324">Required.</span>
          </span>
          <span data-ttu-id="727c7-325">Expressão numérica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-325">Numeric expression.</span>
          </span>
          <span data-ttu-id="727c7-326">O número de bits para deslocar o padrão de bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-326">The number of bits to shift the bit pattern.</span>
          </span>
          <span data-ttu-id="727c7-327">O tipo de dados deve ser <see langword="Integer" /> ou ampliado para <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-327">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727c7-328">Representa operador de deslocamento aritmético à esquerda (&lt;&lt;) do Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-328">Represents the Visual Basic arithmetic left shift (&lt;&lt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727c7-329">Um valor numérico integral.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-329">An integral numeric value.</span>
          </span>
          <span data-ttu-id="727c7-330">O resultado do deslocamento do padrão de bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-330">The result of shifting the bit pattern.</span>
          </span>
          <span data-ttu-id="727c7-331">O tipo de dados é o mesmo que o de <paramref name="Operand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-331">The data type is the same as that of <paramref name="Operand" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727c7-332">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="727c7-332">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/left-shift-operator.md">
          <span data-ttu-id="727c7-333">&lt;&lt; Operador (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-333">&lt;&lt; Operator (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="LikeObject">
      <MemberSignature Language="C#" Value="public static object LikeObject (object Source, object Pattern, Microsoft.VisualBasic.CompareMethod CompareOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static object LikeObject(object Source, object Pattern, valuetype Microsoft.VisualBasic.CompareMethod CompareOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LikeObject (Source As Object, Pattern As Object, CompareOption As CompareMethod) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LikeObject(System::Object ^ Source, System::Object ^ Pattern, Microsoft::VisualBasic::CompareMethod CompareOption);" />
      <MemberSignature Language="F#" Value="static member LikeObject : obj * obj * Microsoft.VisualBasic.CompareMethod -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.LikeObject (Source, Pattern, CompareOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.Object" />
        <Parameter Name="Pattern" Type="System.Object" />
        <Parameter Name="CompareOption" Type="Microsoft.VisualBasic.CompareMethod" />
      </Parameters>
      <Docs>
        <param name="Source">
          <span data-ttu-id="727c7-334">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-334">Required.</span>
          </span>
          <span data-ttu-id="727c7-335">Qualquer expressão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-335">Any expression.</span>
          </span>
        </param>
        <param name="Pattern">
          <span data-ttu-id="727c7-336">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-336">Required.</span>
          </span>
          <span data-ttu-id="727c7-337">Qualquer expressão de cadeia de caracteres em conformidade com as convenções de correspondência de padrão descritas no Operador Like.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-337">Any string expression conforming to the pattern-matching conventions described in Like Operator.</span>
          </span>
        </param>
        <param name="CompareOption">
          <span data-ttu-id="727c7-338">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-338">Required.</span>
          </span>
          <span data-ttu-id="727c7-339">Um valor <see cref="T:Microsoft.VisualBasic.CompareMethod" /> que especifica que a operação usa a comparação de texto ou binária.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-339">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727c7-340">Representa o operador <see langword="Like" /> do Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-340">Represents the Visual Basic <see langword="Like" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727c7-341">
            <see langword="True" /> se a representação de cadeia de caracteres do valor em <paramref name="Source" /> satisfizer o padrão contido no <paramref name="Pattern" />; caso contrário, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-341">
              <see langword="True" /> if the string representation of the value in <paramref name="Source" /> satisfies the pattern that is contained in <paramref name="Pattern" />; otherwise, <see langword="False" />.</span>
          </span>
          <span data-ttu-id="727c7-342">
            <see langword="True" /> se <paramref name="Source" /> e <paramref name="Pattern" /> forem <see langword="Nothing" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-342">
              <see langword="True" /> if both <paramref name="Source" /> and <paramref name="Pattern" /> are <see langword="Nothing" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727c7-343">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="727c7-343">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/like-operator.md">
          <span data-ttu-id="727c7-344">Operador Like</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-344">Like Operator</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="LikeString">
      <MemberSignature Language="C#" Value="public static bool LikeString (string Source, string Pattern, Microsoft.VisualBasic.CompareMethod CompareOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool LikeString(string Source, string Pattern, valuetype Microsoft.VisualBasic.CompareMethod CompareOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LikeString (Source As String, Pattern As String, CompareOption As CompareMethod) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool LikeString(System::String ^ Source, System::String ^ Pattern, Microsoft::VisualBasic::CompareMethod CompareOption);" />
      <MemberSignature Language="F#" Value="static member LikeString : string * string * Microsoft.VisualBasic.CompareMethod -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.LikeString (Source, Pattern, CompareOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.String" />
        <Parameter Name="Pattern" Type="System.String" />
        <Parameter Name="CompareOption" Type="Microsoft.VisualBasic.CompareMethod" />
      </Parameters>
      <Docs>
        <param name="Source">
          <span data-ttu-id="727c7-345">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-345">Required.</span>
          </span>
          <span data-ttu-id="727c7-346">Qualquer expressão de <see langword="String" /> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-346">Any <see langword="String" /> expression.</span>
          </span>
        </param>
        <param name="Pattern">
          <span data-ttu-id="727c7-347">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-347">Required.</span>
          </span>
          <span data-ttu-id="727c7-348">Qualquer expressão <see langword="String" /> de acordo com as convenções de correspondência de padrão descritas no operador Like.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-348">Any <see langword="String" /> expression conforming to the pattern-matching conventions described in Like Operator.</span>
          </span>
        </param>
        <param name="CompareOption">
          <span data-ttu-id="727c7-349">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-349">Required.</span>
          </span>
          <span data-ttu-id="727c7-350">Um valor <see cref="T:Microsoft.VisualBasic.CompareMethod" /> que especifica que a operação usa a comparação de texto ou binária.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-350">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727c7-351">Representa o operador <see langword="Like" /> do Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-351">Represents the Visual Basic <see langword="Like" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727c7-352">
            <see langword="True" /> se o valor em <paramref name="Source" /> satisfizer o padrão contido em <paramref name="Pattern" />; caso contrário, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-352">
              <see langword="True" /> if the value in <paramref name="Source" /> satisfies the pattern that is contained in <paramref name="Pattern" />; otherwise, <see langword="False" />.</span>
          </span>
          <span data-ttu-id="727c7-353">
            <see langword="True" /> se ambos <paramref name="Source" /> e <paramref name="Pattern" /> estiverem vazios.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-353">
              <see langword="True" /> if both <paramref name="Source" /> and <paramref name="Pattern" /> are empty.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727c7-354">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="727c7-354">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/like-operator.md">
          <span data-ttu-id="727c7-355">Operador Like</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-355">Like Operator</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ModObject">
      <MemberSignature Language="C#" Value="public static object ModObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ModObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ModObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ModObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ModObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member ModObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ModObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="727c7-356">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-356">Required.</span>
          </span>
          <span data-ttu-id="727c7-357">Qualquer expressão numérica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-357">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="727c7-358">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-358">Required.</span>
          </span>
          <span data-ttu-id="727c7-359">Qualquer expressão numérica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-359">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727c7-360">Representa o operador <see langword="Mod" /> do Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-360">Represents the Visual Basic <see langword="Mod" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727c7-361">O resto após dividir <paramref name="Left" /> por <paramref name="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-361">The remainder after <paramref name="Left" /> is divided by <paramref name="Right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727c7-362">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="727c7-362">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/mod-operator.md">
          <span data-ttu-id="727c7-363">Operador Mod (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-363">Mod Operator (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="MultiplyObject">
      <MemberSignature Language="C#" Value="public static object MultiplyObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object MultiplyObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ MultiplyObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member MultiplyObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="727c7-364">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-364">Required.</span>
          </span>
          <span data-ttu-id="727c7-365">Qualquer expressão numérica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-365">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="727c7-366">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-366">Required.</span>
          </span>
          <span data-ttu-id="727c7-367">Qualquer expressão numérica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-367">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727c7-368">Representa o operador de multiplicação (\*) do Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-368">Represents the Visual Basic multiply (\*) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727c7-369">O produto de <paramref name="Left" /> e <paramref name="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-369">The product of <paramref name="Left" /> and <paramref name="Right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727c7-370">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="727c7-370">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/multiplication-operator.md">
          <span data-ttu-id="727c7-371">Operador \* (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-371">\* Operator (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="NegateObject">
      <MemberSignature Language="C#" Value="public static object NegateObject (object Operand);" />
      <MemberSignature Language="ILAsm" Value=".method public static object NegateObject(object Operand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.NegateObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NegateObject (Operand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NegateObject(System::Object ^ Operand);" />
      <MemberSignature Language="F#" Value="static member NegateObject : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.NegateObject Operand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand">
          <span data-ttu-id="727c7-372">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-372">Required.</span>
          </span>
          <span data-ttu-id="727c7-373">Qualquer expressão numérica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-373">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727c7-374">Representa o operador unário negativo (-) do Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-374">Represents the Visual Basic unary minus (–) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727c7-375">O valor negativo de <paramref name="Operand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-375">The negative value of <paramref name="Operand" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727c7-376">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="727c7-376">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/subtraction-operator.md">
          <span data-ttu-id="727c7-377">Operador - (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-377">- Operator (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="NotObject">
      <MemberSignature Language="C#" Value="public static object NotObject (object Operand);" />
      <MemberSignature Language="ILAsm" Value=".method public static object NotObject(object Operand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.NotObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NotObject (Operand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NotObject(System::Object ^ Operand);" />
      <MemberSignature Language="F#" Value="static member NotObject : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.NotObject Operand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand">
          <span data-ttu-id="727c7-378">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-378">Required.</span>
          </span>
          <span data-ttu-id="727c7-379">Qualquer <see langword="Boolean" /> ou expressão numérica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-379">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727c7-380">Representa o operador <see langword="Not" /> do Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-380">Represents the Visual Basic <see langword="Not" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727c7-381">Para operações <see langword="Boolean" />, <see langword="False" /> se <paramref name="Operand" /> for <see langword="True" />; caso contrário, <see langword="True" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-381">For <see langword="Boolean" /> operations, <see langword="False" /> if <paramref name="Operand" /> is <see langword="True" />; otherwise, <see langword="True" />.</span>
          </span>
          <span data-ttu-id="727c7-382">Para operações bit a bit, 1 se <paramref name="Operand" /> for 0; caso contrário, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-382">For bitwise operations, 1 if <paramref name="Operand" /> is 0; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727c7-383">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="727c7-383">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/not-operator.md">
          <span data-ttu-id="727c7-384">Operador Not (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-384">Not Operator (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="OrObject">
      <MemberSignature Language="C#" Value="public static object OrObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object OrObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.OrObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OrObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ OrObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member OrObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.OrObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="727c7-385">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-385">Required.</span>
          </span>
          <span data-ttu-id="727c7-386">Qualquer <see langword="Boolean" /> ou expressão numérica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-386">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="727c7-387">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-387">Required.</span>
          </span>
          <span data-ttu-id="727c7-388">Qualquer <see langword="Boolean" /> ou expressão numérica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-388">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727c7-389">Representa o operador <see langword="Or" /> do Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-389">Represents the Visual Basic <see langword="Or" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727c7-390">Para operações <see langword="Boolean" />, <see langword="False" /> se tanto <paramref name="Left" /> quanto <paramref name="Right" /> forem avaliados como <see langword="False" />; caso contrário, <see langword="True" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-390">For <see langword="Boolean" /> operations, <see langword="False" /> if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to <see langword="False" />; otherwise, <see langword="True" />.</span>
          </span>
          <span data-ttu-id="727c7-391">Para operações bit a bit, 0 se tanto <paramref name="Left" /> quanto <paramref name="Right" /> forem avaliados como 0; caso contrário, 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-391">For bitwise operations, 0 if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to 0; otherwise, 1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727c7-392">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="727c7-392">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/or-operator.md">
          <span data-ttu-id="727c7-393">Operador Or (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-393">Or Operator (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="PlusObject">
      <MemberSignature Language="C#" Value="public static object PlusObject (object Operand);" />
      <MemberSignature Language="ILAsm" Value=".method public static object PlusObject(object Operand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.PlusObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PlusObject (Operand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ PlusObject(System::Object ^ Operand);" />
      <MemberSignature Language="F#" Value="static member PlusObject : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.PlusObject Operand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand">
          <span data-ttu-id="727c7-394">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-394">Required.</span>
          </span>
          <span data-ttu-id="727c7-395">Qualquer expressão numérica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-395">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727c7-396">Representa o operador unário positivo (+) do Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-396">Represents the Visual Basic unary plus (+) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727c7-397">O valor de <paramref name="Operand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-397">The value of <paramref name="Operand" />.</span>
          </span>
          <span data-ttu-id="727c7-398">(O sinal do <paramref name="Operand" /> permanece inalterado.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-398">(The sign of the <paramref name="Operand" /> is unchanged.)</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727c7-399">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="727c7-399">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/addition-operator.md">
          <span data-ttu-id="727c7-400">Operador + (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-400">+ Operator (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="RightShiftObject">
      <MemberSignature Language="C#" Value="public static object RightShiftObject (object Operand, object Amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static object RightShiftObject(object Operand, object Amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RightShiftObject (Operand As Object, Amount As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ RightShiftObject(System::Object ^ Operand, System::Object ^ Amount);" />
      <MemberSignature Language="F#" Value="static member RightShiftObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject (Operand, Amount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
        <Parameter Name="Amount" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand">
          <span data-ttu-id="727c7-401">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-401">Required.</span>
          </span>
          <span data-ttu-id="727c7-402">Expressão numérica integral.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-402">Integral numeric expression.</span>
          </span>
          <span data-ttu-id="727c7-403">O padrão de bit a ser deslocado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-403">The bit pattern to be shifted.</span>
          </span>
          <span data-ttu-id="727c7-404">O tipo de dados deve ser um tipo integral (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> ou <see langword="ULong" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-404">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span>
          </span>
        </param>
        <param name="Amount">
          <span data-ttu-id="727c7-405">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-405">Required.</span>
          </span>
          <span data-ttu-id="727c7-406">Expressão numérica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-406">Numeric expression.</span>
          </span>
          <span data-ttu-id="727c7-407">O número de bits para deslocar o padrão de bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-407">The number of bits to shift the bit pattern.</span>
          </span>
          <span data-ttu-id="727c7-408">O tipo de dados deve ser <see langword="Integer" /> ou ampliado para <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-408">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727c7-409">Representa operador de deslocamento aritmético à direita (&gt;&gt;) do Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-409">Represents the Visual Basic arithmetic right shift (&gt;&gt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727c7-410">Um valor numérico integral.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-410">An integral numeric value.</span>
          </span>
          <span data-ttu-id="727c7-411">O resultado do deslocamento do padrão de bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-411">The result of shifting the bit pattern.</span>
          </span>
          <span data-ttu-id="727c7-412">O tipo de dados é o mesmo que o de <paramref name="Operand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-412">The data type is the same as that of <paramref name="Operand" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727c7-413">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="727c7-413">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/right-shift-operator.md">
          <span data-ttu-id="727c7-414">&gt;&gt; Operador (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-414">&gt;&gt; Operator (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="SubtractObject">
      <MemberSignature Language="C#" Value="public static object SubtractObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object SubtractObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubtractObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ SubtractObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member SubtractObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="727c7-415">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-415">Required.</span>
          </span>
          <span data-ttu-id="727c7-416">Qualquer expressão numérica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-416">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="727c7-417">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-417">Required.</span>
          </span>
          <span data-ttu-id="727c7-418">Qualquer expressão numérica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-418">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727c7-419">Representa o operador de subtração (-) do Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-419">Represents the Visual Basic subtraction (–) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727c7-420">A diferença entre <paramref name="Left" /> e <paramref name="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-420">The difference between <paramref name="Left" /> and <paramref name="Right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727c7-421">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="727c7-421">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/subtraction-operator.md">
          <span data-ttu-id="727c7-422">Operador - (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-422">- Operator (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="XorObject">
      <MemberSignature Language="C#" Value="public static object XorObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object XorObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function XorObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ XorObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member XorObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.XorObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="727c7-423">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-423">Required.</span>
          </span>
          <span data-ttu-id="727c7-424">Qualquer <see langword="Boolean" /> ou expressão numérica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-424">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="727c7-425">Necessário.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-425">Required.</span>
          </span>
          <span data-ttu-id="727c7-426">Qualquer <see langword="Boolean" /> ou expressão numérica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-426">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="727c7-427">Representa o operador <see langword="Xor" /> do Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-427">Represents the Visual Basic <see langword="Xor" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="727c7-428">Um <see langword="Boolean" /> ou valor numérico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-428">A <see langword="Boolean" /> or numeric value.</span>
          </span>
          <span data-ttu-id="727c7-429">Para uma comparação <see langword="Boolean" />, o valor retornado é a exclusão lógica (disjunção lógica exclusiva) de dois valores <see langword="Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-429">For a <see langword="Boolean" /> comparison, the return value is the logical exclusion (exclusive logical disjunction) of two <see langword="Boolean" /> values.</span>
          </span>
          <span data-ttu-id="727c7-430">Para operações bit a bit (numéricas), o valor retornado é um valor numérico que representa a exclusão bit a bit (disjunção bit a bit exclusiva) dos dois padrões numéricos de bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-430">For bitwise (numeric) operations, the return value is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns.</span>
          </span>
          <span data-ttu-id="727c7-431">Para obter mais informações, consulte <see href="https://docs.microsoft.com/dotnet/visual-basic/language-reference/operators/xor-operator">Operador Xor</see>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-431">For more information, see <see href="https://docs.microsoft.com/dotnet/visual-basic/language-reference/operators/xor-operator">Xor Operator</see>.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="727c7-432">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="727c7-432">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/xor-operator.md">
          <span data-ttu-id="727c7-433">Operador Xor (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="727c7-433">Xor Operator (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>