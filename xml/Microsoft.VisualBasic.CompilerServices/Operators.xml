<Type Name="Operators" FullName="Microsoft.VisualBasic.CompilerServices.Operators">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7b3967a60b994ba8a8d4360388a46a4027a80d20" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37711948" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Operators" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Operators extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.CompilerServices.Operators" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Operators" />
  <TypeSignature Language="C++ CLI" Value="public ref class Operators sealed" />
  <TypeSignature Language="F#" Value="type Operators = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="8d81c-101">Provides late-bound math operators, such as <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" /> and <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />, which the Visual Basic compiler uses internally.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8d81c-101">Provides late-bound math operators, such as <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" /> and <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />, which the Visual Basic compiler uses internally.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d81c-102">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="8d81c-102">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="AddObject">
      <MemberSignature Language="C#" Value="public static object AddObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object AddObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ AddObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member AddObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.AddObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="8d81c-103">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-103">Required.</span>
          </span>
          <span data-ttu-id="8d81c-104">Any numeric expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-104">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="8d81c-105">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-105">Required.</span>
          </span>
          <span data-ttu-id="8d81c-106">Any numeric expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-106">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d81c-107">Represents the Visual Basic addition (+) operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-107">Represents the Visual Basic addition (+) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d81c-108">The sum of <paramref name="Left" /> and <paramref name="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-108">The sum of <paramref name="Left" /> and <paramref name="Right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d81c-109">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="8d81c-109">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="AndObject">
      <MemberSignature Language="C#" Value="public static object AndObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object AndObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.AndObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AndObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ AndObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member AndObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.AndObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="8d81c-110">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-110">Required.</span>
          </span>
          <span data-ttu-id="8d81c-111">Any <see langword="Boolean" /> or numeric expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-111">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="8d81c-112">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-112">Required.</span>
          </span>
          <span data-ttu-id="8d81c-113">Any <see langword="Boolean" /> or numeric expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-113">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d81c-114">Represents the Visual Basic <see langword="And" /> operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-114">Represents the Visual Basic <see langword="And" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d81c-115">For <see langword="Boolean" /> operations, <see langword="True" /> if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to <see langword="True" />; otherwise, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-115">For <see langword="Boolean" /> operations, <see langword="True" /> if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to <see langword="True" />; otherwise, <see langword="False" />.</span>
          </span>
          <span data-ttu-id="8d81c-116">For bitwise operations, 1 if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to 1; otherwise, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-116">For bitwise operations, 1 if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to 1; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d81c-117">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="8d81c-117">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareObject">
      <MemberSignature Language="C#" Value="public static int CompareObject (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 CompareObject(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObject (Left As Object, Right As Object, TextCompare As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CompareObject(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObject : obj * obj * bool -&gt; int" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObject (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="8d81c-118">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-118">Required.</span>
          </span>
          <span data-ttu-id="8d81c-119">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-119">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="8d81c-120">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-120">Required.</span>
          </span>
          <span data-ttu-id="8d81c-121">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-121">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="8d81c-122">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-122">Required.</span>
          </span>
          <span data-ttu-id="8d81c-123">
            <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-123">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d81c-124">Represents Visual Basic comparison operators.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-124">Represents Visual Basic comparison operators.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d81c-125">
            <list type="table">
              <listheader>
                <term> Value  </term>
                <description> Condition  </description>
              </listheader>
              <item>
                <term> -1  </term>
                <description>
                  <paramref name="Left" /> is less than <paramref name="Right" />.  </description>
              </item>
              <item>
                <term> 0  </term>
                <description>
                  <paramref name="Left" /> and <paramref name="Right" /> are equal.  </description>
              </item>
              <item>
                <term> 1  </term>
                <description>
                  <paramref name="Left" /> is greater than <paramref name="Right" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-125">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Condition  </description>
                </listheader>
                <item>
                  <term> -1  </term>
                  <description>
                    <paramref name="Left" /> is less than <paramref name="Right" />.  </description>
                </item>
                <item>
                  <term> 0  </term>
                  <description>
                    <paramref name="Left" /> and <paramref name="Right" /> are equal.  </description>
                </item>
                <item>
                  <term> 1  </term>
                  <description>
                    <paramref name="Left" /> is greater than <paramref name="Right" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d81c-126">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="8d81c-126">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareObjectEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="8d81c-127">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-127">Required.</span>
          </span>
          <span data-ttu-id="8d81c-128">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-128">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="8d81c-129">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-129">Required.</span>
          </span>
          <span data-ttu-id="8d81c-130">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-130">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="8d81c-131">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-131">Required.</span>
          </span>
          <span data-ttu-id="8d81c-132">
            <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-132">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d81c-133">Represents the Visual Basic equal (=) operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-133">Represents the Visual Basic equal (=) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d81c-134">
            <see langword="True" /> if <paramref name="Left" /> and <paramref name="Right" /> are equal; otherwise, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-134">
              <see langword="True" /> if <paramref name="Left" /> and <paramref name="Right" /> are equal; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d81c-135">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="8d81c-135">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareObjectGreater">
      <MemberSignature Language="C#" Value="public static object CompareObjectGreater (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectGreater(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectGreater (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectGreater(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectGreater : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="8d81c-136">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-136">Required.</span>
          </span>
          <span data-ttu-id="8d81c-137">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-137">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="8d81c-138">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-138">Required.</span>
          </span>
          <span data-ttu-id="8d81c-139">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-139">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="8d81c-140">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-140">Required.</span>
          </span>
          <span data-ttu-id="8d81c-141">
            <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-141">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d81c-142">Represents the Visual Basic greater-than (&gt;) operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-142">Represents the Visual Basic greater-than (&gt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d81c-143">
            <see langword="True" /> if <paramref name="Left" /> is greater than <paramref name="Right" />; otherwise, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-143">
              <see langword="True" /> if <paramref name="Left" /> is greater than <paramref name="Right" />; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d81c-144">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="8d81c-144">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareObjectGreaterEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectGreaterEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectGreaterEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectGreaterEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectGreaterEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectGreaterEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="8d81c-145">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-145">Required.</span>
          </span>
          <span data-ttu-id="8d81c-146">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-146">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="8d81c-147">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-147">Required.</span>
          </span>
          <span data-ttu-id="8d81c-148">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-148">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="8d81c-149">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-149">Required.</span>
          </span>
          <span data-ttu-id="8d81c-150">
            <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-150">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d81c-151">Represents the Visual Basic greater-than or equal-to (&gt;=) operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-151">Represents the Visual Basic greater-than or equal-to (&gt;=) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d81c-152">
            <see langword="True" /> if <paramref name="Left" /> is greater than or equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-152">
              <see langword="True" /> if <paramref name="Left" /> is greater than or equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d81c-153">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="8d81c-153">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareObjectLess">
      <MemberSignature Language="C#" Value="public static object CompareObjectLess (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectLess(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectLess (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectLess(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectLess : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="8d81c-154">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-154">Required.</span>
          </span>
          <span data-ttu-id="8d81c-155">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-155">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="8d81c-156">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-156">Required.</span>
          </span>
          <span data-ttu-id="8d81c-157">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-157">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="8d81c-158">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-158">Required.</span>
          </span>
          <span data-ttu-id="8d81c-159">
            <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-159">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d81c-160">Represents the Visual Basic less-than (&lt;) operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-160">Represents the Visual Basic less-than (&lt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d81c-161">
            <see langword="True" /> if <paramref name="Left" /> is less than <paramref name="Right" />; otherwise, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-161">
              <see langword="True" /> if <paramref name="Left" /> is less than <paramref name="Right" />; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d81c-162">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="8d81c-162">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareObjectLessEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectLessEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectLessEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectLessEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectLessEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectLessEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="8d81c-163">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-163">Required.</span>
          </span>
          <span data-ttu-id="8d81c-164">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-164">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="8d81c-165">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-165">Required.</span>
          </span>
          <span data-ttu-id="8d81c-166">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-166">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="8d81c-167">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-167">Required.</span>
          </span>
          <span data-ttu-id="8d81c-168">
            <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-168">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d81c-169">Represents the Visual Basic less-than or equal-to (&lt;=) operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-169">Represents the Visual Basic less-than or equal-to (&lt;=) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d81c-170">
            <see langword="True" /> if <paramref name="Left" /> is less than or equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-170">
              <see langword="True" /> if <paramref name="Left" /> is less than or equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d81c-171">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="8d81c-171">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareObjectNotEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectNotEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectNotEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectNotEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectNotEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectNotEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="8d81c-172">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-172">Required.</span>
          </span>
          <span data-ttu-id="8d81c-173">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-173">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="8d81c-174">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-174">Required.</span>
          </span>
          <span data-ttu-id="8d81c-175">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-175">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="8d81c-176">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-176">Required.</span>
          </span>
          <span data-ttu-id="8d81c-177">
            <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-177">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d81c-178">Represents the Visual Basic not-equal (&lt;&gt;) operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-178">Represents the Visual Basic not-equal (&lt;&gt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d81c-179">
            <see langword="True" /> if <paramref name="Left" /> is not equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-179">
              <see langword="True" /> if <paramref name="Left" /> is not equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d81c-180">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="8d81c-180">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareString">
      <MemberSignature Language="C#" Value="public static int CompareString (string Left, string Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 CompareString(string Left, string Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareString (Left As String, Right As String, TextCompare As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CompareString(System::String ^ Left, System::String ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareString : string * string * bool -&gt; int" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareString (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.String" />
        <Parameter Name="Right" Type="System.String" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="8d81c-181">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-181">Required.</span>
          </span>
          <span data-ttu-id="8d81c-182">Any <see langword="String" /> expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-182">Any <see langword="String" /> expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="8d81c-183">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-183">Required.</span>
          </span>
          <span data-ttu-id="8d81c-184">Any <see langword="String" /> expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-184">Any <see langword="String" /> expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="8d81c-185">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-185">Required.</span>
          </span>
          <span data-ttu-id="8d81c-186">
            <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-186">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d81c-187">Performs binary or text string comparison when given two strings.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-187">Performs binary or text string comparison when given two strings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d81c-188">
            <list type="table">
              <listheader>
                <term> Value  </term>
                <description> Condition  </description>
              </listheader>
              <item>
                <term> -1  </term>
                <description>
                  <paramref name="Left" /> is less than <paramref name="Right" />.  </description>
              </item>
              <item>
                <term> 0  </term>
                <description>
                  <paramref name="Left" /> is equal to <paramref name="Right" />.  </description>
              </item>
              <item>
                <term> 1  </term>
                <description>
                  <paramref name="Left" /> is greater than <paramref name="Right" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-188">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Condition  </description>
                </listheader>
                <item>
                  <term> -1  </term>
                  <description>
                    <paramref name="Left" /> is less than <paramref name="Right" />.  </description>
                </item>
                <item>
                  <term> 0  </term>
                  <description>
                    <paramref name="Left" /> is equal to <paramref name="Right" />.  </description>
                </item>
                <item>
                  <term> 1  </term>
                  <description>
                    <paramref name="Left" /> is greater than <paramref name="Right" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d81c-189">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="8d81c-189">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 <span data-ttu-id="8d81c-190">Quando o operador de igualdade do Visual Basic é usado para comparar duas cadeias de caracteres, ele passa as cadeias de caracteres para o <xref:Microsoft.VisualBasic.CompilerServices.Operators.CompareString%2A> método juntamente com um valor de `False` para o `TextCompare` argumento.</span><span class="sxs-lookup"><span data-stu-id="8d81c-190">When the Visual Basic equality operator is used to compare two strings, it passes the strings to the <xref:Microsoft.VisualBasic.CompilerServices.Operators.CompareString%2A> method along with a value of `False` for the `TextCompare` argument.</span></span> <span data-ttu-id="8d81c-191">Isso executa uma comparação diferencia maiusculas de minúsculas que é ordinal ou com base na cultura atual, dependendo do valor da instrução.</span><span class="sxs-lookup"><span data-stu-id="8d81c-191">This performs a case-sensitive comparison that is either ordinal or based on the current culture, depending on the value of the  statement.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConcatenateObject">
      <MemberSignature Language="C#" Value="public static object ConcatenateObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ConcatenateObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConcatenateObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ConcatenateObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member ConcatenateObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="8d81c-192">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-192">Required.</span>
          </span>
          <span data-ttu-id="8d81c-193">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-193">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="8d81c-194">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-194">Required.</span>
          </span>
          <span data-ttu-id="8d81c-195">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-195">Any expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d81c-196">Represents the Visual Basic concatenation (&amp;) operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-196">Represents the Visual Basic concatenation (&amp;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d81c-197">A string representing the concatenation of <paramref name="Left" /> and <paramref name="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-197">A string representing the concatenation of <paramref name="Left" /> and <paramref name="Right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d81c-198">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="8d81c-198">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="8d81c-199">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-199">Required.</span>
          </span>
          <span data-ttu-id="8d81c-200">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-200">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="8d81c-201">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-201">Required.</span>
          </span>
          <span data-ttu-id="8d81c-202">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-202">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="8d81c-203">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-203">Required.</span>
          </span>
          <span data-ttu-id="8d81c-204">
            <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-204">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d81c-205">Represents the overloaded Visual Basic equals (=) operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-205">Represents the overloaded Visual Basic equals (=) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d81c-206">The result of the overloaded equals operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-206">The result of the overloaded equals operator.</span>
          </span>
          <span data-ttu-id="8d81c-207">
            <see langword="False" /> if operator overloading is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-207">
              <see langword="False" /> if operator overloading is not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d81c-208">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="8d81c-208">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectGreater">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectGreater (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectGreater(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectGreater (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectGreater(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectGreater : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="8d81c-209">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-209">Required.</span>
          </span>
          <span data-ttu-id="8d81c-210">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-210">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="8d81c-211">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-211">Required.</span>
          </span>
          <span data-ttu-id="8d81c-212">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-212">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="8d81c-213">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-213">Required.</span>
          </span>
          <span data-ttu-id="8d81c-214">
            <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-214">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d81c-215">Represents the overloaded Visual Basic greater-than (&gt;) operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-215">Represents the overloaded Visual Basic greater-than (&gt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d81c-216">The result of the overloaded greater-than operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-216">The result of the overloaded greater-than operator.</span>
          </span>
          <span data-ttu-id="8d81c-217">
            <see langword="False" /> if operator overloading is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-217">
              <see langword="False" /> if operator overloading is not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d81c-218">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="8d81c-218">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectGreaterEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectGreaterEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectGreaterEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectGreaterEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectGreaterEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectGreaterEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="8d81c-219">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-219">Required.</span>
          </span>
          <span data-ttu-id="8d81c-220">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-220">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="8d81c-221">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-221">Required.</span>
          </span>
          <span data-ttu-id="8d81c-222">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-222">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="8d81c-223">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-223">Required.</span>
          </span>
          <span data-ttu-id="8d81c-224">
            <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-224">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d81c-225">Represents the overloaded Visual Basic greater-than or equal-to (&gt;=) operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-225">Represents the overloaded Visual Basic greater-than or equal-to (&gt;=) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d81c-226">The result of the overloaded greater-than or equal-to operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-226">The result of the overloaded greater-than or equal-to operator.</span>
          </span>
          <span data-ttu-id="8d81c-227">
            <see langword="False" /> if operator overloading is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-227">
              <see langword="False" /> if operator overloading is not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d81c-228">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="8d81c-228">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectLess">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectLess (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectLess(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectLess (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectLess(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectLess : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="8d81c-229">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-229">Required.</span>
          </span>
          <span data-ttu-id="8d81c-230">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-230">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="8d81c-231">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-231">Required.</span>
          </span>
          <span data-ttu-id="8d81c-232">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-232">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="8d81c-233">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-233">Required.</span>
          </span>
          <span data-ttu-id="8d81c-234">
            <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-234">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d81c-235">Represents the overloaded Visual Basic less-than (&lt;) operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-235">Represents the overloaded Visual Basic less-than (&lt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d81c-236">The result of the overloaded less-than operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-236">The result of the overloaded less-than operator.</span>
          </span>
          <span data-ttu-id="8d81c-237">
            <see langword="False" /> if operator overloading is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-237">
              <see langword="False" /> if operator overloading is not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d81c-238">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="8d81c-238">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectLessEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectLessEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectLessEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectLessEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectLessEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectLessEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="8d81c-239">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-239">Required.</span>
          </span>
          <span data-ttu-id="8d81c-240">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-240">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="8d81c-241">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-241">Required.</span>
          </span>
          <span data-ttu-id="8d81c-242">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-242">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="8d81c-243">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-243">Required.</span>
          </span>
          <span data-ttu-id="8d81c-244">
            <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-244">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d81c-245">Represents the overloaded Visual Basic less-than or equal-to (&lt;=) operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-245">Represents the overloaded Visual Basic less-than or equal-to (&lt;=) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d81c-246">The result of the overloaded less-than or equal-to operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-246">The result of the overloaded less-than or equal-to operator.</span>
          </span>
          <span data-ttu-id="8d81c-247">
            <see langword="False" /> if operator overloading is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-247">
              <see langword="False" /> if operator overloading is not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d81c-248">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="8d81c-248">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectNotEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectNotEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectNotEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectNotEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectNotEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectNotEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="8d81c-249">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-249">Required.</span>
          </span>
          <span data-ttu-id="8d81c-250">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-250">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="8d81c-251">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-251">Required.</span>
          </span>
          <span data-ttu-id="8d81c-252">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-252">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="8d81c-253">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-253">Required.</span>
          </span>
          <span data-ttu-id="8d81c-254">
            <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-254">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d81c-255">Represents the overloaded Visual Basic not-equal (&lt;&gt;) operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-255">Represents the overloaded Visual Basic not-equal (&lt;&gt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d81c-256">The result of the overloaded not-equal operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-256">The result of the overloaded not-equal operator.</span>
          </span>
          <span data-ttu-id="8d81c-257">
            <see langword="False" /> if operator overloading is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-257">
              <see langword="False" /> if operator overloading is not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d81c-258">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="8d81c-258">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="DivideObject">
      <MemberSignature Language="C#" Value="public static object DivideObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object DivideObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.DivideObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivideObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ DivideObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member DivideObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.DivideObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="8d81c-259">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-259">Required.</span>
          </span>
          <span data-ttu-id="8d81c-260">Any numeric expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-260">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="8d81c-261">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-261">Required.</span>
          </span>
          <span data-ttu-id="8d81c-262">Any numeric expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-262">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d81c-263">Represents the Visual Basic division (/) operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-263">Represents the Visual Basic division (/) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d81c-264">The full quotient of <paramref name="Left" /> divided by <paramref name="Right" />, including any remainder.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-264">The full quotient of <paramref name="Left" /> divided by <paramref name="Right" />, including any remainder.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d81c-265">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="8d81c-265">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ExponentObject">
      <MemberSignature Language="C#" Value="public static object ExponentObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ExponentObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExponentObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ExponentObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member ExponentObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="8d81c-266">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-266">Required.</span>
          </span>
          <span data-ttu-id="8d81c-267">Any numeric expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-267">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="8d81c-268">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-268">Required.</span>
          </span>
          <span data-ttu-id="8d81c-269">Any numeric expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-269">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d81c-270">Represents the Visual Basic exponent (^) operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-270">Represents the Visual Basic exponent (^) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d81c-271">The result of <paramref name="Left" /> raised to the power of <paramref name="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-271">The result of <paramref name="Left" /> raised to the power of <paramref name="Right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d81c-272">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="8d81c-272">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="FallbackInvokeUserDefinedOperator">
      <MemberSignature Language="C#" Value="public static object FallbackInvokeUserDefinedOperator (object vbOp, object[] Arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static object FallbackInvokeUserDefinedOperator(object vbOp, object[] Arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator(System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FallbackInvokeUserDefinedOperator (vbOp As Object, Arguments As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ FallbackInvokeUserDefinedOperator(System::Object ^ vbOp, cli::array &lt;System::Object ^&gt; ^ Arguments);" />
      <MemberSignature Language="F#" Value="static member FallbackInvokeUserDefinedOperator : obj * obj[] -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator (vbOp, Arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("do not use this method", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vbOp" Type="System.Object" />
        <Parameter Name="Arguments" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="vbOp">
          <span data-ttu-id="8d81c-273">The user-defined operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-273">The user-defined operator.</span>
          </span>
        </param>
        <param name="Arguments">
          <span data-ttu-id="8d81c-274">Argument values to pass to the user-defined operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-274">Argument values to pass to the user-defined operator.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d81c-275">Executes a late-bound evaluation of a user-defined operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-275">Executes a late-bound evaluation of a user-defined operator.</span>
          </span>
          <span data-ttu-id="8d81c-276">This helper method is not meant to be called directly from your code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-276">This helper method is not meant to be called directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d81c-277">The result returned from the user-defined operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-277">The result returned from the user-defined operator.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IntDivideObject">
      <MemberSignature Language="C#" Value="public static object IntDivideObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object IntDivideObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IntDivideObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ IntDivideObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member IntDivideObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="8d81c-278">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-278">Required.</span>
          </span>
          <span data-ttu-id="8d81c-279">Any numeric expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-279">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="8d81c-280">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-280">Required.</span>
          </span>
          <span data-ttu-id="8d81c-281">Any numeric expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-281">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d81c-282">Represents the Visual Basic integer division (\\) operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-282">Represents the Visual Basic integer division (\\) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d81c-283">The integer quotient of <paramref name="Left" /> divided by <paramref name="Right" />, which discards any remainder and retains only the integer portion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-283">The integer quotient of <paramref name="Left" /> divided by <paramref name="Right" />, which discards any remainder and retains only the integer portion.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d81c-284">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="8d81c-284">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="LeftShiftObject">
      <MemberSignature Language="C#" Value="public static object LeftShiftObject (object Operand, object Amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static object LeftShiftObject(object Operand, object Amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LeftShiftObject (Operand As Object, Amount As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LeftShiftObject(System::Object ^ Operand, System::Object ^ Amount);" />
      <MemberSignature Language="F#" Value="static member LeftShiftObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject (Operand, Amount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
        <Parameter Name="Amount" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand">
          <span data-ttu-id="8d81c-285">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-285">Required.</span>
          </span>
          <span data-ttu-id="8d81c-286">Integral numeric expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-286">Integral numeric expression.</span>
          </span>
          <span data-ttu-id="8d81c-287">The bit pattern to be shifted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-287">The bit pattern to be shifted.</span>
          </span>
          <span data-ttu-id="8d81c-288">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-288">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span>
          </span>
        </param>
        <param name="Amount">
          <span data-ttu-id="8d81c-289">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-289">Required.</span>
          </span>
          <span data-ttu-id="8d81c-290">Numeric expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-290">Numeric expression.</span>
          </span>
          <span data-ttu-id="8d81c-291">The number of bits to shift the bit pattern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-291">The number of bits to shift the bit pattern.</span>
          </span>
          <span data-ttu-id="8d81c-292">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-292">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d81c-293">Represents the Visual Basic arithmetic left shift (&lt;&lt;) operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-293">Represents the Visual Basic arithmetic left shift (&lt;&lt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d81c-294">An integral numeric value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-294">An integral numeric value.</span>
          </span>
          <span data-ttu-id="8d81c-295">The result of shifting the bit pattern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-295">The result of shifting the bit pattern.</span>
          </span>
          <span data-ttu-id="8d81c-296">The data type is the same as that of <paramref name="Operand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-296">The data type is the same as that of <paramref name="Operand" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d81c-297">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="8d81c-297">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="LikeObject">
      <MemberSignature Language="C#" Value="public static object LikeObject (object Source, object Pattern, Microsoft.VisualBasic.CompareMethod CompareOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static object LikeObject(object Source, object Pattern, valuetype Microsoft.VisualBasic.CompareMethod CompareOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LikeObject (Source As Object, Pattern As Object, CompareOption As CompareMethod) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LikeObject(System::Object ^ Source, System::Object ^ Pattern, Microsoft::VisualBasic::CompareMethod CompareOption);" />
      <MemberSignature Language="F#" Value="static member LikeObject : obj * obj * Microsoft.VisualBasic.CompareMethod -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.LikeObject (Source, Pattern, CompareOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.Object" />
        <Parameter Name="Pattern" Type="System.Object" />
        <Parameter Name="CompareOption" Type="Microsoft.VisualBasic.CompareMethod" />
      </Parameters>
      <Docs>
        <param name="Source">
          <span data-ttu-id="8d81c-298">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-298">Required.</span>
          </span>
          <span data-ttu-id="8d81c-299">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-299">Any expression.</span>
          </span>
        </param>
        <param name="Pattern">
          <span data-ttu-id="8d81c-300">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-300">Required.</span>
          </span>
          <span data-ttu-id="8d81c-301">Any string expression conforming to the pattern-matching conventions described in Like Operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-301">Any string expression conforming to the pattern-matching conventions described in Like Operator.</span>
          </span>
        </param>
        <param name="CompareOption">
          <span data-ttu-id="8d81c-302">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-302">Required.</span>
          </span>
          <span data-ttu-id="8d81c-303">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-303">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d81c-304">Represents the Visual Basic <see langword="Like" /> operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-304">Represents the Visual Basic <see langword="Like" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d81c-305">
            <see langword="True" /> if the string representation of the value in <paramref name="Source" /> satisfies the pattern that is contained in <paramref name="Pattern" />; otherwise, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-305">
              <see langword="True" /> if the string representation of the value in <paramref name="Source" /> satisfies the pattern that is contained in <paramref name="Pattern" />; otherwise, <see langword="False" />.</span>
          </span>
          <span data-ttu-id="8d81c-306">
            <see langword="True" /> if both <paramref name="Source" /> and <paramref name="Pattern" /> are <see langword="Nothing" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-306">
              <see langword="True" /> if both <paramref name="Source" /> and <paramref name="Pattern" /> are <see langword="Nothing" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d81c-307">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="8d81c-307">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="LikeString">
      <MemberSignature Language="C#" Value="public static bool LikeString (string Source, string Pattern, Microsoft.VisualBasic.CompareMethod CompareOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool LikeString(string Source, string Pattern, valuetype Microsoft.VisualBasic.CompareMethod CompareOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LikeString (Source As String, Pattern As String, CompareOption As CompareMethod) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool LikeString(System::String ^ Source, System::String ^ Pattern, Microsoft::VisualBasic::CompareMethod CompareOption);" />
      <MemberSignature Language="F#" Value="static member LikeString : string * string * Microsoft.VisualBasic.CompareMethod -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.LikeString (Source, Pattern, CompareOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.String" />
        <Parameter Name="Pattern" Type="System.String" />
        <Parameter Name="CompareOption" Type="Microsoft.VisualBasic.CompareMethod" />
      </Parameters>
      <Docs>
        <param name="Source">
          <span data-ttu-id="8d81c-308">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-308">Required.</span>
          </span>
          <span data-ttu-id="8d81c-309">Any <see langword="String" /> expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-309">Any <see langword="String" /> expression.</span>
          </span>
        </param>
        <param name="Pattern">
          <span data-ttu-id="8d81c-310">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-310">Required.</span>
          </span>
          <span data-ttu-id="8d81c-311">Any <see langword="String" /> expression conforming to the pattern-matching conventions described in Like Operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-311">Any <see langword="String" /> expression conforming to the pattern-matching conventions described in Like Operator.</span>
          </span>
        </param>
        <param name="CompareOption">
          <span data-ttu-id="8d81c-312">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-312">Required.</span>
          </span>
          <span data-ttu-id="8d81c-313">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-313">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d81c-314">Represents the Visual Basic <see langword="Like" /> operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-314">Represents the Visual Basic <see langword="Like" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d81c-315">
            <see langword="True" /> if the value in <paramref name="Source" /> satisfies the pattern that is contained in <paramref name="Pattern" />; otherwise, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-315">
              <see langword="True" /> if the value in <paramref name="Source" /> satisfies the pattern that is contained in <paramref name="Pattern" />; otherwise, <see langword="False" />.</span>
          </span>
          <span data-ttu-id="8d81c-316">
            <see langword="True" /> if both <paramref name="Source" /> and <paramref name="Pattern" /> are empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-316">
              <see langword="True" /> if both <paramref name="Source" /> and <paramref name="Pattern" /> are empty.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d81c-317">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="8d81c-317">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ModObject">
      <MemberSignature Language="C#" Value="public static object ModObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ModObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ModObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ModObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ModObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member ModObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ModObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="8d81c-318">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-318">Required.</span>
          </span>
          <span data-ttu-id="8d81c-319">Any numeric expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-319">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="8d81c-320">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-320">Required.</span>
          </span>
          <span data-ttu-id="8d81c-321">Any numeric expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-321">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d81c-322">Represents the Visual Basic <see langword="Mod" /> operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-322">Represents the Visual Basic <see langword="Mod" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d81c-323">The remainder after <paramref name="Left" /> is divided by <paramref name="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-323">The remainder after <paramref name="Left" /> is divided by <paramref name="Right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d81c-324">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="8d81c-324">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="MultiplyObject">
      <MemberSignature Language="C#" Value="public static object MultiplyObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object MultiplyObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ MultiplyObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member MultiplyObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="8d81c-325">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-325">Required.</span>
          </span>
          <span data-ttu-id="8d81c-326">Any numeric expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-326">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="8d81c-327">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-327">Required.</span>
          </span>
          <span data-ttu-id="8d81c-328">Any numeric expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-328">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d81c-329">Represents the Visual Basic multiply (\*) operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-329">Represents the Visual Basic multiply (\*) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d81c-330">The product of <paramref name="Left" /> and <paramref name="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-330">The product of <paramref name="Left" /> and <paramref name="Right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d81c-331">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="8d81c-331">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="NegateObject">
      <MemberSignature Language="C#" Value="public static object NegateObject (object Operand);" />
      <MemberSignature Language="ILAsm" Value=".method public static object NegateObject(object Operand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.NegateObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NegateObject (Operand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NegateObject(System::Object ^ Operand);" />
      <MemberSignature Language="F#" Value="static member NegateObject : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.NegateObject Operand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand">
          <span data-ttu-id="8d81c-332">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-332">Required.</span>
          </span>
          <span data-ttu-id="8d81c-333">Any numeric expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-333">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d81c-334">Represents the Visual Basic unary minus (–) operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-334">Represents the Visual Basic unary minus (–) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d81c-335">The negative value of <paramref name="Operand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-335">The negative value of <paramref name="Operand" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d81c-336">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="8d81c-336">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="NotObject">
      <MemberSignature Language="C#" Value="public static object NotObject (object Operand);" />
      <MemberSignature Language="ILAsm" Value=".method public static object NotObject(object Operand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.NotObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NotObject (Operand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NotObject(System::Object ^ Operand);" />
      <MemberSignature Language="F#" Value="static member NotObject : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.NotObject Operand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand">
          <span data-ttu-id="8d81c-337">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-337">Required.</span>
          </span>
          <span data-ttu-id="8d81c-338">Any <see langword="Boolean" /> or numeric expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-338">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d81c-339">Represents the Visual Basic <see langword="Not" /> operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-339">Represents the Visual Basic <see langword="Not" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d81c-340">For <see langword="Boolean" /> operations, <see langword="False" /> if <paramref name="Operand" /> is <see langword="True" />; otherwise, <see langword="True" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-340">For <see langword="Boolean" /> operations, <see langword="False" /> if <paramref name="Operand" /> is <see langword="True" />; otherwise, <see langword="True" />.</span>
          </span>
          <span data-ttu-id="8d81c-341">For bitwise operations, 1 if <paramref name="Operand" /> is 0; otherwise, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-341">For bitwise operations, 1 if <paramref name="Operand" /> is 0; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d81c-342">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="8d81c-342">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="OrObject">
      <MemberSignature Language="C#" Value="public static object OrObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object OrObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.OrObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OrObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ OrObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member OrObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.OrObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="8d81c-343">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-343">Required.</span>
          </span>
          <span data-ttu-id="8d81c-344">Any <see langword="Boolean" /> or numeric expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-344">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="8d81c-345">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-345">Required.</span>
          </span>
          <span data-ttu-id="8d81c-346">Any <see langword="Boolean" /> or numeric expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-346">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d81c-347">Represents the Visual Basic <see langword="Or" /> operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-347">Represents the Visual Basic <see langword="Or" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d81c-348">For <see langword="Boolean" /> operations, <see langword="False" /> if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to <see langword="False" />; otherwise, <see langword="True" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-348">For <see langword="Boolean" /> operations, <see langword="False" /> if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to <see langword="False" />; otherwise, <see langword="True" />.</span>
          </span>
          <span data-ttu-id="8d81c-349">For bitwise operations, 0 if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to 0; otherwise, 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-349">For bitwise operations, 0 if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to 0; otherwise, 1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d81c-350">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="8d81c-350">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="PlusObject">
      <MemberSignature Language="C#" Value="public static object PlusObject (object Operand);" />
      <MemberSignature Language="ILAsm" Value=".method public static object PlusObject(object Operand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.PlusObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PlusObject (Operand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ PlusObject(System::Object ^ Operand);" />
      <MemberSignature Language="F#" Value="static member PlusObject : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.PlusObject Operand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand">
          <span data-ttu-id="8d81c-351">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-351">Required.</span>
          </span>
          <span data-ttu-id="8d81c-352">Any numeric expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-352">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d81c-353">Represents the Visual Basic unary plus (+) operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-353">Represents the Visual Basic unary plus (+) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d81c-354">The value of <paramref name="Operand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-354">The value of <paramref name="Operand" />.</span>
          </span>
          <span data-ttu-id="8d81c-355">(The sign of the <paramref name="Operand" /> is unchanged.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-355">(The sign of the <paramref name="Operand" /> is unchanged.)</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d81c-356">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="8d81c-356">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="RightShiftObject">
      <MemberSignature Language="C#" Value="public static object RightShiftObject (object Operand, object Amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static object RightShiftObject(object Operand, object Amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RightShiftObject (Operand As Object, Amount As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ RightShiftObject(System::Object ^ Operand, System::Object ^ Amount);" />
      <MemberSignature Language="F#" Value="static member RightShiftObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject (Operand, Amount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
        <Parameter Name="Amount" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand">
          <span data-ttu-id="8d81c-357">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-357">Required.</span>
          </span>
          <span data-ttu-id="8d81c-358">Integral numeric expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-358">Integral numeric expression.</span>
          </span>
          <span data-ttu-id="8d81c-359">The bit pattern to be shifted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-359">The bit pattern to be shifted.</span>
          </span>
          <span data-ttu-id="8d81c-360">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-360">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span>
          </span>
        </param>
        <param name="Amount">
          <span data-ttu-id="8d81c-361">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-361">Required.</span>
          </span>
          <span data-ttu-id="8d81c-362">Numeric expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-362">Numeric expression.</span>
          </span>
          <span data-ttu-id="8d81c-363">The number of bits to shift the bit pattern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-363">The number of bits to shift the bit pattern.</span>
          </span>
          <span data-ttu-id="8d81c-364">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-364">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d81c-365">Represents the Visual Basic arithmetic right shift (&gt;&gt;) operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-365">Represents the Visual Basic arithmetic right shift (&gt;&gt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d81c-366">An integral numeric value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-366">An integral numeric value.</span>
          </span>
          <span data-ttu-id="8d81c-367">The result of shifting the bit pattern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-367">The result of shifting the bit pattern.</span>
          </span>
          <span data-ttu-id="8d81c-368">The data type is the same as that of <paramref name="Operand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-368">The data type is the same as that of <paramref name="Operand" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d81c-369">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="8d81c-369">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="SubtractObject">
      <MemberSignature Language="C#" Value="public static object SubtractObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object SubtractObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubtractObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ SubtractObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member SubtractObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="8d81c-370">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-370">Required.</span>
          </span>
          <span data-ttu-id="8d81c-371">Any numeric expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-371">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="8d81c-372">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-372">Required.</span>
          </span>
          <span data-ttu-id="8d81c-373">Any numeric expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-373">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d81c-374">Represents the Visual Basic subtraction (–) operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-374">Represents the Visual Basic subtraction (–) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d81c-375">The difference between <paramref name="Left" /> and <paramref name="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-375">The difference between <paramref name="Left" /> and <paramref name="Right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d81c-376">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="8d81c-376">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="XorObject">
      <MemberSignature Language="C#" Value="public static object XorObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object XorObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function XorObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ XorObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member XorObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.XorObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="8d81c-377">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-377">Required.</span>
          </span>
          <span data-ttu-id="8d81c-378">Any <see langword="Boolean" /> or numeric expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-378">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="8d81c-379">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-379">Required.</span>
          </span>
          <span data-ttu-id="8d81c-380">Any <see langword="Boolean" /> or numeric expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-380">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d81c-381">Represents the Visual Basic <see langword="Xor" /> operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-381">Represents the Visual Basic <see langword="Xor" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d81c-382">A <see langword="Boolean" /> or numeric value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-382">A <see langword="Boolean" /> or numeric value.</span>
          </span>
          <span data-ttu-id="8d81c-383">For a <see langword="Boolean" /> comparison, the return value is the logical exclusion (exclusive logical disjunction) of two <see langword="Boolean" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-383">For a <see langword="Boolean" /> comparison, the return value is the logical exclusion (exclusive logical disjunction) of two <see langword="Boolean" /> values.</span>
          </span>
          <span data-ttu-id="8d81c-384">For bitwise (numeric) operations, the return value is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-384">For bitwise (numeric) operations, the return value is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns.</span>
          </span>
          <span data-ttu-id="8d81c-385">For more information, see [Xor Operator](~/docs/visual-basic/language-reference/operators/xor-operator.md).</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d81c-385">For more information, see [Xor Operator](~/docs/visual-basic/language-reference/operators/xor-operator.md).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d81c-386">Essa classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente do seu código.</span><span class="sxs-lookup"><span data-stu-id="8d81c-386">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>