<Type Name="ObjectType" FullName="Microsoft.VisualBasic.CompilerServices.ObjectType">
  <TypeSignature Language="C#" Value="public sealed class ObjectType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ObjectType extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.CompilerServices.ObjectType" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ObjectType" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectType sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b8c7e-101">Essa classe foi preterida a partir do Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-101">This class has been deprecated as of Visual Basic 2005.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8c7e-102">Esta classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente no seu código.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-102">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectType ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectType();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b8c7e-103">Inicializa uma nova instância da classe <see cref="T:Microsoft.VisualBasic.CompilerServices.ObjectType" />.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-103">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.CompilerServices.ObjectType" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8c7e-104">Esta classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente no seu código.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-104">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="AddObj">
      <MemberSignature Language="C#" Value="public static object AddObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object AddObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.AddObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ AddObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="b8c7e-105">Necessário.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-105">Required.</span></span> <span data-ttu-id="b8c7e-106">Qualquer expressão numérica.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-106">Any numeric expression.</span></span></param>
        <param name="o2"><span data-ttu-id="b8c7e-107">Necessário.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-107">Required.</span></span> <span data-ttu-id="b8c7e-108">Qualquer expressão numérica.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-108">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="b8c7e-109">Executa uma operação de adição (+).</span><span class="sxs-lookup"><span data-stu-id="b8c7e-109">Performs an addition (+) operation.</span></span></summary>
        <returns><span data-ttu-id="b8c7e-110">A soma de <paramref name="o1" /> e <paramref name="o2" />.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-110">The sum of <paramref name="o1" /> and <paramref name="o2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8c7e-111">Esta classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente no seu código.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-111">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="BitAndObj">
      <MemberSignature Language="C#" Value="public static object BitAndObj (object obj1, object obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object BitAndObj(object obj1, object obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitAndObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BitAndObj (obj1 As Object, obj2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ BitAndObj(System::Object ^ obj1, System::Object ^ obj2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Object" />
        <Parameter Name="obj2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj1"><span data-ttu-id="b8c7e-112">Necessário.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-112">Required.</span></span> <span data-ttu-id="b8c7e-113">Qualquer <see langword="Boolean" /> ou expressão numérica.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-113">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="obj2"><span data-ttu-id="b8c7e-114">Necessário.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-114">Required.</span></span> <span data-ttu-id="b8c7e-115">Qualquer <see langword="Boolean" /> ou expressão numérica.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-115">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="b8c7e-116">Executa uma operação <see langword="And" /> bit a bit.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-116">Performs a bitwise <see langword="And" /> operation.</span></span></summary>
        <returns><span data-ttu-id="b8c7e-117">1 se <paramref name="obj1" /> e <paramref name="obj2" /> forem avaliados como 1; caso contrário, 0.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-117">1 if both <paramref name="obj1" /> and <paramref name="obj2" /> evaluate to 1; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8c7e-118">Esta classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente no seu código.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-118">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="BitOrObj">
      <MemberSignature Language="C#" Value="public static object BitOrObj (object obj1, object obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object BitOrObj(object obj1, object obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitOrObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BitOrObj (obj1 As Object, obj2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ BitOrObj(System::Object ^ obj1, System::Object ^ obj2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Object" />
        <Parameter Name="obj2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj1"><span data-ttu-id="b8c7e-119">Necessário.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-119">Required.</span></span> <span data-ttu-id="b8c7e-120">Qualquer <see langword="Boolean" /> ou expressão numérica.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-120">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="obj2"><span data-ttu-id="b8c7e-121">Necessário.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-121">Required.</span></span> <span data-ttu-id="b8c7e-122">Qualquer <see langword="Boolean" /> ou expressão numérica.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-122">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="b8c7e-123">Executa uma operação <see langword="Or" /> bit a bit.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-123">Performs a bitwise <see langword="Or" /> operation.</span></span></summary>
        <returns><span data-ttu-id="b8c7e-124">0 se <paramref name="obj1" /> e <paramref name="obj2" /> forem avaliados como 0; caso contrário, 1.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-124">0 if both <paramref name="obj1" /> and <paramref name="obj2" /> evaluate to 0; otherwise, 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8c7e-125">Esta classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente no seu código.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-125">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="BitXorObj">
      <MemberSignature Language="C#" Value="public static object BitXorObj (object obj1, object obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object BitXorObj(object obj1, object obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitXorObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BitXorObj (obj1 As Object, obj2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ BitXorObj(System::Object ^ obj1, System::Object ^ obj2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Object" />
        <Parameter Name="obj2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj1"><span data-ttu-id="b8c7e-126">Necessário.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-126">Required.</span></span> <span data-ttu-id="b8c7e-127">Qualquer <see langword="Boolean" /> ou expressão numérica.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-127">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="obj2"><span data-ttu-id="b8c7e-128">Necessário.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-128">Required.</span></span> <span data-ttu-id="b8c7e-129">Qualquer <see langword="Boolean" /> ou expressão numérica.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-129">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="b8c7e-130">Executa uma operação <see langword="Xor" />.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-130">Performs an <see langword="Xor" /> operation.</span></span></summary>
        <returns><span data-ttu-id="b8c7e-131">Um valor numérico que representa a exclusão bit a bit (disjunção bit a bit exclusiva) dos dois padrões de bits numéricos.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-131">A numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns.</span></span> <span data-ttu-id="b8c7e-132">Para obter mais informações, consulte [Operador Xor](~/docs/visual-basic/language-reference/operators/xor-operator.md).</span><span class="sxs-lookup"><span data-stu-id="b8c7e-132">For more information, see [Xor Operator](~/docs/visual-basic/language-reference/operators/xor-operator.md).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8c7e-133">Esta classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente no seu código.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-133">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="DivObj">
      <MemberSignature Language="C#" Value="public static object DivObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object DivObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.DivObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ DivObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="b8c7e-134">Necessário.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-134">Required.</span></span> <span data-ttu-id="b8c7e-135">Qualquer expressão numérica.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-135">Any numeric expression.</span></span></param>
        <param name="o2"><span data-ttu-id="b8c7e-136">Necessário.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-136">Required.</span></span> <span data-ttu-id="b8c7e-137">Qualquer expressão numérica.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-137">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="b8c7e-138">Executa uma operação de divisão (/).</span><span class="sxs-lookup"><span data-stu-id="b8c7e-138">Performs a division (/) operation.</span></span></summary>
        <returns><span data-ttu-id="b8c7e-139">O quociente total de <paramref name="o1" /> dividido por <paramref name="o2" />, incluindo qualquer resto.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-139">The full quotient of <paramref name="o1" /> divided by <paramref name="o2" />, including any remainder.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8c7e-140">Esta classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente no seu código.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-140">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetObjectValuePrimitive">
      <MemberSignature Language="C#" Value="public static object GetObjectValuePrimitive (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static object GetObjectValuePrimitive(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.GetObjectValuePrimitive(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetObjectValuePrimitive (o As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetObjectValuePrimitive(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="b8c7e-141">Necessário.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-141">Required.</span></span> <span data-ttu-id="b8c7e-142">Qualquer expressão.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-142">Any expression.</span></span></param>
        <summary><span data-ttu-id="b8c7e-143">Retorna um valor primitivo demarcado.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-143">Returns a boxed primitive value.</span></span> <span data-ttu-id="b8c7e-144">Esse método é usado para evitar copiar estruturas várias vezes.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-144">This method is used to prevent copying structures multiple times.</span></span></summary>
        <returns><span data-ttu-id="b8c7e-145">O valor primitivo de <paramref name="o" /> digitado como um objeto.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-145">The primitive value of <paramref name="o" /> typed as object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8c7e-146">Esta classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente no seu código.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-146">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IDivObj">
      <MemberSignature Language="C#" Value="public static object IDivObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object IDivObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.IDivObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IDivObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ IDivObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="b8c7e-147">Necessário.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-147">Required.</span></span> <span data-ttu-id="b8c7e-148">Qualquer expressão numérica.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-148">Any numeric expression.</span></span></param>
        <param name="o2"><span data-ttu-id="b8c7e-149">Necessário.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-149">Required.</span></span> <span data-ttu-id="b8c7e-150">Qualquer expressão numérica.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-150">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="b8c7e-151">Executa uma operação de divisão de inteiro (\\).</span><span class="sxs-lookup"><span data-stu-id="b8c7e-151">Performs an integer division (\\) operation.</span></span></summary>
        <returns><span data-ttu-id="b8c7e-152">O quociente de inteiro de <paramref name="o1" /> dividido por <paramref name="o2" />, que descarta qualquer resto e retém apenas a parte do inteiro.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-152">The integer quotient of <paramref name="o1" /> divided by <paramref name="o2" />, which discards any remainder and retains only the integer portion.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8c7e-153">Esta classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente no seu código.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-153">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="LikeObj">
      <MemberSignature Language="C#" Value="public static bool LikeObj (object vLeft, object vRight, Microsoft.VisualBasic.CompareMethod CompareOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool LikeObj(object vLeft, object vRight, valuetype Microsoft.VisualBasic.CompareMethod CompareOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.LikeObj(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LikeObj (vLeft As Object, vRight As Object, CompareOption As CompareMethod) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool LikeObj(System::Object ^ vLeft, System::Object ^ vRight, Microsoft::VisualBasic::CompareMethod CompareOption);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vLeft" Type="System.Object" />
        <Parameter Name="vRight" Type="System.Object" />
        <Parameter Name="CompareOption" Type="Microsoft.VisualBasic.CompareMethod" />
      </Parameters>
      <Docs>
        <param name="vLeft"><span data-ttu-id="b8c7e-154">Necessário.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-154">Required.</span></span> <span data-ttu-id="b8c7e-155">Qualquer expressão.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-155">Any expression.</span></span></param>
        <param name="vRight"><span data-ttu-id="b8c7e-156">Necessário.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-156">Required.</span></span> <span data-ttu-id="b8c7e-157">Qualquer expressão de cadeia de caracteres em conformidade com as convenções de correspondência de padrão descritas no Operador Like.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-157">Any string expression conforming to the pattern-matching conventions described in Like Operator.</span></span></param>
        <param name="CompareOption"><span data-ttu-id="b8c7e-158">Necessário.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-158">Required.</span></span> <span data-ttu-id="b8c7e-159">Um valor <see cref="T:Microsoft.VisualBasic.CompareMethod" /> que especifica que a operação usa a comparação de texto ou binária.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-159">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</span></span></param>
        <summary><span data-ttu-id="b8c7e-160">Executa uma comparação de <see langword="Like" />.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-160">Performs a <see langword="Like" /> comparison.</span></span></summary>
        <returns>
          <span data-ttu-id="b8c7e-161"><see langword="True" /> se a representação de cadeia de caracteres do valor em <paramref name="vLeft" /> satisfizer o padrão contido no <paramref name="vRight" />; caso contrário, <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-161"><see langword="True" /> if the string representation of the value in <paramref name="vLeft" /> satisfies the pattern that is contained in <paramref name="vRight" />; otherwise, <see langword="False" />.</span></span> <span data-ttu-id="b8c7e-162"><see langword="True" /> se <paramref name="vLeft" /> e <paramref name="vRight" /> forem <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-162"><see langword="True" /> if both <paramref name="vLeft" /> and <paramref name="vRight" /> are <see langword="Nothing" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8c7e-163">Esta classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente no seu código.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-163">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ModObj">
      <MemberSignature Language="C#" Value="public static object ModObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ModObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ModObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ModObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ModObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="b8c7e-164">Necessário.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-164">Required.</span></span> <span data-ttu-id="b8c7e-165">Qualquer expressão numérica.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-165">Any numeric expression.</span></span></param>
        <param name="o2"><span data-ttu-id="b8c7e-166">Necessário.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-166">Required.</span></span> <span data-ttu-id="b8c7e-167">Qualquer expressão numérica.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-167">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="b8c7e-168">Executa uma operação de módulo (<see langword="Mod" />).</span><span class="sxs-lookup"><span data-stu-id="b8c7e-168">Performs a modulus (<see langword="Mod" />) operation.</span></span></summary>
        <returns><span data-ttu-id="b8c7e-169">O resto após dividir <paramref name="o1" /> por <paramref name="o2" />.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-169">The remainder after <paramref name="o1" /> is divided by <paramref name="o2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8c7e-170">Esta classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente no seu código.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-170">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="MulObj">
      <MemberSignature Language="C#" Value="public static object MulObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object MulObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.MulObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MulObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ MulObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="b8c7e-171">Necessário.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-171">Required.</span></span> <span data-ttu-id="b8c7e-172">Qualquer expressão numérica.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-172">Any numeric expression.</span></span></param>
        <param name="o2"><span data-ttu-id="b8c7e-173">Necessário.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-173">Required.</span></span> <span data-ttu-id="b8c7e-174">Qualquer expressão numérica.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-174">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="b8c7e-175">Executa uma operação de multiplicação (\*).</span><span class="sxs-lookup"><span data-stu-id="b8c7e-175">Performs a multiplication (\*) operation.</span></span></summary>
        <returns><span data-ttu-id="b8c7e-176">O produto de <paramref name="o1" /> e <paramref name="o2" />.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-176">The product of <paramref name="o1" /> and <paramref name="o2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8c7e-177">Esta classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente no seu código.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-177">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="NegObj">
      <MemberSignature Language="C#" Value="public static object NegObj (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static object NegObj(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.NegObj(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NegObj (obj As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NegObj(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="b8c7e-178">Necessário.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-178">Required.</span></span> <span data-ttu-id="b8c7e-179">Qualquer expressão numérica.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-179">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="b8c7e-180">Executa uma operação de menos (–) unária.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-180">Performs a unary minus (–) operation.</span></span></summary>
        <returns><span data-ttu-id="b8c7e-181">O valor negativo de <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-181">The negative value of <paramref name="obj" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8c7e-182">Esta classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente no seu código.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-182">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="NotObj">
      <MemberSignature Language="C#" Value="public static object NotObj (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static object NotObj(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.NotObj(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NotObj (obj As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NotObj(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="b8c7e-183">Necessário.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-183">Required.</span></span> <span data-ttu-id="b8c7e-184">Qualquer <see langword="Boolean" /> ou expressão numérica.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-184">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="b8c7e-185">Executa uma operação de <see langword="Not" />.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-185">Performs a <see langword="Not" /> operation.</span></span></summary>
        <returns><span data-ttu-id="b8c7e-186">Para operações <see langword="Boolean" />, <see langword="False" /> se <paramref name="obj" /> for <see langword="True" />; caso contrário, <see langword="True" />.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-186">For <see langword="Boolean" /> operations, <see langword="False" /> if <paramref name="obj" /> is <see langword="True" />; otherwise, <see langword="True" />.</span></span> <span data-ttu-id="b8c7e-187">Para operações bit a bit, 1 se <paramref name="obj" /> for 0; caso contrário, 0.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-187">For bitwise operations, 1 if <paramref name="obj" /> is 0; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8c7e-188">Esta classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente no seu código.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-188">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ObjTst">
      <MemberSignature Language="C#" Value="public static int ObjTst (object o1, object o2, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 ObjTst(object o1, object o2, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ObjTst(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ObjTst (o1 As Object, o2 As Object, TextCompare As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ObjTst(System::Object ^ o1, System::Object ^ o2, bool TextCompare);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="b8c7e-189">Necessário.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-189">Required.</span></span> <span data-ttu-id="b8c7e-190">Qualquer expressão.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-190">Any expression.</span></span></param>
        <param name="o2"><span data-ttu-id="b8c7e-191">Necessário.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-191">Required.</span></span> <span data-ttu-id="b8c7e-192">Qualquer expressão.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-192">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="b8c7e-193">Necessário.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-193">Required.</span></span> <span data-ttu-id="b8c7e-194"><see langword="True" /> para executar uma comparação de cadeias de caracteres que diferencia maiúsculas de minúsculas; caso contrário, <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-194"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="b8c7e-195">Executa a comparação de cadeias de caracteres de texto ou binárias dados dois objetos.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-195">Performs binary or text string comparison when given two objects.</span></span></summary>
        <returns>
          <list type="table">
            <listheader>
              <term> <span data-ttu-id="b8c7e-196">Valor</span><span class="sxs-lookup"><span data-stu-id="b8c7e-196">Value</span></span>  
  
 </term>
              <description> <span data-ttu-id="b8c7e-197">Condição</span><span class="sxs-lookup"><span data-stu-id="b8c7e-197">Condition</span></span>  
  
 </description>
            </listheader>
            <item>
              <term> <span data-ttu-id="b8c7e-198">-1</span><span class="sxs-lookup"><span data-stu-id="b8c7e-198">-1</span></span>  
  
 </term>
              <description>
                <span data-ttu-id="b8c7e-199"><paramref name="o1" /> é menor que <paramref name="o2" />.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-199"><paramref name="o1" /> is less than <paramref name="o2" />.</span></span>  
  
 </description>
            </item>
            <item>
              <term> <span data-ttu-id="b8c7e-200">0</span><span class="sxs-lookup"><span data-stu-id="b8c7e-200">0</span></span>  
  
 </term>
              <description>
                <span data-ttu-id="b8c7e-201"><paramref name="o1" /> é igual a <paramref name="o2" />.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-201"><paramref name="o1" /> is equal to <paramref name="o2" />.</span></span>  
  
 </description>
            </item>
            <item>
              <term> <span data-ttu-id="b8c7e-202">1</span><span class="sxs-lookup"><span data-stu-id="b8c7e-202">1</span></span>  
  
 </term>
              <description>
                <span data-ttu-id="b8c7e-203"><paramref name="o1" /> é maior que <paramref name="o2" />.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-203"><paramref name="o1" /> is greater than <paramref name="o2" />.</span></span>  
  
 </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8c7e-204">Esta classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente no seu código.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-204">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="PlusObj">
      <MemberSignature Language="C#" Value="public static object PlusObj (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static object PlusObj(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.PlusObj(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PlusObj (obj As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ PlusObj(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="b8c7e-205">Necessário.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-205">Required.</span></span> <span data-ttu-id="b8c7e-206">Qualquer expressão numérica.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-206">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="b8c7e-207">Executa uma operação de mais (+) unária.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-207">Performs a unary plus (+) operation.</span></span></summary>
        <returns><span data-ttu-id="b8c7e-208">O valor de <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-208">The value of <paramref name="obj" />.</span></span> <span data-ttu-id="b8c7e-209">(O sinal do <paramref name="obj" /> permanece inalterado.)</span><span class="sxs-lookup"><span data-stu-id="b8c7e-209">(The sign of the <paramref name="obj" /> is unchanged.)</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8c7e-210">Esta classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente no seu código.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-210">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="PowObj">
      <MemberSignature Language="C#" Value="public static object PowObj (object obj1, object obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object PowObj(object obj1, object obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.PowObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PowObj (obj1 As Object, obj2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ PowObj(System::Object ^ obj1, System::Object ^ obj2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Object" />
        <Parameter Name="obj2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj1"><span data-ttu-id="b8c7e-211">Necessário.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-211">Required.</span></span> <span data-ttu-id="b8c7e-212">Qualquer expressão numérica.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-212">Any numeric expression.</span></span></param>
        <param name="obj2"><span data-ttu-id="b8c7e-213">Necessário.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-213">Required.</span></span> <span data-ttu-id="b8c7e-214">Qualquer expressão numérica.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-214">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="b8c7e-215">Executa uma operação de expoente (^).</span><span class="sxs-lookup"><span data-stu-id="b8c7e-215">Performs an exponent (^) operation.</span></span></summary>
        <returns><span data-ttu-id="b8c7e-216">O resultado de <paramref name="obj1" /> elevado à potência de <paramref name="obj2" />.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-216">The result of <paramref name="obj1" /> raised to the power of <paramref name="obj2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8c7e-217">Esta classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente no seu código.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-217">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ShiftLeftObj">
      <MemberSignature Language="C#" Value="public static object ShiftLeftObj (object o1, int amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ShiftLeftObj(object o1, int32 amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftLeftObj(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShiftLeftObj (o1 As Object, amount As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ShiftLeftObj(System::Object ^ o1, int amount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="amount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="b8c7e-218">Necessário.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-218">Required.</span></span> <span data-ttu-id="b8c7e-219">Expressão numérica integral.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-219">Integral numeric expression.</span></span> <span data-ttu-id="b8c7e-220">O padrão de bit a ser deslocado.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-220">The bit pattern to be shifted.</span></span> <span data-ttu-id="b8c7e-221">O tipo de dados deve ser um tipo integral (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> ou <see langword="ULong" />).</span><span class="sxs-lookup"><span data-stu-id="b8c7e-221">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span></span></param>
        <param name="amount"><span data-ttu-id="b8c7e-222">Necessário.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-222">Required.</span></span> <span data-ttu-id="b8c7e-223">Expressão numérica.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-223">Numeric expression.</span></span> <span data-ttu-id="b8c7e-224">O número de bits para deslocar o padrão de bit.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-224">The number of bits to shift the bit pattern.</span></span> <span data-ttu-id="b8c7e-225">O tipo de dados deve ser <see langword="Integer" /> ou ampliado para <see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-225">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span></span></param>
        <summary><span data-ttu-id="b8c7e-226">Executa uma operação de deslocamento aritmético para a esquerda (&lt;&lt;).</span><span class="sxs-lookup"><span data-stu-id="b8c7e-226">Performs an arithmetic left shift (&lt;&lt;) operation.</span></span></summary>
        <returns><span data-ttu-id="b8c7e-227">Um valor numérico integral.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-227">An integral numeric value.</span></span> <span data-ttu-id="b8c7e-228">O resultado do deslocamento do padrão de bit.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-228">The result of shifting the bit pattern.</span></span> <span data-ttu-id="b8c7e-229">O tipo de dados é o mesmo que o de <paramref name="o1" />.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-229">The data type is the same as that of <paramref name="o1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8c7e-230">Esta classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente no seu código.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-230">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ShiftRightObj">
      <MemberSignature Language="C#" Value="public static object ShiftRightObj (object o1, int amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ShiftRightObj(object o1, int32 amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftRightObj(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShiftRightObj (o1 As Object, amount As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ShiftRightObj(System::Object ^ o1, int amount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="amount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="b8c7e-231">Necessário.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-231">Required.</span></span> <span data-ttu-id="b8c7e-232">Expressão numérica integral.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-232">Integral numeric expression.</span></span> <span data-ttu-id="b8c7e-233">O padrão de bit a ser deslocado.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-233">The bit pattern to be shifted.</span></span> <span data-ttu-id="b8c7e-234">O tipo de dados deve ser um tipo integral (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> ou <see langword="ULong" />).</span><span class="sxs-lookup"><span data-stu-id="b8c7e-234">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span></span></param>
        <param name="amount"><span data-ttu-id="b8c7e-235">Necessário.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-235">Required.</span></span> <span data-ttu-id="b8c7e-236">Expressão numérica.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-236">Numeric expression.</span></span> <span data-ttu-id="b8c7e-237">O número de bits para deslocar o padrão de bit.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-237">The number of bits to shift the bit pattern.</span></span> <span data-ttu-id="b8c7e-238">O tipo de dados deve ser <see langword="Integer" /> ou ampliado para <see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-238">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span></span></param>
        <summary><span data-ttu-id="b8c7e-239">Executa uma operação de deslocamento aritmético para a direita (&gt;&gt;).</span><span class="sxs-lookup"><span data-stu-id="b8c7e-239">Performs an arithmetic right shift (&gt;&gt;) operation.</span></span></summary>
        <returns><span data-ttu-id="b8c7e-240">Um valor numérico integral.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-240">An integral numeric value.</span></span> <span data-ttu-id="b8c7e-241">O resultado do deslocamento do padrão de bit.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-241">The result of shifting the bit pattern.</span></span> <span data-ttu-id="b8c7e-242">O tipo de dados é o mesmo que o de <paramref name="o1" />.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-242">The data type is the same as that of <paramref name="o1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8c7e-243">Esta classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente no seu código.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-243">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="StrCatObj">
      <MemberSignature Language="C#" Value="public static object StrCatObj (object vLeft, object vRight);" />
      <MemberSignature Language="ILAsm" Value=".method public static object StrCatObj(object vLeft, object vRight) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.StrCatObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StrCatObj (vLeft As Object, vRight As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ StrCatObj(System::Object ^ vLeft, System::Object ^ vRight);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vLeft" Type="System.Object" />
        <Parameter Name="vRight" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="vLeft"><span data-ttu-id="b8c7e-244">Necessário.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-244">Required.</span></span> <span data-ttu-id="b8c7e-245">Qualquer expressão.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-245">Any expression.</span></span></param>
        <param name="vRight"><span data-ttu-id="b8c7e-246">Necessário.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-246">Required.</span></span> <span data-ttu-id="b8c7e-247">Qualquer expressão.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-247">Any expression.</span></span></param>
        <summary><span data-ttu-id="b8c7e-248">Executa uma operação de concatenação de cadeias de caracteres (&amp;).</span><span class="sxs-lookup"><span data-stu-id="b8c7e-248">Performs a string concatenation (&amp;) operation.</span></span></summary>
        <returns><span data-ttu-id="b8c7e-249">Uma cadeia de caracteres que representa a concatenação de <paramref name="vLeft" /> e <paramref name="vRight" />.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-249">A string representing the concatenation of <paramref name="vLeft" /> and <paramref name="vRight" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8c7e-250">Esta classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente no seu código.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-250">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="SubObj">
      <MemberSignature Language="C#" Value="public static object SubObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object SubObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.SubObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ SubObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="b8c7e-251">Necessário.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-251">Required.</span></span> <span data-ttu-id="b8c7e-252">Qualquer expressão numérica.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-252">Any numeric expression.</span></span></param>
        <param name="o2"><span data-ttu-id="b8c7e-253">Necessário.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-253">Required.</span></span> <span data-ttu-id="b8c7e-254">Qualquer expressão numérica.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-254">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="b8c7e-255">Executa uma operação de subtração (–).</span><span class="sxs-lookup"><span data-stu-id="b8c7e-255">Performs a subtraction (–) operation.</span></span></summary>
        <returns><span data-ttu-id="b8c7e-256">A diferença entre <paramref name="o1" /> e <paramref name="o2" />.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-256">The difference between <paramref name="o1" /> and <paramref name="o2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8c7e-257">Esta classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente no seu código.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-257">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="XorObj">
      <MemberSignature Language="C#" Value="public static object XorObj (object obj1, object obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object XorObj(object obj1, object obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.XorObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function XorObj (obj1 As Object, obj2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ XorObj(System::Object ^ obj1, System::Object ^ obj2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Object" />
        <Parameter Name="obj2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj1"><span data-ttu-id="b8c7e-258">Necessário.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-258">Required.</span></span> <span data-ttu-id="b8c7e-259">Qualquer <see langword="Boolean" /> ou expressão numérica.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-259">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="obj2"><span data-ttu-id="b8c7e-260">Necessário.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-260">Required.</span></span> <span data-ttu-id="b8c7e-261">Qualquer <see langword="Boolean" /> ou expressão numérica.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-261">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="b8c7e-262">Executa uma comparação de <see langword="Xor" />.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-262">Performs an <see langword="Xor" /> comparison.</span></span></summary>
        <returns><span data-ttu-id="b8c7e-263">Um <see langword="Boolean" /> ou valor numérico.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-263">A <see langword="Boolean" /> or numeric value.</span></span> <span data-ttu-id="b8c7e-264">Para uma comparação <see langword="Boolean" />, o valor retornado é a exclusão lógica (disjunção lógica exclusiva) de dois valores <see langword="Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-264">For a <see langword="Boolean" /> comparison, the return value is the logical exclusion (exclusive logical disjunction) of two <see langword="Boolean" /> values.</span></span> <span data-ttu-id="b8c7e-265">Para operações bit a bit (numéricas), o valor retornado é um valor numérico que representa a exclusão bit a bit (disjunção bit a bit exclusiva) dos dois padrões numéricos de bits.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-265">For bitwise (numeric) operations, the return value is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns.</span></span> <span data-ttu-id="b8c7e-266">Para obter mais informações, consulte [Operador Xor](~/docs/visual-basic/language-reference/operators/xor-operator.md).</span><span class="sxs-lookup"><span data-stu-id="b8c7e-266">For more information, see [Xor Operator](~/docs/visual-basic/language-reference/operators/xor-operator.md).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8c7e-267">Esta classe dá suporte ao compilador do Visual Basic e não se destina a ser usado diretamente no seu código.</span><span class="sxs-lookup"><span data-stu-id="b8c7e-267">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>