<Type Name="OracleDataAdapter" FullName="System.Data.OracleClient.OracleDataAdapter">
  <TypeSignature Language="C#" Value="public sealed class OracleDataAdapter : System.Data.Common.DbDataAdapter, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OracleDataAdapter extends System.Data.Common.DbDataAdapter implements class System.Data.IDataAdapter, class System.Data.IDbDataAdapter, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OracleDataAdapter&#xA;Inherits DbDataAdapter&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OracleDataAdapter sealed : System::Data::Common::DbDataAdapter, ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbDataAdapter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("RowUpdated")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OracleDataAdapterDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.OracleDataAdapterToolboxItem, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("OracleDataAdapter has been deprecated. http://go.microsoft.com/fwlink/?LinkID=144260", false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="89963-101">Representa um conjunto de comandos de dados e uma conexão a um banco de dados usados para preencher o <see cref="T:System.Data.DataSet" /> e atualizar o banco de dados.</span><span class="sxs-lookup"><span data-stu-id="89963-101">Represents a set of data commands and a connection to a database that are used to fill the <see cref="T:System.Data.DataSet" /> and update the database.</span></span> <span data-ttu-id="89963-102">Essa classe não pode ser herdada.</span><span class="sxs-lookup"><span data-stu-id="89963-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89963-103">Esse tipo foi substituído e será removido em uma versão futura do .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="89963-103">This type is deprecated and will be removed in a future version of the .NET Framework.</span></span> <span data-ttu-id="89963-104">Para obter mais informações, consulte [Oracle e ADO.NET](~/docs/framework/data/adonet/oracle-and-adonet.md).</span><span class="sxs-lookup"><span data-stu-id="89963-104">For more information, see [Oracle and ADO.NET](~/docs/framework/data/adonet/oracle-and-adonet.md).</span></span>  
  
 <span data-ttu-id="89963-105">O <xref:System.Data.OracleClient.OracleDataAdapter> atua como uma ponte entre uma **DataSet** e banco de dados para recuperar e salvar dados.</span><span class="sxs-lookup"><span data-stu-id="89963-105">The <xref:System.Data.OracleClient.OracleDataAdapter> serves as a bridge between a **DataSet** and database for retrieving and saving data.</span></span> <span data-ttu-id="89963-106">O <xref:System.Data.OracleClient.OracleDataAdapter> fornece essa ponte usando <xref:System.Data.Common.DbDataAdapter.Fill%2A> para carregar dados do banco de dados para o <xref:System.Data.DataSet>e usando <xref:System.Data.Common.DbDataAdapter.Update%2A> para enviar as alterações feitas no <xref:System.Data.DataSet> volta para a fonte de dados.</span><span class="sxs-lookup"><span data-stu-id="89963-106">The <xref:System.Data.OracleClient.OracleDataAdapter> provides this bridge by using <xref:System.Data.Common.DbDataAdapter.Fill%2A> to load data from the database into the <xref:System.Data.DataSet>, and using <xref:System.Data.Common.DbDataAdapter.Update%2A> to send changes made in the <xref:System.Data.DataSet> back to the data source.</span></span>  
  
 <span data-ttu-id="89963-107">Quando o <xref:System.Data.OracleClient.OracleDataAdapter> preenche um <xref:System.Data.DataSet>, ele cria as tabelas necessárias e as colunas para os dados retornados se eles ainda não existir.</span><span class="sxs-lookup"><span data-stu-id="89963-107">When the <xref:System.Data.OracleClient.OracleDataAdapter> fills a <xref:System.Data.DataSet>, it creates the necessary tables and columns for the returned data if they do not already exist.</span></span> <span data-ttu-id="89963-108">No entanto, as informações de chave primária não estão incluídas no esquema criado implicitamente, a menos que o <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> está definida como <xref:System.Data.MissingSchemaAction.AddWithKey>.</span><span class="sxs-lookup"><span data-stu-id="89963-108">However, primary key information is not included in the implicitly created schema unless the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property is set to <xref:System.Data.MissingSchemaAction.AddWithKey>.</span></span> <span data-ttu-id="89963-109">Você também pode ter o <xref:System.Data.OracleClient.OracleDataAdapter> criar o esquema do <xref:System.Data.DataSet>, incluindo informações de chave primária, antes de preenchê-lo com dados usando <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>.</span><span class="sxs-lookup"><span data-stu-id="89963-109">You may also have the <xref:System.Data.OracleClient.OracleDataAdapter> create the schema of the <xref:System.Data.DataSet>, including primary key information, before filling it with data using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>.</span></span> <span data-ttu-id="89963-110">Para obter mais informações, consulte [adicionando restrições existentes para um conjunto de dados](~/docs/framework/data/adonet/adding-existing-constraints-to-a-dataset.md).</span><span class="sxs-lookup"><span data-stu-id="89963-110">For more information, see [Adding Existing Constraints to a DataSet](~/docs/framework/data/adonet/adding-existing-constraints-to-a-dataset.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="89963-111">Por padrão, os campos numéricos importado para um <xref:System.Data.DataTable> com <xref:System.Data.Common.DbDataAdapter.Fill%2A> são mapeados para <xref:System.Data.OracleClient.OracleNumber> objetos.</span><span class="sxs-lookup"><span data-stu-id="89963-111">By default, numeric fields imported to a <xref:System.Data.DataTable> with <xref:System.Data.Common.DbDataAdapter.Fill%2A> are mapped to <xref:System.Data.OracleClient.OracleNumber> objects.</span></span> <span data-ttu-id="89963-112">É possível estouro de <xref:System.Data.OracleClient.OracleNumber>e gerará uma exceção do Oracle, com a importação de um valor numérico não integral que é muito grande ou muito alta precisão para o <xref:System.Data.OracleClient.OracleNumber>do limitações de precisão.</span><span class="sxs-lookup"><span data-stu-id="89963-112">It is possible to overflow the <xref:System.Data.OracleClient.OracleNumber>, and throw an Oracle exception, by importing a non-integral numeric value that is either too large or too high precision for the <xref:System.Data.OracleClient.OracleNumber>'s precision limitations.</span></span> <span data-ttu-id="89963-113">Consulte a descrição de <xref:System.Data.OracleClient.OracleNumber> para obter mais informações.</span><span class="sxs-lookup"><span data-stu-id="89963-113">Refer to the description of <xref:System.Data.OracleClient.OracleNumber> for more information.</span></span>  
  
 <span data-ttu-id="89963-114">O <xref:System.Data.OracleClient.OracleDataAdapter> também inclui o <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A>, <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A>, <xref:System.Data.OracleClient.OracleDataAdapter.DeleteCommand%2A>, <xref:System.Data.OracleClient.OracleDataAdapter.UpdateCommand%2A>, e `TableMappings` propriedades para facilitar o carregamento e atualização de dados.</span><span class="sxs-lookup"><span data-stu-id="89963-114">The <xref:System.Data.OracleClient.OracleDataAdapter> also includes the <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A>, <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A>, <xref:System.Data.OracleClient.OracleDataAdapter.DeleteCommand%2A>, <xref:System.Data.OracleClient.OracleDataAdapter.UpdateCommand%2A>, and `TableMappings` properties to facilitate loading and updating of data.</span></span>  
  
 <span data-ttu-id="89963-115">O provedor de dados .NET Framework para Oracle não oferece suporte a instruções SQL em lote.</span><span class="sxs-lookup"><span data-stu-id="89963-115">The .NET Framework Data Provider for Oracle does not support batched SQL statements.</span></span> <span data-ttu-id="89963-116">No entanto, ele permite usar várias `REF CURSOR` saída parâmetros para preencher um **DataSet**, cada um em sua própria <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="89963-116">However, it does allow you to use multiple `REF CURSOR` output parameters to fill a **DataSet**, each in its own <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="89963-117">Você deve definir os parâmetros, marcá-los como parâmetros de saída e indicar que eles são `REF CURSOR` tipos de dados.</span><span class="sxs-lookup"><span data-stu-id="89963-117">You must define the parameters, mark them as output parameters, and indicate that they are `REF CURSOR` data types.</span></span> <span data-ttu-id="89963-118">Observe que você não pode usar o <xref:System.Data.Common.DbDataAdapter.Update%2A> método quando o <xref:System.Data.OracleClient.OracleDataAdapter> é preenchido usando `REF CURSOR` parâmetros retornados por um procedimento armazenado, pois Oracle não fornece as informações necessárias para determinar quais os nomes de tabela e nomes de coluna quando a instrução SQL é executada.</span><span class="sxs-lookup"><span data-stu-id="89963-118">Note that you cannot use the <xref:System.Data.Common.DbDataAdapter.Update%2A> method when the <xref:System.Data.OracleClient.OracleDataAdapter> is filled using `REF CURSOR` parameters returned by a stored procedure, because Oracle does not provide the information necessary to determine what the table name and column names are when the SQL statement is executed.</span></span> <span data-ttu-id="89963-119">O exemplo c# a seguir supõe que você criou esse procedimento armazenado.</span><span class="sxs-lookup"><span data-stu-id="89963-119">The following C# example assumes that you have created this stored procedure.</span></span>  
  
 <span data-ttu-id="89963-120">Crie o seguinte pacote Oracle no servidor Oracle.</span><span class="sxs-lookup"><span data-stu-id="89963-120">Create the following Oracle package on the Oracle server.</span></span>  
  
```  
CREATE OR REPLACE PACKAGE CURSPKG AS   
   TYPE T_CURSOR IS REF CURSOR;   
   PROCEDURE OPEN_ONE_CURSOR (N_EMPNO IN NUMBER,   
      IO_CURSOR OUT T_CURSOR);   
   PROCEDURE OPEN_TWO_CURSORS (EMPCURSOR OUT T_CURSOR,   
      DEPTCURSOR OUT T_CURSOR);  
END CURSPKG;  
/  
```  
  
 <span data-ttu-id="89963-121">Crie o seguinte corpo do pacote Oracle no servidor Oracle.</span><span class="sxs-lookup"><span data-stu-id="89963-121">Create the following Oracle package body on the Oracle server.</span></span>  
  
```  
CREATE OR REPLACE PACKAGE BODY CURSPKG AS   
    PROCEDURE OPEN_ONE_CURSOR (N_EMPNO IN NUMBER,   
                               IO_CURSOR OUT T_CURSOR)   
    IS   
        V_CURSOR T_CURSOR;   
    BEGIN   
        IF N_EMPNO <> 0 THEN   
             OPEN V_CURSOR FOR   
             SELECT EMP.EMPNO, EMP.ENAME, DEPT.DEPTNO, DEPT.DNAME   
                  FROM EMP, DEPT   
                  WHERE EMP.DEPTNO = DEPT.DEPTNO   
                        AND EMP.EMPNO = N_EMPNO;   
        ELSE   
             OPEN V_CURSOR FOR   
             SELECT EMP.EMPNO, EMP.ENAME, DEPT.DEPTNO, DEPT.DNAME   
                  FROM EMP, DEPT   
                  WHERE EMP.DEPTNO = DEPT.DEPTNO;   
        END IF;   
        IO_CURSOR := V_CURSOR;   
    END OPEN_ONE_CURSOR;   
    PROCEDURE OPEN_TWO_CURSORS (EMPCURSOR OUT T_CURSOR,   
                                DEPTCURSOR OUT T_CURSOR)   
    IS   
        V_CURSOR1 T_CURSOR;   
        V_CURSOR2 T_CURSOR;   
    BEGIN   
        OPEN V_CURSOR1 FOR SELECT * FROM EMP;   
        OPEN V_CURSOR2 FOR SELECT * FROM DEPT;   
        EMPCURSOR  := V_CURSOR1;   
        DEPTCURSOR := V_CURSOR2;   
    END OPEN_TWO_CURSORS;   
END CURSPKG;  
 /  
```  
  
 <span data-ttu-id="89963-122">O exemplo c# a seguir demonstra como você pode obter informações de tabela e coluna usando o procedimento armazenado.</span><span class="sxs-lookup"><span data-stu-id="89963-122">The following C# example demonstrates how you might obtain table and column information using the stored procedure.</span></span>  
  
```csharp  
// GetConnectionString() returns a connection string for  
// the data source.  
  
string connString = GetConnectionString();  
DataSet ds = new DataSet();  
OracleConnection conn = new OracleConnection(connString);  
OracleCommand cmd = conn.CreateCommand();  
  
cmd.CommandText = "CURSPKG.OPEN_TWO_CURSORS";  
cmd.CommandType = CommandType.StoredProcedure;  
cmd.Parameters.Add("EMPCURSOR", OracleType.Cursor).Direction =   
       ParameterDirection.Output;  
cmd.Parameters.Add("DEPTCURSOR", OracleType.Cursor).Direction =   
       ParameterDirection.Output;  
  
OracleDataAdapter da = new OracleDataAdapter(cmd);  
da.TableMappings.Add("Table", "Emp");  
da.TableMappings.Add("Table1", "Dept");  
da.Fill(ds);  
  
ds.Relations.Add("EmpDept", ds.Tables["Dept"].Columns["Deptno"],   
      ds.Tables["Emp"].Columns["Deptno"], false);  
```  
  
 <span data-ttu-id="89963-123">O exemplo de Visual Basic a seguir demonstra como usar um <xref:System.Data.OracleClient.OracleDataAdapter> para preencher um <xref:System.Data.DataSet> usando um Oracle `REF CURSOR`.</span><span class="sxs-lookup"><span data-stu-id="89963-123">The following Visual Basic example demonstrates how to use an <xref:System.Data.OracleClient.OracleDataAdapter> to fill a <xref:System.Data.DataSet> using an Oracle `REF CURSOR`.</span></span> <span data-ttu-id="89963-124">Esses exemplos usam tabelas que são definidas no esquema do Oracle Scott/Tiger e exigem o seguinte pacote PL/SQL e o corpo de pacote.</span><span class="sxs-lookup"><span data-stu-id="89963-124">These examples use tables that are defined in the Oracle Scott/Tiger schema, and require the following PL/SQL package and package body.</span></span> <span data-ttu-id="89963-125">Você deve criá-los em seu servidor para usar os exemplos.</span><span class="sxs-lookup"><span data-stu-id="89963-125">You must create these on your server to use the examples.</span></span>  
  
 <span data-ttu-id="89963-126">Crie o seguinte pacote Oracle no servidor Oracle.</span><span class="sxs-lookup"><span data-stu-id="89963-126">Create the following Oracle package on the Oracle server.</span></span>  
  
```  
CREATE OR REPLACE PACKAGE CURSPKG AS   
   TYPE T_CURSOR IS REF CURSOR;   
   PROCEDURE OPEN_ONE_CURSOR (N_EMPNO IN NUMBER,   
      IO_CURSOR OUT T_CURSOR);   
   PROCEDURE OPEN_TWO_CURSORS (EMPCURSOR OUT T_CURSOR,   
      DEPTCURSOR OUT T_CURSOR);  
END CURSPKG;  
/  
```  
  
 <span data-ttu-id="89963-127">Crie o seguinte corpo do pacote Oracle no servidor Oracle.</span><span class="sxs-lookup"><span data-stu-id="89963-127">Create the following Oracle package body on the Oracle server.</span></span>  
  
``` 
CREATE OR REPLACE PACKAGE BODY CURSPKG AS   
    PROCEDURE OPEN_ONE_CURSOR (N_EMPNO IN NUMBER,   
                               IO_CURSOR OUT T_CURSOR)   
    IS   
        V_CURSOR T_CURSOR;   
    BEGIN   
        IF N_EMPNO <> 0 THEN   
             OPEN V_CURSOR FOR   
             SELECT EMP.EMPNO, EMP.ENAME, DEPT.DEPTNO, DEPT.DNAME   
                  FROM EMP, DEPT   
                  WHERE EMP.DEPTNO = DEPT.DEPTNO   
                        AND EMP.EMPNO = N_EMPNO;   
        ELSE   
             OPEN V_CURSOR FOR   
             SELECT EMP.EMPNO, EMP.ENAME, DEPT.DEPTNO, DEPT.DNAME   
                  FROM EMP, DEPT   
                  WHERE EMP.DEPTNO = DEPT.DEPTNO;   
        END IF;   
        IO_CURSOR := V_CURSOR;   
    END OPEN_ONE_CURSOR;   
    PROCEDURE OPEN_TWO_CURSORS (EMPCURSOR OUT T_CURSOR,   
                                DEPTCURSOR OUT T_CURSOR)   
    IS   
        V_CURSOR1 T_CURSOR;   
        V_CURSOR2 T_CURSOR;   
    BEGIN   
        OPEN V_CURSOR1 FOR SELECT * FROM EMP;   
        OPEN V_CURSOR2 FOR SELECT * FROM DEPT;   
        EMPCURSOR  := V_CURSOR1;   
        DEPTCURSOR := V_CURSOR2;   
    END OPEN_TWO_CURSORS;   
END CURSPKG;  
 /  
```  
  
 <span data-ttu-id="89963-128">Este exemplo do Visual Basic executa um procedimento armazenado PL/SQL que retorna dois `REF CURSOR` parâmetros e preenche uma <xref:System.Data.DataSet> com as linhas que são retornadas.</span><span class="sxs-lookup"><span data-stu-id="89963-128">This Visual Basic example executes a PL/SQL stored procedure that returns two `REF CURSOR` parameters, and fills a <xref:System.Data.DataSet> with the rows that are returned.</span></span>  
  
```vb  
  
' GetConnectionString() returns a connection string for  
' the data source.  
  
    Dim connString As New String(GetConnectionString())  
    Dim ds As New DataSet()  
    Dim conn As New OracleConnection(connString)  
    Dim cmd As OracleCommand = conn.CreateCommand()  
  
    cmd.CommandText = "CURSPKG.OPEN_TWO_CURSORS"  
    cmd.CommandType = CommandType.StoredProcedure  
    cmd.Parameters.Add("EMPCURSOR", OracleType.Cursor).Direction = _  
       ParameterDirection.Output  
    cmd.Parameters.Add("DEPTCURSOR", OracleType.Cursor).Direction = _  
       ParameterDirection.Output  
  
    Dim da As New OracleDataAdapter(cmd)  
    da.TableMappings.Add("Table", "Emp")  
    da.TableMappings.Add("Table1", "Dept")  
    da.Fill(ds)  
  
    ds.Relations.Add("EmpDept", ds.Tables("Dept").Columns("Deptno"), _  
      ds.Tables("Emp").Columns("Deptno"), False)  
```  
  
 <span data-ttu-id="89963-129">Depois de usar o <xref:System.Data.OracleClient.OracleDataAdapter> para executar um `Fill` ou `FillSchema` operação, o `DataColumn.ReadOnly` propriedade sempre retorna false, independentemente se uma coluna pode ser atualizada ou não, porque o servidor Oracle não retorna essas informações.</span><span class="sxs-lookup"><span data-stu-id="89963-129">After using the <xref:System.Data.OracleClient.OracleDataAdapter> to perform a `Fill` or `FillSchema` operation, the `DataColumn.ReadOnly` property always returns false, regardless of whether a column can be updated or not, because the Oracle server does not return this information.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="89963-130">Inicializa uma nova instância da classe <see cref="T:System.Data.OracleClient.OracleDataAdapter" />.</span><span class="sxs-lookup"><span data-stu-id="89963-130">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleDataAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleDataAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="89963-131">Inicializa uma nova instância da classe <see cref="T:System.Data.OracleClient.OracleDataAdapter" />.</span><span class="sxs-lookup"><span data-stu-id="89963-131">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89963-132">Quando você cria uma instância de <xref:System.Data.OracleClient.OracleDataAdapter>, as seguintes propriedades de leitura/gravação são definidas para seus valores padrão, conforme mostrado na tabela.</span><span class="sxs-lookup"><span data-stu-id="89963-132">When you create an instance of <xref:System.Data.OracleClient.OracleDataAdapter>, the following read/write properties are set to their default values, as shown in the table.</span></span>  
  
|<span data-ttu-id="89963-133">Propriedades</span><span class="sxs-lookup"><span data-stu-id="89963-133">Properties</span></span>|<span data-ttu-id="89963-134">Valor padrão</span><span class="sxs-lookup"><span data-stu-id="89963-134">Default value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 <span data-ttu-id="89963-135">Você pode alterar o valor de qualquer uma dessas propriedades por meio de uma chamada separada para a propriedade.</span><span class="sxs-lookup"><span data-stu-id="89963-135">You can change the value of any of these properties through a separate call to the property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="89963-136">O exemplo a seguir cria um <xref:System.Data.OracleClient.OracleDataAdapter> e define algumas de suas propriedades.</span><span class="sxs-lookup"><span data-stu-id="89963-136">The following example creates an <xref:System.Data.OracleClient.OracleDataAdapter> and sets some of its properties.</span></span>  
  
```vb  
Public Sub CreateOracleDataAdapter()  
    Dim myOracleConnection As OracleConnection = New OracleConnection("Data Source=Oracle8i;Integrated Security=yes")  
    Dim custDA As OracleDataAdapter = New OracleDataAdapter  
    custDA.MissingSchemaAction = MissingSchemaAction.AddWithKey  
  
    custDA.SelectCommand = New OracleCommand("SELECT DeptNo, DName FROM Dept", myOracleConnection)  
    custDA.InsertCommand = New OracleCommand("INSERT INTO Dept (DeptNo, DName) " & _  
                                            "VALUES (:pDeptNo, :pDName)", myOracleConnection)  
    custDA.UpdateCommand = New OracleCommand("UPDATE Dept SET DeptNo = :pDeptNo, DName = :pDName " & _  
                                            "WHERE DeptNo = :pDeptNo", myOracleConnection)  
    custDA.DeleteCommand = New OracleCommand("DELETE FROM Dept WHERE DeptNo = :pDeptNo", myOracleConnection)  
  
    custDA.InsertCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo")  
    custDA.InsertCommand.Parameters.Add("pDName", OracleType.VarChar, 14, "DName")  
  
    custDA.UpdateCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo")  
    custDA.UpdateCommand.Parameters.Add("pDName", OracleType.VarChar, 14, "DName")  
    custDA.UpdateCommand.Parameters.Add("poldDeptNo", OracleType.Number, 2, "DeptNo").SourceVersion = DataRowVersion.Original  
  
    custDA.DeleteCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo").SourceVersion = DataRowVersion.Original  
End Sub  
```  
  
```csharp  
public static void CreateOracleDataAdapter()   
{  
    OracleConnection myOracleConnection = new OracleConnection("Data Source=Oracle8i;Integrated Security=yes");  
    OracleDataAdapter custDA = new OracleDataAdapter();  
    custDA.MissingSchemaAction = MissingSchemaAction.AddWithKey;  
  
    custDA.SelectCommand = new OracleCommand("SELECT DeptNo, CompanyName FROM Dept", myOracleConnection);  
    custDA.InsertCommand = new OracleCommand("INSERT INTO Dept (DeptNo, CompanyName) " +  
                                            "VALUES (:pDeptNo, :pCompanyName)", myOracleConnection);  
    custDA.UpdateCommand = new OracleCommand("UPDATE Dept SET DeptNo = :pDeptNo, CompanyName = :pCompanyName " +  
                                            "WHERE DeptNo = :pDeptNo", myOracleConnection);  
    custDA.DeleteCommand = new OracleCommand("DELETE FROM Dept WHERE DeptNo = :pDeptNo", myOracleConnection);  
  
    custDA.InsertCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo");  
    custDA.InsertCommand.Parameters.Add("pCompanyName", OracleType.VarChar, 14, "CompanyName");  
  
    custDA.UpdateCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo");  
    custDA.UpdateCommand.Parameters.Add("pCompanyName", OracleType.VarChar, 14, "CompanyName");  
    custDA.UpdateCommand.Parameters.Add("poldDeptNo", OracleType.Number, 2, "DeptNo").SourceVersion = DataRowVersion.Original;  
  
    custDA.DeleteCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo").SourceVersion = DataRowVersion.Original;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleDataAdapter (System.Data.OracleClient.OracleCommand selectCommand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.OracleClient.OracleCommand selectCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataAdapter.#ctor(System.Data.OracleClient.OracleCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selectCommand As OracleCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleDataAdapter(System::Data::OracleClient::OracleCommand ^ selectCommand);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommand" Type="System.Data.OracleClient.OracleCommand" />
      </Parameters>
      <Docs>
        <param name="selectCommand"><span data-ttu-id="89963-137">Um <see cref="T:System.Data.OracleClient.OracleCommand" /> que é uma instrução SQL SELECT ou um procedimento armazenado e é definida como a propriedade <see cref="P:System.Data.OracleClient.OracleDataAdapter.SelectCommand" /> do <see cref="T:System.Data.OracleClient.OracleDataAdapter" />.</span><span class="sxs-lookup"><span data-stu-id="89963-137">An <see cref="T:System.Data.OracleClient.OracleCommand" /> that is an SQL SELECT statement or stored procedure, and is set as the <see cref="P:System.Data.OracleClient.OracleDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.OracleClient.OracleDataAdapter" />.</span></span></param>
        <summary><span data-ttu-id="89963-138">Inicializa uma nova instância da classe <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> com a instrução SQL SELECT especificada.</span><span class="sxs-lookup"><span data-stu-id="89963-138">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> class with the specified SQL SELECT statement.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89963-139">Essa implementação do <xref:System.Data.OracleClient.OracleDataAdapter> construtor define o <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> propriedade para o valor especificado no `selectCommand` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="89963-139">This implementation of the <xref:System.Data.OracleClient.OracleDataAdapter> constructor sets the <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> property to the value specified in the `selectCommand` parameter.</span></span>  
  
 <span data-ttu-id="89963-140">Quando você cria uma instância de <xref:System.Data.OracleClient.OracleDataAdapter>, as seguintes propriedades de leitura/gravação são definidas para seus valores padrão, conforme mostrado na tabela.</span><span class="sxs-lookup"><span data-stu-id="89963-140">When you create an instance of <xref:System.Data.OracleClient.OracleDataAdapter>, the following read/write properties are set to their default values, as shown in the table.</span></span>  
  
|<span data-ttu-id="89963-141">Propriedades</span><span class="sxs-lookup"><span data-stu-id="89963-141">Properties</span></span>|<span data-ttu-id="89963-142">Valor inicial</span><span class="sxs-lookup"><span data-stu-id="89963-142">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 <span data-ttu-id="89963-143">Você pode alterar o valor de qualquer uma dessas propriedades por meio de uma chamada separada para a propriedade.</span><span class="sxs-lookup"><span data-stu-id="89963-143">You can change the value of any of these properties through a separate call to the property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="89963-144">O exemplo a seguir cria um <xref:System.Data.OracleClient.OracleDataAdapter> e define algumas de suas propriedades.</span><span class="sxs-lookup"><span data-stu-id="89963-144">The following example creates an <xref:System.Data.OracleClient.OracleDataAdapter> and sets some of its properties.</span></span>  
  
```vb  
Public Sub CreateOracleDataAdapter()  
    Dim myOracleConnection As OracleConnection = New OracleConnection("Data Source=Oracle8i;Integrated Security=yes")  
    Dim myOracleCommand As OracleCommand = New OracleCommand("SELECT DeptNo, DName FROM Dept", myOracleConnection)  
    Dim custDA As OracleDataAdapter = New OracleDataAdapter(myOracleCommand)  
    custDA.MissingSchemaAction = MissingSchemaAction.AddWithKey  
  
    custDA.InsertCommand = New OracleCommand("INSERT INTO Dept (DeptNo, DName) " & _  
                                            "VALUES (:pDeptNo, :pDName)", myOracleConnection)  
    custDA.UpdateCommand = New OracleCommand("UPDATE Dept SET DeptNo = :pDeptNo, DName = :pDName " & _  
                                            "WHERE DeptNo = :pDeptNo", myOracleConnection)  
    custDA.DeleteCommand = New OracleCommand("DELETE FROM Dept WHERE DeptNo = :pDeptNo", myOracleConnection)  
  
    custDA.InsertCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo")  
    custDA.InsertCommand.Parameters.Add("pDName", OracleType.VarChar, 14, "DName")  
  
    custDA.UpdateCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo")  
    custDA.UpdateCommand.Parameters.Add("pDName", OracleType.VarChar, 14, "DName")  
    custDA.UpdateCommand.Parameters.Add("poldDeptNo", OracleType.Number, 2, "DeptNo").SourceVersion = DataRowVersion.Original  
  
    custDA.DeleteCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo").SourceVersion = DataRowVersion.Original  
End Sub  
```  
  
```csharp  
public static void CreateOracleDataAdapter()   
{  
    OracleConnection myOracleConnection = new OracleConnection("Data Source=Oracle8i;Integrated Security=yes");  
    OracleCommand myOracleCommand = new OracleCommand("SELECT DeptNo, DName FROM Dept", myOracleConnection);  
    OracleDataAdapter custDA = new OracleDataAdapter(myOracleCommand);  
    custDA.MissingSchemaAction = MissingSchemaAction.AddWithKey;  
  
    custDA.InsertCommand = new OracleCommand("INSERT INTO Dept (DeptNo, DName) " +  
                                            "VALUES (:pDeptNo, :pDName)", myOracleConnection);  
    custDA.UpdateCommand = new OracleCommand("UPDATE Dept SET DeptNo = :pDeptNo, DName = :pDName " +  
                                            "WHERE DeptNo = :pDeptNo", myOracleConnection);  
    custDA.DeleteCommand = new OracleCommand("DELETE FROM Dept WHERE DeptNo = :pDeptNo", myOracleConnection);  
  
    custDA.InsertCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo");  
    custDA.InsertCommand.Parameters.Add("pDName", OracleType.VarChar, 14, "DName");  
  
    custDA.UpdateCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo");  
    custDA.UpdateCommand.Parameters.Add("pDName", OracleType.VarChar, 14, "DName");  
    custDA.UpdateCommand.Parameters.Add("poldDeptNo", OracleType.Number, 2, "DeptNo").SourceVersion = DataRowVersion.Original;  
  
    custDA.DeleteCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo").SourceVersion = DataRowVersion.Original;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleDataAdapter (string selectCommandText, System.Data.OracleClient.OracleConnection selectConnection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string selectCommandText, class System.Data.OracleClient.OracleConnection selectConnection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataAdapter.#ctor(System.String,System.Data.OracleClient.OracleConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selectCommandText As String, selectConnection As OracleConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleDataAdapter(System::String ^ selectCommandText, System::Data::OracleClient::OracleConnection ^ selectConnection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommandText" Type="System.String" />
        <Parameter Name="selectConnection" Type="System.Data.OracleClient.OracleConnection" />
      </Parameters>
      <Docs>
        <param name="selectCommandText"><span data-ttu-id="89963-145">Uma cadeia de caracteres que é uma instrução SQL SELECT ou um procedimento armazenado a ser usado pela propriedade de <see cref="P:System.Data.OracleClient.OracleDataAdapter.SelectCommand" /> do <see cref="T:System.Data.OracleClient.OracleDataAdapter" />.</span><span class="sxs-lookup"><span data-stu-id="89963-145">A string that is an SQL SELECT statement or stored procedure to be used by the <see cref="P:System.Data.OracleClient.OracleDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.OracleClient.OracleDataAdapter" />.</span></span></param>
        <param name="selectConnection"><span data-ttu-id="89963-146">Um <see cref="T:System.Data.OracleClient.OracleConnection" /> que representa a conexão.</span><span class="sxs-lookup"><span data-stu-id="89963-146">An <see cref="T:System.Data.OracleClient.OracleConnection" /> that represents the connection.</span></span></param>
        <summary><span data-ttu-id="89963-147">Inicializa uma nova instância da classe <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> com a instrução SQL SELECT e um <see cref="T:System.Data.OracleClient.OracleConnection" />.</span><span class="sxs-lookup"><span data-stu-id="89963-147">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> class with an SQL SELECT statement and an <see cref="T:System.Data.OracleClient.OracleConnection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89963-148">Essa implementação do <xref:System.Data.OracleClient.OracleDataAdapter> pode ser útil em um aplicativo que deve chamar o `Fill` método para dois ou mais <xref:System.Data.OracleClient.OracleDataAdapter> objetos.</span><span class="sxs-lookup"><span data-stu-id="89963-148">This implementation of the <xref:System.Data.OracleClient.OracleDataAdapter> can be useful in an application that must call the `Fill` method for two or more <xref:System.Data.OracleClient.OracleDataAdapter> objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="89963-149">O exemplo a seguir cria um <xref:System.Data.OracleClient.OracleDataAdapter> e define algumas de suas propriedades.</span><span class="sxs-lookup"><span data-stu-id="89963-149">The following example creates an <xref:System.Data.OracleClient.OracleDataAdapter> and sets some of its properties.</span></span>  
  
```vb  
Public Sub CreateOracleDataAdapter()  
    Dim myOracleConnection As OracleConnection = New OracleConnection("Data Source=Oracle8i;Integrated Security=yes")  
    Dim mySelectText As String = "SELECT DeptNo, DName FROM Dept"  
    Dim custDA As OracleDataAdapter = New OracleDataAdapter(mySelectText, myOracleConnection)   
    custDA.MissingSchemaAction = MissingSchemaAction.AddWithKey  
  
    custDA.InsertCommand = New OracleCommand("INSERT INTO Dept (DeptNo, DName) " & _  
                                            "VALUES (:pDeptNo, :pDName)", myOracleConnection)  
    custDA.UpdateCommand = New OracleCommand("UPDATE Dept SET DeptNo = :pDeptNo, DName = :pDName " & _  
                                            "WHERE DeptNo = :pDeptNo", myOracleConnection)  
    custDA.DeleteCommand = New OracleCommand("DELETE FROM Dept WHERE DeptNo = :pDeptNo", myOracleConnection)  
  
    custDA.InsertCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo")  
    custDA.InsertCommand.Parameters.Add("pDName", OracleType.VarChar, 14, "DName")  
  
    custDA.UpdateCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo")  
    custDA.UpdateCommand.Parameters.Add("pDName", OracleType.VarChar, 14, "DName")  
    custDA.UpdateCommand.Parameters.Add("poldDeptNo", OracleType.Number, 2, "DeptNo").SourceVersion = DataRowVersion.Original  
  
    custDA.DeleteCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo").SourceVersion = DataRowVersion.Original  
End Sub  
```  
  
```csharp  
public static void CreateOracleDataAdapter()   
{  
    OracleConnection myOracleConnection = new OracleConnection("Data Source=Oracle8i;Integrated Security=yes");  
  
    string mySelectText = "SELECT DeptNo, DName FROM Dept";  
  
    OracleDataAdapter custDA = new OracleDataAdapter(mySelectText, myOracleConnection );  
    custDA.MissingSchemaAction = MissingSchemaAction.AddWithKey;  
  
    custDA.InsertCommand = new OracleCommand("INSERT INTO Dept (DeptNo, DName) " +  
                                            "VALUES (:pDeptNo, :pDName)", myOracleConnection);  
    custDA.UpdateCommand = new OracleCommand("UPDATE Dept SET DeptNo = :pDeptNo, DName = :pDName " +  
                                            "WHERE DeptNo = :pDeptNo", myOracleConnection);  
    custDA.DeleteCommand = new OracleCommand("DELETE FROM Dept WHERE DeptNo = :pDeptNo", myOracleConnection);  
  
    custDA.InsertCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo");  
    custDA.InsertCommand.Parameters.Add("pDName", OracleType.VarChar, 14, "DName");  
  
    custDA.UpdateCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo");  
    custDA.UpdateCommand.Parameters.Add("pDName", OracleType.VarChar, 14, "DName");  
    custDA.UpdateCommand.Parameters.Add("poldDeptNo", OracleType.Number, 2, "DeptNo").SourceVersion = DataRowVersion.Original;  
  
    custDA.DeleteCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo").SourceVersion = DataRowVersion.Original;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleDataAdapter (string selectCommandText, string selectConnectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string selectCommandText, string selectConnectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataAdapter.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selectCommandText As String, selectConnectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleDataAdapter(System::String ^ selectCommandText, System::String ^ selectConnectionString);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommandText" Type="System.String" />
        <Parameter Name="selectConnectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="selectCommandText"><span data-ttu-id="89963-150">Uma cadeia de caracteres que é uma instrução SQL SELECT ou um procedimento armazenado a ser usado pela propriedade de <see cref="P:System.Data.OracleClient.OracleDataAdapter.SelectCommand" /> do <see cref="T:System.Data.OracleClient.OracleDataAdapter" />.</span><span class="sxs-lookup"><span data-stu-id="89963-150">A string that is an SQL SELECT statement or stored procedure to be used by the <see cref="P:System.Data.OracleClient.OracleDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.OracleClient.OracleDataAdapter" />.</span></span></param>
        <param name="selectConnectionString"><span data-ttu-id="89963-151">A cadeia de conexão.</span><span class="sxs-lookup"><span data-stu-id="89963-151">The connection string.</span></span></param>
        <summary><span data-ttu-id="89963-152">Inicializa uma nova instância da classe <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> com uma instrução SQL SELECT e uma cadeia de conexão.</span><span class="sxs-lookup"><span data-stu-id="89963-152">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> class with an SQL SELECT statement and a connection string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="89963-153">O exemplo a seguir cria um <xref:System.Data.OracleClient.OracleDataAdapter> e define algumas de suas propriedades.</span><span class="sxs-lookup"><span data-stu-id="89963-153">The following example creates an <xref:System.Data.OracleClient.OracleDataAdapter> and sets some of its properties.</span></span>  
  
```vb  
Public Sub CreateOracleDataAdapter()  
    Dim myConnectionText As String = "Data Source=Oracle8i;Integrated Security=yes"  
    Dim mySelectText As String = "SELECT DeptNo, DName FROM Dept"  
    Dim custDA As OracleDataAdapter = New OracleDataAdapter(mySelectText, myConnectionText )   
    Dim myOracleConnection As OracleConnection = custDA.SelectCommand.Connection  
  
    custDA.MissingSchemaAction = MissingSchemaAction.AddWithKey     
  
    custDA.InsertCommand = New OracleCommand("INSERT INTO Dept (DeptNo, DName) " & _  
                                            "VALUES (:pDeptNo, :pDName)", myOracleConnection)  
    custDA.UpdateCommand = New OracleCommand("UPDATE Dept SET DeptNo = :pDeptNo, DName = :pDName " & _  
                                            "WHERE DeptNo = :pDeptNo", myOracleConnection)  
    custDA.DeleteCommand = New OracleCommand("DELETE FROM Dept WHERE DeptNo = :pDeptNo", myOracleConnection)  
  
    custDA.InsertCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo")  
    custDA.InsertCommand.Parameters.Add("pDName", OracleType.VarChar, 14, "DName")  
  
    custDA.UpdateCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo")  
    custDA.UpdateCommand.Parameters.Add("pDName", OracleType.VarChar, 14, "DName")  
    custDA.UpdateCommand.Parameters.Add("poldDeptNo", OracleType.Number, 2, "DeptNo").SourceVersion = DataRowVersion.Original  
  
    custDA.DeleteCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo").SourceVersion = DataRowVersion.Original  
End Sub  
```  
  
```csharp  
public static void CreateOracleDataAdapter()   
{  
    string myConnectionText = "Data Source=Oracle8i;Integrated Security=yes";  
  
    string mySelectText = "SELECT DeptNo, DName FROM Dept";  
  
    OracleDataAdapter custDA = new OracleDataAdapter(mySelectText, myConnectionText );  
   OracleConnection myOracleConnection = custDA.SelectCommand.Connection;  
  
    custDA.MissingSchemaAction = MissingSchemaAction.AddWithKey;  
  
    custDA.InsertCommand = new OracleCommand("INSERT INTO Dept (DeptNo, DName) " +  
                                            "VALUES (:pDeptNo, :pDName)", myOracleConnection);  
    custDA.UpdateCommand = new OracleCommand("UPDATE Dept SET DeptNo = :pDeptNo, DName = :pDName " +  
                                            "WHERE DeptNo = :pDeptNo", myOracleConnection);  
    custDA.DeleteCommand = new OracleCommand("DELETE FROM Dept WHERE DeptNo = :pDeptNo", myOracleConnection);  
  
    custDA.InsertCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo");  
    custDA.InsertCommand.Parameters.Add("pDName", OracleType.VarChar, 14, "DName");  
  
    custDA.UpdateCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo");  
    custDA.UpdateCommand.Parameters.Add("pDName", OracleType.VarChar, 14, "DName");  
    custDA.UpdateCommand.Parameters.Add("poldDeptNo", OracleType.Number, 2, "DeptNo").SourceVersion = DataRowVersion.Original;  
  
    custDA.DeleteCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo").SourceVersion = DataRowVersion.Original;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToBatch">
      <MemberSignature Language="C#" Value="protected override int AddToBatch (System.Data.IDbCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 AddToBatch(class System.Data.IDbCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataAdapter.AddToBatch(System.Data.IDbCommand)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function AddToBatch (command As IDbCommand) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int AddToBatch(System::Data::IDbCommand ^ command);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.IDbCommand" />
      </Parameters>
      <Docs>
        <param name="command">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearBatch">
      <MemberSignature Language="C#" Value="protected override void ClearBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ClearBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataAdapter.ClearBatch" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ClearBatch ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ClearBatch();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatedEvent">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::RowUpdatedEventArgs ^ CreateRowUpdatedEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatedEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow">To be added.</param>
        <param name="command">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="tableMapping">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatingEvent">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::RowUpdatingEventArgs ^ CreateRowUpdatingEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatingEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow">To be added.</param>
        <param name="command">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="tableMapping">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleDataAdapter.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleCommand ^ DeleteCommand { System::Data::OracleClient::OracleCommand ^ get(); void set(System::Data::OracleClient::OracleCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="89963-154">Obtém ou define uma instrução SQL ou um procedimento armazenado usado para excluir registros no banco de dados.</span><span class="sxs-lookup"><span data-stu-id="89963-154">Gets or sets an SQL statement or stored procedure used to delete records in the database.</span></span></summary>
        <value><span data-ttu-id="89963-155">Um <see cref="T:System.Data.OracleClient.OracleCommand" /> usado durante uma operação de atualização para excluir registros no banco de dados que correspondem às linhas excluídas no <see langword="DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="89963-155">An <see cref="T:System.Data.OracleClient.OracleCommand" /> used during an update operation to delete records in the database that correspond to deleted rows in the <see langword="DataSet" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89963-156">Quando o <xref:System.Data.OracleClient.OracleDataAdapter.DeleteCommand%2A> propriedade é atribuída para criado anteriormente <xref:System.Data.OracleClient.OracleCommand>, o <xref:System.Data.OracleClient.OracleCommand> não for clonado.</span><span class="sxs-lookup"><span data-stu-id="89963-156">When the <xref:System.Data.OracleClient.OracleDataAdapter.DeleteCommand%2A> property is assigned to a previously created <xref:System.Data.OracleClient.OracleCommand>, the <xref:System.Data.OracleClient.OracleCommand> is not cloned.</span></span> <span data-ttu-id="89963-157">Em vez disso, o <xref:System.Data.OracleClient.OracleDataAdapter.DeleteCommand%2A> mantém uma referência para criado anteriormente <xref:System.Data.OracleClient.OracleCommand>.</span><span class="sxs-lookup"><span data-stu-id="89963-157">Instead, the <xref:System.Data.OracleClient.OracleDataAdapter.DeleteCommand%2A> maintains a reference to the previously created <xref:System.Data.OracleClient.OracleCommand>.</span></span>  
  
 <span data-ttu-id="89963-158">Durante uma operação de atualização, se <xref:System.Data.OracleClient.OracleDataAdapter.DeleteCommand%2A> não está definida e a chave primária informações estão presentes no <xref:System.Data.DataSet>, você pode usar o <xref:System.Data.OracleClient.OracleCommandBuilder> classe para gerar automaticamente o <xref:System.Data.OracleClient.OracleDataAdapter.DeleteCommand%2A>e comandos adicionais necessários para reconciliar o <xref:System.Data.DataSet> no banco de dados.</span><span class="sxs-lookup"><span data-stu-id="89963-158">During an update operation, if <xref:System.Data.OracleClient.OracleDataAdapter.DeleteCommand%2A> is not set and primary key information is present in the <xref:System.Data.DataSet>, you can use the <xref:System.Data.OracleClient.OracleCommandBuilder> class to automatically generate the <xref:System.Data.OracleClient.OracleDataAdapter.DeleteCommand%2A>, and additional commands needed to reconcile the <xref:System.Data.DataSet> to the database.</span></span> <span data-ttu-id="89963-159">Para fazer isso, defina o <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> propriedade o <xref:System.Data.OracleClient.OracleDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="89963-159">To do this, set the <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> property of the <xref:System.Data.OracleClient.OracleDataAdapter>.</span></span> <span data-ttu-id="89963-160">A lógica de geração também exige informações de coluna de chave no <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="89963-160">The generation logic also requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="89963-161">Para obter mais informações, consulte [gerar comandos com CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span><span class="sxs-lookup"><span data-stu-id="89963-161">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="89963-162">O exemplo a seguir cria um <xref:System.Data.OracleClient.OracleDataAdapter> e define o <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> e <xref:System.Data.OracleClient.OracleDataAdapter.DeleteCommand%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="89963-162">The following example creates an <xref:System.Data.OracleClient.OracleDataAdapter> and sets the <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> and <xref:System.Data.OracleClient.OracleDataAdapter.DeleteCommand%2A> properties.</span></span> <span data-ttu-id="89963-163">Ele pressupõe que você já tiver criado um <xref:System.Data.OracleClient.OracleConnection> objeto.</span><span class="sxs-lookup"><span data-stu-id="89963-163">It assumes you have already created an <xref:System.Data.OracleClient.OracleConnection> object.</span></span>  
  
```vb  
Public Shared Function CreateCustomerAdapter(conn As OracleConnection) As OracleDataAdapter   
  
  Dim da As OracleDataAdapter = New OracleDataAdapter()  
  Dim cmd As OracleCommand  
  Dim parm As OracleParameter  
  
  ' Create the SelectCommand.  
  
  cmd = New OracleCommand("SELECT * FROM Dept " & _  
                       "WHERE DName = :pDName AND Loc = :pLoc", conn)  
  
  cmd.Parameters.Add("pDName", OracleType.NVarChar, 14)  
  cmd.Parameters.Add("pLoc", OracleType.NVarChar, 13)  
  
  da.SelectCommand = cmd  
  
  ' Create the DeleteCommand.  
  
  cmd = New OracleCommand("DELETE FROM Dept WHERE DeptNo = :pDeptNo", conn)  
  
  parm = cmd.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo")  
  parm.SourceVersion = DataRowVersion.Original  
  
  da.DeleteCommand = cmd  
  
  Return da  
End Function  
```  
  
```csharp  
public static OracleDataAdapter CreateCustomerAdapter(OracleConnection conn)  
{  
  OracleDataAdapter da = new OracleDataAdapter();  
  OracleCommand cmd;  
  OracleParameter parm;  
  
  // Create the SelectCommand.  
  
  cmd = new OracleCommand("SELECT * FROM Dept " +  
                       "WHERE DName = :pDName AND Loc = :pLoc", conn);  
  
  cmd.Parameters.Add("pDName", OracleType.NVarChar, 14);  
  cmd.Parameters.Add("pLoc", OracleType.NVarChar, 13);  
  
  da.SelectCommand = cmd;  
  
  // Create the DeleteCommand.  
  
  cmd = new OracleCommand("DELETE FROM Dept WHERE DeptNo = :pDeptNo", conn);  
  
  parm = cmd.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo");  
  parm.SourceVersion = DataRowVersion.Original;  
  
  da.DeleteCommand = cmd;  
  
  return da;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteBatch">
      <MemberSignature Language="C#" Value="protected override int ExecuteBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataAdapter.ExecuteBatch" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteBatch () As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteBatch();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBatchedParameter">
      <MemberSignature Language="C#" Value="protected override System.Data.IDataParameter GetBatchedParameter (int commandIdentifier, int parameterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.IDataParameter GetBatchedParameter(int32 commandIdentifier, int32 parameterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataAdapter.GetBatchedParameter(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetBatchedParameter (commandIdentifier As Integer, parameterIndex As Integer) As IDataParameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::IDataParameter ^ GetBatchedParameter(int commandIdentifier, int parameterIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandIdentifier" Type="System.Int32" />
        <Parameter Name="parameterIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="commandIdentifier">To be added.</param>
        <param name="parameterIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBatchedRecordsAffected">
      <MemberSignature Language="C#" Value="protected override bool GetBatchedRecordsAffected (int commandIdentifier, out int recordsAffected, out Exception error);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool GetBatchedRecordsAffected(int32 commandIdentifier, [out] int32&amp; recordsAffected, [out] class System.Exception&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetBatchedRecordsAffected (commandIdentifier As Integer, ByRef recordsAffected As Integer, ByRef error As Exception) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool GetBatchedRecordsAffected(int commandIdentifier, [Runtime::InteropServices::Out] int % recordsAffected, [Runtime::InteropServices::Out] Exception ^ % error);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandIdentifier" Type="System.Int32" />
        <Parameter Name="recordsAffected" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="error" Type="System.Exception&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="commandIdentifier">To be added.</param>
        <param name="recordsAffected">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeBatching">
      <MemberSignature Language="C#" Value="protected override void InitializeBatching ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializeBatching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataAdapter.InitializeBatching" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializeBatching ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializeBatching();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleDataAdapter.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleCommand ^ InsertCommand { System::Data::OracleClient::OracleCommand ^ get(); void set(System::Data::OracleClient::OracleCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="89963-164">Obtém ou define uma instrução SQL ou um procedimento armazenado usado para inserir novos registros no banco de dados.</span><span class="sxs-lookup"><span data-stu-id="89963-164">Gets or sets an SQL statement or stored procedure used to insert new records into the database.</span></span></summary>
        <value><span data-ttu-id="89963-165">Um <see cref="T:System.Data.OracleClient.OracleCommand" /> usado durante uma operação de atualização para inserir registros no banco de dados que corresponde às novas linhas no <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="89963-165">An <see cref="T:System.Data.OracleClient.OracleCommand" /> used during an update operation to insert records in the database that correspond to new rows in the <see cref="T:System.Data.DataSet" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89963-166">Quando o <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A> propriedade é atribuída para criado anteriormente <xref:System.Data.OracleClient.OracleCommand> objeto, o <xref:System.Data.OracleClient.OracleCommand> não for clonado.</span><span class="sxs-lookup"><span data-stu-id="89963-166">When the <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A> property is assigned to a previously created <xref:System.Data.OracleClient.OracleCommand> object, the <xref:System.Data.OracleClient.OracleCommand> is not cloned.</span></span> <span data-ttu-id="89963-167">Em vez disso, <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A> mantém uma referência para criado anteriormente <xref:System.Data.OracleClient.OracleCommand>.</span><span class="sxs-lookup"><span data-stu-id="89963-167">Instead, <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A> maintains a reference to the previously created <xref:System.Data.OracleClient.OracleCommand>.</span></span>  
  
 <span data-ttu-id="89963-168">Durante uma operação de atualização, se <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A> não está definida e a chave primária informações estão presentes no <xref:System.Data.DataSet>, você pode usar o <xref:System.Data.OracleClient.OracleCommandBuilder> classe para gerar automaticamente <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A>e comandos adicionais necessários para reconciliar o <xref:System.Data.DataSet> no banco de dados.</span><span class="sxs-lookup"><span data-stu-id="89963-168">During an update operation, if <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A> is not set and primary key information is present in the <xref:System.Data.DataSet>, you can use the <xref:System.Data.OracleClient.OracleCommandBuilder> class to automatically generate <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A>, and additional commands needed to reconcile the <xref:System.Data.DataSet> to the database.</span></span> <span data-ttu-id="89963-169">Para fazer isso, defina o <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> propriedade o <xref:System.Data.OracleClient.OracleDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="89963-169">To do this, set the <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> property of the <xref:System.Data.OracleClient.OracleDataAdapter>.</span></span> <span data-ttu-id="89963-170">A lógica de geração também exige informações de coluna de chave no <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="89963-170">The generation logic also requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="89963-171">Para obter mais informações, consulte [gerar comandos com CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span><span class="sxs-lookup"><span data-stu-id="89963-171">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="89963-172">Se a execução desse comando retorna linhas, essas linhas podem ser adicionadas para o <xref:System.Data.DataSet> , dependendo do modo como você definir o <xref:System.Data.OracleClient.OracleCommand.UpdatedRowSource%2A> propriedade do <xref:System.Data.OracleClient.OracleCommand> objeto.</span><span class="sxs-lookup"><span data-stu-id="89963-172">If execution of this command returns rows, these rows may be added to the <xref:System.Data.DataSet> depending upon how you set the <xref:System.Data.OracleClient.OracleCommand.UpdatedRowSource%2A> property of the <xref:System.Data.OracleClient.OracleCommand> object.</span></span>  
  
 <span data-ttu-id="89963-173">Quando você atualiza uma coluna com o `LONG RAW` tipo de dados, uma exceção é gerada quando você inserir um valor de `NULL` na coluna.</span><span class="sxs-lookup"><span data-stu-id="89963-173">When you update a column with the `LONG RAW` data type, an exception is thrown when you enter a value of `NULL` in the column.</span></span> <span data-ttu-id="89963-174">O Oracle `LONG RAW` tipo de dados é um tipo preterido na versão 8.0 do Oracle.</span><span class="sxs-lookup"><span data-stu-id="89963-174">The Oracle `LONG RAW` data type is a deprecated type in Oracle version 8.0.</span></span> <span data-ttu-id="89963-175">Para evitar esse erro, use o `BLOB` de tipo de dados em vez de `LONG RAW`.</span><span class="sxs-lookup"><span data-stu-id="89963-175">To avoid this error, use the `BLOB` data type instead of `LONG RAW`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="89963-176">O exemplo a seguir cria um <xref:System.Data.OracleClient.OracleDataAdapter> e define o <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> e <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="89963-176">The following example creates an <xref:System.Data.OracleClient.OracleDataAdapter> and sets the <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> and <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A> properties.</span></span> <span data-ttu-id="89963-177">Ele pressupõe que você já tiver criado um <xref:System.Data.OracleClient.OracleConnection> objeto.</span><span class="sxs-lookup"><span data-stu-id="89963-177">It assumes you have already created an <xref:System.Data.OracleClient.OracleConnection> object.</span></span>  
  
```vb  
Public Shared Function CreateCustomerAdapter(conn As OracleConnection) As OracleDataAdapter   
  
  Dim da As OracleDataAdapter = New OracleDataAdapter()  
  Dim cmd As OracleCommand  
  
  ' Create the SelectCommand.  
  
  cmd = New OracleCommand("SELECT * FROM Dept " & _  
                       "WHERE DName = :pDName AND Loc = :pLoc", conn)  
  
  cmd.Parameters.Add("pDName", OracleType.NVarChar, 14)  
  cmd.Parameters.Add("pLoc", OracleType.NVarChar, 13)  
  
  da.SelectCommand = cmd  
  
  ' Create the InsertCommand.  
  
  cmd = New OracleCommand("INSERT INTO Dept (DeptNo, DName) " & _  
                       "VALUES (:pDeptNo, :pDName)", conn)  
  
  cmd.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo")  
  cmd.Parameters.Add("pDName", OracleType.NVarChar, 14, "DName")  
  
  da.InsertCommand = cmd  
  
  Return da  
End Function  
```  
  
```csharp  
public static OracleDataAdapter CreateCustomerAdapter(OracleConnection conn)  
{  
  OracleDataAdapter da = new OracleDataAdapter();  
  OracleCommand cmd;  
  
  // Create the SelectCommand.  
  
  cmd = new OracleCommand("SELECT * FROM Dept " +  
                       "WHERE DName = :pDName AND Loc = :pLoc", conn);  
  
  cmd.Parameters.Add("pDName", OracleType.NVarChar, 14);  
  cmd.Parameters.Add("pLoc", OracleType.NVarChar, 13);  
  
  da.SelectCommand = cmd;  
  
  // Create the InsertCommand.  
  
  cmd = new OracleCommand("INSERT INTO Dept (DeptNo, DName) " +  
                       "VALUES (:pDeptNo, :pDName)", conn);  
  
  cmd.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo");  
  cmd.Parameters.Add("pDName", OracleType.NVarChar, 14, "DName");  
  
  da.InsertCommand = cmd;  
  
  return da;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdated">
      <MemberSignature Language="C#" Value="protected override void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRowUpdated(class System.Data.Common.RowUpdatedEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRowUpdated (value As RowUpdatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRowUpdated(System::Data::Common::RowUpdatedEventArgs ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdating">
      <MemberSignature Language="C#" Value="protected override void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRowUpdating(class System.Data.Common.RowUpdatingEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRowUpdating (value As RowUpdatingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRowUpdating(System::Data::Common::RowUpdatingEventArgs ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowUpdated">
      <MemberSignature Language="C#" Value="public event System.Data.OracleClient.OracleRowUpdatedEventHandler RowUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.OracleClient.OracleRowUpdatedEventHandler RowUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Data.OracleClient.OracleDataAdapter.RowUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowUpdated As OracleRowUpdatedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::OracleClient::OracleRowUpdatedEventHandler ^ RowUpdated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleRowUpdatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="89963-178">Ocorre durante uma operação de atualização, após um comando ser executado no banco de dados.</span><span class="sxs-lookup"><span data-stu-id="89963-178">Occurs during an update operation after a command is executed against the database.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89963-179">Ao usar o `Update` método, há dois eventos que ocorrem por linha de dados atualizada.</span><span class="sxs-lookup"><span data-stu-id="89963-179">When using the `Update` method, there are two events that occur per data row updated.</span></span> <span data-ttu-id="89963-180">A ordem de execução é o seguinte:</span><span class="sxs-lookup"><span data-stu-id="89963-180">The order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="89963-181">Os valores no <xref:System.Data.DataRow> são movidos para os valores de parâmetro.</span><span class="sxs-lookup"><span data-stu-id="89963-181">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="89963-182">O `OnRowUpdating` é gerado.</span><span class="sxs-lookup"><span data-stu-id="89963-182">The `OnRowUpdating` event is raised.</span></span>  
  
3.  <span data-ttu-id="89963-183">O comando é executado.</span><span class="sxs-lookup"><span data-stu-id="89963-183">The command executes.</span></span>  
  
4.  <span data-ttu-id="89963-184">Se o `UpdateRowSource` enumeração está definida como `FirstReturnedRecord`, a primeira retornou o resultado é colocado no **DataRow**.</span><span class="sxs-lookup"><span data-stu-id="89963-184">If the `UpdateRowSource` enumeration is set to `FirstReturnedRecord`, the first returned result is placed in the **DataRow**.</span></span>  
  
5.  <span data-ttu-id="89963-185">Se não houver parâmetros de saída, eles são colocados no **DataRow**.</span><span class="sxs-lookup"><span data-stu-id="89963-185">If there are output parameters, they are placed in the **DataRow**.</span></span>  
  
6.  <span data-ttu-id="89963-186">O `OnRowUpdated` é gerado.</span><span class="sxs-lookup"><span data-stu-id="89963-186">The `OnRowUpdated` event is raised.</span></span>  
  
7.  <span data-ttu-id="89963-187">`AcceptChanges` é chamado.</span><span class="sxs-lookup"><span data-stu-id="89963-187">`AcceptChanges` is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowUpdating">
      <MemberSignature Language="C#" Value="public event System.Data.OracleClient.OracleRowUpdatingEventHandler RowUpdating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.OracleClient.OracleRowUpdatingEventHandler RowUpdating" />
      <MemberSignature Language="DocId" Value="E:System.Data.OracleClient.OracleDataAdapter.RowUpdating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowUpdating As OracleRowUpdatingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::OracleClient::OracleRowUpdatingEventHandler ^ RowUpdating;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleRowUpdatingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="89963-188">Ocorre durante o <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />, após um comando ser executado com relação à fonte de dados.</span><span class="sxs-lookup"><span data-stu-id="89963-188">Occurs during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> before a command is executed against the data source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89963-189">Ao usar o `Update` método, há dois eventos que ocorrem por linha de dados atualizada.</span><span class="sxs-lookup"><span data-stu-id="89963-189">When using the `Update` method, there are two events that occur per data row updated.</span></span> <span data-ttu-id="89963-190">A ordem de execução é o seguinte:</span><span class="sxs-lookup"><span data-stu-id="89963-190">The order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="89963-191">Os valores no <xref:System.Data.DataRow> são movidos para os valores de parâmetro.</span><span class="sxs-lookup"><span data-stu-id="89963-191">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="89963-192">O `OnRowUpdating` é gerado.</span><span class="sxs-lookup"><span data-stu-id="89963-192">The `OnRowUpdating` event is raised.</span></span>  
  
3.  <span data-ttu-id="89963-193">O comando é executado.</span><span class="sxs-lookup"><span data-stu-id="89963-193">The command executes.</span></span>  
  
4.  <span data-ttu-id="89963-194">Se o `UpdateRowSource` enumeração está definida como `FirstReturnedRecord`, a primeira retornou o resultado é colocado no **DataRow**.</span><span class="sxs-lookup"><span data-stu-id="89963-194">If the `UpdateRowSource` enumeration is set to `FirstReturnedRecord`, the first returned result is placed in the **DataRow**.</span></span>  
  
5.  <span data-ttu-id="89963-195">Se não houver parâmetros de saída, eles são colocados no **DataRow**.</span><span class="sxs-lookup"><span data-stu-id="89963-195">If there are output parameters, they are placed in the **DataRow**.</span></span>  
  
6.  <span data-ttu-id="89963-196">O `OnRowUpdated` é gerado.</span><span class="sxs-lookup"><span data-stu-id="89963-196">The `OnRowUpdated` event is raised.</span></span>  
  
7.  <span data-ttu-id="89963-197">`AcceptChanges` é chamado.</span><span class="sxs-lookup"><span data-stu-id="89963-197">`AcceptChanges` is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleDataAdapter.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleCommand ^ SelectCommand { System::Data::OracleClient::OracleCommand ^ get(); void set(System::Data::OracleClient::OracleCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="89963-198">Obtém ou define uma instrução SQL ou um procedimento armazenado usado para selecionar registros no banco de dados.</span><span class="sxs-lookup"><span data-stu-id="89963-198">Gets or sets an SQL statement or stored procedure used to select records in the database.</span></span></summary>
        <value><span data-ttu-id="89963-199">Um <see cref="T:System.Data.OracleClient.OracleCommand" /> que é usado durante a operação de preenchimento para selecionar registros do banco de dados para posicionamento no <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="89963-199">An <see cref="T:System.Data.OracleClient.OracleCommand" /> that is used during a fill operation to select records from database for placement in the <see cref="T:System.Data.DataSet" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89963-200">Quando <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> é atribuído a um criado anteriormente <xref:System.Data.OracleClient.OracleCommand>, o <xref:System.Data.OracleClient.OracleCommand> não for clonado.</span><span class="sxs-lookup"><span data-stu-id="89963-200">When <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> is assigned to a previously created <xref:System.Data.OracleClient.OracleCommand>, the <xref:System.Data.OracleClient.OracleCommand> is not cloned.</span></span> <span data-ttu-id="89963-201">Em vez disso, o <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> mantém uma referência para criado anteriormente <xref:System.Data.OracleClient.OracleCommand> objeto.</span><span class="sxs-lookup"><span data-stu-id="89963-201">Instead, the <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> maintains a reference to the previously created <xref:System.Data.OracleClient.OracleCommand> object.</span></span>  
  
 <span data-ttu-id="89963-202">Se <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> não retornar linhas, não há tabelas são adicionadas ao **conjunto de dados**, e nenhuma exceção é gerada.</span><span class="sxs-lookup"><span data-stu-id="89963-202">If <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> does not return any rows, no tables are added to the **DataSet**, and no exception is raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="89963-203">O exemplo a seguir cria um <xref:System.Data.OracleClient.OracleDataAdapter> e define o <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> e <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="89963-203">The following example creates an <xref:System.Data.OracleClient.OracleDataAdapter> and sets the <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> and <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A> properties.</span></span> <span data-ttu-id="89963-204">Ele pressupõe que você já tiver criado um <xref:System.Data.OracleClient.OracleConnection> objeto.</span><span class="sxs-lookup"><span data-stu-id="89963-204">It assumes you have already created an <xref:System.Data.OracleClient.OracleConnection> object.</span></span>  
  
```vb  
Public Shared Function CreateCustomerAdapter(conn As OracleConnection) As OracleDataAdapter   
  
  Dim da As OracleDataAdapter = New OracleDataAdapter()  
  Dim cmd As OracleCommand  
  
  ' Create the SelectCommand.  
  
  cmd = New OracleCommand("SELECT * FROM Dept " & _  
                       "WHERE DName = :pDName AND Loc = :pLoc", conn)  
  
  cmd.Parameters.Add("pDName", OracleType.NVarChar, 14)  
  cmd.Parameters.Add("pLoc", OracleType.NVarChar, 13)  
  
  da.SelectCommand = cmd  
  
  ' Create the InsertCommand.  
  
  cmd = New OracleCommand("INSERT INTO Dept (DeptNo, DName) " & _  
                       "VALUES (pDeptNo, pDName)", conn)  
  
  cmd.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo")  
  cmd.Parameters.Add("pDName", OracleType.NVarChar, 14, "DName")  
  
  da.InsertCommand = cmd  
  
  Return da  
End Function  
```  
  
```csharp  
public static OracleDataAdapter CreateCustomerAdapter(OracleConnection conn)  
{  
  OracleDataAdapter da = new OracleDataAdapter();  
  OracleCommand cmd;  
  
  // Create the SelectCommand.  
  
  cmd = new OracleCommand("SELECT * FROM Dept " +  
                       "WHERE DName = :pDName AND Loc = :pLoc", conn);  
  
  cmd.Parameters.Add("pDName", OracleType.NVarChar, 14);  
  cmd.Parameters.Add("pLoc", OracleType.NVarChar, 13);  
  
  da.SelectCommand = cmd;  
  
  // Create the InsertCommand.  
  
  cmd = new OracleCommand("INSERT INTO Dept (DeptNo, DName) " +  
                       "VALUES (:pDeptNo, :pDName)", conn);  
  
  cmd.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo");  
  cmd.Parameters.Add("pDName", OracleType.NVarChar, 14, "DName");  
  
  da.InsertCommand = cmd;  
  
  return da;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.DeleteCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#DeleteCommand" />
      <MemberSignature Language="VB.NET" Value=" Property DeleteCommand As IDbCommand Implements IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.DeleteCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.DeleteCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="89963-205">Para obter uma descrição desse membro, consulte <see cref="P:System.Data.IDbDataAdapter.DeleteCommand" />.</span><span class="sxs-lookup"><span data-stu-id="89963-205">For a description of this member, see <see cref="P:System.Data.IDbDataAdapter.DeleteCommand" />.</span></span></summary>
        <value><span data-ttu-id="89963-206">Uma cadeia de caracteres que representa o comando.</span><span class="sxs-lookup"><span data-stu-id="89963-206">A string representing the command.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89963-207">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="89963-207">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="89963-208">Ele só pode ser usado quando a instância de <xref:System.Data.OracleClient.OracleDataAdapter> é convertida em uma interface de <xref:System.Data.IDbDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="89963-208">It can be used only when the <xref:System.Data.OracleClient.OracleDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.InsertCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#InsertCommand" />
      <MemberSignature Language="VB.NET" Value=" Property InsertCommand As IDbCommand Implements IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.InsertCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.InsertCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="89963-209">Para obter uma descrição desse membro, consulte <see cref="P:System.Data.IDbDataAdapter.InsertCommand" />.</span><span class="sxs-lookup"><span data-stu-id="89963-209">For a description of this member, see <see cref="P:System.Data.IDbDataAdapter.InsertCommand" />.</span></span></summary>
        <value><span data-ttu-id="89963-210">Uma cadeia de caracteres que representa o comando.</span><span class="sxs-lookup"><span data-stu-id="89963-210">A string representing the command.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89963-211">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="89963-211">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="89963-212">Ele só pode ser usado quando a instância de <xref:System.Data.OracleClient.OracleDataAdapter> é convertida em uma interface de <xref:System.Data.IDbDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="89963-212">It can be used only when the <xref:System.Data.OracleClient.OracleDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.SelectCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#SelectCommand" />
      <MemberSignature Language="VB.NET" Value=" Property SelectCommand As IDbCommand Implements IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.SelectCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.SelectCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="89963-213">Para obter uma descrição desse membro, consulte <see cref="P:System.Data.IDbDataAdapter.SelectCommand" />.</span><span class="sxs-lookup"><span data-stu-id="89963-213">For a description of this member, see <see cref="P:System.Data.IDbDataAdapter.SelectCommand" />.</span></span></summary>
        <value><span data-ttu-id="89963-214">Uma cadeia de caracteres que representa o comando.</span><span class="sxs-lookup"><span data-stu-id="89963-214">A string representing the command.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89963-215">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="89963-215">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="89963-216">Ele só pode ser usado quando a instância de <xref:System.Data.OracleClient.OracleDataAdapter> é convertida em uma interface de <xref:System.Data.IDbDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="89963-216">It can be used only when the <xref:System.Data.OracleClient.OracleDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.UpdateCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#UpdateCommand" />
      <MemberSignature Language="VB.NET" Value=" Property UpdateCommand As IDbCommand Implements IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.UpdateCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.UpdateCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="89963-217">Para obter uma descrição desse membro, consulte <see cref="P:System.Data.IDbDataAdapter.UpdateCommand" />.</span><span class="sxs-lookup"><span data-stu-id="89963-217">For a description of this member, see <see cref="P:System.Data.IDbDataAdapter.UpdateCommand" />.</span></span></summary>
        <value><span data-ttu-id="89963-218">Uma cadeia de caracteres que representa o comando.</span><span class="sxs-lookup"><span data-stu-id="89963-218">A string representing the command.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89963-219">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="89963-219">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="89963-220">Ele só pode ser usado quando a instância de <xref:System.Data.OracleClient.OracleDataAdapter> é convertida em uma interface de <xref:System.Data.IDbDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="89963-220">It can be used only when the <xref:System.Data.OracleClient.OracleDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataAdapter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="89963-221">Para obter uma descrição desse membro, consulte <see cref="M:System.ICloneable.Clone" />.</span><span class="sxs-lookup"><span data-stu-id="89963-221">For a description of this member, see <see cref="M:System.ICloneable.Clone" />.</span></span></summary>
        <returns><span data-ttu-id="89963-222">Um novo objeto que é uma cópia dessa instância.</span><span class="sxs-lookup"><span data-stu-id="89963-222">A new object that is a copy of this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89963-223">Este membro é uma implementação do membro de interface explícita.</span><span class="sxs-lookup"><span data-stu-id="89963-223">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="89963-224">Ele só pode ser usado quando a instância de <xref:System.Data.OracleClient.OracleDataAdapter> é convertida em uma interface de <xref:System.ICloneable>.</span><span class="sxs-lookup"><span data-stu-id="89963-224">It can be used only when the <xref:System.Data.OracleClient.OracleDataAdapter> instance is cast to an <xref:System.ICloneable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TerminateBatching">
      <MemberSignature Language="C#" Value="protected override void TerminateBatching ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TerminateBatching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataAdapter.TerminateBatching" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TerminateBatching ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TerminateBatching();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateBatchSize">
      <MemberSignature Language="C#" Value="public override int UpdateBatchSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UpdateBatchSize" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleDataAdapter.UpdateBatchSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property UpdateBatchSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int UpdateBatchSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="89963-225">Obtém ou define um valor que habilita ou desabilita o suporte ao processamento de lote e especifica o número de comandos que podem ser executadas em um lote.</span><span class="sxs-lookup"><span data-stu-id="89963-225">Gets or sets a value that enables or disables batch processing support, and specifies the number of commands that can be executed in a batch.</span></span></summary>
        <value><span data-ttu-id="89963-226">O número de linhas a serem processadas por lote.</span><span class="sxs-lookup"><span data-stu-id="89963-226">The number of rows to process per batch.</span></span>  
  
 <span data-ttu-id="89963-227"><list type="table"><listheader><term> Valor:</span><span class="sxs-lookup"><span data-stu-id="89963-227"><list type="table"><listheader><term> Value:</span></span>  
  
 <span data-ttu-id="89963-228"></term><description> Efeito:</span><span class="sxs-lookup"><span data-stu-id="89963-228"></term><description> Effect:</span></span>  
  
 <span data-ttu-id="89963-229"></description></listheader><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="89963-229"></description></listheader><item><term> 0</span></span>  
  
 <span data-ttu-id="89963-230"></term><description> Não há nenhum limite no tamanho do lote.</span><span class="sxs-lookup"><span data-stu-id="89963-230"></term><description> There is no limit on the batch size.</span></span>  
  
 <span data-ttu-id="89963-231"></description></item><item><term> 1</span><span class="sxs-lookup"><span data-stu-id="89963-231"></description></item><item><term> 1</span></span>  
  
 <span data-ttu-id="89963-232"></term><description> Desabilita a atualização em lotes.</span><span class="sxs-lookup"><span data-stu-id="89963-232"></term><description> Disables batch updating.</span></span>  
  
 <span data-ttu-id="89963-233"></description></item><item><term> &gt; 1</span><span class="sxs-lookup"><span data-stu-id="89963-233"></description></item><item><term> &gt; 1</span></span>  
  
 <span data-ttu-id="89963-234"></term><description> As alterações são enviadas com o uso de lotes <see cref="P:System.Data.OracleClient.OracleDataAdapter.UpdateBatchSize" /> operações por vez.</span><span class="sxs-lookup"><span data-stu-id="89963-234"></term><description> Changes are sent using batches of <see cref="P:System.Data.OracleClient.OracleDataAdapter.UpdateBatchSize" /> operations at a time.</span></span>  
  
 </description></item></list>  
  
 <span data-ttu-id="89963-235">Ao definir isso como um valor diferente de 1 todos os comandos associados a <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> precisam ter sua <see cref="P:System.Data.IDbCommand.UpdatedRowSource" /> propriedade definida como <see langword="None" /> ou <see langword="OutputParameters" />.</span><span class="sxs-lookup"><span data-stu-id="89963-235">When setting this to a value other than 1 all the commands associated with the <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> have to have their <see cref="P:System.Data.IDbCommand.UpdatedRowSource" /> property set to <see langword="None" /> or <see langword="OutputParameters" />.</span></span> <span data-ttu-id="89963-236">Do contrário, uma exceção será gerada.</span><span class="sxs-lookup"><span data-stu-id="89963-236">An exception is thrown otherwise.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89963-237">Use o <xref:System.Data.OracleClient.OracleDataAdapter.UpdateBatchSize%2A> propriedade para atualizar uma fonte de dados com as alterações de um <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="89963-237">Use the <xref:System.Data.OracleClient.OracleDataAdapter.UpdateBatchSize%2A> property to update a data source with changes from a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="89963-238">Isso pode aumentar o desempenho do aplicativo, reduzindo o número de ida e volta ao servidor.</span><span class="sxs-lookup"><span data-stu-id="89963-238">This can increase application performance by reducing the number of round-trips to the server.</span></span>  
  
 <span data-ttu-id="89963-239">Executar um lote extremamente grande pode diminuir o desempenho.</span><span class="sxs-lookup"><span data-stu-id="89963-239">Executing an extremely large batch could decrease performance.</span></span> <span data-ttu-id="89963-240">Portanto, você deve testar a configuração de tamanho de lote ideal antes de implementar seu aplicativo.</span><span class="sxs-lookup"><span data-stu-id="89963-240">Therefore, you should test for the optimum batch size setting before you implement your application.</span></span>  
  
 <span data-ttu-id="89963-241">Um <xref:System.ArgumentOutOfRangeException> é gerada se o valor é definido como um número menor que zero.</span><span class="sxs-lookup"><span data-stu-id="89963-241">An <xref:System.ArgumentOutOfRangeException> is thrown if the value is set to a number less than zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleDataAdapter.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleCommand ^ UpdateCommand { System::Data::OracleClient::OracleCommand ^ get(); void set(System::Data::OracleClient::OracleCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="89963-242">Obtém ou define uma instrução SQL ou um procedimento armazenado usado para atualizar registros no banco de dados.</span><span class="sxs-lookup"><span data-stu-id="89963-242">Gets or sets an SQL statement or stored procedure used to update records in the database.</span></span></summary>
        <value><span data-ttu-id="89963-243">Um <see cref="T:System.Data.OracleClient.OracleCommand" /> usado durante uma operação de atualização para atualizar registros no banco de dados que correspondem às linhas modificadas no <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="89963-243">An <see cref="T:System.Data.OracleClient.OracleCommand" /> used during an update operation to update records in the database that correspond to modified rows in the <see cref="T:System.Data.DataSet" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89963-244">Quando <xref:System.Data.OracleClient.OracleDataAdapter.UpdateCommand%2A> é atribuído a um criado anteriormente <xref:System.Data.OracleClient.OracleCommand>, o <xref:System.Data.OracleClient.OracleCommand> não for clonado.</span><span class="sxs-lookup"><span data-stu-id="89963-244">When <xref:System.Data.OracleClient.OracleDataAdapter.UpdateCommand%2A> is assigned to a previously created <xref:System.Data.OracleClient.OracleCommand>, the <xref:System.Data.OracleClient.OracleCommand> is not cloned.</span></span> <span data-ttu-id="89963-245">Em vez disso, o <xref:System.Data.OracleClient.OracleDataAdapter.UpdateCommand%2A> mantém uma referência para criado anteriormente <xref:System.Data.OracleClient.OracleCommand> objeto.</span><span class="sxs-lookup"><span data-stu-id="89963-245">Instead, the <xref:System.Data.OracleClient.OracleDataAdapter.UpdateCommand%2A> maintains a reference to the previously created <xref:System.Data.OracleClient.OracleCommand> object.</span></span>  
  
 <span data-ttu-id="89963-246">Durante uma operação de atualização, se <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A> não está definida e a chave primária informações estão presentes no **DataSet**, você pode usar o <xref:System.Data.OracleClient.OracleCommandBuilder> classe para gerar automaticamente <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A>e comandos adicionais necessários para reconciliar o <xref:System.Data.DataSet> no banco de dados.</span><span class="sxs-lookup"><span data-stu-id="89963-246">During an update operation, if <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A> is not set and primary key information is present in the **DataSet**, you can use the <xref:System.Data.OracleClient.OracleCommandBuilder> class to automatically generate <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A>, and additional commands needed to reconcile the <xref:System.Data.DataSet> to the database.</span></span> <span data-ttu-id="89963-247">Para fazer isso, defina o <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> propriedade o <xref:System.Data.OracleClient.OracleDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="89963-247">To do this, set the <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> property of the <xref:System.Data.OracleClient.OracleDataAdapter>.</span></span> <span data-ttu-id="89963-248">A lógica de geração também exige informações de coluna de chave no <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="89963-248">The generation logic also requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="89963-249">Para obter mais informações, consulte [gerar comandos com CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span><span class="sxs-lookup"><span data-stu-id="89963-249">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="89963-250">Se a execução desse comando retorna linhas, essas linhas podem ser mescladas com a <xref:System.Data.DataSet> , dependendo do modo como você definir o <xref:System.Data.OracleClient.OracleCommand.UpdatedRowSource%2A> propriedade o <xref:System.Data.OracleClient.OracleCommand> objeto.</span><span class="sxs-lookup"><span data-stu-id="89963-250">If execution of this command returns rows, these rows may be merged with the <xref:System.Data.DataSet> depending upon how you set the <xref:System.Data.OracleClient.OracleCommand.UpdatedRowSource%2A> property of the <xref:System.Data.OracleClient.OracleCommand> object.</span></span>  
  
 <span data-ttu-id="89963-251">Quando você atualiza uma coluna com o `LONG RAW` tipo de dados, uma exceção é gerada quando você inserir um valor de `NULL` na coluna.</span><span class="sxs-lookup"><span data-stu-id="89963-251">When you update a column with the `LONG RAW` data type, an exception is thrown when you enter a value of `NULL` in the column.</span></span> <span data-ttu-id="89963-252">O Oracle `LONG RAW` tipo de dados é um tipo preterido na versão 8.0 do Oracle.</span><span class="sxs-lookup"><span data-stu-id="89963-252">The Oracle `LONG RAW` data type is a deprecated type in Oracle version 8.0.</span></span> <span data-ttu-id="89963-253">Para evitar esse erro, use o `BLOB` de tipo de dados em vez de `LONG RAW`.</span><span class="sxs-lookup"><span data-stu-id="89963-253">To avoid this error, use the `BLOB` data type instead of `LONG RAW`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="89963-254">O exemplo a seguir cria um <xref:System.Data.OracleClient.OracleDataAdapter> e define o <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> e <xref:System.Data.OracleClient.OracleDataAdapter.UpdateCommand%2A> propriedades.</span><span class="sxs-lookup"><span data-stu-id="89963-254">The following example creates an <xref:System.Data.OracleClient.OracleDataAdapter> and sets the <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> and <xref:System.Data.OracleClient.OracleDataAdapter.UpdateCommand%2A> properties.</span></span> <span data-ttu-id="89963-255">Ele pressupõe que você já tiver criado um <xref:System.Data.OracleClient.OracleConnection> objeto.</span><span class="sxs-lookup"><span data-stu-id="89963-255">It assumes you have already created an <xref:System.Data.OracleClient.OracleConnection> object.</span></span>  
  
```vb  
Public Shared Function CreateCustomerAdapter(conn As OracleConnection) As OracleDataAdapter   
  
  Dim da As OracleDataAdapter = New OracleDataAdapter()  
  Dim cmd As OracleCommand  
  Dim parm As OracleParameter  
  
  ' Create the SelectCommand.  
  
  cmd = New OracleCommand("SELECT * FROM Dept " & _  
                       "WHERE DName = pDName AND Loc = pLoc", conn)  
  
  cmd.Parameters.Add("pDName", OracleType.NVarChar, 14)  
  cmd.Parameters.Add("pLoc", OracleType.NVarChar, 13)  
  
  da.SelectCommand = cmd  
  
  ' Create the UpdateCommand.  
  
  cmd = New OracleCommand("UPDATE Dept SET DeptNo = pDeptNo, DName = pDName " & _  
                       "WHERE DeptNo = poldDeptNo", conn)  
  
  cmd.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo")  
  cmd.Parameters.Add("pDName", OracleType.NVarChar, 14, "DName")  
  
  parm = cmd.Parameters.Add("poldDeptNo", OracleType.Number, 2, "DeptNo")  
  parm.SourceVersion = DataRowVersion.Original  
  
  da.UpdateCommand = cmd  
  
  Return da  
End Function  
```  
  
```csharp  
public static OracleDataAdapter CreateCustomerAdapter(OracleConnection conn)  
{  
  OracleDataAdapter da = new OracleDataAdapter();  
  OracleCommand cmd;  
  OracleParameter parm;  
  
  // Create the SelectCommand.  
  
  cmd = new OracleCommand("SELECT * FROM Dept " +  
                       "WHERE DName = pDName AND Loc = pLoc", conn);  
  
  cmd.Parameters.Add("pDName", OracleType.NVarChar, 14);  
  cmd.Parameters.Add("pLoc", OracleType.NVarChar, 13);  
  
  da.SelectCommand = cmd;  
  
  // Create the UpdateCommand.  
  
  cmd = new OracleCommand("UPDATE Dept SET DeptNo = pDeptNo, DName = pDName " +  
                       "WHERE DeptNo = poldDeptNo", conn);  
  
  cmd.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo");  
  cmd.Parameters.Add("pDName", OracleType.NVarChar, 14, "DName");  
  
  parm = cmd.Parameters.Add("poldDeptNo", OracleType.Number, 2, "DeptNo");  
  parm.SourceVersion = DataRowVersion.Original;  
  
  da.UpdateCommand = cmd;  
  
  return da;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>