<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="OracleLob.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f752621e9496b0bd55f13fe4c3cb60aecdfbea99.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f752621e9496b0bd55f13fe4c3cb60aecdfbea99</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.OracleClient.OracleLob">
          <source>Represents a large object binary (<ph id="ph1">&lt;see langword="LOB" /&gt;</ph>) data type stored on an Oracle server.</source>
          
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Data.OracleClient.OracleLob">
          <source>This class cannot be inherited.</source>
          
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>An <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> differs from an <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> in that the data is stored on the server instead of in a physical file in the operating system.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> difere de um <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> em que os dados são armazenados no servidor, em vez de em um arquivo físico no sistema operacional.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>It can also be a read-write object, unlike an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph>, which is always read-only.</source>
          <target state="translated">Ele também pode ser um objeto de leitura / gravação, ao contrário de um <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph>, que é sempre somente leitura.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>An <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> may be one of these <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleType&gt;</ph> data types.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> pode ser um destes <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleType&gt;</ph> tipos de dados.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>OracleType data type</source>
          <target state="translated">Tipo de dados de OracleType</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>Description</source>
          <target state="translated">Descrição</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>An Oracle <ph id="ph1">`BLOB`</ph> data type that contains binary data with a maximum size of 4 gigabytes (GB).</source>
          <target state="translated">Um Oracle <ph id="ph1">`BLOB`</ph> tipo de dados que contém dados binários com um tamanho máximo de 4 gigabytes (GB).</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>This maps to an <ph id="ph1">&lt;xref:System.Array&gt;</ph> of type <ph id="ph2">&lt;xref:System.Byte&gt;</ph>.</source>
          <target state="translated">Isso é mapeado para um <ph id="ph1">&lt;xref:System.Array&gt;</ph> do tipo <ph id="ph2">&lt;xref:System.Byte&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>An Oracle <ph id="ph1">`CLOB`</ph> data type that contains character data, based on the default character set on the server, with a maximum size of 4 GB.</source>
          <target state="translated">Um Oracle <ph id="ph1">`CLOB`</ph> tipo de dados que contém dados de caracteres, com base no caractere padrão definido no servidor, com um tamanho máximo de 4 GB.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>This maps to <ph id="ph1">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">Isso é mapeado para <ph id="ph1">&lt;xref:System.String&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>An Oracle <ph id="ph1">`NCLOB`</ph> data type that contains character data, based on the national character set on the server with a maximum size of 4 GB.</source>
          <target state="translated">Um Oracle <ph id="ph1">`NCLOB`</ph> tipo de dados que contém dados de caracteres, com base em conjunto no servidor com um tamanho máximo de 4 GB de caracteres nacional.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>This maps to <ph id="ph1">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">Isso é mapeado para <ph id="ph1">&lt;xref:System.String&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>A .NET application developer can retrieve the Oracle <ph id="ph1">`LOB`</ph> values into basic .NET data types, such as <ph id="ph2">&lt;xref:System.Array&gt;</ph> of type <ph id="ph3">&lt;xref:System.Byte&gt;</ph> and <ph id="ph4">&lt;xref:System.String&gt;</ph>, or the specialized <ph id="ph5">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> data type.</source>
          <target state="translated">Um desenvolvedor de aplicativos .NET pode recuperar o Oracle <ph id="ph1">`LOB`</ph> valores em tipos de dados .NET básicos, como <ph id="ph2">&lt;xref:System.Array&gt;</ph> do tipo <ph id="ph3">&lt;xref:System.Byte&gt;</ph> e <ph id="ph4">&lt;xref:System.String&gt;</ph>, ou o especializado <ph id="ph5">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> tipo de dados.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>The <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> class supports reading data from and writing to the Oracle <ph id="ph2">`LOB`</ph> in the Oracle database.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> classe oferece suporte a dados de leitura e gravação para o Oracle <ph id="ph2">`LOB`</ph> no banco de dados Oracle.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>The following are the main characteristics of an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> data type that distinguish it from basic .NET data types:</source>
          <target state="translated">A seguir estão as principais características de um <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> tipo de dados que distingui-lo de tipos de dados básicos do .NET:</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>After you retrieve the Oracle <ph id="ph1">`LOB`</ph> value from the Oracle database into the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> class, you can change the <ph id="ph3">`LOB`</ph> data in an open transaction and your changes are directly reflected to the database.</source>
          <target state="translated">Depois de recuperar o Oracle <ph id="ph1">`LOB`</ph> valor do banco de dados Oracle para o <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> classe, você pode alterar o <ph id="ph3">`LOB`</ph> dados em uma transação aberta e as alterações são refletidos diretamente no banco de dados.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>If you retrieve the Oracle <ph id="ph1">`LOB`</ph> value into an <ph id="ph2">&lt;xref:System.Array&gt;</ph> of type <ph id="ph3">&lt;xref:System.Byte&gt;</ph> or <ph id="ph4">&lt;xref:System.String&gt;</ph> and update these arrays, your changes are not reflected to the database.</source>
          <target state="translated">Se você recuperar o Oracle <ph id="ph1">`LOB`</ph> valor em uma <ph id="ph2">&lt;xref:System.Array&gt;</ph> do tipo <ph id="ph3">&lt;xref:System.Byte&gt;</ph> ou <ph id="ph4">&lt;xref:System.String&gt;</ph> e atualizar essas matrizes, suas alterações não serão refletidas no banco de dados.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>When you use the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> class to access a chunk of a <ph id="ph2">`LOB`</ph> value, only that chunk is passed from the Oracle database to the client.</source>
          <target state="translated">Quando você usa o <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> classe para acessar uma parte de uma <ph id="ph2">`LOB`</ph> valor, somente o fragmento é passado do banco de dados Oracle para o cliente.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>When you use the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleDataReader.GetChars%2A&gt;</ph> method to access a chunk of a <ph id="ph2">`LOB`</ph> value, the entire contents of the value are passed from the Oracle database to the client.</source>
          <target state="translated">Quando você usa o <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleDataReader.GetChars%2A&gt;</ph> método para acessar uma parte de uma <ph id="ph2">`LOB`</ph> valor, todo o conteúdo do valor é passado do banco de dados Oracle para o cliente.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>To obtain an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> object, call the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleDataReader.GetOracleLob%2A&gt;</ph> method.</source>
          <target state="translated">Para obter um <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> de objeto, chame o <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleDataReader.GetOracleLob%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>You can construct an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> that is NULL using this format:</source>
          <target state="translated">Você pode construir um <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> que é NULL usando este formato:</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>This technique is used primarily to test whether a <ph id="ph1">`LOB`</ph> returned from the server is NULL, as this example illustrates:</source>
          <target state="translated">Essa técnica é usada principalmente para testar se um <ph id="ph1">`LOB`</ph> retornado do servidor for NULL, como mostra este exemplo:</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>A NULL <ph id="ph1">`LOB`</ph> behaves similarly to a zero-byte <ph id="ph2">`LOB`</ph> in that <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph> succeeds and always returns zero bytes.</source>
          <target state="translated">Um valor nulo <ph id="ph1">`LOB`</ph> se comporta da mesma forma para zero bytes <ph id="ph2">`LOB`</ph> que <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph> terá êxito e sempre retorna zero bytes.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>Selecting a <ph id="ph1">`LOB`</ph> column that contains a null value returns <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob.Null&gt;</ph>.</source>
          <target state="translated">Selecionando um <ph id="ph1">`LOB`</ph> coluna que contém um valor nulo retornará <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob.Null&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>You must begin a transaction before obtaining a temporary <ph id="ph1">`LOB`</ph>.</source>
          <target state="translated">Você deve iniciar uma transação antes de obter um temporário <ph id="ph1">`LOB`</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleDataReader&gt;</ph> may fail to obtain data later.</source>
          <target state="translated">Caso contrário, o <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleDataReader&gt;</ph> pode falhar ao obter dados mais tarde.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>You can also open a temporary <ph id="ph1">`LOB`</ph> in Oracle by calling the DBMS_LOB.CREATETEMPORARY system stored procedure and binding a <ph id="ph2">`LOB`</ph> output parameter.</source>
          <target state="translated">Você também pode abrir um temporário <ph id="ph1">`LOB`</ph> no Oracle chamando o DBMS_LOB. Sistema CREATETEMPORARY procedimento armazenado e associação de um <ph id="ph2">`LOB`</ph> parâmetro de saída.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>On the client side, a temporary <ph id="ph1">`LOB`</ph> behaves like a table-based <ph id="ph2">`LOB`</ph>.</source>
          <target state="translated">No lado do cliente, um temporário <ph id="ph1">`LOB`</ph> se comporta como uma tabela com base em <ph id="ph2">`LOB`</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>For example, to update the temporary <ph id="ph1">`LOB`</ph>, it must be enclosed in a transaction.</source>
          <target state="translated">Por exemplo, para atualizar temporárias <ph id="ph1">`LOB`</ph>, ele deve ser incluído em uma transação.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>The following C# example demonstrates how to open a temporary <ph id="ph1">`LOB`</ph>.</source>
          <target state="translated">O exemplo c# a seguir demonstra como abrir um temporário <ph id="ph1">`LOB`</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>The inherited <ph id="ph1">&lt;xref:System.IO.Stream.WriteByte%2A&gt;</ph> method fails if used with character data, and an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated">O herdadas <ph id="ph1">&lt;xref:System.IO.Stream.WriteByte%2A&gt;</ph> método falhará se usado com dados de caracteres e um <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> é gerada.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Write%2A&gt;</ph> method instead.</source>
          <target state="translated">Use o método <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Write%2A&gt;</ph> em seu lugar.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>Temporary <ph id="ph1">`LOB`</ph>s are only closed when the connection is closed, but with pooling and under load, temporary <ph id="ph2">`LOB`</ph>s do not close.</source>
          <target state="translated">Temporário <ph id="ph1">`LOB`</ph>estão apenas fechados quando a conexão é fechada, mas com o pool e sob carga, temporária <ph id="ph2">`LOB`</ph>s não fechar.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>This can be resolved by disposing the temporary <ph id="ph1">`LOB`</ph>, by invoking <ph id="ph2">`tempLob.Dispose()`</ph>.</source>
          <target state="translated">Isso pode ser resolvido removendo temporárias <ph id="ph1">`LOB`</ph>, invocando <ph id="ph2">`tempLob.Dispose()`</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)">
          <source>The <ph id="ph1">&lt;see langword="LOB" /&gt;</ph> from which to append data.</source>
          
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)">
          <source>Appends data from the specified <ph id="ph1">&lt;see langword="LOB" /&gt;</ph> to the current <ph id="ph2">&lt;see langword="LOB" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)">
          <source>To write to the <ph id="ph1">`LOB`</ph>, you must have retrieved the <ph id="ph2">`LOB`</ph> using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</source>
          <target state="translated">Para gravar o <ph id="ph1">`LOB`</ph>, você deve recuperar o <ph id="ph2">`LOB`</ph> usando a cláusula FOR UPDATE na instrução SQL SELECT e você deve ter uma transação local iniciada.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)">
          <source>All data from the source <ph id="ph1">`LOB`</ph> is appended to the end of the current <ph id="ph2">`LOB`</ph>.</source>
          <target state="translated">Todos os dados da fonte de <ph id="ph1">`LOB`</ph> é acrescentado ao final da atual <ph id="ph2">`LOB`</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)">
          <source>The position of neither <ph id="ph1">`LOB`</ph> is evaluated or changed during this process.</source>
          <target state="translated">A posição de nenhuma <ph id="ph1">`LOB`</ph> for avaliada ou alterada durante esse processo.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)">
          <source>The underlying data types must always be the same.</source>
          <target state="translated">Os tipos de dados subjacente devem ser sempre a mesma.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)">
          <source>For example, if you are appending from an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleType.NClob&gt;</ph>, the destination <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> must also be an <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleType.NClob&gt;</ph>.</source>
          <target state="translated">Por exemplo, se você está anexando de um <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleType.NClob&gt;</ph>, o destino <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> também deve ser um <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleType.NClob&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)">
          <source>In this release, a write operation to a read-only <ph id="ph1">`LOB`</ph> might succeed, but does not update the <ph id="ph2">`LOB`</ph> on the server.</source>
          <target state="translated">Nesta versão, uma operação de gravação para somente leitura <ph id="ph1">`LOB`</ph> pode ter êxito, mas não atualiza o <ph id="ph2">`LOB`</ph> no servidor.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)">
          <source>In this case, however, the local copy of the <ph id="ph1">`LOB`</ph> is updated.</source>
          <target state="translated">Nesse caso, no entanto, a cópia local do <ph id="ph1">`LOB`</ph> é atualizado.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)">
          <source>Therefore, later read operations on the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> object might return the results of the write operation.</source>
          <target state="translated">Portanto, mais tarde operações de leitura no <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> objeto pode retornar os resultados da operação de gravação.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)">
          <source>The source <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> is null.</source>
          
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)">
          <source>The source <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> is null, or the connection is closed.</source>
          
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)">
          <source>The source <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> object was closed or disposed.</source>
          
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)">
          <source>An Oracle error has occurred.</source>
          
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="T:System.Data.OracleClient.OracleLob">
          <source>Prevents server-side triggers from firing while performing multiple write operations.</source>
          
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.BeginBatch">
          <source>Prevents server-side triggers from firing while performing multiple read operations.</source>
          
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.BeginBatch">
          <source>Opens the <ph id="ph1">`LOB`</ph> in <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLobOpenMode.ReadOnly&gt;</ph> mode; therefore, the <ph id="ph3">`LOB`</ph> can only be read from, not written to, until the corresponding call to <ph id="ph4">&lt;xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt;</ph>.</source>
          <target state="translated">Abre o <ph id="ph1">`LOB`</ph> na <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLobOpenMode.ReadOnly&gt;</ph> modo; portanto, o <ph id="ph3">`LOB`</ph> só podem ser lidos, não gravada, até a chamada correspondente para <ph id="ph4">&lt;xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.BeginBatch">
          <source>To perform batch writes to the <ph id="ph1">`LOB`</ph>, call <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob.BeginBatch%2A&gt;</ph> with <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLobOpenMode.ReadWrite&gt;</ph>.</source>
          <target state="translated">Para realizar gravações em lotes para o <ph id="ph1">`LOB`</ph>, chame <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob.BeginBatch%2A&gt;</ph> com <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLobOpenMode.ReadWrite&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.BeginBatch">
          <source>Calling <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.BeginBatch%2A&gt;</ph> more than one time within the same transaction currently throws the Oracle "ORA-22293: LOB already opened in the same transaction" error.</source>
          <target state="translated">Chamando <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.BeginBatch%2A&gt;</ph> mais de uma vez na mesma transação atualmente lança Oracle "ORA-22293: LOB já aberto na mesma transação" erro.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.BeginBatch">
          <source>In addition, if you obtain the <ph id="ph1">`LOB`</ph> using another <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleDataReader&gt;</ph>, and the original caller has not called the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt;</ph> method, the same error is generated.</source>
          <target state="translated">Além disso, se você obtiver o <ph id="ph1">`LOB`</ph> usando outro <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleDataReader&gt;</ph>, e o chamador original não chamou o <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt;</ph> método, o mesmo erro é gerado.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.BeginBatch">
          <source>Therefore, you must call the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt;</ph> method when you are finished using the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>.</source>
          <target state="translated">Portanto, você deve chamar o <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt;</ph> método quando tiver terminado de usar o <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.BeginBatch">
          <source>The connection is closed.</source>
          
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.BeginBatch">
          <source>The object was closed or disposed.</source>
          
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.BeginBatch">
          <source>An Oracle error has occurred.</source>
          
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)">
          <source>Mode (one of the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLobOpenMode" /&gt;</ph> values) in which the <ph id="ph2">&lt;see langword="LOB" /&gt;</ph> can be accessed between this <ph id="ph3">&lt;see cref="M:System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)" /&gt;</ph> call and the corresponding <ph id="ph4">&lt;see cref="M:System.Data.OracleClient.OracleLob.EndBatch" /&gt;</ph> call.</source>
          
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)">
          <source>Prevents server-side triggers from firing while performing multiple read and write operations in the specified access mode.</source>
          
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)">
          <source>To write to the <ph id="ph1">`LOB`</ph>, you must have retrieved the <ph id="ph2">`LOB`</ph> using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</source>
          <target state="translated">Para gravar o <ph id="ph1">`LOB`</ph>, você deve recuperar o <ph id="ph2">`LOB`</ph> usando a cláusula FOR UPDATE na instrução SQL SELECT e você deve ter uma transação local iniciada.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)">
          <source>Calling <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.BeginBatch%2A&gt;</ph> more than one time within the same transaction currently throws the Oracle "ORA-22293: LOB already opened in the same transaction" error.</source>
          <target state="translated">Chamando <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.BeginBatch%2A&gt;</ph> mais de uma vez na mesma transação atualmente lança Oracle "ORA-22293: LOB já aberto na mesma transação" erro.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)">
          <source>In addition, if you obtain the <ph id="ph1">`LOB`</ph> using another <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleDataReader&gt;</ph>, and the original caller has not called the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt;</ph> method, the same error is generated.</source>
          <target state="translated">Além disso, se você obtiver o <ph id="ph1">`LOB`</ph> usando outro <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleDataReader&gt;</ph>, e o chamador original não chamou o <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt;</ph> método, o mesmo erro é gerado.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)">
          <source>Therefore, you must call the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt;</ph> method when you are finished using the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>.</source>
          <target state="translated">Portanto, você deve chamar o <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt;</ph> método quando tiver terminado de usar o <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)">
          <source>The connection is closed.</source>
          
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)">
          <source>The object was closed or disposed.</source>
          
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)">
          <source>An Oracle error has occurred.</source>
          
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.CanRead">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see langword="LOB" /&gt;</ph> stream can be read.</source>
          
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.CanRead">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see langword="LOB" /&gt;</ph> stream supports reading, otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph> if a <ph id="ph4">&lt;see langword="LOB" /&gt;</ph> is closed or disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se o <ph id="ph2">&lt;see langword="LOB" /&gt;</ph> fluxo suporte leitura, caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph> se um <ph id="ph4">&lt;see langword="LOB" /&gt;</ph> foi fechado ou descartado.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.CanSeek">
          <source>Gets a value indicating whether forward and backward seek operations can be performed.</source>
          
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.CanSeek">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> if a <ph id="ph2">&lt;see langword="LOB" /&gt;</ph> is closed or disposed, otherwise <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph> Se um <ph id="ph2">&lt;see langword="LOB" /&gt;</ph> foi fechado ou descartado, caso contrário, <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.CanSeek">
          <source>Always <ph id="ph1">&lt;see langword="true" /&gt;</ph> for <ph id="ph2">&lt;see cref="F:System.Data.OracleClient.OracleLob.Null" /&gt;</ph>.</source>
          <target state="translated">Sempre <ph id="ph1">&lt;see langword="true" /&gt;</ph> para <ph id="ph2">&lt;see cref="F:System.Data.OracleClient.OracleLob.Null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.CanWrite">
          <source>Always returns true, regardless of whether the <ph id="ph1">&lt;see langword="LOB" /&gt;</ph> supports writing or not.</source>
          
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.CanWrite">
          <source>Always returns <ph id="ph1">&lt;see langword="true" /&gt;</ph>, regardless of whether an opened or undisposed <ph id="ph2">&lt;see langword="LOB" /&gt;</ph> supports writing or not, <ph id="ph3">&lt;see langword="false" /&gt;</ph> if a <ph id="ph4">&lt;see langword="LOB" /&gt;</ph> is closed or disposed.</source>
          <target state="translated">Sempre retorna <ph id="ph1">&lt;see langword="true" /&gt;</ph>, independentemente de um aberto ou não descartado <ph id="ph2">&lt;see langword="LOB" /&gt;</ph> oferece suporte à criação ou não, <ph id="ph3">&lt;see langword="false" /&gt;</ph> se um <ph id="ph4">&lt;see langword="LOB" /&gt;</ph> foi fechado ou descartado.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.CanWrite">
          <source>To write to the <ph id="ph1">`LOB`</ph>, you must have retrieved the <ph id="ph2">`LOB`</ph> using the FOR UPDATE clause in the SQL SELECT statement, and you must have started a local transaction.</source>
          <target state="translated">Para gravar o <ph id="ph1">`LOB`</ph>, você deve recuperar o <ph id="ph2">`LOB`</ph> usando a cláusula FOR UPDATE na instrução SQL SELECT e você deve ter iniciado uma transação local.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.ChunkSize">
          <source>Gets a value indicating the minimum number of bytes to retrieve from or send to the server during a read/write operation.</source>
          
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.ChunkSize">
          <source>The minimum number of bytes to retrieve or send.</source>
          <target state="translated">O número mínimo de bytes para recuperar ou enviar.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.ChunkSize">
          <source>The value returned by the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.ChunkSize%2A&gt;</ph> property is not a setting of the .NET Framework Data Provider for Oracle.</source>
          <target state="translated">O valor retornado pelo <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.ChunkSize%2A&gt;</ph> propriedade não é uma configuração do .NET Framework Data Provider for Oracle.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.ChunkSize">
          <source>Instead, it is the value that the Oracle Call Interface (OCI) uses when communicating with the server.</source>
          <target state="translated">Em vez disso, ele é o valor que o Oracle Call Interface (OCI) usa ao se comunicar com o servidor.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.ChunkSize">
          <source>Use <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.ChunkSize%2A&gt;</ph> to ensure that client-side chunks are the same size.</source>
          <target state="translated">Use <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.ChunkSize%2A&gt;</ph> para garantir que partes do lado do cliente são do mesmo tamanho.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.ChunkSize">
          <source>Reading or writing in smaller chunks does not cache data, and causes a less-optimized round trip to the server, because a full packet is not received or sent.</source>
          <target state="translated">Ler ou gravar em partes menores não armazena em cache dados e faz com que um processamento otimizado menor para o servidor, como um pacote completo não é recebido ou enviado.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.ChunkSize">
          <source>The connection is closed.</source>
          
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.ChunkSize">
          <source>The object was closed or disposed.</source>
          
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.ChunkSize">
          <source>An Oracle error has occurred.</source>
          
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Clone">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> object that references the same Oracle <ph id="ph2">&lt;see langword="LOB" /&gt;</ph> as the original <ph id="ph3">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> object.</source>
          
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Clone">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> object that references the same Oracle <ph id="ph2">&lt;see langword="LOB" /&gt;</ph> as the original <ph id="ph3">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> object.</source>
          
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Clone">
          <source>The properties of the new <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> object initially have the same values as those of the original object.</source>
          <target state="translated">As propriedades do novo <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> objeto inicialmente ter os mesmos valores do objeto original.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Clone">
          <source>However, after the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Clone%2A&gt;</ph> is complete, each <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> object is independent from the other.</source>
          <target state="translated">No entanto, após o <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Clone%2A&gt;</ph> estiver concluído, cada <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> objeto é independente dos outros.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Clone">
          <source>For example, changing the value of the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Position%2A&gt;</ph> property on the original <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> does not change the value of <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob.Position%2A&gt;</ph> on the copy.</source>
          <target state="translated">Por exemplo, alterar o valor da <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Position%2A&gt;</ph> propriedade original <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> não altera o valor de <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob.Position%2A&gt;</ph> na cópia.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Clone">
          <source>The connection is closed.</source>
          
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Clone">
          <source>The object was closed or disposed.</source>
          
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.Connection">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleConnection" /&gt;</ph> used by this instance of the <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Connection">
          <source>The connection to a data source.</source>
          <target state="translated">A conexão com uma fonte de dados.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.Connection">
          <source>The object was closed or disposed.</source>
          
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="T:System.Data.OracleClient.OracleLob">
          <source>Copies from this <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> to a destination <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>The destination <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>Copies from this <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> to a destination <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>The number of bytes copied.</source>
          
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>This excludes any padded bytes.</source>
          
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>The underlying data types must always be the same.</source>
          <target state="translated">Os tipos de dados subjacente devem ser sempre a mesma.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>For example, if you are copying from an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleType.NClob&gt;</ph>, the destination <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> must also be an <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleType.NClob&gt;</ph>.</source>
          <target state="translated">Por exemplo, se você estiver copiando de um <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleType.NClob&gt;</ph>, o destino <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> também deve ser um <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleType.NClob&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>If the destination offset is beyond the end of destination <ph id="ph1">`LOB`</ph>, the <ph id="ph2">`LOB`</ph> to which the data is being copied is extended.</source>
          <target state="translated">Se o deslocamento de destino está além do fim do destino <ph id="ph1">`LOB`</ph>, o <ph id="ph2">`LOB`</ph> é estendido para o qual os dados estão sendo copiados.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>The space between the end of the <ph id="ph1">`LOB`</ph> and the destination offset beyond the end is padded with zeros for <ph id="ph2">`BLOB`</ph> data types and spaces for <ph id="ph3">`CLOB`</ph> and <ph id="ph4">`NCLOB`</ph> data types.</source>
          <target state="translated">O espaço entre o fim do <ph id="ph1">`LOB`</ph> e o deslocamento de destino após o final será preenchido com zeros para <ph id="ph2">`BLOB`</ph> tipos de dados e espaços para <ph id="ph3">`CLOB`</ph> e <ph id="ph4">`NCLOB`</ph> tipos de dados.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>To write to the <ph id="ph1">`LOB`</ph>, you must have retrieved the <ph id="ph2">`LOB`</ph> using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</source>
          <target state="translated">Para gravar o <ph id="ph1">`LOB`</ph>, você deve recuperar o <ph id="ph2">`LOB`</ph> usando a cláusula FOR UPDATE na instrução SQL SELECT e você deve ter uma transação local iniciada.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>In this release, a write operation to a read-only <ph id="ph1">`LOB`</ph> might succeed, but not update the <ph id="ph2">`LOB`</ph> on the server.</source>
          <target state="translated">Nesta versão, uma operação de gravação para somente leitura <ph id="ph1">`LOB`</ph> pode ter êxito, mas não atualizar o <ph id="ph2">`LOB`</ph> no servidor.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>In this case, however, the local copy of the <ph id="ph1">`LOB`</ph> will be updated.</source>
          <target state="translated">Nesse caso, no entanto, a cópia local do <ph id="ph1">`LOB`</ph> será atualizado.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>Therefore, later read operations on the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> object might return the results of the write operation.</source>
          <target state="translated">Portanto, mais tarde operações de leitura no <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> objeto pode retornar os resultados da operação de gravação.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>The <ph id="ph1">`CopyTo`</ph> method does not clear the contents of the destination <ph id="ph2">`OracleLob`</ph> before performing the copy operation.</source>
          <target state="translated">O <ph id="ph1">`CopyTo`</ph> método não limpa o conteúdo do destino <ph id="ph2">`OracleLob`</ph> antes de executar a operação de cópia.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> specified in the <ph id="ph2">&lt;paramref name="destination" /&gt;</ph> parameter is null.</source>
          
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>The operation is not within a transaction, the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> object is null, or the connection is closed.</source>
          
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>An Oracle error has occurred.</source>
          
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>The destination <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph></source>
          
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>The offset to which to copy.</source>
          
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>For <ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> and <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> data types, this must be an even number of bytes.</source>
          
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>Copies from this <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> to a destination <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> with the specified amount of data.</source>
          
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>The number of bytes copied.</source>
          
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>This excludes any padded bytes.</source>
          
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>The underlying data types must always be the same.</source>
          <target state="translated">Os tipos de dados subjacente devem ser sempre a mesma.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>For example, if you are copying from an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleType.NClob&gt;</ph>, the destination <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> must also be an <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleType.NClob&gt;</ph>.</source>
          <target state="translated">Por exemplo, se você estiver copiando de um <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleType.NClob&gt;</ph>, o destino <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> também deve ser um <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleType.NClob&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>If the destination offset is beyond the end of destination <ph id="ph1">`LOB`</ph>, the <ph id="ph2">`LOB`</ph> to which the data is being copied is extended.</source>
          <target state="translated">Se o deslocamento de destino está além do fim do destino <ph id="ph1">`LOB`</ph>, o <ph id="ph2">`LOB`</ph> é estendido para o qual os dados estão sendo copiados.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>The space between the end of <ph id="ph1">`LOB`</ph> and destination offset beyond the end is padded with zeros for <ph id="ph2">`BLOB`</ph> data types and spaces for <ph id="ph3">`CLOB`</ph> and <ph id="ph4">`NCLOB`</ph> data types.</source>
          <target state="translated">O espaço entre o fim do <ph id="ph1">`LOB`</ph> e deslocamento além do fim de destino é preenchido com zeros para <ph id="ph2">`BLOB`</ph> tipos de dados e espaços para <ph id="ph3">`CLOB`</ph> e <ph id="ph4">`NCLOB`</ph> tipos de dados.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>To write to the <ph id="ph1">`LOB`</ph>, you must have retrieved the <ph id="ph2">`LOB`</ph> using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</source>
          <target state="translated">Para gravar o <ph id="ph1">`LOB`</ph>, você deve recuperar o <ph id="ph2">`LOB`</ph> usando a cláusula FOR UPDATE na instrução SQL SELECT e você deve ter uma transação local iniciada.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>In this release, a write operation to a read-only <ph id="ph1">`LOB`</ph> might succeed, but does not update the <ph id="ph2">`LOB`</ph> on the server.</source>
          <target state="translated">Nesta versão, uma operação de gravação para somente leitura <ph id="ph1">`LOB`</ph> pode ter êxito, mas não atualiza o <ph id="ph2">`LOB`</ph> no servidor.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>In this case, however, the local copy of the <ph id="ph1">`LOB`</ph> is updated.</source>
          <target state="translated">Nesse caso, no entanto, a cópia local do <ph id="ph1">`LOB`</ph> é atualizado.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>Therefore, later read operations on the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> object might return the results of the write operation.</source>
          <target state="translated">Portanto, mais tarde operações de leitura no <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> objeto pode retornar os resultados da operação de gravação.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>The <ph id="ph1">`CopyTo`</ph> method does not clear the contents of the destination <ph id="ph2">`OracleLob`</ph> before performing the copy operation.</source>
          <target state="translated">O <ph id="ph1">`CopyTo`</ph> método não limpa o conteúdo do destino <ph id="ph2">`OracleLob`</ph> antes de executar a operação de cópia.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> specified in the <ph id="ph2">&lt;paramref name="destination" /&gt;</ph> parameter is full.</source>
          
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>A value specified in the <ph id="ph1">&lt;paramref name="destinationOffset" /&gt;</ph> parameter is less than zero or greater than 4 gigabytes.</source>
          
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>-or-</source>
          
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>A value specified in the <ph id="ph1">&lt;paramref name="destinationOffset" /&gt;</ph> parameter for a <ph id="ph2">&lt;see langword="CLOB" /&gt;</ph> or <ph id="ph3">&lt;see langword="NCLOB" /&gt;</ph> data type is not even.</source>
          
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>-or-</source>
          
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>You must specify <ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> and <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> data types as an even number of bytes.</source>
          
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>The operation is not within a transaction, the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> object is null, or the connection is closed.</source>
          
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>An Oracle error has occurred.</source>
          
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>The offset from which to copy.</source>
          
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>For <ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> and <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> data types, this must be an even number.</source>
          
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>The destination <ph id="ph1">&lt;see langword="OracleLob" /&gt;</ph><ph id="ph2">&lt;see cref="N:System.Data.OracleClient" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>The destination offset to which to copy.</source>
          
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>For <ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> and <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> data types, this must be an even number.</source>
          
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>The quantity of data, in bytes, to copy.</source>
          
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>For <ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> and <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> data types, this must be an even number.</source>
          
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>Copies from this <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> to a destination <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> with the specified amount of data, and the source offset.</source>
          
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>The number of bytes copied.</source>
          
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>This excludes any padded bytes.</source>
          
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>The underlying data types must always be the same.</source>
          <target state="translated">Os tipos de dados subjacente devem ser sempre a mesma.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>For example, if you are copying from an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleType.NClob&gt;</ph>, the destination <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> must also be an <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleType.NClob&gt;</ph>.</source>
          <target state="translated">Por exemplo, se você estiver copiando de um <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleType.NClob&gt;</ph>, o destino <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> também deve ser um <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleType.NClob&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>If the destination offset is beyond the end of destination <ph id="ph1">`LOB`</ph>, the <ph id="ph2">`LOB`</ph> to which the data is being copied is extended.</source>
          <target state="translated">Se o deslocamento de destino está além do fim do destino <ph id="ph1">`LOB`</ph>, o <ph id="ph2">`LOB`</ph> é estendido para o qual os dados estão sendo copiados.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>The space between the end of <ph id="ph1">`LOB`</ph> and destination offset beyond the end is padded with zeros for <ph id="ph2">`BLOB`</ph> data types and spaces for <ph id="ph3">`CLOB`</ph> and <ph id="ph4">`NCLOB`</ph> data types.</source>
          <target state="translated">O espaço entre o fim do <ph id="ph1">`LOB`</ph> e deslocamento além do fim de destino é preenchido com zeros para <ph id="ph2">`BLOB`</ph> tipos de dados e espaços para <ph id="ph3">`CLOB`</ph> e <ph id="ph4">`NCLOB`</ph> tipos de dados.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>To write to the <ph id="ph1">`LOB`</ph>, you must have retrieved the <ph id="ph2">`LOB`</ph> using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</source>
          <target state="translated">Para gravar o <ph id="ph1">`LOB`</ph>, você deve recuperar o <ph id="ph2">`LOB`</ph> usando a cláusula FOR UPDATE na instrução SQL SELECT e você deve ter uma transação local iniciada.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>In this release, a write operation to a read-only <ph id="ph1">`LOB`</ph> might succeed, but does not update the <ph id="ph2">`LOB`</ph> on the server.</source>
          <target state="translated">Nesta versão, uma operação de gravação para somente leitura <ph id="ph1">`LOB`</ph> pode ter êxito, mas não atualiza o <ph id="ph2">`LOB`</ph> no servidor.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>In this case, however, the local copy of the <ph id="ph1">`LOB`</ph> is updated.</source>
          <target state="translated">Nesse caso, no entanto, a cópia local do <ph id="ph1">`LOB`</ph> é atualizado.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>Therefore, later read operations on the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> object might return the results of the write operation.</source>
          <target state="translated">Portanto, mais tarde operações de leitura no <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> objeto pode retornar os resultados da operação de gravação.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>The <ph id="ph1">`CopyTo`</ph> method does not clear the contents of the destination <ph id="ph2">`OracleLob`</ph> before performing the copy operation.</source>
          <target state="translated">O <ph id="ph1">`CopyTo`</ph> método não limpa o conteúdo do destino <ph id="ph2">`OracleLob`</ph> antes de executar a operação de cópia.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> specified in the <ph id="ph2">&lt;paramref name="destination" /&gt;</ph> parameter is full.</source>
          
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>A value specified in the <ph id="ph1">&lt;paramref name="amount" /&gt;</ph>, <ph id="ph2">&lt;paramref name="sourceOffset" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="destinationOffset" /&gt;</ph> parameter is less than zero or greater than 4 gigabytes.</source>
          
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>-or-</source>
          
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>A value specified in the <ph id="ph1">&lt;paramref name="amount" /&gt;</ph>, <ph id="ph2">&lt;paramref name="sourceOffset" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="destinationOffset" /&gt;</ph> parameter for a <ph id="ph4">&lt;see langword="CLOB" /&gt;</ph> or <ph id="ph5">&lt;see langword="NCLOB" /&gt;</ph> data type is not even.</source>
          
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>The operation is not within a transaction, the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> object is null, or the connection is closed.</source>
          
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>An Oracle error has occurred.</source>
          
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.EndBatch">
          <source>Allows server-side triggers to resume firing after performing multiple write operations.</source>
          
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.EndBatch">
          <source>Call the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.BeginBatch%2A&gt;</ph> method before you begin performing write operations on the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>.</source>
          <target state="translated">Chamar o <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.BeginBatch%2A&gt;</ph> método antes de começar a executar operações de gravação no <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.EndBatch">
          <source>The connection is closed.</source>
          
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.EndBatch">
          <source>The object was closed or disposed.</source>
          
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.EndBatch">
          <source>An Oracle error has occurred.</source>
          
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="T:System.Data.OracleClient.OracleLob">
          <source>Erases data from this <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Erase">
          <source>Erases all data from this <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Erase">
          <source>The number of bytes erased.</source>
          
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Erase">
          <source><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Erase%2A&gt;</ph> does not truncate data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Erase%2A&gt;</ph> não truncar os dados.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Erase">
          <source>The <ph id="ph1">`LOB`</ph> length remains the same for a <ph id="ph2">`BLOB`</ph> data type, and the erased data is replaced by 0x00.</source>
          <target state="translated">O <ph id="ph1">`LOB`</ph> comprimento permanece o mesmo para um <ph id="ph2">`BLOB`</ph> tipo de dados, e os dados apagados são substituídos por 0x00.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Erase">
          <source><ph id="ph1">`CLOB`</ph> and <ph id="ph2">`NCLOB`</ph> data types are replaced by spaces.</source>
          <target state="translated"><ph id="ph1">`CLOB`</ph> e <ph id="ph2">`NCLOB`</ph> tipos de dados são substituídos por espaços.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Erase">
          <source>To write to the <ph id="ph1">`LOB`</ph>, you must have retrieved the <ph id="ph2">`LOB`</ph> using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</source>
          <target state="translated">Para gravar o <ph id="ph1">`LOB`</ph>, você deve recuperar o <ph id="ph2">`LOB`</ph> usando a cláusula FOR UPDATE na instrução SQL SELECT e você deve ter uma transação local iniciada.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Erase">
          <source>In this release, a write operation to a read-only <ph id="ph1">`LOB`</ph> might succeed, but does not update the <ph id="ph2">`LOB`</ph> on the server.</source>
          <target state="translated">Nesta versão, uma operação de gravação para somente leitura <ph id="ph1">`LOB`</ph> pode ter êxito, mas não atualiza o <ph id="ph2">`LOB`</ph> no servidor.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Erase">
          <source>In this case, however, the local copy of the <ph id="ph1">`LOB`</ph> is updated.</source>
          <target state="translated">Nesse caso, no entanto, a cópia local do <ph id="ph1">`LOB`</ph> é atualizado.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Erase">
          <source>Therefore, later read operations on the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> object might return the results of the write operation.</source>
          <target state="translated">Portanto, mais tarde operações de leitura no <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> objeto pode retornar os resultados da operação de gravação.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Erase">
          <source>The operation is not within a transaction, the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> object is null, or the connection is closed.</source>
          
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Erase">
          <source>The object was closed or disposed.</source>
          
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Erase">
          <source>An Oracle error has occurred.</source>
          
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source>The offset from which to erase.</source>
          
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source>For <ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> and <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> data types, this must be an even number.</source>
          
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source>The quantity of data, in bytes, to erase.</source>
          
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source>For <ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> and <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> data types, this must be an even number.</source>
          
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source>Erases the specified amount of data from this <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source>The number of bytes erased.</source>
          
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source>The sum of the values in the <ph id="ph1">`offset`</ph> and <ph id="ph2">`amount`</ph> parameters can be greater than that of the size of the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>.</source>
          <target state="translated">A soma dos valores de <ph id="ph1">`offset`</ph> e <ph id="ph2">`amount`</ph> parâmetros podem ser maiores do que o tamanho do <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source>Therefore, specifying a value greater than that returned by the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Length%2A&gt;</ph> property succeeds; however <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob.Erase%2A&gt;</ph> only erases to the end of the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>.</source>
          <target state="translated">Portanto, especificando um valor maior do que o retornado pelo <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Length%2A&gt;</ph> propriedade for bem-sucedida; no entanto <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob.Erase%2A&gt;</ph> apaga apenas ao final do <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source>(Similarly, if a negative value is passed to <ph id="ph1">`offset`</ph>, <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob.Erase%2A&gt;</ph> will succeed, but only erase starting from the beginning of the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>.) This behavior is different from that of the <ph id="ph4">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph> and <ph id="ph5">&lt;xref:System.Data.OracleClient.OracleLob.Write%2A&gt;</ph> methods, and offers the advantage of being able to erase all data from the value specified by <ph id="ph6">`offset`</ph> without making an additional roundtrip to the server to verify the actual size.</source>
          <target state="translated">(Da mesma forma, se um valor negativo for passado para <ph id="ph1">`offset`</ph>, <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob.Erase%2A&gt;</ph> seja bem-sucedida, mas apenas apagar a partir do início do <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>.) Esse comportamento é diferente de <ph id="ph4">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph> e <ph id="ph5">&lt;xref:System.Data.OracleClient.OracleLob.Write%2A&gt;</ph> métodos e oferece a vantagem de poder apagar todos os dados do valor especificada pelo <ph id="ph6">`offset`</ph> sem fazer uma ida e volta adicional para o servidor para verificar o tamanho real.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Erase%2A&gt;</ph> does not truncate data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Erase%2A&gt;</ph> não truncar os dados.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source>The <ph id="ph1">`LOB`</ph> length remains the same for a <ph id="ph2">`BLOB`</ph> data type, and the erased data is replaced by 0x00.</source>
          <target state="translated">O <ph id="ph1">`LOB`</ph> comprimento permanece o mesmo para um <ph id="ph2">`BLOB`</ph> tipo de dados, e os dados apagados são substituídos por 0x00.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source><ph id="ph1">`CLOB`</ph> and <ph id="ph2">`NCLOB`</ph> data types are replaced by spaces.</source>
          <target state="translated"><ph id="ph1">`CLOB`</ph> e <ph id="ph2">`NCLOB`</ph> tipos de dados são substituídos por espaços.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source>To write to the <ph id="ph1">`LOB`</ph>, you must have retrieved the <ph id="ph2">`LOB`</ph> using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</source>
          <target state="translated">Para gravar o <ph id="ph1">`LOB`</ph>, você deve recuperar o <ph id="ph2">`LOB`</ph> usando a cláusula FOR UPDATE na instrução SQL SELECT e você deve ter uma transação local iniciada.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source>In this release, a write operation to a read-only <ph id="ph1">`LOB`</ph> might succeed, but does not update the <ph id="ph2">`LOB`</ph> on the server.</source>
          <target state="translated">Nesta versão, uma operação de gravação para somente leitura <ph id="ph1">`LOB`</ph> pode ter êxito, mas não atualiza o <ph id="ph2">`LOB`</ph> no servidor.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source>In this case, however, the local copy of the <ph id="ph1">`LOB`</ph> is updated.</source>
          <target state="translated">Nesse caso, no entanto, a cópia local do <ph id="ph1">`LOB`</ph> é atualizado.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source>Therefore, later read operations on the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> object might return the results of the write operation.</source>
          <target state="translated">Portanto, mais tarde operações de leitura no <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> objeto pode retornar os resultados da operação de gravação.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source>The operation is not within a transaction, the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> object is null, or the connection is closed.</source>
          
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source>The object was closed or disposed.</source>
          
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source>An Oracle error has occurred.</source>
          
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Flush">
          <source>Not currently supported.</source>
          
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Flush">
          <source>In this release, this method is not functional.</source>
          <target state="translated">Nesta versão, este método não está funcionando.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.IsBatched">
          <source>Gets a value indicating whether an application called the <ph id="ph1">&lt;see cref="M:System.Data.OracleClient.OracleLob.BeginBatch" /&gt;</ph> method.</source>
          
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.IsBatched">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if application called the <ph id="ph2">&lt;see cref="M:System.Data.OracleClient.OracleLob.BeginBatch" /&gt;</ph> method, otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se o aplicativo chamado de <ph id="ph2">&lt;see cref="M:System.Data.OracleClient.OracleLob.BeginBatch" /&gt;</ph> método, caso contrário <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.IsBatched">
          <source>When using an Oracle 8.0.5 server, an Oracle "ORA-00600: internal error code" exception is thrown.</source>
          <target state="translated">Ao usar um servidor Oracle 8.0.5, um Oracle "ORA-00600: código de erro interno" exceção será lançada.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.IsBatched">
          <source>An Oracle error has occurred.</source>
          
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.IsNull">
          <source>Gets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> is a <ph id="ph2">&lt;see cref="F:System.Data.OracleClient.OracleBFile.Null" /&gt;</ph> stream.</source>
          
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.IsNull">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> is a <ph id="ph3">&lt;see cref="F:System.Data.OracleClient.OracleBFile.Null" /&gt;</ph> stream, otherwise <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se o <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> é um <ph id="ph3">&lt;see cref="F:System.Data.OracleClient.OracleBFile.Null" /&gt;</ph> fluxo, caso contrário <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.IsTemporary">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> is a temporary <ph id="ph2">&lt;see langword="LOB" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.IsTemporary">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> is a temporary <ph id="ph3">&lt;see langword="LOB" /&gt;</ph>, otherwise <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Se o <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> é um temporário <ph id="ph3">&lt;see langword="LOB" /&gt;</ph>, caso contrário, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.IsTemporary">
          <source>The following example demonstrates how to create a temporary <ph id="ph1">`LOB`</ph>.</source>
          <target state="translated">O exemplo a seguir demonstra como criar um temporário <ph id="ph1">`LOB`</ph>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.IsTemporary">
          <source>The connection is closed.</source>
          
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.IsTemporary">
          <source>The object was closed or disposed.</source>
          
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.IsTemporary">
          <source>An Oracle error has occurred.</source>
          
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.Length">
          <source>Gets a value that returns the size of the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Length">
          <source>The size of the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> in bytes.</source>
          <target state="translated">O tamanho do <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> em bytes.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Length">
          <source>The size of the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> is always returned in bytes for all data types.</source>
          <target state="translated">O tamanho do <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> sempre é retornado em bytes para todos os tipos de dados.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.Length">
          <source>The connection is closed.</source>
          
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.Length">
          <source>The object was closed or disposed.</source>
          
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.Length">
          <source>An Oracle error has occurred.</source>
          
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.LobType">
          <source>Gets a value that returns the <ph id="ph1">&lt;see langword="LOB" /&gt;</ph> data type.</source>
          
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.LobType">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleType" /&gt;</ph><ph id="ph2">&lt;see langword="LOB" /&gt;</ph> data types.</source>
          <target state="translated">Uma da <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleType" /&gt;</ph> <ph id="ph2">&lt;see langword="LOB" /&gt;</ph> tipos de dados.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.LobType">
          <source>An <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> may be one of the following <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleType&gt;</ph> data types.</source>
          <target state="translated">Um <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> pode ser um dos seguintes <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleType&gt;</ph> tipos de dados.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.LobType">
          <source>OracleType data type</source>
          <target state="translated">Tipo de dados de OracleType</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.LobType">
          <source>Description</source>
          <target state="translated">Descrição</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.LobType">
          <source>An Oracle <ph id="ph1">`BLOB`</ph> data type that contains binary data with a maximum size of 4 gigabytes.</source>
          <target state="translated">Um tipo de dados <ph id="ph1">`BLOB`</ph> do Oracle que contém dados binários com um tamanho máximo de 4 gigabytes.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.LobType">
          <source>This maps to an <ph id="ph1">&lt;xref:System.Array&gt;</ph> of type <ph id="ph2">&lt;xref:System.Byte&gt;</ph>.</source>
          <target state="translated">Isso é mapeado para um <ph id="ph1">&lt;xref:System.Array&gt;</ph> do tipo <ph id="ph2">&lt;xref:System.Byte&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.LobType">
          <source>An Oracle <ph id="ph1">`CLOB`</ph> data type that contains character data, based on the default character set on the server, with a maximum size of 4 gigabytes.</source>
          <target state="translated">Um tipo de dados <ph id="ph1">`CLOB`</ph> do Oracle que contém dados de caractere, baseados no conjunto de caracteres padrão do servidor, com um tamanho máximo de 4 gigabytes.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.LobType">
          <source>This maps to <ph id="ph1">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">Isso é mapeado para <ph id="ph1">&lt;xref:System.String&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.LobType">
          <source>An Oracle <ph id="ph1">`NCLOB`</ph> data type that contains character data, based on the national character set on the server with a maximum size of 4 gigabytes.</source>
          <target state="translated">Um Oracle <ph id="ph1">`NCLOB`</ph> tipo de dados que contém dados de caracteres, com base em conjunto no servidor com um tamanho máximo de 4 gigabytes de caracteres nacional.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.LobType">
          <source>This maps to <ph id="ph1">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">Isso é mapeado para <ph id="ph1">&lt;xref:System.String&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="F:System.Data.OracleClient.OracleLob.Null">
          <source>Represents a null <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> object.</source>
          
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.OracleClient.OracleLob.Null">
          <source>You can construct an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> that is NULL using this format:</source>
          <target state="translated">Você pode construir um <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> que é NULL usando este formato:</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.OracleClient.OracleLob.Null">
          <source>This technique is used primarily to test whether a <ph id="ph1">`LOB`</ph> returned from the server is NULL, as this example illustrates:</source>
          <target state="translated">Essa técnica é usada principalmente para testar se um <ph id="ph1">`LOB`</ph> retornado do servidor for NULL, como mostra este exemplo:</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.OracleClient.OracleLob.Null">
          <source>A NULL <ph id="ph1">`LOB`</ph> behaves similarly to a zero byte <ph id="ph2">`LOB`</ph> in that <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph> succeeds and always returns zero bytes.</source>
          <target state="translated">Um valor nulo <ph id="ph1">`LOB`</ph> se comporta da mesma forma para um byte zero <ph id="ph2">`LOB`</ph> que <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph> terá êxito e sempre retorna zero bytes.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.Position">
          <source>Gets the current read position in the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> stream.</source>
          
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Position">
          <source>The current position within the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> stream.</source>
          <target state="translated">A posição atual dentro de <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> fluxo.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Position">
          <source>The stream must support seeking to get or set the position.</source>
          <target state="translated">O fluxo deve oferecer suporte a busca obter ou definir a posição.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Position">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.CanSeek%2A&gt;</ph> property to determine whether the stream supports seeking.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.CanSeek%2A&gt;</ph> propriedade para determinar se o fluxo oferece suporte à busca.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Position">
          <source>Seeking to any location beyond the length of the stream is supported.</source>
          <target state="translated">Há suporte para busca em qualquer local além do comprimento do fluxo.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Position">
          <source>Seeking to an odd position for <ph id="ph1">`CLOB`</ph> and <ph id="ph2">`NCLOB`</ph> data types is also supported.</source>
          <target state="translated">Buscando uma posição ímpar para <ph id="ph1">`CLOB`</ph> e <ph id="ph2">`NCLOB`</ph> também há suporte para tipos de dados.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Position">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph> property.</source>
          <target state="translated">Para obter mais informações, consulte a seção comentários a <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Position">
          <source>The <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Position%2A&gt;</ph> property does not keep track of the number of bytes from the stream that have been consumed, skipped, or both.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Position%2A&gt;</ph> propriedade não manter o controle do número de bytes do fluxo que tiverem sido consumidos, ignorado, ou ambos.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.Position">
          <source>The connection is closed.</source>
          
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.Position">
          <source>The object was closed or disposed.</source>
          
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>An array of bytes.</source>
          
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>When this method returns, the buffer contains the specified byte array with the values between <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept> and (<bpt id="p2">&lt;c&gt;</bpt>offset<ept id="p2">&lt;/c&gt;</ept><ph id="ph1"> + </ph><bpt id="p3">&lt;c&gt;</bpt>count<ept id="p3">&lt;/c&gt;</ept>) replaced by the bytes read from the current source.</source>
          
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The zero-based byte offset in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which to begin storing the data read from the current stream.</source>
          
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>For <ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> and <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> data types, this must be an even number.</source>
          
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The maximum number of bytes to be read from the current stream.</source>
          
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>For <ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> and <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> data types, this must be an even number.</source>
          
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>Reads a sequence of bytes from the current <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> stream and advances the position within the stream by the number of bytes read.</source>
          
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The total number of bytes read into the buffer.</source>
          
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>This may be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.</source>
          
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph> method reads a maximum of <ph id="ph2">`count`</ph> bytes from the current stream and stores them in <ph id="ph3">`buffer`</ph> beginning at <ph id="ph4">`offset`</ph>.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph> método lê um máximo de <ph id="ph2">`count`</ph> de fluxo de bytes do atual e armazena-os em <ph id="ph3">`buffer`</ph> começando no <ph id="ph4">`offset`</ph>.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The current position within the stream is advanced by the number of bytes read; however, if an exception occurs, the current position within the stream remains unchanged.</source>
          <target state="translated">A posição atual dentro do fluxo for avançada pelo número de bytes lido; No entanto, se ocorrer uma exceção, a posição atual dentro do fluxo permanece inalterada.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph> returns the number of bytes read.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph> Retorna o número de bytes lidos.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The return value is zero only if the position is currently at the end of the stream.</source>
          <target state="translated">O valor de retorno é zero apenas se a posição do final do fluxo.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph> will block until at least one byte of data can be read, in the event that no data is available.<ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph> será bloqueada até que pelo menos um byte de dados podem ser lidos, que não há dados disponíveis.<ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>returns 0 if you attempt to read from a <ph id="ph1">`LOB`</ph> when the current position is at the end of <ph id="ph2">`LOB`</ph>.</source>
          <target state="translated">Retorna 0 se você tentar ler de um <ph id="ph1">`LOB`</ph> quando a posição atual está no final da <ph id="ph2">`LOB`</ph>.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph> can return fewer bytes than requested even if the end of the stream has not been reached.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph> pode retornar menos bytes que solicitado, mesmo se não foi atingido o fim do fluxo.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The .NET Framework Data Provider for Oracle handles all <ph id="ph1">`CLOB`</ph> and <ph id="ph2">`NCLOB`</ph> data as Unicode.</source>
          <target state="translated">O provedor de dados .NET Framework para Oracle trata todos os <ph id="ph1">`CLOB`</ph> e <ph id="ph2">`NCLOB`</ph> dados como Unicode.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>Therefore, when accessing <ph id="ph1">`CLOB`</ph> and <ph id="ph2">`NCLOB`</ph> data types, you are always dealing with the number of bytes, where each character is 2 bytes.</source>
          <target state="translated">Portanto, ao acessar <ph id="ph1">`CLOB`</ph> e <ph id="ph2">`NCLOB`</ph> tipos de dados, você sempre está lidando com o número de bytes, onde cada caractere é de 2 bytes.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>For example, if a string of text containing three characters is saved as an <ph id="ph1">`NCLOB`</ph> on an Oracle server where the character set is 4 bytes per character, and you perform a <ph id="ph2">`Read`</ph> operation, you specify the length of the string as 6 bytes, although it is stored as 12 bytes on the server.</source>
          <target state="translated">Por exemplo, se uma cadeia de caracteres de texto que contém três caracteres é salvo como um <ph id="ph1">`NCLOB`</ph> em um servidor Oracle onde o conjunto de caracteres é de 4 bytes por caractere, e você executar uma <ph id="ph2">`Read`</ph> operação, especifique o comprimento da cadeia de caracteres como 6 bytes, embora ele é armazenado como 12 bytes no servidor.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The following C# example demonstrates how to read <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> objects.</source>
          <target state="translated">O exemplo c# a seguir demonstra como ler <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>You can construct an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> that is NULL using this format:</source>
          <target state="translated">Você pode construir um <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> que é NULL usando este formato:</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>This technique is used primarily to test whether a <ph id="ph1">`LOB`</ph> returned from the server is NULL, as the following example illustrates.</source>
          <target state="translated">Essa técnica é usada principalmente para testar se um <ph id="ph1">`LOB`</ph> retornado do servidor for NULL, como mostra o exemplo a seguir.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>A NULL <ph id="ph1">`LOB`</ph> behaves similarly to a zero byte <ph id="ph2">`LOB`</ph> in that <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph> succeeds and always returns zero bytes.</source>
          <target state="translated">Um valor nulo <ph id="ph1">`LOB`</ph> se comporta da mesma forma para um byte zero <ph id="ph2">`LOB`</ph> que <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph> terá êxito e sempre retorna zero bytes.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>A value in the <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> parameter is not positive.</source>
          
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The sum of the offset and count parameters is larger than the buffer length.</source>
          
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>A value specified in the <ph id="ph1">&lt;paramref name="amount" /&gt;</ph> or <ph id="ph2">&lt;paramref name="offset" /&gt;</ph> parameter is less than zero or greater than 4 gigabytes.</source>
          
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The operation is not within a transaction, the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> object is null, or the connection is closed.</source>
          
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The object was closed or disposed.</source>
          
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>An Oracle error has occurred.</source>
          
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>A byte offset relative to origin.</source>
          
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept> is negative, the new position precedes the position specified by <bpt id="p2">&lt;c&gt;</bpt>origin<ept id="p2">&lt;/c&gt;</ept> by the number of bytes specified by <bpt id="p3">&lt;c&gt;</bpt>offset<ept id="p3">&lt;/c&gt;</ept>.</source>
          
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept> is zero, the new position is the position specified by <bpt id="p2">&lt;c&gt;</bpt>origin<ept id="p2">&lt;/c&gt;</ept>.</source>
          
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept> is positive, the new position follows the position specified by <bpt id="p2">&lt;c&gt;</bpt>origin<ept id="p2">&lt;/c&gt;</ept> by the number of bytes specified by <bpt id="p3">&lt;c&gt;</bpt>offset<ept id="p3">&lt;/c&gt;</ept>.</source>
          
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>A value of type <ph id="ph1">&lt;see cref="T:System.IO.SeekOrigin" /&gt;</ph> indicating the reference point used to obtain the new position.</source>
          
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>Sets the position on the current <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> stream.</source>
          
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>The new position within the current stream.</source>
          
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>If <ph id="ph1">`offset`</ph> is negative, the new position must precede the position specified by <ph id="ph2">`origin`</ph> by the number of bytes specified by <ph id="ph3">`offset`</ph>.</source>
          <target state="translated">Se <ph id="ph1">`offset`</ph> é negativo, a nova posição deve preceder a posição especificada pelo <ph id="ph2">`origin`</ph> pelo número de bytes especificado por <ph id="ph3">`offset`</ph>.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>If <ph id="ph1">`offset`</ph> is zero, the new position must be the position specified by <ph id="ph2">`origin`</ph>.</source>
          <target state="translated">Se <ph id="ph1">`offset`</ph> for zero, a nova posição deve ser a posição especificada pelo <ph id="ph2">`origin`</ph>.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>If <ph id="ph1">`offset`</ph> is positive, the new position must follow the position specified by <ph id="ph2">`origin`</ph> by the number of bytes specified by <ph id="ph3">`offset`</ph>.</source>
          <target state="translated">Se <ph id="ph1">`offset`</ph> for positivo, a nova posição deve seguir a posição especificada pelo <ph id="ph2">`origin`</ph> pelo número de bytes especificado por <ph id="ph3">`offset`</ph>.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>Seeking to any location beyond the length of the stream is supported.</source>
          <target state="translated">Há suporte para busca em qualquer local além do comprimento do fluxo.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>Seeking to an odd position for <ph id="ph1">`CLOB`</ph> and <ph id="ph2">`NCLOB`</ph> data types is also supported.</source>
          <target state="translated">Buscando uma posição ímpar para <ph id="ph1">`CLOB`</ph> e <ph id="ph2">`NCLOB`</ph> também há suporte para tipos de dados.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph> property.</source>
          <target state="translated">Para obter mais informações, consulte a seção comentários a <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph> propriedade.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>The <ph id="ph1">&lt;paramref name="origin" /&gt;</ph> parameter does not contain a valid value.</source>
          
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>The resulting position is beyond the length of the value.</source>
          
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> object was closed or disposed.</source>
          
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>An Oracle error has occurred.</source>
          
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
          <source>The desired length of the current <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> stream in bytes.</source>
          
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
          <source>For <ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> and <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> data types, this must be an even number.</source>
          
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
          <source>Sets the length of the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> stream to a value less than the current length.</source>
          
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
          <source>An attempt to increase the length of the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> stream fails, and returns "Message: ORA-22926: specified trim length is greater than current LOB value's length" from the Oracle server.</source>
          <target state="translated">Uma tentativa de aumentar o tamanho do <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> fluxo falhará e retornará "mensagem: ORA-22926: especificado trim comprimento é maior que o comprimento do valor de LOB atual" do servidor Oracle.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
          <source>A stream must support both writing and seeking for <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.SetLength%2A&gt;</ph> to function.</source>
          <target state="translated">Um fluxo deve dão suporte a gravação e busca de <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.SetLength%2A&gt;</ph> à função.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
          <source>The .NET Framework Data Provider for Oracle handles all <ph id="ph1">`CLOB`</ph> and <ph id="ph2">`NCLOB`</ph> data as Unicode.</source>
          <target state="translated">O provedor de dados .NET Framework para Oracle trata todos os <ph id="ph1">`CLOB`</ph> e <ph id="ph2">`NCLOB`</ph> dados como Unicode.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
          <source>Therefore, when accessing <ph id="ph1">`CLOB`</ph> and <ph id="ph2">`NCLOB`</ph> data types, you are always dealing with the number of bytes, where each character is 2 bytes.</source>
          <target state="translated">Portanto, ao acessar <ph id="ph1">`CLOB`</ph> e <ph id="ph2">`NCLOB`</ph> tipos de dados, você sempre está lidando com o número de bytes, onde cada caractere é de 2 bytes.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
          <source>For example, if a string of text containing three characters is saved as an <ph id="ph1">`NCLOB`</ph> on an Oracle server where the character set is 4 bytes per character, and you perform a <ph id="ph2">`SetLength`</ph> operation, you specify the length of the string as 6 bytes, although it is stored as 12 bytes on the server.</source>
          <target state="translated">Por exemplo, se uma cadeia de caracteres de texto que contém três caracteres é salvo como um <ph id="ph1">`NCLOB`</ph> em um servidor Oracle onde o conjunto de caracteres é de 4 bytes por caractere, e você executar uma <ph id="ph2">`SetLength`</ph> operação, especifique o comprimento da cadeia de caracteres como 6 bytes, embora ele é armazenado como 12 bytes no servidor.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
          <source>To write to the <ph id="ph1">`LOB`</ph>, you must have retrieved the <ph id="ph2">`LOB`</ph> using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</source>
          <target state="translated">Para gravar o <ph id="ph1">`LOB`</ph>, você deve recuperar o <ph id="ph2">`LOB`</ph> usando a cláusula FOR UPDATE na instrução SQL SELECT e você deve ter uma transação local iniciada.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
          <source>A write operation to a read-only <ph id="ph1">`LOB`</ph> might succeed, but does not update the <ph id="ph2">`LOB`</ph> on the server.</source>
          <target state="translated">A operação de gravação para somente leitura <ph id="ph1">`LOB`</ph> pode ter êxito, mas não atualiza o <ph id="ph2">`LOB`</ph> no servidor.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
          <source>In this case, however, the local copy of the <ph id="ph1">`LOB`</ph> is updated.</source>
          <target state="translated">Nesse caso, no entanto, a cópia local do <ph id="ph1">`LOB`</ph> é atualizado.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
          <source>Therefore, later read operations on the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> object might return the results of the write operation.</source>
          <target state="translated">Portanto, mais tarde operações de leitura no <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> objeto pode retornar os resultados da operação de gravação.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
          <source>A value specified in the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter for a <ph id="ph2">&lt;see langword="CLOB" /&gt;</ph> or <ph id="ph3">&lt;see langword="NCLOB" /&gt;</ph> data type is not even.</source>
          
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
          <source>-or-</source>
          
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
          <source>A value specified in the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter is less than zero or greater than 4 gigabytes.</source>
          
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
          <source>The operation is not within a transaction, the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> object is null, or the connection is closed.</source>
          
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
          <source>The object was closed or disposed.</source>
          
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
          <source>An Oracle error has occurred.</source>
          
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.Value">
          <source>Gets the common language runtime stream value equivalent of the underlying value.</source>
          
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Value">
          <source>For <ph id="ph1">&lt;see cref="F:System.Data.OracleClient.OracleType.Blob" /&gt;</ph>, an array of type <ph id="ph2">&lt;see langword="Byte[]" /&gt;</ph>.</source>
          <target state="translated">Para <ph id="ph1">&lt;see cref="F:System.Data.OracleClient.OracleType.Blob" /&gt;</ph>, uma matriz do tipo <ph id="ph2">&lt;see langword="Byte[]" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Value">
          <source>For <ph id="ph1">&lt;see cref="F:System.Data.OracleClient.OracleType.Clob" /&gt;</ph> and <ph id="ph2">&lt;see cref="F:System.Data.OracleClient.OracleType.NClob" /&gt;</ph>, a <ph id="ph3">&lt;see langword="String" /&gt;</ph>.</source>
          <target state="translated">Para <ph id="ph1">&lt;see cref="F:System.Data.OracleClient.OracleType.Clob" /&gt;</ph> e <ph id="ph2">&lt;see cref="F:System.Data.OracleClient.OracleType.NClob" /&gt;</ph>, um <ph id="ph3">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Value">
          <source>For null data, <ph id="ph1">&lt;see cref="T:System.DBNull" /&gt;</ph>.</source>
          <target state="translated">Para dados nulos, <ph id="ph1">&lt;see cref="T:System.DBNull" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Value">
          <source>For <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleType.Blob&gt;</ph> data types, <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob.Value%2A&gt;</ph> returns the entire underlying data as a contiguous array of type <ph id="ph3">`Byte[]`</ph>.</source>
          <target state="translated">Para <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleType.Blob&gt;</ph> tipos de dados, <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob.Value%2A&gt;</ph> retorna todos os dados subjacentes como uma matriz do tipo de contígua <ph id="ph3">`Byte[]`</ph>.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Value">
          <source>For <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleType.Clob&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleType.NClob&gt;</ph> data types, <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob.Value%2A&gt;</ph> returns all the data as a <ph id="ph4">`String`</ph> data type.</source>
          <target state="translated">Para <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleType.Clob&gt;</ph> e <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleType.NClob&gt;</ph> tipos de dados, <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob.Value%2A&gt;</ph> retorna todos os dados como um <ph id="ph4">`String`</ph> tipo de dados.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Value">
          <source>For null data, <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Value%2A&gt;</ph> returns <ph id="ph2">&lt;xref:System.DBNull&gt;</ph>.</source>
          <target state="translated">Para dados nulos, <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Value%2A&gt;</ph> retorna <ph id="ph2">&lt;xref:System.DBNull&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Value">
          <source>By comparing the returned values, you can distinguish among empty data, null data, and data.</source>
          <target state="translated">Comparando os valores retornados, você pode distinguir entre os dados vazios, nulo dados e dados.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Value">
          <source>A benefit of using <ph id="ph1">`LOB`</ph> data types is the capability to retrieve large amounts of data in chunks at the client.</source>
          <target state="translated">Uma vantagem de usar <ph id="ph1">`LOB`</ph> tipos de dados é a capacidade de recuperar grandes quantidades de dados em partes no cliente.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Value">
          <source>However, when you use <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Value%2A&gt;</ph>, you obtain all the data for the <ph id="ph2">`LOB`</ph> column as one contiguous chunk, which can significantly increase application overhead.</source>
          <target state="translated">No entanto, quando você usa <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Value%2A&gt;</ph>, obter todos os dados para o <ph id="ph2">`LOB`</ph> coluna como uma parte de contígua, que pode aumentar significativamente a sobrecarga de aplicativo.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.Value">
          <source>The object was closed or disposed.</source>
          
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.Value">
          <source>An Oracle error has occurred.</source>
          
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>An array of bytes.</source>
          
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>This method copies the number of bytes specified in <bpt id="p1">&lt;c&gt;</bpt>count<ept id="p1">&lt;/c&gt;</ept> from <bpt id="p2">&lt;c&gt;</bpt>buffer<ept id="p2">&lt;/c&gt;</ept> to the current stream.</source>
          
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The zero-based byte offset in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which to begin copying bytes to the current stream.</source>
          
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>For <ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> and <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> data types, this must be an even number.</source>
          
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes to be written to the current stream.</source>
          
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>For <ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> and <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> data types, this must be an even number.</source>
          
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>Writes a sequence of bytes to the current <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> stream, and advances the current position within this stream by the number of bytes written.</source>
          
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>If the write operation is successful, the position within the stream advances by the number of bytes written.</source>
          <target state="translated">Se a operação de gravação for bem-sucedida, a posição dentro do fluxo avança pelo número de bytes gravados.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>If an exception occurs, the position within the stream remains unchanged.</source>
          <target state="translated">Se ocorrer uma exceção, a posição dentro do fluxo permanecerá inalterada.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>Writing beyond the end of <ph id="ph1">`LOB`</ph> is allowed and enlarges the <ph id="ph2">`LOB`</ph> by the number of bytes written.</source>
          <target state="translated">Gravando além do fim de <ph id="ph1">`LOB`</ph> é permitida e amplia o <ph id="ph2">`LOB`</ph> pelo número de bytes gravados.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The .NET Framework Data Provider for Oracle handles all <ph id="ph1">`CLOB`</ph> and <ph id="ph2">`NCLOB`</ph> data as Unicode.</source>
          <target state="translated">O provedor de dados .NET Framework para Oracle trata todos os <ph id="ph1">`CLOB`</ph> e <ph id="ph2">`NCLOB`</ph> dados como Unicode.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>Therefore, when accessing <ph id="ph1">`CLOB`</ph> and <ph id="ph2">`NCLOB`</ph> data types, you are always dealing with the number of bytes, where each character is 2 bytes.</source>
          <target state="translated">Portanto, ao acessar <ph id="ph1">`CLOB`</ph> e <ph id="ph2">`NCLOB`</ph> tipos de dados, você sempre está lidando com o número de bytes, onde cada caractere é de 2 bytes.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>For example, if a string of text containing three characters is saved as an <ph id="ph1">`NCLOB`</ph> on an Oracle server where the character set is 4 bytes per character, and you perform a <ph id="ph2">`Write`</ph> operation, you specify the length of the string as 6 bytes, although it is stored as 12 bytes on the server.</source>
          <target state="translated">Por exemplo, se uma cadeia de caracteres de texto que contém três caracteres é salvo como um <ph id="ph1">`NCLOB`</ph> em um servidor Oracle onde o conjunto de caracteres é de 4 bytes por caractere, e você executar uma <ph id="ph2">`Write`</ph> operação, especifique o comprimento da cadeia de caracteres como 6 bytes, embora ele é armazenado como 12 bytes no servidor.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>To write to the <ph id="ph1">`LOB`</ph>, you must have retrieved the <ph id="ph2">`LOB`</ph> using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</source>
          <target state="translated">Para gravar o <ph id="ph1">`LOB`</ph>, você deve recuperar o <ph id="ph2">`LOB`</ph> usando a cláusula FOR UPDATE na instrução SQL SELECT e você deve ter uma transação local iniciada.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The following C# example demonstrates how to write to <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> objects.</source>
          <target state="translated">O exemplo c# a seguir demonstra como gravar <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>A write operation to a read-only <ph id="ph1">`LOB`</ph> might succeed, but does not update the <ph id="ph2">`LOB`</ph> on the server.</source>
          <target state="translated">A operação de gravação para somente leitura <ph id="ph1">`LOB`</ph> pode ter êxito, mas não atualiza o <ph id="ph2">`LOB`</ph> no servidor.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>In this case, however, the local copy of the <ph id="ph1">`LOB`</ph> is updated.</source>
          <target state="translated">Nesse caso, no entanto, a cópia local do <ph id="ph1">`LOB`</ph> é atualizado.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>Therefore, later read operations on the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> object might return the results of the write operation.</source>
          <target state="translated">Portanto, mais tarde operações de leitura no <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> objeto pode retornar os resultados da operação de gravação.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> parameter is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>A value in the <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> parameter is not positive.</source>
          
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The sum of the <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> parameters is larger than the <ph id="ph3">&lt;paramref name="buffer" /&gt;</ph> length.</source>
          
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>A value specified in the <ph id="ph1">&lt;paramref name="count" /&gt;</ph> or <ph id="ph2">&lt;paramref name="offset" /&gt;</ph> parameter is less than zero or greater than 4 gigabytes.</source>
          
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>You must specify <ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> and <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> data types as an even number of bytes.</source>
          
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The operation is not within a transaction, the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> object is null, or the connection is closed.</source>
          
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The object was closed or disposed.</source>
          
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>An Oracle error has occurred.</source>
          
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.WriteByte(System.Byte)">
          <source>The byte to write to the stream.</source>
          
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.WriteByte(System.Byte)">
          <source>Writes a byte to the current position in the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> stream, and advances the position within the stream by one byte.</source>
          
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.WriteByte(System.Byte)">
          <source>If the write operation is successful, the position within the stream advances by one byte.</source>
          <target state="translated">Se a operação de gravação for bem-sucedida, a posição dentro do fluxo avança por um byte.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.WriteByte(System.Byte)">
          <source>If an exception occurs, the position within the stream remains unchanged.</source>
          <target state="translated">Se ocorrer uma exceção, a posição dentro do fluxo permanecerá inalterada.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.WriteByte(System.Byte)">
          <source>Writing beyond the end of the <ph id="ph1">`LOB`</ph> is allowed and enlarges the <ph id="ph2">`LOB`</ph> by one byte.</source>
          <target state="translated">Gravando além do fim do <ph id="ph1">`LOB`</ph> é permitida e amplia o <ph id="ph2">`LOB`</ph> por um byte.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.WriteByte(System.Byte)">
          <source>To write to the <ph id="ph1">`LOB`</ph>, you must have retrieved the <ph id="ph2">`LOB`</ph> using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</source>
          <target state="translated">Para gravar o <ph id="ph1">`LOB`</ph>, você deve recuperar o <ph id="ph2">`LOB`</ph> usando a cláusula FOR UPDATE na instrução SQL SELECT e você deve ter uma transação local iniciada.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.WriteByte(System.Byte)">
          <source>A write operation to a read-only <ph id="ph1">`LOB`</ph> might succeed, but does not update the <ph id="ph2">`LOB`</ph> on the server.</source>
          <target state="translated">A operação de gravação para somente leitura <ph id="ph1">`LOB`</ph> pode ter êxito, mas não atualiza o <ph id="ph2">`LOB`</ph> no servidor.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.WriteByte(System.Byte)">
          <source>In this case, however, the local copy of the <ph id="ph1">`LOB`</ph> is updated.</source>
          <target state="translated">Nesse caso, no entanto, a cópia local do <ph id="ph1">`LOB`</ph> é atualizado.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.WriteByte(System.Byte)">
          <source>Therefore, later read operations on the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> object might return the results of the write operation.</source>
          <target state="translated">Portanto, mais tarde operações de leitura no <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> objeto pode retornar os resultados da operação de gravação.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>