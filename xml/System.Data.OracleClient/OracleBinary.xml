<Type Name="OracleBinary" FullName="System.Data.OracleClient.OracleBinary">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ea84bd4e08d1a60f81423e782e8c4354e7db7722" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37676609" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct OracleBinary : IComparable, System.Data.SqlTypes.INullable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit OracleBinary extends System.ValueType implements class System.Data.SqlTypes.INullable, class System.IComparable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleBinary" />
  <TypeSignature Language="VB.NET" Value="Public Structure OracleBinary&#xA;Implements IComparable, INullable" />
  <TypeSignature Language="C++ CLI" Value="public value class OracleBinary : IComparable, System::Data::SqlTypes::INullable" />
  <TypeSignature Language="F#" Value="type OracleBinary = struct&#xA;    interface INullable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.SqlTypes.INullable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="ae789-101">Represents a variable-length stream of binary data to be stored in or retrieved from a database.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ae789-101">Represents a variable-length stream of binary data to be stored in or retrieved from a database.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae789-102">Para obter um <xref:System.Data.OracleClient.OracleBinary> do objeto, chame o <xref:System.Data.OracleClient.OracleDataReader.GetOracleBinary%2A> m√©todo.</span><span class="sxs-lookup"><span data-stu-id="ae789-102">To obtain an <xref:System.Data.OracleClient.OracleBinary> object, call the <xref:System.Data.OracleClient.OracleDataReader.GetOracleBinary%2A> method.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleBinary (byte[] b);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (b As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleBinary(cli::array &lt;System::Byte&gt; ^ b);" />
      <MemberSignature Language="F#" Value="new System.Data.OracleClient.OracleBinary : byte[] -&gt; System.Data.OracleClient.OracleBinary" Usage="new System.Data.OracleClient.OracleBinary b" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="b" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="b">
          <span data-ttu-id="ae789-103">The byte array to be stored in the <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-103">The byte array to be stored in the <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae789-104">Initializes a new instance of the <see langword="OracleBinary" /> structure, setting the <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> property to the contents of the supplied byte array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-104">Initializes a new instance of the <see langword="OracleBinary" /> structure, setting the <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> property to the contents of the supplied byte array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="oracleBinary.CompareTo obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="ae789-105">The object to be compared to this <see langword="OracleBinary" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-105">The object to be compared to this <see langword="OracleBinary" /> structure.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae789-106">Compares this <see cref="T:System.Data.OracleClient.OracleBinary" /> object to the supplied object and returns an indication of their relative values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-106">Compares this <see cref="T:System.Data.OracleClient.OracleBinary" /> object to the supplied object and returns an indication of their relative values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae789-107">A signed number indicating the relative values of this <see langword="OracleBinary" /> structure and the object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-107">A signed number indicating the relative values of this <see langword="OracleBinary" /> structure and the object.</span>
          </span>
          <span data-ttu-id="ae789-108">
            <list type="table">
              <listheader>
                <term> Return Value  </term>
                <description> Condition  </description>
              </listheader>
              <item>
                <term> Less than zero  </term>
                <description> The value of this <see langword="OracleBinary" /> object is less than the object.  </description>
              </item>
              <item>
                <term> Zero  </term>
                <description> This <see langword="OracleBinary" /> object is the same as the object.  </description>
              </item>
              <item>
                <term> Greater than zero  </term>
                <description> This <see langword="OracleBinary" /> object is greater than the object.  -or-  The object is a null reference.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-108">
              <list type="table">
                <listheader>
                  <term> Return Value  </term>
                  <description> Condition  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description> The value of this <see langword="OracleBinary" /> object is less than the object.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> This <see langword="OracleBinary" /> object is the same as the object.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description> This <see langword="OracleBinary" /> object is greater than the object.  -or-  The object is a null reference.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Concat">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBinary Concat (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.OracleClient.OracleBinary Concat(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.Concat(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Concat (x As OracleBinary, y As OracleBinary) As OracleBinary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBinary Concat(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberSignature Language="F#" Value="static member Concat : System.Data.OracleClient.OracleBinary * System.Data.OracleClient.OracleBinary -&gt; System.Data.OracleClient.OracleBinary" Usage="System.Data.OracleClient.OracleBinary.Concat (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBinary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="ae789-109">An <see langword="OracleBinary" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-109">An <see langword="OracleBinary" /> structure.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="ae789-110">An <see langword="OracleBinary" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-110">An <see langword="OracleBinary" /> structure.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae789-111">Concatenates two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to create a new <see langword="OracleBinary" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-111">Concatenates two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to create a new <see langword="OracleBinary" /> structure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae789-112">An <see langword="OracleBinary" /> structure with the concatenated values of the <paramref name="x" /> and <paramref name="y" /> parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-112">An <see langword="OracleBinary" /> structure with the concatenated values of the <paramref name="x" /> and <paramref name="y" /> parameters.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ae789-113">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if they are equal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-113">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if they are equal.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="oracleBinary.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="ae789-114">The object to be compared.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-114">The object to be compared.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae789-115">Compares the supplied object parameter to the <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> property of the <see cref="T:System.Data.OracleClient.OracleBinary" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-115">Compares the supplied object parameter to the <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> property of the <see cref="T:System.Data.OracleClient.OracleBinary" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae789-116">
            <see langword="true" /> if object is an instance of <see cref="T:System.Data.OracleClient.OracleBinary" /> and the two are equal; otherwise <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-116">
              <see langword="true" /> if object is an instance of <see cref="T:System.Data.OracleClient.OracleBinary" /> and the two are equal; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean Equals (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.OracleClient.OracleBoolean Equals(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.Equals(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean Equals(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberSignature Language="F#" Value="static member Equals : System.Data.OracleClient.OracleBinary * System.Data.OracleClient.OracleBinary -&gt; System.Data.OracleClient.OracleBoolean" Usage="System.Data.OracleClient.OracleBinary.Equals (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="ae789-117">An <see langword="OracleBinary" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-117">An <see langword="OracleBinary" /> structure.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="ae789-118">An <see langword="OracleBinary" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-118">An <see langword="OracleBinary" /> structure.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae789-119">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if they are equal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-119">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if they are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae789-120">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the two instances are equal or <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> if the two instances are not equal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-120">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the two instances are equal or <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> if the two instances are not equal.</span>
          </span>
          <span data-ttu-id="ae789-121">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-121">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="oracleBinary.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ae789-122">Returns the hash code for this <see cref="T:System.Data.OracleClient.OracleBinary" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-122">Returns the hash code for this <see cref="T:System.Data.OracleClient.OracleBinary" /> structure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae789-123">A 32-bit signed integer hash code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-123">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GreaterThan">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean GreaterThan (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.OracleClient.OracleBoolean GreaterThan(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.GreaterThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GreaterThan (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean GreaterThan(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberSignature Language="F#" Value="static member GreaterThan : System.Data.OracleClient.OracleBinary * System.Data.OracleClient.OracleBinary -&gt; System.Data.OracleClient.OracleBoolean" Usage="System.Data.OracleClient.OracleBinary.GreaterThan (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="ae789-124">An <see langword="OracleBinary" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-124">An <see langword="OracleBinary" /> structure.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="ae789-125">An <see langword="OracleBinary" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-125">An <see langword="OracleBinary" /> structure.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae789-126">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if the first is greater than the second.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-126">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if the first is greater than the second.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae789-127">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is greater than the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-127">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is greater than the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span>
          </span>
          <span data-ttu-id="ae789-128">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-128">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean GreaterThanOrEqual (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.OracleClient.OracleBoolean GreaterThanOrEqual(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.GreaterThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GreaterThanOrEqual (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean GreaterThanOrEqual(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberSignature Language="F#" Value="static member GreaterThanOrEqual : System.Data.OracleClient.OracleBinary * System.Data.OracleClient.OracleBinary -&gt; System.Data.OracleClient.OracleBoolean" Usage="System.Data.OracleClient.OracleBinary.GreaterThanOrEqual (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="ae789-129">An <see langword="OracleBinary" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-129">An <see langword="OracleBinary" /> structure.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="ae789-130">An <see langword="OracleBinary" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-130">An <see langword="OracleBinary" /> structure.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae789-131">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if the first is greater than or equal to the second.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-131">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if the first is greater than or equal to the second.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae789-132">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is greater than or equal to the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-132">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is greater than or equal to the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span>
          </span>
          <span data-ttu-id="ae789-133">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-133">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNull" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBinary.IsNull" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNull { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNull : bool" Usage="System.Data.OracleClient.OracleBinary.IsNull" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.SqlTypes.INullable.IsNull</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ae789-134">Gets a value indicating whether the <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> property of the <see cref="T:System.Data.OracleClient.OracleBinary" /> structure is null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-134">Gets a value indicating whether the <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> property of the <see cref="T:System.Data.OracleClient.OracleBinary" /> structure is null.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ae789-135">
            <see langword="true" /> Se <see langword="Value" /> for nulo, caso contr√°rio, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-135">
              <see langword="true" /> if <see langword="Value" /> is null, otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public byte this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBinary.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte default[int] { System::Byte get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : byte" Usage="System.Data.OracleClient.OracleBinary.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="ae789-136">The position of the byte to be retrieved.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-136">The position of the byte to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae789-137">Gets the single byte from the <see langword="Value" /> property located at the position indicated by the integer parameter, <paramref name="index" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-137">Gets the single byte from the <see langword="Value" /> property located at the position indicated by the integer parameter, <paramref name="index" />.</span>
          </span>
          <span data-ttu-id="ae789-138">If <paramref name="index" /> indicates a position beyond the end of the byte array, an exception is raised.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-138">If <paramref name="index" /> indicates a position beyond the end of the byte array, an exception is raised.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ae789-139">O byte localizado na posi√ß√£o indicada pelo par√¢metro inteiro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-139">The byte located at the position indicated by the integer parameter.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae789-140">Para evitar gerar uma `OracleNullValueException`, sempre verifique a <xref:System.Data.OracleClient.OracleBinary.IsNull%2A> propriedade e o `Length` propriedade antes da leitura `this`.</span><span class="sxs-lookup"><span data-stu-id="ae789-140">To avoid raising an `OracleNullValueException`, always check the <xref:System.Data.OracleClient.OracleBinary.IsNull%2A> property and the `Length` property before reading `this`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBinary.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int" Usage="System.Data.OracleClient.OracleBinary.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ae789-141">Gets the length in bytes of the <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-141">Gets the length in bytes of the <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> property.</span>
          </span>
          <span data-ttu-id="ae789-142">This property is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-142">This property is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ae789-143">O comprimento dos dados bin√°rios no <see langword="Value" /> propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-143">The length of the binary data in the <see langword="Value" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae789-144">Para evitar gerar uma `OracleNullValueException`, sempre verifique a <xref:System.Data.OracleClient.OracleBinary.IsNull%2A> propriedade antes de ler o `Length` propriedade.</span><span class="sxs-lookup"><span data-stu-id="ae789-144">To avoid raising an `OracleNullValueException`, always check the <xref:System.Data.OracleClient.OracleBinary.IsNull%2A> property before reading the `Length` property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LessThan">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean LessThan (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.OracleClient.OracleBoolean LessThan(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.LessThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LessThan (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean LessThan(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberSignature Language="F#" Value="static member LessThan : System.Data.OracleClient.OracleBinary * System.Data.OracleClient.OracleBinary -&gt; System.Data.OracleClient.OracleBoolean" Usage="System.Data.OracleClient.OracleBinary.LessThan (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="ae789-145">An <see langword="OracleBinary" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-145">An <see langword="OracleBinary" /> structure.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="ae789-146">An <see langword="OracleBinary" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-146">An <see langword="OracleBinary" /> structure.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae789-147">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if the first is less than the second.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-147">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if the first is less than the second.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae789-148">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is less than the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-148">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is less than the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span>
          </span>
          <span data-ttu-id="ae789-149">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-149">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean LessThanOrEqual (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.OracleClient.OracleBoolean LessThanOrEqual(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.LessThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LessThanOrEqual (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean LessThanOrEqual(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberSignature Language="F#" Value="static member LessThanOrEqual : System.Data.OracleClient.OracleBinary * System.Data.OracleClient.OracleBinary -&gt; System.Data.OracleClient.OracleBoolean" Usage="System.Data.OracleClient.OracleBinary.LessThanOrEqual (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="ae789-150">An <see langword="OracleBinary" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-150">An <see langword="OracleBinary" /> structure.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="ae789-151">An <see langword="OracleBinary" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-151">An <see langword="OracleBinary" /> structure.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae789-152">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if the first is less than or equal to the second.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-152">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if the first is less than or equal to the second.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae789-153">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is less than or equal to the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-153">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is less than or equal to the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span>
          </span>
          <span data-ttu-id="ae789-154">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-154">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotEquals">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean NotEquals (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.OracleClient.OracleBoolean NotEquals(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.NotEquals(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NotEquals (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean NotEquals(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberSignature Language="F#" Value="static member NotEquals : System.Data.OracleClient.OracleBinary * System.Data.OracleClient.OracleBinary -&gt; System.Data.OracleClient.OracleBoolean" Usage="System.Data.OracleClient.OracleBinary.NotEquals (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="ae789-155">An <see langword="OracleBinary" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-155">An <see langword="OracleBinary" /> structure.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="ae789-156">An <see langword="OracleBinary" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-156">An <see langword="OracleBinary" /> structure.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae789-157">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if they are not equal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-157">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if they are not equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae789-158">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the two instances are not equal or <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> if the two instances are equal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-158">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the two instances are not equal or <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> if the two instances are equal.</span>
          </span>
          <span data-ttu-id="ae789-159">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-159">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static readonly System.Data.OracleClient.OracleBinary Null;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Data.OracleClient.OracleBinary Null" />
      <MemberSignature Language="DocId" Value="F:System.Data.OracleClient.OracleBinary.Null" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Null As OracleBinary " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Data::OracleClient::OracleBinary Null;" />
      <MemberSignature Language="F#" Value=" staticval mutable Null : System.Data.OracleClient.OracleBinary" Usage="System.Data.OracleClient.OracleBinary.Null" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBinary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ae789-160">Represents a null value that can be assigned to the <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> property of an <see cref="T:System.Data.OracleClient.OracleBinary" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-160">Represents a null value that can be assigned to the <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> property of an <see cref="T:System.Data.OracleClient.OracleBinary" /> structure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae789-161">`Null` funciona como uma constante para o `OracleBinary` estrutura.</span><span class="sxs-lookup"><span data-stu-id="ae789-161">`Null` functions as a constant for the `OracleBinary` structure.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.OracleClient.OracleBinary.IsNull" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBinary operator + (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.OracleClient.OracleBinary op_Addition(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.op_Addition(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (x As OracleBinary, y As OracleBinary) As OracleBinary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBinary operator +(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Data.OracleClient.OracleBinary * System.Data.OracleClient.OracleBinary -&gt; System.Data.OracleClient.OracleBinary" Usage="x + y" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBinary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="ae789-162">An <see langword="OracleBinary" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-162">An <see langword="OracleBinary" /> object.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="ae789-163">An <see langword="OracleBinary" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-163">An <see langword="OracleBinary" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae789-164">Concatenates the two <see cref="T:System.Data.OracleClient.OracleBinary" /> parameters to create a new <see langword="OracleBinary" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-164">Concatenates the two <see cref="T:System.Data.OracleClient.OracleBinary" /> parameters to create a new <see langword="OracleBinary" /> structure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae789-165">The concatenated values of the <paramref name="x" /> and <paramref name="y" /> parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-165">The concatenated values of the <paramref name="x" /> and <paramref name="y" /> parameters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae789-166">`x` aparecer√° primeiro na resultante `OracleBinary`, seguido por `y`.</span><span class="sxs-lookup"><span data-stu-id="ae789-166">`x` will appear first in the resulting `OracleBinary`, followed by `y`.</span></span>  
  
 <span data-ttu-id="ae789-167">[Visual Basic]</span><span class="sxs-lookup"><span data-stu-id="ae789-167">[Visual Basic]</span></span>  
  
 <span data-ttu-id="ae789-168">No Visual Basic, voc√™ pode usar os operadores definidos por uma classe, mas voc√™ n√£o pode substitu√≠-las ou criar seus pr√≥prios.</span><span class="sxs-lookup"><span data-stu-id="ae789-168">In Visual Basic, you can use the operators defined by a class, but you cannot override them or create your own.</span></span>  
  
 <span data-ttu-id="ae789-169">√â o m√©todo equivalente para esse operador <xref:System.Data.OracleClient.OracleBinary.Concat%28System.Data.OracleClient.OracleBinary%2CSystem.Data.OracleClient.OracleBinary%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="ae789-169">The equivalent method for this operator is <xref:System.Data.OracleClient.OracleBinary.Concat%28System.Data.OracleClient.OracleBinary%2CSystem.Data.OracleClient.OracleBinary%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean operator == (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.OracleClient.OracleBoolean op_Equality(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.op_Equality(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean operator ==(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Data.OracleClient.OracleBinary * System.Data.OracleClient.OracleBinary -&gt; System.Data.OracleClient.OracleBoolean" Usage="x = y" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="ae789-170">An <see langword="OracleBinary" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-170">An <see langword="OracleBinary" /> object.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="ae789-171">An <see langword="OracleBinary" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-171">An <see langword="OracleBinary" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae789-172">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if they are equal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-172">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if they are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae789-173">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the two instances are equal or <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> if the two instances are not equal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-173">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the two instances are equal or <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> if the two instances are not equal.</span>
          </span>
          <span data-ttu-id="ae789-174">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-174">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="ae789-175">√â o m√©todo equivalente para esse operador <xref:System.Data.OracleClient.OracleBinary.Equals%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="ae789-175">The equivalent method for this operator is <xref:System.Data.OracleClient.OracleBinary.Equals%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator byte[] (System.Data.OracleClient.OracleBinary x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int8[] op_Explicit(valuetype System.Data.OracleClient.OracleBinary x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.op_Explicit(System.Data.OracleClient.OracleBinary)~System.Byte[]" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (x As OracleBinary) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator cli::array &lt;System::Byte&gt; ^(System::Data::OracleClient::OracleBinary x);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Data.OracleClient.OracleBinary -&gt; byte[]" Usage="System.Data.OracleClient.OracleBinary.op_Explicit x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="ae789-176">An <see cref="T:System.Data.OracleClient.OracleBinary" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-176">An <see cref="T:System.Data.OracleClient.OracleBinary" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae789-177">Gets the contents of the <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> property of the <see cref="T:System.Data.OracleClient.OracleBinary" /> parameter as an array of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-177">Gets the contents of the <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> property of the <see cref="T:System.Data.OracleClient.OracleBinary" /> parameter as an array of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae789-178">An array of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-178">An array of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae789-179">[Visual Basic]</span><span class="sxs-lookup"><span data-stu-id="ae789-179">[Visual Basic]</span></span>  
  
 <span data-ttu-id="ae789-180">No Visual Basic, voc√™ pode usar as convers√µes definidas pela classe, mas voc√™ n√£o pode substitu√≠-las ou criar seus pr√≥prios.</span><span class="sxs-lookup"><span data-stu-id="ae789-180">In Visual Basic, you can use the conversions defined by the class, but you cannot override them or create your own.</span></span> <span data-ttu-id="ae789-181">Se Option Strict √© definida, voc√™ deve usar o \<operador CType > para converter o <xref:System.Data.OracleClient.OracleBinary> para um objeto bin√°rio.</span><span class="sxs-lookup"><span data-stu-id="ae789-181">If Option Strict is set, you must use the \<CType operator> to convert the <xref:System.Data.OracleClient.OracleBinary> to a binary object.</span></span>  
  
 <span data-ttu-id="ae789-182">√â o m√©todo equivalente para esse operador <xref:System.Data.OracleClient.OracleBinary.Value?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="ae789-182">The equivalent method for this operator is <xref:System.Data.OracleClient.OracleBinary.Value?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean operator &gt; (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.OracleClient.OracleBoolean op_GreaterThan(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.op_GreaterThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean operator &gt;(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : System.Data.OracleClient.OracleBinary * System.Data.OracleClient.OracleBinary -&gt; System.Data.OracleClient.OracleBoolean" Usage="x &gt; y" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="ae789-183">An <see langword="OracleBinary" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-183">An <see langword="OracleBinary" /> object.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="ae789-184">An <see langword="OracleBinary" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-184">An <see langword="OracleBinary" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae789-185">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if the first is greater than the second.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-185">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if the first is greater than the second.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae789-186">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is greater than the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-186">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is greater than the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span>
          </span>
          <span data-ttu-id="ae789-187">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-187">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="ae789-188">√â o m√©todo equivalente para esse operador <xref:System.Data.OracleClient.OracleBinary.GreaterThan%28System.Data.OracleClient.OracleBinary%2CSystem.Data.OracleClient.OracleBinary%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="ae789-188">The equivalent method for this operator is <xref:System.Data.OracleClient.OracleBinary.GreaterThan%28System.Data.OracleClient.OracleBinary%2CSystem.Data.OracleClient.OracleBinary%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean operator &gt;= (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.OracleClient.OracleBoolean op_GreaterThanOrEqual(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.op_GreaterThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean operator &gt;=(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : System.Data.OracleClient.OracleBinary * System.Data.OracleClient.OracleBinary -&gt; System.Data.OracleClient.OracleBoolean" Usage="x &gt;= y" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="ae789-189">An <see langword="OracleBinary" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-189">An <see langword="OracleBinary" /> object.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="ae789-190">An <see langword="OracleBinary" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-190">An <see langword="OracleBinary" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae789-191">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if the first is greater than or equal to the second.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-191">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if the first is greater than or equal to the second.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae789-192">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is greater than or equal to the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-192">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is greater than or equal to the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span>
          </span>
          <span data-ttu-id="ae789-193">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-193">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="ae789-194">√â o m√©todo equivalente para esse operador <xref:System.Data.OracleClient.OracleBinary.GreaterThanOrEqual%28System.Data.OracleClient.OracleBinary%2CSystem.Data.OracleClient.OracleBinary%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="ae789-194">The equivalent method for this operator is <xref:System.Data.OracleClient.OracleBinary.GreaterThanOrEqual%28System.Data.OracleClient.OracleBinary%2CSystem.Data.OracleClient.OracleBinary%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Data.OracleClient.OracleBinary (byte[] b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.OracleClient.OracleBinary op_Implicit(unsigned int8[] b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.op_Implicit(System.Byte[])~System.Data.OracleClient.OracleBinary" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (b As Byte()) As OracleBinary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Data::OracleClient::OracleBinary(cli::array &lt;System::Byte&gt; ^ b);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : byte[] -&gt; System.Data.OracleClient.OracleBinary" Usage="System.Data.OracleClient.OracleBinary.op_Implicit b" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBinary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="b" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="b">
          <span data-ttu-id="ae789-195">The array of bytes to be converted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-195">The array of bytes to be converted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae789-196">Converts an array of bytes to an <see cref="T:System.Data.OracleClient.OracleBinary" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-196">Converts an array of bytes to an <see cref="T:System.Data.OracleClient.OracleBinary" /> structure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae789-197">An <see langword="OracleBinary" /> structure that represents the converted array of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-197">An <see langword="OracleBinary" /> structure that represents the converted array of bytes.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean operator != (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.OracleClient.OracleBoolean op_Inequality(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.op_Inequality(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean operator !=(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Data.OracleClient.OracleBinary * System.Data.OracleClient.OracleBinary -&gt; System.Data.OracleClient.OracleBoolean" Usage="System.Data.OracleClient.OracleBinary.op_Inequality (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="ae789-198">An <see langword="OracleBinary" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-198">An <see langword="OracleBinary" /> object.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="ae789-199">An <see langword="OracleBinary" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-199">An <see langword="OracleBinary" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae789-200">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if they are equal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-200">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if they are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae789-201">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the two instances are not equal or <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> if the two instances are equal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-201">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the two instances are not equal or <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> if the two instances are equal.</span>
          </span>
          <span data-ttu-id="ae789-202">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-202">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="ae789-203">√â o m√©todo equivalente para esse operador <xref:System.Data.OracleClient.OracleBinary.NotEquals%28System.Data.OracleClient.OracleBinary%2CSystem.Data.OracleClient.OracleBinary%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="ae789-203">The equivalent method for this operator is <xref:System.Data.OracleClient.OracleBinary.NotEquals%28System.Data.OracleClient.OracleBinary%2CSystem.Data.OracleClient.OracleBinary%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean operator &lt; (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.OracleClient.OracleBoolean op_LessThan(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.op_LessThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean operator &lt;(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : System.Data.OracleClient.OracleBinary * System.Data.OracleClient.OracleBinary -&gt; System.Data.OracleClient.OracleBoolean" Usage="x &lt; y" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="ae789-204">An <see langword="OracleBinary" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-204">An <see langword="OracleBinary" /> object.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="ae789-205">An <see langword="OracleBinary" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-205">An <see langword="OracleBinary" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae789-206">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if the first is less than the second.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-206">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if the first is less than the second.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae789-207">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is less than the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-207">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is less than the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span>
          </span>
          <span data-ttu-id="ae789-208">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-208">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="ae789-209">√â o m√©todo equivalente para esse operador <xref:System.Data.OracleClient.OracleBinary.LessThan%28System.Data.OracleClient.OracleBinary%2CSystem.Data.OracleClient.OracleBinary%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="ae789-209">The equivalent method for this operator is <xref:System.Data.OracleClient.OracleBinary.LessThan%28System.Data.OracleClient.OracleBinary%2CSystem.Data.OracleClient.OracleBinary%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean operator &lt;= (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.OracleClient.OracleBoolean op_LessThanOrEqual(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.op_LessThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean operator &lt;=(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : System.Data.OracleClient.OracleBinary * System.Data.OracleClient.OracleBinary -&gt; System.Data.OracleClient.OracleBoolean" Usage="x &lt;= y" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="ae789-210">An <see langword="OracleBinary" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-210">An <see langword="OracleBinary" /> object.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="ae789-211">An <see langword="OracleBinary" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-211">An <see langword="OracleBinary" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae789-212">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if the first is less than or equal to the second.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-212">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if the first is less than or equal to the second.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae789-213">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is less than or equal to the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-213">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is less than or equal to the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span>
          </span>
          <span data-ttu-id="ae789-214">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-214">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="ae789-215">√â o m√©todo equivalente para esse operador <xref:System.Data.OracleClient.OracleBinary.LessThanOrEqual%28System.Data.OracleClient.OracleBinary%2CSystem.Data.OracleClient.OracleBinary%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="ae789-215">The equivalent method for this operator is <xref:System.Data.OracleClient.OracleBinary.LessThanOrEqual%28System.Data.OracleClient.OracleBinary%2CSystem.Data.OracleClient.OracleBinary%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public byte[] Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBinary.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Value { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : byte[]" Usage="System.Data.OracleClient.OracleBinary.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ae789-216">Gets the value of the <see cref="T:System.Data.OracleClient.OracleBinary" /> structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-216">Gets the value of the <see cref="T:System.Data.OracleClient.OracleBinary" /> structure.</span>
          </span>
          <span data-ttu-id="ae789-217">This property is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-217">This property is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ae789-218">O valor da <see langword="OracleBinary" /> estrutura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae789-218">The value of the <see langword="OracleBinary" /> structure.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae789-219">Para evitar gerar uma `OracleNullValueException`, sempre verifique a <xref:System.Data.OracleClient.OracleBinary.IsNull%2A> propriedade antes de ler o `Value` propriedade.</span><span class="sxs-lookup"><span data-stu-id="ae789-219">To avoid raising an `OracleNullValueException`, always check the <xref:System.Data.OracleClient.OracleBinary.IsNull%2A> property before reading the `Value` property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>