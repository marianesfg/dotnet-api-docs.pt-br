<Type Name="OracleBinary" FullName="System.Data.OracleClient.OracleBinary">
  <TypeSignature Language="C#" Value="public struct OracleBinary : IComparable, System.Data.SqlTypes.INullable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit OracleBinary extends System.ValueType implements class System.Data.SqlTypes.INullable, class System.IComparable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleBinary" />
  <TypeSignature Language="VB.NET" Value="Public Structure OracleBinary&#xA;Implements IComparable, INullable" />
  <TypeSignature Language="C++ CLI" Value="public value class OracleBinary : IComparable, System::Data::SqlTypes::INullable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.SqlTypes.INullable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="9b0d7-101">Representa um fluxo de tamanho variável de dados binários a ser armazenado ou recuperado de um banco de dados.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-101">Represents a variable-length stream of binary data to be stored in or retrieved from a database.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b0d7-102">Para obter um <xref:System.Data.OracleClient.OracleBinary> de objeto, chame o <xref:System.Data.OracleClient.OracleDataReader.GetOracleBinary%2A> método.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-102">To obtain an <xref:System.Data.OracleClient.OracleBinary> object, call the <xref:System.Data.OracleClient.OracleDataReader.GetOracleBinary%2A> method.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleBinary (byte[] b);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (b As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleBinary(cli::array &lt;System::Byte&gt; ^ b);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="b" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="b"><span data-ttu-id="9b0d7-103">A matriz de bytes a ser armazenada na propriedade <see cref="P:System.Data.OracleClient.OracleBinary.Value" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-103">The byte array to be stored in the <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> property.</span></span></param>
        <summary><span data-ttu-id="9b0d7-104">Inicializa uma nova instância da estrutura <see langword="OracleBinary" />, configurando a propriedade <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> de acordo com os conteúdos da matriz de bytes fornecida.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-104">Initializes a new instance of the <see langword="OracleBinary" /> structure, setting the <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> property to the contents of the supplied byte array.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="9b0d7-105">O objeto a ser comparado a essa estrutura <see langword="OracleBinary" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-105">The object to be compared to this <see langword="OracleBinary" /> structure.</span></span></param>
        <summary><span data-ttu-id="9b0d7-106">Compara esse objeto <see cref="T:System.Data.OracleClient.OracleBinary" /> ao objeto fornecido e retorna uma indicação de seus valores relativos.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-106">Compares this <see cref="T:System.Data.OracleClient.OracleBinary" /> object to the supplied object and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="9b0d7-107">Um número com sinal que indica os valores relativos dessa estrutura <see langword="OracleBinary" /> e o objeto.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-107">A signed number indicating the relative values of this <see langword="OracleBinary" /> structure and the object.</span></span>  
  
 <span data-ttu-id="9b0d7-108"><list type="table"><listheader><term> Valor Retornado</span><span class="sxs-lookup"><span data-stu-id="9b0d7-108"><list type="table"><listheader><term> Return Value</span></span>  
  
 <span data-ttu-id="9b0d7-109">Condição </term><description></span><span class="sxs-lookup"><span data-stu-id="9b0d7-109"></term><description> Condition</span></span>  
  
 <span data-ttu-id="9b0d7-110"></description></listheader><item><term> Menor que zero</span><span class="sxs-lookup"><span data-stu-id="9b0d7-110"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="9b0d7-111"></term><description> O valor desse objeto <see langword="OracleBinary" /> é menor que o objeto.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-111"></term><description> The value of this <see langword="OracleBinary" /> object is less than the object.</span></span>  
  
 <span data-ttu-id="9b0d7-112"></description></item><item><term> Zero</span><span class="sxs-lookup"><span data-stu-id="9b0d7-112"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="9b0d7-113"></term><description> Esse objeto <see langword="OracleBinary" /> é igual ao objeto.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-113"></term><description> This <see langword="OracleBinary" /> object is the same as the object.</span></span>  
  
 <span data-ttu-id="9b0d7-114"></description></item><item><term> Maior que zero</span><span class="sxs-lookup"><span data-stu-id="9b0d7-114"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="9b0d7-115"></term><description> Esse objeto <see langword="OracleBinary" /> é maior que o objeto.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-115"></term><description> This <see langword="OracleBinary" /> object is greater than the object.</span></span>  
  
 <span data-ttu-id="9b0d7-116">- ou -</span><span class="sxs-lookup"><span data-stu-id="9b0d7-116">-or-</span></span>  
  
 <span data-ttu-id="9b0d7-117">O objeto é uma referência nula.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-117">The object is a null reference.</span></span>  
  
 </description></item></list></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Concat">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBinary Concat (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.OracleClient.OracleBinary Concat(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.Concat(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Concat (x As OracleBinary, y As OracleBinary) As OracleBinary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBinary Concat(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBinary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="9b0d7-118">Uma estrutura <see langword="OracleBinary" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-118">An <see langword="OracleBinary" /> structure.</span></span></param>
        <param name="y"><span data-ttu-id="9b0d7-119">Uma estrutura <see langword="OracleBinary" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-119">An <see langword="OracleBinary" /> structure.</span></span></param>
        <summary><span data-ttu-id="9b0d7-120">Concatena duas estruturas <see cref="T:System.Data.OracleClient.OracleBinary" /> para criar uma nova estrutura <see langword="OracleBinary" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-120">Concatenates two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to create a new <see langword="OracleBinary" /> structure.</span></span></summary>
        <returns><span data-ttu-id="9b0d7-121">Uma estrutura <see langword="OracleBinary" /> com os valores concatenados dos parâmetros <paramref name="x" /> e <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-121">An <see langword="OracleBinary" /> structure with the concatenated values of the <paramref name="x" /> and <paramref name="y" /> parameters.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9b0d7-122">Compara duas estruturas <see cref="T:System.Data.OracleClient.OracleBinary" /> para determinar se elas são iguais.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-122">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if they are equal.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="9b0d7-123">O objeto a ser comparado.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-123">The object to be compared.</span></span></param>
        <summary><span data-ttu-id="9b0d7-124">Compara o parâmetro de objeto fornecido com a propriedade <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> do objeto <see cref="T:System.Data.OracleClient.OracleBinary" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-124">Compares the supplied object parameter to the <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> property of the <see cref="T:System.Data.OracleClient.OracleBinary" /> object.</span></span></summary>
        <returns>
          <span data-ttu-id="9b0d7-125"><see langword="true" /> se o objeto for uma instância de <see cref="T:System.Data.OracleClient.OracleBinary" /> e os dois forem iguais; caso contrário <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-125"><see langword="true" /> if object is an instance of <see cref="T:System.Data.OracleClient.OracleBinary" /> and the two are equal; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean Equals (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.OracleClient.OracleBoolean Equals(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.Equals(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean Equals(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="9b0d7-126">Uma estrutura <see langword="OracleBinary" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-126">An <see langword="OracleBinary" /> structure.</span></span></param>
        <param name="y"><span data-ttu-id="9b0d7-127">Uma estrutura <see langword="OracleBinary" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-127">An <see langword="OracleBinary" /> structure.</span></span></param>
        <summary><span data-ttu-id="9b0d7-128">Compara duas estruturas <see cref="T:System.Data.OracleClient.OracleBinary" /> para determinar se elas são iguais.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-128">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if they are equal.</span></span></summary>
        <returns><span data-ttu-id="9b0d7-129">Um <see cref="T:System.Data.OracleClient.OracleBoolean" /> que será <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> se as duas instâncias forem iguais ou <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> se as duas instâncias não forem iguais.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-129">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the two instances are equal or <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> if the two instances are not equal.</span></span> <span data-ttu-id="9b0d7-130">Se uma das instâncias de <see langword="OracleBinary" /> for nula, o <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> do <see langword="OracleBoolean" /> será <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-130">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9b0d7-131">Retorna o código hash para esta estrutura <see cref="T:System.Data.OracleClient.OracleBinary" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-131">Returns the hash code for this <see cref="T:System.Data.OracleClient.OracleBinary" /> structure.</span></span></summary>
        <returns><span data-ttu-id="9b0d7-132">Um código de hash do inteiro assinado de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-132">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GreaterThan">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean GreaterThan (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.OracleClient.OracleBoolean GreaterThan(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.GreaterThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GreaterThan (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean GreaterThan(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="9b0d7-133">Uma estrutura <see langword="OracleBinary" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-133">An <see langword="OracleBinary" /> structure.</span></span></param>
        <param name="y"><span data-ttu-id="9b0d7-134">Uma estrutura <see langword="OracleBinary" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-134">An <see langword="OracleBinary" /> structure.</span></span></param>
        <summary><span data-ttu-id="9b0d7-135">Compara duas estruturas <see cref="T:System.Data.OracleClient.OracleBinary" /> para determinar se a primeira é maior que a segunda.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-135">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if the first is greater than the second.</span></span></summary>
        <returns><span data-ttu-id="9b0d7-136">Um <see cref="T:System.Data.OracleClient.OracleBoolean" /> que será <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> se a primeira instância for maior que a segunda instância, caso contrário, <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-136">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is greater than the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span></span> <span data-ttu-id="9b0d7-137">Se uma das instâncias de <see langword="OracleBinary" /> for nula, o <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> do <see langword="OracleBoolean" /> será <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-137">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean GreaterThanOrEqual (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.OracleClient.OracleBoolean GreaterThanOrEqual(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.GreaterThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GreaterThanOrEqual (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean GreaterThanOrEqual(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="9b0d7-138">Uma estrutura <see langword="OracleBinary" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-138">An <see langword="OracleBinary" /> structure.</span></span></param>
        <param name="y"><span data-ttu-id="9b0d7-139">Uma estrutura <see langword="OracleBinary" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-139">An <see langword="OracleBinary" /> structure.</span></span></param>
        <summary><span data-ttu-id="9b0d7-140">Compara duas estruturas <see cref="T:System.Data.OracleClient.OracleBinary" /> para determinar se a primeira é maior que ou igual a segunda.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-140">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if the first is greater than or equal to the second.</span></span></summary>
        <returns><span data-ttu-id="9b0d7-141">Um <see cref="T:System.Data.OracleClient.OracleBoolean" /> que será <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> se a primeira instância for maior ou igual à segunda instância, caso contrário, <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-141">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is greater than or equal to the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span></span> <span data-ttu-id="9b0d7-142">Se uma das instâncias de <see langword="OracleBinary" /> for nula, o <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> do <see langword="OracleBoolean" /> será <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-142">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNull" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBinary.IsNull" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNull { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.SqlTypes.INullable.IsNull</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b0d7-143">Obtém um valor que indica se a propriedade <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> da estrutura <see cref="T:System.Data.OracleClient.OracleBinary" /> é nula.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-143">Gets a value indicating whether the <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> property of the <see cref="T:System.Data.OracleClient.OracleBinary" /> structure is null.</span></span></summary>
        <value>
          <span data-ttu-id="9b0d7-144"><see langword="true" /> Se <see langword="Value" /> for nulo, caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-144"><see langword="true" /> if <see langword="Value" /> is null, otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public byte this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBinary.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte default[int] { System::Byte get(int index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="9b0d7-145">A posição do byte a ser recuperado.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-145">The position of the byte to be retrieved.</span></span></param>
        <summary><span data-ttu-id="9b0d7-146">Obtém o byte único da propriedade <see langword="Value" /> localizada na posição indicada pelo parâmetro de inteiro, <paramref name="index" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-146">Gets the single byte from the <see langword="Value" /> property located at the position indicated by the integer parameter, <paramref name="index" />.</span></span> <span data-ttu-id="9b0d7-147">Se <paramref name="index" /> indicar a posição além do final da matriz de bytes, uma exceção será gerada.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-147">If <paramref name="index" /> indicates a position beyond the end of the byte array, an exception is raised.</span></span></summary>
        <value><span data-ttu-id="9b0d7-148">O byte localizado na posição indicada pelo parâmetro inteiro.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-148">The byte located at the position indicated by the integer parameter.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b0d7-149">Para evitar gerar um `OracleNullValueException`, sempre verifique o <xref:System.Data.OracleClient.OracleBinary.IsNull%2A> propriedade e o `Length` propriedade antes da leitura `this`.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-149">To avoid raising an `OracleNullValueException`, always check the <xref:System.Data.OracleClient.OracleBinary.IsNull%2A> property and the `Length` property before reading `this`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBinary.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b0d7-150">Obtém o tamanho em bytes da propriedade <see cref="P:System.Data.OracleClient.OracleBinary.Value" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-150">Gets the length in bytes of the <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> property.</span></span> <span data-ttu-id="9b0d7-151">Esta propriedade é somente para leitura.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-151">This property is read-only.</span></span></summary>
        <value><span data-ttu-id="9b0d7-152">O comprimento dos dados binários no <see langword="Value" /> propriedade.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-152">The length of the binary data in the <see langword="Value" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b0d7-153">Para evitar a geração um `OracleNullValueException`, sempre verifique o <xref:System.Data.OracleClient.OracleBinary.IsNull%2A> propriedade antes da leitura de `Length` propriedade.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-153">To avoid raising an `OracleNullValueException`, always check the <xref:System.Data.OracleClient.OracleBinary.IsNull%2A> property before reading the `Length` property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LessThan">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean LessThan (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.OracleClient.OracleBoolean LessThan(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.LessThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LessThan (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean LessThan(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="9b0d7-154">Uma estrutura <see langword="OracleBinary" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-154">An <see langword="OracleBinary" /> structure.</span></span></param>
        <param name="y"><span data-ttu-id="9b0d7-155">Uma estrutura <see langword="OracleBinary" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-155">An <see langword="OracleBinary" /> structure.</span></span></param>
        <summary><span data-ttu-id="9b0d7-156">Compara duas estruturas <see cref="T:System.Data.OracleClient.OracleBinary" /> para determinar se a primeira é menor que a segunda.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-156">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if the first is less than the second.</span></span></summary>
        <returns><span data-ttu-id="9b0d7-157">Um <see cref="T:System.Data.OracleClient.OracleBoolean" /> que será <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> se a primeira instância for menor que a segunda instância, caso contrário, <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-157">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is less than the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span></span> <span data-ttu-id="9b0d7-158">Se uma das instâncias de <see langword="OracleBinary" /> for nula, o <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> do <see langword="OracleBoolean" /> será <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-158">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean LessThanOrEqual (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.OracleClient.OracleBoolean LessThanOrEqual(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.LessThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LessThanOrEqual (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean LessThanOrEqual(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="9b0d7-159">Uma estrutura <see langword="OracleBinary" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-159">An <see langword="OracleBinary" /> structure.</span></span></param>
        <param name="y"><span data-ttu-id="9b0d7-160">Uma estrutura <see langword="OracleBinary" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-160">An <see langword="OracleBinary" /> structure.</span></span></param>
        <summary><span data-ttu-id="9b0d7-161">Compara duas estruturas <see cref="T:System.Data.OracleClient.OracleBinary" /> para determinar se a primeira é menor que ou igual a segunda.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-161">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if the first is less than or equal to the second.</span></span></summary>
        <returns><span data-ttu-id="9b0d7-162">Um <see cref="T:System.Data.OracleClient.OracleBoolean" /> que será <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> se a primeira instância for menor ou igual à segunda instância, caso contrário, <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-162">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is less than or equal to the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span></span> <span data-ttu-id="9b0d7-163">Se uma das instâncias de <see langword="OracleBinary" /> for nula, o <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> do <see langword="OracleBoolean" /> será <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-163">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotEquals">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean NotEquals (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.OracleClient.OracleBoolean NotEquals(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.NotEquals(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NotEquals (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean NotEquals(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="9b0d7-164">Uma estrutura <see langword="OracleBinary" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-164">An <see langword="OracleBinary" /> structure.</span></span></param>
        <param name="y"><span data-ttu-id="9b0d7-165">Uma estrutura <see langword="OracleBinary" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-165">An <see langword="OracleBinary" /> structure.</span></span></param>
        <summary><span data-ttu-id="9b0d7-166">Compara duas estruturas <see cref="T:System.Data.OracleClient.OracleBinary" /> para determinar se elas não são iguais.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-166">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if they are not equal.</span></span></summary>
        <returns><span data-ttu-id="9b0d7-167">Um <see cref="T:System.Data.OracleClient.OracleBoolean" /> que será <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> se as duas instâncias não forem iguais ou <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> se as duas instâncias forem iguais.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-167">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the two instances are not equal or <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> if the two instances are equal.</span></span> <span data-ttu-id="9b0d7-168">Se uma das instâncias de <see langword="OracleBinary" /> for nula, o <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> do <see langword="OracleBoolean" /> será <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-168">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static readonly System.Data.OracleClient.OracleBinary Null;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Data.OracleClient.OracleBinary Null" />
      <MemberSignature Language="DocId" Value="F:System.Data.OracleClient.OracleBinary.Null" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Null As OracleBinary " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Data::OracleClient::OracleBinary Null;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBinary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b0d7-169">Representa um valor nulo que pode ser atribuído à propriedade <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> de uma estrutura <see cref="T:System.Data.OracleClient.OracleBinary" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-169">Represents a null value that can be assigned to the <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> property of an <see cref="T:System.Data.OracleClient.OracleBinary" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b0d7-170">`Null` funciona como uma constante para o `OracleBinary` estrutura.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-170">`Null` functions as a constant for the `OracleBinary` structure.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.OracleClient.OracleBinary.IsNull" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBinary operator + (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.OracleClient.OracleBinary op_Addition(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.op_Addition(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (x As OracleBinary, y As OracleBinary) As OracleBinary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBinary operator +(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBinary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="9b0d7-171">Um objeto <see langword="OracleBinary" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-171">An <see langword="OracleBinary" /> object.</span></span></param>
        <param name="y"><span data-ttu-id="9b0d7-172">Um objeto <see langword="OracleBinary" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-172">An <see langword="OracleBinary" /> object.</span></span></param>
        <summary><span data-ttu-id="9b0d7-173">Concatena os dois parâmetros <see cref="T:System.Data.OracleClient.OracleBinary" /> para criar uma nova estrutura <see langword="OracleBinary" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-173">Concatenates the two <see cref="T:System.Data.OracleClient.OracleBinary" /> parameters to create a new <see langword="OracleBinary" /> structure.</span></span></summary>
        <returns><span data-ttu-id="9b0d7-174">Os valores concatenados do <paramref name="x" /> e os parâmetros <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-174">The concatenated values of the <paramref name="x" /> and <paramref name="y" /> parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b0d7-175">`x` aparecerão primeiro na resultante `OracleBinary`, seguido por `y`.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-175">`x` will appear first in the resulting `OracleBinary`, followed by `y`.</span></span>  
  
 <span data-ttu-id="9b0d7-176">[Visual Basic]</span><span class="sxs-lookup"><span data-stu-id="9b0d7-176">[Visual Basic]</span></span>  
  
 <span data-ttu-id="9b0d7-177">No Visual Basic, você pode usar os operadores definidos por uma classe, mas você não pode substituí-los ou criar seus próprios.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-177">In Visual Basic, you can use the operators defined by a class, but you cannot override them or create your own.</span></span>  
  
 <span data-ttu-id="9b0d7-178">O método equivalente para esse operador é <xref:System.Data.OracleClient.OracleBinary.Concat%28System.Data.OracleClient.OracleBinary%2CSystem.Data.OracleClient.OracleBinary%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="9b0d7-178">The equivalent method for this operator is <xref:System.Data.OracleClient.OracleBinary.Concat%28System.Data.OracleClient.OracleBinary%2CSystem.Data.OracleClient.OracleBinary%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean operator == (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.OracleClient.OracleBoolean op_Equality(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.op_Equality(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean operator ==(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="9b0d7-179">Um objeto <see langword="OracleBinary" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-179">An <see langword="OracleBinary" /> object.</span></span></param>
        <param name="y"><span data-ttu-id="9b0d7-180">Um objeto <see langword="OracleBinary" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-180">An <see langword="OracleBinary" /> object.</span></span></param>
        <summary><span data-ttu-id="9b0d7-181">Compara duas estruturas <see cref="T:System.Data.OracleClient.OracleBinary" /> para determinar se elas são iguais.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-181">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if they are equal.</span></span></summary>
        <returns><span data-ttu-id="9b0d7-182">Um <see cref="T:System.Data.OracleClient.OracleBoolean" /> que será <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> se as duas instâncias forem iguais ou <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> se as duas instâncias não forem iguais.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-182">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the two instances are equal or <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> if the two instances are not equal.</span></span> <span data-ttu-id="9b0d7-183">Se uma das instâncias de <see langword="OracleBinary" /> for nula, o <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> do <see langword="OracleBoolean" /> será <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-183">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="9b0d7-184">O método equivalente para esse operador é <xref:System.Data.OracleClient.OracleBinary.Equals%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="9b0d7-184">The equivalent method for this operator is <xref:System.Data.OracleClient.OracleBinary.Equals%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator byte[] (System.Data.OracleClient.OracleBinary x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int8[] op_Explicit(valuetype System.Data.OracleClient.OracleBinary x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.op_Explicit(System.Data.OracleClient.OracleBinary)~System.Byte[]" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (x As OracleBinary) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator cli::array &lt;System::Byte&gt; ^(System::Data::OracleClient::OracleBinary x);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="9b0d7-185">Um <see cref="T:System.Data.OracleClient.OracleBinary" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-185">An <see cref="T:System.Data.OracleClient.OracleBinary" />.</span></span></param>
        <summary><span data-ttu-id="9b0d7-186">Obtém os conteúdos da propriedade <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> do parâmetro <see cref="T:System.Data.OracleClient.OracleBinary" /> como uma matriz de bytes.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-186">Gets the contents of the <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> property of the <see cref="T:System.Data.OracleClient.OracleBinary" /> parameter as an array of bytes.</span></span></summary>
        <returns><span data-ttu-id="9b0d7-187">Uma matriz de bytes.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-187">An array of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b0d7-188">[Visual Basic]</span><span class="sxs-lookup"><span data-stu-id="9b0d7-188">[Visual Basic]</span></span>  
  
 <span data-ttu-id="9b0d7-189">No Visual Basic, você pode usar as conversões definidas pela classe, mas você não pode substituí-los ou criar seus próprios.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-189">In Visual Basic, you can use the conversions defined by the class, but you cannot override them or create your own.</span></span> <span data-ttu-id="9b0d7-190">Se a opção Strict é definida, você deve usar o \<operador CType > para converter o <xref:System.Data.OracleClient.OracleBinary> para um objeto binário.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-190">If Option Strict is set, you must use the \<CType operator> to convert the <xref:System.Data.OracleClient.OracleBinary> to a binary object.</span></span>  
  
 <span data-ttu-id="9b0d7-191">O método equivalente para esse operador é <xref:System.Data.OracleClient.OracleBinary.Value?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="9b0d7-191">The equivalent method for this operator is <xref:System.Data.OracleClient.OracleBinary.Value?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean operator &gt; (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.OracleClient.OracleBoolean op_GreaterThan(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.op_GreaterThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean operator &gt;(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="9b0d7-192">Um objeto <see langword="OracleBinary" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-192">An <see langword="OracleBinary" /> object.</span></span></param>
        <param name="y"><span data-ttu-id="9b0d7-193">Um objeto <see langword="OracleBinary" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-193">An <see langword="OracleBinary" /> object.</span></span></param>
        <summary><span data-ttu-id="9b0d7-194">Compara duas estruturas <see cref="T:System.Data.OracleClient.OracleBinary" /> para determinar se a primeira é maior que a segunda.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-194">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if the first is greater than the second.</span></span></summary>
        <returns><span data-ttu-id="9b0d7-195">Um <see cref="T:System.Data.OracleClient.OracleBoolean" /> que será <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> se a primeira instância for maior que a segunda instância, caso contrário, <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-195">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is greater than the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span></span> <span data-ttu-id="9b0d7-196">Se uma das instâncias de <see langword="OracleBinary" /> for nula, o <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> do <see langword="OracleBoolean" /> será <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-196">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="9b0d7-197">O método equivalente para esse operador é <xref:System.Data.OracleClient.OracleBinary.GreaterThan%28System.Data.OracleClient.OracleBinary%2CSystem.Data.OracleClient.OracleBinary%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="9b0d7-197">The equivalent method for this operator is <xref:System.Data.OracleClient.OracleBinary.GreaterThan%28System.Data.OracleClient.OracleBinary%2CSystem.Data.OracleClient.OracleBinary%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean operator &gt;= (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.OracleClient.OracleBoolean op_GreaterThanOrEqual(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.op_GreaterThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean operator &gt;=(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="9b0d7-198">Um objeto <see langword="OracleBinary" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-198">An <see langword="OracleBinary" /> object.</span></span></param>
        <param name="y"><span data-ttu-id="9b0d7-199">Um objeto <see langword="OracleBinary" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-199">An <see langword="OracleBinary" /> object.</span></span></param>
        <summary><span data-ttu-id="9b0d7-200">Compara duas estruturas <see cref="T:System.Data.OracleClient.OracleBinary" /> para determinar se a primeira é maior que ou igual a segunda.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-200">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if the first is greater than or equal to the second.</span></span></summary>
        <returns><span data-ttu-id="9b0d7-201">Um <see cref="T:System.Data.OracleClient.OracleBoolean" /> que será <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> se a primeira instância for maior ou igual à segunda instância, caso contrário, <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-201">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is greater than or equal to the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span></span> <span data-ttu-id="9b0d7-202">Se uma das instâncias de <see langword="OracleBinary" /> for nula, o <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> do <see langword="OracleBoolean" /> será <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-202">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="9b0d7-203">O método equivalente para esse operador é <xref:System.Data.OracleClient.OracleBinary.GreaterThanOrEqual%28System.Data.OracleClient.OracleBinary%2CSystem.Data.OracleClient.OracleBinary%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="9b0d7-203">The equivalent method for this operator is <xref:System.Data.OracleClient.OracleBinary.GreaterThanOrEqual%28System.Data.OracleClient.OracleBinary%2CSystem.Data.OracleClient.OracleBinary%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Data.OracleClient.OracleBinary (byte[] b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.OracleClient.OracleBinary op_Implicit(unsigned int8[] b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.op_Implicit(System.Byte[])~System.Data.OracleClient.OracleBinary" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (b As Byte()) As OracleBinary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Data::OracleClient::OracleBinary(cli::array &lt;System::Byte&gt; ^ b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBinary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="b" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="b"><span data-ttu-id="9b0d7-204">A matriz de bytes a ser convertida.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-204">The array of bytes to be converted.</span></span></param>
        <summary><span data-ttu-id="9b0d7-205">Converte uma matriz de bytes em uma estrutura <see cref="T:System.Data.OracleClient.OracleBinary" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-205">Converts an array of bytes to an <see cref="T:System.Data.OracleClient.OracleBinary" /> structure.</span></span></summary>
        <returns><span data-ttu-id="9b0d7-206">Uma estrutura <see langword="OracleBinary" /> que representa a matriz de bytes convertida.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-206">An <see langword="OracleBinary" /> structure that represents the converted array of bytes.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean operator != (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.OracleClient.OracleBoolean op_Inequality(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.op_Inequality(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean operator !=(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="9b0d7-207">Um objeto <see langword="OracleBinary" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-207">An <see langword="OracleBinary" /> object.</span></span></param>
        <param name="y"><span data-ttu-id="9b0d7-208">Um objeto <see langword="OracleBinary" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-208">An <see langword="OracleBinary" /> object.</span></span></param>
        <summary><span data-ttu-id="9b0d7-209">Compara duas estruturas <see cref="T:System.Data.OracleClient.OracleBinary" /> para determinar se elas são iguais.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-209">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if they are equal.</span></span></summary>
        <returns><span data-ttu-id="9b0d7-210">Um <see cref="T:System.Data.OracleClient.OracleBoolean" /> que será <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> se as duas instâncias não forem iguais ou <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> se as duas instâncias forem iguais.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-210">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the two instances are not equal or <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> if the two instances are equal.</span></span> <span data-ttu-id="9b0d7-211">Se uma das instâncias de <see langword="OracleBinary" /> for nula, o <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> do <see langword="OracleBoolean" /> será <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-211">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="9b0d7-212">O método equivalente para esse operador é <xref:System.Data.OracleClient.OracleBinary.NotEquals%28System.Data.OracleClient.OracleBinary%2CSystem.Data.OracleClient.OracleBinary%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="9b0d7-212">The equivalent method for this operator is <xref:System.Data.OracleClient.OracleBinary.NotEquals%28System.Data.OracleClient.OracleBinary%2CSystem.Data.OracleClient.OracleBinary%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean operator &lt; (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.OracleClient.OracleBoolean op_LessThan(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.op_LessThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean operator &lt;(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="9b0d7-213">Um objeto <see langword="OracleBinary" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-213">An <see langword="OracleBinary" /> object.</span></span></param>
        <param name="y"><span data-ttu-id="9b0d7-214">Um objeto <see langword="OracleBinary" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-214">An <see langword="OracleBinary" /> object.</span></span></param>
        <summary><span data-ttu-id="9b0d7-215">Compara duas estruturas <see cref="T:System.Data.OracleClient.OracleBinary" /> para determinar se a primeira é menor que a segunda.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-215">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if the first is less than the second.</span></span></summary>
        <returns><span data-ttu-id="9b0d7-216">Um <see cref="T:System.Data.OracleClient.OracleBoolean" /> que será <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> se a primeira instância for menor que a segunda instância, caso contrário, <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-216">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is less than the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span></span> <span data-ttu-id="9b0d7-217">Se uma das instâncias de <see langword="OracleBinary" /> for nula, o <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> do <see langword="OracleBoolean" /> será <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-217">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="9b0d7-218">O método equivalente para esse operador é <xref:System.Data.OracleClient.OracleBinary.LessThan%28System.Data.OracleClient.OracleBinary%2CSystem.Data.OracleClient.OracleBinary%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="9b0d7-218">The equivalent method for this operator is <xref:System.Data.OracleClient.OracleBinary.LessThan%28System.Data.OracleClient.OracleBinary%2CSystem.Data.OracleClient.OracleBinary%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean operator &lt;= (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.OracleClient.OracleBoolean op_LessThanOrEqual(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.op_LessThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean operator &lt;=(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="9b0d7-219">Um objeto <see langword="OracleBinary" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-219">An <see langword="OracleBinary" /> object.</span></span></param>
        <param name="y"><span data-ttu-id="9b0d7-220">Um objeto <see langword="OracleBinary" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-220">An <see langword="OracleBinary" /> object.</span></span></param>
        <summary><span data-ttu-id="9b0d7-221">Compara duas estruturas <see cref="T:System.Data.OracleClient.OracleBinary" /> para determinar se a primeira é menor que ou igual a segunda.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-221">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if the first is less than or equal to the second.</span></span></summary>
        <returns><span data-ttu-id="9b0d7-222">Um <see cref="T:System.Data.OracleClient.OracleBoolean" /> que será <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> se a primeira instância for menor ou igual à segunda instância, caso contrário, <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-222">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is less than or equal to the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span></span> <span data-ttu-id="9b0d7-223">Se uma das instâncias de <see langword="OracleBinary" /> for nula, o <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> do <see langword="OracleBoolean" /> será <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-223">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="9b0d7-224">O método equivalente para esse operador é <xref:System.Data.OracleClient.OracleBinary.LessThanOrEqual%28System.Data.OracleClient.OracleBinary%2CSystem.Data.OracleClient.OracleBinary%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="9b0d7-224">The equivalent method for this operator is <xref:System.Data.OracleClient.OracleBinary.LessThanOrEqual%28System.Data.OracleClient.OracleBinary%2CSystem.Data.OracleClient.OracleBinary%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public byte[] Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBinary.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Value { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b0d7-225">Obtém o valor da estrutura <see cref="T:System.Data.OracleClient.OracleBinary" />.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-225">Gets the value of the <see cref="T:System.Data.OracleClient.OracleBinary" /> structure.</span></span> <span data-ttu-id="9b0d7-226">Esta propriedade é somente para leitura.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-226">This property is read-only.</span></span></summary>
        <value><span data-ttu-id="9b0d7-227">O valor de <see langword="OracleBinary" /> estrutura.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-227">The value of the <see langword="OracleBinary" /> structure.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b0d7-228">Para evitar a geração um `OracleNullValueException`, sempre verifique o <xref:System.Data.OracleClient.OracleBinary.IsNull%2A> propriedade antes da leitura de `Value` propriedade.</span><span class="sxs-lookup"><span data-stu-id="9b0d7-228">To avoid raising an `OracleNullValueException`, always check the <xref:System.Data.OracleClient.OracleBinary.IsNull%2A> property before reading the `Value` property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>