<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="WorkflowInstance.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5181673212b57e524c54cc9851648ca01d7c1e21c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">181673212b57e524c54cc9851648ca01d7c1e21c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Workflow.Runtime.WorkflowInstance">
          <source>Represents a workflow instance.</source>
          <target state="translated">Representa uma instância de fluxo de trabalho.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowInstance">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> class exposes methods and properties that can be used to control the execution of a workflow instance; it is essentially a proxy to the actual workflow instance used by the workflow runtime engine.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> classe expõe métodos e propriedades que podem ser usadas para controlar a execução de uma instância de fluxo de trabalho; ela é essencialmente um proxy para a instância de fluxo de trabalho real usada pelo mecanismo de tempo de execução de fluxo de trabalho.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowInstance">
          <source>A host or a service can instruct the workflow runtime engine to perform actions on a workflow instance by calling the appropriate methods that are contained in the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> class.</source>
          <target state="translated">Um host ou um serviço pode instruir o mecanismo de tempo de execução do fluxo de trabalho para executar ações em uma instância de fluxo de trabalho chamando os métodos apropriados estão contidos no <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowInstance">
          <source>If the requested action is not valid, for example, if the host calls <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Load%2A&gt;</ph> on a workflow instance that has already completed, the workflow runtime engine will raise an appropriate exception.</source>
          <target state="translated">Se a ação solicitada não é válida, por exemplo, se o host chama <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Load%2A&gt;</ph> em uma instância de fluxo de trabalho que já foi concluída, o mecanismo de tempo de execução do fluxo de trabalho gerará uma exceção apropriada.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowInstance">
          <source>If a workflow instance becomes unresponsive because a call on the host application does not return, the only way to recover the instance is to restart the runtime.</source>
          <target state="translated">Se uma instância de fluxo de trabalho não responder porque não retorna uma chamada no aplicativo host, a única maneira de recuperar a instância é reiniciar o tempo de execução.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowInstance">
          <source>However, if the instance has been forcibly unloaded, aborted, or suspended, it can be continued by calling the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">No entanto, se a instância tiver sido descarregada à força, anuladas ou suspensas, ele pode ser continuado chamando o <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowInstance">
          <source>The following code example demonstrates how you can create and start a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> in a workflow host.</source>
          <target state="translated">O exemplo de código a seguir demonstra como você pode criar e iniciar um <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> em um host de fluxo de trabalho.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowInstance">
          <source>The code creates an instance of the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>, adds services to the runtime, and then demonstrates the recommended way to create a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> object.</source>
          <target state="translated">O código cria uma instância do <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>, adiciona serviços ao tempo de execução e, em seguida, demonstra a maneira recomendada para criar um <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowInstance">
          <source>The code initializes <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> by calling the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph> method and passing the previously created type to it.</source>
          <target state="translated">O código inicializa <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> chamando o <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph> método e passar o tipo criado anteriormente para ele.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowInstance">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> is started with the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Start%2A&gt;</ph> method call.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> é iniciado com o <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Start%2A&gt;</ph> chamada de método.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowInstance">
          <source>This code example is part of the Canceling a Workflow SDK sample from the Program.cs file.</source>
          <target state="translated">Este exemplo de código é parte de cancelar um SDK de fluxo de trabalho de exemplo do arquivo Program.cs.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowInstance">
          <source>For more information, see <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>Cancelando um fluxo de trabalho<ept id="p1">](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb)</ept>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowInstance">
          <source>This type is thread safe.</source>
          <target state="translated">Este tipo é thread-safe.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Abort">
          <source>Aborts the workflow instance.</source>
          <target state="translated">Anula a instância de fluxo de trabalho.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Abort">
          <source>The workflow instance is aborted in a synchronous manner; that is, the method returns after the workflow instance has been aborted.</source>
          <target state="translated">A instância de fluxo de trabalho é interrompida de forma síncrona; ou seja, o método retorna após a instância de fluxo de trabalho foi anulada.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Abort">
          <source>The workflow runtime engine invalidates the workflow instance in memory and clears the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt;</ph>.</source>
          <target state="translated">O mecanismo de tempo de execução do fluxo de trabalho invalida a instância de fluxo de trabalho na memória e limpa o <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Abort">
          <source>If a persistence service was used by your workflow instance, all work performed since the last persistence point is thrown away.</source>
          <target state="translated">Se um serviço de persistência usado por sua instância de fluxo de trabalho, todo o trabalho executado desde o último ponto de persistência é descartado.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Abort">
          <source>After it aborts the workflow instance, the workflow runtime engine raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted&gt;</ph> event.</source>
          <target state="translated">Depois que interrompa a instância de fluxo de trabalho, o mecanismo de tempo de execução do fluxo de trabalho gera o <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Abort">
          <source>You can call <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt;</ph> to reload the workflow instance and start from its last persistence point.</source>
          <target state="translated">Você pode chamar <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt;</ph> para recarregar a instância de fluxo de trabalho e iniciar a partir de seu último ponto de persistência.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Abort">
          <source><ph id="ph1">`Abort`</ph> is different from <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A&gt;</ph> in that while <ph id="ph3">`Abort`</ph> simply clears the in-memory workflow instance and can be restarted from the last persistence point, Terminate clears the in-memory workflow instance and informs the persistence service that the instance has been cleared from memory.</source>
          <target state="translated"><ph id="ph1">`Abort`</ph> é diferente do <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A&gt;</ph> em que, embora <ph id="ph3">`Abort`</ph> simplesmente limpa a instância de fluxo de trabalho na memória e pode ser reiniciado do último ponto de persistência, Terminate limpa a instância de fluxo de trabalho na memória e informa a persistência de serviço que o instância de memória foi limpo.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Abort">
          <source>For the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;</ph>, this means that all state information for that workflow instance is deleted from the database upon termination.</source>
          <target state="translated">Para o <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;</ph>, isso significa que todas as informações de estado para essa instância de fluxo de trabalho são excluídas do banco de dados após o encerramento.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Abort">
          <source>You will not be able to reload the workflow instance from a previously stored persistence point.</source>
          <target state="translated">Você não poderá recarregar a instância de fluxo de trabalho de um ponto de persistência armazenada anteriormente.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Abort">
          <source>The following example demonstrates calling Abort on a workflow instance of type Workflow1.</source>
          <target state="translated">O exemplo a seguir demonstra a anulação de chamada em uma instância de fluxo de trabalho do tipo Workflow1.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Abort">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">O mecanismo de tempo de execução do fluxo de trabalho não está em execução.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.WorkflowChanges" /&gt;</ph> specifying dynamic updates for the workflow instance.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.WorkflowChanges" /&gt;</ph> que especifica atualizações dinâmicas para a instância de fluxo de trabalho.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)">
          <source>Applies changes to the workflow instance specified by the <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.WorkflowChanges" /&gt;</ph> object.</source>
          <target state="translated">Aplica as alterações na instância de fluxo de trabalho especificada pelo objeto <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.WorkflowChanges" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)">
          <source>If the workflow instance is not already suspended, the workflow runtime engine temporarily suspends the instance before applying the changes.</source>
          <target state="translated">Se a instância de fluxo de trabalho já não estiver suspenso, o mecanismo de tempo de execução do fluxo de trabalho suspende temporariamente a instância antes de aplicar as alterações.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)">
          <source>The following example demonstrates calling ApplyWorkflowChanges to a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> object.</source>
          <target state="translated">O exemplo a seguir demonstra a chamada ApplyWorkflowChanges para um <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)">
          <source>This example is from the Ordering State Machine SDK sample, from the Mainform.cs file.</source>
          <target state="translated">Este exemplo é do exemplo de ordenação SDK da máquina de estado do arquivo Mainform.cs.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)">
          <source>For more information, see the <bpt id="p1">[</bpt>Ordering State Machine Sample<ept id="p1">](http://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte o <bpt id="p1">[</bpt>exemplo pedido de máquina de estado<ept id="p1">](http://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c)</ept>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">O mecanismo de tempo de execução do fluxo de trabalho não está em execução.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The name of the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph>.</source>
          <target state="translated">O nome do <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The object to enqueue.</source>
          <target state="translated">O objeto a ser enfileirado.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.IPendingWork" /&gt;</ph> that allows the sender to be notified when <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept> is delivered.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.IPendingWork" /&gt;</ph> que permite que o remetente seja notificado quando um <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept> for entregue.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>An object to be passed to the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.IPendingWork" /&gt;</ph> methods.</source>
          <target state="translated">Um objeto a ser passado para os métodos <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.IPendingWork" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>Posts a message to the specified workflow queue synchronously.</source>
          <target state="translated">Posta uma mensagem na fila de fluxo de trabalho especificada de forma síncrona.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>Sends the <ph id="ph1">`item`</ph> to the specified <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph>.</source>
          <target state="translated">Envia o <ph id="ph1">`item`</ph> especificado <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>If you want to be notified when the message is delivered, you can implement <ph id="ph1">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph> in your service and pass a <ph id="ph2">`workItem`</ph> and an <ph id="ph3">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph> object to <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A&gt;</ph>.</source>
          <target state="translated">Se você quiser ser notificado quando a mensagem é entregue, você pode implementar <ph id="ph1">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph> e passe um <ph id="ph2">`workItem`</ph> e um <ph id="ph3">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph> do objeto para <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>If you do not want such notification, you can pass a null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic) for <ph id="ph2">`pendingWork`</ph> and <ph id="ph3">`workItem`</ph>.</source>
          <target state="translated">Se você não quiser que essa notificação, você pode passar uma referência nula (<ph id="ph1">`Nothing`</ph> no Visual Basic) para <ph id="ph2">`pendingWork`</ph> e <ph id="ph3">`workItem`</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>When using this method with a state machine workflow, you might get an exception with the message "Queue '{0}' is not enabled."</source>
          <target state="translated">Ao usar esse método com um fluxo de trabalho de máquina de estado, você pode obter uma exceção com a mensagem "fila '{0}' não está habilitada."</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>This happens when the current state of the state machine does not know how to handle a specific event.</source>
          <target state="translated">Isso ocorre quando o estado atual da máquina de estado não sabe como tratar um evento específico.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>For example, when some state other than the current state contains the <ph id="ph1">&lt;xref:System.Workflow.Activities.EventDrivenActivity&gt;</ph> that contains the <ph id="ph2">&lt;xref:System.Workflow.Activities.HandleExternalEventActivity&gt;</ph> that is represented by the queue '{0}'.</source>
          <target state="translated">Por exemplo, quando algum estado que não seja o estado atual contém o <ph id="ph1">&lt;xref:System.Workflow.Activities.EventDrivenActivity&gt;</ph> que contém o <ph id="ph2">&lt;xref:System.Workflow.Activities.HandleExternalEventActivity&gt;</ph> que é representada pela fila '{0}'.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>Messages are not guaranteed to be received by the workflow instance in the order that they were sent.</source>
          <target state="translated">As mensagens são garantidas não sejam recebidas pela instância de fluxo de trabalho na ordem em que foram enviadas.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>For example, if receiving a message in an existing queue (Queue A) causes a workflow to create another queue (Queue B), which then listens for another message sent after the first message, it is possible that the second message will arrive first, and will not be received due to its queue not being created yet.</source>
          <target state="translated">Por exemplo, se receber uma mensagem em existente da fila (A fila) faz com que um fluxo de trabalho para criar outra fila (fila B), que, em seguida, escuta outra mensagem enviado após a primeira mensagem, é possível que a segunda mensagem será entregue pela primeira vez e não será recebida devido a sua fila não está sendo criada.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>To prevent this issue, the second message should not be sent until the presence of the second queue is verified (using <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A&gt;</ph>.)</source>
          <target state="translated">Para evitar esse problema, a segunda mensagem não deve ser enviada até que a presença da segunda fila é verificada (usando <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A&gt;</ph>.)</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A&gt;</ph>.</source>
          <target state="translated">O exemplo de código a seguir demonstra como usar <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>When the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled&gt;</ph> event occurs, the <ph id="ph2">`OnWorkflowIdled`</ph> method defined in this example is called.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled&gt;</ph> evento ocorrer, o <ph id="ph2">`OnWorkflowIdled`</ph> definido neste exemplo de método é chamado.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>It determines which workflow is idled using the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A&gt;</ph> property and then gets a collection of queued items for the workflow instance by calling the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A&gt;</ph> method.</source>
          <target state="translated">Determina qual fluxo de trabalho está ocioso usando o <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A&gt;</ph> propriedade e, em seguida, obtém uma coleção de itens em fila para o fluxo de trabalho de instância ao chamar o <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The code iterates over the collection to determine which activity is waiting for the event that idled the workflow.</source>
          <target state="translated">O código itera pela coleção para determinar qual atividade está aguardando o evento que ociosos o fluxo de trabalho.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>It then sends an exception to the workflow queue using the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A&gt;</ph> method along with the name of the event queue item.</source>
          <target state="translated">Em seguida, envia uma exceção para a fila de fluxo de trabalho usando o <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A&gt;</ph> método junto com o nome do item da fila de eventos.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>This code example is part of the Canceling a Workflow SDK sample from the Program.cs file.</source>
          <target state="translated">Este exemplo de código é parte de cancelar um SDK de fluxo de trabalho de exemplo do arquivo Program.cs.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>For more information, see <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>Cancelando um fluxo de trabalho<ept id="p1">](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb)</ept>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source><ph id="ph1">&lt;paramref name="queueName" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="queueName" /&gt;</ph> é uma referência nula (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> no Visual Basic).</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">O mecanismo de tempo de execução do fluxo de trabalho não está em execução.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph> specified by <ph id="ph2">&lt;paramref name="queueName" /&gt;</ph> does not exist.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph> especificada por <ph id="ph2">&lt;paramref name="queueName" /&gt;</ph> não existe.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph> specified by <ph id="ph2">&lt;paramref name="queueName" /&gt;</ph> is not enabled.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph> especificada por <ph id="ph2">&lt;paramref name="queueName" /&gt;</ph> não está habilitada.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The name of the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph>.</source>
          <target state="translated">O nome do <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The object to enqueue.</source>
          <target state="translated">O objeto a ser enfileirado.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.IPendingWork" /&gt;</ph> that allows the sender to be notified when <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept> is delivered.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.IPendingWork" /&gt;</ph> que permite que o remetente seja notificado quando um <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept> for entregue.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>An object to be passed to the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.IPendingWork" /&gt;</ph> methods.</source>
          <target state="translated">Um objeto a ser passado para os métodos <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.IPendingWork" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>Posts a message to the specified workflow queue when the workflow is idle.</source>
          <target state="translated">Posta uma mensagem na fila de fluxo de trabalho especificada quando o fluxo de trabalho está ocioso.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source><ph id="ph1">&lt;see cref="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)" /&gt;</ph> waits until the workflow reaches an idle point and enqueues after verifying that the workflow scheduler is idle (that is, no active operation is being executed).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)" /&gt;</ph> espera até que o fluxo de trabalho atinja um ponto de ociosidade e seja enfileirado depois de verificar se o agendador de fluxo de trabalho está ocioso (ou seja, se nenhuma operação ativa está sendo executada).</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>Waits for the workflow instance to become idle and then sends the <ph id="ph1">`item`</ph> to the specified <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph>.</source>
          <target state="translated">Aguarda até que a instância de fluxo de trabalho ficar ocioso e, em seguida, envia o <ph id="ph1">`item`</ph> especificado <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>If you call <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle%2A&gt;</ph> while the workflow instance is suspended, the workflow runtime engine will throw an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Se você chamar <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle%2A&gt;</ph> enquanto a instância de fluxo de trabalho é suspenso, o mecanismo de tempo de execução do fluxo de trabalho gerará um <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>If you want to be notified when the message is delivered, you can implement <ph id="ph1">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph> in your service and pass a <ph id="ph2">`workItem`</ph> and an <ph id="ph3">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph> object to <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A&gt;</ph>.</source>
          <target state="translated">Se você quiser ser notificado quando a mensagem é entregue, você pode implementar <ph id="ph1">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph> e passe um <ph id="ph2">`workItem`</ph> e um <ph id="ph3">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph> do objeto para <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>If you do not want such notification, you can pass a null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic) for <ph id="ph2">`pendingWork`</ph> and <ph id="ph3">`workItem`</ph>.</source>
          <target state="translated">Se você não quiser que essa notificação, você pode passar uma referência nula (<ph id="ph1">`Nothing`</ph> no Visual Basic) para <ph id="ph2">`pendingWork`</ph> e <ph id="ph3">`workItem`</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>When you are using this method with a state machine workflow, you might get an exception that contains the message "Queue '{0}' is not enabled."</source>
          <target state="translated">Quando você estiver usando esse método com um fluxo de trabalho de máquina de estado, você pode obter uma exceção que contém a mensagem "Fila '{0}' não está habilitada."</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>This occurs when the current state of the state machine does not know how to handle a specific event.</source>
          <target state="translated">Isso ocorre quando o estado atual da máquina de estado não sabe como tratar um evento específico.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>For example, when some state other than the current state contains the <ph id="ph1">&lt;xref:System.Workflow.Activities.EventDrivenActivity&gt;</ph> that contains the <ph id="ph2">&lt;xref:System.Workflow.Activities.HandleExternalEventActivity&gt;</ph> that is represented by the queue '{0}'.</source>
          <target state="translated">Por exemplo, quando algum estado que não seja o estado atual contém o <ph id="ph1">&lt;xref:System.Workflow.Activities.EventDrivenActivity&gt;</ph> que contém o <ph id="ph2">&lt;xref:System.Workflow.Activities.HandleExternalEventActivity&gt;</ph> que é representada pela fila '{0}'.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The following example demonstrates sending information to a workflow instance using the <ph id="ph1">`EnqueueItemOnIdle`</ph> method.</source>
          <target state="translated">O exemplo a seguir demonstra o envio de informações para uma instância de fluxo de trabalho usando o <ph id="ph1">`EnqueueItemOnIdle`</ph> método.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>First, a WorkflowInstance object is created and started; next, an object that implements the <ph id="ph1">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph> interface is created.</source>
          <target state="translated">Primeiro, um objeto WorkflowInstance é criado e iniciado; em seguida, um objeto que implementa o <ph id="ph1">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph> interface foi criada.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source><ph id="ph1">`EnqueueItemOnIdle`</ph> is then called, passing in string values for the queue name, the enqueued item, and the work item to be passed to the methods of the pendingWork object.</source>
          <target state="translated"><ph id="ph1">`EnqueueItemOnIdle`</ph> em seguida, é chamado, passando os valores de cadeia de caracteres para o nome da fila, o item de fila e o item de trabalho a serem passados para os métodos do objeto pendingWork.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source><ph id="ph1">&lt;paramref name="queueName" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="queueName" /&gt;</ph> é uma referência nula (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> no Visual Basic).</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">O mecanismo de tempo de execução do fluxo de trabalho não está em execução.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The workflow instance is suspended.</source>
          <target state="translated">A instância de fluxo de trabalho é suspensa.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph> specified by <ph id="ph2">&lt;paramref name="queueName" /&gt;</ph> does not exist.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph> especificada por <ph id="ph2">&lt;paramref name="queueName" /&gt;</ph> não existe.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph> specified by <ph id="ph2">&lt;paramref name="queueName" /&gt;</ph> is not enabled.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueue" /&gt;</ph> especificada por <ph id="ph2">&lt;paramref name="queueName" /&gt;</ph> não está habilitada.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Equals(System.Object)">
          <source>The object to compare.</source>
          <target state="translated">O objeto a ser comparado.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Equals(System.Object)">
          <source>Returns a value that indicates whether the specified object is equal to the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph>.</source>
          <target state="translated">Retorna um valor que indica se o objeto especificado é igual a <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified object is equal to this <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se o objeto especificado for igual a esse <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph>; caso contrário, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Equals(System.Object)">
          <source>The object must be an instance of the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> class and have the same <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;</ph> as this <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph>.</source>
          <target state="translated">O objeto deve ser uma instância do <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> classe e têm o mesmo <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;</ph> este <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.GetHashCode">
          <source>Returns the hash code for this workflow instance.</source>
          <target state="translated">Retorna o código hash dessa instância de fluxo de trabalho.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.GetHashCode">
          <source>The hash code for this <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph>.</source>
          <target state="translated">O código hash deste <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetHashCode">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetHashCode%2A&gt;</ph> returns a hash code based on the value of <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetHashCode%2A&gt;</ph> Retorna um código hash com base no valor de <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowDefinition">
          <source>Retrieves the root activity for this workflow instance.</source>
          <target state="translated">Recupera a atividade raiz dessa instância de fluxo de trabalho.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowDefinition">
          <source>An <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph> object.</source>
          <target state="translated">Um objeto <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowDefinition">
          <source>You can use the root activity to navigate the activity hierarchy of the workflow.</source>
          <target state="translated">Você pode usar a atividade raiz para navegar na hierarquia de atividade do fluxo de trabalho.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowDefinition">
          <source>This method is not thread safe, so the host should synchronize its calls to this method.</source>
          <target state="translated">Este método não é thread-safe, o host deve sincronizar suas chamadas a este método.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowDefinition">
          <source>The following example demonstrates retrieving the workflow definition from a workflow instance.</source>
          <target state="translated">O exemplo a seguir demonstra como recuperar a definição de fluxo de trabalho de uma instância de fluxo de trabalho.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowDefinition">
          <source>This example is from the Ordering State Machine SDK sample, from the Mainform.cs file.</source>
          <target state="translated">Este exemplo é do exemplo de ordenação SDK da máquina de estado do arquivo Mainform.cs.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowDefinition">
          <source>For more information, see the <bpt id="p1">[</bpt>Ordering State Machine Sample<ept id="p1">](http://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte o <bpt id="p1">[</bpt>exemplo pedido de máquina de estado<ept id="p1">](http://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c)</ept>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration">
          <source>Returns the next point in time that this <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph> is scheduled to be delivered a timer message.</source>
          <target state="translated">Retorna o próximo momento em que este <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph> está agendado para receber uma mensagem de temporizador.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration">
          <source>A DateTime value that represents the next <ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt" /&gt;</ph> time this <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph> will be delivered a timer message.</source>
          <target state="translated">Um valor DateTime que representa o próximo tempo de <ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt" /&gt;</ph> em que essa <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph> receberá uma mensagem de temporizador.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration">
          <source>The following example demonstrates using the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration%2A&gt;</ph> method to determine if more workflow timer messages are enqueued.</source>
          <target state="translated">O exemplo a seguir demonstra como usar o <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration%2A&gt;</ph> método para determinar se mais mensagens de timer do fluxo de trabalho são colocados.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration">
          <source>This example is from the WorkflowThreading SDK sample, from the Program.cs file.</source>
          <target state="translated">Este exemplo é da amostra WorkflowThreading SDK, do arquivo Program.cs.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration">
          <source>For more information, see <bpt id="p1">[</bpt>Workflow Threading Sample<ept id="p1">](http://msdn.microsoft.com/library/5b650be7-09fa-47db-a2f6-523dc8ea5ee9)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>exemplo de Threading de fluxo de trabalho<ept id="p1">](http://msdn.microsoft.com/library/5b650be7-09fa-47db-a2f6-523dc8ea5ee9)</ept>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData">
          <source>Gets a collection of <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueueInfo" /&gt;</ph> objects that contains the pending items and subscribed activities for the workflow queues associated with this workflow instance.</source>
          <target state="translated">Obtém uma coleção de objetos <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueueInfo" /&gt;</ph> que contém os itens pendentes e as atividades assinadas das filas de fluxo de trabalho associadas a esta instância de fluxo de trabalho.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueueInfo" /&gt;</ph> objects.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> de objetos <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowQueueInfo" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A&gt;</ph> returns a collection of <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueueInfo&gt;</ph> objects, each of which contains information about the state of one of the workflow queues associated with this workflow instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A&gt;</ph> Retorna uma coleção de <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueueInfo&gt;</ph> objetos, cada uma delas contém informações sobre o estado de um fluxo de trabalho filas associadas a esta instância de fluxo de trabalho.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueueInfo.Items%2A?displayProperty=nameWithType&gt;</ph> contains the pending items for a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowQueueInfo.SubscribedActivityNames%2A?displayProperty=nameWithType&gt;</ph> contains a list of the activities that are subscribed for item delivery on a <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowQueueInfo.Items%2A?displayProperty=nameWithType&gt;</ph> contém os itens pendentes para um <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph> e <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowQueueInfo.SubscribedActivityNames%2A?displayProperty=nameWithType&gt;</ph> contém uma lista das atividades que se inscreveu para entrega do item em uma <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData">
          <source>The following code example demonstrates how you can use the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A&gt;</ph> method to obtain information about the state of all workflow queues associated with a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> object.</source>
          <target state="translated">O exemplo de código a seguir demonstra como você pode usar o <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A&gt;</ph> método para obter informações sobre o estado de todas as filas de fluxo de trabalho associado com um <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData">
          <source>When the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled&gt;</ph> event occurs, the <ph id="ph2">`OnWorkflowIdled`</ph> method defined in this example is called.</source>
          <target state="translated">Quando o <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled&gt;</ph> evento ocorrer, o <ph id="ph2">`OnWorkflowIdled`</ph> definido neste exemplo de método é chamado.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData">
          <source>It determines which workflow is idled using the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A&gt;</ph> property and then gets a collection of queued items for the workflow instance by calling the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A&gt;</ph> method.</source>
          <target state="translated">Determina qual fluxo de trabalho está ocioso usando o <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A&gt;</ph> propriedade e, em seguida, obtém uma coleção de itens em fila para o fluxo de trabalho de instância ao chamar o <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData">
          <source>The code iterates over the collection to determine which activity is waiting for the event that idled the workflow.</source>
          <target state="translated">O código itera pela coleção para determinar qual atividade está aguardando o evento que ociosos o fluxo de trabalho.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData">
          <source>It then sends an exception to the workflow queue using the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A&gt;</ph> method along with the name of the event queue item.</source>
          <target state="translated">Em seguida, envia uma exceção para a fila de fluxo de trabalho usando o <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A&gt;</ph> método junto com o nome do item da fila de eventos.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData">
          <source>This code example is part of the Canceling a Workflow SDK sample from the Program.cs file.</source>
          <target state="translated">Este exemplo de código é parte de cancelar um SDK de fluxo de trabalho de exemplo do arquivo Program.cs.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData">
          <source>For more information, see <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>Cancelando um fluxo de trabalho<ept id="p1">](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb)</ept>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">O mecanismo de tempo de execução do fluxo de trabalho não está em execução.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="P:System.Workflow.Runtime.WorkflowInstance.InstanceId">
          <source>Gets the unique identifier for the workflow instance.</source>
          <target state="translated">Obtém o identificador exclusivo da instância de fluxo de trabalho.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowInstance.InstanceId">
          <source>The <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> of the workflow instance.</source>
          <target state="translated">O <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> da instância de fluxo de trabalho.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowInstance.InstanceId">
          <source>You can use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;</ph> to reference the workflow instance.</source>
          <target state="translated">Você pode usar <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;</ph> para fazer referência à instância de fluxo de trabalho.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowInstance.InstanceId">
          <source>The following code example demonstrates how you can use the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;</ph> property to obtain information about a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> object.</source>
          <target state="translated">O exemplo de código a seguir demonstra como você pode usar o <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;</ph> propriedade para obter informações sobre um <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowInstance.InstanceId">
          <source>The first code snippet creates a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> variable named <ph id="ph2">`instanceId`</ph>.</source>
          <target state="translated">O trecho de código primeiro cria um <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> variável chamada <ph id="ph2">`instanceId`</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowInstance.InstanceId">
          <source>The second snippet uses the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;</ph> property as the first object in an <ph id="ph2">`OrderEventArgs`</ph> constructor call when the <ph id="ph3">`CallBackForApproval`</ph> method is called.</source>
          <target state="translated">O trecho a segunda usa o <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;</ph> a propriedade como o primeiro objeto um <ph id="ph2">`OrderEventArgs`</ph> construtor chamar quando o <ph id="ph3">`CallBackForApproval`</ph> método é chamado.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowInstance.InstanceId">
          <source>This code example is part of the Listen SDK Sample from the OrderServiceImple.cs file.</source>
          <target state="translated">Este exemplo de código é parte do exemplo escutar SDK do arquivo OrderServiceImple.cs.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowInstance.InstanceId">
          <source>For more information, see <bpt id="p1">[</bpt>Listen Sample<ept id="p1">](http://msdn.microsoft.com/library/1cec0e82-7544-429f-b717-0fc25eb42b7f)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>escutar exemplo<ept id="p1">](http://msdn.microsoft.com/library/1cec0e82-7544-429f-b717-0fc25eb42b7f)</ept>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Load">
          <source>Loads a previously unloaded workflow instance.</source>
          <target state="translated">Carrega uma instância de fluxo de trabalho descarregada anteriormente.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Load">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Load%2A&gt;</ph> is synchronous; if the workflow instance can be loaded, <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Load%2A&gt;</ph> will return after the workflow instance has been loaded into memory and scheduled by the workflow runtime engine.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Load%2A&gt;</ph> é síncrona; Se a instância de fluxo de trabalho pode ser carregada, <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Load%2A&gt;</ph> retornará depois que a instância de fluxo de trabalho foi carregado na memória e agendada pelo mecanismo de tempo de execução de fluxo de trabalho.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Load">
          <source>The runtime raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded&gt;</ph> event after the persistence service has restored the workflow instance in memory, but before the workflow runtime engine schedules the instance.</source>
          <target state="translated">O tempo de execução gera o <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded&gt;</ph> evento depois que o serviço de persistência restaurou a instância de fluxo de trabalho na memória, mas antes do fluxo de trabalho, o mecanismo de tempo de execução agenda a instância.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Load">
          <source>The following example demonstrates how to load a previously unloaded <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> object.</source>
          <target state="translated">O exemplo a seguir demonstra como carregar um anteriormente descarregado <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Load">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">O mecanismo de tempo de execução do fluxo de trabalho não está em execução.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.ReloadTrackingProfiles">
          <source>Reload the tracking profiles for this workflow instance.</source>
          <target state="translated">Recarregue os perfis de acompanhamento dessa instância de fluxo de trabalho.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.ReloadTrackingProfiles">
          <source>The runtime tracking infrastructure will reload each <ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingProfile&gt;</ph> for this workflow instance associated with its tracking channels.</source>
          <target state="translated">A infra-estrutura de controle de tempo de execução será recarregado cada <ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingProfile&gt;</ph> para esta instância de fluxo de trabalho associada com seus canais de controle.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.ReloadTrackingProfiles">
          <source>If it is not already in a suspended state, the workflow is temporarily suspended by the runtime tracking infrastructure while the tracking profiles are reloaded.</source>
          <target state="translated">Se ainda não estiver em um estado suspenso, o fluxo de trabalho é suspenso temporariamente pelo tempo de execução de infra-estrutura de controle, enquanto os perfis de rastreamento são recarregados.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.ReloadTrackingProfiles">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">O mecanismo de tempo de execução do fluxo de trabalho não está em execução.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Resume">
          <source>Resumes execution of a previously suspended workflow instance.</source>
          <target state="translated">Retoma a execução de uma instância de fluxo de trabalho suspensa anteriormente.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Resume">
          <source>The host can call <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A&gt;</ph> to resume execution of a workflow instance that has been previously suspended.</source>
          <target state="translated">O host pode chamar <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A&gt;</ph> para retomar a execução de uma instância de fluxo de trabalho que foi suspenso anteriormente.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Resume">
          <source>If the workflow instance is not in the suspended state, no action is taken.</source>
          <target state="translated">Se a instância de fluxo de trabalho não estiver no estado suspenso, nenhuma ação é executada.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Resume">
          <source>The runtime raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph> event just before execution of the workflow instance is resumed.</source>
          <target state="translated">O tempo de execução gera o <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph> evento antes da execução da instância do fluxo de trabalho é retomada.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Resume">
          <source>The following example demonstrates calling Resume on a previously suspended workflow instance.</source>
          <target state="translated">O exemplo a seguir demonstra retomar chamada em uma instância de fluxo de trabalho suspenso anteriormente.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Resume">
          <source>This example is from the Suspend and Terminate SDK sample.</source>
          <target state="translated">Este exemplo é do exemplo de suspender e encerrar SDK.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Resume">
          <source>For more information, see <bpt id="p1">[</bpt>Suspend and Terminate Sample<ept id="p1">](http://msdn.microsoft.com/library/f4dffa58-d01e-44fb-b5a1-3b283d2c4517)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>suspender e encerrar exemplo<ept id="p1">](http://msdn.microsoft.com/library/f4dffa58-d01e-44fb-b5a1-3b283d2c4517)</ept>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Resume">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">O mecanismo de tempo de execução do fluxo de trabalho não está em execução.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Start">
          <source>Starts the execution of the workflow instance.</source>
          <target state="translated">Inicia a execução da instância de fluxo de trabalho.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Start">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Start%2A&gt;</ph> calls <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.ActivityExecutionContext.ExecuteActivity%2A&gt;</ph> on the root activity of this workflow instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Start%2A&gt;</ph> chamadas <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.ActivityExecutionContext.ExecuteActivity%2A&gt;</ph> na atividade raiz desta instância de fluxo de trabalho.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Start">
          <source>If <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Start%2A&gt;</ph> encounters an exception, it terminates the workflow instance by calling <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A&gt;</ph> with the <ph id="ph3">&lt;xref:System.Exception.Message%2A&gt;</ph> property of the exception passed as the reason for the termination.</source>
          <target state="translated">Se <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Start%2A&gt;</ph> encontra uma exceção, encerra a instância de fluxo de trabalho chamando <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A&gt;</ph> com o <ph id="ph3">&lt;xref:System.Exception.Message%2A&gt;</ph> propriedade da exceção passado como o motivo para a terminação.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Start">
          <source>The following code example demonstrates how you can use the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Start%2A&gt;</ph> method to start a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> in a workflow host.</source>
          <target state="translated">O exemplo de código a seguir demonstra como você pode usar o <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Start%2A&gt;</ph> método para iniciar um <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> em um host de fluxo de trabalho.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Start">
          <source>The code creates an instance of the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>, adds services to the runtime, and then demonstrates the recommended way to create a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> object.</source>
          <target state="translated">O código cria uma instância do <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>, adiciona serviços ao tempo de execução e, em seguida, demonstra a maneira recomendada para criar um <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Start">
          <source>It creates a <ph id="ph1">&lt;xref:System.Type&gt;</ph> object and casts it to one of the workflow objects with which the host is associated.</source>
          <target state="translated">Ele cria um <ph id="ph1">&lt;xref:System.Type&gt;</ph> do objeto e converte-o para um dos objetos de fluxo de trabalho ao qual o host está associado.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Start">
          <source>The code next initializes <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> by calling the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph> method and passing the previously created type to it.</source>
          <target state="translated">O código de lado inicializa <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> chamando o <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph> método e passar o tipo criado anteriormente para ele.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Start">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> is started with the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Start%2A&gt;</ph> method call.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> é iniciado com o <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Start%2A&gt;</ph> chamada de método.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Start">
          <source>This code example is part of the Canceling a Workflow SDK sample from the Program.cs file.</source>
          <target state="translated">Este exemplo de código é parte de cancelar um SDK de fluxo de trabalho de exemplo do arquivo Program.cs.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Start">
          <source>For more information, see <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>Cancelando um fluxo de trabalho<ept id="p1">](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb)</ept>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Start">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">O mecanismo de tempo de execução do fluxo de trabalho não está em execução.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Start">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Start">
          <source>The workflow instance has already been started.</source>
          <target state="translated">A instância de fluxo de trabalho já foi iniciada.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Suspend(System.String)">
          <source>A description of the reason for suspending the workflow instance.</source>
          <target state="translated">Uma descrição do motivo para suspender a instância de fluxo de trabalho.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Suspend(System.String)">
          <source>Suspends the workflow instance.</source>
          <target state="translated">Suspende a instância de fluxo de trabalho.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Suspend(System.String)">
          <source>The workflow instance is suspended in a synchronous manner.</source>
          <target state="translated">A instância de fluxo de trabalho é suspenso de forma síncrona.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Suspend(System.String)">
          <source>If the workflow instance is already suspended, no action is taken; otherwise, the workflow runtime engine suspends the workflow instance, raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended&gt;</ph> event and passes <ph id="ph2">`reason`</ph> in a <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs&gt;</ph>.</source>
          <target state="translated">Se a instância de fluxo de trabalho já é suspenso, nenhuma ação será executada; Caso contrário, o mecanismo de tempo de execução do fluxo de trabalho suspende a instância de fluxo de trabalho, gera o <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended&gt;</ph> eventos e passa <ph id="ph2">`reason`</ph> em um <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Suspend(System.String)">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Suspend%2A&gt;</ph> does not unload the workflow instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Suspend%2A&gt;</ph> não descarrega a instância de fluxo de trabalho.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Suspend(System.String)">
          <source>The following code example demonstrates calling Suspend on a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> object.</source>
          <target state="translated">O exemplo de código a seguir demonstra a suspensão de chamada em um <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Suspend(System.String)">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">O mecanismo de tempo de execução do fluxo de trabalho não está em execução.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Terminate(System.String)">
          <source>A description of the reason for terminating the workflow instance.</source>
          <target state="translated">Uma descrição do motivo para encerrar a instância de fluxo de trabalho.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Terminate(System.String)">
          <source>Terminates the workflow instance in a synchronous manner.</source>
          <target state="translated">Encerra a instância de fluxo de trabalho de forma síncrona.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Terminate(System.String)">
          <source>The workflow instance is terminated in a synchronous manner.</source>
          <target state="translated">A instância de fluxo de trabalho é encerrada de forma síncrona.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Terminate(System.String)">
          <source>The host calls <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A&gt;</ph> to terminate the workflow instance.</source>
          <target state="translated">As chamadas de host <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A&gt;</ph> para encerrar a instância de fluxo de trabalho.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Terminate(System.String)">
          <source>The workflow runtime engine clears the in-memory workflow instance and informs the persistence service that the instance has been cleared from memory.</source>
          <target state="translated">O mecanismo de tempo de execução do fluxo de trabalho limpa a instância de fluxo de trabalho na memória e informa o serviço de persistência que a instância foi limpa da memória.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Terminate(System.String)">
          <source>For the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;</ph>, this means that all state information for that workflow instance is deleted from the database upon termination.</source>
          <target state="translated">Para o <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;</ph>, isso significa que todas as informações de estado para essa instância de fluxo de trabalho são excluídas do banco de dados após o encerramento.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Terminate(System.String)">
          <source>You will not be able to reload the workflow instance from a previously stored persistence point.</source>
          <target state="translated">Você não poderá recarregar a instância de fluxo de trabalho de um ponto de persistência armazenada anteriormente.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Terminate(System.String)">
          <source>After the in-memory workflow instance is cleared and the persistence service is informed of the termination, the <ph id="ph1">`Terminate`</ph> method raises the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated&gt;</ph> event and passes <ph id="ph3">`reason`</ph> in the <ph id="ph4">&lt;xref:System.Exception.Message%2A&gt;</ph> property of a <ph id="ph5">&lt;xref:System.Workflow.ComponentModel.WorkflowTerminatedException&gt;</ph> contained in the <ph id="ph6">&lt;xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs&gt;</ph>.</source>
          <target state="translated">Depois que a instância de fluxo de trabalho na memória está desmarcada e o serviço de persistência é informado sobre o encerramento, o <ph id="ph1">`Terminate`</ph> método gera o <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated&gt;</ph> eventos e passa <ph id="ph3">`reason`</ph> no <ph id="ph4">&lt;xref:System.Exception.Message%2A&gt;</ph> propriedade de um <ph id="ph5">&lt;xref:System.Workflow.ComponentModel.WorkflowTerminatedException&gt;</ph> contidos no <ph id="ph6">&lt;xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Terminate(System.String)">
          <source><ph id="ph1">`Terminate`</ph> is different from <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A&gt;</ph> in that while Terminate clears the in-memory workflow instance and informs the persistence service of the termination, <ph id="ph3">`Abort`</ph> simply clears the in-memory workflow instance, which can then be restarted from the last persistence point.</source>
          <target state="translated"><ph id="ph1">`Terminate`</ph> é diferente do <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A&gt;</ph> em que enquanto Terminate limpa a instância de fluxo de trabalho na memória e informa o serviço de persistência do encerramento, <ph id="ph3">`Abort`</ph> simplesmente limpa a instância de fluxo de trabalho na memória, que pode ser reiniciada a partir do último ponto de persistência.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Terminate(System.String)">
          <source>The following code example demonstrates calling Terminate on a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> object.</source>
          <target state="translated">O exemplo de código a seguir demonstra o Terminate chamada em um <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Terminate(System.String)">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">O mecanismo de tempo de execução do fluxo de trabalho não está em execução.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.TryUnload">
          <source>Unloads the workflow instance from memory to the persistence store when the instance is suspended or idle.</source>
          <target state="translated">Descarrega a instância de fluxo de trabalho da memória para o repositório de persistência quando a instância está suspensa ou ociosa.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.TryUnload">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the workflow instance was unloaded; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> se a instância de fluxo de trabalho foi descarregada, caso contrário, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.TryUnload">
          <source>If the workflow instance is idle or suspended, <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A&gt;</ph> uses the persistence service to remove the workflow instance from memory and persist it to a data store.</source>
          <target state="translated">Se a instância de fluxo de trabalho está ocioso ou suspenso, <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A&gt;</ph> usa o serviço de persistência para remover a instância de fluxo de trabalho da memória e mantê-lo para um repositório de dados.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.TryUnload">
          <source>If there is no persistence service registered with the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>, <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Se não houver nenhum serviço de persistência registrado com o <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>, <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A&gt;</ph> lança um <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.TryUnload">
          <source>If the workflow instance is successfully persisted, the runtime raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph> event, and returns <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Se a instância de fluxo de trabalho é mantida com êxito, o tempo de execução gera o <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph> eventos e retorna <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.TryUnload">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;</ph> returns <ph id="ph2">`false`</ph> if the workflow instance has already been unloaded, has been terminated, has been aborted, or has already completed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;</ph> Retorna <ph id="ph2">`false`</ph> se a instância de fluxo de trabalho já foi descarregada, foi encerrada, foi anulada ou já foi concluída.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.TryUnload">
          <source>The host can use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A&gt;</ph> to reclaim system resources from an idle workflow.</source>
          <target state="translated">O host pode usar <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A&gt;</ph> para recuperar recursos do sistema de um fluxo de trabalho ocioso.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.TryUnload">
          <source>The following example demonstrates using the TryUnload method to unload a workflow when the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled&gt;</ph> event fires.</source>
          <target state="translated">O exemplo a seguir demonstra como usar o método TryUnload para descarregar um fluxo de trabalho quando o <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled&gt;</ph> evento ser acionado.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.TryUnload">
          <source>This example is from the Using Persistence Services SDK sample, from the Program.cs file.</source>
          <target state="translated">Este exemplo é do exemplo usando o SDK de serviços de persistência, do arquivo Program.cs.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.TryUnload">
          <source>For more information, see <bpt id="p1">[</bpt>Using Persistence Services Sample<ept id="p1">](http://msdn.microsoft.com/library/3176b7e7-ae49-4d5c-802b-85032d6ebde6)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>usando o exemplo de serviços de persistência<ept id="p1">](http://msdn.microsoft.com/library/3176b7e7-ae49-4d5c-802b-85032d6ebde6)</ept>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.TryUnload">
          <source>There is no persistence service registered with the workflow runtime engine.</source>
          <target state="translated">Não há nenhum serviço de persistência registrado no mecanismo de tempo de execução do fluxo de trabalho.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Unload">
          <source>Unloads the workflow instance from memory to the persistence store.</source>
          <target state="translated">Descarrega a instância de fluxo de trabalho da memória para o repositório de persistência.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Unload">
          <source>This call blocks until after the currently scheduled work is finished, or the end of a transaction scope.</source>
          <target state="translated">Essa chamada fica bloqueada até a conclusão do trabalho agendado no momento ou até o final de um escopo de transação.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Unload">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;</ph> is synchronous; that is, it returns after completing any action that it performs.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;</ph> é síncrona; ou seja, ela retorna depois de concluir todas as ações que ele executa.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Unload">
          <source>If the workflow instance is not idle, the runtime waits until the instance can be interrupted.</source>
          <target state="translated">Se a instância de fluxo de trabalho não estiver ociosa, o tempo de execução aguarda até que a instância pode ser interrompida.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Unload">
          <source>An instance can only be interrupted after the currently scheduled work item completes; this is typically when the currently running Activity returns from its <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Activity.Execute%2A&gt;</ph> method.</source>
          <target state="translated">Uma instância pode ser interrompida somente após o item de trabalho agendado no momento; Isso é normalmente quando a atividade em execução no momento retorna de seu <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Activity.Execute%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Unload">
          <source>However, if the instance is executing a <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.TransactionScopeActivity&gt;</ph>, the transaction scope must complete execution before the instance can be interrupted.</source>
          <target state="translated">No entanto, se estiver executando a instância de um <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.TransactionScopeActivity&gt;</ph>, o escopo da transação deve concluir a execução antes da instância pode ser interrompida.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Unload">
          <source>Unload then uses the persistence service to remove the workflow instance from memory and persists it to a data store.</source>
          <target state="translated">Unload, em seguida, usa o serviço de persistência para remover a instância de fluxo de trabalho da memória e os mantém para um repositório de dados.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Unload">
          <source>If there is no persistence service registered with the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>, <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Se não houver nenhum serviço de persistência registrado com o <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>, <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;</ph> lança um <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Unload">
          <source>If the workflow instance is successfully persisted, the runtime raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph> event.</source>
          <target state="translated">Se a instância de fluxo de trabalho é mantida com êxito, o tempo de execução gera o <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph> evento.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Unload">
          <source>The host can use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;</ph> to reclaim system resources from an idle workflow.</source>
          <target state="translated">O host pode usar <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;</ph> para recuperar recursos do sistema de um fluxo de trabalho ocioso.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowInstance.Unload">
          <source>The following example demonstrates calling <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;</ph> on a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> object.</source>
          <target state="translated">O exemplo a seguir demonstra a chamada <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;</ph> em uma <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowInstance.Unload">
          <source>There is no persistence service registered with the workflow runtime engine.</source>
          <target state="translated">Não há nenhum serviço de persistência registrado no mecanismo de tempo de execução do fluxo de trabalho.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="P:System.Workflow.Runtime.WorkflowInstance.WorkflowRuntime">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> for this workflow instance.</source>
          <target state="translated">Obtém o <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> dessa instância de fluxo de trabalho.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowInstance.WorkflowRuntime">
          <source>A <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> that represents the execution environment in which this workflow instance is running.</source>
          <target state="translated">Um <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> que representa o ambiente de execução em que esta instância de fluxo de trabalho está em execução.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowInstance.WorkflowRuntime">
          <source>The following example demonstrates accessing the executing <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> of a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> object.</source>
          <target state="translated">O exemplo a seguir demonstra o acesso de execução <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> de um <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> objeto.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>