<Type Name="SignatureHelper" FullName="System.Reflection.Emit.SignatureHelper">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="efae84bddb1714914676a55cd44788ccf2482223" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30470580" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SignatureHelper : System.Runtime.InteropServices._SignatureHelper" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit SignatureHelper extends System.Object implements class System.Runtime.InteropServices._SignatureHelper" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Emit.SignatureHelper" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SignatureHelper&#xA;Implements _SignatureHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class SignatureHelper sealed : System::Runtime::InteropServices::_SignatureHelper" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._SignatureHelper</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._SignatureHelper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="41a8c-101">Fornece métodos para a criação de assinaturas.</span>
      <span class="sxs-lookup">
        <span data-stu-id="41a8c-101">Provides methods for building signatures.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41a8c-102">Use o <xref:System.Reflection.Emit.SignatureHelper> classe para criar um blob de assinatura que pode ser passado para o <xref:System.Reflection.Emit.DynamicILInfo.SetLocalSignature%2A> método o <xref:System.Reflection.Emit.DynamicILInfo> classe.</span><span class="sxs-lookup"><span data-stu-id="41a8c-102">Use the <xref:System.Reflection.Emit.SignatureHelper> class to create a signature blob that can be passed to the <xref:System.Reflection.Emit.DynamicILInfo.SetLocalSignature%2A> method of the <xref:System.Reflection.Emit.DynamicILInfo> class.</span></span> <span data-ttu-id="41a8c-103">Um <xref:System.Reflection.Emit.SignatureHelper> objeto também pode ser passado para o <xref:System.Reflection.Emit.ILGenerator.Emit%28System.Reflection.Emit.OpCode%2CSystem.Reflection.Emit.SignatureHelper%29?displayProperty=nameWithType> sobrecarga do método para inserir uma instrução e um token de assinatura em um fluxo do Microsoft intermediate language (MSIL).</span><span class="sxs-lookup"><span data-stu-id="41a8c-103">A <xref:System.Reflection.Emit.SignatureHelper> object can also be passed to the <xref:System.Reflection.Emit.ILGenerator.Emit%28System.Reflection.Emit.OpCode%2CSystem.Reflection.Emit.SignatureHelper%29?displayProperty=nameWithType> method overload to insert an instruction and a signature token into a Microsoft intermediate language (MSIL) stream.</span></span> <span data-ttu-id="41a8c-104">Para obter informações sobre blobs de assinatura e os metadados de assinatura, consulte a documentação de metadados da ECMA partição II.</span><span class="sxs-lookup"><span data-stu-id="41a8c-104">For information on signature blobs and signature metadata, see the ECMA Partition II Metadata documentation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="41a8c-105">A documentação ECMA partição II está disponível online; consulte [ECMA para c# e padrões de infra-estrutura de linguagem comum](http://go.microsoft.com/fwlink/?LinkID=99212) no MSDN e [padrão ECMA-335 - infraestrutura de linguagem comum (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) no site da Ecma internacional.</span><span class="sxs-lookup"><span data-stu-id="41a8c-105">The ECMA Partition II documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="AddArgument">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="41a8c-106">Adiciona um argumento à assinatura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-106">Adds an argument to the signature.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddArgument">
      <MemberSignature Language="C#" Value="public void AddArgument (Type clsArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArgument(class System.Type clsArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.AddArgument(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArgument (clsArgument As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArgument(Type ^ clsArgument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clsArgument" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="clsArgument">
          <span data-ttu-id="41a8c-107">O tipo do argumento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-107">The type of the argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41a8c-108">Adiciona um argumento à assinatura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-108">Adds an argument to the signature.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41a8c-109">Para adicionar um argumento com modificadores personalizadas necessárias ou opcionais, use o <xref:System.Reflection.Emit.SignatureHelper.AddArgument%28System.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29> sobrecarga do método.</span><span class="sxs-lookup"><span data-stu-id="41a8c-109">To add an argument with optional or required custom modifiers, use the <xref:System.Reflection.Emit.SignatureHelper.AddArgument%28System.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29> method overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41a8c-110">A assinatura já foi encerrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-110">The signature has already been finished.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41a8c-111">
            <paramref name="clsArgument" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-111">
              <paramref name="clsArgument" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddArgument">
      <MemberSignature Language="C#" Value="public void AddArgument (Type argument, bool pinned);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArgument(class System.Type argument, bool pinned) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.AddArgument(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArgument (argument As Type, pinned As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArgument(Type ^ argument, bool pinned);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Type" />
        <Parameter Name="pinned" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="41a8c-112">O tipo de argumento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-112">The argument type.</span>
          </span>
        </param>
        <param name="pinned">
          <span data-ttu-id="41a8c-113">
            <see langword="true" /> se o argumento estiver fixado; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-113">
              <see langword="true" /> if the argument is pinned; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41a8c-114">Adiciona um argumento do tipo especificado à assinatura, especificando se o argumento está fixado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-114">Adds an argument of the specified type to the signature, specifying whether the argument is pinned.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41a8c-115">Para adicionar um argumento com modificadores personalizadas necessárias ou opcionais, use o <xref:System.Reflection.Emit.SignatureHelper.AddArgument%28System.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29> sobrecarga do método.</span><span class="sxs-lookup"><span data-stu-id="41a8c-115">To add an argument with optional or required custom modifiers, use the <xref:System.Reflection.Emit.SignatureHelper.AddArgument%28System.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29> method overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41a8c-116">
            <paramref name="argument" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-116">
              <paramref name="argument" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddArgument">
      <MemberSignature Language="C#" Value="public void AddArgument (Type argument, Type[] requiredCustomModifiers, Type[] optionalCustomModifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArgument(class System.Type argument, class System.Type[] requiredCustomModifiers, class System.Type[] optionalCustomModifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.AddArgument(System.Type,System.Type[],System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArgument (argument As Type, requiredCustomModifiers As Type(), optionalCustomModifiers As Type())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArgument(Type ^ argument, cli::array &lt;Type ^&gt; ^ requiredCustomModifiers, cli::array &lt;Type ^&gt; ^ optionalCustomModifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Type" />
        <Parameter Name="requiredCustomModifiers" Type="System.Type[]" />
        <Parameter Name="optionalCustomModifiers" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="41a8c-117">O tipo de argumento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-117">The argument type.</span>
          </span>
        </param>
        <param name="requiredCustomModifiers">
          <span data-ttu-id="41a8c-118">Uma matriz de tipos que representa os modificadores personalizados obrigatórios para o argumento, como <see cref="T:System.Runtime.CompilerServices.IsConst" /> ou <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-118">An array of types representing the required custom modifiers for the argument, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span>
          </span>
          <span data-ttu-id="41a8c-119">Se o argumento não tiver modificadores personalizados obrigatórios, especifique <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-119">If the argument has no required custom modifiers, specify <see langword="null" />.</span>
          </span>
        </param>
        <param name="optionalCustomModifiers">
          <span data-ttu-id="41a8c-120">Uma matriz de tipos que representa os modificadores personalizados opcionais para o argumento, como <see cref="T:System.Runtime.CompilerServices.IsConst" /> ou <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-120">An array of types representing the optional custom modifiers for the argument, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span>
          </span>
          <span data-ttu-id="41a8c-121">Se o argumento não tiver nenhum modificador personalizado opcional, especifique <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-121">If the argument has no optional custom modifiers, specify <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41a8c-122">Adiciona um argumento à assinatura, com modificadores personalizados especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-122">Adds an argument to the signature, with the specified custom modifiers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41a8c-123">Consulte o <xref:System.Runtime.CompilerServices> namespace para classes que representam os modificadores personalizados.</span><span class="sxs-lookup"><span data-stu-id="41a8c-123">See the <xref:System.Runtime.CompilerServices> namespace for classes that represent custom modifiers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41a8c-124">
            <paramref name="argument" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-124">
              <paramref name="argument" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="41a8c-125">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-125">-or-</span>
          </span>
          <span data-ttu-id="41a8c-126">Um elemento de <paramref name="requiredCustomModifiers" /> ou <paramref name="optionalCustomModifiers" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-126">An element of <paramref name="requiredCustomModifiers" /> or <paramref name="optionalCustomModifiers" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41a8c-127">A assinatura já foi encerrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-127">The signature has already been finished.</span>
          </span>
          <span data-ttu-id="41a8c-128">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-128">-or-</span>
          </span>
          <span data-ttu-id="41a8c-129">Um dos modificadores personalizados especificados é um tipo de matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-129">One of the specified custom modifiers is an array type.</span>
          </span>
          <span data-ttu-id="41a8c-130">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-130">-or-</span>
          </span>
          <span data-ttu-id="41a8c-131">Um dos modificadores personalizados especificados é um tipo genérico aberto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-131">One of the specified custom modifiers is an open generic type.</span>
          </span>
          <span data-ttu-id="41a8c-132">Ou seja, a propriedade <see cref="P:System.Type.ContainsGenericParameters" /> é <see langword="true" /> para o modificador personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-132">That is, the <see cref="P:System.Type.ContainsGenericParameters" /> property is <see langword="true" /> for the custom modifier.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddArguments">
      <MemberSignature Language="C#" Value="public void AddArguments (Type[] arguments, Type[][] requiredCustomModifiers, Type[][] optionalCustomModifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArguments(class System.Type[] arguments, class System.Type[][] requiredCustomModifiers, class System.Type[][] optionalCustomModifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.AddArguments(System.Type[],System.Type[][],System.Type[][])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArguments (arguments As Type(), requiredCustomModifiers As Type()(), optionalCustomModifiers As Type()())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArguments(cli::array &lt;Type ^&gt; ^ arguments, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ requiredCustomModifiers, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ optionalCustomModifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Type[]" />
        <Parameter Name="requiredCustomModifiers" Type="System.Type[][]" />
        <Parameter Name="optionalCustomModifiers" Type="System.Type[][]" />
      </Parameters>
      <Docs>
        <param name="arguments">
          <span data-ttu-id="41a8c-133">Os tipos dos argumentos a serem adicionados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-133">The types of the arguments to be added.</span>
          </span>
        </param>
        <param name="requiredCustomModifiers">
          <span data-ttu-id="41a8c-134">Uma matriz de matrizes de tipos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-134">An array of arrays of types.</span>
          </span>
          <span data-ttu-id="41a8c-135">Cada matriz de tipos representa os modificadores personalizados obrigatórios para o argumento correspondente, como <see cref="T:System.Runtime.CompilerServices.IsConst" /> ou <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-135">Each array of types represents the required custom modifiers for the corresponding argument, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span>
          </span>
          <span data-ttu-id="41a8c-136">Se um argumento específico não tiver nenhum modificador personalizado obrigatório, especifique <see langword="null" />, em vez de uma matriz de tipos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-136">If a particular argument has no required custom modifiers, specify <see langword="null" /> instead of an array of types.</span>
          </span>
          <span data-ttu-id="41a8c-137">Se nenhum dos argumentos tiver modificadores personalizados obrigatórios, especifique <see langword="null" /> em vez de uma matriz de matrizes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-137">If none of the arguments have required custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span>
          </span>
        </param>
        <param name="optionalCustomModifiers">
          <span data-ttu-id="41a8c-138">Uma matriz de matrizes de tipos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-138">An array of arrays of types.</span>
          </span>
          <span data-ttu-id="41a8c-139">Cada matriz de tipos representa os modificadores personalizados opcionais para o argumento correspondente, como <see cref="T:System.Runtime.CompilerServices.IsConst" /> ou <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-139">Each array of types represents the optional custom modifiers for the corresponding argument, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span>
          </span>
          <span data-ttu-id="41a8c-140">Se um argumento específico não tiver nenhum modificador personalizado opcional, especifique <see langword="null" />, em vez de uma matriz de tipos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-140">If a particular argument has no optional custom modifiers, specify <see langword="null" /> instead of an array of types.</span>
          </span>
          <span data-ttu-id="41a8c-141">Se nenhum dos argumentos tiver modificadores personalizados opcionais, especifique <see langword="null" /> em vez de uma matriz de matrizes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-141">If none of the arguments have optional custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41a8c-142">Adiciona um conjunto de argumentos à assinatura, com modificadores personalizados especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-142">Adds a set of arguments to the signature, with the specified custom modifiers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41a8c-143">Os argumentos são adicionados ao final da assinatura, na ordem dos elementos de `arguments`.</span><span class="sxs-lookup"><span data-stu-id="41a8c-143">The arguments are added to the end of the signature, in order of the elements of `arguments`.</span></span>  
  
 <span data-ttu-id="41a8c-144">Consulte o <xref:System.Runtime.CompilerServices> namespace para classes que representam os modificadores personalizados.</span><span class="sxs-lookup"><span data-stu-id="41a8c-144">See the <xref:System.Runtime.CompilerServices> namespace for classes that represent custom modifiers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41a8c-145">Um elemento de <paramref name="arguments" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-145">An element of <paramref name="arguments" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="41a8c-146">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-146">-or-</span>
          </span>
          <span data-ttu-id="41a8c-147">Um dos modificadores personalizados especificados é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-147">One of the specified custom modifiers is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="41a8c-148">(No entanto, <see langword="null" /> pode ser especificado para a matriz de modificadores personalizados para qualquer argumento.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-148">(However, <see langword="null" /> can be specified for the array of custom modifiers for any argument.)</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41a8c-149">A assinatura já foi encerrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-149">The signature has already been finished.</span>
          </span>
          <span data-ttu-id="41a8c-150">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-150">-or-</span>
          </span>
          <span data-ttu-id="41a8c-151">Um dos modificadores personalizados especificados é um tipo de matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-151">One of the specified custom modifiers is an array type.</span>
          </span>
          <span data-ttu-id="41a8c-152">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-152">-or-</span>
          </span>
          <span data-ttu-id="41a8c-153">Um dos modificadores personalizados especificados é um tipo genérico aberto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-153">One of the specified custom modifiers is an open generic type.</span>
          </span>
          <span data-ttu-id="41a8c-154">Ou seja, a propriedade <see cref="P:System.Type.ContainsGenericParameters" /> é <see langword="true" /> para o modificador personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-154">That is, the <see cref="P:System.Type.ContainsGenericParameters" /> property is <see langword="true" /> for the custom modifier.</span>
          </span>
          <span data-ttu-id="41a8c-155">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-155">-or-</span>
          </span>
          <span data-ttu-id="41a8c-156">O tamanho de <paramref name="requiredCustomModifiers" /> ou <paramref name="optionalCustomModifiers" /> não é igual ao tamanho de <paramref name="arguments" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-156">The size of <paramref name="requiredCustomModifiers" /> or <paramref name="optionalCustomModifiers" /> does not equal the size of <paramref name="arguments" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddSentinel">
      <MemberSignature Language="C#" Value="public void AddSentinel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddSentinel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.AddSentinel" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddSentinel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddSentinel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="41a8c-157">Marca o final de uma parte fixa vararg.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-157">Marks the end of a vararg fixed part.</span>
          </span>
          <span data-ttu-id="41a8c-158">Isso só será usado se o chamador estiver criando um site de chamada de assinatura vararg.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-158">This is only used if the caller is creating a vararg signature call site.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="41a8c-159">O objeto com o qual esta instância deverá ser comparada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-159">The object with which this instance should be compared.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41a8c-160">Verifica se esta instância é igual ao objeto fornecido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-160">Checks if this instance is equal to the given object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41a8c-161">
            <see langword="true" /> se o objeto fornecido for um <see langword="SignatureHelper" /> e representar a mesma assinatura; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-161">
              <see langword="true" /> if the given object is a <see langword="SignatureHelper" /> and represents the same signature; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFieldSigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetFieldSigHelper (System.Reflection.Module mod);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetFieldSigHelper(class System.Reflection.Module mod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetFieldSigHelper(System.Reflection.Module)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFieldSigHelper (mod As Module) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetFieldSigHelper(System::Reflection::Module ^ mod);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mod" Type="System.Reflection.Module" />
      </Parameters>
      <Docs>
        <param name="mod">
          <span data-ttu-id="41a8c-162">O módulo dinâmico que contém o campo para o qual o <see langword="SignatureHelper" /> é solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-162">The dynamic module that contains the field for which the <see langword="SignatureHelper" /> is requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41a8c-163">Retorna um auxiliar de assinatura para um campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-163">Returns a signature helper for a field.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41a8c-164">O objeto <see langword="SignatureHelper" /> para um campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-164">The <see langword="SignatureHelper" /> object for a field.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="41a8c-165">Cria e retorna um código hash para esta instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-165">Creates and returns a hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41a8c-166">Retorna o código hash com base no nome.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-166">Returns the hash code based on the name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41a8c-167">O código hash é criado a partir do nome desta instância, o valor de retorno é o mesmo que o `GetHashCode` método foi chamado no valor da `Name` propriedade.</span><span class="sxs-lookup"><span data-stu-id="41a8c-167">The hash code is created from the name of this instance, so the return value is the same as if the `GetHashCode` method were called on the value of the `Name` property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetLocalVarSigHelper">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="41a8c-168">Retorna um auxiliar de assinatura para uma variável local.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-168">Returns a signature helper for a local variable.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetLocalVarSigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetLocalVarSigHelper ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetLocalVarSigHelper() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLocalVarSigHelper () As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetLocalVarSigHelper();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="41a8c-169">Retorna um auxiliar de assinatura para uma variável local.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-169">Returns a signature helper for a local variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41a8c-170">Um <see cref="T:System.Reflection.Emit.SignatureHelper" /> para uma variável local.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-170">A <see cref="T:System.Reflection.Emit.SignatureHelper" /> for a local variable.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLocalVarSigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetLocalVarSigHelper (System.Reflection.Module mod);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetLocalVarSigHelper(class System.Reflection.Module mod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper(System.Reflection.Module)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLocalVarSigHelper (mod As Module) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetLocalVarSigHelper(System::Reflection::Module ^ mod);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mod" Type="System.Reflection.Module" />
      </Parameters>
      <Docs>
        <param name="mod">
          <span data-ttu-id="41a8c-171">O módulo dinâmico que contém a variável local para a qual o <see langword="SignatureHelper" /> é solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-171">The dynamic module that contains the local variable for which the <see langword="SignatureHelper" /> is requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41a8c-172">Retorna um auxiliar de assinatura para uma variável local.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-172">Returns a signature helper for a local variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41a8c-173">O objeto <see langword="SignatureHelper" /> para uma variável local.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-173">The <see langword="SignatureHelper" /> object for a local variable.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMethodSigHelper">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="41a8c-174">Retorna um auxiliar de assinatura para um método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-174">Returns a signature helper for a method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMethodSigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetMethodSigHelper (System.Reflection.CallingConventions callingConvention, Type returnType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetMethodSigHelper(valuetype System.Reflection.CallingConventions callingConvention, class System.Type returnType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.CallingConventions,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMethodSigHelper (callingConvention As CallingConventions, returnType As Type) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetMethodSigHelper(System::Reflection::CallingConventions callingConvention, Type ^ returnType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
        <Parameter Name="returnType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="callingConvention">
          <span data-ttu-id="41a8c-175">A convenção de chamada do método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-175">The calling convention of the method.</span>
          </span>
        </param>
        <param name="returnType">
          <span data-ttu-id="41a8c-176">O tipo de retorno do método ou <see langword="null" /> para um tipo de retorno nulo (procedimento <see langword="Sub" /> no Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-176">The return type of the method, or <see langword="null" /> for a void return type (<see langword="Sub" /> procedure in Visual Basic).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41a8c-177">Retorna um auxiliar de assinatura para um método considerando a convenção de chamada e o tipo de retorno do método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-177">Returns a signature helper for a method given the method's calling convention and return type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41a8c-178">O objeto <see langword="SignatureHelper" /> para um método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-178">The <see langword="SignatureHelper" /> object for a method.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethodSigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetMethodSigHelper (System.Runtime.InteropServices.CallingConvention unmanagedCallingConvention, Type returnType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetMethodSigHelper(valuetype System.Runtime.InteropServices.CallingConvention unmanagedCallingConvention, class System.Type returnType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Runtime.InteropServices.CallingConvention,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMethodSigHelper (unmanagedCallingConvention As CallingConvention, returnType As Type) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetMethodSigHelper(System::Runtime::InteropServices::CallingConvention unmanagedCallingConvention, Type ^ returnType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unmanagedCallingConvention" Type="System.Runtime.InteropServices.CallingConvention" />
        <Parameter Name="returnType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="unmanagedCallingConvention">
          <span data-ttu-id="41a8c-179">A convenção de chamada não gerenciada do método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-179">The unmanaged calling convention of the method.</span>
          </span>
        </param>
        <param name="returnType">
          <span data-ttu-id="41a8c-180">O tipo de retorno do método ou <see langword="null" /> para um tipo de retorno nulo (procedimento <see langword="Sub" /> no Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-180">The return type of the method, or <see langword="null" /> for a void return type (<see langword="Sub" /> procedure in Visual Basic).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41a8c-181">Retorna um auxiliar de assinatura para um método considerando a convenção de chamada não gerenciada e o tipo de retorno do método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-181">Returns a signature helper for a method given the method's unmanaged calling convention and return type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41a8c-182">O objeto <see langword="SignatureHelper" /> para um método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-182">The <see langword="SignatureHelper" /> object for a method.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41a8c-183">
            <paramref name="unmanagedCallConv" /> é uma convenção de chamada não gerenciada desconhecida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-183">
              <paramref name="unmanagedCallConv" /> is an unknown unmanaged calling convention.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMethodSigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetMethodSigHelper (System.Reflection.Module mod, System.Reflection.CallingConventions callingConvention, Type returnType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetMethodSigHelper(class System.Reflection.Module mod, valuetype System.Reflection.CallingConventions callingConvention, class System.Type returnType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module,System.Reflection.CallingConventions,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMethodSigHelper (mod As Module, callingConvention As CallingConventions, returnType As Type) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetMethodSigHelper(System::Reflection::Module ^ mod, System::Reflection::CallingConventions callingConvention, Type ^ returnType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mod" Type="System.Reflection.Module" />
        <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
        <Parameter Name="returnType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="mod">
          <span data-ttu-id="41a8c-184">O <see cref="T:System.Reflection.Emit.ModuleBuilder" /> que contém o método para o qual o <see langword="SignatureHelper" /> é solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-184">The <see cref="T:System.Reflection.Emit.ModuleBuilder" /> that contains the method for which the <see langword="SignatureHelper" /> is requested.</span>
          </span>
        </param>
        <param name="callingConvention">
          <span data-ttu-id="41a8c-185">A convenção de chamada do método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-185">The calling convention of the method.</span>
          </span>
        </param>
        <param name="returnType">
          <span data-ttu-id="41a8c-186">O tipo de retorno do método ou <see langword="null" /> para um tipo de retorno nulo (procedimento <see langword="Sub" /> no Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-186">The return type of the method, or <see langword="null" /> for a void return type (<see langword="Sub" /> procedure in Visual Basic).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41a8c-187">Retorna um auxiliar de assinatura para um método considerando o módulo, a convenção de chamada e o tipo de retorno do método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-187">Returns a signature helper for a method given the method's module, calling convention, and return type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41a8c-188">O objeto <see langword="SignatureHelper" /> para um método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-188">The <see langword="SignatureHelper" /> object for a method.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41a8c-189">
            <paramref name="mod" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-189">
              <paramref name="mod" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41a8c-190">
            <paramref name="mod" /> não é um <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-190">
              <paramref name="mod" /> is not a <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMethodSigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetMethodSigHelper (System.Reflection.Module mod, System.Runtime.InteropServices.CallingConvention unmanagedCallConv, Type returnType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetMethodSigHelper(class System.Reflection.Module mod, valuetype System.Runtime.InteropServices.CallingConvention unmanagedCallConv, class System.Type returnType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module,System.Runtime.InteropServices.CallingConvention,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMethodSigHelper (mod As Module, unmanagedCallConv As CallingConvention, returnType As Type) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetMethodSigHelper(System::Reflection::Module ^ mod, System::Runtime::InteropServices::CallingConvention unmanagedCallConv, Type ^ returnType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mod" Type="System.Reflection.Module" />
        <Parameter Name="unmanagedCallConv" Type="System.Runtime.InteropServices.CallingConvention" />
        <Parameter Name="returnType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="mod">
          <span data-ttu-id="41a8c-191">O <see cref="T:System.Reflection.Emit.ModuleBuilder" /> que contém o método para o qual o <see langword="SignatureHelper" /> é solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-191">The <see cref="T:System.Reflection.Emit.ModuleBuilder" /> that contains the method for which the <see langword="SignatureHelper" /> is requested.</span>
          </span>
        </param>
        <param name="unmanagedCallConv">
          <span data-ttu-id="41a8c-192">A convenção de chamada não gerenciada do método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-192">The unmanaged calling convention of the method.</span>
          </span>
        </param>
        <param name="returnType">
          <span data-ttu-id="41a8c-193">O tipo de retorno do método ou <see langword="null" /> para um tipo de retorno nulo (procedimento <see langword="Sub" /> no Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-193">The return type of the method, or <see langword="null" /> for a void return type (<see langword="Sub" /> procedure in Visual Basic).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41a8c-194">Retorna um auxiliar de assinatura para um método considerando o módulo, a convenção de chamada não gerenciada e o tipo de retorno do método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-194">Returns a signature helper for a method given the method's module, unmanaged calling convention, and return type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41a8c-195">O objeto <see langword="SignatureHelper" /> para um método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-195">The <see langword="SignatureHelper" /> object for a method.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41a8c-196">
            <paramref name="mod" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-196">
              <paramref name="mod" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41a8c-197">
            <paramref name="mod" /> não é um <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-197">
              <paramref name="mod" /> is not a <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span>
          </span>
          <span data-ttu-id="41a8c-198">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-198">-or-</span>
          </span>
          <span data-ttu-id="41a8c-199">
            <paramref name="unmanagedCallConv" /> é uma convenção de chamada não gerenciada desconhecida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-199">
              <paramref name="unmanagedCallConv" /> is an unknown unmanaged calling convention.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMethodSigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetMethodSigHelper (System.Reflection.Module mod, Type returnType, Type[] parameterTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetMethodSigHelper(class System.Reflection.Module mod, class System.Type returnType, class System.Type[] parameterTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module,System.Type,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMethodSigHelper (mod As Module, returnType As Type, parameterTypes As Type()) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetMethodSigHelper(System::Reflection::Module ^ mod, Type ^ returnType, cli::array &lt;Type ^&gt; ^ parameterTypes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mod" Type="System.Reflection.Module" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="parameterTypes" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="mod">
          <span data-ttu-id="41a8c-200">O <see cref="T:System.Reflection.Emit.ModuleBuilder" /> que contém o método para o qual o <see langword="SignatureHelper" /> é solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-200">The <see cref="T:System.Reflection.Emit.ModuleBuilder" /> that contains the method for which the <see langword="SignatureHelper" /> is requested.</span>
          </span>
        </param>
        <param name="returnType">
          <span data-ttu-id="41a8c-201">O tipo de retorno do método ou <see langword="null" /> para um tipo de retorno nulo (procedimento <see langword="Sub" /> no Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-201">The return type of the method, or <see langword="null" /> for a void return type (<see langword="Sub" /> procedure in Visual Basic).</span>
          </span>
        </param>
        <param name="parameterTypes">
          <span data-ttu-id="41a8c-202">Os tipos dos argumentos do método ou <see langword="null" /> se o método não tiver argumentos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-202">The types of the arguments of the method, or <see langword="null" /> if the method has no arguments.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41a8c-203">Retorna um auxiliar de assinatura para um método com uma convenção de chamada padrão, considerando o módulo, o tipo de retorno e os tipos de argumento do método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-203">Returns a signature helper for a method with a standard calling convention, given the method's module, return type, and argument types.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41a8c-204">O objeto <see langword="SignatureHelper" /> para um método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-204">The <see langword="SignatureHelper" /> object for a method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41a8c-205">Essa sobrecarga cria uma assinatura com uma convenção de chamada padrão.</span><span class="sxs-lookup"><span data-stu-id="41a8c-205">This overload creates a signature with a standard calling convention.</span></span>  
  
 <span data-ttu-id="41a8c-206">Para criar uma assinatura de método com modificadores personalizados, use o <xref:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper%28System.Reflection.Module%2CSystem.Reflection.CallingConventions%2CSystem.Type%29> de sobrecarga de método e, em seguida, use o <xref:System.Reflection.Emit.SignatureHelper.AddArgument%28System.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29> ou <xref:System.Reflection.Emit.SignatureHelper.AddArguments%28System.Type%5B%5D%2CSystem.Type%5B%5D%5B%5D%2CSystem.Type%5B%5D%5B%5D%29> sobrecargas do método para adicionar argumentos com modificadores personalizados.</span><span class="sxs-lookup"><span data-stu-id="41a8c-206">To create a method signature with custom modifiers, use the <xref:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper%28System.Reflection.Module%2CSystem.Reflection.CallingConventions%2CSystem.Type%29> method overload and then use the <xref:System.Reflection.Emit.SignatureHelper.AddArgument%28System.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29> or <xref:System.Reflection.Emit.SignatureHelper.AddArguments%28System.Type%5B%5D%2CSystem.Type%5B%5D%5B%5D%2CSystem.Type%5B%5D%5B%5D%29> method overloads to add arguments with custom modifiers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41a8c-207">
            <paramref name="mod" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-207">
              <paramref name="mod" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="41a8c-208">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-208">-or-</span>
          </span>
          <span data-ttu-id="41a8c-209">Um elemento de <paramref name="parameterTypes" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-209">An element of <paramref name="parameterTypes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41a8c-210">
            <paramref name="mod" /> não é um <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-210">
              <paramref name="mod" /> is not a <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPropertySigHelper">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="41a8c-211">Retorna um auxiliar de assinatura para uma propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-211">Returns a signature helper for a property.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPropertySigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetPropertySigHelper (System.Reflection.Module mod, Type returnType, Type[] parameterTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetPropertySigHelper(class System.Reflection.Module mod, class System.Type returnType, class System.Type[] parameterTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Type,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPropertySigHelper (mod As Module, returnType As Type, parameterTypes As Type()) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetPropertySigHelper(System::Reflection::Module ^ mod, Type ^ returnType, cli::array &lt;Type ^&gt; ^ parameterTypes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mod" Type="System.Reflection.Module" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="parameterTypes" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="mod">
          <span data-ttu-id="41a8c-212">O <see cref="T:System.Reflection.Emit.ModuleBuilder" /> que contém a propriedade para a qual o <see cref="T:System.Reflection.Emit.SignatureHelper" /> é solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-212">The <see cref="T:System.Reflection.Emit.ModuleBuilder" /> that contains the property for which the <see cref="T:System.Reflection.Emit.SignatureHelper" /> is requested.</span>
          </span>
        </param>
        <param name="returnType">
          <span data-ttu-id="41a8c-213">O tipo de propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-213">The property type.</span>
          </span>
        </param>
        <param name="parameterTypes">
          <span data-ttu-id="41a8c-214">Os tipos de argumento ou <see langword="null" /> se a propriedade não tiver argumentos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-214">The argument types, or <see langword="null" /> if the property has no arguments.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41a8c-215">Retorna um auxiliar de assinatura para uma propriedade, considerando o módulo dinâmico que contém a propriedade, o tipo de propriedade e os argumentos de propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-215">Returns a signature helper for a property, given the dynamic module that contains the property, the property type, and the property arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41a8c-216">Um objeto <see cref="T:System.Reflection.Emit.SignatureHelper" /> para uma propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-216">A <see cref="T:System.Reflection.Emit.SignatureHelper" /> object for a property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41a8c-217">Para criar um auxiliar de assinatura para uma propriedade com modificadores personalizadas necessárias ou opcionais, use o <xref:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper%28System.Reflection.Module%2CSystem.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%5B%5D%2CSystem.Type%5B%5D%5B%5D%29> sobrecarga do método.</span><span class="sxs-lookup"><span data-stu-id="41a8c-217">To create a signature helper for a property with optional or required custom modifiers, use the <xref:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper%28System.Reflection.Module%2CSystem.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%5B%5D%2CSystem.Type%5B%5D%5B%5D%29> method overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41a8c-218">
            <paramref name="mod" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-218">
              <paramref name="mod" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="41a8c-219">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-219">-or-</span>
          </span>
          <span data-ttu-id="41a8c-220">Um elemento de <paramref name="parameterTypes" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-220">An element of <paramref name="parameterTypes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41a8c-221">
            <paramref name="mod" /> não é um <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-221">
              <paramref name="mod" /> is not a <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPropertySigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetPropertySigHelper (System.Reflection.Module mod, Type returnType, Type[] requiredReturnTypeCustomModifiers, Type[] optionalReturnTypeCustomModifiers, Type[] parameterTypes, Type[][] requiredParameterTypeCustomModifiers, Type[][] optionalParameterTypeCustomModifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetPropertySigHelper(class System.Reflection.Module mod, class System.Type returnType, class System.Type[] requiredReturnTypeCustomModifiers, class System.Type[] optionalReturnTypeCustomModifiers, class System.Type[] parameterTypes, class System.Type[][] requiredParameterTypeCustomModifiers, class System.Type[][] optionalParameterTypeCustomModifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPropertySigHelper (mod As Module, returnType As Type, requiredReturnTypeCustomModifiers As Type(), optionalReturnTypeCustomModifiers As Type(), parameterTypes As Type(), requiredParameterTypeCustomModifiers As Type()(), optionalParameterTypeCustomModifiers As Type()()) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetPropertySigHelper(System::Reflection::Module ^ mod, Type ^ returnType, cli::array &lt;Type ^&gt; ^ requiredReturnTypeCustomModifiers, cli::array &lt;Type ^&gt; ^ optionalReturnTypeCustomModifiers, cli::array &lt;Type ^&gt; ^ parameterTypes, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ requiredParameterTypeCustomModifiers, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ optionalParameterTypeCustomModifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mod" Type="System.Reflection.Module" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="requiredReturnTypeCustomModifiers" Type="System.Type[]" />
        <Parameter Name="optionalReturnTypeCustomModifiers" Type="System.Type[]" />
        <Parameter Name="parameterTypes" Type="System.Type[]" />
        <Parameter Name="requiredParameterTypeCustomModifiers" Type="System.Type[][]" />
        <Parameter Name="optionalParameterTypeCustomModifiers" Type="System.Type[][]" />
      </Parameters>
      <Docs>
        <param name="mod">
          <span data-ttu-id="41a8c-222">O <see cref="T:System.Reflection.Emit.ModuleBuilder" /> que contém a propriedade para a qual o <see cref="T:System.Reflection.Emit.SignatureHelper" /> é solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-222">The <see cref="T:System.Reflection.Emit.ModuleBuilder" /> that contains the property for which the <see cref="T:System.Reflection.Emit.SignatureHelper" /> is requested.</span>
          </span>
        </param>
        <param name="returnType">
          <span data-ttu-id="41a8c-223">O tipo de propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-223">The property type.</span>
          </span>
        </param>
        <param name="requiredReturnTypeCustomModifiers">
          <span data-ttu-id="41a8c-224">Uma matriz de tipos que representa os modificadores personalizados obrigatórios para o tipo de retorno, como <see cref="T:System.Runtime.CompilerServices.IsConst" /> ou <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-224">An array of types representing the required custom modifiers for the return type, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span>
          </span>
          <span data-ttu-id="41a8c-225">Se o tipo de retorno não tiver modificadores personalizados obrigatórios, especifique <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-225">If the return type has no required custom modifiers, specify <see langword="null" />.</span>
          </span>
        </param>
        <param name="optionalReturnTypeCustomModifiers">
          <span data-ttu-id="41a8c-226">Uma matriz de tipos que representa os modificadores personalizados opcionais para o tipo de retorno, como <see cref="T:System.Runtime.CompilerServices.IsConst" /> ou <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-226">An array of types representing the optional custom modifiers for the return type, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span>
          </span>
          <span data-ttu-id="41a8c-227">Se o tipo de retorno não tiver modificadores personalizados opcionais, especifique <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-227">If the return type has no optional custom modifiers, specify <see langword="null" />.</span>
          </span>
        </param>
        <param name="parameterTypes">
          <span data-ttu-id="41a8c-228">Os tipos dos argumentos da propriedade ou <see langword="null" /> se a propriedade não tiver nenhum argumento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-228">The types of the property's arguments, or <see langword="null" /> if the property has no arguments.</span>
          </span>
        </param>
        <param name="requiredParameterTypeCustomModifiers">
          <span data-ttu-id="41a8c-229">Uma matriz de matrizes de tipos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-229">An array of arrays of types.</span>
          </span>
          <span data-ttu-id="41a8c-230">Cada matriz de tipos representa os modificadores personalizados obrigatórios para o argumento correspondente da propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-230">Each array of types represents the required custom modifiers for the corresponding argument of the property.</span>
          </span>
          <span data-ttu-id="41a8c-231">Se um argumento específico não tiver nenhum modificador personalizado obrigatório, especifique <see langword="null" />, em vez de uma matriz de tipos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-231">If a particular argument has no required custom modifiers, specify <see langword="null" /> instead of an array of types.</span>
          </span>
          <span data-ttu-id="41a8c-232">Se a propriedade não tiver nenhum argumento ou se nenhum argumento tiver modificadores personalizados obrigatórios, especifique <see langword="null" /> em vez de uma matriz de matrizes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-232">If the property has no arguments, or if none of the arguments have required custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span>
          </span>
        </param>
        <param name="optionalParameterTypeCustomModifiers">
          <span data-ttu-id="41a8c-233">Uma matriz de matrizes de tipos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-233">An array of arrays of types.</span>
          </span>
          <span data-ttu-id="41a8c-234">Cada matriz de tipos representa os modificadores personalizados opcionais para o argumento correspondente da propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-234">Each array of types represents the optional custom modifiers for the corresponding argument of the property.</span>
          </span>
          <span data-ttu-id="41a8c-235">Se um argumento específico não tiver nenhum modificador personalizado opcional, especifique <see langword="null" />, em vez de uma matriz de tipos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-235">If a particular argument has no optional custom modifiers, specify <see langword="null" /> instead of an array of types.</span>
          </span>
          <span data-ttu-id="41a8c-236">Se a propriedade não tiver nenhum argumento ou se nenhum argumento tiver modificadores personalizados opcionais, especifique <see langword="null" /> em vez de uma matriz de matrizes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-236">If the property has no arguments, or if none of the arguments have optional custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41a8c-237">Retorna um auxiliar de assinatura para uma propriedade, considerando o módulo dinâmico que contém a propriedade, o tipo de propriedade, os argumentos de propriedade e os modificadores personalizados para o tipo de retorno e os argumentos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-237">Returns a signature helper for a property, given the dynamic module that contains the property, the property type, the property arguments, and custom modifiers for the return type and arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41a8c-238">Um objeto <see cref="T:System.Reflection.Emit.SignatureHelper" /> para uma propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-238">A <see cref="T:System.Reflection.Emit.SignatureHelper" /> object for a property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41a8c-239">Consulte o <xref:System.Runtime.CompilerServices> namespace para classes que representam os modificadores personalizados.</span><span class="sxs-lookup"><span data-stu-id="41a8c-239">See the <xref:System.Runtime.CompilerServices> namespace for classes that represent custom modifiers.</span></span>  
  
 <span data-ttu-id="41a8c-240">Se uma propriedade não tiver nenhum modificador personalizado, use o <xref:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper%28System.Reflection.Module%2CSystem.Type%2CSystem.Type%5B%5D%29> sobrecarga do método.</span><span class="sxs-lookup"><span data-stu-id="41a8c-240">If a property has no custom modifiers, use the <xref:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper%28System.Reflection.Module%2CSystem.Type%2CSystem.Type%5B%5D%29> method overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41a8c-241">
            <paramref name="mod" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-241">
              <paramref name="mod" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="41a8c-242">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-242">-or-</span>
          </span>
          <span data-ttu-id="41a8c-243">Um elemento de <paramref name="parameterTypes" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-243">An element of <paramref name="parameterTypes" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="41a8c-244">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-244">-or-</span>
          </span>
          <span data-ttu-id="41a8c-245">Um dos modificadores personalizados especificados é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-245">One of the specified custom modifiers is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="41a8c-246">(No entanto, <see langword="null" /> pode ser especificado para a matriz de modificadores personalizados para qualquer argumento.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-246">(However, <see langword="null" /> can be specified for the array of custom modifiers for any argument.)</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41a8c-247">A assinatura já foi encerrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-247">The signature has already been finished.</span>
          </span>
          <span data-ttu-id="41a8c-248">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-248">-or-</span>
          </span>
          <span data-ttu-id="41a8c-249">
            <paramref name="mod" /> não é um <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-249">
              <paramref name="mod" /> is not a <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span>
          </span>
          <span data-ttu-id="41a8c-250">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-250">-or-</span>
          </span>
          <span data-ttu-id="41a8c-251">Um dos modificadores personalizados especificados é um tipo de matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-251">One of the specified custom modifiers is an array type.</span>
          </span>
          <span data-ttu-id="41a8c-252">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-252">-or-</span>
          </span>
          <span data-ttu-id="41a8c-253">Um dos modificadores personalizados especificados é um tipo genérico aberto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-253">One of the specified custom modifiers is an open generic type.</span>
          </span>
          <span data-ttu-id="41a8c-254">Ou seja, a propriedade <see cref="P:System.Type.ContainsGenericParameters" /> é <see langword="true" /> para o modificador personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-254">That is, the <see cref="P:System.Type.ContainsGenericParameters" /> property is <see langword="true" /> for the custom modifier.</span>
          </span>
          <span data-ttu-id="41a8c-255">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-255">-or-</span>
          </span>
          <span data-ttu-id="41a8c-256">O tamanho de <paramref name="requiredParameterTypeCustomModifiers" /> ou <paramref name="optionalParameterTypeCustomModifiers" /> não é igual ao tamanho de <paramref name="parameterTypes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-256">The size of <paramref name="requiredParameterTypeCustomModifiers" /> or <paramref name="optionalParameterTypeCustomModifiers" /> does not equal the size of <paramref name="parameterTypes" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPropertySigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetPropertySigHelper (System.Reflection.Module mod, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] requiredReturnTypeCustomModifiers, Type[] optionalReturnTypeCustomModifiers, Type[] parameterTypes, Type[][] requiredParameterTypeCustomModifiers, Type[][] optionalParameterTypeCustomModifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetPropertySigHelper(class System.Reflection.Module mod, valuetype System.Reflection.CallingConventions callingConvention, class System.Type returnType, class System.Type[] requiredReturnTypeCustomModifiers, class System.Type[] optionalReturnTypeCustomModifiers, class System.Type[] parameterTypes, class System.Type[][] requiredParameterTypeCustomModifiers, class System.Type[][] optionalParameterTypeCustomModifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPropertySigHelper (mod As Module, callingConvention As CallingConventions, returnType As Type, requiredReturnTypeCustomModifiers As Type(), optionalReturnTypeCustomModifiers As Type(), parameterTypes As Type(), requiredParameterTypeCustomModifiers As Type()(), optionalParameterTypeCustomModifiers As Type()()) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetPropertySigHelper(System::Reflection::Module ^ mod, System::Reflection::CallingConventions callingConvention, Type ^ returnType, cli::array &lt;Type ^&gt; ^ requiredReturnTypeCustomModifiers, cli::array &lt;Type ^&gt; ^ optionalReturnTypeCustomModifiers, cli::array &lt;Type ^&gt; ^ parameterTypes, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ requiredParameterTypeCustomModifiers, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ optionalParameterTypeCustomModifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mod" Type="System.Reflection.Module" />
        <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="requiredReturnTypeCustomModifiers" Type="System.Type[]" />
        <Parameter Name="optionalReturnTypeCustomModifiers" Type="System.Type[]" />
        <Parameter Name="parameterTypes" Type="System.Type[]" />
        <Parameter Name="requiredParameterTypeCustomModifiers" Type="System.Type[][]" />
        <Parameter Name="optionalParameterTypeCustomModifiers" Type="System.Type[][]" />
      </Parameters>
      <Docs>
        <param name="mod">
          <span data-ttu-id="41a8c-257">O <see cref="T:System.Reflection.Emit.ModuleBuilder" /> que contém a propriedade para a qual o <see cref="T:System.Reflection.Emit.SignatureHelper" /> é solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-257">The <see cref="T:System.Reflection.Emit.ModuleBuilder" /> that contains the property for which the <see cref="T:System.Reflection.Emit.SignatureHelper" /> is requested.</span>
          </span>
        </param>
        <param name="callingConvention">
          <span data-ttu-id="41a8c-258">A convenção de chamada dos acessadores de propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-258">The calling convention of the property accessors.</span>
          </span>
        </param>
        <param name="returnType">
          <span data-ttu-id="41a8c-259">O tipo de propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-259">The property type.</span>
          </span>
        </param>
        <param name="requiredReturnTypeCustomModifiers">
          <span data-ttu-id="41a8c-260">Uma matriz de tipos que representa os modificadores personalizados obrigatórios para o tipo de retorno, como <see cref="T:System.Runtime.CompilerServices.IsConst" /> ou <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-260">An array of types representing the required custom modifiers for the return type, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span>
          </span>
          <span data-ttu-id="41a8c-261">Se o tipo de retorno não tiver modificadores personalizados obrigatórios, especifique <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-261">If the return type has no required custom modifiers, specify <see langword="null" />.</span>
          </span>
        </param>
        <param name="optionalReturnTypeCustomModifiers">
          <span data-ttu-id="41a8c-262">Uma matriz de tipos que representa os modificadores personalizados opcionais para o tipo de retorno, como <see cref="T:System.Runtime.CompilerServices.IsConst" /> ou <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-262">An array of types representing the optional custom modifiers for the return type, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span>
          </span>
          <span data-ttu-id="41a8c-263">Se o tipo de retorno não tiver modificadores personalizados opcionais, especifique <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-263">If the return type has no optional custom modifiers, specify <see langword="null" />.</span>
          </span>
        </param>
        <param name="parameterTypes">
          <span data-ttu-id="41a8c-264">Os tipos dos argumentos da propriedade ou <see langword="null" /> se a propriedade não tiver nenhum argumento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-264">The types of the property's arguments, or <see langword="null" /> if the property has no arguments.</span>
          </span>
        </param>
        <param name="requiredParameterTypeCustomModifiers">
          <span data-ttu-id="41a8c-265">Uma matriz de matrizes de tipos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-265">An array of arrays of types.</span>
          </span>
          <span data-ttu-id="41a8c-266">Cada matriz de tipos representa os modificadores personalizados obrigatórios para o argumento correspondente da propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-266">Each array of types represents the required custom modifiers for the corresponding argument of the property.</span>
          </span>
          <span data-ttu-id="41a8c-267">Se um argumento específico não tiver nenhum modificador personalizado obrigatório, especifique <see langword="null" />, em vez de uma matriz de tipos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-267">If a particular argument has no required custom modifiers, specify <see langword="null" /> instead of an array of types.</span>
          </span>
          <span data-ttu-id="41a8c-268">Se a propriedade não tiver nenhum argumento ou se nenhum argumento tiver modificadores personalizados obrigatórios, especifique <see langword="null" /> em vez de uma matriz de matrizes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-268">If the property has no arguments, or if none of the arguments have required custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span>
          </span>
        </param>
        <param name="optionalParameterTypeCustomModifiers">
          <span data-ttu-id="41a8c-269">Uma matriz de matrizes de tipos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-269">An array of arrays of types.</span>
          </span>
          <span data-ttu-id="41a8c-270">Cada matriz de tipos representa os modificadores personalizados opcionais para o argumento correspondente da propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-270">Each array of types represents the optional custom modifiers for the corresponding argument of the property.</span>
          </span>
          <span data-ttu-id="41a8c-271">Se um argumento específico não tiver nenhum modificador personalizado opcional, especifique <see langword="null" />, em vez de uma matriz de tipos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-271">If a particular argument has no optional custom modifiers, specify <see langword="null" /> instead of an array of types.</span>
          </span>
          <span data-ttu-id="41a8c-272">Se a propriedade não tiver nenhum argumento ou se nenhum argumento tiver modificadores personalizados opcionais, especifique <see langword="null" /> em vez de uma matriz de matrizes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-272">If the property has no arguments, or if none of the arguments have optional custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41a8c-273">Retorna um auxiliar de assinatura para uma propriedade, considerando o módulo dinâmico que contém a propriedade, a convenção de chamada, o tipo de propriedade, os argumentos de propriedade e os modificadores personalizados para o tipo de retorno e argumentos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-273">Returns a signature helper for a property, given the dynamic module that contains the property, the calling convention, the property type, the property arguments, and custom modifiers for the return type and arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41a8c-274">Um objeto <see cref="T:System.Reflection.Emit.SignatureHelper" /> para uma propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-274">A <see cref="T:System.Reflection.Emit.SignatureHelper" /> object for a property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41a8c-275">Consulte o <xref:System.Runtime.CompilerServices> namespace para classes que representam os modificadores personalizados.</span><span class="sxs-lookup"><span data-stu-id="41a8c-275">See the <xref:System.Runtime.CompilerServices> namespace for classes that represent custom modifiers.</span></span>  
  
 <span data-ttu-id="41a8c-276">Se uma propriedade não tiver nenhum modificador personalizado, use o <xref:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper%28System.Reflection.Module%2CSystem.Type%2CSystem.Type%5B%5D%29> sobrecarga do método.</span><span class="sxs-lookup"><span data-stu-id="41a8c-276">If a property has no custom modifiers, use the <xref:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper%28System.Reflection.Module%2CSystem.Type%2CSystem.Type%5B%5D%29> method overload.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="41a8c-277">Essa sobrecarga de método foi introduzida no [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] ou posterior.</span><span class="sxs-lookup"><span data-stu-id="41a8c-277">This method overload is introduced in the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41a8c-278">
            <paramref name="mod" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-278">
              <paramref name="mod" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="41a8c-279">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-279">-or-</span>
          </span>
          <span data-ttu-id="41a8c-280">Um elemento de <paramref name="parameterTypes" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-280">An element of <paramref name="parameterTypes" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="41a8c-281">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-281">-or-</span>
          </span>
          <span data-ttu-id="41a8c-282">Um dos modificadores personalizados especificados é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-282">One of the specified custom modifiers is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="41a8c-283">(No entanto, <see langword="null" /> pode ser especificado para a matriz de modificadores personalizados para qualquer argumento.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-283">(However, <see langword="null" /> can be specified for the array of custom modifiers for any argument.)</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="41a8c-284">A assinatura já foi encerrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-284">The signature has already been finished.</span>
          </span>
          <span data-ttu-id="41a8c-285">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-285">-or-</span>
          </span>
          <span data-ttu-id="41a8c-286">
            <paramref name="mod" /> não é um <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-286">
              <paramref name="mod" /> is not a <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span>
          </span>
          <span data-ttu-id="41a8c-287">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-287">-or-</span>
          </span>
          <span data-ttu-id="41a8c-288">Um dos modificadores personalizados especificados é um tipo de matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-288">One of the specified custom modifiers is an array type.</span>
          </span>
          <span data-ttu-id="41a8c-289">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-289">-or-</span>
          </span>
          <span data-ttu-id="41a8c-290">Um dos modificadores personalizados especificados é um tipo genérico aberto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-290">One of the specified custom modifiers is an open generic type.</span>
          </span>
          <span data-ttu-id="41a8c-291">Ou seja, a propriedade <see cref="P:System.Type.ContainsGenericParameters" /> é <see langword="true" /> para o modificador personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-291">That is, the <see cref="P:System.Type.ContainsGenericParameters" /> property is <see langword="true" /> for the custom modifier.</span>
          </span>
          <span data-ttu-id="41a8c-292">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-292">-or-</span>
          </span>
          <span data-ttu-id="41a8c-293">O tamanho de <paramref name="requiredParameterTypeCustomModifiers" /> ou <paramref name="optionalParameterTypeCustomModifiers" /> não é igual ao tamanho de <paramref name="parameterTypes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-293">The size of <paramref name="requiredParameterTypeCustomModifiers" /> or <paramref name="optionalParameterTypeCustomModifiers" /> does not equal the size of <paramref name="parameterTypes" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSignature">
      <MemberSignature Language="C#" Value="public byte[] GetSignature ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetSignature() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetSignature" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSignature () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetSignature();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="41a8c-294">Adiciona o token final à assinatura e marca a assinatura como concluída. Portanto, nenhum token adicional pode ser adicionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-294">Adds the end token to the signature and marks the signature as finished, so no further tokens can be added.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41a8c-295">Retorna uma matriz de bytes composta da assinatura completa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-295">Returns a byte array made up of the full signature.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._SignatureHelper.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _SignatureHelper.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._SignatureHelper.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _SignatureHelper.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._SignatureHelper.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_SignatureHelper::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._SignatureHelper.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid">
          <span data-ttu-id="41a8c-296">Reservado para uso futuro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-296">Reserved for future use.</span>
          </span>
          <span data-ttu-id="41a8c-297">Deve ser IID_NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-297">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="rgszNames">
          <span data-ttu-id="41a8c-298">Matriz passada de nomes a serem mapeados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-298">Passed-in array of names to be mapped.</span>
          </span>
        </param>
        <param name="cNames">
          <span data-ttu-id="41a8c-299">Contagem dos nomes a serem mapeados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-299">Count of the names to be mapped.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="41a8c-300">O contexto de localidade no qual interpretar os nomes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-300">The locale context in which to interpret the names.</span>
          </span>
        </param>
        <param name="rgDispId">
          <span data-ttu-id="41a8c-301">Matriz alocada pelo chamador que recebe os IDs correspondentes aos nomes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-301">Caller-allocated array which receives the IDs corresponding to the names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41a8c-302">Mapeia um conjunto de nomes para um conjunto correspondente de identificadores de expedição.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-302">Maps a set of names to a corresponding set of dispatch identifiers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41a8c-303">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="41a8c-303">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="41a8c-304">Para obter mais informações sobre `IDispatch::GetIDsOfNames`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="41a8c-304">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="41a8c-305">Não há suporte para acesso com associação tardia usando a interface <c>IDispatch</c> COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-305">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._SignatureHelper.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _SignatureHelper.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._SignatureHelper.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _SignatureHelper.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._SignatureHelper.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_SignatureHelper::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._SignatureHelper.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo">
          <span data-ttu-id="41a8c-306">As informações de tipo a serem retornadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-306">The type information to return.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="41a8c-307">O identificador de localidade das informações do tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-307">The locale identifier for the type information.</span>
          </span>
        </param>
        <param name="ppTInfo">
          <span data-ttu-id="41a8c-308">Recebe um ponteiro para o objeto de informações de tipo solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-308">Receives a pointer to the requested type information object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41a8c-309">Recupera as informações do tipo de um objeto, que podem ser usadas para obter informações de tipo para uma interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-309">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41a8c-310">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="41a8c-310">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="41a8c-311">Para obter mais informações sobre `IDispatch::GetTypeInfo`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="41a8c-311">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="41a8c-312">Não há suporte para acesso com associação tardia usando a interface <c>IDispatch</c> COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-312">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._SignatureHelper.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _SignatureHelper.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._SignatureHelper.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _SignatureHelper.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._SignatureHelper.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_SignatureHelper::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._SignatureHelper.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo">
          <span data-ttu-id="41a8c-313">Aponta para um local que recebe o número de interfaces de informações de tipo fornecido pelo objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-313">Points to a location that receives the number of type information interfaces provided by the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41a8c-314">Retorna o número de interfaces de informações do tipo que um objeto fornece (0 ou 1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-314">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41a8c-315">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="41a8c-315">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="41a8c-316">Para obter mais informações sobre `IDispatch::GetTypeInfoCount`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="41a8c-316">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="41a8c-317">Não há suporte para acesso com associação tardia usando a interface <c>IDispatch</c> COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-317">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._SignatureHelper.Invoke">
      <MemberSignature Language="C#" Value="void _SignatureHelper.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._SignatureHelper.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _SignatureHelper.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._SignatureHelper.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_SignatureHelper::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._SignatureHelper.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember">
          <span data-ttu-id="41a8c-318">Identifica o membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-318">Identifies the member.</span>
          </span>
        </param>
        <param name="riid">
          <span data-ttu-id="41a8c-319">Reservado para uso futuro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-319">Reserved for future use.</span>
          </span>
          <span data-ttu-id="41a8c-320">Deve ser IID_NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-320">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="41a8c-321">O contexto de localidade no qual interpretar argumentos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-321">The locale context in which to interpret arguments.</span>
          </span>
        </param>
        <param name="wFlags">
          <span data-ttu-id="41a8c-322">Sinalizadores que descrevem o contexto da chamada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-322">Flags describing the context of the call.</span>
          </span>
        </param>
        <param name="pDispParams">
          <span data-ttu-id="41a8c-323">Ponteiro para uma estrutura contendo uma matriz de argumentos, uma matriz de DISPIDs de argumento para argumentos nomeados e contagens para o número de elementos nas matrizes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-323">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span>
          </span>
        </param>
        <param name="pVarResult">
          <span data-ttu-id="41a8c-324">Ponteiro para o local onde o resultado deve ser armazenado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-324">Pointer to the location where the result is to be stored.</span>
          </span>
        </param>
        <param name="pExcepInfo">
          <span data-ttu-id="41a8c-325">Ponteiro para uma estrutura que contém informações de exceção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-325">Pointer to a structure that contains exception information.</span>
          </span>
        </param>
        <param name="puArgErr">
          <span data-ttu-id="41a8c-326">O índice do primeiro argumento que tem um erro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-326">The index of the first argument that has an error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="41a8c-327">Fornece acesso a propriedades e métodos expostos por um objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-327">Provides access to properties and methods exposed by an object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41a8c-328">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="41a8c-328">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="41a8c-329">Para obter mais informações sobre `IDispatch::Invoke`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="41a8c-329">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="41a8c-330">Não há suporte para acesso com associação tardia usando a interface <c>IDispatch</c> COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-330">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="41a8c-331">Retorna uma cadeia de caracteres que representa os argumentos de assinatura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-331">Returns a string representing the signature arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="41a8c-332">Retorna uma cadeia de caracteres que representa os argumentos desta assinatura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="41a8c-332">Returns a string representing the arguments of this signature.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>