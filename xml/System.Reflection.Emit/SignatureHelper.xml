<Type Name="SignatureHelper" FullName="System.Reflection.Emit.SignatureHelper">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0299f8aad3d861fee187f3b70700ca0a070cdb02" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37641040" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SignatureHelper : System.Runtime.InteropServices._SignatureHelper" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit SignatureHelper extends System.Object implements class System.Runtime.InteropServices._SignatureHelper" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Emit.SignatureHelper" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SignatureHelper&#xA;Implements _SignatureHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class SignatureHelper sealed : System::Runtime::InteropServices::_SignatureHelper" />
  <TypeSignature Language="F#" Value="type SignatureHelper = class&#xA;    interface _SignatureHelper" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._SignatureHelper</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._SignatureHelper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="cf663-101">Provides methods for building signatures.</span>
      <span class="sxs-lookup">
        <span data-stu-id="cf663-101">Provides methods for building signatures.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf663-102">Use o <xref:System.Reflection.Emit.SignatureHelper> classe para criar um blob de assinatura que pode ser passado para o <xref:System.Reflection.Emit.DynamicILInfo.SetLocalSignature%2A> método o <xref:System.Reflection.Emit.DynamicILInfo> classe.</span><span class="sxs-lookup"><span data-stu-id="cf663-102">Use the <xref:System.Reflection.Emit.SignatureHelper> class to create a signature blob that can be passed to the <xref:System.Reflection.Emit.DynamicILInfo.SetLocalSignature%2A> method of the <xref:System.Reflection.Emit.DynamicILInfo> class.</span></span> <span data-ttu-id="cf663-103">Um <xref:System.Reflection.Emit.SignatureHelper> objeto também pode ser passado para o <xref:System.Reflection.Emit.ILGenerator.Emit%28System.Reflection.Emit.OpCode%2CSystem.Reflection.Emit.SignatureHelper%29?displayProperty=nameWithType> sobrecarga de método para inserir uma instrução e um token de assinatura em um fluxo do Microsoft intermediate language (MSIL).</span><span class="sxs-lookup"><span data-stu-id="cf663-103">A <xref:System.Reflection.Emit.SignatureHelper> object can also be passed to the <xref:System.Reflection.Emit.ILGenerator.Emit%28System.Reflection.Emit.OpCode%2CSystem.Reflection.Emit.SignatureHelper%29?displayProperty=nameWithType> method overload to insert an instruction and a signature token into a Microsoft intermediate language (MSIL) stream.</span></span> <span data-ttu-id="cf663-104">Para obter informações sobre blobs de assinatura e os metadados de assinatura, consulte a documentação de metadados da ECMA partição II.</span><span class="sxs-lookup"><span data-stu-id="cf663-104">For information on signature blobs and signature metadata, see the ECMA Partition II Metadata documentation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cf663-105">A documentação da ECMA partição II está disponível online; ver [ECMA c# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) no MSDN e [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) no site da Ecma International.</span><span class="sxs-lookup"><span data-stu-id="cf663-105">The ECMA Partition II documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="AddArgument">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cf663-106">Adds an argument to the signature.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-106">Adds an argument to the signature.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddArgument">
      <MemberSignature Language="C#" Value="public void AddArgument (Type clsArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArgument(class System.Type clsArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.AddArgument(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArgument (clsArgument As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArgument(Type ^ clsArgument);" />
      <MemberSignature Language="F#" Value="member this.AddArgument : Type -&gt; unit" Usage="signatureHelper.AddArgument clsArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clsArgument" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="clsArgument">
          <span data-ttu-id="cf663-107">The type of the argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-107">The type of the argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf663-108">Adds an argument to the signature.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-108">Adds an argument to the signature.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf663-109">Para adicionar um argumento com modificadores personalizados opcionais ou obrigatórias, use o <xref:System.Reflection.Emit.SignatureHelper.AddArgument%28System.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29> sobrecarga de método.</span><span class="sxs-lookup"><span data-stu-id="cf663-109">To add an argument with optional or required custom modifiers, use the <xref:System.Reflection.Emit.SignatureHelper.AddArgument%28System.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29> method overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cf663-110">The signature has already been finished.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-110">The signature has already been finished.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cf663-111">
            <paramref name="clsArgument" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-111">
              <paramref name="clsArgument" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddArgument">
      <MemberSignature Language="C#" Value="public void AddArgument (Type argument, bool pinned);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArgument(class System.Type argument, bool pinned) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.AddArgument(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArgument (argument As Type, pinned As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArgument(Type ^ argument, bool pinned);" />
      <MemberSignature Language="F#" Value="member this.AddArgument : Type * bool -&gt; unit" Usage="signatureHelper.AddArgument (argument, pinned)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Type" />
        <Parameter Name="pinned" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="cf663-112">The argument type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-112">The argument type.</span>
          </span>
        </param>
        <param name="pinned">
          <span data-ttu-id="cf663-113">
            <see langword="true" /> if the argument is pinned; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-113">
              <see langword="true" /> if the argument is pinned; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf663-114">Adds an argument of the specified type to the signature, specifying whether the argument is pinned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-114">Adds an argument of the specified type to the signature, specifying whether the argument is pinned.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf663-115">Para adicionar um argumento com modificadores personalizados opcionais ou obrigatórias, use o <xref:System.Reflection.Emit.SignatureHelper.AddArgument%28System.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29> sobrecarga de método.</span><span class="sxs-lookup"><span data-stu-id="cf663-115">To add an argument with optional or required custom modifiers, use the <xref:System.Reflection.Emit.SignatureHelper.AddArgument%28System.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29> method overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cf663-116">
            <paramref name="argument" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-116">
              <paramref name="argument" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddArgument">
      <MemberSignature Language="C#" Value="public void AddArgument (Type argument, Type[] requiredCustomModifiers, Type[] optionalCustomModifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArgument(class System.Type argument, class System.Type[] requiredCustomModifiers, class System.Type[] optionalCustomModifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.AddArgument(System.Type,System.Type[],System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArgument (argument As Type, requiredCustomModifiers As Type(), optionalCustomModifiers As Type())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArgument(Type ^ argument, cli::array &lt;Type ^&gt; ^ requiredCustomModifiers, cli::array &lt;Type ^&gt; ^ optionalCustomModifiers);" />
      <MemberSignature Language="F#" Value="member this.AddArgument : Type * Type[] * Type[] -&gt; unit" Usage="signatureHelper.AddArgument (argument, requiredCustomModifiers, optionalCustomModifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Type" />
        <Parameter Name="requiredCustomModifiers" Type="System.Type[]" />
        <Parameter Name="optionalCustomModifiers" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="cf663-117">The argument type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-117">The argument type.</span>
          </span>
        </param>
        <param name="requiredCustomModifiers">
          <span data-ttu-id="cf663-118">An array of types representing the required custom modifiers for the argument, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-118">An array of types representing the required custom modifiers for the argument, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span>
          </span>
          <span data-ttu-id="cf663-119">If the argument has no required custom modifiers, specify <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-119">If the argument has no required custom modifiers, specify <see langword="null" />.</span>
          </span>
        </param>
        <param name="optionalCustomModifiers">
          <span data-ttu-id="cf663-120">An array of types representing the optional custom modifiers for the argument, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-120">An array of types representing the optional custom modifiers for the argument, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span>
          </span>
          <span data-ttu-id="cf663-121">If the argument has no optional custom modifiers, specify <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-121">If the argument has no optional custom modifiers, specify <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf663-122">Adds an argument to the signature, with the specified custom modifiers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-122">Adds an argument to the signature, with the specified custom modifiers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf663-123">Consulte o <xref:System.Runtime.CompilerServices> namespace para as classes que representam os modificadores personalizados.</span><span class="sxs-lookup"><span data-stu-id="cf663-123">See the <xref:System.Runtime.CompilerServices> namespace for classes that represent custom modifiers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cf663-124">
            <paramref name="argument" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-124">
              <paramref name="argument" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="cf663-125">-or-  An element of <paramref name="requiredCustomModifiers" /> or <paramref name="optionalCustomModifiers" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-125">-or-  An element of <paramref name="requiredCustomModifiers" /> or <paramref name="optionalCustomModifiers" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cf663-126">The signature has already been finished.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-126">The signature has already been finished.</span>
          </span>
          <span data-ttu-id="cf663-127">-or-  One of the specified custom modifiers is an array type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-127">-or-  One of the specified custom modifiers is an array type.</span>
          </span>
          <span data-ttu-id="cf663-128">-or-  One of the specified custom modifiers is an open generic type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-128">-or-  One of the specified custom modifiers is an open generic type.</span>
          </span>
          <span data-ttu-id="cf663-129">That is, the <see cref="P:System.Type.ContainsGenericParameters" /> property is <see langword="true" /> for the custom modifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-129">That is, the <see cref="P:System.Type.ContainsGenericParameters" /> property is <see langword="true" /> for the custom modifier.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddArguments">
      <MemberSignature Language="C#" Value="public void AddArguments (Type[] arguments, Type[][] requiredCustomModifiers, Type[][] optionalCustomModifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArguments(class System.Type[] arguments, class System.Type[][] requiredCustomModifiers, class System.Type[][] optionalCustomModifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.AddArguments(System.Type[],System.Type[][],System.Type[][])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArguments (arguments As Type(), requiredCustomModifiers As Type()(), optionalCustomModifiers As Type()())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArguments(cli::array &lt;Type ^&gt; ^ arguments, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ requiredCustomModifiers, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ optionalCustomModifiers);" />
      <MemberSignature Language="F#" Value="member this.AddArguments : Type[] * Type[][] * Type[][] -&gt; unit" Usage="signatureHelper.AddArguments (arguments, requiredCustomModifiers, optionalCustomModifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Type[]" />
        <Parameter Name="requiredCustomModifiers" Type="System.Type[][]" />
        <Parameter Name="optionalCustomModifiers" Type="System.Type[][]" />
      </Parameters>
      <Docs>
        <param name="arguments">
          <span data-ttu-id="cf663-130">The types of the arguments to be added.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-130">The types of the arguments to be added.</span>
          </span>
        </param>
        <param name="requiredCustomModifiers">
          <span data-ttu-id="cf663-131">An array of arrays of types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-131">An array of arrays of types.</span>
          </span>
          <span data-ttu-id="cf663-132">Each array of types represents the required custom modifiers for the corresponding argument, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-132">Each array of types represents the required custom modifiers for the corresponding argument, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span>
          </span>
          <span data-ttu-id="cf663-133">If a particular argument has no required custom modifiers, specify <see langword="null" /> instead of an array of types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-133">If a particular argument has no required custom modifiers, specify <see langword="null" /> instead of an array of types.</span>
          </span>
          <span data-ttu-id="cf663-134">If none of the arguments have required custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-134">If none of the arguments have required custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span>
          </span>
        </param>
        <param name="optionalCustomModifiers">
          <span data-ttu-id="cf663-135">An array of arrays of types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-135">An array of arrays of types.</span>
          </span>
          <span data-ttu-id="cf663-136">Each array of types represents the optional custom modifiers for the corresponding argument, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-136">Each array of types represents the optional custom modifiers for the corresponding argument, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span>
          </span>
          <span data-ttu-id="cf663-137">If a particular argument has no optional custom modifiers, specify <see langword="null" /> instead of an array of types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-137">If a particular argument has no optional custom modifiers, specify <see langword="null" /> instead of an array of types.</span>
          </span>
          <span data-ttu-id="cf663-138">If none of the arguments have optional custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-138">If none of the arguments have optional custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf663-139">Adds a set of arguments to the signature, with the specified custom modifiers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-139">Adds a set of arguments to the signature, with the specified custom modifiers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf663-140">Os argumentos são adicionados ao final da assinatura, na ordem dos elementos da `arguments`.</span><span class="sxs-lookup"><span data-stu-id="cf663-140">The arguments are added to the end of the signature, in order of the elements of `arguments`.</span></span>  
  
 <span data-ttu-id="cf663-141">Consulte o <xref:System.Runtime.CompilerServices> namespace para as classes que representam os modificadores personalizados.</span><span class="sxs-lookup"><span data-stu-id="cf663-141">See the <xref:System.Runtime.CompilerServices> namespace for classes that represent custom modifiers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cf663-142">An element of <paramref name="arguments" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-142">An element of <paramref name="arguments" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="cf663-143">-or-  One of the specified custom modifiers is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-143">-or-  One of the specified custom modifiers is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="cf663-144">(However, <see langword="null" /> can be specified for the array of custom modifiers for any argument.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-144">(However, <see langword="null" /> can be specified for the array of custom modifiers for any argument.)</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cf663-145">The signature has already been finished.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-145">The signature has already been finished.</span>
          </span>
          <span data-ttu-id="cf663-146">-or-  One of the specified custom modifiers is an array type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-146">-or-  One of the specified custom modifiers is an array type.</span>
          </span>
          <span data-ttu-id="cf663-147">-or-  One of the specified custom modifiers is an open generic type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-147">-or-  One of the specified custom modifiers is an open generic type.</span>
          </span>
          <span data-ttu-id="cf663-148">That is, the <see cref="P:System.Type.ContainsGenericParameters" /> property is <see langword="true" /> for the custom modifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-148">That is, the <see cref="P:System.Type.ContainsGenericParameters" /> property is <see langword="true" /> for the custom modifier.</span>
          </span>
          <span data-ttu-id="cf663-149">-or-  The size of <paramref name="requiredCustomModifiers" /> or <paramref name="optionalCustomModifiers" /> does not equal the size of <paramref name="arguments" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-149">-or-  The size of <paramref name="requiredCustomModifiers" /> or <paramref name="optionalCustomModifiers" /> does not equal the size of <paramref name="arguments" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddSentinel">
      <MemberSignature Language="C#" Value="public void AddSentinel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddSentinel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.AddSentinel" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddSentinel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddSentinel();" />
      <MemberSignature Language="F#" Value="member this.AddSentinel : unit -&gt; unit" Usage="signatureHelper.AddSentinel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cf663-150">Marks the end of a vararg fixed part.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-150">Marks the end of a vararg fixed part.</span>
          </span>
          <span data-ttu-id="cf663-151">This is only used if the caller is creating a vararg signature call site.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-151">This is only used if the caller is creating a vararg signature call site.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="signatureHelper.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="cf663-152">The object with which this instance should be compared.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-152">The object with which this instance should be compared.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf663-153">Checks if this instance is equal to the given object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-153">Checks if this instance is equal to the given object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf663-154">
            <see langword="true" /> if the given object is a <see langword="SignatureHelper" /> and represents the same signature; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-154">
              <see langword="true" /> if the given object is a <see langword="SignatureHelper" /> and represents the same signature; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFieldSigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetFieldSigHelper (System.Reflection.Module mod);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetFieldSigHelper(class System.Reflection.Module mod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetFieldSigHelper(System.Reflection.Module)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFieldSigHelper (mod As Module) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetFieldSigHelper(System::Reflection::Module ^ mod);" />
      <MemberSignature Language="F#" Value="static member GetFieldSigHelper : System.Reflection.Module -&gt; System.Reflection.Emit.SignatureHelper" Usage="System.Reflection.Emit.SignatureHelper.GetFieldSigHelper mod" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mod" Type="System.Reflection.Module" />
      </Parameters>
      <Docs>
        <param name="mod">
          <span data-ttu-id="cf663-155">The dynamic module that contains the field for which the <see langword="SignatureHelper" /> is requested.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-155">The dynamic module that contains the field for which the <see langword="SignatureHelper" /> is requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf663-156">Returns a signature helper for a field.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-156">Returns a signature helper for a field.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf663-157">The <see langword="SignatureHelper" /> object for a field.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-157">The <see langword="SignatureHelper" /> object for a field.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="signatureHelper.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cf663-158">Creates and returns a hash code for this instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-158">Creates and returns a hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf663-159">Returns the hash code based on the name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-159">Returns the hash code based on the name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf663-160">O código hash é criado a partir o nome desta instância, portanto, o valor de retorno é o mesmo como se o `GetHashCode` método foi chamado no valor da `Name` propriedade.</span><span class="sxs-lookup"><span data-stu-id="cf663-160">The hash code is created from the name of this instance, so the return value is the same as if the `GetHashCode` method were called on the value of the `Name` property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetLocalVarSigHelper">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cf663-161">Returns a signature helper for a local variable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-161">Returns a signature helper for a local variable.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetLocalVarSigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetLocalVarSigHelper ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetLocalVarSigHelper() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLocalVarSigHelper () As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetLocalVarSigHelper();" />
      <MemberSignature Language="F#" Value="static member GetLocalVarSigHelper : unit -&gt; System.Reflection.Emit.SignatureHelper" Usage="System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cf663-162">Returns a signature helper for a local variable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-162">Returns a signature helper for a local variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf663-163">A <see cref="T:System.Reflection.Emit.SignatureHelper" /> for a local variable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-163">A <see cref="T:System.Reflection.Emit.SignatureHelper" /> for a local variable.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLocalVarSigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetLocalVarSigHelper (System.Reflection.Module mod);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetLocalVarSigHelper(class System.Reflection.Module mod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper(System.Reflection.Module)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLocalVarSigHelper (mod As Module) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetLocalVarSigHelper(System::Reflection::Module ^ mod);" />
      <MemberSignature Language="F#" Value="static member GetLocalVarSigHelper : System.Reflection.Module -&gt; System.Reflection.Emit.SignatureHelper" Usage="System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper mod" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mod" Type="System.Reflection.Module" />
      </Parameters>
      <Docs>
        <param name="mod">
          <span data-ttu-id="cf663-164">The dynamic module that contains the local variable for which the <see langword="SignatureHelper" /> is requested.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-164">The dynamic module that contains the local variable for which the <see langword="SignatureHelper" /> is requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf663-165">Returns a signature helper for a local variable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-165">Returns a signature helper for a local variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf663-166">The <see langword="SignatureHelper" /> object for a local variable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-166">The <see langword="SignatureHelper" /> object for a local variable.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMethodSigHelper">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cf663-167">Returns a signature helper for a method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-167">Returns a signature helper for a method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMethodSigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetMethodSigHelper (System.Reflection.CallingConventions callingConvention, Type returnType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetMethodSigHelper(valuetype System.Reflection.CallingConventions callingConvention, class System.Type returnType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.CallingConventions,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMethodSigHelper (callingConvention As CallingConventions, returnType As Type) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetMethodSigHelper(System::Reflection::CallingConventions callingConvention, Type ^ returnType);" />
      <MemberSignature Language="F#" Value="static member GetMethodSigHelper : System.Reflection.CallingConventions * Type -&gt; System.Reflection.Emit.SignatureHelper" Usage="System.Reflection.Emit.SignatureHelper.GetMethodSigHelper (callingConvention, returnType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
        <Parameter Name="returnType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="callingConvention">
          <span data-ttu-id="cf663-168">The calling convention of the method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-168">The calling convention of the method.</span>
          </span>
        </param>
        <param name="returnType">
          <span data-ttu-id="cf663-169">The return type of the method, or <see langword="null" /> for a void return type (<see langword="Sub" /> procedure in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-169">The return type of the method, or <see langword="null" /> for a void return type (<see langword="Sub" /> procedure in Visual Basic).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf663-170">Returns a signature helper for a method given the method's calling convention and return type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-170">Returns a signature helper for a method given the method's calling convention and return type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf663-171">The <see langword="SignatureHelper" /> object for a method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-171">The <see langword="SignatureHelper" /> object for a method.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethodSigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetMethodSigHelper (System.Runtime.InteropServices.CallingConvention unmanagedCallingConvention, Type returnType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetMethodSigHelper(valuetype System.Runtime.InteropServices.CallingConvention unmanagedCallingConvention, class System.Type returnType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Runtime.InteropServices.CallingConvention,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMethodSigHelper (unmanagedCallingConvention As CallingConvention, returnType As Type) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetMethodSigHelper(System::Runtime::InteropServices::CallingConvention unmanagedCallingConvention, Type ^ returnType);" />
      <MemberSignature Language="F#" Value="static member GetMethodSigHelper : System.Runtime.InteropServices.CallingConvention * Type -&gt; System.Reflection.Emit.SignatureHelper" Usage="System.Reflection.Emit.SignatureHelper.GetMethodSigHelper (unmanagedCallingConvention, returnType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unmanagedCallingConvention" Type="System.Runtime.InteropServices.CallingConvention" />
        <Parameter Name="returnType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="unmanagedCallingConvention">
          <span data-ttu-id="cf663-172">The unmanaged calling convention of the method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-172">The unmanaged calling convention of the method.</span>
          </span>
        </param>
        <param name="returnType">
          <span data-ttu-id="cf663-173">The return type of the method, or <see langword="null" /> for a void return type (<see langword="Sub" /> procedure in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-173">The return type of the method, or <see langword="null" /> for a void return type (<see langword="Sub" /> procedure in Visual Basic).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf663-174">Returns a signature helper for a method given the method's unmanaged calling convention and return type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-174">Returns a signature helper for a method given the method's unmanaged calling convention and return type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf663-175">The <see langword="SignatureHelper" /> object for a method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-175">The <see langword="SignatureHelper" /> object for a method.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cf663-176">
            <paramref name="unmanagedCallConv" /> is an unknown unmanaged calling convention.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-176">
              <paramref name="unmanagedCallConv" /> is an unknown unmanaged calling convention.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMethodSigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetMethodSigHelper (System.Reflection.Module mod, System.Reflection.CallingConventions callingConvention, Type returnType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetMethodSigHelper(class System.Reflection.Module mod, valuetype System.Reflection.CallingConventions callingConvention, class System.Type returnType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module,System.Reflection.CallingConventions,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMethodSigHelper (mod As Module, callingConvention As CallingConventions, returnType As Type) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetMethodSigHelper(System::Reflection::Module ^ mod, System::Reflection::CallingConventions callingConvention, Type ^ returnType);" />
      <MemberSignature Language="F#" Value="static member GetMethodSigHelper : System.Reflection.Module * System.Reflection.CallingConventions * Type -&gt; System.Reflection.Emit.SignatureHelper" Usage="System.Reflection.Emit.SignatureHelper.GetMethodSigHelper (mod, callingConvention, returnType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mod" Type="System.Reflection.Module" />
        <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
        <Parameter Name="returnType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="mod">
          <span data-ttu-id="cf663-177">The <see cref="T:System.Reflection.Emit.ModuleBuilder" /> that contains the method for which the <see langword="SignatureHelper" /> is requested.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-177">The <see cref="T:System.Reflection.Emit.ModuleBuilder" /> that contains the method for which the <see langword="SignatureHelper" /> is requested.</span>
          </span>
        </param>
        <param name="callingConvention">
          <span data-ttu-id="cf663-178">The calling convention of the method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-178">The calling convention of the method.</span>
          </span>
        </param>
        <param name="returnType">
          <span data-ttu-id="cf663-179">The return type of the method, or <see langword="null" /> for a void return type (<see langword="Sub" /> procedure in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-179">The return type of the method, or <see langword="null" /> for a void return type (<see langword="Sub" /> procedure in Visual Basic).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf663-180">Returns a signature helper for a method given the method's module, calling convention, and return type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-180">Returns a signature helper for a method given the method's module, calling convention, and return type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf663-181">The <see langword="SignatureHelper" /> object for a method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-181">The <see langword="SignatureHelper" /> object for a method.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cf663-182">
            <paramref name="mod" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-182">
              <paramref name="mod" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cf663-183">
            <paramref name="mod" /> is not a <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-183">
              <paramref name="mod" /> is not a <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMethodSigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetMethodSigHelper (System.Reflection.Module mod, System.Runtime.InteropServices.CallingConvention unmanagedCallConv, Type returnType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetMethodSigHelper(class System.Reflection.Module mod, valuetype System.Runtime.InteropServices.CallingConvention unmanagedCallConv, class System.Type returnType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module,System.Runtime.InteropServices.CallingConvention,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMethodSigHelper (mod As Module, unmanagedCallConv As CallingConvention, returnType As Type) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetMethodSigHelper(System::Reflection::Module ^ mod, System::Runtime::InteropServices::CallingConvention unmanagedCallConv, Type ^ returnType);" />
      <MemberSignature Language="F#" Value="static member GetMethodSigHelper : System.Reflection.Module * System.Runtime.InteropServices.CallingConvention * Type -&gt; System.Reflection.Emit.SignatureHelper" Usage="System.Reflection.Emit.SignatureHelper.GetMethodSigHelper (mod, unmanagedCallConv, returnType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mod" Type="System.Reflection.Module" />
        <Parameter Name="unmanagedCallConv" Type="System.Runtime.InteropServices.CallingConvention" />
        <Parameter Name="returnType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="mod">
          <span data-ttu-id="cf663-184">The <see cref="T:System.Reflection.Emit.ModuleBuilder" /> that contains the method for which the <see langword="SignatureHelper" /> is requested.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-184">The <see cref="T:System.Reflection.Emit.ModuleBuilder" /> that contains the method for which the <see langword="SignatureHelper" /> is requested.</span>
          </span>
        </param>
        <param name="unmanagedCallConv">
          <span data-ttu-id="cf663-185">The unmanaged calling convention of the method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-185">The unmanaged calling convention of the method.</span>
          </span>
        </param>
        <param name="returnType">
          <span data-ttu-id="cf663-186">The return type of the method, or <see langword="null" /> for a void return type (<see langword="Sub" /> procedure in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-186">The return type of the method, or <see langword="null" /> for a void return type (<see langword="Sub" /> procedure in Visual Basic).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf663-187">Returns a signature helper for a method given the method's module, unmanaged calling convention, and return type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-187">Returns a signature helper for a method given the method's module, unmanaged calling convention, and return type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf663-188">The <see langword="SignatureHelper" /> object for a method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-188">The <see langword="SignatureHelper" /> object for a method.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cf663-189">
            <paramref name="mod" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-189">
              <paramref name="mod" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cf663-190">
            <paramref name="mod" /> is not a <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-190">
              <paramref name="mod" /> is not a <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span>
          </span>
          <span data-ttu-id="cf663-191">-or-  <paramref name="unmanagedCallConv" /> is an unknown unmanaged calling convention.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-191">-or-  <paramref name="unmanagedCallConv" /> is an unknown unmanaged calling convention.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMethodSigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetMethodSigHelper (System.Reflection.Module mod, Type returnType, Type[] parameterTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetMethodSigHelper(class System.Reflection.Module mod, class System.Type returnType, class System.Type[] parameterTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module,System.Type,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMethodSigHelper (mod As Module, returnType As Type, parameterTypes As Type()) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetMethodSigHelper(System::Reflection::Module ^ mod, Type ^ returnType, cli::array &lt;Type ^&gt; ^ parameterTypes);" />
      <MemberSignature Language="F#" Value="static member GetMethodSigHelper : System.Reflection.Module * Type * Type[] -&gt; System.Reflection.Emit.SignatureHelper" Usage="System.Reflection.Emit.SignatureHelper.GetMethodSigHelper (mod, returnType, parameterTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mod" Type="System.Reflection.Module" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="parameterTypes" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="mod">
          <span data-ttu-id="cf663-192">The <see cref="T:System.Reflection.Emit.ModuleBuilder" /> that contains the method for which the <see langword="SignatureHelper" /> is requested.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-192">The <see cref="T:System.Reflection.Emit.ModuleBuilder" /> that contains the method for which the <see langword="SignatureHelper" /> is requested.</span>
          </span>
        </param>
        <param name="returnType">
          <span data-ttu-id="cf663-193">The return type of the method, or <see langword="null" /> for a void return type (<see langword="Sub" /> procedure in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-193">The return type of the method, or <see langword="null" /> for a void return type (<see langword="Sub" /> procedure in Visual Basic).</span>
          </span>
        </param>
        <param name="parameterTypes">
          <span data-ttu-id="cf663-194">The types of the arguments of the method, or <see langword="null" /> if the method has no arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-194">The types of the arguments of the method, or <see langword="null" /> if the method has no arguments.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf663-195">Returns a signature helper for a method with a standard calling convention, given the method's module, return type, and argument types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-195">Returns a signature helper for a method with a standard calling convention, given the method's module, return type, and argument types.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf663-196">The <see langword="SignatureHelper" /> object for a method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-196">The <see langword="SignatureHelper" /> object for a method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf663-197">Essa sobrecarga cria uma assinatura com uma convenção de chamada padrão.</span><span class="sxs-lookup"><span data-stu-id="cf663-197">This overload creates a signature with a standard calling convention.</span></span>  
  
 <span data-ttu-id="cf663-198">Para criar uma assinatura de método com modificadores personalizados, use o <xref:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper%28System.Reflection.Module%2CSystem.Reflection.CallingConventions%2CSystem.Type%29> sobrecarga de método e, em seguida, usar o <xref:System.Reflection.Emit.SignatureHelper.AddArgument%28System.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29> ou <xref:System.Reflection.Emit.SignatureHelper.AddArguments%28System.Type%5B%5D%2CSystem.Type%5B%5D%5B%5D%2CSystem.Type%5B%5D%5B%5D%29> sobrecargas de método para adicionar argumentos com modificadores personalizados.</span><span class="sxs-lookup"><span data-stu-id="cf663-198">To create a method signature with custom modifiers, use the <xref:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper%28System.Reflection.Module%2CSystem.Reflection.CallingConventions%2CSystem.Type%29> method overload and then use the <xref:System.Reflection.Emit.SignatureHelper.AddArgument%28System.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29> or <xref:System.Reflection.Emit.SignatureHelper.AddArguments%28System.Type%5B%5D%2CSystem.Type%5B%5D%5B%5D%2CSystem.Type%5B%5D%5B%5D%29> method overloads to add arguments with custom modifiers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cf663-199">
            <paramref name="mod" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-199">
              <paramref name="mod" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="cf663-200">-or-  An element of <paramref name="parameterTypes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-200">-or-  An element of <paramref name="parameterTypes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cf663-201">
            <paramref name="mod" /> is not a <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-201">
              <paramref name="mod" /> is not a <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPropertySigHelper">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cf663-202">Returns a signature helper for a property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-202">Returns a signature helper for a property.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPropertySigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetPropertySigHelper (System.Reflection.Module mod, Type returnType, Type[] parameterTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetPropertySigHelper(class System.Reflection.Module mod, class System.Type returnType, class System.Type[] parameterTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Type,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPropertySigHelper (mod As Module, returnType As Type, parameterTypes As Type()) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetPropertySigHelper(System::Reflection::Module ^ mod, Type ^ returnType, cli::array &lt;Type ^&gt; ^ parameterTypes);" />
      <MemberSignature Language="F#" Value="static member GetPropertySigHelper : System.Reflection.Module * Type * Type[] -&gt; System.Reflection.Emit.SignatureHelper" Usage="System.Reflection.Emit.SignatureHelper.GetPropertySigHelper (mod, returnType, parameterTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mod" Type="System.Reflection.Module" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="parameterTypes" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="mod">
          <span data-ttu-id="cf663-203">The <see cref="T:System.Reflection.Emit.ModuleBuilder" /> that contains the property for which the <see cref="T:System.Reflection.Emit.SignatureHelper" /> is requested.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-203">The <see cref="T:System.Reflection.Emit.ModuleBuilder" /> that contains the property for which the <see cref="T:System.Reflection.Emit.SignatureHelper" /> is requested.</span>
          </span>
        </param>
        <param name="returnType">
          <span data-ttu-id="cf663-204">The property type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-204">The property type.</span>
          </span>
        </param>
        <param name="parameterTypes">
          <span data-ttu-id="cf663-205">The argument types, or <see langword="null" /> if the property has no arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-205">The argument types, or <see langword="null" /> if the property has no arguments.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf663-206">Returns a signature helper for a property, given the dynamic module that contains the property, the property type, and the property arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-206">Returns a signature helper for a property, given the dynamic module that contains the property, the property type, and the property arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf663-207">A <see cref="T:System.Reflection.Emit.SignatureHelper" /> object for a property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-207">A <see cref="T:System.Reflection.Emit.SignatureHelper" /> object for a property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf663-208">Para criar um auxiliar de assinatura para uma propriedade com modificadores personalizados opcionais ou obrigatórias, use o <xref:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper%28System.Reflection.Module%2CSystem.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%5B%5D%2CSystem.Type%5B%5D%5B%5D%29> sobrecarga de método.</span><span class="sxs-lookup"><span data-stu-id="cf663-208">To create a signature helper for a property with optional or required custom modifiers, use the <xref:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper%28System.Reflection.Module%2CSystem.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%5B%5D%2CSystem.Type%5B%5D%5B%5D%29> method overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cf663-209">
            <paramref name="mod" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-209">
              <paramref name="mod" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="cf663-210">-or-  An element of <paramref name="parameterTypes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-210">-or-  An element of <paramref name="parameterTypes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cf663-211">
            <paramref name="mod" /> is not a <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-211">
              <paramref name="mod" /> is not a <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPropertySigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetPropertySigHelper (System.Reflection.Module mod, Type returnType, Type[] requiredReturnTypeCustomModifiers, Type[] optionalReturnTypeCustomModifiers, Type[] parameterTypes, Type[][] requiredParameterTypeCustomModifiers, Type[][] optionalParameterTypeCustomModifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetPropertySigHelper(class System.Reflection.Module mod, class System.Type returnType, class System.Type[] requiredReturnTypeCustomModifiers, class System.Type[] optionalReturnTypeCustomModifiers, class System.Type[] parameterTypes, class System.Type[][] requiredParameterTypeCustomModifiers, class System.Type[][] optionalParameterTypeCustomModifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPropertySigHelper (mod As Module, returnType As Type, requiredReturnTypeCustomModifiers As Type(), optionalReturnTypeCustomModifiers As Type(), parameterTypes As Type(), requiredParameterTypeCustomModifiers As Type()(), optionalParameterTypeCustomModifiers As Type()()) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetPropertySigHelper(System::Reflection::Module ^ mod, Type ^ returnType, cli::array &lt;Type ^&gt; ^ requiredReturnTypeCustomModifiers, cli::array &lt;Type ^&gt; ^ optionalReturnTypeCustomModifiers, cli::array &lt;Type ^&gt; ^ parameterTypes, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ requiredParameterTypeCustomModifiers, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ optionalParameterTypeCustomModifiers);" />
      <MemberSignature Language="F#" Value="static member GetPropertySigHelper : System.Reflection.Module * Type * Type[] * Type[] * Type[] * Type[][] * Type[][] -&gt; System.Reflection.Emit.SignatureHelper" Usage="System.Reflection.Emit.SignatureHelper.GetPropertySigHelper (mod, returnType, requiredReturnTypeCustomModifiers, optionalReturnTypeCustomModifiers, parameterTypes, requiredParameterTypeCustomModifiers, optionalParameterTypeCustomModifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mod" Type="System.Reflection.Module" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="requiredReturnTypeCustomModifiers" Type="System.Type[]" />
        <Parameter Name="optionalReturnTypeCustomModifiers" Type="System.Type[]" />
        <Parameter Name="parameterTypes" Type="System.Type[]" />
        <Parameter Name="requiredParameterTypeCustomModifiers" Type="System.Type[][]" />
        <Parameter Name="optionalParameterTypeCustomModifiers" Type="System.Type[][]" />
      </Parameters>
      <Docs>
        <param name="mod">
          <span data-ttu-id="cf663-212">The <see cref="T:System.Reflection.Emit.ModuleBuilder" /> that contains the property for which the <see cref="T:System.Reflection.Emit.SignatureHelper" /> is requested.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-212">The <see cref="T:System.Reflection.Emit.ModuleBuilder" /> that contains the property for which the <see cref="T:System.Reflection.Emit.SignatureHelper" /> is requested.</span>
          </span>
        </param>
        <param name="returnType">
          <span data-ttu-id="cf663-213">The property type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-213">The property type.</span>
          </span>
        </param>
        <param name="requiredReturnTypeCustomModifiers">
          <span data-ttu-id="cf663-214">An array of types representing the required custom modifiers for the return type, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-214">An array of types representing the required custom modifiers for the return type, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span>
          </span>
          <span data-ttu-id="cf663-215">If the return type has no required custom modifiers, specify <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-215">If the return type has no required custom modifiers, specify <see langword="null" />.</span>
          </span>
        </param>
        <param name="optionalReturnTypeCustomModifiers">
          <span data-ttu-id="cf663-216">An array of types representing the optional custom modifiers for the return type, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-216">An array of types representing the optional custom modifiers for the return type, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span>
          </span>
          <span data-ttu-id="cf663-217">If the return type has no optional custom modifiers, specify <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-217">If the return type has no optional custom modifiers, specify <see langword="null" />.</span>
          </span>
        </param>
        <param name="parameterTypes">
          <span data-ttu-id="cf663-218">The types of the property's arguments, or <see langword="null" /> if the property has no arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-218">The types of the property's arguments, or <see langword="null" /> if the property has no arguments.</span>
          </span>
        </param>
        <param name="requiredParameterTypeCustomModifiers">
          <span data-ttu-id="cf663-219">An array of arrays of types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-219">An array of arrays of types.</span>
          </span>
          <span data-ttu-id="cf663-220">Each array of types represents the required custom modifiers for the corresponding argument of the property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-220">Each array of types represents the required custom modifiers for the corresponding argument of the property.</span>
          </span>
          <span data-ttu-id="cf663-221">If a particular argument has no required custom modifiers, specify <see langword="null" /> instead of an array of types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-221">If a particular argument has no required custom modifiers, specify <see langword="null" /> instead of an array of types.</span>
          </span>
          <span data-ttu-id="cf663-222">If the property has no arguments, or if none of the arguments have required custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-222">If the property has no arguments, or if none of the arguments have required custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span>
          </span>
        </param>
        <param name="optionalParameterTypeCustomModifiers">
          <span data-ttu-id="cf663-223">An array of arrays of types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-223">An array of arrays of types.</span>
          </span>
          <span data-ttu-id="cf663-224">Each array of types represents the optional custom modifiers for the corresponding argument of the property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-224">Each array of types represents the optional custom modifiers for the corresponding argument of the property.</span>
          </span>
          <span data-ttu-id="cf663-225">If a particular argument has no optional custom modifiers, specify <see langword="null" /> instead of an array of types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-225">If a particular argument has no optional custom modifiers, specify <see langword="null" /> instead of an array of types.</span>
          </span>
          <span data-ttu-id="cf663-226">If the property has no arguments, or if none of the arguments have optional custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-226">If the property has no arguments, or if none of the arguments have optional custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf663-227">Returns a signature helper for a property, given the dynamic module that contains the property, the property type, the property arguments, and custom modifiers for the return type and arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-227">Returns a signature helper for a property, given the dynamic module that contains the property, the property type, the property arguments, and custom modifiers for the return type and arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf663-228">A <see cref="T:System.Reflection.Emit.SignatureHelper" /> object for a property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-228">A <see cref="T:System.Reflection.Emit.SignatureHelper" /> object for a property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf663-229">Consulte o <xref:System.Runtime.CompilerServices> namespace para as classes que representam os modificadores personalizados.</span><span class="sxs-lookup"><span data-stu-id="cf663-229">See the <xref:System.Runtime.CompilerServices> namespace for classes that represent custom modifiers.</span></span>  
  
 <span data-ttu-id="cf663-230">Se uma propriedade tiver não modificadores personalizados, use o <xref:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper%28System.Reflection.Module%2CSystem.Type%2CSystem.Type%5B%5D%29> sobrecarga de método.</span><span class="sxs-lookup"><span data-stu-id="cf663-230">If a property has no custom modifiers, use the <xref:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper%28System.Reflection.Module%2CSystem.Type%2CSystem.Type%5B%5D%29> method overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cf663-231">
            <paramref name="mod" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-231">
              <paramref name="mod" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="cf663-232">-or-  An element of <paramref name="parameterTypes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-232">-or-  An element of <paramref name="parameterTypes" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="cf663-233">-or-  One of the specified custom modifiers is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-233">-or-  One of the specified custom modifiers is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="cf663-234">(However, <see langword="null" /> can be specified for the array of custom modifiers for any argument.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-234">(However, <see langword="null" /> can be specified for the array of custom modifiers for any argument.)</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cf663-235">The signature has already been finished.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-235">The signature has already been finished.</span>
          </span>
          <span data-ttu-id="cf663-236">-or-  <paramref name="mod" /> is not a <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-236">-or-  <paramref name="mod" /> is not a <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span>
          </span>
          <span data-ttu-id="cf663-237">-or-  One of the specified custom modifiers is an array type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-237">-or-  One of the specified custom modifiers is an array type.</span>
          </span>
          <span data-ttu-id="cf663-238">-or-  One of the specified custom modifiers is an open generic type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-238">-or-  One of the specified custom modifiers is an open generic type.</span>
          </span>
          <span data-ttu-id="cf663-239">That is, the <see cref="P:System.Type.ContainsGenericParameters" /> property is <see langword="true" /> for the custom modifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-239">That is, the <see cref="P:System.Type.ContainsGenericParameters" /> property is <see langword="true" /> for the custom modifier.</span>
          </span>
          <span data-ttu-id="cf663-240">-or-  The size of <paramref name="requiredParameterTypeCustomModifiers" /> or <paramref name="optionalParameterTypeCustomModifiers" /> does not equal the size of <paramref name="parameterTypes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-240">-or-  The size of <paramref name="requiredParameterTypeCustomModifiers" /> or <paramref name="optionalParameterTypeCustomModifiers" /> does not equal the size of <paramref name="parameterTypes" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPropertySigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetPropertySigHelper (System.Reflection.Module mod, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] requiredReturnTypeCustomModifiers, Type[] optionalReturnTypeCustomModifiers, Type[] parameterTypes, Type[][] requiredParameterTypeCustomModifiers, Type[][] optionalParameterTypeCustomModifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetPropertySigHelper(class System.Reflection.Module mod, valuetype System.Reflection.CallingConventions callingConvention, class System.Type returnType, class System.Type[] requiredReturnTypeCustomModifiers, class System.Type[] optionalReturnTypeCustomModifiers, class System.Type[] parameterTypes, class System.Type[][] requiredParameterTypeCustomModifiers, class System.Type[][] optionalParameterTypeCustomModifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPropertySigHelper (mod As Module, callingConvention As CallingConventions, returnType As Type, requiredReturnTypeCustomModifiers As Type(), optionalReturnTypeCustomModifiers As Type(), parameterTypes As Type(), requiredParameterTypeCustomModifiers As Type()(), optionalParameterTypeCustomModifiers As Type()()) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetPropertySigHelper(System::Reflection::Module ^ mod, System::Reflection::CallingConventions callingConvention, Type ^ returnType, cli::array &lt;Type ^&gt; ^ requiredReturnTypeCustomModifiers, cli::array &lt;Type ^&gt; ^ optionalReturnTypeCustomModifiers, cli::array &lt;Type ^&gt; ^ parameterTypes, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ requiredParameterTypeCustomModifiers, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ optionalParameterTypeCustomModifiers);" />
      <MemberSignature Language="F#" Value="static member GetPropertySigHelper : System.Reflection.Module * System.Reflection.CallingConventions * Type * Type[] * Type[] * Type[] * Type[][] * Type[][] -&gt; System.Reflection.Emit.SignatureHelper" Usage="System.Reflection.Emit.SignatureHelper.GetPropertySigHelper (mod, callingConvention, returnType, requiredReturnTypeCustomModifiers, optionalReturnTypeCustomModifiers, parameterTypes, requiredParameterTypeCustomModifiers, optionalParameterTypeCustomModifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mod" Type="System.Reflection.Module" />
        <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="requiredReturnTypeCustomModifiers" Type="System.Type[]" />
        <Parameter Name="optionalReturnTypeCustomModifiers" Type="System.Type[]" />
        <Parameter Name="parameterTypes" Type="System.Type[]" />
        <Parameter Name="requiredParameterTypeCustomModifiers" Type="System.Type[][]" />
        <Parameter Name="optionalParameterTypeCustomModifiers" Type="System.Type[][]" />
      </Parameters>
      <Docs>
        <param name="mod">
          <span data-ttu-id="cf663-241">The <see cref="T:System.Reflection.Emit.ModuleBuilder" /> that contains the property for which the <see cref="T:System.Reflection.Emit.SignatureHelper" /> is requested.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-241">The <see cref="T:System.Reflection.Emit.ModuleBuilder" /> that contains the property for which the <see cref="T:System.Reflection.Emit.SignatureHelper" /> is requested.</span>
          </span>
        </param>
        <param name="callingConvention">
          <span data-ttu-id="cf663-242">The calling convention of the property accessors.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-242">The calling convention of the property accessors.</span>
          </span>
        </param>
        <param name="returnType">
          <span data-ttu-id="cf663-243">The property type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-243">The property type.</span>
          </span>
        </param>
        <param name="requiredReturnTypeCustomModifiers">
          <span data-ttu-id="cf663-244">An array of types representing the required custom modifiers for the return type, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-244">An array of types representing the required custom modifiers for the return type, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span>
          </span>
          <span data-ttu-id="cf663-245">If the return type has no required custom modifiers, specify <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-245">If the return type has no required custom modifiers, specify <see langword="null" />.</span>
          </span>
        </param>
        <param name="optionalReturnTypeCustomModifiers">
          <span data-ttu-id="cf663-246">An array of types representing the optional custom modifiers for the return type, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-246">An array of types representing the optional custom modifiers for the return type, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span>
          </span>
          <span data-ttu-id="cf663-247">If the return type has no optional custom modifiers, specify <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-247">If the return type has no optional custom modifiers, specify <see langword="null" />.</span>
          </span>
        </param>
        <param name="parameterTypes">
          <span data-ttu-id="cf663-248">The types of the property's arguments, or <see langword="null" /> if the property has no arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-248">The types of the property's arguments, or <see langword="null" /> if the property has no arguments.</span>
          </span>
        </param>
        <param name="requiredParameterTypeCustomModifiers">
          <span data-ttu-id="cf663-249">An array of arrays of types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-249">An array of arrays of types.</span>
          </span>
          <span data-ttu-id="cf663-250">Each array of types represents the required custom modifiers for the corresponding argument of the property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-250">Each array of types represents the required custom modifiers for the corresponding argument of the property.</span>
          </span>
          <span data-ttu-id="cf663-251">If a particular argument has no required custom modifiers, specify <see langword="null" /> instead of an array of types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-251">If a particular argument has no required custom modifiers, specify <see langword="null" /> instead of an array of types.</span>
          </span>
          <span data-ttu-id="cf663-252">If the property has no arguments, or if none of the arguments have required custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-252">If the property has no arguments, or if none of the arguments have required custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span>
          </span>
        </param>
        <param name="optionalParameterTypeCustomModifiers">
          <span data-ttu-id="cf663-253">An array of arrays of types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-253">An array of arrays of types.</span>
          </span>
          <span data-ttu-id="cf663-254">Each array of types represents the optional custom modifiers for the corresponding argument of the property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-254">Each array of types represents the optional custom modifiers for the corresponding argument of the property.</span>
          </span>
          <span data-ttu-id="cf663-255">If a particular argument has no optional custom modifiers, specify <see langword="null" /> instead of an array of types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-255">If a particular argument has no optional custom modifiers, specify <see langword="null" /> instead of an array of types.</span>
          </span>
          <span data-ttu-id="cf663-256">If the property has no arguments, or if none of the arguments have optional custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-256">If the property has no arguments, or if none of the arguments have optional custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf663-257">Returns a signature helper for a property, given the dynamic module that contains the property, the calling convention, the property type, the property arguments, and custom modifiers for the return type and arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-257">Returns a signature helper for a property, given the dynamic module that contains the property, the calling convention, the property type, the property arguments, and custom modifiers for the return type and arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf663-258">A <see cref="T:System.Reflection.Emit.SignatureHelper" /> object for a property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-258">A <see cref="T:System.Reflection.Emit.SignatureHelper" /> object for a property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf663-259">Consulte o <xref:System.Runtime.CompilerServices> namespace para as classes que representam os modificadores personalizados.</span><span class="sxs-lookup"><span data-stu-id="cf663-259">See the <xref:System.Runtime.CompilerServices> namespace for classes that represent custom modifiers.</span></span>  
  
 <span data-ttu-id="cf663-260">Se uma propriedade tiver não modificadores personalizados, use o <xref:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper%28System.Reflection.Module%2CSystem.Type%2CSystem.Type%5B%5D%29> sobrecarga de método.</span><span class="sxs-lookup"><span data-stu-id="cf663-260">If a property has no custom modifiers, use the <xref:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper%28System.Reflection.Module%2CSystem.Type%2CSystem.Type%5B%5D%29> method overload.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cf663-261">Essa sobrecarga de método é apresentada na [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] ou posterior.</span><span class="sxs-lookup"><span data-stu-id="cf663-261">This method overload is introduced in the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cf663-262">
            <paramref name="mod" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-262">
              <paramref name="mod" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="cf663-263">-or-  An element of <paramref name="parameterTypes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-263">-or-  An element of <paramref name="parameterTypes" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="cf663-264">-or-  One of the specified custom modifiers is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-264">-or-  One of the specified custom modifiers is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="cf663-265">(However, <see langword="null" /> can be specified for the array of custom modifiers for any argument.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-265">(However, <see langword="null" /> can be specified for the array of custom modifiers for any argument.)</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cf663-266">The signature has already been finished.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-266">The signature has already been finished.</span>
          </span>
          <span data-ttu-id="cf663-267">-or-  <paramref name="mod" /> is not a <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-267">-or-  <paramref name="mod" /> is not a <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span>
          </span>
          <span data-ttu-id="cf663-268">-or-  One of the specified custom modifiers is an array type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-268">-or-  One of the specified custom modifiers is an array type.</span>
          </span>
          <span data-ttu-id="cf663-269">-or-  One of the specified custom modifiers is an open generic type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-269">-or-  One of the specified custom modifiers is an open generic type.</span>
          </span>
          <span data-ttu-id="cf663-270">That is, the <see cref="P:System.Type.ContainsGenericParameters" /> property is <see langword="true" /> for the custom modifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-270">That is, the <see cref="P:System.Type.ContainsGenericParameters" /> property is <see langword="true" /> for the custom modifier.</span>
          </span>
          <span data-ttu-id="cf663-271">-or-  The size of <paramref name="requiredParameterTypeCustomModifiers" /> or <paramref name="optionalParameterTypeCustomModifiers" /> does not equal the size of <paramref name="parameterTypes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-271">-or-  The size of <paramref name="requiredParameterTypeCustomModifiers" /> or <paramref name="optionalParameterTypeCustomModifiers" /> does not equal the size of <paramref name="parameterTypes" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSignature">
      <MemberSignature Language="C#" Value="public byte[] GetSignature ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetSignature() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetSignature" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSignature () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetSignature();" />
      <MemberSignature Language="F#" Value="member this.GetSignature : unit -&gt; byte[]" Usage="signatureHelper.GetSignature " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cf663-272">Adds the end token to the signature and marks the signature as finished, so no further tokens can be added.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-272">Adds the end token to the signature and marks the signature as finished, so no further tokens can be added.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf663-273">Returns a byte array made up of the full signature.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-273">Returns a byte array made up of the full signature.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._SignatureHelper.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _SignatureHelper.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._SignatureHelper.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _SignatureHelper.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._SignatureHelper.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_SignatureHelper::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._SignatureHelper.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid">
          <span data-ttu-id="cf663-274">Reserved for future use.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-274">Reserved for future use.</span>
          </span>
          <span data-ttu-id="cf663-275">Must be IID_NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-275">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="rgszNames">
          <span data-ttu-id="cf663-276">Passed-in array of names to be mapped.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-276">Passed-in array of names to be mapped.</span>
          </span>
        </param>
        <param name="cNames">
          <span data-ttu-id="cf663-277">Count of the names to be mapped.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-277">Count of the names to be mapped.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="cf663-278">The locale context in which to interpret the names.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-278">The locale context in which to interpret the names.</span>
          </span>
        </param>
        <param name="rgDispId">
          <span data-ttu-id="cf663-279">Caller-allocated array which receives the IDs corresponding to the names.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-279">Caller-allocated array which receives the IDs corresponding to the names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf663-280">Maps a set of names to a corresponding set of dispatch identifiers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-280">Maps a set of names to a corresponding set of dispatch identifiers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf663-281">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="cf663-281">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="cf663-282">Para obter mais informações sobre `IDispatch::GetIDsOfNames`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="cf663-282">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="cf663-283">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-283">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._SignatureHelper.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _SignatureHelper.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._SignatureHelper.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _SignatureHelper.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._SignatureHelper.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_SignatureHelper::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._SignatureHelper.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo">
          <span data-ttu-id="cf663-284">The type information to return.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-284">The type information to return.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="cf663-285">The locale identifier for the type information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-285">The locale identifier for the type information.</span>
          </span>
        </param>
        <param name="ppTInfo">
          <span data-ttu-id="cf663-286">Receives a pointer to the requested type information object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-286">Receives a pointer to the requested type information object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf663-287">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-287">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf663-288">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="cf663-288">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="cf663-289">Para obter mais informações sobre `IDispatch::GetTypeInfo`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="cf663-289">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="cf663-290">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-290">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._SignatureHelper.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _SignatureHelper.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._SignatureHelper.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _SignatureHelper.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._SignatureHelper.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_SignatureHelper::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._SignatureHelper.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo">
          <span data-ttu-id="cf663-291">Points to a location that receives the number of type information interfaces provided by the object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-291">Points to a location that receives the number of type information interfaces provided by the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf663-292">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-292">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf663-293">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="cf663-293">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="cf663-294">Para obter mais informações sobre `IDispatch::GetTypeInfoCount`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="cf663-294">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="cf663-295">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-295">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._SignatureHelper.Invoke">
      <MemberSignature Language="C#" Value="void _SignatureHelper.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._SignatureHelper.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _SignatureHelper.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._SignatureHelper.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_SignatureHelper::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._SignatureHelper.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember">
          <span data-ttu-id="cf663-296">Identifies the member.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-296">Identifies the member.</span>
          </span>
        </param>
        <param name="riid">
          <span data-ttu-id="cf663-297">Reserved for future use.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-297">Reserved for future use.</span>
          </span>
          <span data-ttu-id="cf663-298">Must be IID_NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-298">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="cf663-299">The locale context in which to interpret arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-299">The locale context in which to interpret arguments.</span>
          </span>
        </param>
        <param name="wFlags">
          <span data-ttu-id="cf663-300">Flags describing the context of the call.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-300">Flags describing the context of the call.</span>
          </span>
        </param>
        <param name="pDispParams">
          <span data-ttu-id="cf663-301">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-301">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span>
          </span>
        </param>
        <param name="pVarResult">
          <span data-ttu-id="cf663-302">Pointer to the location where the result is to be stored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-302">Pointer to the location where the result is to be stored.</span>
          </span>
        </param>
        <param name="pExcepInfo">
          <span data-ttu-id="cf663-303">Pointer to a structure that contains exception information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-303">Pointer to a structure that contains exception information.</span>
          </span>
        </param>
        <param name="puArgErr">
          <span data-ttu-id="cf663-304">The index of the first argument that has an error.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-304">The index of the first argument that has an error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf663-305">Provides access to properties and methods exposed by an object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-305">Provides access to properties and methods exposed by an object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf663-306">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="cf663-306">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="cf663-307">Para obter mais informações sobre `IDispatch::Invoke`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="cf663-307">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="cf663-308">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-308">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="signatureHelper.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cf663-309">Returns a string representing the signature arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-309">Returns a string representing the signature arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf663-310">Returns a string representing the arguments of this signature.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf663-310">Returns a string representing the arguments of this signature.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>