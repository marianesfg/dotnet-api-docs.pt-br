<Type Name="SignatureHelper" FullName="System.Reflection.Emit.SignatureHelper">
  <Metadata><Meta Name="ms.openlocfilehash" Value="893f22a0e62140fc917ff9a44a19cd8955a11ae2" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57956915" /></Metadata><TypeSignature Language="C#" Value="public sealed class SignatureHelper : System.Runtime.InteropServices._SignatureHelper" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit SignatureHelper extends System.Object implements class System.Runtime.InteropServices._SignatureHelper" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Emit.SignatureHelper" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SignatureHelper&#xA;Implements _SignatureHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class SignatureHelper sealed : System::Runtime::InteropServices::_SignatureHelper" />
  <TypeSignature Language="F#" Value="type SignatureHelper = class&#xA;    interface _SignatureHelper" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._SignatureHelper</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._SignatureHelper))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c8af5-101">Fornece métodos para a criação de assinaturas.</span><span class="sxs-lookup"><span data-stu-id="c8af5-101">Provides methods for building signatures.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8af5-102">Use o <xref:System.Reflection.Emit.SignatureHelper> classe para criar um blob de assinatura que pode ser passado para o <xref:System.Reflection.Emit.DynamicILInfo.SetLocalSignature%2A> método o <xref:System.Reflection.Emit.DynamicILInfo> classe.</span><span class="sxs-lookup"><span data-stu-id="c8af5-102">Use the <xref:System.Reflection.Emit.SignatureHelper> class to create a signature blob that can be passed to the <xref:System.Reflection.Emit.DynamicILInfo.SetLocalSignature%2A> method of the <xref:System.Reflection.Emit.DynamicILInfo> class.</span></span> <span data-ttu-id="c8af5-103">Um <xref:System.Reflection.Emit.SignatureHelper> objeto também pode ser passado para o <xref:System.Reflection.Emit.ILGenerator.Emit%28System.Reflection.Emit.OpCode%2CSystem.Reflection.Emit.SignatureHelper%29?displayProperty=nameWithType> sobrecarga de método para inserir uma instrução e um token de assinatura em um fluxo do Microsoft intermediate language (MSIL).</span><span class="sxs-lookup"><span data-stu-id="c8af5-103">A <xref:System.Reflection.Emit.SignatureHelper> object can also be passed to the <xref:System.Reflection.Emit.ILGenerator.Emit%28System.Reflection.Emit.OpCode%2CSystem.Reflection.Emit.SignatureHelper%29?displayProperty=nameWithType> method overload to insert an instruction and a signature token into a Microsoft intermediate language (MSIL) stream.</span></span> <span data-ttu-id="c8af5-104">Para obter informações sobre blobs de assinatura e os metadados de assinatura, consulte a documentação de metadados da ECMA partição II.</span><span class="sxs-lookup"><span data-stu-id="c8af5-104">For information on signature blobs and signature metadata, see the ECMA Partition II Metadata documentation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c8af5-105">A documentação da ECMA partição II está disponível online; ver [ECMA c# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) no MSDN e [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) no site da Ecma International.</span><span class="sxs-lookup"><span data-stu-id="c8af5-105">The ECMA Partition II documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="AddArgument">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c8af5-106">Adiciona um argumento à assinatura.</span><span class="sxs-lookup"><span data-stu-id="c8af5-106">Adds an argument to the signature.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddArgument">
      <MemberSignature Language="C#" Value="public void AddArgument (Type clsArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArgument(class System.Type clsArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.AddArgument(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArgument (clsArgument As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArgument(Type ^ clsArgument);" />
      <MemberSignature Language="F#" Value="member this.AddArgument : Type -&gt; unit" Usage="signatureHelper.AddArgument clsArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clsArgument" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="clsArgument"><span data-ttu-id="c8af5-107">O tipo do argumento.</span><span class="sxs-lookup"><span data-stu-id="c8af5-107">The type of the argument.</span></span></param>
        <summary><span data-ttu-id="c8af5-108">Adiciona um argumento à assinatura.</span><span class="sxs-lookup"><span data-stu-id="c8af5-108">Adds an argument to the signature.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8af5-109">Para adicionar um argumento com modificadores personalizados opcionais ou obrigatórias, use o <xref:System.Reflection.Emit.SignatureHelper.AddArgument%28System.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29> sobrecarga de método.</span><span class="sxs-lookup"><span data-stu-id="c8af5-109">To add an argument with optional or required custom modifiers, use the <xref:System.Reflection.Emit.SignatureHelper.AddArgument%28System.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29> method overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c8af5-110">A assinatura já foi encerrada.</span><span class="sxs-lookup"><span data-stu-id="c8af5-110">The signature has already been finished.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c8af5-111"><paramref name="clsArgument" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c8af5-111"><paramref name="clsArgument" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddArgument">
      <MemberSignature Language="C#" Value="public void AddArgument (Type argument, bool pinned);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArgument(class System.Type argument, bool pinned) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.AddArgument(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArgument (argument As Type, pinned As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArgument(Type ^ argument, bool pinned);" />
      <MemberSignature Language="F#" Value="member this.AddArgument : Type * bool -&gt; unit" Usage="signatureHelper.AddArgument (argument, pinned)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Type" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="pinned" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="c8af5-112">O tipo de argumento.</span><span class="sxs-lookup"><span data-stu-id="c8af5-112">The argument type.</span></span></param>
        <param name="pinned"><span data-ttu-id="c8af5-113"><see langword="true" /> se o argumento estiver fixado; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c8af5-113"><see langword="true" /> if the argument is pinned; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="c8af5-114">Adiciona um argumento do tipo especificado à assinatura, especificando se o argumento está fixado.</span><span class="sxs-lookup"><span data-stu-id="c8af5-114">Adds an argument of the specified type to the signature, specifying whether the argument is pinned.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8af5-115">Para adicionar um argumento com modificadores personalizados opcionais ou obrigatórias, use o <xref:System.Reflection.Emit.SignatureHelper.AddArgument%28System.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29> sobrecarga de método.</span><span class="sxs-lookup"><span data-stu-id="c8af5-115">To add an argument with optional or required custom modifiers, use the <xref:System.Reflection.Emit.SignatureHelper.AddArgument%28System.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29> method overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c8af5-116"><paramref name="argument" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c8af5-116"><paramref name="argument" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddArgument">
      <MemberSignature Language="C#" Value="public void AddArgument (Type argument, Type[] requiredCustomModifiers, Type[] optionalCustomModifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArgument(class System.Type argument, class System.Type[] requiredCustomModifiers, class System.Type[] optionalCustomModifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.AddArgument(System.Type,System.Type[],System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArgument (argument As Type, requiredCustomModifiers As Type(), optionalCustomModifiers As Type())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArgument(Type ^ argument, cli::array &lt;Type ^&gt; ^ requiredCustomModifiers, cli::array &lt;Type ^&gt; ^ optionalCustomModifiers);" />
      <MemberSignature Language="F#" Value="member this.AddArgument : Type * Type[] * Type[] -&gt; unit" Usage="signatureHelper.AddArgument (argument, requiredCustomModifiers, optionalCustomModifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Type" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredCustomModifiers" Type="System.Type[]" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="optionalCustomModifiers" Type="System.Type[]" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="c8af5-117">O tipo de argumento.</span><span class="sxs-lookup"><span data-stu-id="c8af5-117">The argument type.</span></span></param>
        <param name="requiredCustomModifiers"><span data-ttu-id="c8af5-118">Uma matriz de tipos que representa os modificadores personalizados obrigatórios para o argumento, como <see cref="T:System.Runtime.CompilerServices.IsConst" /> ou <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span><span class="sxs-lookup"><span data-stu-id="c8af5-118">An array of types representing the required custom modifiers for the argument, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span></span> <span data-ttu-id="c8af5-119">Se o argumento não tiver modificadores personalizados obrigatórios, especifique <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c8af5-119">If the argument has no required custom modifiers, specify <see langword="null" />.</span></span></param>
        <param name="optionalCustomModifiers"><span data-ttu-id="c8af5-120">Uma matriz de tipos que representa os modificadores personalizados opcionais para o argumento, como <see cref="T:System.Runtime.CompilerServices.IsConst" /> ou <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span><span class="sxs-lookup"><span data-stu-id="c8af5-120">An array of types representing the optional custom modifiers for the argument, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span></span> <span data-ttu-id="c8af5-121">Se o argumento não tiver nenhum modificador personalizado opcional, especifique <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c8af5-121">If the argument has no optional custom modifiers, specify <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="c8af5-122">Adiciona um argumento à assinatura, com modificadores personalizados especificados.</span><span class="sxs-lookup"><span data-stu-id="c8af5-122">Adds an argument to the signature, with the specified custom modifiers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8af5-123">Consulte o <xref:System.Runtime.CompilerServices> namespace para as classes que representam os modificadores personalizados.</span><span class="sxs-lookup"><span data-stu-id="c8af5-123">See the <xref:System.Runtime.CompilerServices> namespace for classes that represent custom modifiers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c8af5-124"><paramref name="argument" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c8af5-124"><paramref name="argument" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="c8af5-125">- ou -</span><span class="sxs-lookup"><span data-stu-id="c8af5-125">-or-</span></span> 
<span data-ttu-id="c8af5-126">Um elemento de <paramref name="requiredCustomModifiers" /> ou <paramref name="optionalCustomModifiers" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c8af5-126">An element of <paramref name="requiredCustomModifiers" /> or <paramref name="optionalCustomModifiers" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c8af5-127">A assinatura já foi encerrada.</span><span class="sxs-lookup"><span data-stu-id="c8af5-127">The signature has already been finished.</span></span>  
  
<span data-ttu-id="c8af5-128">- ou -</span><span class="sxs-lookup"><span data-stu-id="c8af5-128">-or-</span></span> 
<span data-ttu-id="c8af5-129">Um dos modificadores personalizados especificados é um tipo de matriz.</span><span class="sxs-lookup"><span data-stu-id="c8af5-129">One of the specified custom modifiers is an array type.</span></span>  
  
<span data-ttu-id="c8af5-130">- ou -</span><span class="sxs-lookup"><span data-stu-id="c8af5-130">-or-</span></span> 
<span data-ttu-id="c8af5-131">Um dos modificadores personalizados especificados é um tipo genérico aberto.</span><span class="sxs-lookup"><span data-stu-id="c8af5-131">One of the specified custom modifiers is an open generic type.</span></span> <span data-ttu-id="c8af5-132">Ou seja, a propriedade <see cref="P:System.Type.ContainsGenericParameters" /> é <see langword="true" /> para o modificador personalizado.</span><span class="sxs-lookup"><span data-stu-id="c8af5-132">That is, the <see cref="P:System.Type.ContainsGenericParameters" /> property is <see langword="true" /> for the custom modifier.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddArguments">
      <MemberSignature Language="C#" Value="public void AddArguments (Type[] arguments, Type[][] requiredCustomModifiers, Type[][] optionalCustomModifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArguments(class System.Type[] arguments, class System.Type[][] requiredCustomModifiers, class System.Type[][] optionalCustomModifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.AddArguments(System.Type[],System.Type[][],System.Type[][])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArguments (arguments As Type(), requiredCustomModifiers As Type()(), optionalCustomModifiers As Type()())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArguments(cli::array &lt;Type ^&gt; ^ arguments, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ requiredCustomModifiers, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ optionalCustomModifiers);" />
      <MemberSignature Language="F#" Value="member this.AddArguments : Type[] * Type[][] * Type[][] -&gt; unit" Usage="signatureHelper.AddArguments (arguments, requiredCustomModifiers, optionalCustomModifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Type[]" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredCustomModifiers" Type="System.Type[][]" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="optionalCustomModifiers" Type="System.Type[][]" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="arguments"><span data-ttu-id="c8af5-133">Os tipos dos argumentos a serem adicionados.</span><span class="sxs-lookup"><span data-stu-id="c8af5-133">The types of the arguments to be added.</span></span></param>
        <param name="requiredCustomModifiers"><span data-ttu-id="c8af5-134">Uma matriz de matrizes de tipos.</span><span class="sxs-lookup"><span data-stu-id="c8af5-134">An array of arrays of types.</span></span> <span data-ttu-id="c8af5-135">Cada matriz de tipos representa os modificadores personalizados obrigatórios para o argumento correspondente, como <see cref="T:System.Runtime.CompilerServices.IsConst" /> ou <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span><span class="sxs-lookup"><span data-stu-id="c8af5-135">Each array of types represents the required custom modifiers for the corresponding argument, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span></span> <span data-ttu-id="c8af5-136">Se um argumento específico não tiver nenhum modificador personalizado obrigatório, especifique <see langword="null" />, em vez de uma matriz de tipos.</span><span class="sxs-lookup"><span data-stu-id="c8af5-136">If a particular argument has no required custom modifiers, specify <see langword="null" /> instead of an array of types.</span></span> <span data-ttu-id="c8af5-137">Se nenhum dos argumentos tiver modificadores personalizados obrigatórios, especifique <see langword="null" /> em vez de uma matriz de matrizes.</span><span class="sxs-lookup"><span data-stu-id="c8af5-137">If none of the arguments have required custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span></span></param>
        <param name="optionalCustomModifiers"><span data-ttu-id="c8af5-138">Uma matriz de matrizes de tipos.</span><span class="sxs-lookup"><span data-stu-id="c8af5-138">An array of arrays of types.</span></span> <span data-ttu-id="c8af5-139">Cada matriz de tipos representa os modificadores personalizados opcionais para o argumento correspondente, como <see cref="T:System.Runtime.CompilerServices.IsConst" /> ou <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span><span class="sxs-lookup"><span data-stu-id="c8af5-139">Each array of types represents the optional custom modifiers for the corresponding argument, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span></span> <span data-ttu-id="c8af5-140">Se um argumento específico não tiver nenhum modificador personalizado opcional, especifique <see langword="null" />, em vez de uma matriz de tipos.</span><span class="sxs-lookup"><span data-stu-id="c8af5-140">If a particular argument has no optional custom modifiers, specify <see langword="null" /> instead of an array of types.</span></span> <span data-ttu-id="c8af5-141">Se nenhum dos argumentos tiver modificadores personalizados opcionais, especifique <see langword="null" /> em vez de uma matriz de matrizes.</span><span class="sxs-lookup"><span data-stu-id="c8af5-141">If none of the arguments have optional custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span></span></param>
        <summary><span data-ttu-id="c8af5-142">Adiciona um conjunto de argumentos à assinatura, com modificadores personalizados especificados.</span><span class="sxs-lookup"><span data-stu-id="c8af5-142">Adds a set of arguments to the signature, with the specified custom modifiers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8af5-143">Os argumentos são adicionados ao final da assinatura, na ordem dos elementos da `arguments`.</span><span class="sxs-lookup"><span data-stu-id="c8af5-143">The arguments are added to the end of the signature, in order of the elements of `arguments`.</span></span>  
  
 <span data-ttu-id="c8af5-144">Consulte o <xref:System.Runtime.CompilerServices> namespace para as classes que representam os modificadores personalizados.</span><span class="sxs-lookup"><span data-stu-id="c8af5-144">See the <xref:System.Runtime.CompilerServices> namespace for classes that represent custom modifiers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c8af5-145">Um elemento de <paramref name="arguments" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c8af5-145">An element of <paramref name="arguments" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="c8af5-146">- ou -</span><span class="sxs-lookup"><span data-stu-id="c8af5-146">-or-</span></span> 
<span data-ttu-id="c8af5-147">Um dos modificadores personalizados especificados é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c8af5-147">One of the specified custom modifiers is <see langword="null" />.</span></span> <span data-ttu-id="c8af5-148">(No entanto, <see langword="null" /> pode ser especificado para a matriz de modificadores personalizados para qualquer argumento.)</span><span class="sxs-lookup"><span data-stu-id="c8af5-148">(However, <see langword="null" /> can be specified for the array of custom modifiers for any argument.)</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c8af5-149">A assinatura já foi encerrada.</span><span class="sxs-lookup"><span data-stu-id="c8af5-149">The signature has already been finished.</span></span>  
  
<span data-ttu-id="c8af5-150">- ou -</span><span class="sxs-lookup"><span data-stu-id="c8af5-150">-or-</span></span> 
<span data-ttu-id="c8af5-151">Um dos modificadores personalizados especificados é um tipo de matriz.</span><span class="sxs-lookup"><span data-stu-id="c8af5-151">One of the specified custom modifiers is an array type.</span></span>  
  
<span data-ttu-id="c8af5-152">- ou -</span><span class="sxs-lookup"><span data-stu-id="c8af5-152">-or-</span></span> 
<span data-ttu-id="c8af5-153">Um dos modificadores personalizados especificados é um tipo genérico aberto.</span><span class="sxs-lookup"><span data-stu-id="c8af5-153">One of the specified custom modifiers is an open generic type.</span></span> <span data-ttu-id="c8af5-154">Ou seja, a propriedade <see cref="P:System.Type.ContainsGenericParameters" /> é <see langword="true" /> para o modificador personalizado.</span><span class="sxs-lookup"><span data-stu-id="c8af5-154">That is, the <see cref="P:System.Type.ContainsGenericParameters" /> property is <see langword="true" /> for the custom modifier.</span></span>  
  
<span data-ttu-id="c8af5-155">- ou -</span><span class="sxs-lookup"><span data-stu-id="c8af5-155">-or-</span></span> 
<span data-ttu-id="c8af5-156">O tamanho de <paramref name="requiredCustomModifiers" /> ou <paramref name="optionalCustomModifiers" /> não é igual ao tamanho de <paramref name="arguments" />.</span><span class="sxs-lookup"><span data-stu-id="c8af5-156">The size of <paramref name="requiredCustomModifiers" /> or <paramref name="optionalCustomModifiers" /> does not equal the size of <paramref name="arguments" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddSentinel">
      <MemberSignature Language="C#" Value="public void AddSentinel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddSentinel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.AddSentinel" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddSentinel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddSentinel();" />
      <MemberSignature Language="F#" Value="member this.AddSentinel : unit -&gt; unit" Usage="signatureHelper.AddSentinel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c8af5-157">Marca o final de uma parte fixa vararg.</span><span class="sxs-lookup"><span data-stu-id="c8af5-157">Marks the end of a vararg fixed part.</span></span> <span data-ttu-id="c8af5-158">Isso só será usado se o chamador estiver criando um site de chamada de assinatura vararg.</span><span class="sxs-lookup"><span data-stu-id="c8af5-158">This is only used if the caller is creating a vararg signature call site.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="signatureHelper.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="c8af5-159">O objeto com o qual esta instância deverá ser comparada.</span><span class="sxs-lookup"><span data-stu-id="c8af5-159">The object with which this instance should be compared.</span></span></param>
        <summary><span data-ttu-id="c8af5-160">Verifica se esta instância é igual ao objeto fornecido.</span><span class="sxs-lookup"><span data-stu-id="c8af5-160">Checks if this instance is equal to the given object.</span></span></summary>
        <returns><span data-ttu-id="c8af5-161"><see langword="true" /> se o objeto fornecido for um <see langword="SignatureHelper" /> e representar a mesma assinatura; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c8af5-161"><see langword="true" /> if the given object is a <see langword="SignatureHelper" /> and represents the same signature; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFieldSigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetFieldSigHelper (System.Reflection.Module mod);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetFieldSigHelper(class System.Reflection.Module mod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetFieldSigHelper(System.Reflection.Module)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFieldSigHelper (mod As Module) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetFieldSigHelper(System::Reflection::Module ^ mod);" />
      <MemberSignature Language="F#" Value="static member GetFieldSigHelper : System.Reflection.Module -&gt; System.Reflection.Emit.SignatureHelper" Usage="System.Reflection.Emit.SignatureHelper.GetFieldSigHelper mod" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mod" Type="System.Reflection.Module" />
      </Parameters>
      <Docs>
        <param name="mod"><span data-ttu-id="c8af5-162">O módulo dinâmico que contém o campo para o qual o <see langword="SignatureHelper" /> é solicitado.</span><span class="sxs-lookup"><span data-stu-id="c8af5-162">The dynamic module that contains the field for which the <see langword="SignatureHelper" /> is requested.</span></span></param>
        <summary><span data-ttu-id="c8af5-163">Retorna um auxiliar de assinatura para um campo.</span><span class="sxs-lookup"><span data-stu-id="c8af5-163">Returns a signature helper for a field.</span></span></summary>
        <returns><span data-ttu-id="c8af5-164">O objeto <see langword="SignatureHelper" /> para um campo.</span><span class="sxs-lookup"><span data-stu-id="c8af5-164">The <see langword="SignatureHelper" /> object for a field.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="signatureHelper.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c8af5-165">Cria e retorna um código hash para esta instância.</span><span class="sxs-lookup"><span data-stu-id="c8af5-165">Creates and returns a hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="c8af5-166">O código hash com base no nome.</span><span class="sxs-lookup"><span data-stu-id="c8af5-166">The hash code based on the name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8af5-167">O código hash é criado a partir o nome desta instância, portanto, o valor de retorno é o mesmo como se o `GetHashCode` método foi chamado no valor da `Name` propriedade.</span><span class="sxs-lookup"><span data-stu-id="c8af5-167">The hash code is created from the name of this instance, so the return value is the same as if the `GetHashCode` method were called on the value of the `Name` property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetLocalVarSigHelper">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c8af5-168">Retorna um auxiliar de assinatura para uma variável local.</span><span class="sxs-lookup"><span data-stu-id="c8af5-168">Returns a signature helper for a local variable.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetLocalVarSigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetLocalVarSigHelper ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetLocalVarSigHelper() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLocalVarSigHelper () As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetLocalVarSigHelper();" />
      <MemberSignature Language="F#" Value="static member GetLocalVarSigHelper : unit -&gt; System.Reflection.Emit.SignatureHelper" Usage="System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c8af5-169">Retorna um auxiliar de assinatura para uma variável local.</span><span class="sxs-lookup"><span data-stu-id="c8af5-169">Returns a signature helper for a local variable.</span></span></summary>
        <returns><span data-ttu-id="c8af5-170">Um <see cref="T:System.Reflection.Emit.SignatureHelper" /> para uma variável local.</span><span class="sxs-lookup"><span data-stu-id="c8af5-170">A <see cref="T:System.Reflection.Emit.SignatureHelper" /> for a local variable.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLocalVarSigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetLocalVarSigHelper (System.Reflection.Module mod);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetLocalVarSigHelper(class System.Reflection.Module mod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper(System.Reflection.Module)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLocalVarSigHelper (mod As Module) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetLocalVarSigHelper(System::Reflection::Module ^ mod);" />
      <MemberSignature Language="F#" Value="static member GetLocalVarSigHelper : System.Reflection.Module -&gt; System.Reflection.Emit.SignatureHelper" Usage="System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper mod" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mod" Type="System.Reflection.Module" />
      </Parameters>
      <Docs>
        <param name="mod"><span data-ttu-id="c8af5-171">O módulo dinâmico que contém a variável local para a qual o <see langword="SignatureHelper" /> é solicitado.</span><span class="sxs-lookup"><span data-stu-id="c8af5-171">The dynamic module that contains the local variable for which the <see langword="SignatureHelper" /> is requested.</span></span></param>
        <summary><span data-ttu-id="c8af5-172">Retorna um auxiliar de assinatura para uma variável local.</span><span class="sxs-lookup"><span data-stu-id="c8af5-172">Returns a signature helper for a local variable.</span></span></summary>
        <returns><span data-ttu-id="c8af5-173">O objeto <see langword="SignatureHelper" /> para uma variável local.</span><span class="sxs-lookup"><span data-stu-id="c8af5-173">The <see langword="SignatureHelper" /> object for a local variable.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMethodSigHelper">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c8af5-174">Retorna um auxiliar de assinatura para um método.</span><span class="sxs-lookup"><span data-stu-id="c8af5-174">Returns a signature helper for a method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMethodSigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetMethodSigHelper (System.Reflection.CallingConventions callingConvention, Type returnType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetMethodSigHelper(valuetype System.Reflection.CallingConventions callingConvention, class System.Type returnType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.CallingConventions,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMethodSigHelper (callingConvention As CallingConventions, returnType As Type) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetMethodSigHelper(System::Reflection::CallingConventions callingConvention, Type ^ returnType);" />
      <MemberSignature Language="F#" Value="static member GetMethodSigHelper : System.Reflection.CallingConventions * Type -&gt; System.Reflection.Emit.SignatureHelper" Usage="System.Reflection.Emit.SignatureHelper.GetMethodSigHelper (callingConvention, returnType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="returnType" Type="System.Type" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="callingConvention"><span data-ttu-id="c8af5-175">A convenção de chamada do método.</span><span class="sxs-lookup"><span data-stu-id="c8af5-175">The calling convention of the method.</span></span></param>
        <param name="returnType"><span data-ttu-id="c8af5-176">O tipo de retorno do método ou <see langword="null" /> para um tipo de retorno nulo (procedimento <see langword="Sub" /> no Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="c8af5-176">The return type of the method, or <see langword="null" /> for a void return type (<see langword="Sub" /> procedure in Visual Basic).</span></span></param>
        <summary><span data-ttu-id="c8af5-177">Retorna um auxiliar de assinatura para um método considerando a convenção de chamada e o tipo de retorno do método.</span><span class="sxs-lookup"><span data-stu-id="c8af5-177">Returns a signature helper for a method given the method's calling convention and return type.</span></span></summary>
        <returns><span data-ttu-id="c8af5-178">O objeto <see langword="SignatureHelper" /> para um método.</span><span class="sxs-lookup"><span data-stu-id="c8af5-178">The <see langword="SignatureHelper" /> object for a method.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethodSigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetMethodSigHelper (System.Runtime.InteropServices.CallingConvention unmanagedCallingConvention, Type returnType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetMethodSigHelper(valuetype System.Runtime.InteropServices.CallingConvention unmanagedCallingConvention, class System.Type returnType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Runtime.InteropServices.CallingConvention,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMethodSigHelper (unmanagedCallingConvention As CallingConvention, returnType As Type) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetMethodSigHelper(System::Runtime::InteropServices::CallingConvention unmanagedCallingConvention, Type ^ returnType);" />
      <MemberSignature Language="F#" Value="static member GetMethodSigHelper : System.Runtime.InteropServices.CallingConvention * Type -&gt; System.Reflection.Emit.SignatureHelper" Usage="System.Reflection.Emit.SignatureHelper.GetMethodSigHelper (unmanagedCallingConvention, returnType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unmanagedCallingConvention" Type="System.Runtime.InteropServices.CallingConvention" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="returnType" Type="System.Type" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="unmanagedCallingConvention"><span data-ttu-id="c8af5-179">A convenção de chamada não gerenciada do método.</span><span class="sxs-lookup"><span data-stu-id="c8af5-179">The unmanaged calling convention of the method.</span></span></param>
        <param name="returnType"><span data-ttu-id="c8af5-180">O tipo de retorno do método ou <see langword="null" /> para um tipo de retorno nulo (procedimento <see langword="Sub" /> no Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="c8af5-180">The return type of the method, or <see langword="null" /> for a void return type (<see langword="Sub" /> procedure in Visual Basic).</span></span></param>
        <summary><span data-ttu-id="c8af5-181">Retorna um auxiliar de assinatura para um método considerando a convenção de chamada não gerenciada e o tipo de retorno do método.</span><span class="sxs-lookup"><span data-stu-id="c8af5-181">Returns a signature helper for a method given the method's unmanaged calling convention and return type.</span></span></summary>
        <returns><span data-ttu-id="c8af5-182">O objeto <see langword="SignatureHelper" /> para um método.</span><span class="sxs-lookup"><span data-stu-id="c8af5-182">The <see langword="SignatureHelper" /> object for a method.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c8af5-183"><paramref name="unmanagedCallConv" /> é uma convenção de chamada não gerenciada desconhecida.</span><span class="sxs-lookup"><span data-stu-id="c8af5-183"><paramref name="unmanagedCallConv" /> is an unknown unmanaged calling convention.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMethodSigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetMethodSigHelper (System.Reflection.Module mod, System.Reflection.CallingConventions callingConvention, Type returnType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetMethodSigHelper(class System.Reflection.Module mod, valuetype System.Reflection.CallingConventions callingConvention, class System.Type returnType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module,System.Reflection.CallingConventions,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMethodSigHelper (mod As Module, callingConvention As CallingConventions, returnType As Type) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetMethodSigHelper(System::Reflection::Module ^ mod, System::Reflection::CallingConventions callingConvention, Type ^ returnType);" />
      <MemberSignature Language="F#" Value="static member GetMethodSigHelper : System.Reflection.Module * System.Reflection.CallingConventions * Type -&gt; System.Reflection.Emit.SignatureHelper" Usage="System.Reflection.Emit.SignatureHelper.GetMethodSigHelper (mod, callingConvention, returnType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mod" Type="System.Reflection.Module" />
        <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
        <Parameter Name="returnType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="mod"><span data-ttu-id="c8af5-184">O <see cref="T:System.Reflection.Emit.ModuleBuilder" /> que contém o método para o qual o <see langword="SignatureHelper" /> é solicitado.</span><span class="sxs-lookup"><span data-stu-id="c8af5-184">The <see cref="T:System.Reflection.Emit.ModuleBuilder" /> that contains the method for which the <see langword="SignatureHelper" /> is requested.</span></span></param>
        <param name="callingConvention"><span data-ttu-id="c8af5-185">A convenção de chamada do método.</span><span class="sxs-lookup"><span data-stu-id="c8af5-185">The calling convention of the method.</span></span></param>
        <param name="returnType"><span data-ttu-id="c8af5-186">O tipo de retorno do método ou <see langword="null" /> para um tipo de retorno nulo (procedimento <see langword="Sub" /> no Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="c8af5-186">The return type of the method, or <see langword="null" /> for a void return type (<see langword="Sub" /> procedure in Visual Basic).</span></span></param>
        <summary><span data-ttu-id="c8af5-187">Retorna um auxiliar de assinatura para um método considerando o módulo, a convenção de chamada e o tipo de retorno do método.</span><span class="sxs-lookup"><span data-stu-id="c8af5-187">Returns a signature helper for a method given the method's module, calling convention, and return type.</span></span></summary>
        <returns><span data-ttu-id="c8af5-188">O objeto <see langword="SignatureHelper" /> para um método.</span><span class="sxs-lookup"><span data-stu-id="c8af5-188">The <see langword="SignatureHelper" /> object for a method.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c8af5-189"><paramref name="mod" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c8af5-189"><paramref name="mod" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c8af5-190"><paramref name="mod" /> não é um <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="c8af5-190"><paramref name="mod" /> is not a <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMethodSigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetMethodSigHelper (System.Reflection.Module mod, System.Runtime.InteropServices.CallingConvention unmanagedCallConv, Type returnType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetMethodSigHelper(class System.Reflection.Module mod, valuetype System.Runtime.InteropServices.CallingConvention unmanagedCallConv, class System.Type returnType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module,System.Runtime.InteropServices.CallingConvention,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMethodSigHelper (mod As Module, unmanagedCallConv As CallingConvention, returnType As Type) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetMethodSigHelper(System::Reflection::Module ^ mod, System::Runtime::InteropServices::CallingConvention unmanagedCallConv, Type ^ returnType);" />
      <MemberSignature Language="F#" Value="static member GetMethodSigHelper : System.Reflection.Module * System.Runtime.InteropServices.CallingConvention * Type -&gt; System.Reflection.Emit.SignatureHelper" Usage="System.Reflection.Emit.SignatureHelper.GetMethodSigHelper (mod, unmanagedCallConv, returnType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mod" Type="System.Reflection.Module" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="unmanagedCallConv" Type="System.Runtime.InteropServices.CallingConvention" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="returnType" Type="System.Type" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="mod"><span data-ttu-id="c8af5-191">O <see cref="T:System.Reflection.Emit.ModuleBuilder" /> que contém o método para o qual o <see langword="SignatureHelper" /> é solicitado.</span><span class="sxs-lookup"><span data-stu-id="c8af5-191">The <see cref="T:System.Reflection.Emit.ModuleBuilder" /> that contains the method for which the <see langword="SignatureHelper" /> is requested.</span></span></param>
        <param name="unmanagedCallConv"><span data-ttu-id="c8af5-192">A convenção de chamada não gerenciada do método.</span><span class="sxs-lookup"><span data-stu-id="c8af5-192">The unmanaged calling convention of the method.</span></span></param>
        <param name="returnType"><span data-ttu-id="c8af5-193">O tipo de retorno do método ou <see langword="null" /> para um tipo de retorno nulo (procedimento <see langword="Sub" /> no Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="c8af5-193">The return type of the method, or <see langword="null" /> for a void return type (<see langword="Sub" /> procedure in Visual Basic).</span></span></param>
        <summary><span data-ttu-id="c8af5-194">Retorna um auxiliar de assinatura para um método considerando o módulo, a convenção de chamada não gerenciada e o tipo de retorno do método.</span><span class="sxs-lookup"><span data-stu-id="c8af5-194">Returns a signature helper for a method given the method's module, unmanaged calling convention, and return type.</span></span></summary>
        <returns><span data-ttu-id="c8af5-195">O objeto <see langword="SignatureHelper" /> para um método.</span><span class="sxs-lookup"><span data-stu-id="c8af5-195">The <see langword="SignatureHelper" /> object for a method.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c8af5-196"><paramref name="mod" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c8af5-196"><paramref name="mod" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c8af5-197"><paramref name="mod" /> não é um <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="c8af5-197"><paramref name="mod" /> is not a <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span></span>  
  
<span data-ttu-id="c8af5-198">- ou -</span><span class="sxs-lookup"><span data-stu-id="c8af5-198">-or-</span></span> 
 <span data-ttu-id="c8af5-199"><paramref name="unmanagedCallConv" /> é uma convenção de chamada não gerenciada desconhecida.</span><span class="sxs-lookup"><span data-stu-id="c8af5-199"><paramref name="unmanagedCallConv" /> is an unknown unmanaged calling convention.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMethodSigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetMethodSigHelper (System.Reflection.Module mod, Type returnType, Type[] parameterTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetMethodSigHelper(class System.Reflection.Module mod, class System.Type returnType, class System.Type[] parameterTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module,System.Type,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMethodSigHelper (mod As Module, returnType As Type, parameterTypes As Type()) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetMethodSigHelper(System::Reflection::Module ^ mod, Type ^ returnType, cli::array &lt;Type ^&gt; ^ parameterTypes);" />
      <MemberSignature Language="F#" Value="static member GetMethodSigHelper : System.Reflection.Module * Type * Type[] -&gt; System.Reflection.Emit.SignatureHelper" Usage="System.Reflection.Emit.SignatureHelper.GetMethodSigHelper (mod, returnType, parameterTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mod" Type="System.Reflection.Module" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="parameterTypes" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="mod"><span data-ttu-id="c8af5-200">O <see cref="T:System.Reflection.Emit.ModuleBuilder" /> que contém o método para o qual o <see langword="SignatureHelper" /> é solicitado.</span><span class="sxs-lookup"><span data-stu-id="c8af5-200">The <see cref="T:System.Reflection.Emit.ModuleBuilder" /> that contains the method for which the <see langword="SignatureHelper" /> is requested.</span></span></param>
        <param name="returnType"><span data-ttu-id="c8af5-201">O tipo de retorno do método ou <see langword="null" /> para um tipo de retorno nulo (procedimento <see langword="Sub" /> no Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="c8af5-201">The return type of the method, or <see langword="null" /> for a void return type (<see langword="Sub" /> procedure in Visual Basic).</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="c8af5-202">Os tipos dos argumentos do método ou <see langword="null" /> se o método não tiver argumentos.</span><span class="sxs-lookup"><span data-stu-id="c8af5-202">The types of the arguments of the method, or <see langword="null" /> if the method has no arguments.</span></span></param>
        <summary><span data-ttu-id="c8af5-203">Retorna um auxiliar de assinatura para um método com uma convenção de chamada padrão, considerando o módulo, o tipo de retorno e os tipos de argumento do método.</span><span class="sxs-lookup"><span data-stu-id="c8af5-203">Returns a signature helper for a method with a standard calling convention, given the method's module, return type, and argument types.</span></span></summary>
        <returns><span data-ttu-id="c8af5-204">O objeto <see langword="SignatureHelper" /> para um método.</span><span class="sxs-lookup"><span data-stu-id="c8af5-204">The <see langword="SignatureHelper" /> object for a method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8af5-205">Essa sobrecarga cria uma assinatura com uma convenção de chamada padrão.</span><span class="sxs-lookup"><span data-stu-id="c8af5-205">This overload creates a signature with a standard calling convention.</span></span>  
  
 <span data-ttu-id="c8af5-206">Para criar uma assinatura de método com modificadores personalizados, use o <xref:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper%28System.Reflection.Module%2CSystem.Reflection.CallingConventions%2CSystem.Type%29> sobrecarga de método e, em seguida, usar o <xref:System.Reflection.Emit.SignatureHelper.AddArgument%28System.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29> ou <xref:System.Reflection.Emit.SignatureHelper.AddArguments%28System.Type%5B%5D%2CSystem.Type%5B%5D%5B%5D%2CSystem.Type%5B%5D%5B%5D%29> sobrecargas de método para adicionar argumentos com modificadores personalizados.</span><span class="sxs-lookup"><span data-stu-id="c8af5-206">To create a method signature with custom modifiers, use the <xref:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper%28System.Reflection.Module%2CSystem.Reflection.CallingConventions%2CSystem.Type%29> method overload and then use the <xref:System.Reflection.Emit.SignatureHelper.AddArgument%28System.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29> or <xref:System.Reflection.Emit.SignatureHelper.AddArguments%28System.Type%5B%5D%2CSystem.Type%5B%5D%5B%5D%2CSystem.Type%5B%5D%5B%5D%29> method overloads to add arguments with custom modifiers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c8af5-207"><paramref name="mod" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c8af5-207"><paramref name="mod" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="c8af5-208">- ou -</span><span class="sxs-lookup"><span data-stu-id="c8af5-208">-or-</span></span> 
<span data-ttu-id="c8af5-209">Um elemento de <paramref name="parameterTypes" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c8af5-209">An element of <paramref name="parameterTypes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c8af5-210"><paramref name="mod" /> não é um <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="c8af5-210"><paramref name="mod" /> is not a <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPropertySigHelper">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c8af5-211">Retorna um auxiliar de assinatura para uma propriedade.</span><span class="sxs-lookup"><span data-stu-id="c8af5-211">Returns a signature helper for a property.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPropertySigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetPropertySigHelper (System.Reflection.Module mod, Type returnType, Type[] parameterTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetPropertySigHelper(class System.Reflection.Module mod, class System.Type returnType, class System.Type[] parameterTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Type,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPropertySigHelper (mod As Module, returnType As Type, parameterTypes As Type()) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetPropertySigHelper(System::Reflection::Module ^ mod, Type ^ returnType, cli::array &lt;Type ^&gt; ^ parameterTypes);" />
      <MemberSignature Language="F#" Value="static member GetPropertySigHelper : System.Reflection.Module * Type * Type[] -&gt; System.Reflection.Emit.SignatureHelper" Usage="System.Reflection.Emit.SignatureHelper.GetPropertySigHelper (mod, returnType, parameterTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mod" Type="System.Reflection.Module" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="parameterTypes" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="mod"><span data-ttu-id="c8af5-212">O <see cref="T:System.Reflection.Emit.ModuleBuilder" /> que contém a propriedade para a qual o <see cref="T:System.Reflection.Emit.SignatureHelper" /> é solicitado.</span><span class="sxs-lookup"><span data-stu-id="c8af5-212">The <see cref="T:System.Reflection.Emit.ModuleBuilder" /> that contains the property for which the <see cref="T:System.Reflection.Emit.SignatureHelper" /> is requested.</span></span></param>
        <param name="returnType"><span data-ttu-id="c8af5-213">O tipo de propriedade.</span><span class="sxs-lookup"><span data-stu-id="c8af5-213">The property type.</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="c8af5-214">Os tipos de argumento ou <see langword="null" /> se a propriedade não tiver argumentos.</span><span class="sxs-lookup"><span data-stu-id="c8af5-214">The argument types, or <see langword="null" /> if the property has no arguments.</span></span></param>
        <summary><span data-ttu-id="c8af5-215">Retorna um auxiliar de assinatura para uma propriedade, considerando o módulo dinâmico que contém a propriedade, o tipo de propriedade e os argumentos de propriedade.</span><span class="sxs-lookup"><span data-stu-id="c8af5-215">Returns a signature helper for a property, given the dynamic module that contains the property, the property type, and the property arguments.</span></span></summary>
        <returns><span data-ttu-id="c8af5-216">Um objeto <see cref="T:System.Reflection.Emit.SignatureHelper" /> para uma propriedade.</span><span class="sxs-lookup"><span data-stu-id="c8af5-216">A <see cref="T:System.Reflection.Emit.SignatureHelper" /> object for a property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8af5-217">Para criar um auxiliar de assinatura para uma propriedade com modificadores personalizados opcionais ou obrigatórias, use o <xref:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper%28System.Reflection.Module%2CSystem.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%5B%5D%2CSystem.Type%5B%5D%5B%5D%29> sobrecarga de método.</span><span class="sxs-lookup"><span data-stu-id="c8af5-217">To create a signature helper for a property with optional or required custom modifiers, use the <xref:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper%28System.Reflection.Module%2CSystem.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%5B%5D%2CSystem.Type%5B%5D%5B%5D%29> method overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c8af5-218"><paramref name="mod" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c8af5-218"><paramref name="mod" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="c8af5-219">- ou -</span><span class="sxs-lookup"><span data-stu-id="c8af5-219">-or-</span></span> 
<span data-ttu-id="c8af5-220">Um elemento de <paramref name="parameterTypes" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c8af5-220">An element of <paramref name="parameterTypes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c8af5-221"><paramref name="mod" /> não é um <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="c8af5-221"><paramref name="mod" /> is not a <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetPropertySigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetPropertySigHelper (System.Reflection.Module mod, Type returnType, Type[] requiredReturnTypeCustomModifiers, Type[] optionalReturnTypeCustomModifiers, Type[] parameterTypes, Type[][] requiredParameterTypeCustomModifiers, Type[][] optionalParameterTypeCustomModifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetPropertySigHelper(class System.Reflection.Module mod, class System.Type returnType, class System.Type[] requiredReturnTypeCustomModifiers, class System.Type[] optionalReturnTypeCustomModifiers, class System.Type[] parameterTypes, class System.Type[][] requiredParameterTypeCustomModifiers, class System.Type[][] optionalParameterTypeCustomModifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPropertySigHelper (mod As Module, returnType As Type, requiredReturnTypeCustomModifiers As Type(), optionalReturnTypeCustomModifiers As Type(), parameterTypes As Type(), requiredParameterTypeCustomModifiers As Type()(), optionalParameterTypeCustomModifiers As Type()()) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetPropertySigHelper(System::Reflection::Module ^ mod, Type ^ returnType, cli::array &lt;Type ^&gt; ^ requiredReturnTypeCustomModifiers, cli::array &lt;Type ^&gt; ^ optionalReturnTypeCustomModifiers, cli::array &lt;Type ^&gt; ^ parameterTypes, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ requiredParameterTypeCustomModifiers, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ optionalParameterTypeCustomModifiers);" />
      <MemberSignature Language="F#" Value="static member GetPropertySigHelper : System.Reflection.Module * Type * Type[] * Type[] * Type[] * Type[][] * Type[][] -&gt; System.Reflection.Emit.SignatureHelper" Usage="System.Reflection.Emit.SignatureHelper.GetPropertySigHelper (mod, returnType, requiredReturnTypeCustomModifiers, optionalReturnTypeCustomModifiers, parameterTypes, requiredParameterTypeCustomModifiers, optionalParameterTypeCustomModifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mod" Type="System.Reflection.Module" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="returnType" Type="System.Type" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredReturnTypeCustomModifiers" Type="System.Type[]" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="optionalReturnTypeCustomModifiers" Type="System.Type[]" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameterTypes" Type="System.Type[]" Index="4" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredParameterTypeCustomModifiers" Type="System.Type[][]" Index="5" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="optionalParameterTypeCustomModifiers" Type="System.Type[][]" Index="6" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="mod"><span data-ttu-id="c8af5-222">O <see cref="T:System.Reflection.Emit.ModuleBuilder" /> que contém a propriedade para a qual o <see cref="T:System.Reflection.Emit.SignatureHelper" /> é solicitado.</span><span class="sxs-lookup"><span data-stu-id="c8af5-222">The <see cref="T:System.Reflection.Emit.ModuleBuilder" /> that contains the property for which the <see cref="T:System.Reflection.Emit.SignatureHelper" /> is requested.</span></span></param>
        <param name="returnType"><span data-ttu-id="c8af5-223">O tipo de propriedade.</span><span class="sxs-lookup"><span data-stu-id="c8af5-223">The property type.</span></span></param>
        <param name="requiredReturnTypeCustomModifiers"><span data-ttu-id="c8af5-224">Uma matriz de tipos que representa os modificadores personalizados obrigatórios para o tipo de retorno, como <see cref="T:System.Runtime.CompilerServices.IsConst" /> ou <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span><span class="sxs-lookup"><span data-stu-id="c8af5-224">An array of types representing the required custom modifiers for the return type, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span></span> <span data-ttu-id="c8af5-225">Se o tipo de retorno não tiver modificadores personalizados obrigatórios, especifique <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c8af5-225">If the return type has no required custom modifiers, specify <see langword="null" />.</span></span></param>
        <param name="optionalReturnTypeCustomModifiers"><span data-ttu-id="c8af5-226">Uma matriz de tipos que representa os modificadores personalizados opcionais para o tipo de retorno, como <see cref="T:System.Runtime.CompilerServices.IsConst" /> ou <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span><span class="sxs-lookup"><span data-stu-id="c8af5-226">An array of types representing the optional custom modifiers for the return type, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span></span> <span data-ttu-id="c8af5-227">Se o tipo de retorno não tiver modificadores personalizados opcionais, especifique <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c8af5-227">If the return type has no optional custom modifiers, specify <see langword="null" />.</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="c8af5-228">Os tipos dos argumentos da propriedade ou <see langword="null" /> se a propriedade não tiver nenhum argumento.</span><span class="sxs-lookup"><span data-stu-id="c8af5-228">The types of the property's arguments, or <see langword="null" /> if the property has no arguments.</span></span></param>
        <param name="requiredParameterTypeCustomModifiers"><span data-ttu-id="c8af5-229">Uma matriz de matrizes de tipos.</span><span class="sxs-lookup"><span data-stu-id="c8af5-229">An array of arrays of types.</span></span> <span data-ttu-id="c8af5-230">Cada matriz de tipos representa os modificadores personalizados obrigatórios para o argumento correspondente da propriedade.</span><span class="sxs-lookup"><span data-stu-id="c8af5-230">Each array of types represents the required custom modifiers for the corresponding argument of the property.</span></span> <span data-ttu-id="c8af5-231">Se um argumento específico não tiver nenhum modificador personalizado obrigatório, especifique <see langword="null" />, em vez de uma matriz de tipos.</span><span class="sxs-lookup"><span data-stu-id="c8af5-231">If a particular argument has no required custom modifiers, specify <see langword="null" /> instead of an array of types.</span></span> <span data-ttu-id="c8af5-232">Se a propriedade não tiver nenhum argumento ou se nenhum argumento tiver modificadores personalizados obrigatórios, especifique <see langword="null" /> em vez de uma matriz de matrizes.</span><span class="sxs-lookup"><span data-stu-id="c8af5-232">If the property has no arguments, or if none of the arguments have required custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span></span></param>
        <param name="optionalParameterTypeCustomModifiers"><span data-ttu-id="c8af5-233">Uma matriz de matrizes de tipos.</span><span class="sxs-lookup"><span data-stu-id="c8af5-233">An array of arrays of types.</span></span> <span data-ttu-id="c8af5-234">Cada matriz de tipos representa os modificadores personalizados opcionais para o argumento correspondente da propriedade.</span><span class="sxs-lookup"><span data-stu-id="c8af5-234">Each array of types represents the optional custom modifiers for the corresponding argument of the property.</span></span> <span data-ttu-id="c8af5-235">Se um argumento específico não tiver nenhum modificador personalizado opcional, especifique <see langword="null" />, em vez de uma matriz de tipos.</span><span class="sxs-lookup"><span data-stu-id="c8af5-235">If a particular argument has no optional custom modifiers, specify <see langword="null" /> instead of an array of types.</span></span> <span data-ttu-id="c8af5-236">Se a propriedade não tiver nenhum argumento ou se nenhum argumento tiver modificadores personalizados opcionais, especifique <see langword="null" /> em vez de uma matriz de matrizes.</span><span class="sxs-lookup"><span data-stu-id="c8af5-236">If the property has no arguments, or if none of the arguments have optional custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span></span></param>
        <summary><span data-ttu-id="c8af5-237">Retorna um auxiliar de assinatura para uma propriedade, considerando o módulo dinâmico que contém a propriedade, o tipo de propriedade, os argumentos de propriedade e os modificadores personalizados para o tipo de retorno e os argumentos.</span><span class="sxs-lookup"><span data-stu-id="c8af5-237">Returns a signature helper for a property, given the dynamic module that contains the property, the property type, the property arguments, and custom modifiers for the return type and arguments.</span></span></summary>
        <returns><span data-ttu-id="c8af5-238">Um objeto <see cref="T:System.Reflection.Emit.SignatureHelper" /> para uma propriedade.</span><span class="sxs-lookup"><span data-stu-id="c8af5-238">A <see cref="T:System.Reflection.Emit.SignatureHelper" /> object for a property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8af5-239">Consulte o <xref:System.Runtime.CompilerServices> namespace para as classes que representam os modificadores personalizados.</span><span class="sxs-lookup"><span data-stu-id="c8af5-239">See the <xref:System.Runtime.CompilerServices> namespace for classes that represent custom modifiers.</span></span>  
  
 <span data-ttu-id="c8af5-240">Se uma propriedade tiver não modificadores personalizados, use o <xref:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper%28System.Reflection.Module%2CSystem.Type%2CSystem.Type%5B%5D%29> sobrecarga de método.</span><span class="sxs-lookup"><span data-stu-id="c8af5-240">If a property has no custom modifiers, use the <xref:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper%28System.Reflection.Module%2CSystem.Type%2CSystem.Type%5B%5D%29> method overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c8af5-241"><paramref name="mod" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c8af5-241"><paramref name="mod" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="c8af5-242">- ou -</span><span class="sxs-lookup"><span data-stu-id="c8af5-242">-or-</span></span> 
<span data-ttu-id="c8af5-243">Um elemento de <paramref name="parameterTypes" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c8af5-243">An element of <paramref name="parameterTypes" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="c8af5-244">- ou -</span><span class="sxs-lookup"><span data-stu-id="c8af5-244">-or-</span></span> 
<span data-ttu-id="c8af5-245">Um dos modificadores personalizados especificados é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c8af5-245">One of the specified custom modifiers is <see langword="null" />.</span></span> <span data-ttu-id="c8af5-246">(No entanto, <see langword="null" /> pode ser especificado para a matriz de modificadores personalizados para qualquer argumento.)</span><span class="sxs-lookup"><span data-stu-id="c8af5-246">(However, <see langword="null" /> can be specified for the array of custom modifiers for any argument.)</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c8af5-247">A assinatura já foi encerrada.</span><span class="sxs-lookup"><span data-stu-id="c8af5-247">The signature has already been finished.</span></span>  
  
<span data-ttu-id="c8af5-248">- ou -</span><span class="sxs-lookup"><span data-stu-id="c8af5-248">-or-</span></span> 
 <span data-ttu-id="c8af5-249"><paramref name="mod" /> não é um <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="c8af5-249"><paramref name="mod" /> is not a <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span></span>  
  
<span data-ttu-id="c8af5-250">- ou -</span><span class="sxs-lookup"><span data-stu-id="c8af5-250">-or-</span></span> 
<span data-ttu-id="c8af5-251">Um dos modificadores personalizados especificados é um tipo de matriz.</span><span class="sxs-lookup"><span data-stu-id="c8af5-251">One of the specified custom modifiers is an array type.</span></span>  
  
<span data-ttu-id="c8af5-252">- ou -</span><span class="sxs-lookup"><span data-stu-id="c8af5-252">-or-</span></span> 
<span data-ttu-id="c8af5-253">Um dos modificadores personalizados especificados é um tipo genérico aberto.</span><span class="sxs-lookup"><span data-stu-id="c8af5-253">One of the specified custom modifiers is an open generic type.</span></span> <span data-ttu-id="c8af5-254">Ou seja, a propriedade <see cref="P:System.Type.ContainsGenericParameters" /> é <see langword="true" /> para o modificador personalizado.</span><span class="sxs-lookup"><span data-stu-id="c8af5-254">That is, the <see cref="P:System.Type.ContainsGenericParameters" /> property is <see langword="true" /> for the custom modifier.</span></span>  
  
<span data-ttu-id="c8af5-255">- ou -</span><span class="sxs-lookup"><span data-stu-id="c8af5-255">-or-</span></span> 
<span data-ttu-id="c8af5-256">O tamanho de <paramref name="requiredParameterTypeCustomModifiers" /> ou <paramref name="optionalParameterTypeCustomModifiers" /> não é igual ao tamanho de <paramref name="parameterTypes" />.</span><span class="sxs-lookup"><span data-stu-id="c8af5-256">The size of <paramref name="requiredParameterTypeCustomModifiers" /> or <paramref name="optionalParameterTypeCustomModifiers" /> does not equal the size of <paramref name="parameterTypes" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetPropertySigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetPropertySigHelper (System.Reflection.Module mod, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] requiredReturnTypeCustomModifiers, Type[] optionalReturnTypeCustomModifiers, Type[] parameterTypes, Type[][] requiredParameterTypeCustomModifiers, Type[][] optionalParameterTypeCustomModifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetPropertySigHelper(class System.Reflection.Module mod, valuetype System.Reflection.CallingConventions callingConvention, class System.Type returnType, class System.Type[] requiredReturnTypeCustomModifiers, class System.Type[] optionalReturnTypeCustomModifiers, class System.Type[] parameterTypes, class System.Type[][] requiredParameterTypeCustomModifiers, class System.Type[][] optionalParameterTypeCustomModifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPropertySigHelper (mod As Module, callingConvention As CallingConventions, returnType As Type, requiredReturnTypeCustomModifiers As Type(), optionalReturnTypeCustomModifiers As Type(), parameterTypes As Type(), requiredParameterTypeCustomModifiers As Type()(), optionalParameterTypeCustomModifiers As Type()()) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetPropertySigHelper(System::Reflection::Module ^ mod, System::Reflection::CallingConventions callingConvention, Type ^ returnType, cli::array &lt;Type ^&gt; ^ requiredReturnTypeCustomModifiers, cli::array &lt;Type ^&gt; ^ optionalReturnTypeCustomModifiers, cli::array &lt;Type ^&gt; ^ parameterTypes, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ requiredParameterTypeCustomModifiers, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ optionalParameterTypeCustomModifiers);" />
      <MemberSignature Language="F#" Value="static member GetPropertySigHelper : System.Reflection.Module * System.Reflection.CallingConventions * Type * Type[] * Type[] * Type[] * Type[][] * Type[][] -&gt; System.Reflection.Emit.SignatureHelper" Usage="System.Reflection.Emit.SignatureHelper.GetPropertySigHelper (mod, callingConvention, returnType, requiredReturnTypeCustomModifiers, optionalReturnTypeCustomModifiers, parameterTypes, requiredParameterTypeCustomModifiers, optionalParameterTypeCustomModifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mod" Type="System.Reflection.Module" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="returnType" Type="System.Type" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredReturnTypeCustomModifiers" Type="System.Type[]" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="optionalReturnTypeCustomModifiers" Type="System.Type[]" Index="4" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameterTypes" Type="System.Type[]" Index="5" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredParameterTypeCustomModifiers" Type="System.Type[][]" Index="6" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="optionalParameterTypeCustomModifiers" Type="System.Type[][]" Index="7" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="mod"><span data-ttu-id="c8af5-257">O <see cref="T:System.Reflection.Emit.ModuleBuilder" /> que contém a propriedade para a qual o <see cref="T:System.Reflection.Emit.SignatureHelper" /> é solicitado.</span><span class="sxs-lookup"><span data-stu-id="c8af5-257">The <see cref="T:System.Reflection.Emit.ModuleBuilder" /> that contains the property for which the <see cref="T:System.Reflection.Emit.SignatureHelper" /> is requested.</span></span></param>
        <param name="callingConvention"><span data-ttu-id="c8af5-258">A convenção de chamada dos acessadores de propriedade.</span><span class="sxs-lookup"><span data-stu-id="c8af5-258">The calling convention of the property accessors.</span></span></param>
        <param name="returnType"><span data-ttu-id="c8af5-259">O tipo de propriedade.</span><span class="sxs-lookup"><span data-stu-id="c8af5-259">The property type.</span></span></param>
        <param name="requiredReturnTypeCustomModifiers"><span data-ttu-id="c8af5-260">Uma matriz de tipos que representa os modificadores personalizados obrigatórios para o tipo de retorno, como <see cref="T:System.Runtime.CompilerServices.IsConst" /> ou <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span><span class="sxs-lookup"><span data-stu-id="c8af5-260">An array of types representing the required custom modifiers for the return type, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span></span> <span data-ttu-id="c8af5-261">Se o tipo de retorno não tiver modificadores personalizados obrigatórios, especifique <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c8af5-261">If the return type has no required custom modifiers, specify <see langword="null" />.</span></span></param>
        <param name="optionalReturnTypeCustomModifiers"><span data-ttu-id="c8af5-262">Uma matriz de tipos que representa os modificadores personalizados opcionais para o tipo de retorno, como <see cref="T:System.Runtime.CompilerServices.IsConst" /> ou <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span><span class="sxs-lookup"><span data-stu-id="c8af5-262">An array of types representing the optional custom modifiers for the return type, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span></span> <span data-ttu-id="c8af5-263">Se o tipo de retorno não tiver modificadores personalizados opcionais, especifique <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c8af5-263">If the return type has no optional custom modifiers, specify <see langword="null" />.</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="c8af5-264">Os tipos dos argumentos da propriedade ou <see langword="null" /> se a propriedade não tiver nenhum argumento.</span><span class="sxs-lookup"><span data-stu-id="c8af5-264">The types of the property's arguments, or <see langword="null" /> if the property has no arguments.</span></span></param>
        <param name="requiredParameterTypeCustomModifiers"><span data-ttu-id="c8af5-265">Uma matriz de matrizes de tipos.</span><span class="sxs-lookup"><span data-stu-id="c8af5-265">An array of arrays of types.</span></span> <span data-ttu-id="c8af5-266">Cada matriz de tipos representa os modificadores personalizados obrigatórios para o argumento correspondente da propriedade.</span><span class="sxs-lookup"><span data-stu-id="c8af5-266">Each array of types represents the required custom modifiers for the corresponding argument of the property.</span></span> <span data-ttu-id="c8af5-267">Se um argumento específico não tiver nenhum modificador personalizado obrigatório, especifique <see langword="null" />, em vez de uma matriz de tipos.</span><span class="sxs-lookup"><span data-stu-id="c8af5-267">If a particular argument has no required custom modifiers, specify <see langword="null" /> instead of an array of types.</span></span> <span data-ttu-id="c8af5-268">Se a propriedade não tiver nenhum argumento ou se nenhum argumento tiver modificadores personalizados obrigatórios, especifique <see langword="null" /> em vez de uma matriz de matrizes.</span><span class="sxs-lookup"><span data-stu-id="c8af5-268">If the property has no arguments, or if none of the arguments have required custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span></span></param>
        <param name="optionalParameterTypeCustomModifiers"><span data-ttu-id="c8af5-269">Uma matriz de matrizes de tipos.</span><span class="sxs-lookup"><span data-stu-id="c8af5-269">An array of arrays of types.</span></span> <span data-ttu-id="c8af5-270">Cada matriz de tipos representa os modificadores personalizados opcionais para o argumento correspondente da propriedade.</span><span class="sxs-lookup"><span data-stu-id="c8af5-270">Each array of types represents the optional custom modifiers for the corresponding argument of the property.</span></span> <span data-ttu-id="c8af5-271">Se um argumento específico não tiver nenhum modificador personalizado opcional, especifique <see langword="null" />, em vez de uma matriz de tipos.</span><span class="sxs-lookup"><span data-stu-id="c8af5-271">If a particular argument has no optional custom modifiers, specify <see langword="null" /> instead of an array of types.</span></span> <span data-ttu-id="c8af5-272">Se a propriedade não tiver nenhum argumento ou se nenhum argumento tiver modificadores personalizados opcionais, especifique <see langword="null" /> em vez de uma matriz de matrizes.</span><span class="sxs-lookup"><span data-stu-id="c8af5-272">If the property has no arguments, or if none of the arguments have optional custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span></span></param>
        <summary><span data-ttu-id="c8af5-273">Retorna um auxiliar de assinatura para uma propriedade, considerando o módulo dinâmico que contém a propriedade, a convenção de chamada, o tipo de propriedade, os argumentos de propriedade e os modificadores personalizados para o tipo de retorno e argumentos.</span><span class="sxs-lookup"><span data-stu-id="c8af5-273">Returns a signature helper for a property, given the dynamic module that contains the property, the calling convention, the property type, the property arguments, and custom modifiers for the return type and arguments.</span></span></summary>
        <returns><span data-ttu-id="c8af5-274">Um objeto <see cref="T:System.Reflection.Emit.SignatureHelper" /> para uma propriedade.</span><span class="sxs-lookup"><span data-stu-id="c8af5-274">A <see cref="T:System.Reflection.Emit.SignatureHelper" /> object for a property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8af5-275">Consulte o <xref:System.Runtime.CompilerServices> namespace para as classes que representam os modificadores personalizados.</span><span class="sxs-lookup"><span data-stu-id="c8af5-275">See the <xref:System.Runtime.CompilerServices> namespace for classes that represent custom modifiers.</span></span>  
  
 <span data-ttu-id="c8af5-276">Se uma propriedade tiver não modificadores personalizados, use o <xref:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper%28System.Reflection.Module%2CSystem.Type%2CSystem.Type%5B%5D%29> sobrecarga de método.</span><span class="sxs-lookup"><span data-stu-id="c8af5-276">If a property has no custom modifiers, use the <xref:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper%28System.Reflection.Module%2CSystem.Type%2CSystem.Type%5B%5D%29> method overload.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c8af5-277">Essa sobrecarga de método é apresentada na [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] ou posterior.</span><span class="sxs-lookup"><span data-stu-id="c8af5-277">This method overload is introduced in the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c8af5-278"><paramref name="mod" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c8af5-278"><paramref name="mod" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="c8af5-279">- ou -</span><span class="sxs-lookup"><span data-stu-id="c8af5-279">-or-</span></span> 
<span data-ttu-id="c8af5-280">Um elemento de <paramref name="parameterTypes" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c8af5-280">An element of <paramref name="parameterTypes" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="c8af5-281">- ou -</span><span class="sxs-lookup"><span data-stu-id="c8af5-281">-or-</span></span> 
<span data-ttu-id="c8af5-282">Um dos modificadores personalizados especificados é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c8af5-282">One of the specified custom modifiers is <see langword="null" />.</span></span> <span data-ttu-id="c8af5-283">(No entanto, <see langword="null" /> pode ser especificado para a matriz de modificadores personalizados para qualquer argumento.)</span><span class="sxs-lookup"><span data-stu-id="c8af5-283">(However, <see langword="null" /> can be specified for the array of custom modifiers for any argument.)</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c8af5-284">A assinatura já foi encerrada.</span><span class="sxs-lookup"><span data-stu-id="c8af5-284">The signature has already been finished.</span></span>  
  
<span data-ttu-id="c8af5-285">- ou -</span><span class="sxs-lookup"><span data-stu-id="c8af5-285">-or-</span></span> 
 <span data-ttu-id="c8af5-286"><paramref name="mod" /> não é um <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="c8af5-286"><paramref name="mod" /> is not a <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span></span>  
  
<span data-ttu-id="c8af5-287">- ou -</span><span class="sxs-lookup"><span data-stu-id="c8af5-287">-or-</span></span> 
<span data-ttu-id="c8af5-288">Um dos modificadores personalizados especificados é um tipo de matriz.</span><span class="sxs-lookup"><span data-stu-id="c8af5-288">One of the specified custom modifiers is an array type.</span></span>  
  
<span data-ttu-id="c8af5-289">- ou -</span><span class="sxs-lookup"><span data-stu-id="c8af5-289">-or-</span></span> 
<span data-ttu-id="c8af5-290">Um dos modificadores personalizados especificados é um tipo genérico aberto.</span><span class="sxs-lookup"><span data-stu-id="c8af5-290">One of the specified custom modifiers is an open generic type.</span></span> <span data-ttu-id="c8af5-291">Ou seja, a propriedade <see cref="P:System.Type.ContainsGenericParameters" /> é <see langword="true" /> para o modificador personalizado.</span><span class="sxs-lookup"><span data-stu-id="c8af5-291">That is, the <see cref="P:System.Type.ContainsGenericParameters" /> property is <see langword="true" /> for the custom modifier.</span></span>  
  
<span data-ttu-id="c8af5-292">- ou -</span><span class="sxs-lookup"><span data-stu-id="c8af5-292">-or-</span></span> 
<span data-ttu-id="c8af5-293">O tamanho de <paramref name="requiredParameterTypeCustomModifiers" /> ou <paramref name="optionalParameterTypeCustomModifiers" /> não é igual ao tamanho de <paramref name="parameterTypes" />.</span><span class="sxs-lookup"><span data-stu-id="c8af5-293">The size of <paramref name="requiredParameterTypeCustomModifiers" /> or <paramref name="optionalParameterTypeCustomModifiers" /> does not equal the size of <paramref name="parameterTypes" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSignature">
      <MemberSignature Language="C#" Value="public byte[] GetSignature ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetSignature() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetSignature" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSignature () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetSignature();" />
      <MemberSignature Language="F#" Value="member this.GetSignature : unit -&gt; byte[]" Usage="signatureHelper.GetSignature " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c8af5-294">Adiciona o token final à assinatura e marca a assinatura como concluída. Portanto, nenhum token adicional pode ser adicionado.</span><span class="sxs-lookup"><span data-stu-id="c8af5-294">Adds the end token to the signature and marks the signature as finished, so no further tokens can be added.</span></span></summary>
        <returns><span data-ttu-id="c8af5-295">Uma matriz de bytes composta pela assinatura completa.</span><span class="sxs-lookup"><span data-stu-id="c8af5-295">A byte array made up of the full signature.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._SignatureHelper.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _SignatureHelper.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._SignatureHelper.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _SignatureHelper.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._SignatureHelper.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_SignatureHelper::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._SignatureHelper.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid" RefType="ref" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="rgszNames" Type="System.IntPtr" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="cNames" Type="System.UInt32" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="lcid" Type="System.UInt32" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="rgDispId" Type="System.IntPtr" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="riid"><span data-ttu-id="c8af5-296">Reservado para uso futuro.</span><span class="sxs-lookup"><span data-stu-id="c8af5-296">Reserved for future use.</span></span> <span data-ttu-id="c8af5-297">Deve ser IID_NULL.</span><span class="sxs-lookup"><span data-stu-id="c8af5-297">Must be IID_NULL.</span></span></param>
        <param name="rgszNames"><span data-ttu-id="c8af5-298">Matriz passada de nomes a serem mapeados.</span><span class="sxs-lookup"><span data-stu-id="c8af5-298">Passed-in array of names to be mapped.</span></span></param>
        <param name="cNames"><span data-ttu-id="c8af5-299">Contagem dos nomes a serem mapeados.</span><span class="sxs-lookup"><span data-stu-id="c8af5-299">Count of the names to be mapped.</span></span></param>
        <param name="lcid"><span data-ttu-id="c8af5-300">O contexto de localidade no qual interpretar os nomes.</span><span class="sxs-lookup"><span data-stu-id="c8af5-300">The locale context in which to interpret the names.</span></span></param>
        <param name="rgDispId"><span data-ttu-id="c8af5-301">Matriz alocada pelo chamador que recebe os IDs correspondentes aos nomes.</span><span class="sxs-lookup"><span data-stu-id="c8af5-301">Caller-allocated array which receives the IDs corresponding to the names.</span></span></param>
        <summary><span data-ttu-id="c8af5-302">Mapeia um conjunto de nomes para um conjunto correspondente de identificadores de expedição.</span><span class="sxs-lookup"><span data-stu-id="c8af5-302">Maps a set of names to a corresponding set of dispatch identifiers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8af5-303">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="c8af5-303">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="c8af5-304">Para obter mais informações sobre `IDispatch::GetIDsOfNames`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="c8af5-304">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="c8af5-305">Não há suporte para acesso com associação tardia usando a interface <c>IDispatch</c> COM.</span><span class="sxs-lookup"><span data-stu-id="c8af5-305">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._SignatureHelper.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _SignatureHelper.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._SignatureHelper.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _SignatureHelper.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._SignatureHelper.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_SignatureHelper::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._SignatureHelper.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="lcid" Type="System.UInt32" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="iTInfo"><span data-ttu-id="c8af5-306">As informações de tipo a serem retornadas.</span><span class="sxs-lookup"><span data-stu-id="c8af5-306">The type information to return.</span></span></param>
        <param name="lcid"><span data-ttu-id="c8af5-307">O identificador de localidade das informações do tipo.</span><span class="sxs-lookup"><span data-stu-id="c8af5-307">The locale identifier for the type information.</span></span></param>
        <param name="ppTInfo"><span data-ttu-id="c8af5-308">Recebe um ponteiro para o objeto de informações de tipo solicitado.</span><span class="sxs-lookup"><span data-stu-id="c8af5-308">Receives a pointer to the requested type information object.</span></span></param>
        <summary><span data-ttu-id="c8af5-309">Recupera as informações do tipo de um objeto, que podem ser usadas para obter informações de tipo para uma interface.</span><span class="sxs-lookup"><span data-stu-id="c8af5-309">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8af5-310">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="c8af5-310">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="c8af5-311">Para obter mais informações sobre `IDispatch::GetTypeInfo`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="c8af5-311">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="c8af5-312">Não há suporte para acesso com associação tardia usando a interface <c>IDispatch</c> COM.</span><span class="sxs-lookup"><span data-stu-id="c8af5-312">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._SignatureHelper.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _SignatureHelper.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._SignatureHelper.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _SignatureHelper.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._SignatureHelper.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_SignatureHelper::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._SignatureHelper.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32" RefType="out" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="pcTInfo"><span data-ttu-id="c8af5-313">Aponta para um local que recebe o número de interfaces de informações de tipo fornecido pelo objeto.</span><span class="sxs-lookup"><span data-stu-id="c8af5-313">Points to a location that receives the number of type information interfaces provided by the object.</span></span></param>
        <summary><span data-ttu-id="c8af5-314">Retorna o número de interfaces de informações do tipo que um objeto fornece (0 ou 1).</span><span class="sxs-lookup"><span data-stu-id="c8af5-314">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8af5-315">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="c8af5-315">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="c8af5-316">Para obter mais informações sobre `IDispatch::GetTypeInfoCount`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="c8af5-316">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="c8af5-317">Não há suporte para acesso com associação tardia usando a interface <c>IDispatch</c> COM.</span><span class="sxs-lookup"><span data-stu-id="c8af5-317">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._SignatureHelper.Invoke">
      <MemberSignature Language="C#" Value="void _SignatureHelper.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._SignatureHelper.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _SignatureHelper.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._SignatureHelper.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_SignatureHelper::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._SignatureHelper.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="riid" Type="System.Guid" RefType="ref" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="lcid" Type="System.UInt32" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="wFlags" Type="System.Int16" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="pDispParams" Type="System.IntPtr" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="pVarResult" Type="System.IntPtr" Index="5" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" Index="6" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="puArgErr" Type="System.IntPtr" Index="7" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dispIdMember"><span data-ttu-id="c8af5-318">Identifica o membro.</span><span class="sxs-lookup"><span data-stu-id="c8af5-318">Identifies the member.</span></span></param>
        <param name="riid"><span data-ttu-id="c8af5-319">Reservado para uso futuro.</span><span class="sxs-lookup"><span data-stu-id="c8af5-319">Reserved for future use.</span></span> <span data-ttu-id="c8af5-320">Deve ser IID_NULL.</span><span class="sxs-lookup"><span data-stu-id="c8af5-320">Must be IID_NULL.</span></span></param>
        <param name="lcid"><span data-ttu-id="c8af5-321">O contexto de localidade no qual interpretar argumentos.</span><span class="sxs-lookup"><span data-stu-id="c8af5-321">The locale context in which to interpret arguments.</span></span></param>
        <param name="wFlags"><span data-ttu-id="c8af5-322">Sinalizadores que descrevem o contexto da chamada.</span><span class="sxs-lookup"><span data-stu-id="c8af5-322">Flags describing the context of the call.</span></span></param>
        <param name="pDispParams"><span data-ttu-id="c8af5-323">Ponteiro para uma estrutura contendo uma matriz de argumentos, uma matriz de DISPIDs de argumento para argumentos nomeados e contagens para o número de elementos nas matrizes.</span><span class="sxs-lookup"><span data-stu-id="c8af5-323">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span></span></param>
        <param name="pVarResult"><span data-ttu-id="c8af5-324">Ponteiro para o local onde o resultado deve ser armazenado.</span><span class="sxs-lookup"><span data-stu-id="c8af5-324">Pointer to the location where the result is to be stored.</span></span></param>
        <param name="pExcepInfo"><span data-ttu-id="c8af5-325">Ponteiro para uma estrutura que contém informações de exceção.</span><span class="sxs-lookup"><span data-stu-id="c8af5-325">Pointer to a structure that contains exception information.</span></span></param>
        <param name="puArgErr"><span data-ttu-id="c8af5-326">O índice do primeiro argumento que tem um erro.</span><span class="sxs-lookup"><span data-stu-id="c8af5-326">The index of the first argument that has an error.</span></span></param>
        <summary><span data-ttu-id="c8af5-327">Fornece acesso a propriedades e métodos expostos por um objeto.</span><span class="sxs-lookup"><span data-stu-id="c8af5-327">Provides access to properties and methods exposed by an object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8af5-328">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="c8af5-328">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="c8af5-329">Para obter mais informações sobre `IDispatch::Invoke`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="c8af5-329">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="c8af5-330">Não há suporte para acesso com associação tardia usando a interface <c>IDispatch</c> COM.</span><span class="sxs-lookup"><span data-stu-id="c8af5-330">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="signatureHelper.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c8af5-331">Retorna uma cadeia de caracteres que representa os argumentos de assinatura.</span><span class="sxs-lookup"><span data-stu-id="c8af5-331">Returns a string representing the signature arguments.</span></span></summary>
        <returns><span data-ttu-id="c8af5-332">Uma cadeia de caracteres que representa os argumentos desta assinatura.</span><span class="sxs-lookup"><span data-stu-id="c8af5-332">A string representing the arguments of this signature.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>