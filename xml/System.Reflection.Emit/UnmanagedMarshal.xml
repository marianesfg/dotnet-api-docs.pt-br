<Type Name="UnmanagedMarshal" FullName="System.Reflection.Emit.UnmanagedMarshal">
  <TypeSignature Language="C#" Value="public sealed class UnmanagedMarshal" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit UnmanagedMarshal extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Emit.UnmanagedMarshal" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class UnmanagedMarshal" />
  <TypeSignature Language="C++ CLI" Value="public ref class UnmanagedMarshal sealed" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("An alternate API is available: Emit the MarshalAs custom attribute instead.")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="4fc0f-101">Representa a classe que descreve como realizar marshaling de um campo de código gerenciado para código não gerenciado.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-101">Represents the class that describes how to marshal a field from managed to unmanaged code.</span></span> <span data-ttu-id="4fc0f-102">Essa classe não pode ser herdada.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fc0f-103">O exemplo de código mostra a solução alternativa para esse tipo obsoleto.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-103">The code example shows the workaround for this obsolete type.</span></span>  
  
 <span data-ttu-id="4fc0f-104">Marshaling é o processo de compactação e descompactação de parâmetros para que chamadas de procedimento remoto podem ocorrer.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-104">Marshaling is the process of packaging and unpackaging parameters so remote procedure calls can occur.</span></span> <span data-ttu-id="4fc0f-105">Durante o empacotamento, um campo pode passar por uma conversão de formato quando o formato do tipo gerenciado é diferente do formato do tipo não gerenciado correspondente.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-105">During marshaling, a field might undergo a format conversion when the format of the managed type is different from the format of the corresponding unmanaged type.</span></span> <span data-ttu-id="4fc0f-106">Por exemplo, talvez você queira empacotar um `String` tipo como um BSTR não gerenciado.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-106">For example, you might want to marshal a `String` type as an unmanaged BSTR.</span></span> <span data-ttu-id="4fc0f-107">Algumas conversões de formato são tratadas automaticamente pelo tempo de execução.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-107">Some format conversions are handled automatically by the runtime.</span></span> <span data-ttu-id="4fc0f-108">Para substituir o comportamento padrão, você deve usar o `UnmanagedMarshal` classe para definir a conversão de formato.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-108">To override the default behavior, you must use the `UnmanagedMarshal` class to define the format conversion.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4fc0f-109">O exemplo de código a seguir mostra o código de substituição para o obsoleto <xref:System.Reflection.Emit.UnmanagedMarshal> tipo.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-109">The following code example shows replacement code for the obsolete <xref:System.Reflection.Emit.UnmanagedMarshal> type.</span></span> <span data-ttu-id="4fc0f-110">O exemplo emite um assembly de módulo único chamado `EmitMarshalAs.dll`, que contém um tipo chamado `Sample`.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-110">The example emits a single-module assembly named `EmitMarshalAs.dll`, containing a type named `Sample`.</span></span> <span data-ttu-id="4fc0f-111">O tipo tem um método chamado `Test`, com um parâmetro de tipo <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-111">The type has a method named `Test`, with one parameter of type <xref:System.String>.</span></span> <span data-ttu-id="4fc0f-112">O exemplo de código aplica-se a <xref:System.Runtime.InteropServices.MarshalAsAttribute> com <xref:System.Runtime.InteropServices.UnmanagedType.BStr?displayProperty=nameWithType> para o parâmetro.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-112">The code example applies the <xref:System.Runtime.InteropServices.MarshalAsAttribute> with <xref:System.Runtime.InteropServices.UnmanagedType.BStr?displayProperty=nameWithType> to the parameter.</span></span>  
  
 <span data-ttu-id="4fc0f-113">Você pode usar o [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) para examinar o assembly emitido e observe que o parâmetro está marcado como `marshal(bstr)`.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-113">You can use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the emitted assembly and observe that the parameter is marked `marshal(bstr)`.</span></span>  
  
 [!code-cpp[UnmanagedMarshalObsolete#1](~/samples/snippets/cpp/VS_Snippets_CLR/UnmanagedMarshalObsolete/cpp/source.cpp#1)]
 [!code-csharp[UnmanagedMarshalObsolete#1](~/samples/snippets/csharp/VS_Snippets_CLR/UnmanagedMarshalObsolete/cs/source.cs#1)]
 [!code-vb[UnmanagedMarshalObsolete#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/UnmanagedMarshalObsolete/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Type" />
    <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
    <altmember cref="T:System.Guid" />
  </Docs>
  <Members>
    <Member MemberName="BaseType">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.UnmanagedType BaseType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.InteropServices.UnmanagedType BaseType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.UnmanagedMarshal.BaseType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseType As UnmanagedType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::InteropServices::UnmanagedType BaseType { System::Runtime::InteropServices::UnmanagedType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.UnmanagedType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fc0f-114">Obtém um tipo base não gerenciado.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-114">Gets an unmanaged base type.</span></span> <span data-ttu-id="4fc0f-115">Esta propriedade é somente para leitura.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-115">This property is read-only.</span></span></summary>
        <value><span data-ttu-id="4fc0f-116">Um objeto <see langword="UnmanagedType" />.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-116">An <see langword="UnmanagedType" /> object.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4fc0f-117">O tipo não gerenciado não é um <see langword="LPArray" /> ou <see langword="SafeArray" />.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-117">The unmanaged type is not an <see langword="LPArray" /> or a <see langword="SafeArray" />.</span></span></exception>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="DefineByValArray">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.UnmanagedMarshal DefineByValArray (int elemCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.UnmanagedMarshal DefineByValArray(int32 elemCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.UnmanagedMarshal.DefineByValArray(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineByValArray (elemCount As Integer) As UnmanagedMarshal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::UnmanagedMarshal ^ DefineByValArray(int elemCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.UnmanagedMarshal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elemCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="elemCount"><span data-ttu-id="4fc0f-118">O número de elementos na matriz de comprimento fixo.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-118">The number of elements in the fixed-length array.</span></span></param>
        <summary><span data-ttu-id="4fc0f-119">Especifica uma matriz de comprimento fixo (ByValArray) para realizar marshaling para código não gerenciado.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-119">Specifies a fixed-length array (ByValArray) to marshal to unmanaged code.</span></span></summary>
        <returns><span data-ttu-id="4fc0f-120">Um objeto <see cref="T:System.Reflection.Emit.UnmanagedMarshal" />.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-120">An <see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fc0f-121">O `DefineByValArray` método não é um pacote nativo simples.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-121">The `DefineByValArray` method is not a simple native marshal.</span></span>  
  
 <span data-ttu-id="4fc0f-122">Construções de marshaling não gerenciado só podem ser feitas usando esses construtores estáticos.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-122">Only unmanaged marshal constructs can be made using these static constructors.</span></span>  
  
 <span data-ttu-id="4fc0f-123">Marshaling de uma matriz é um processo mais complexo de empacotamento de um parâmetro de número inteiro.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-123">Marshaling an array is a more complex process than marshaling an integer parameter.</span></span> <span data-ttu-id="4fc0f-124">Membros de matriz são copiados em uma ordem específica para que o outro lado pode reconstruir a matriz exatamente.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-124">Array members are copied in a specific order so that the other side can reconstruct the array exactly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4fc0f-125">O argumento não é um tipo nativo simples.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-125">The argument is not a simple native type.</span></span></exception>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="DefineByValTStr">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.UnmanagedMarshal DefineByValTStr (int elemCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.UnmanagedMarshal DefineByValTStr(int32 elemCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.UnmanagedMarshal.DefineByValTStr(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineByValTStr (elemCount As Integer) As UnmanagedMarshal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::UnmanagedMarshal ^ DefineByValTStr(int elemCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.UnmanagedMarshal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elemCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="elemCount"><span data-ttu-id="4fc0f-126">O número de elementos no buffer de matriz fixo.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-126">The number of elements in the fixed array buffer.</span></span></param>
        <summary><span data-ttu-id="4fc0f-127">Especifica uma cadeia de caracteres em um buffer de matriz fixo (ByValTStr) para realizar marshaling para código não gerenciado.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-127">Specifies a string in a fixed array buffer (ByValTStr) to marshal to unmanaged code.</span></span></summary>
        <returns><span data-ttu-id="4fc0f-128">Um objeto <see cref="T:System.Reflection.Emit.UnmanagedMarshal" />.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-128">An <see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fc0f-129">O `DefineByValStr` método não é um pacote nativo simples.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-129">The `DefineByValStr` method is not a simple native marshal.</span></span>  
  
 <span data-ttu-id="4fc0f-130">Construções de marshaling não gerenciado só podem ser feitas usando esses construtores estáticos.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-130">Only unmanaged marshal constructs can be made using these static constructors.</span></span>  
  
 <span data-ttu-id="4fc0f-131">Marshaling de uma matriz é um processo mais complexo de empacotamento de um parâmetro de número inteiro.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-131">Marshaling an array is a more complex process than marshaling an integer parameter.</span></span> <span data-ttu-id="4fc0f-132">Membros de matriz são copiados em uma ordem específica para que o outro lado pode reconstruir a matriz exatamente.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-132">Array members are copied in a specific order so that the other side can reconstruct the array exactly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4fc0f-133">O argumento não é um tipo nativo simples.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-133">The argument is not a simple native type.</span></span></exception>
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Array" />
        <altmember cref="T:System.String" />
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="DefineLPArray">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.UnmanagedMarshal DefineLPArray (System.Runtime.InteropServices.UnmanagedType elemType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.UnmanagedMarshal DefineLPArray(valuetype System.Runtime.InteropServices.UnmanagedType elemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.UnmanagedMarshal.DefineLPArray(System.Runtime.InteropServices.UnmanagedType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineLPArray (elemType As UnmanagedType) As UnmanagedMarshal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::UnmanagedMarshal ^ DefineLPArray(System::Runtime::InteropServices::UnmanagedType elemType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.UnmanagedMarshal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elemType" Type="System.Runtime.InteropServices.UnmanagedType" />
      </Parameters>
      <Docs>
        <param name="elemType"><span data-ttu-id="4fc0f-134">O tipo não gerenciado para o qual realizar marshaling da matriz.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-134">The unmanaged type to which to marshal the array.</span></span></param>
        <summary><span data-ttu-id="4fc0f-135">Especifica um <see langword="LPArray" /> para realizar marshaling para código não gerenciado.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-135">Specifies an <see langword="LPArray" /> to marshal to unmanaged code.</span></span> <span data-ttu-id="4fc0f-136">O comprimento de um <see langword="LPArray" /> é determinado em tempo de execução pelo tamanho da matriz real em que se realizou marshaling.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-136">The length of an <see langword="LPArray" /> is determined at runtime by the size of the actual marshaled array.</span></span></summary>
        <returns><span data-ttu-id="4fc0f-137">Um objeto <see cref="T:System.Reflection.Emit.UnmanagedMarshal" />.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-137">An <see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fc0f-138">O `DefineLPArray` método não é um pacote nativo simples.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-138">The `DefineLPArray` method is not a simple native marshal.</span></span>  
  
 <span data-ttu-id="4fc0f-139">Construções de marshaling não gerenciado só podem ser feitas usando esses construtores estáticos.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-139">Only unmanaged marshal constructs can be made using these static constructors.</span></span>  
  
 <span data-ttu-id="4fc0f-140">Marshaling de uma matriz é um processo mais complexo de empacotamento de um parâmetro de número inteiro.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-140">Marshaling an array is a more complex process than marshaling an integer parameter.</span></span> <span data-ttu-id="4fc0f-141">Membros de matriz são copiados em uma ordem específica para que o outro lado pode reconstruir a matriz exatamente.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-141">Array members are copied in a specific order so that the other side can reconstruct the array exactly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4fc0f-142">O argumento não é um tipo nativo simples.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-142">The argument is not a simple native type.</span></span></exception>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="DefineSafeArray">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.UnmanagedMarshal DefineSafeArray (System.Runtime.InteropServices.UnmanagedType elemType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.UnmanagedMarshal DefineSafeArray(valuetype System.Runtime.InteropServices.UnmanagedType elemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.UnmanagedMarshal.DefineSafeArray(System.Runtime.InteropServices.UnmanagedType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineSafeArray (elemType As UnmanagedType) As UnmanagedMarshal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::UnmanagedMarshal ^ DefineSafeArray(System::Runtime::InteropServices::UnmanagedType elemType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.UnmanagedMarshal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elemType" Type="System.Runtime.InteropServices.UnmanagedType" />
      </Parameters>
      <Docs>
        <param name="elemType"><span data-ttu-id="4fc0f-143">O tipo base ou o <see langword="UnmanagedType" /> de cada elemento da matriz.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-143">The base type or the <see langword="UnmanagedType" /> of each element of the array.</span></span></param>
        <summary><span data-ttu-id="4fc0f-144">Especifica um <see langword="SafeArray" /> para realizar marshaling para código não gerenciado.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-144">Specifies a <see langword="SafeArray" /> to marshal to unmanaged code.</span></span></summary>
        <returns><span data-ttu-id="4fc0f-145">Um objeto <see cref="T:System.Reflection.Emit.UnmanagedMarshal" />.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-145">An <see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fc0f-146">O `DefineSafeArray` método não é um pacote nativo simples.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-146">The `DefineSafeArray` method is not a simple native marshal.</span></span>  
  
 <span data-ttu-id="4fc0f-147">Construções de marshaling não gerenciado só podem ser feitas usando esses construtores estáticos.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-147">Only unmanaged marshal constructs can be made using these static constructors.</span></span>  
  
 <span data-ttu-id="4fc0f-148">Marshaling de uma matriz é um processo mais complexo de empacotamento de um parâmetro de número inteiro.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-148">Marshaling an array is a more complex process than marshaling an integer parameter.</span></span> <span data-ttu-id="4fc0f-149">Membros de matriz são copiados em uma ordem específica para que o outro lado pode reconstruir a matriz exatamente.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-149">Array members are copied in a specific order so that the other side can reconstruct the array exactly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4fc0f-150">O argumento não é um tipo nativo simples.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-150">The argument is not a simple native type.</span></span></exception>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="DefineUnmanagedMarshal">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.UnmanagedMarshal DefineUnmanagedMarshal (System.Runtime.InteropServices.UnmanagedType unmanagedType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.UnmanagedMarshal DefineUnmanagedMarshal(valuetype System.Runtime.InteropServices.UnmanagedType unmanagedType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.UnmanagedMarshal.DefineUnmanagedMarshal(System.Runtime.InteropServices.UnmanagedType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::UnmanagedMarshal ^ DefineUnmanagedMarshal(System::Runtime::InteropServices::UnmanagedType unmanagedType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.UnmanagedMarshal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unmanagedType" Type="System.Runtime.InteropServices.UnmanagedType" />
      </Parameters>
      <Docs>
        <param name="unmanagedType"><span data-ttu-id="4fc0f-151">O tipo não gerenciado para o qual o tipo realizará marshaling.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-151">The unmanaged type to which the type is to be marshaled.</span></span></param>
        <summary><span data-ttu-id="4fc0f-152">Especifica um determinado tipo que realizará marshaling para código não gerenciado.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-152">Specifies a given type that is to be marshaled to unmanaged code.</span></span></summary>
        <returns><span data-ttu-id="4fc0f-153">Um objeto <see cref="T:System.Reflection.Emit.UnmanagedMarshal" />.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-153">An <see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fc0f-154">O <xref:System.Runtime.InteropServices.UnmanagedType> passado para este método deve ser um tipo nativo simple.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-154">The <xref:System.Runtime.InteropServices.UnmanagedType> passed to this method must be a simple native type.</span></span> <span data-ttu-id="4fc0f-155">Nenhum dos valores a seguir podem ser usados: <xref:System.Runtime.InteropServices.UnmanagedType.ByValTStr?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.UnmanagedType.SafeArray?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.UnmanagedType.ByValArray?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.UnmanagedType.LPArray?displayProperty=nameWithType>, ou <xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-155">None of the following values may be used: <xref:System.Runtime.InteropServices.UnmanagedType.ByValTStr?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.UnmanagedType.SafeArray?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.UnmanagedType.ByValArray?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.UnmanagedType.LPArray?displayProperty=nameWithType>, or <xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="4fc0f-156">Construções de marshaling não gerenciado só podem ser feitas usando esse método.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-156">Only unmanaged marshal constructs can be made using this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4fc0f-157">O argumento não é um tipo nativo simples.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-157">The argument is not a simple native type.</span></span></exception>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="ElementCount">
      <MemberSignature Language="C#" Value="public int ElementCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ElementCount" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.UnmanagedMarshal.ElementCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElementCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ElementCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fc0f-158">Obtém um elemento de número.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-158">Gets a number element.</span></span> <span data-ttu-id="4fc0f-159">Esta propriedade é somente para leitura.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-159">This property is read-only.</span></span></summary>
        <value><span data-ttu-id="4fc0f-160">Um inteiro que indica a contagem de elementos.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-160">An integer indicating the element count.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fc0f-161">Há um `ElementCount` somente se houver um `NativeTypeFixedArray`.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-161">There is an `ElementCount` only if there is a `NativeTypeFixedArray`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4fc0f-162">O argumento não é uma contagem de elementos não gerenciados.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-162">The argument is not an unmanaged element count.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetUnmanagedType">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.UnmanagedType GetUnmanagedType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.InteropServices.UnmanagedType GetUnmanagedType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.UnmanagedMarshal.GetUnmanagedType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GetUnmanagedType As UnmanagedType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::InteropServices::UnmanagedType GetUnmanagedType { System::Runtime::InteropServices::UnmanagedType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.UnmanagedType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fc0f-163">Indica um tipo não gerenciado.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-163">Indicates an unmanaged type.</span></span> <span data-ttu-id="4fc0f-164">Esta propriedade é somente para leitura.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-164">This property is read-only.</span></span></summary>
        <value><span data-ttu-id="4fc0f-165">Um objeto <see cref="T:System.Runtime.InteropServices.UnmanagedType" />.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-165">An <see cref="T:System.Runtime.InteropServices.UnmanagedType" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fc0f-166">O `GetUnmanagedType` propriedade é uma função de acessador para o tipo nativo.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-166">The `GetUnmanagedType` property is an accessor function for the native type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="IIDGuid">
      <MemberSignature Language="C#" Value="public Guid IIDGuid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid IIDGuid" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.UnmanagedMarshal.IIDGuid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IIDGuid As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid IIDGuid { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4fc0f-167">Obtém um GUID.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-167">Gets a GUID.</span></span> <span data-ttu-id="4fc0f-168">Esta propriedade é somente para leitura.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-168">This property is read-only.</span></span></summary>
        <value><span data-ttu-id="4fc0f-169">Um objeto <see cref="T:System.Guid" />.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-169">A <see cref="T:System.Guid" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4fc0f-170">Essa propriedade sempre retorna Empty.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-170">This property always returns Guid.Empty.</span></span> <span data-ttu-id="4fc0f-171">Essa propriedade pode ser removida em uma versão futura.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-171">This property might be removed in a future release.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4fc0f-172">O argumento não é um marshaler personalizado.</span><span class="sxs-lookup"><span data-stu-id="4fc0f-172">The argument is not a custom marshaler.</span></span></exception>
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Guid" />
      </Docs>
    </Member>
  </Members>
</Type>