<Type Name="DynamicILInfo" FullName="System.Reflection.Emit.DynamicILInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a18b2d10ad452eac41e6ad1431875ec22d12b2c1" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48644540" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DynamicILInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicILInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Emit.DynamicILInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class DynamicILInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicILInfo" />
  <TypeSignature Language="F#" Value="type DynamicILInfo = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="bdd12-101">Dá suporte a modos alternativos de gerar o MSIL (Microsoft Intermediate Language) e metadados para um método dinâmico, incluindo métodos para criar tokens e para inserir os blobs de assinatura de variável local, tratamento de exceção e código.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bdd12-101">Provides support for alternative ways to generate the Microsoft intermediate language (MSIL) and metadata for a dynamic method, including methods for creating tokens and for inserting the code, exception handling, and local variable signature blobs.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bdd12-102">O <xref:System.Reflection.Emit.DynamicILInfo> classe permite aos desenvolvedores escrever seus próprios geradores MSIL, em vez de usar <xref:System.Reflection.Emit.ILGenerator>.</span><span class="sxs-lookup"><span data-stu-id="bdd12-102">The <xref:System.Reflection.Emit.DynamicILInfo> class allows developers to write their own MSIL generators instead of using <xref:System.Reflection.Emit.ILGenerator>.</span></span>  
  
 <span data-ttu-id="bdd12-103">Para criar instâncias de outros tipos, chamar métodos e assim por diante, você gerar MSIL deve incluir tokens para essas entidades.</span><span class="sxs-lookup"><span data-stu-id="bdd12-103">To create instances of other types, call methods, and so on, the MSIL you generate must include tokens for those entities.</span></span> <span data-ttu-id="bdd12-104">O <xref:System.Reflection.Emit.DynamicILInfo> classe fornece várias sobrecargas do <xref:System.Reflection.Emit.DynamicILInfo.GetTokenFor%2A> método, o qual retornar os tokens válidos no escopo atual <xref:System.Reflection.Emit.DynamicILInfo>.</span><span class="sxs-lookup"><span data-stu-id="bdd12-104">The <xref:System.Reflection.Emit.DynamicILInfo> class provides several overloads of the <xref:System.Reflection.Emit.DynamicILInfo.GetTokenFor%2A> method, which return tokens valid in the scope of the current <xref:System.Reflection.Emit.DynamicILInfo>.</span></span> <span data-ttu-id="bdd12-105">Por exemplo, se você precisa chamar uma sobrecarga da <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> método, você pode obter uma <xref:System.RuntimeMethodHandle> para que a sobrecarga e passá-lo para o <xref:System.Reflection.Emit.DynamicILInfo.GetTokenFor%2A> método para obter um token para incorporar em seu MSIL.</span><span class="sxs-lookup"><span data-stu-id="bdd12-105">For example, if you need to call an overload of the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method, you can obtain a <xref:System.RuntimeMethodHandle> for that overload and pass it to the <xref:System.Reflection.Emit.DynamicILInfo.GetTokenFor%2A> method to obtain a token to embed in your MSIL.</span></span>  
  
 <span data-ttu-id="bdd12-106">Uma vez que você criou <xref:System.Byte> matrizes para sua assinatura de variável local, exceções e corpo de código, você pode usar o <xref:System.Reflection.Emit.DynamicILInfo.SetCode%2A>, <xref:System.Reflection.Emit.DynamicILInfo.SetExceptions%2A>, e <xref:System.Reflection.Emit.DynamicILInfo.SetLocalSignature%2A> métodos inseri-los no <xref:System.Reflection.Emit.DynamicMethod> associado com seu <xref:System.Reflection.Emit.DynamicILInfo> objeto.</span><span class="sxs-lookup"><span data-stu-id="bdd12-106">Once you have created <xref:System.Byte> arrays for your local variable signature, exceptions, and code body, you can use the <xref:System.Reflection.Emit.DynamicILInfo.SetCode%2A>, <xref:System.Reflection.Emit.DynamicILInfo.SetExceptions%2A>, and <xref:System.Reflection.Emit.DynamicILInfo.SetLocalSignature%2A> methods to insert them into the <xref:System.Reflection.Emit.DynamicMethod> associated with your <xref:System.Reflection.Emit.DynamicILInfo> object.</span></span>  
  
 <span data-ttu-id="bdd12-107">Gerar seus próprios metadados e MSIL exige familiaridade com a documentação do Common Language Infrastructure (CLI), especialmente "Partição II: Metadata Definition and Semantics" e "Partição III: CIL Instruction Set".</span><span class="sxs-lookup"><span data-stu-id="bdd12-107">Generating your own metadata and MSIL requires familiarity with the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set".</span></span> <span data-ttu-id="bdd12-108">A documentação está disponível online; confira [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212), no MSDN, e [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552), no site internacional da Ecma.</span><span class="sxs-lookup"><span data-stu-id="bdd12-108">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bdd12-109">Não use <xref:System.Reflection.Emit.DynamicILInfo> para gerar o código que cria um delegado para outro método dinâmico chamando o construtor delegate diretamente.</span><span class="sxs-lookup"><span data-stu-id="bdd12-109">Do not use <xref:System.Reflection.Emit.DynamicILInfo> to generate code that creates a delegate to another dynamic method by calling the delegate constructor directly.</span></span> <span data-ttu-id="bdd12-110">Em vez disso, use o <xref:System.Reflection.Emit.DynamicMethod.CreateDelegate%2A> método para criar o delegado.</span><span class="sxs-lookup"><span data-stu-id="bdd12-110">Instead, use the <xref:System.Reflection.Emit.DynamicMethod.CreateDelegate%2A> method to create the delegate.</span></span> <span data-ttu-id="bdd12-111">Um delegado que é criado com o construtor delegado não tem uma referência para o método dinâmico de destino.</span><span class="sxs-lookup"><span data-stu-id="bdd12-111">A delegate that is created with the delegate constructor does not have a reference to the target dynamic method.</span></span> <span data-ttu-id="bdd12-112">O método dinâmico pode ser recuperado pela coleta de lixo enquanto o delegado ainda está em uso.</span><span class="sxs-lookup"><span data-stu-id="bdd12-112">The dynamic method might be reclaimed by garbage collection while the delegate is still in use.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DynamicMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.DynamicMethod DynamicMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Emit.DynamicMethod DynamicMethod" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.DynamicILInfo.DynamicMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DynamicMethod As DynamicMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Emit::DynamicMethod ^ DynamicMethod { System::Reflection::Emit::DynamicMethod ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DynamicMethod : System.Reflection.Emit.DynamicMethod" Usage="System.Reflection.Emit.DynamicILInfo.DynamicMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.DynamicMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bdd12-113">Obtém o método dinâmico cujo corpo é gerado pela instância atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-113">Gets the dynamic method whose body is generated by the current instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bdd12-114">Um <see cref="T:System.Reflection.Emit.DynamicMethod" /> objeto que representa o método dinâmico para o qual atual <see cref="T:System.Reflection.Emit.DynamicILInfo" /> objeto está gerando o código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-114">A <see cref="T:System.Reflection.Emit.DynamicMethod" /> object representing the dynamic method for which the current <see cref="T:System.Reflection.Emit.DynamicILInfo" /> object is generating code.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bdd12-115">Um <xref:System.Reflection.Emit.DynamicILInfo> objeto está sempre associado um método dinâmico.</span><span class="sxs-lookup"><span data-stu-id="bdd12-115">A <xref:System.Reflection.Emit.DynamicILInfo> object is always associated with a dynamic method.</span></span> <span data-ttu-id="bdd12-116">A finalidade do <xref:System.Reflection.Emit.DynamicILInfo> classe é fornecer a outra maneira de inserir o fluxo MSIL, o tratamento de exceção e a assinatura de variável local em um método dinâmico, para os desenvolvedores que desejam geram MSIL sem usar o <xref:System.Reflection.Emit.ILGenerator> classe.</span><span class="sxs-lookup"><span data-stu-id="bdd12-116">The purpose of the <xref:System.Reflection.Emit.DynamicILInfo> class is to provide another way of inserting the MSIL stream, exception handling, and local variable signature into a dynamic method, for developers who want to generate MSIL without using the <xref:System.Reflection.Emit.ILGenerator> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTokenFor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bdd12-117">Obtém um token válido no escopo do <see cref="T:System.Reflection.Emit.DynamicILInfo" /> atual, representando uma cadeia de caracteres, um campo, um método, um tipo ou uma assinatura no fluxo MSIL do método dinâmico associado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-117">Gets a token, valid in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" />, representing a string, field, method, type, or signature in the MSIL stream for the associated dynamic method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTokenFor">
      <MemberSignature Language="C#" Value="public int GetTokenFor (byte[] signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTokenFor(unsigned int8[] signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.GetTokenFor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTokenFor (signature As Byte()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTokenFor(cli::array &lt;System::Byte&gt; ^ signature);" />
      <MemberSignature Language="F#" Value="member this.GetTokenFor : byte[] -&gt; int" Usage="dynamicILInfo.GetTokenFor signature" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="signature">
          <span data-ttu-id="bdd12-118">Uma matriz que contém a assinatura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-118">An array that contains the signature.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bdd12-119">Obtém um token, válido no escopo do <see cref="T:System.Reflection.Emit.DynamicILInfo" /> atual, representando a assinatura do método dinâmico associado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-119">Gets a token, valid in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" />, representing the signature for the associated dynamic method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bdd12-120">Um token que pode ser inserido em metadados e o fluxo MSIL para o método dinâmico associado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-120">A token that can be embedded in the metadata and the MSIL stream for the associated dynamic method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bdd12-121">Para obter informações sobre blobs de assinatura, consulte a documentação do Common Language Infrastructure (CLI), especialmente "partição II: Metadata Definition and Semantics".</span><span class="sxs-lookup"><span data-stu-id="bdd12-121">For information on signature blobs, see the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</span></span> <span data-ttu-id="bdd12-122">A documentação está disponível online; confira [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212), no MSDN, e [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552), no site internacional da Ecma.</span><span class="sxs-lookup"><span data-stu-id="bdd12-122">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenFor">
      <MemberSignature Language="C#" Value="public int GetTokenFor (System.Reflection.Emit.DynamicMethod method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTokenFor(class System.Reflection.Emit.DynamicMethod method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.GetTokenFor(System.Reflection.Emit.DynamicMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTokenFor (method As DynamicMethod) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTokenFor(System::Reflection::Emit::DynamicMethod ^ method);" />
      <MemberSignature Language="F#" Value="member this.GetTokenFor : System.Reflection.Emit.DynamicMethod -&gt; int" Usage="dynamicILInfo.GetTokenFor method" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.Emit.DynamicMethod" />
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="bdd12-123">O método dinâmico a ser chamado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-123">The dynamic method to call.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bdd12-124">Obtém um token, válido no escopo do <see cref="T:System.Reflection.Emit.DynamicILInfo" /> atual, representando um método dinâmico a ser chamado do método associado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-124">Gets a token, valid in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" />, representing a dynamic method to be called from the associated method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bdd12-125">Um token que pode ser inserido em um fluxo MSIL para o método dinâmico associado, como o destino de uma instrução MSIL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-125">A token that can be embedded in the MSIL stream for the associated dynamic method, as the target of an MSIL instruction.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bdd12-126">O token retornado por essa sobrecarga de método permite que você chame um método dinâmico com o método dinâmico associado atual <xref:System.Reflection.Emit.DynamicILInfo> objeto.</span><span class="sxs-lookup"><span data-stu-id="bdd12-126">The token returned by this method overload allows you to call a dynamic method from the dynamic method associated with the current <xref:System.Reflection.Emit.DynamicILInfo> object.</span></span> <span data-ttu-id="bdd12-127">Para chamar recursivamente o método dinâmico associado, passar o valor da <xref:System.Reflection.Emit.DynamicILInfo.DynamicMethod%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="bdd12-127">To call the associated dynamic method recursively, pass the value of the <xref:System.Reflection.Emit.DynamicILInfo.DynamicMethod%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenFor">
      <MemberSignature Language="C#" Value="public int GetTokenFor (RuntimeFieldHandle field);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTokenFor(valuetype System.RuntimeFieldHandle field) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.GetTokenFor(System.RuntimeFieldHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTokenFor (field As RuntimeFieldHandle) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTokenFor(RuntimeFieldHandle field);" />
      <MemberSignature Language="F#" Value="member this.GetTokenFor : RuntimeFieldHandle -&gt; int" Usage="dynamicILInfo.GetTokenFor field" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="field" Type="System.RuntimeFieldHandle" />
      </Parameters>
      <Docs>
        <param name="field">
          <span data-ttu-id="bdd12-128">O campo a ser acessado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-128">The field to be accessed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bdd12-129">Obtém um token válido no escopo atual <see cref="T:System.Reflection.Emit.DynamicILInfo" />, que representa um campo para ser acessado do método dinâmico associado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-129">Gets a token, valid in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" />, representing a field to be accessed from the associated dynamic method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bdd12-130">Um token que pode ser usado como o operando de uma instrução MSIL que acessa os campos no escopo do objeto <see cref="T:System.Reflection.Emit.DynamicILInfo" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-130">A token that can be used as the operand of an MSIL instruction that accesses fields, in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bdd12-131">Você deve obter um token para qualquer campo que será acessado pelo método dinâmico associado atual <xref:System.Reflection.Emit.DynamicILInfo> objeto.</span><span class="sxs-lookup"><span data-stu-id="bdd12-131">You must obtain a token for any field that will be accessed by the dynamic method associated with the current <xref:System.Reflection.Emit.DynamicILInfo> object.</span></span> <span data-ttu-id="bdd12-132">Use o <xref:System.Type.GetField%2A?displayProperty=nameWithType> método para obter uma <xref:System.Reflection.FieldInfo> para o campo que você deseja acessar, em seguida, usar o <xref:System.Reflection.FieldInfo.FieldHandle%2A> propriedade para obter o <xref:System.RuntimeFieldHandle>.</span><span class="sxs-lookup"><span data-stu-id="bdd12-132">Use the <xref:System.Type.GetField%2A?displayProperty=nameWithType> method to get a <xref:System.Reflection.FieldInfo> for the field you want to access, then use the <xref:System.Reflection.FieldInfo.FieldHandle%2A> property to get the <xref:System.RuntimeFieldHandle>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenFor">
      <MemberSignature Language="C#" Value="public int GetTokenFor (RuntimeMethodHandle method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTokenFor(valuetype System.RuntimeMethodHandle method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.GetTokenFor(System.RuntimeMethodHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTokenFor (method As RuntimeMethodHandle) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTokenFor(RuntimeMethodHandle method);" />
      <MemberSignature Language="F#" Value="member this.GetTokenFor : RuntimeMethodHandle -&gt; int" Usage="dynamicILInfo.GetTokenFor method" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.RuntimeMethodHandle" />
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="bdd12-133">O método a ser acessado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-133">The method to be accessed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bdd12-134">Obtém um token válido no escopo atual <see cref="T:System.Reflection.Emit.DynamicILInfo" />, que representa um método para ser acessado do método dinâmico associado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-134">Gets a token, valid in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" />, representing a method to be accessed from the associated dynamic method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bdd12-135">Um token que pode ser usado como o operando de uma instrução MSIL que acessa os métodos, como <see cref="F:System.Reflection.Emit.OpCodes.Call" /> ou <see cref="F:System.Reflection.Emit.OpCodes.Ldtoken" />, no escopo do objeto <see cref="T:System.Reflection.Emit.DynamicILInfo" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-135">A token that can be used as the operand of an MSIL instruction that accesses methods, such as <see cref="F:System.Reflection.Emit.OpCodes.Call" /> or <see cref="F:System.Reflection.Emit.OpCodes.Ldtoken" />, in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bdd12-136">Você deve obter um token para qualquer método que será acessado pelo método dinâmico associado atual <xref:System.Reflection.Emit.DynamicILInfo> objeto.</span><span class="sxs-lookup"><span data-stu-id="bdd12-136">You must obtain a token for any method that will be accessed by the dynamic method associated with the current <xref:System.Reflection.Emit.DynamicILInfo> object.</span></span> <span data-ttu-id="bdd12-137">Use o <xref:System.Type.GetMethod%2A?displayProperty=nameWithType> método para obter uma <xref:System.Reflection.MethodInfo> para o método que você deseja acessar e, em seguida, usar o <xref:System.Reflection.MethodBase.MethodHandle%2A> propriedade para obter o <xref:System.RuntimeMethodHandle>.</span><span class="sxs-lookup"><span data-stu-id="bdd12-137">Use the <xref:System.Type.GetMethod%2A?displayProperty=nameWithType> method to get a <xref:System.Reflection.MethodInfo> for the method you want to access, and then use the <xref:System.Reflection.MethodBase.MethodHandle%2A> property to get the <xref:System.RuntimeMethodHandle>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bdd12-138">Para um método que pertence a um tipo genérico, use o <xref:System.Reflection.Emit.DynamicILInfo.GetTokenFor%28System.RuntimeMethodHandle%2CSystem.RuntimeTypeHandle%29> método de sobrecarga e especifique um <xref:System.RuntimeTypeHandle> para o tipo genérico.</span><span class="sxs-lookup"><span data-stu-id="bdd12-138">For a method that belongs to a generic type, use the <xref:System.Reflection.Emit.DynamicILInfo.GetTokenFor%28System.RuntimeMethodHandle%2CSystem.RuntimeTypeHandle%29> method overload and specify a <xref:System.RuntimeTypeHandle> for the generic type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenFor">
      <MemberSignature Language="C#" Value="public int GetTokenFor (RuntimeTypeHandle type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTokenFor(valuetype System.RuntimeTypeHandle type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.GetTokenFor(System.RuntimeTypeHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTokenFor (type As RuntimeTypeHandle) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTokenFor(RuntimeTypeHandle type);" />
      <MemberSignature Language="F#" Value="member this.GetTokenFor : RuntimeTypeHandle -&gt; int" Usage="dynamicILInfo.GetTokenFor type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.RuntimeTypeHandle" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="bdd12-139">O tipo a ser usado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-139">The type to be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bdd12-140">Obtém um token válido no escopo do <see cref="T:System.Reflection.Emit.DynamicILInfo" /> atual, representando um tipo a ser usado no método dinâmico associado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-140">Gets a token, valid in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" />, representing a type to be used in the associated dynamic method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bdd12-141">Um token que pode ser usado como o operando de uma instrução MSIL que exige um tipo no escopo do objeto <see cref="T:System.Reflection.Emit.DynamicILInfo" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-141">A token that can be used as the operand of an MSIL instruction that requires a type, in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bdd12-142">O token retornado por essa sobrecarga de método permite que você definir um tipo de variável local e emitir o MSIL para criar uma instância de um tipo no método dinâmico associado atual <xref:System.Reflection.Emit.DynamicILInfo> objeto.</span><span class="sxs-lookup"><span data-stu-id="bdd12-142">The token returned by this method overload allows you to define a local variable type, and emit MSIL to create an instance of a type in the dynamic method associated with the current <xref:System.Reflection.Emit.DynamicILInfo> object.</span></span>  
  
 <span data-ttu-id="bdd12-143">Para obter um <xref:System.RuntimeTypeHandle> que representa um tipo, use o <xref:System.Type.TypeHandle%2A?displayProperty=nameWithType> propriedade.</span><span class="sxs-lookup"><span data-stu-id="bdd12-143">To get a <xref:System.RuntimeTypeHandle> representing a type, use the <xref:System.Type.TypeHandle%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenFor">
      <MemberSignature Language="C#" Value="public int GetTokenFor (string literal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTokenFor(string literal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.GetTokenFor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTokenFor (literal As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTokenFor(System::String ^ literal);" />
      <MemberSignature Language="F#" Value="member this.GetTokenFor : string -&gt; int" Usage="dynamicILInfo.GetTokenFor literal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="literal" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="literal">
          <span data-ttu-id="bdd12-144">A cadeia de caracteres a ser usada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-144">The string to be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bdd12-145">Obtém um token válido no escopo do <see cref="T:System.Reflection.Emit.DynamicILInfo" /> atual, representando um literal de cadeia de caracteres a ser usado no método dinâmico associado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-145">Gets a token, valid in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" />, representing a string literal to be used in the associated dynamic method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bdd12-146">Um token que pode ser usado como o operando de uma instrução MSIL que exige uma cadeia de caracteres no escopo do objeto <see cref="T:System.Reflection.Emit.DynamicILInfo" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-146">A token that can be used as the operand of an MSIL instruction that requires a string, in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenFor">
      <MemberSignature Language="C#" Value="public int GetTokenFor (RuntimeFieldHandle field, RuntimeTypeHandle contextType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTokenFor(valuetype System.RuntimeFieldHandle field, valuetype System.RuntimeTypeHandle contextType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.GetTokenFor(System.RuntimeFieldHandle,System.RuntimeTypeHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTokenFor (field As RuntimeFieldHandle, contextType As RuntimeTypeHandle) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTokenFor(RuntimeFieldHandle field, RuntimeTypeHandle contextType);" />
      <MemberSignature Language="F#" Value="member this.GetTokenFor : RuntimeFieldHandle * RuntimeTypeHandle -&gt; int" Usage="dynamicILInfo.GetTokenFor (field, contextType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="field" Type="System.RuntimeFieldHandle" />
        <Parameter Name="contextType" Type="System.RuntimeTypeHandle" />
      </Parameters>
      <Docs>
        <param name="field">
          <span data-ttu-id="bdd12-147">O campo a ser acessado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-147">The field to be accessed.</span>
          </span>
        </param>
        <param name="contextType">
          <span data-ttu-id="bdd12-148">O tipo genérico ao qual o campo pertence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-148">The generic type the field belongs to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bdd12-149">Obtém um token válido no escopo atual <see cref="T:System.Reflection.Emit.DynamicILInfo" />, que representa um campo para ser acessado do método dinâmico associado, o campo está no tipo genérico especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-149">Gets a token, valid in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" />, representing a field to be accessed from the associated dynamic method; the field is on the specified generic type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bdd12-150">Um token que pode ser usado como o operando de uma instrução MSIL que acessa os campos no escopo do objeto <see cref="T:System.Reflection.Emit.DynamicILInfo" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-150">A token that can be used as the operand of an MSIL instruction that accesses fields in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bdd12-151">Você deve obter um token para qualquer campo que será acessado pelo método dinâmico associado atual <xref:System.Reflection.Emit.DynamicILInfo> objeto.</span><span class="sxs-lookup"><span data-stu-id="bdd12-151">You must obtain a token for any field that will be accessed by the dynamic method associated with the current <xref:System.Reflection.Emit.DynamicILInfo> object.</span></span> <span data-ttu-id="bdd12-152">Use o <xref:System.Type.GetField%2A?displayProperty=nameWithType> método para obter uma <xref:System.Reflection.FieldInfo> para o campo que você deseja acessar e, em seguida, usar o <xref:System.Reflection.FieldInfo.FieldHandle%2A> propriedade para obter o <xref:System.RuntimeFieldHandle>.</span><span class="sxs-lookup"><span data-stu-id="bdd12-152">Use the <xref:System.Type.GetField%2A?displayProperty=nameWithType> method to get a <xref:System.Reflection.FieldInfo> for the field you want to access, and then use the <xref:System.Reflection.FieldInfo.FieldHandle%2A> property to get the <xref:System.RuntimeFieldHandle>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenFor">
      <MemberSignature Language="C#" Value="public int GetTokenFor (RuntimeMethodHandle method, RuntimeTypeHandle contextType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTokenFor(valuetype System.RuntimeMethodHandle method, valuetype System.RuntimeTypeHandle contextType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.GetTokenFor(System.RuntimeMethodHandle,System.RuntimeTypeHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTokenFor (method As RuntimeMethodHandle, contextType As RuntimeTypeHandle) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTokenFor(RuntimeMethodHandle method, RuntimeTypeHandle contextType);" />
      <MemberSignature Language="F#" Value="member this.GetTokenFor : RuntimeMethodHandle * RuntimeTypeHandle -&gt; int" Usage="dynamicILInfo.GetTokenFor (method, contextType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.RuntimeMethodHandle" />
        <Parameter Name="contextType" Type="System.RuntimeTypeHandle" />
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="bdd12-153">O método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-153">The method.</span>
          </span>
        </param>
        <param name="contextType">
          <span data-ttu-id="bdd12-154">O tipo genérico ao qual o método pertence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-154">The generic type the method belongs to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bdd12-155">Obtém um token válido no escopo do <see cref="T:System.Reflection.Emit.DynamicILInfo" /> atual, que representa um método em um tipo genérico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-155">Gets a token, valid in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" />, representing a method on a generic type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bdd12-156">Um token que pode ser usado como o operando de uma instrução MSIL que acessa os métodos, como <see cref="F:System.Reflection.Emit.OpCodes.Call" /> ou <see cref="F:System.Reflection.Emit.OpCodes.Ldtoken" />, no escopo do objeto <see cref="T:System.Reflection.Emit.DynamicILInfo" /> atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-156">A token that can be used as the operand of an MSIL instruction that accesses methods, such as <see cref="F:System.Reflection.Emit.OpCodes.Call" /> or <see cref="F:System.Reflection.Emit.OpCodes.Ldtoken" />, in the scope of the current <see cref="T:System.Reflection.Emit.DynamicILInfo" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bdd12-157">Você deve obter um token para qualquer método que será chamado pelo método dinâmico associado atual <xref:System.Reflection.Emit.DynamicILInfo> objeto.</span><span class="sxs-lookup"><span data-stu-id="bdd12-157">You must obtain a token for any method that will be called by the dynamic method associated with the current <xref:System.Reflection.Emit.DynamicILInfo> object.</span></span> <span data-ttu-id="bdd12-158">Use o <xref:System.Type.GetMethod%2A?displayProperty=nameWithType> método para obter uma <xref:System.Reflection.MethodInfo> para o método que você deseja chamar e, em seguida, usar o <xref:System.Reflection.MethodBase.MethodHandle%2A> propriedade para obter o <xref:System.RuntimeMethodHandle>.</span><span class="sxs-lookup"><span data-stu-id="bdd12-158">Use the <xref:System.Type.GetMethod%2A?displayProperty=nameWithType> method to get a <xref:System.Reflection.MethodInfo> for the method you want to call, and then use the <xref:System.Reflection.MethodBase.MethodHandle%2A> property to get the <xref:System.RuntimeMethodHandle>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetCode">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bdd12-159">Define o corpo de código do método dinâmico associado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-159">Sets the code body of the associated dynamic method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetCode">
      <MemberSignature Language="C#" Value="public void SetCode (byte[] code, int maxStackSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCode(unsigned int8[] code, int32 maxStackSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.SetCode(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCode (code As Byte(), maxStackSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCode(cli::array &lt;System::Byte&gt; ^ code, int maxStackSize);" />
      <MemberSignature Language="F#" Value="member this.SetCode : byte[] * int -&gt; unit" Usage="dynamicILInfo.SetCode (code, maxStackSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="code" Type="System.Byte[]" />
        <Parameter Name="maxStackSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="code">
          <span data-ttu-id="bdd12-160">Uma matriz que contém o fluxo MSIL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-160">An array that contains the MSIL stream.</span>
          </span>
        </param>
        <param name="maxStackSize">
          <span data-ttu-id="bdd12-161">O número máximo de itens na pilha de operando quando o método está sendo executado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-161">The maximum number of items on the operand stack when the method is executing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bdd12-162">Define o corpo de código do método dinâmico associado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-162">Sets the code body of the associated dynamic method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bdd12-163">Nenhuma verificação de validade é executada no fluxo MSIL.</span><span class="sxs-lookup"><span data-stu-id="bdd12-163">No validity checks are performed on the MSIL stream.</span></span>  
  
 <span data-ttu-id="bdd12-164">Chamar esse método uma segunda vez substitui o primeiro fluxo MSIL com a segunda.</span><span class="sxs-lookup"><span data-stu-id="bdd12-164">Calling this method a second time replaces the first MSIL stream with the second.</span></span>  
  
 <span data-ttu-id="bdd12-165">Gerar seus próprios metadados e MSIL exige familiaridade com a documentação do Common Language Infrastructure (CLI), especialmente "Partição II: Metadata Definition and Semantics" e "Partição III: CIL Instruction Set".</span><span class="sxs-lookup"><span data-stu-id="bdd12-165">Generating your own metadata and MSIL requires familiarity with the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set".</span></span> <span data-ttu-id="bdd12-166">A documentação está disponível online; confira [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212), no MSDN, e [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552), no site internacional da Ecma.</span><span class="sxs-lookup"><span data-stu-id="bdd12-166">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCode">
      <MemberSignature Language="C#" Value="public void SetCode (byte* code, int codeSize, int maxStackSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCode(unsigned int8* code, int32 codeSize, int32 maxStackSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.SetCode(System.Byte*,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCode(System::Byte* code, int codeSize, int maxStackSize);" />
      <MemberSignature Language="F#" Value="member this.SetCode : nativeptr&lt;byte&gt; * int * int -&gt; unit" Usage="dynamicILInfo.SetCode (code, codeSize, maxStackSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="code" Type="System.Byte*" />
        <Parameter Name="codeSize" Type="System.Int32" />
        <Parameter Name="maxStackSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="code">
          <span data-ttu-id="bdd12-167">Um ponteiro para uma matriz de bytes que contém o fluxo MSIL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-167">A pointer to a byte array containing the MSIL stream.</span>
          </span>
        </param>
        <param name="codeSize">
          <span data-ttu-id="bdd12-168">O número de bytes no fluxo MSIL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-168">The number of bytes in the MSIL stream.</span>
          </span>
        </param>
        <param name="maxStackSize">
          <span data-ttu-id="bdd12-169">O número máximo de itens na pilha de operando quando o método está sendo executado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-169">The maximum number of items on the operand stack when the method is executing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bdd12-170">Define o corpo de código do método dinâmico associado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-170">Sets the code body of the associated dynamic method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bdd12-171">Nenhuma verificação de validade é executada no fluxo MSIL.</span><span class="sxs-lookup"><span data-stu-id="bdd12-171">No validity checks are performed on the MSIL stream.</span></span>  
  
 <span data-ttu-id="bdd12-172">Chamar esse método uma segunda vez substitui o primeiro fluxo MSIL com a segunda.</span><span class="sxs-lookup"><span data-stu-id="bdd12-172">Calling this method a second time replaces the first MSIL stream with the second.</span></span>  
  
 <span data-ttu-id="bdd12-173">Gerar seus próprios metadados e MSIL exige familiaridade com a documentação do Common Language Infrastructure (CLI), especialmente "partição II: Metadata Definition and Semantics" e "partição III: conjunto de instruções de CIL."</span><span class="sxs-lookup"><span data-stu-id="bdd12-173">Generating your own metadata and MSIL requires familiarity with the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set."</span></span> <span data-ttu-id="bdd12-174">A documentação está disponível online; confira [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212), no MSDN, e [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552), no site internacional da Ecma.</span><span class="sxs-lookup"><span data-stu-id="bdd12-174">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Reflection.Emit.DynamicILInfo.SetCode(System.Byte[],System.Int32)" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bdd12-175">
            <paramref name="code" /> é <see langword="null" /> e <paramref name="codeSize" /> é maior que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-175">
              <paramref name="code" /> is <see langword="null" /> and <paramref name="codeSize" /> is greater than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bdd12-176">
            <paramref name="codeSize" /> é menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-176">
              <paramref name="codeSize" /> is less than 0.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="bdd12-177">Requer confiança total para o chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-177">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="bdd12-178">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-178">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetExceptions">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bdd12-179">Define os metadados de exceção para o método dinâmico associado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-179">Sets the exception metadata for the associated dynamic method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetExceptions">
      <MemberSignature Language="C#" Value="public void SetExceptions (byte[] exceptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetExceptions(unsigned int8[] exceptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.SetExceptions(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetExceptions (exceptions As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetExceptions(cli::array &lt;System::Byte&gt; ^ exceptions);" />
      <MemberSignature Language="F#" Value="member this.SetExceptions : byte[] -&gt; unit" Usage="dynamicILInfo.SetExceptions exceptions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exceptions" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="exceptions">
          <span data-ttu-id="bdd12-180">Uma matriz que contém os metadados de exceção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-180">An array that contains the exception metadata.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bdd12-181">Define os metadados de exceção para o método dinâmico associado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-181">Sets the exception metadata for the associated dynamic method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bdd12-182">Os metadados de exceção para um método definem o local e o tamanho de todos os `try`, `catch`, `finally`, filtro e blocos fault.</span><span class="sxs-lookup"><span data-stu-id="bdd12-182">The exception metadata for a method defines the location and size of all `try`, `catch`, `finally`, filter, and fault blocks.</span></span> <span data-ttu-id="bdd12-183">Para obter informações sobre o layout desses metadados, consulte a documentação do Common Language Infrastructure (CLI), especialmente "partição II: Metadata Definition and Semantics".</span><span class="sxs-lookup"><span data-stu-id="bdd12-183">For information on the layout of this metadata, see the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</span></span> <span data-ttu-id="bdd12-184">A documentação está disponível online; confira [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212), no MSDN, e [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552), no site internacional da Ecma.</span><span class="sxs-lookup"><span data-stu-id="bdd12-184">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetExceptions">
      <MemberSignature Language="C#" Value="public void SetExceptions (byte* exceptions, int exceptionsSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetExceptions(unsigned int8* exceptions, int32 exceptionsSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.SetExceptions(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetExceptions(System::Byte* exceptions, int exceptionsSize);" />
      <MemberSignature Language="F#" Value="member this.SetExceptions : nativeptr&lt;byte&gt; * int -&gt; unit" Usage="dynamicILInfo.SetExceptions (exceptions, exceptionsSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exceptions" Type="System.Byte*" />
        <Parameter Name="exceptionsSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="exceptions">
          <span data-ttu-id="bdd12-185">Um ponteiro para uma matriz de bytes que contém os metadados de exceção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-185">A pointer to a byte array containing the exception metadata.</span>
          </span>
        </param>
        <param name="exceptionsSize">
          <span data-ttu-id="bdd12-186">O número de bytes de metadados de exceção.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-186">The number of bytes of exception metadata.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bdd12-187">Define os metadados de exceção para o método dinâmico associado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-187">Sets the exception metadata for the associated dynamic method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bdd12-188">Os metadados de exceção para um método definem o local e o tamanho de todos os `try`, `catch`, `finally`, filtro e blocos fault.</span><span class="sxs-lookup"><span data-stu-id="bdd12-188">The exception metadata for a method defines the location and size of all `try`, `catch`, `finally`, filter, and fault blocks.</span></span> <span data-ttu-id="bdd12-189">Para obter informações sobre o layout desses metadados, consulte a documentação de Common Language Infrastructure (CLI), especialmente "Partição II: Metadata Definition and Semantics" e "Partição III: CIL Instruction Set".</span><span class="sxs-lookup"><span data-stu-id="bdd12-189">For information on the layout of this metadata, see the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set".</span></span> <span data-ttu-id="bdd12-190">A documentação está disponível online; confira [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212), no MSDN, e [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552), no site internacional da Ecma.</span><span class="sxs-lookup"><span data-stu-id="bdd12-190">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Reflection.Emit.DynamicILInfo.SetExceptions(System.Byte[])" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bdd12-191">
            <paramref name="exceptions" /> é <see langword="null" /> e <paramref name="exceptionSize" /> é maior que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-191">
              <paramref name="exceptions" /> is <see langword="null" /> and <paramref name="exceptionSize" /> is greater than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bdd12-192">
            <paramref name="exceptionSize" /> é menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-192">
              <paramref name="exceptionSize" /> is less than 0.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="bdd12-193">Requer confiança total para o chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-193">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="bdd12-194">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-194">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetLocalSignature">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bdd12-195">Define a assinatura de variável local que descreve o layout de variáveis locais para o método dinâmico associado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-195">Sets the local variable signature that describes the layout of local variables for the associated dynamic method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetLocalSignature">
      <MemberSignature Language="C#" Value="public void SetLocalSignature (byte[] localSignature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetLocalSignature(unsigned int8[] localSignature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.SetLocalSignature(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLocalSignature (localSignature As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetLocalSignature(cli::array &lt;System::Byte&gt; ^ localSignature);" />
      <MemberSignature Language="F#" Value="member this.SetLocalSignature : byte[] -&gt; unit" Usage="dynamicILInfo.SetLocalSignature localSignature" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localSignature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="localSignature">
          <span data-ttu-id="bdd12-196">Uma matriz que contém o layout de variáveis locais para o <see cref="T:System.Reflection.Emit.DynamicMethod" /> associado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-196">An array that contains the layout of local variables for the associated <see cref="T:System.Reflection.Emit.DynamicMethod" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bdd12-197">Define a assinatura de variável local que descreve o layout de variáveis locais para o método dinâmico associado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-197">Sets the local variable signature that describes the layout of local variables for the associated dynamic method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bdd12-198">A assinatura da variável local descreve o layout de variáveis de local de um método.</span><span class="sxs-lookup"><span data-stu-id="bdd12-198">The local variable signature describes the layout of a method's local variables.</span></span> <span data-ttu-id="bdd12-199">Para simplificar a construção de assinatura de variável local, use o `static` (`Shared` no Visual Basic) <xref:System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper%2A?displayProperty=nameWithType> método para obter um <xref:System.Reflection.Emit.SignatureHelper> para a assinatura local.</span><span class="sxs-lookup"><span data-stu-id="bdd12-199">To simplify construction of the local variable signature, use the `static` (`Shared` in Visual Basic) <xref:System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper%2A?displayProperty=nameWithType> method to get a <xref:System.Reflection.Emit.SignatureHelper> for the local signature.</span></span>  
  
 <span data-ttu-id="bdd12-200">Para obter informações sobre assinaturas de variável locais, consulte a documentação do Common Language Infrastructure (CLI), especialmente "partição II: Metadata Definition and Semantics".</span><span class="sxs-lookup"><span data-stu-id="bdd12-200">For information on local variable signatures, see the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</span></span> <span data-ttu-id="bdd12-201">A documentação está disponível online; confira [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212), no MSDN, e [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552), no site internacional da Ecma.</span><span class="sxs-lookup"><span data-stu-id="bdd12-201">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLocalSignature">
      <MemberSignature Language="C#" Value="public void SetLocalSignature (byte* localSignature, int signatureSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetLocalSignature(unsigned int8* localSignature, int32 signatureSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.DynamicILInfo.SetLocalSignature(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetLocalSignature(System::Byte* localSignature, int signatureSize);" />
      <MemberSignature Language="F#" Value="member this.SetLocalSignature : nativeptr&lt;byte&gt; * int -&gt; unit" Usage="dynamicILInfo.SetLocalSignature (localSignature, signatureSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localSignature" Type="System.Byte*" />
        <Parameter Name="signatureSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="localSignature">
          <span data-ttu-id="bdd12-202">Uma matriz que contém o layout de variáveis locais para o <see cref="T:System.Reflection.Emit.DynamicMethod" /> associado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-202">An array that contains the layout of local variables for the associated <see cref="T:System.Reflection.Emit.DynamicMethod" />.</span>
          </span>
        </param>
        <param name="signatureSize">
          <span data-ttu-id="bdd12-203">O número de bytes na assinatura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-203">The number of bytes in the signature.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bdd12-204">Define a assinatura de variável local que descreve o layout de variáveis locais para o método dinâmico associado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-204">Sets the local variable signature that describes the layout of local variables for the associated dynamic method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bdd12-205">A assinatura da variável local descreve o layout de variáveis de local de um método.</span><span class="sxs-lookup"><span data-stu-id="bdd12-205">The local variable signature describes the layout of a method's local variables.</span></span> <span data-ttu-id="bdd12-206">Para simplificar a construção de assinatura de variável local, use o `static` (`Shared` no Visual Basic) <xref:System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper%2A?displayProperty=nameWithType> método para obter um <xref:System.Reflection.Emit.SignatureHelper> para a assinatura local.</span><span class="sxs-lookup"><span data-stu-id="bdd12-206">To simplify construction of the local variable signature, use the `static` (`Shared` in Visual Basic) <xref:System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper%2A?displayProperty=nameWithType> method to get a <xref:System.Reflection.Emit.SignatureHelper> for the local signature.</span></span>  
  
 <span data-ttu-id="bdd12-207">Para obter informações sobre assinaturas de variável locais, consulte a documentação do Common Language Infrastructure (CLI), especialmente "partição II: Metadata Definition and Semantics".</span><span class="sxs-lookup"><span data-stu-id="bdd12-207">For information on local variable signatures, see the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</span></span> <span data-ttu-id="bdd12-208">A documentação está disponível online; confira [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212), no MSDN, e [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552), no site internacional da Ecma.</span><span class="sxs-lookup"><span data-stu-id="bdd12-208">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Reflection.Emit.DynamicILInfo.SetLocalSignature(System.Byte[])" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bdd12-209">
            <paramref name="localSignature" /> é <see langword="null" /> e <paramref name="signatureSize" /> é maior que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-209">
              <paramref name="localSignature" /> is <see langword="null" /> and <paramref name="signatureSize" /> is greater than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bdd12-210">
            <paramref name="signatureSize" /> é menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-210">
              <paramref name="signatureSize" /> is less than 0.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="bdd12-211">Requer confiança total para o chamador imediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-211">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="bdd12-212">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bdd12-212">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
  </Members>
</Type>