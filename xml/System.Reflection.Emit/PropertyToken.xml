<Type Name="PropertyToken" FullName="System.Reflection.Emit.PropertyToken">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d0672008adfc1ca262e5f3431e2b811bde7b4e83" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39911385" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct PropertyToken" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit PropertyToken extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Emit.PropertyToken" />
  <TypeSignature Language="VB.NET" Value="Public Structure PropertyToken" />
  <TypeSignature Language="C++ CLI" Value="public value class PropertyToken" />
  <TypeSignature Language="F#" Value="type PropertyToken = struct" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="30b0e-101">O struct <see langword="PropertyToken" /> é uma representação opaca do <see langword="Token" /> retornado pelos metadados para representar uma propriedade.</span>
      <span class="sxs-lookup">
        <span data-stu-id="30b0e-101">The <see langword="PropertyToken" /> struct is an opaque representation of the <see langword="Token" /> returned by the metadata to represent a property.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static readonly System.Reflection.Emit.PropertyToken Empty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Reflection.Emit.PropertyToken Empty" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.Emit.PropertyToken.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Empty As PropertyToken " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Reflection::Emit::PropertyToken Empty;" />
      <MemberSignature Language="F#" Value=" staticval mutable Empty : System.Reflection.Emit.PropertyToken" Usage="System.Reflection.Emit.PropertyToken.Empty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.PropertyToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="30b0e-102">O padrão <see langword="PropertyToken" /> com o valor <see cref="P:System.Reflection.Emit.PropertyToken.Token" /> de 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30b0e-102">The default <see langword="PropertyToken" /> with <see cref="P:System.Reflection.Emit.PropertyToken.Token" /> value 0.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="30b0e-103">Indica se a instância atual é igual ao objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30b0e-103">Indicates whether the current instance is equal to a specified object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyToken.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="propertyToken.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="30b0e-104">O objeto para este objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30b0e-104">The object to this object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30b0e-105">Verifica se o objeto fornecido é uma instância de <see langword="PropertyToken" /> e é igual a esta instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30b0e-105">Checks if the given object is an instance of <see langword="PropertyToken" /> and is equal to this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30b0e-106">
            <see langword="true" /> se <paramref name="obj" /> for uma instância de <see langword="PropertyToken" /> e igual à instância atual; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30b0e-106">
              <see langword="true" /> if <paramref name="obj" /> is an instance of <see langword="PropertyToken" /> and equals the current instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Reflection.Emit.PropertyToken obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.Reflection.Emit.PropertyToken obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyToken.Equals(System.Reflection.Emit.PropertyToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As PropertyToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Reflection::Emit::PropertyToken obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Reflection.Emit.PropertyToken -&gt; bool" Usage="propertyToken.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Reflection.Emit.PropertyToken" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="30b0e-107">O <see cref="T:System.Reflection.Emit.PropertyToken" /> a ser comparado com a instância atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30b0e-107">The <see cref="T:System.Reflection.Emit.PropertyToken" /> to compare to the current instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30b0e-108">Indica se a instância atual é igual ao <see cref="T:System.Reflection.Emit.PropertyToken" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30b0e-108">Indicates whether the current instance is equal to the specified <see cref="T:System.Reflection.Emit.PropertyToken" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30b0e-109">
            <see langword="true" /> se o valor de <paramref name="obj" /> for igual ao valor da instância atual; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30b0e-109">
              <see langword="true" /> if the value of <paramref name="obj" /> is equal to the value of the current instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyToken.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="propertyToken.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="30b0e-110">Gera o código hash para essa propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30b0e-110">Generates the hash code for this property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30b0e-111">Retorna o código hash para essa propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30b0e-111">Returns the hash code for this property.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Reflection.Emit.PropertyToken a, System.Reflection.Emit.PropertyToken b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Reflection.Emit.PropertyToken a, valuetype System.Reflection.Emit.PropertyToken b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyToken.op_Equality(System.Reflection.Emit.PropertyToken,System.Reflection.Emit.PropertyToken)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (a As PropertyToken, b As PropertyToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Reflection::Emit::PropertyToken a, System::Reflection::Emit::PropertyToken b);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Reflection.Emit.PropertyToken * System.Reflection.Emit.PropertyToken -&gt; bool" Usage="a = b" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Reflection.Emit.PropertyToken" />
        <Parameter Name="b" Type="System.Reflection.Emit.PropertyToken" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="30b0e-112">O <see cref="T:System.Reflection.Emit.PropertyToken" /> a ser comparado com <c>b</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30b0e-112">The <see cref="T:System.Reflection.Emit.PropertyToken" /> to compare to <c>b</c>.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="30b0e-113">O <see cref="T:System.Reflection.Emit.PropertyToken" /> a ser comparado com <c>a</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30b0e-113">The <see cref="T:System.Reflection.Emit.PropertyToken" /> to compare to <c>a</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30b0e-114">Indica se duas estruturas <see cref="T:System.Reflection.Emit.PropertyToken" /> são iguais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30b0e-114">Indicates whether two <see cref="T:System.Reflection.Emit.PropertyToken" /> structures are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30b0e-115">
            <see langword="true" /> se <paramref name="a" /> for igual a <paramref name="b" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30b0e-115">
              <see langword="true" /> if <paramref name="a" /> is equal to <paramref name="b" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="30b0e-116">O método equivalente para esse operador é <xref:System.Reflection.Emit.PropertyToken.Equals%28System.Reflection.Emit.PropertyToken%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="30b0e-116">The equivalent method for this operator is <xref:System.Reflection.Emit.PropertyToken.Equals%28System.Reflection.Emit.PropertyToken%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Reflection.Emit.PropertyToken a, System.Reflection.Emit.PropertyToken b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Reflection.Emit.PropertyToken a, valuetype System.Reflection.Emit.PropertyToken b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyToken.op_Inequality(System.Reflection.Emit.PropertyToken,System.Reflection.Emit.PropertyToken)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (a As PropertyToken, b As PropertyToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Reflection::Emit::PropertyToken a, System::Reflection::Emit::PropertyToken b);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Reflection.Emit.PropertyToken * System.Reflection.Emit.PropertyToken -&gt; bool" Usage="System.Reflection.Emit.PropertyToken.op_Inequality (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Reflection.Emit.PropertyToken" />
        <Parameter Name="b" Type="System.Reflection.Emit.PropertyToken" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="30b0e-117">O <see cref="T:System.Reflection.Emit.PropertyToken" /> a ser comparado com <c>b</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30b0e-117">The <see cref="T:System.Reflection.Emit.PropertyToken" /> to compare to <c>b</c>.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="30b0e-118">O <see cref="T:System.Reflection.Emit.PropertyToken" /> a ser comparado com <c>a</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30b0e-118">The <see cref="T:System.Reflection.Emit.PropertyToken" /> to compare to <c>a</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30b0e-119">Indica se duas estruturas <see cref="T:System.Reflection.Emit.PropertyToken" /> não são iguais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30b0e-119">Indicates whether two <see cref="T:System.Reflection.Emit.PropertyToken" /> structures are not equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30b0e-120">
            <see langword="true" /> se <paramref name="a" /> não for igual a <paramref name="b" />; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30b0e-120">
              <see langword="true" /> if <paramref name="a" /> is not equal to <paramref name="b" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="30b0e-121">O método equivalente para esse operador é <xref:System.Reflection.Emit.PropertyToken.Equals%28System.Reflection.Emit.PropertyToken%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="30b0e-121">The equivalent method for this operator is <xref:System.Reflection.Emit.PropertyToken.Equals%28System.Reflection.Emit.PropertyToken%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Token">
      <MemberSignature Language="C#" Value="public int Token { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Token" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.PropertyToken.Token" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Token As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Token { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Token : int" Usage="System.Reflection.Emit.PropertyToken.Token" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="30b0e-122">Recupera o token de metadados para essa propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30b0e-122">Retrieves the metadata token for this property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="30b0e-123">Somente leitura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30b0e-123">Read-only.</span>
          </span>
          <span data-ttu-id="30b0e-124">Recupera o token de metadados para essa instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="30b0e-124">Retrieves the metadata token for this instance.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>