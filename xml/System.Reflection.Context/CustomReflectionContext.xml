<Type Name="CustomReflectionContext" FullName="System.Reflection.Context.CustomReflectionContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="da30da679c2a77c26760debcd9671baba03a69f8" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36469962" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class CustomReflectionContext : System.Reflection.ReflectionContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CustomReflectionContext extends System.Reflection.ReflectionContext" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Context.CustomReflectionContext" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CustomReflectionContext&#xA;Inherits ReflectionContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class CustomReflectionContext abstract : System::Reflection::ReflectionContext" />
  <TypeSignature Language="F#" Value="type CustomReflectionContext = class&#xA;    inherit ReflectionContext" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Context</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Reflection.ReflectionContext</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="74360-101">Representa um contexto de reflexão personalizável.</span>
      <span class="sxs-lookup">
        <span data-stu-id="74360-101">Represents a customizable reflection context.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74360-102"><xref:System.Reflection.Context.CustomReflectionContext> Fornece uma maneira para adicionar ou remover atributos personalizados de objetos de reflexão ou adicionar propriedades fictícios para esses objetos, sem implementar novamente o modelo de reflexão concluída.</span><span class="sxs-lookup"><span data-stu-id="74360-102"><xref:System.Reflection.Context.CustomReflectionContext> provides a way for you to add or remove custom attributes from reflection objects, or add dummy properties to those objects, without re-implementing the complete reflection model.</span></span> <span data-ttu-id="74360-103">O padrão <xref:System.Reflection.Context.CustomReflectionContext> simplesmente encapsula reflexão objetos sem fazer alterações, mas subclasses e substituindo os métodos relevantes, você pode adicionar, remover ou alterar os atributos que se aplicam a qualquer parâmetro refletido ou membro ou adicionar novas propriedades para um tipo refletido.</span><span class="sxs-lookup"><span data-stu-id="74360-103">The default <xref:System.Reflection.Context.CustomReflectionContext> simply wraps reflection objects without making any changes, but by subclassing and overriding the relevant methods, you can add, remove, or change the attributes that apply to any reflected parameter or member, or add new properties to a reflected type.</span></span>  
  
 <span data-ttu-id="74360-104">Por exemplo, suponha que seu código segue a convenção de aplicação de um atributo específico aos métodos de fábrica, mas agora você precisa para trabalhar com o código de terceiros que não possui atributos.</span><span class="sxs-lookup"><span data-stu-id="74360-104">For example, suppose that your code follows the convention of applying a particular attribute to factory methods, but you are now required to work with third-party code that lacks attributes.</span></span> <span data-ttu-id="74360-105">Você pode usar <xref:System.Reflection.Context.CustomReflectionContext> para especificar uma regra para identificar os objetos que devem ter atributos e para fornecer os objetos com os atributos quando eles são exibidos no seu código.</span><span class="sxs-lookup"><span data-stu-id="74360-105">You can use <xref:System.Reflection.Context.CustomReflectionContext> to specify a rule for identifying the objects that should have attributes and to supply the objects with those attributes when they are viewed from your code.</span></span>  
  
 <span data-ttu-id="74360-106">Para usar <xref:System.Reflection.Context.CustomReflectionContext> com eficiência, o código que usa os objetos refletidos deve oferecer suporte a noção de especificar um contexto de reflexão, em vez de supondo que todas sejam refletidos objetos são associados com o contexto de reflexão em tempo de execução.</span><span class="sxs-lookup"><span data-stu-id="74360-106">To use <xref:System.Reflection.Context.CustomReflectionContext> effectively, the code that uses the reflected objects must support the notion of specifying a reflection context, instead of assuming that all reflected objects are associated with the runtime reflection context.</span></span> <span data-ttu-id="74360-107">Muitos métodos de reflexão no .NET Framework fornecem um <xref:System.Reflection.ReflectionContext> parâmetro para essa finalidade.</span><span class="sxs-lookup"><span data-stu-id="74360-107">Many reflection methods in the .NET Framework provide a <xref:System.Reflection.ReflectionContext> parameter for this purpose.</span></span>  
  
 <span data-ttu-id="74360-108">Para modificar os atributos que são aplicados a um parâmetro refletido ou membro, substituir o <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.ParameterInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29> ou <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.MemberInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29> método.</span><span class="sxs-lookup"><span data-stu-id="74360-108">To modify the attributes that are applied to a reflected parameter or member, override the <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.ParameterInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29> or <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.MemberInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29> method.</span></span> <span data-ttu-id="74360-109">Esses métodos de obter o objeto refletido e a lista de atributos no seu contexto de reflexão atual e retornam a lista de atributos, que ele deve ter sob o contexto de reflexão personalizados.</span><span class="sxs-lookup"><span data-stu-id="74360-109">These methods take the reflected object and the list of attributes under its current reflection context, and return the list of attributes it should have under the custom reflection context.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="74360-110"><xref:System.Reflection.Context.CustomReflectionContext> métodos não devem acessar a lista de atributos de um método ou o objeto refletido diretamente, chamando o <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> método em fornecidos <xref:System.Reflection.MemberInfo> ou <xref:System.Reflection.ParameterInfo> de instância, mas em vez disso, use o `declaredAttributes` lista, que é passada como um parâmetro para o <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%2A> sobrecargas do método.</span><span class="sxs-lookup"><span data-stu-id="74360-110"><xref:System.Reflection.Context.CustomReflectionContext> methods should not access the list of attributes of a reflected object or method directly by calling the <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method on the provided <xref:System.Reflection.MemberInfo> or <xref:System.Reflection.ParameterInfo> instance, but should instead use the `declaredAttributes` list, which is passed as a parameter to the <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%2A> method overloads.</span></span>  
  
 <span data-ttu-id="74360-111">Para adicionar propriedades a um tipo refletido, substitua o <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> método.</span><span class="sxs-lookup"><span data-stu-id="74360-111">To add properties to a reflected type, override the <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> method.</span></span> <span data-ttu-id="74360-112">O método aceita um parâmetro que especifica o tipo refletido e retorna uma lista de propriedades adicionais.</span><span class="sxs-lookup"><span data-stu-id="74360-112">The method accepts a parameter that specifies the reflected type, and returns a list of additional properties.</span></span> <span data-ttu-id="74360-113">Você deve usar o <xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A> método para criar objetos de propriedade a ser retornado.</span><span class="sxs-lookup"><span data-stu-id="74360-113">You should use the <xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A> method to create property objects to return.</span></span> <span data-ttu-id="74360-114">Você pode especificar delegados ao criar a propriedade que servirá como o acessador de propriedade, e você pode omitir um dos acessadores para criar uma propriedade somente leitura ou somente gravação.</span><span class="sxs-lookup"><span data-stu-id="74360-114">You can specify delegates when creating the property that will serve as the property accessor, and you can omit one of the accessors to create a read-only or write-only property.</span></span> <span data-ttu-id="74360-115">Observe que essas propriedades fictícios não tem nenhum metadados ou backup de idioma intermediário comum (CIL).</span><span class="sxs-lookup"><span data-stu-id="74360-115">Note that such dummy properties have no metadata or Common Intermediate Language (CIL) backing.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="74360-116">Cuidado igualdade entre objetos refletidas quando você trabalha com contextos de reflexão, porque objetos podem representar o mesmo objeto refletido em vários contextos.</span><span class="sxs-lookup"><span data-stu-id="74360-116">Be cautious about equality among reflected objects when you work with reflection contexts, because objects may represent the same reflected object in multiple contexts.</span></span> <span data-ttu-id="74360-117">Você pode usar o <xref:System.Reflection.Context.CustomReflectionContext.MapType%2A> método para obter versão de um contexto de reflexão específico de um objeto refletido.</span><span class="sxs-lookup"><span data-stu-id="74360-117">You can use the <xref:System.Reflection.Context.CustomReflectionContext.MapType%2A> method to obtain a particular reflection context's version of a reflected object.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="74360-118">Um <xref:System.Reflection.Context.CustomReflectionContext> objeto altera os atributos retornados por um objeto de reflexão específico, como as obtidas pelo <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> método.</span><span class="sxs-lookup"><span data-stu-id="74360-118">A <xref:System.Reflection.Context.CustomReflectionContext> object alters the attributes returned by a particular reflection object, such as those obtained by the <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method.</span></span> <span data-ttu-id="74360-119">Ele não altera os dados de atributo personalizado retornados pelo <xref:System.Reflection.MemberInfo.GetCustomAttributesData%2A> método e essas duas listas não corresponde ao usar um contexto de reflexão personalizados.</span><span class="sxs-lookup"><span data-stu-id="74360-119">It does not alter the custom attribute data returned by the <xref:System.Reflection.MemberInfo.GetCustomAttributesData%2A> method, and these two lists will not match when you use a custom reflection context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74360-120">O exemplo a seguir demonstra como subclasse <xref:System.Reflection.Context.CustomReflectionContext> para adicionar um atributo personalizado para todos os membros de um determinado tipo cujos nomes começam com "Para".</span><span class="sxs-lookup"><span data-stu-id="74360-120">The following example demonstrates how to subclass  <xref:System.Reflection.Context.CustomReflectionContext> to add a custom attribute to all the members of a given type whose names begin with "To".</span></span> <span data-ttu-id="74360-121">Para executar esse código, cole-o em um projeto de console vazio e certifique-se de incluir uma referência a System.Reflection.Context.dll.</span><span class="sxs-lookup"><span data-stu-id="74360-121">To run this code, paste it into an empty console project, and make sure to include a reference to System.Reflection.Context.dll.</span></span>  
  
 [!code-csharp[System.Reflection.Context.CustomReflectionContext#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.context.customreflectioncontext/cs/program.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="74360-122">Inicializa uma nova instância da classe <see cref="T:System.Reflection.Context.CustomReflectionContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74360-122">Initializes a new instance of the <see cref="T:System.Reflection.Context.CustomReflectionContext" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CustomReflectionContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CustomReflectionContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="74360-123">Inicializa uma nova instância da classe <see cref="T:System.Reflection.Context.CustomReflectionContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74360-123">Initializes a new instance of the <see cref="T:System.Reflection.Context.CustomReflectionContext" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CustomReflectionContext (System.Reflection.ReflectionContext source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Reflection.ReflectionContext source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.#ctor(System.Reflection.ReflectionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (source As ReflectionContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CustomReflectionContext(System::Reflection::ReflectionContext ^ source);" />
      <MemberSignature Language="F#" Value="new System.Reflection.Context.CustomReflectionContext : System.Reflection.ReflectionContext -&gt; System.Reflection.Context.CustomReflectionContext" Usage="new System.Reflection.Context.CustomReflectionContext source" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="System.Reflection.ReflectionContext" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="74360-124">O contexto de reflexão a ser usado como base.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74360-124">The reflection context to use as a base.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74360-125">Inicializa uma nova instância da classe <see cref="T:System.Reflection.Context.CustomReflectionContext" /> com o contexto de reflexão especificado como uma base.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74360-125">Initializes a new instance of the <see cref="T:System.Reflection.Context.CustomReflectionContext" /> class with the specified reflection context as a base.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddProperties">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;System.Reflection.PropertyInfo&gt; AddProperties (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.PropertyInfo&gt; AddProperties(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Reflection::PropertyInfo ^&gt; ^ AddProperties(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member AddProperties : Type -&gt; seq&lt;System.Reflection.PropertyInfo&gt;&#xA;override this.AddProperties : Type -&gt; seq&lt;System.Reflection.PropertyInfo&gt;" Usage="customReflectionContext.AddProperties type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.PropertyInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="74360-126">O tipo ao qual adicionar propriedades.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74360-126">The type to add properties to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74360-127">Quando substituído em uma classe derivada, fornece uma coleção de propriedades adicionais para o tipo especificado, conforme representado neste contexto de reflexão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74360-127">When overridden in a derived class, provides a collection of additional properties for the specified type, as represented in this reflection context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="74360-128">Uma coleção de propriedades adicionais para o tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74360-128">A collection of additional properties for the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74360-129">Substitua este método para especificar quais propriedades devem ser adicionadas a um determinado tipo.</span><span class="sxs-lookup"><span data-stu-id="74360-129">Override this method to specify which properties should be added to a given type.</span></span> <span data-ttu-id="74360-130">Para criar as propriedades, use o <xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A> método.</span><span class="sxs-lookup"><span data-stu-id="74360-130">To create the properties, use the <xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateProperty">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="74360-131">Cria um objeto que representa uma propriedade a ser adicionada a um tipo, conforme especificado pelo método <see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74360-131">Creates an object that represents a property to be added to a type, as specified by the <see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /> method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateProperty">
      <MemberSignature Language="C#" Value="protected System.Reflection.PropertyInfo CreateProperty (Type propertyType, string name, Func&lt;object,object&gt; getter, Action&lt;object,object&gt; setter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Reflection.PropertyInfo CreateProperty(class System.Type propertyType, string name, class System.Func`2&lt;object, object&gt; getter, class System.Action`2&lt;object, object&gt; setter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateProperty (propertyType As Type, name As String, getter As Func(Of Object, Object), setter As Action(Of Object, Object)) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Reflection::PropertyInfo ^ CreateProperty(Type ^ propertyType, System::String ^ name, Func&lt;System::Object ^, System::Object ^&gt; ^ getter, Action&lt;System::Object ^, System::Object ^&gt; ^ setter);" />
      <MemberSignature Language="F#" Value="member this.CreateProperty : Type * string * Func&lt;obj, obj&gt; * Action&lt;obj, obj&gt; -&gt; System.Reflection.PropertyInfo" Usage="customReflectionContext.CreateProperty (propertyType, name, getter, setter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="getter" Type="System.Func&lt;System.Object,System.Object&gt;" />
        <Parameter Name="setter" Type="System.Action&lt;System.Object,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyType">
          <span data-ttu-id="74360-132">O tipo da propriedade a ser criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74360-132">The type of the property to create.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="74360-133">O nome da propriedade a ser criada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74360-133">The name of the property to create.</span>
          </span>
        </param>
        <param name="getter">
          <span data-ttu-id="74360-134">Um objeto que representa o acessador <see langword="get" /> da propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74360-134">An object that represents the property's <see langword="get" /> accessor.</span>
          </span>
        </param>
        <param name="setter">
          <span data-ttu-id="74360-135">Um objeto que representa o acessador <see langword="set" /> da propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74360-135">An object that represents the property's <see langword="set" /> accessor.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74360-136">Cria um objeto que representa uma propriedade a ser adicionada a um tipo, a ser usado com o método <see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74360-136">Creates an object that represents a property to be added to a type, to be used with the <see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="74360-137">Um objeto que representa a propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74360-137">An object that represents the property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74360-138">Objetos que são retornados por este método não estão concluídos <xref:System.Reflection.PropertyInfo> objetos e deve ser usado apenas no contexto do <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> método.</span><span class="sxs-lookup"><span data-stu-id="74360-138">Objects that are returned by this method are not complete <xref:System.Reflection.PropertyInfo> objects, and should be used only in the context of the <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateProperty">
      <MemberSignature Language="C#" Value="protected System.Reflection.PropertyInfo CreateProperty (Type propertyType, string name, Func&lt;object,object&gt; getter, Action&lt;object,object&gt; setter, System.Collections.Generic.IEnumerable&lt;Attribute&gt; propertyCustomAttributes, System.Collections.Generic.IEnumerable&lt;Attribute&gt; getterCustomAttributes, System.Collections.Generic.IEnumerable&lt;Attribute&gt; setterCustomAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Reflection.PropertyInfo CreateProperty(class System.Type propertyType, string name, class System.Func`2&lt;object, object&gt; getter, class System.Action`2&lt;object, object&gt; setter, class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; propertyCustomAttributes, class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; getterCustomAttributes, class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; setterCustomAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateProperty (propertyType As Type, name As String, getter As Func(Of Object, Object), setter As Action(Of Object, Object), propertyCustomAttributes As IEnumerable(Of Attribute), getterCustomAttributes As IEnumerable(Of Attribute), setterCustomAttributes As IEnumerable(Of Attribute)) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Reflection::PropertyInfo ^ CreateProperty(Type ^ propertyType, System::String ^ name, Func&lt;System::Object ^, System::Object ^&gt; ^ getter, Action&lt;System::Object ^, System::Object ^&gt; ^ setter, System::Collections::Generic::IEnumerable&lt;Attribute ^&gt; ^ propertyCustomAttributes, System::Collections::Generic::IEnumerable&lt;Attribute ^&gt; ^ getterCustomAttributes, System::Collections::Generic::IEnumerable&lt;Attribute ^&gt; ^ setterCustomAttributes);" />
      <MemberSignature Language="F#" Value="member this.CreateProperty : Type * string * Func&lt;obj, obj&gt; * Action&lt;obj, obj&gt; * seq&lt;Attribute&gt; * seq&lt;Attribute&gt; * seq&lt;Attribute&gt; -&gt; System.Reflection.PropertyInfo" Usage="customReflectionContext.CreateProperty (propertyType, name, getter, setter, propertyCustomAttributes, getterCustomAttributes, setterCustomAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="getter" Type="System.Func&lt;System.Object,System.Object&gt;" />
        <Parameter Name="setter" Type="System.Action&lt;System.Object,System.Object&gt;" />
        <Parameter Name="propertyCustomAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;" />
        <Parameter Name="getterCustomAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;" />
        <Parameter Name="setterCustomAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyType">
          <span data-ttu-id="74360-139">O tipo da propriedade a ser criado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74360-139">The type of the property to create.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="74360-140">O nome da propriedade a ser criada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74360-140">The name of the property to create.</span>
          </span>
        </param>
        <param name="getter">
          <span data-ttu-id="74360-141">Um objeto que representa o acessador <see langword="get" /> da propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74360-141">An object that represents the property's <see langword="get" /> accessor.</span>
          </span>
        </param>
        <param name="setter">
          <span data-ttu-id="74360-142">Um objeto que representa o acessador <see langword="set" /> da propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74360-142">An object that represents the property's <see langword="set" /> accessor.</span>
          </span>
        </param>
        <param name="propertyCustomAttributes">
          <span data-ttu-id="74360-143">Uma coleção de atributos personalizados a serem aplicados à propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74360-143">A collection of custom attributes to apply to the property.</span>
          </span>
        </param>
        <param name="getterCustomAttributes">
          <span data-ttu-id="74360-144">Uma coleção de atributos personalizados a serem aplicados ao acessador <see langword="get" /> da propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74360-144">A collection of custom attributes to apply to the property's <see langword="get" /> accessor.</span>
          </span>
        </param>
        <param name="setterCustomAttributes">
          <span data-ttu-id="74360-145">Uma coleção de atributos personalizados a serem aplicados ao acessador <see langword="set" /> da propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74360-145">A collection of custom attributes to apply to the property's <see langword="set" /> accessor.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74360-146">Cria um objeto que representa uma propriedade a ser adicionada a um tipo, a ser usado com o método <see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /> e usando os atributos personalizados especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74360-146">Creates an object that represents a property to be added to a type, to be used with the <see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /> method and using the specified custom attributes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="74360-147">Um objeto que representa a propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74360-147">An object that represents the property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74360-148">Objetos que são retornados por este método não estão concluídos <xref:System.Reflection.PropertyInfo> objetos e deve ser usado apenas no contexto do <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> método.</span><span class="sxs-lookup"><span data-stu-id="74360-148">Objects that are returned by this method are not complete <xref:System.Reflection.PropertyInfo> objects, and should be used only in the context of the <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="74360-149">Quando substituído em uma classe derivada, fornece uma coleção modificada de atributos personalizados para o objeto especificado, conforme representado neste contexto de reflexão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74360-149">When overridden in a derived class, provides a modified collection of custom attributes for the specified object, as represented in this reflection context.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;object&gt; GetCustomAttributes (System.Reflection.MemberInfo member, System.Collections.Generic.IEnumerable&lt;object&gt; declaredAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;object&gt; GetCustomAttributes(class System.Reflection.MemberInfo member, class System.Collections.Generic.IEnumerable`1&lt;object&gt; declaredAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetCustomAttributes (member As MemberInfo, declaredAttributes As IEnumerable(Of Object)) As IEnumerable(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ member, System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ declaredAttributes);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAttributes : System.Reflection.MemberInfo * seq&lt;obj&gt; -&gt; seq&lt;obj&gt;&#xA;override this.GetCustomAttributes : System.Reflection.MemberInfo * seq&lt;obj&gt; -&gt; seq&lt;obj&gt;" Usage="customReflectionContext.GetCustomAttributes (member, declaredAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
        <Parameter Name="declaredAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="member">
          <span data-ttu-id="74360-150">O membro cujos atributos personalizados serão retornados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74360-150">The member whose custom attributes will be returned.</span>
          </span>
        </param>
        <param name="declaredAttributes">
          <span data-ttu-id="74360-151">Uma coleção de atributos do membro em seu contexto atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74360-151">A collection of the member's attributes in its current context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74360-152">Quando substituído em uma classe derivada, fornece uma lista de atributos personalizados para o membro especificado, conforme representado neste contexto de reflexão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74360-152">When overridden in a derived class, provides a list of custom attributes for the specified member, as represented in this reflection context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="74360-153">Uma coleção que representa os atributos personalizados do membro especificado neste contexto de reflexão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74360-153">A collection that represents the custom attributes of the specified member in this reflection context.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;object&gt; GetCustomAttributes (System.Reflection.ParameterInfo parameter, System.Collections.Generic.IEnumerable&lt;object&gt; declaredAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;object&gt; GetCustomAttributes(class System.Reflection.ParameterInfo parameter, class System.Collections.Generic.IEnumerable`1&lt;object&gt; declaredAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetCustomAttributes (parameter As ParameterInfo, declaredAttributes As IEnumerable(Of Object)) As IEnumerable(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ parameter, System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ declaredAttributes);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAttributes : System.Reflection.ParameterInfo * seq&lt;obj&gt; -&gt; seq&lt;obj&gt;&#xA;override this.GetCustomAttributes : System.Reflection.ParameterInfo * seq&lt;obj&gt; -&gt; seq&lt;obj&gt;" Usage="customReflectionContext.GetCustomAttributes (parameter, declaredAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="declaredAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="parameter">
          <span data-ttu-id="74360-154">O parâmetro cujos atributos personalizados serão retornados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74360-154">The parameter whose custom attributes will be returned.</span>
          </span>
        </param>
        <param name="declaredAttributes">
          <span data-ttu-id="74360-155">Uma coleção de atributos do parâmetro em seu contexto atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74360-155">A collection of the parameter's attributes in its current context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74360-156">Quando substituído em uma classe derivada, fornece uma lista de atributos personalizados para o parâmetro especificado, conforme representado neste contexto de reflexão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74360-156">When overridden in a derived class, provides a list of custom attributes for the specified parameter, as represented in this reflection context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="74360-157">Uma coleção que representa os atributos personalizados do parâmetro especificado neste contexto de reflexão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74360-157">A collection that represents the custom attributes of the specified parameter in this reflection context.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapAssembly">
      <MemberSignature Language="C#" Value="public override System.Reflection.Assembly MapAssembly (System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.Assembly MapAssembly(class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.MapAssembly(System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::Assembly ^ MapAssembly(System::Reflection::Assembly ^ assembly);" />
      <MemberSignature Language="F#" Value="override this.MapAssembly : System.Reflection.Assembly -&gt; System.Reflection.Assembly" Usage="customReflectionContext.MapAssembly assembly" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="assembly">
          <span data-ttu-id="74360-158">A representação externa do assembly a ser representado nesse contexto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74360-158">The external representation of the assembly to represent in this context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74360-159">Obtém a representação, neste contexto de reflexão, de um assembly representado por um objeto de outro contexto de reflexão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74360-159">Gets the representation, in this reflection context, of an assembly that is represented by an object from another reflection context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="74360-160">A representação do assembly nesse contexto de reflexão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74360-160">The representation of the assembly in this reflection context.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapType">
      <MemberSignature Language="C#" Value="public override System.Reflection.TypeInfo MapType (System.Reflection.TypeInfo type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.TypeInfo MapType(class System.Reflection.TypeInfo type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.MapType(System.Reflection.TypeInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MapType (type As TypeInfo) As TypeInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::TypeInfo ^ MapType(System::Reflection::TypeInfo ^ type);" />
      <MemberSignature Language="F#" Value="override this.MapType : System.Reflection.TypeInfo -&gt; System.Reflection.TypeInfo" Usage="customReflectionContext.MapType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.TypeInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Reflection.TypeInfo" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="74360-161">A representação externa do tipo a ser representado neste contexto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74360-161">The external representation of the type to represent in this context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74360-162">Obtém a representação, neste contexto de reflexão, de um tipo representado por um objeto de outro contexto de reflexão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74360-162">Gets the representation, in this reflection context, of a type represented by an object from another reflection context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="74360-163">A representação do tipo nesse contexto de reflexão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74360-163">The representation of the type in this reflection context.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>