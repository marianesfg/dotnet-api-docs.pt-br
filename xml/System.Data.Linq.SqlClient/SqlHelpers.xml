<Type Name="SqlHelpers" FullName="System.Data.Linq.SqlClient.SqlHelpers">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7da3e1debfc1b4cfb2d780b3c513178d4392662b" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36689669" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class SqlHelpers" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SqlHelpers extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.SqlClient.SqlHelpers" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlHelpers" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlHelpers abstract sealed" />
  <TypeSignature Language="F#" Value="type SqlHelpers = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="07398-101">Fornece métodos auxiliares para operações que correspondam aos padrões de cadeia de caracteres.</span>
      <span class="sxs-lookup">
        <span data-stu-id="07398-101">Provides helper methods for operations that match string patterns.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="GetStringContainsPattern">
      <MemberSignature Language="C#" Value="public static string GetStringContainsPattern (string text, char escape);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetStringContainsPattern(string text, char escape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlHelpers.GetStringContainsPattern(System.String,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetStringContainsPattern (text As String, escape As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetStringContainsPattern(System::String ^ text, char escape);" />
      <MemberSignature Language="F#" Value="static member GetStringContainsPattern : string * char -&gt; string" Usage="System.Data.Linq.SqlClient.SqlHelpers.GetStringContainsPattern (text, escape)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="escape" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="07398-102">A cadeia de caracteres a ser inserida na cadeia de padrão de pesquisa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07398-102">The string to insert into the search pattern string.</span>
          </span>
        </param>
        <param name="escape">
          <span data-ttu-id="07398-103">O caractere a ser usado para ter caracteres curinga como escape.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07398-103">The character to use to escape wildcard characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="07398-104">Cria uma cadeia de caracteres de padrão de pesquisa em que o texto especificado pode ter outro texto antes e após ele.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07398-104">Creates a search pattern string where the specified text can have other text before and following it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07398-105">Uma cadeia de padrão de pesquisa que contém a cadeia de caracteres especificada e o caractere “%” antes e depois dela.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07398-105">A search pattern string that contains the specified string and the '%' character before and after it.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetStringEndsWithPattern">
      <MemberSignature Language="C#" Value="public static string GetStringEndsWithPattern (string text, char escape);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetStringEndsWithPattern(string text, char escape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlHelpers.GetStringEndsWithPattern(System.String,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetStringEndsWithPattern (text As String, escape As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetStringEndsWithPattern(System::String ^ text, char escape);" />
      <MemberSignature Language="F#" Value="static member GetStringEndsWithPattern : string * char -&gt; string" Usage="System.Data.Linq.SqlClient.SqlHelpers.GetStringEndsWithPattern (text, escape)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="escape" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="07398-106">A cadeia de caracteres a ser inserida na cadeia de padrão de pesquisa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07398-106">The string to insert into the search pattern string.</span>
          </span>
        </param>
        <param name="escape">
          <span data-ttu-id="07398-107">O caractere a ser usado para ter caracteres curinga como escape.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07398-107">The character to use to escape wildcard characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="07398-108">Cria uma cadeia de caracteres de padrão de pesquisa em que o texto especificado pode ter outro texto antes, mas não após ele.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07398-108">Creates a search pattern string where the specified text can have other text before it but not following it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07398-109">Uma cadeia de padrão de pesquisa que contém o caractere “%” seguido pela cadeia de caracteres especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07398-109">A search pattern string that contains the '%' character followed by the specified string.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetStringStartsWithPattern">
      <MemberSignature Language="C#" Value="public static string GetStringStartsWithPattern (string text, char escape);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetStringStartsWithPattern(string text, char escape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlHelpers.GetStringStartsWithPattern(System.String,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetStringStartsWithPattern (text As String, escape As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetStringStartsWithPattern(System::String ^ text, char escape);" />
      <MemberSignature Language="F#" Value="static member GetStringStartsWithPattern : string * char -&gt; string" Usage="System.Data.Linq.SqlClient.SqlHelpers.GetStringStartsWithPattern (text, escape)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="escape" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="07398-110">A cadeia de caracteres a ser inserida na cadeia de padrão de pesquisa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07398-110">The string to insert into the search pattern string.</span>
          </span>
        </param>
        <param name="escape">
          <span data-ttu-id="07398-111">O caractere a ser usado para ter caracteres curinga como escape.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07398-111">The character to use to escape wildcard characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="07398-112">Cria uma cadeia de padrão de pesquisa em que o texto especificado pode ter outro texto depois, mas não antes dele.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07398-112">Creates a search pattern string where the specified text can have other text after it but not before it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07398-113">Uma cadeia de padrão de pesquisa que contém a cadeia de caracteres especificada seguida pelo caractere ‘%’.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07398-113">A search pattern string that contains the specified string followed by the '%' character.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="TranslateVBLikePattern">
      <MemberSignature Language="C#" Value="public static string TranslateVBLikePattern (string pattern, char escape);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string TranslateVBLikePattern(string pattern, char escape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.SqlClient.SqlHelpers.TranslateVBLikePattern(System.String,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TranslateVBLikePattern (pattern As String, escape As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ TranslateVBLikePattern(System::String ^ pattern, char escape);" />
      <MemberSignature Language="F#" Value="static member TranslateVBLikePattern : string * char -&gt; string" Usage="System.Data.Linq.SqlClient.SqlHelpers.TranslateVBLikePattern (pattern, escape)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="escape" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="pattern">
          <span data-ttu-id="07398-114">O padrão de pesquisa <see langword="Like" /> do Visual Basic para converter para o padrão de pesquisa <see langword="LIKE" /> do SQL Server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07398-114">The Visual Basic <see langword="Like" /> search pattern to translate to a SQL Server <see langword="LIKE" /> search pattern.</span>
          </span>
        </param>
        <param name="escape">
          <span data-ttu-id="07398-115">O caractere a ser usado para escapar caracteres especiais do SQL ou o próprio caractere de escape.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07398-115">The character to use to escape special SQL characters or the escape character itself.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="07398-116">Converte um padrão de pesquisa do operador <see langword="Like" /> do Visual Basic para um padrão de pesquisa do operador <see langword="LIKE" /> do SQL Server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07398-116">Translates a search pattern for the Visual Basic <see langword="Like" /> operator to a search pattern for the SQL Server <see langword="LIKE" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="07398-117">Um padrão de pesquisa do operador <see langword="LIKE" /> do SQL Server que corresponde ao padrão de pesquisa <see langword="Like" /> do Visual Basic especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="07398-117">A search pattern for the SQL Server <see langword="LIKE" /> operator that corresponds to the specified Visual Basic <see langword="Like" /> search pattern.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>