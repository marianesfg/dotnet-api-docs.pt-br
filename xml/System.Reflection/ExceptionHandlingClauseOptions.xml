<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ExceptionHandlingClauseOptions.xml" source-language="en-US" target-language="pt-BR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5392d3cbc4a7aaa362797299233bcbad4451106f3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">392d3cbc4a7aaa362797299233bcbad4451106f3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Reflection.ExceptionHandlingClauseOptions">
          <source>Identifies kinds of exception-handling clauses.</source>
          <target state="translated">Identifica os tipos de cláusulas de tratamento de exceção.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ExceptionHandlingClauseOptions">
          <source>To examine the exception-handling clauses in a method, obtain a <ph id="ph1">&lt;xref:System.Reflection.MethodInfo&gt;</ph> object and call the <ph id="ph2">&lt;xref:System.Reflection.MethodBase.GetMethodBody%2A&gt;</ph> method to obtain the method body.</source>
          <target state="translated">Para examinar as cláusulas de tratamento de exceção em um método, obter um <ph id="ph1">&lt;xref:System.Reflection.MethodInfo&gt;</ph> objeto e chamar o <ph id="ph2">&lt;xref:System.Reflection.MethodBase.GetMethodBody%2A&gt;</ph> método para obter o corpo do método.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ExceptionHandlingClauseOptions">
          <source>Use the <ph id="ph1">&lt;xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A&gt;</ph> property to obtain a list of <ph id="ph2">&lt;xref:System.Reflection.ExceptionHandlingClause&gt;</ph> objects.</source>
          <target state="translated">Use o <ph id="ph1">&lt;xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A&gt;</ph> propriedade para obter uma lista de <ph id="ph2">&lt;xref:System.Reflection.ExceptionHandlingClause&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ExceptionHandlingClauseOptions">
          <source>Working with exception-handling clauses requires a thorough understanding of metadata and Microsoft intermediate language (MSIL) instruction formats.</source>
          <target state="translated">Trabalhar com as cláusulas de tratamento de exceção requer um entendimento completo dos metadados e formatos de instrução do Microsoft intermediate language (MSIL).</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ExceptionHandlingClauseOptions">
          <source>Information can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set".</source>
          <target state="translated">Informações podem ser encontradas na documentação do Common Language Infrastructure (CLI), "especialmente partição II: metadados definição e semântica" e "Partição III: conjunto de instruções CIL".</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ExceptionHandlingClauseOptions">
          <source>The documentation is available online; see <bpt id="p1">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> on MSDN and <bpt id="p2">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> on the Ecma International Web site.</source>
          <target state="translated">A documentação está disponível online; confira <bpt id="p1">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept>, no MSDN, e <bpt id="p2">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept>, no site internacional da Ecma.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ExceptionHandlingClauseOptions">
          <source>The following code example defines a test method named <ph id="ph1">`MethodBodyExample`</ph>, and displays its local variable information and exception-handling clauses.</source>
          <target state="translated">O exemplo de código a seguir define um método de teste chamado <ph id="ph1">`MethodBodyExample`</ph>e exibe suas informações de variáveis locais e cláusulas de tratamento de exceção.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ExceptionHandlingClauseOptions">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType&gt;</ph> method is used to obtain a <ph id="ph2">&lt;xref:System.Reflection.MethodBody&gt;</ph> object for the test method.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType&gt;</ph> método é usado para obter um <ph id="ph2">&lt;xref:System.Reflection.MethodBody&gt;</ph> objeto para o método de teste.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ExceptionHandlingClauseOptions">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A&gt;</ph> property is used to obtain a list of <ph id="ph2">&lt;xref:System.Reflection.ExceptionHandlingClause&gt;</ph> objects and display their properties.</source>
          <target state="translated">O <ph id="ph1">&lt;xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A&gt;</ph> propriedade é usada para obter uma lista de <ph id="ph2">&lt;xref:System.Reflection.ExceptionHandlingClause&gt;</ph> objetos e exibir suas propriedades.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ExceptionHandlingClauseOptions">
          <source>Not all computer languages can generate Filter clauses.</source>
          <target state="translated">Nem todos os idiomas do computador podem gerar cláusulas de filtro.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ExceptionHandlingClauseOptions">
          <source>The Visual Basic example shows a filter clause, using a Visual Basic <ph id="ph1">`When`</ph> expression, which is omitted from the examples for other languages.</source>
          <target state="translated">O exemplo do Visual Basic mostra uma cláusula de filtro, usando um Visual Basic <ph id="ph1">`When`</ph> expressão, que é omitido dos exemplos para outros idiomas.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.ExceptionHandlingClauseOptions">
          <source>This code is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Reflection.MethodBody&gt;</ph> class.</source>
          <target state="translated">Esse código é parte de um exemplo maior fornecido para a <ph id="ph1">&lt;xref:System.Reflection.MethodBody&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="F:System.Reflection.ExceptionHandlingClauseOptions.Clause">
          <source>The clause accepts all exceptions that derive from a specified type.</source>
          <target state="translated">A cláusula aceita todas as exceções que derivam de um tipo especificado.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="F:System.Reflection.ExceptionHandlingClauseOptions.Fault">
          <source>The clause is executed if an exception occurs, but not on completion of normal control flow.</source>
          <target state="translated">A cláusula é executada se uma exceção ocorrer, mas não na conclusão do fluxo de controle normal.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="F:System.Reflection.ExceptionHandlingClauseOptions.Filter">
          <source>The clause contains user-specified instructions that determine whether the exception should be ignored (that is, whether normal execution should resume), be handled by the associated handler, or be passed on to the next clause.</source>
          <target state="translated">A cláusula contém as instruções especificadas pelo usuário que determinam se a exceção deve ser ignorada (ou seja, se a execução normal deve retomar), ser tratada pelo manipulador associado ou ser passada para a próxima cláusula.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="F:System.Reflection.ExceptionHandlingClauseOptions.Finally">
          <source>The clause is executed whenever the try block exits, whether through normal control flow or because of an unhandled exception.</source>
          <target state="translated">A cláusula é executada sempre que o bloco try é encerrado, seja por meio de fluxo de controle normal ou devido a uma exceção sem tratamento.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>