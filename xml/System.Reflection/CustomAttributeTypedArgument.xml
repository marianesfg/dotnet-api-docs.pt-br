<Type Name="CustomAttributeTypedArgument" FullName="System.Reflection.CustomAttributeTypedArgument">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ff7601a6e598b0d418ea8e2984b6607ce3b56f96" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37472977" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct CustomAttributeTypedArgument" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit CustomAttributeTypedArgument extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.CustomAttributeTypedArgument" />
  <TypeSignature Language="VB.NET" Value="Public Structure CustomAttributeTypedArgument" />
  <TypeSignature Language="C++ CLI" Value="public value class CustomAttributeTypedArgument" />
  <TypeSignature Language="F#" Value="type CustomAttributeTypedArgument = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="1c9c4-101">Representa um argumento de um atributo personalizado no contexto exclusivamente de reflexão, ou um elemento de um argumento de matriz.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1c9c4-101">Represents an argument of a custom attribute in the reflection-only context, or an element of an array argument.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c9c4-102">Código que está sendo examinado no contexto somente reflexão não pode ser executado, portanto, nem sempre é possível examinar os atributos personalizados, criando instâncias de-los e, em seguida, examinar suas propriedades, usando métodos como <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>e assim por diante .</span><span class="sxs-lookup"><span data-stu-id="1c9c4-102">Code that is being examined in the reflection-only context cannot be executed, so it is not always possible to examine custom attributes by creating instances of them and then examining their properties, using methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>, and so on.</span></span> <span data-ttu-id="1c9c4-103">Se o código para o tipo de atributo é carregado no contexto somente reflexão, ele não pode ser executado.</span><span class="sxs-lookup"><span data-stu-id="1c9c4-103">If the code for the attribute type itself is loaded into the reflection-only context, it cannot be executed.</span></span>  
  
 <span data-ttu-id="1c9c4-104">O <xref:System.Reflection.CustomAttributeNamedArgument> estrutura é usada pelo <xref:System.Reflection.CustomAttributeData> classe para fornecer acesso para o tipo e o valor de um argumento posicional especificado para uma instância de atributo personalizado, sem executar o construtor de atributo.</span><span class="sxs-lookup"><span data-stu-id="1c9c4-104">The <xref:System.Reflection.CustomAttributeNamedArgument> structure is used by the <xref:System.Reflection.CustomAttributeData> class to provide access to the type and value of a positional argument specified for a custom attribute instance, without executing the attribute constructor.</span></span> <span data-ttu-id="1c9c4-105">Ele também fornece acesso para o tipo e o valor de um argumento nomeado sem executar o código da propriedade correspondente do tipo de atributo personalizado.</span><span class="sxs-lookup"><span data-stu-id="1c9c4-105">It also provides access to the type and value of a named argument without executing the code of the corresponding property of the custom attribute type.</span></span>  
  
 <span data-ttu-id="1c9c4-106">Os tipos e valores de todos os argumentos posicionais e nomeados de uma instância de atributo são fornecidos por <xref:System.Reflection.CustomAttributeTypedArgument> estruturas.</span><span class="sxs-lookup"><span data-stu-id="1c9c4-106">The types and values of all the positional and named arguments of an attribute instance are provided by <xref:System.Reflection.CustomAttributeTypedArgument> structures.</span></span> <span data-ttu-id="1c9c4-107">Posicionais atributos retornados pela <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A?displayProperty=nameWithType> propriedade diretamente são representadas por <xref:System.Reflection.CustomAttributeTypedArgument> estruturas, mas os argumentos nomeados retornados pelo <xref:System.Reflection.CustomAttributeData.NamedArguments%2A?displayProperty=nameWithType> propriedade são representados por <xref:System.Reflection.CustomAttributeNamedArgument> estruturas; para obter o <xref:System.Reflection.CustomAttributeTypedArgument> estrutura para um argumento nomeado, use o <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=nameWithType> propriedade.</span><span class="sxs-lookup"><span data-stu-id="1c9c4-107">The positional attributes returned by the <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A?displayProperty=nameWithType> property are directly represented by <xref:System.Reflection.CustomAttributeTypedArgument> structures, but the named arguments returned by the <xref:System.Reflection.CustomAttributeData.NamedArguments%2A?displayProperty=nameWithType> property are represented by <xref:System.Reflection.CustomAttributeNamedArgument> structures; to get the <xref:System.Reflection.CustomAttributeTypedArgument> structure for a named argument, use the <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="1c9c4-108">Se um argumento for uma matriz de valores, o <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> propriedade do <xref:System.Reflection.CustomAttributeTypedArgument> que representa o argumento retorna um genérico <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> de <xref:System.Reflection.CustomAttributeTypedArgument> objetos.</span><span class="sxs-lookup"><span data-stu-id="1c9c4-108">If an argument is an array of values, the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> property of the <xref:System.Reflection.CustomAttributeTypedArgument> that represents the argument returns a generic <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of <xref:System.Reflection.CustomAttributeTypedArgument> objects.</span></span> <span data-ttu-id="1c9c4-109">Cada <xref:System.Reflection.CustomAttributeTypedArgument> objeto na coleção representa o elemento correspondente da matriz.</span><span class="sxs-lookup"><span data-stu-id="1c9c4-109">Each <xref:System.Reflection.CustomAttributeTypedArgument> object in the collection represents the corresponding element of the array.</span></span>  
  
 <span data-ttu-id="1c9c4-110">Para criar instâncias do <xref:System.Reflection.CustomAttributeData> classe, use o `static` <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> método de fábrica.</span><span class="sxs-lookup"><span data-stu-id="1c9c4-110">To create instances of the <xref:System.Reflection.CustomAttributeData> class, use the `static`<xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> factory method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1c9c4-111">O exemplo a seguir define um atributo personalizado com quatro construtores e quatro propriedades.</span><span class="sxs-lookup"><span data-stu-id="1c9c4-111">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="1c9c4-112">Duas propriedades são somente leitura e são definidas usando os parâmetros posicionais dos construtores.</span><span class="sxs-lookup"><span data-stu-id="1c9c4-112">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="1c9c4-113">As outras duas propriedades são de leitura/gravação e pode ser conjunto somente usando argumentos nomeado.</span><span class="sxs-lookup"><span data-stu-id="1c9c4-113">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="1c9c4-114">Uma propriedade posicional é uma matriz de cadeias de caracteres e uma propriedade nomeada é uma matriz de inteiros.</span><span class="sxs-lookup"><span data-stu-id="1c9c4-114">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="1c9c4-115">O atributo é aplicado ao assembly, a um tipo declarado no assembly, para um método do tipo e a um parâmetro do método.</span><span class="sxs-lookup"><span data-stu-id="1c9c4-115">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="1c9c4-116">Construtores diferentes são usados para esses casos.</span><span class="sxs-lookup"><span data-stu-id="1c9c4-116">Different constructors are used for these cases.</span></span> <span data-ttu-id="1c9c4-117">Quando executado, o assembly em si é carregado no contexto somente reflexão e exibe os atributos personalizados.</span><span class="sxs-lookup"><span data-stu-id="1c9c4-117">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="1c9c4-118">O atributo que é aplicado ao tipo demonstra as propriedades de matriz, com argumentos posicionais e nomeados.</span><span class="sxs-lookup"><span data-stu-id="1c9c4-118">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Reflection.CustomAttributeData" />
    <altmember cref="T:System.Reflection.CustomAttributeNamedArgument" />
    <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1c9c4-119">Inicializa uma nova instância da classe <see cref="T:System.Reflection.CustomAttributeTypedArgument" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c9c4-119">Initializes a new instance of the <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomAttributeTypedArgument (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomAttributeTypedArgument(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Reflection.CustomAttributeTypedArgument : obj -&gt; System.Reflection.CustomAttributeTypedArgument" Usage="new System.Reflection.CustomAttributeTypedArgument value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1c9c4-120">O valor do argumento do atributo personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c9c4-120">The value of the custom attribute argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c9c4-121">Inicializa uma nova instância da classe <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> com o valor especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c9c4-121">Initializes a new instance of the <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> class with the specified value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c9c4-122">O `value` parâmetro não pode ser `null` para esse construtor, pois o tipo de argumento é inferido do tipo de `value`.</span><span class="sxs-lookup"><span data-stu-id="1c9c4-122">The `value` parameter cannot be `null` for this constructor, because the argument type is inferred from the type of `value`.</span></span> <span data-ttu-id="1c9c4-123">Para especificar uma `null` de valor, use o <xref:System.Reflection.CustomAttributeTypedArgument.%23ctor%28System.Type%2CSystem.Object%29> construtor.</span><span class="sxs-lookup"><span data-stu-id="1c9c4-123">To specify a `null` value, use the <xref:System.Reflection.CustomAttributeTypedArgument.%23ctor%28System.Type%2CSystem.Object%29> constructor.</span></span>  
  
 <span data-ttu-id="1c9c4-124">Este construtor é para uso por herdeiros do <xref:System.Reflection.CustomAttributeTypedArgument> classe.</span><span class="sxs-lookup"><span data-stu-id="1c9c4-124">This constructor is for use by inheritors of the <xref:System.Reflection.CustomAttributeTypedArgument> class.</span></span> <span data-ttu-id="1c9c4-125">Ele não se destina para uso no código do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="1c9c4-125">It is not intended for use in application code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1c9c4-126">
            <paramref name="value" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c9c4-126">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomAttributeTypedArgument (Type argumentType, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type argumentType, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (argumentType As Type, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomAttributeTypedArgument(Type ^ argumentType, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Reflection.CustomAttributeTypedArgument : Type * obj -&gt; System.Reflection.CustomAttributeTypedArgument" Usage="new System.Reflection.CustomAttributeTypedArgument (argumentType, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="argumentType" Type="System.Type" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="argumentType">
          <span data-ttu-id="1c9c4-127">O tipo do argumento do atributo personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c9c4-127">The type of the custom attribute argument.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="1c9c4-128">O valor do argumento do atributo personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c9c4-128">The value of the custom attribute argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c9c4-129">Inicializa uma nova instância da classe <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> com o valor e o tipo especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c9c4-129">Initializes a new instance of the <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> class with the specified type and value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c9c4-130">Este construtor é para uso por herdeiros do <xref:System.Reflection.CustomAttributeTypedArgument> classe.</span><span class="sxs-lookup"><span data-stu-id="1c9c4-130">This constructor is for use by inheritors of the <xref:System.Reflection.CustomAttributeTypedArgument> class.</span></span> <span data-ttu-id="1c9c4-131">Ele não se destina para uso no código do aplicativo.</span><span class="sxs-lookup"><span data-stu-id="1c9c4-131">It is not intended for use in application code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1c9c4-132">
            <paramref name="argumentType" /> é <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c9c4-132">
              <paramref name="argumentType" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ArgumentType">
      <MemberSignature Language="C#" Value="public Type ArgumentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ArgumentType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeTypedArgument.ArgumentType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ArgumentType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ArgumentType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ArgumentType : Type" Usage="System.Reflection.CustomAttributeTypedArgument.ArgumentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c9c4-133">Obtém o tipo do argumento ou do elemento do argumento da matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c9c4-133">Gets the type of the argument or of the array argument element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1c9c4-134">Um <see cref="T:System.Type" /> objeto que representa o tipo do argumento ou do elemento da matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c9c4-134">A <see cref="T:System.Type" /> object representing the type of the argument or of the array element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c9c4-135">Para argumentos simples ou elementos de argumentos de matriz, essa propriedade identifica o tipo real do valor retornado pelo <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="1c9c4-135">For simple arguments or for elements of array arguments, this property identifies the actual type of the value returned by the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> property.</span></span> <span data-ttu-id="1c9c4-136">Para argumentos de matriz, essa propriedade retorna o tipo de matriz, mas o <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> propriedade retorna um `ReadOnlyCollection<CustomAttributeTypedArgument>` (`ReadOnlyCollection(Of CustomAttributeTypedArgument)` no Visual Basic) no qual cada elemento da coleção representa o elemento correspondente do argumento da matriz.</span><span class="sxs-lookup"><span data-stu-id="1c9c4-136">For array arguments, this property returns the array type, but the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> property returns a `ReadOnlyCollection<CustomAttributeTypedArgument>` (`ReadOnlyCollection(Of CustomAttributeTypedArgument)` in Visual Basic) in which each element of the collection represents the corresponding element of the array argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1c9c4-137">O exemplo a seguir define um atributo personalizado com quatro construtores e quatro propriedades.</span><span class="sxs-lookup"><span data-stu-id="1c9c4-137">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="1c9c4-138">Duas propriedades são somente leitura e são definidas usando os parâmetros posicionais dos construtores.</span><span class="sxs-lookup"><span data-stu-id="1c9c4-138">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="1c9c4-139">As outras duas propriedades são de leitura/gravação e pode ser conjunto somente usando argumentos nomeado.</span><span class="sxs-lookup"><span data-stu-id="1c9c4-139">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="1c9c4-140">Uma propriedade posicional é uma matriz de cadeias de caracteres e uma propriedade nomeada é uma matriz de inteiros.</span><span class="sxs-lookup"><span data-stu-id="1c9c4-140">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="1c9c4-141">O atributo é aplicado ao assembly, a um tipo declarado no assembly, para um método do tipo e a um parâmetro do método.</span><span class="sxs-lookup"><span data-stu-id="1c9c4-141">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="1c9c4-142">Construtores diferentes são usados para esses casos.</span><span class="sxs-lookup"><span data-stu-id="1c9c4-142">Different constructors are used for these cases.</span></span> <span data-ttu-id="1c9c4-143">Quando executado, o assembly em si é carregado no contexto somente reflexão e exibe os atributos personalizados.</span><span class="sxs-lookup"><span data-stu-id="1c9c4-143">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="1c9c4-144">O atributo que é aplicado ao tipo demonstra as propriedades de matriz, com argumentos posicionais e nomeados.</span><span class="sxs-lookup"><span data-stu-id="1c9c4-144">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="1c9c4-145">O <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> propriedade é usada no `ShowValueOrArray` método que exibe dados de atributo personalizado, para exibir os tipos de atributos.</span><span class="sxs-lookup"><span data-stu-id="1c9c4-145">The <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> property is used in the `ShowValueOrArray` method that displays custom attribute data, to display the types of attributes.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.CustomAttributeTypedArgument.Value" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="customAttributeTypedArgument.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="1c9c4-146">Outro objeto com o qual ser comparado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c9c4-146">Another object to compare to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c9c4-147">Indica se essa instância e um objeto especificado são iguais.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c9c4-147">Indicates whether this instance and a specified object are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c9c4-148">
            <see langword="true" /> se <paramref name="obj" /> e essa instância forem do mesmo tipo e representarem o mesmo valor; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c9c4-148">
              <see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ValueType.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="customAttributeTypedArgument.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1c9c4-149">Retorna o código hash para essa instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c9c4-149">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c9c4-150">Um inteiro com sinal de 32 bits que é o código hash para esta instância.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c9c4-150">A 32-bit signed integer that is the hash code for this instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ValueType.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Reflection.CustomAttributeTypedArgument left, System.Reflection.CustomAttributeTypedArgument right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Reflection.CustomAttributeTypedArgument left, valuetype System.Reflection.CustomAttributeTypedArgument right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.op_Equality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As CustomAttributeTypedArgument, right As CustomAttributeTypedArgument) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Reflection::CustomAttributeTypedArgument left, System::Reflection::CustomAttributeTypedArgument right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Reflection.CustomAttributeTypedArgument * System.Reflection.CustomAttributeTypedArgument -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.CustomAttributeTypedArgument" />
        <Parameter Name="right" Type="System.Reflection.CustomAttributeTypedArgument" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="1c9c4-151">A estrutura <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> à esquerda do operador de igualdade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c9c4-151">The <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> structure to the left of the equality operator.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="1c9c4-152">A estrutura <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> à direita do operador de igualdade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c9c4-152">The <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> structure to the right of the equality operator.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c9c4-153">Testa se duas estruturas <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> são equivalentes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c9c4-153">Tests whether two <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> structures are equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c9c4-154">
            <see langword="true" /> se as duas estruturas <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> forem iguais; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c9c4-154">
              <see langword="true" /> if the two <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> structures are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="1c9c4-155">O método equivalente para esse operador é <xref:System.Reflection.CustomAttributeTypedArgument.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1c9c4-155">The equivalent method for this operator is <xref:System.Reflection.CustomAttributeTypedArgument.Equals%2A?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Reflection.CustomAttributeTypedArgument left, System.Reflection.CustomAttributeTypedArgument right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Reflection.CustomAttributeTypedArgument left, valuetype System.Reflection.CustomAttributeTypedArgument right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.op_Inequality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As CustomAttributeTypedArgument, right As CustomAttributeTypedArgument) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Reflection::CustomAttributeTypedArgument left, System::Reflection::CustomAttributeTypedArgument right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Reflection.CustomAttributeTypedArgument * System.Reflection.CustomAttributeTypedArgument -&gt; bool" Usage="System.Reflection.CustomAttributeTypedArgument.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.CustomAttributeTypedArgument" />
        <Parameter Name="right" Type="System.Reflection.CustomAttributeTypedArgument" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="1c9c4-156">A estrutura <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> à esquerda do operador de desigualdade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c9c4-156">The <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> structure to the left of the inequality operator.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="1c9c4-157">A estrutura <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> à direita do operador de desigualdade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c9c4-157">The <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> structure to the right of the inequality operator.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c9c4-158">Testa se as duas estruturas <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> são diferentes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c9c4-158">Tests whether two <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> structures are different.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c9c4-159">
            <see langword="true" /> se as duas estruturas <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> forem diferentes; caso contrário, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c9c4-159">
              <see langword="true" /> if the two <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> structures are different; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="1c9c4-160">O método equivalente para esse operador é <xref:System.Reflection.CustomAttributeTypedArgument.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1c9c4-160">The equivalent method for this operator is <xref:System.Reflection.CustomAttributeTypedArgument.Equals%2A?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="customAttributeTypedArgument.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1c9c4-161">Retorna uma cadeia de caracteres que consiste no nome do argumento, no sinal de igual e uma representação de cadeia de caracteres do valor do argumento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c9c4-161">Returns a string consisting of the argument name, the equal sign, and a string representation of the argument value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c9c4-162">Uma cadeia de caracteres que consiste no nome do argumento, no sinal de igual e uma representação de cadeia de caracteres do valor do argumento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c9c4-162">A string consisting of the argument name, the equal sign, and a string representation of the argument value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeTypedArgument.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj" Usage="System.Reflection.CustomAttributeTypedArgument.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c9c4-163">Obtém o valor do argumento para um argumento simples ou elemento de um argumento de matriz, obtém uma coleção de valores para um argumento de matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c9c4-163">Gets the value of the argument for a simple argument or for an element of an array argument; gets a collection of values for an array argument.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1c9c4-164">Um objeto que representa o valor do argumento ou elemento ou um genérico <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> de <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> objetos que representam os valores de um argumento de tipo de matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c9c4-164">An object that represents the value of the argument or element, or a generic <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> objects that represent the values of an array-type argument.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c9c4-165">Se o <xref:System.Reflection.CustomAttributeTypedArgument> representa um argumento de matriz, essa propriedade retornará um `ReadOnlyCollection<CustomAttributeTypedArgument>` (`ReadOnlyCollection(Of CustomAttributeTypedArgument)` no Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="1c9c4-165">If the <xref:System.Reflection.CustomAttributeTypedArgument> represents an array argument, this property returns a `ReadOnlyCollection<CustomAttributeTypedArgument>` (`ReadOnlyCollection(Of CustomAttributeTypedArgument)` in Visual Basic).</span></span> <span data-ttu-id="1c9c4-166">Cada elemento da coleção representa o elemento correspondente do argumento da matriz.</span><span class="sxs-lookup"><span data-stu-id="1c9c4-166">Each element of the collection represents the corresponding element of the array argument.</span></span>  
  
 <span data-ttu-id="1c9c4-167">O tipo do valor pode ser obtido usando o <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="1c9c4-167">The type of the value can be obtained by using the <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> property.</span></span> <span data-ttu-id="1c9c4-168"><xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> Obtém o tipo real do valor retornado pelo <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> propriedade para argumentos simples ou elementos de argumentos de matriz.</span><span class="sxs-lookup"><span data-stu-id="1c9c4-168"><xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> gets the actual type of the value returned by the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> property for simple arguments or for elements of array arguments.</span></span> <span data-ttu-id="1c9c4-169">Ele retorna o tipo de matriz de argumentos de matriz.</span><span class="sxs-lookup"><span data-stu-id="1c9c4-169">It returns the array type for array arguments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1c9c4-170">O exemplo a seguir define um atributo personalizado com quatro construtores e quatro propriedades.</span><span class="sxs-lookup"><span data-stu-id="1c9c4-170">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="1c9c4-171">Duas propriedades são somente leitura e são definidas usando os parâmetros posicionais dos construtores.</span><span class="sxs-lookup"><span data-stu-id="1c9c4-171">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="1c9c4-172">As outras duas propriedades são de leitura/gravação e pode ser conjunto somente usando argumentos nomeado.</span><span class="sxs-lookup"><span data-stu-id="1c9c4-172">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="1c9c4-173">Uma propriedade posicional é uma matriz de cadeias de caracteres e uma propriedade nomeada é uma matriz de inteiros.</span><span class="sxs-lookup"><span data-stu-id="1c9c4-173">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="1c9c4-174">O atributo é aplicado ao assembly, a um tipo declarado no assembly, para um método do tipo e a um parâmetro do método.</span><span class="sxs-lookup"><span data-stu-id="1c9c4-174">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="1c9c4-175">Construtores diferentes são usados para esses casos.</span><span class="sxs-lookup"><span data-stu-id="1c9c4-175">Different constructors are used for these cases.</span></span> <span data-ttu-id="1c9c4-176">Quando executado, o assembly em si é carregado no contexto somente reflexão e exibe os atributos personalizados.</span><span class="sxs-lookup"><span data-stu-id="1c9c4-176">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="1c9c4-177">O atributo que é aplicado ao tipo demonstra as propriedades de matriz, com argumentos posicionais e nomeados.</span><span class="sxs-lookup"><span data-stu-id="1c9c4-177">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="1c9c4-178">O <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> propriedade é usada no `ShowValueOrArray` método que exibe dados de atributo personalizado, para exibir os valores de atributos.</span><span class="sxs-lookup"><span data-stu-id="1c9c4-178">The <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> property is used in the `ShowValueOrArray` method that displays custom attribute data, to display the values of attributes.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 <span data-ttu-id="1c9c4-179"><xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> &#124; <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A></span><span class="sxs-lookup"><span data-stu-id="1c9c4-179"><xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> &#124; <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A></span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>