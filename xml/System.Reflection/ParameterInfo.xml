<Type Name="ParameterInfo" FullName="System.Reflection.ParameterInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="024da8c1f667efded7784e3a11e34a9c9f0a5513" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57936934" /></Metadata><TypeSignature Language="C#" Value="public class ParameterInfo : System.Reflection.ICustomAttributeProvider, System.Runtime.InteropServices._ParameterInfo, System.Runtime.Serialization.IObjectReference" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable beforefieldinit ParameterInfo extends System.Object implements class System.Reflection.ICustomAttributeProvider, class System.Runtime.InteropServices._ParameterInfo, class System.Runtime.Serialization.IObjectReference" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.ParameterInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class ParameterInfo&#xA;Implements _ParameterInfo, ICustomAttributeProvider, IObjectReference" />
  <TypeSignature Language="C++ CLI" Value="public ref class ParameterInfo : System::Reflection::ICustomAttributeProvider, System::Runtime::InteropServices::_ParameterInfo, System::Runtime::Serialization::IObjectReference" />
  <TypeSignature Language="F#" Value="type ParameterInfo = class&#xA;    interface ICustomAttributeProvider&#xA;    interface _ParameterInfo&#xA;    interface IObjectReference" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Reflection.ICustomAttributeProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._ParameterInfo</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IObjectReference</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._ParameterInfo))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a3d63-101">Descobre os atributos de um campo e fornece acesso aos parâmetros dos metadados.</span><span class="sxs-lookup"><span data-stu-id="a3d63-101">Discovers the attributes of a parameter and provides access to parameter metadata.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3d63-102">Usar uma instância de `ParameterInfo` para obter informações sobre o tipo de dados do parâmetro, valor padrão e assim por diante.</span><span class="sxs-lookup"><span data-stu-id="a3d63-102">Use an instance of `ParameterInfo` to obtain information about the parameter's data type, default value, and so on.</span></span>  
  
 <span data-ttu-id="a3d63-103"><xref:System.Reflection.MethodBase.GetParameters%2A> Retorna uma matriz de `ParameterInfo` objetos que representam os parâmetros de um método, em ordem.</span><span class="sxs-lookup"><span data-stu-id="a3d63-103"><xref:System.Reflection.MethodBase.GetParameters%2A> returns an array of `ParameterInfo` objects representing the parameters of a method, in order.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3d63-104">Este exemplo mostra como usar várias classes de reflexão para analisar os metadados contidos em um assembly.</span><span class="sxs-lookup"><span data-stu-id="a3d63-104">This example shows how to use various reflection classes to analyze the metadata contained in an assembly.</span></span>  
  
 [!code-cpp[Reflection#1](~/samples/snippets/cpp/VS_Snippets_CLR/Reflection/CPP/reflection.cpp#1)]
 [!code-csharp[Reflection#1](~/samples/snippets/csharp/VS_Snippets_CLR/Reflection/CS/Reflection.cs#1)]
 [!code-vb[Reflection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Reflection/VB/Reflection.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="a3d63-105">Este tipo é thread-safe.</span><span class="sxs-lookup"><span data-stu-id="a3d63-105">This type is thread safe.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ParameterInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ParameterInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ParameterInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3d63-106">Inicializa uma nova instância da classe <see langword="ParameterInfo" />.</span><span class="sxs-lookup"><span data-stu-id="a3d63-106">Initializes a new instance of the <see langword="ParameterInfo" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.ParameterAttributes Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.ParameterAttributes Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ParameterInfo.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Attributes As ParameterAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::ParameterAttributes Attributes { System::Reflection::ParameterAttributes get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Reflection.ParameterAttributes" Usage="System.Reflection.ParameterInfo.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ParameterAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3d63-107">Obtém os atributos desse parâmetro.</span><span class="sxs-lookup"><span data-stu-id="a3d63-107">Gets the attributes for this parameter.</span></span></summary>
        <value><span data-ttu-id="a3d63-108">Um objeto <see langword="ParameterAttributes" /> que representa os atributos desse parâmetro.</span><span class="sxs-lookup"><span data-stu-id="a3d63-108">A <see langword="ParameterAttributes" /> object representing the attributes for this parameter.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3d63-109">Esse método utiliza o <xref:System.Reflection.ParameterInfo.AttrsImpl> método.</span><span class="sxs-lookup"><span data-stu-id="a3d63-109">This method utilizes the <xref:System.Reflection.ParameterInfo.AttrsImpl> method.</span></span>  
  
 <span data-ttu-id="a3d63-110">Para obter o <xref:System.Reflection.ParameterInfo> matriz, primeiro obtenha o método ou o construtor e, em seguida, chamar <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a3d63-110">To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3d63-111">O exemplo a seguir define um método com três parâmetros.</span><span class="sxs-lookup"><span data-stu-id="a3d63-111">The following example defines a method with three parameters.</span></span> <span data-ttu-id="a3d63-112">Ele usa o <xref:System.Reflection.ParameterInfo.Attributes%2A> propriedade para obter os atributos do segundo parâmetro e exibi-los no console.</span><span class="sxs-lookup"><span data-stu-id="a3d63-112">It uses the <xref:System.Reflection.ParameterInfo.Attributes%2A> property to get the attributes of the second parameter and display them at the console.</span></span>  
  
 [!code-cpp[ParameterInfo_Attributes1#1](~/samples/snippets/cpp/VS_Snippets_CLR/ParameterInfo_Attributes1/CPP/parameterinfo_attributes1.cpp#1)]
 [!code-csharp[ParameterInfo_Attributes1#1](~/samples/snippets/csharp/VS_Snippets_CLR/ParameterInfo_Attributes1/CS/parameterinfo_attributes1.cs#1)]
 [!code-vb[ParameterInfo_Attributes1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParameterInfo_Attributes1/VB/parameterinfo_attributes1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.ParameterAttributes" />
      </Docs>
    </Member>
    <Member MemberName="AttrsImpl">
      <MemberSignature Language="C#" Value="protected System.Reflection.ParameterAttributes AttrsImpl;" />
      <MemberSignature Language="ILAsm" Value=".field family valuetype System.Reflection.ParameterAttributes AttrsImpl" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.ParameterInfo.AttrsImpl" />
      <MemberSignature Language="VB.NET" Value="Protected AttrsImpl As ParameterAttributes " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Reflection::ParameterAttributes AttrsImpl;" />
      <MemberSignature Language="F#" Value="val mutable AttrsImpl : System.Reflection.ParameterAttributes" Usage="System.Reflection.ParameterInfo.AttrsImpl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ParameterAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3d63-113">Os atributos do parâmetro.</span><span class="sxs-lookup"><span data-stu-id="a3d63-113">The attributes of the parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3d63-114">Este campo é destinado somente para os usuários que são derivar classes do `ParameterInfo`.</span><span class="sxs-lookup"><span data-stu-id="a3d63-114">This field is intended only for users who are deriving classes from `ParameterInfo`.</span></span>  
  
 <span data-ttu-id="a3d63-115">Acesso típico para atributos de parâmetro é por meio de <xref:System.Reflection.ParameterInfo.Attributes%2A>.</span><span class="sxs-lookup"><span data-stu-id="a3d63-115">Typical access to parameter attributes is through <xref:System.Reflection.ParameterInfo.Attributes%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassImpl">
      <MemberSignature Language="C#" Value="protected Type ClassImpl;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Type ClassImpl" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.ParameterInfo.ClassImpl" />
      <MemberSignature Language="VB.NET" Value="Protected ClassImpl As Type " />
      <MemberSignature Language="C++ CLI" Value="protected: Type ^ ClassImpl;" />
      <MemberSignature Language="F#" Value="val mutable ClassImpl : Type" Usage="System.Reflection.ParameterInfo.ClassImpl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3d63-116">O <see langword="Type" /> do parâmetro.</span><span class="sxs-lookup"><span data-stu-id="a3d63-116">The <see langword="Type" /> of the parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3d63-117">Este campo é destinado somente para os usuários que são derivar classes do `ParameterInfo`.</span><span class="sxs-lookup"><span data-stu-id="a3d63-117">This field is intended only for users who are deriving classes from `ParameterInfo`.</span></span>  
  
 <span data-ttu-id="a3d63-118">Acesso típico para tipos de parâmetro é por meio de <xref:System.Reflection.ParameterInfo.ParameterType%2A>.</span><span class="sxs-lookup"><span data-stu-id="a3d63-118">Typical access to parameter types is through <xref:System.Reflection.ParameterInfo.ParameterType%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomAttributes">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Reflection.CustomAttributeData&gt; CustomAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.CustomAttributeData&gt; CustomAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ParameterInfo.CustomAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CustomAttributes As IEnumerable(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Reflection::CustomAttributeData ^&gt; ^ CustomAttributes { System::Collections::Generic::IEnumerable&lt;System::Reflection::CustomAttributeData ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CustomAttributes : seq&lt;System.Reflection.CustomAttributeData&gt;" Usage="System.Reflection.ParameterInfo.CustomAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3d63-119">Obtém uma coleção que contém os atributos personalizados deste parâmetro.</span><span class="sxs-lookup"><span data-stu-id="a3d63-119">Gets a collection that contains this parameter's custom attributes.</span></span></summary>
        <value><span data-ttu-id="a3d63-120">Uma coleção que contém os atributos personalizados desse parâmetro.</span><span class="sxs-lookup"><span data-stu-id="a3d63-120">A collection that contains this parameter's custom attributes.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultValue">
      <MemberSignature Language="C#" Value="public virtual object DefaultValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ParameterInfo.DefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DefaultValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ DefaultValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultValue : obj" Usage="System.Reflection.ParameterInfo.DefaultValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3d63-121">Obtém um valor que indica o valor padrão se o parâmetro tiver um valor padrão.</span><span class="sxs-lookup"><span data-stu-id="a3d63-121">Gets a value indicating the default value if the parameter has a default value.</span></span></summary>
        <value><span data-ttu-id="a3d63-122">O valor padrão do parâmetro ou <see cref="F:System.DBNull.Value" />, se o parâmetro não tiver um valor padrão.</span><span class="sxs-lookup"><span data-stu-id="a3d63-122">The default value of the parameter, or <see cref="F:System.DBNull.Value" /> if the parameter has no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3d63-123">Essa propriedade é usada apenas no contexto de execução.</span><span class="sxs-lookup"><span data-stu-id="a3d63-123">This property is used only in the execution context.</span></span> <span data-ttu-id="a3d63-124">No contexto somente reflexão, use o <xref:System.Reflection.ParameterInfo.RawDefaultValue%2A> propriedade em vez disso.</span><span class="sxs-lookup"><span data-stu-id="a3d63-124">In the reflection-only context, use the <xref:System.Reflection.ParameterInfo.RawDefaultValue%2A> property instead.</span></span>  
  
 <span data-ttu-id="a3d63-125">O valor padrão é usado quando um valor real não for especificado na chamada do método.</span><span class="sxs-lookup"><span data-stu-id="a3d63-125">The default value is used when an actual value is not specified in the method call.</span></span> <span data-ttu-id="a3d63-126">Um parâmetro pode ter um valor padrão que é `null`.</span><span class="sxs-lookup"><span data-stu-id="a3d63-126">A parameter can have a default value that is `null`.</span></span> <span data-ttu-id="a3d63-127">Isso é diferente do caso em que um valor padrão não está definido.</span><span class="sxs-lookup"><span data-stu-id="a3d63-127">This is distinct from the case where a default value is not defined.</span></span>  
  
 <span data-ttu-id="a3d63-128">Esse método utiliza o <xref:System.Reflection.ParameterInfo.DefaultValueImpl> método.</span><span class="sxs-lookup"><span data-stu-id="a3d63-128">This method utilizes the <xref:System.Reflection.ParameterInfo.DefaultValueImpl> method.</span></span>  
  
 <span data-ttu-id="a3d63-129">Para obter o <xref:System.Reflection.ParameterInfo> matriz, primeiro obtenha o método ou o construtor e, em seguida, chamar <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a3d63-129">To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultValueImpl">
      <MemberSignature Language="C#" Value="protected object DefaultValueImpl;" />
      <MemberSignature Language="ILAsm" Value=".field family object DefaultValueImpl" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.ParameterInfo.DefaultValueImpl" />
      <MemberSignature Language="VB.NET" Value="Protected DefaultValueImpl As Object " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Object ^ DefaultValueImpl;" />
      <MemberSignature Language="F#" Value="val mutable DefaultValueImpl : obj" Usage="System.Reflection.ParameterInfo.DefaultValueImpl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3d63-130">O valor padrão do parâmetro.</span><span class="sxs-lookup"><span data-stu-id="a3d63-130">The default value of the parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3d63-131">Este campo é destinado somente para os usuários que são derivar classes do `ParameterInfo`.</span><span class="sxs-lookup"><span data-stu-id="a3d63-131">This field is intended only for users who are deriving classes from `ParameterInfo`.</span></span>  
  
 <span data-ttu-id="a3d63-132">Acesso típico para o valor padrão do parâmetro é por meio de <xref:System.Reflection.ParameterInfo.DefaultValue%2A>.</span><span class="sxs-lookup"><span data-stu-id="a3d63-132">Typical access to the default value of the parameter is through <xref:System.Reflection.ParameterInfo.DefaultValue%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a3d63-133">Obtém os atributos personalizados aplicados a este parâmetro.</span><span class="sxs-lookup"><span data-stu-id="a3d63-133">Gets the custom attributes applied to this parameter.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public virtual object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ParameterInfo.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAttributes : bool -&gt; obj[]&#xA;override this.GetCustomAttributes : bool -&gt; obj[]" Usage="parameterInfo.GetCustomAttributes inherit" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="inherit"><span data-ttu-id="a3d63-134">Este argumento é ignorado para objetos deste tipo.</span><span class="sxs-lookup"><span data-stu-id="a3d63-134">This argument is ignored for objects of this type.</span></span></param>
        <summary><span data-ttu-id="a3d63-135">Obtém todos os atributos personalizados definidos nesse parâmetro.</span><span class="sxs-lookup"><span data-stu-id="a3d63-135">Gets all the custom attributes defined on this parameter.</span></span></summary>
        <returns><span data-ttu-id="a3d63-136">Uma matriz que contém todos os atributos personalizados aplicados a esse parâmetro.</span><span class="sxs-lookup"><span data-stu-id="a3d63-136">An array that contains all the custom attributes applied to this parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3d63-137">Este método ignora o `inherit` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="a3d63-137">This method ignores the `inherit` parameter.</span></span> <span data-ttu-id="a3d63-138">Para pesquisar a cadeia de herança de atributos em parâmetros, use as sobrecargas apropriadas a <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="a3d63-138">To search the inheritance chain for attributes on parameters, use the appropriate overloads of the <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3d63-139">O exemplo a seguir mostra os atributos como personalizados que foram aplicados aos parâmetros dos métodos podem ser recuperados em tempo de execução.</span><span class="sxs-lookup"><span data-stu-id="a3d63-139">The following example shows how custom attributes that have been applied to the parameters of methods can be retrieved at run time.</span></span> <span data-ttu-id="a3d63-140">O exemplo define um atributo personalizado denominado `MyAttribute` que pode ser aplicado a parâmetros.</span><span class="sxs-lookup"><span data-stu-id="a3d63-140">The example defines a custom attribute named `MyAttribute` that can be applied to parameters.</span></span> <span data-ttu-id="a3d63-141">O exemplo, em seguida, define uma classe chamada `MyClass` com um método denominado `MyMethod`e aplica `MyAttribute` a um parâmetro do método.</span><span class="sxs-lookup"><span data-stu-id="a3d63-141">The example then defines a class named `MyClass` with a method named `MyMethod`, and applies `MyAttribute` to a parameter of the method.</span></span>  
  
 <span data-ttu-id="a3d63-142">Quando o exemplo for executado, ele usa o <xref:System.Reflection.ParameterInfo.GetCustomAttributes%28System.Boolean%29> método para recuperar os atributos personalizados que foram aplicados a todos os parâmetros de todos os métodos em `MyClass`e os exibe no console.</span><span class="sxs-lookup"><span data-stu-id="a3d63-142">When the example is run, it uses the <xref:System.Reflection.ParameterInfo.GetCustomAttributes%28System.Boolean%29> method to retrieve the custom attributes that have been applied to all parameters of all methods in `MyClass`, and displays them at the console.</span></span>  
  
 [!code-cpp[ParameterInfo_GetCustomAttributes#1](~/samples/snippets/cpp/VS_Snippets_CLR/ParameterInfo_GetCustomAttributes/CPP/source.cpp#1)]
 [!code-csharp[ParameterInfo_GetCustomAttributes#1](~/samples/snippets/csharp/VS_Snippets_CLR/ParameterInfo_GetCustomAttributes/CS/source.cs#1)]
 [!code-vb[ParameterInfo_GetCustomAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParameterInfo_GetCustomAttributes/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="a3d63-143">Um tipo de atributo personalizado não pôde ser carregado.</span><span class="sxs-lookup"><span data-stu-id="a3d63-143">A custom attribute type could not be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public virtual object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ParameterInfo.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAttributes : Type * bool -&gt; obj[]&#xA;override this.GetCustomAttributes : Type * bool -&gt; obj[]" Usage="parameterInfo.GetCustomAttributes (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Type,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="inherit" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="a3d63-144">Os atributos personalizados identificados por tipo.</span><span class="sxs-lookup"><span data-stu-id="a3d63-144">The custom attributes identified by type.</span></span></param>
        <param name="inherit"><span data-ttu-id="a3d63-145">Este argumento é ignorado para objetos deste tipo.</span><span class="sxs-lookup"><span data-stu-id="a3d63-145">This argument is ignored for objects of this type.</span></span></param>
        <summary><span data-ttu-id="a3d63-146">Obtém os atributos personalizados do tipo especificado ou seus tipos derivados que são aplicados a esse parâmetro.</span><span class="sxs-lookup"><span data-stu-id="a3d63-146">Gets the custom attributes of the specified type or its derived types that are applied to this parameter.</span></span></summary>
        <returns><span data-ttu-id="a3d63-147">Uma matriz que contém os atributos personalizados do tipo especificado ou seus tipos derivados.</span><span class="sxs-lookup"><span data-stu-id="a3d63-147">An array that contains the custom attributes of the specified type or its derived types.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3d63-148">Este método ignora o `inherit` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="a3d63-148">This method ignores the `inherit` parameter.</span></span> <span data-ttu-id="a3d63-149">Para pesquisar a cadeia de herança de atributos em parâmetros, use as sobrecargas apropriadas a <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="a3d63-149">To search the inheritance chain for attributes on parameters, use the appropriate overloads of the <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a3d63-150">O tipo deve ser um tipo fornecido pelo sistema de tempo de execução subjacente.</span><span class="sxs-lookup"><span data-stu-id="a3d63-150">The type must be a type provided by the underlying runtime system.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a3d63-151"><paramref name="attributeType" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a3d63-151"><paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="a3d63-152">Um tipo de atributo personalizado não pôde ser carregado.</span><span class="sxs-lookup"><span data-stu-id="a3d63-152">A custom attribute type could not be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributesData">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributesData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributesData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ParameterInfo.GetCustomAttributesData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomAttributesData () As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributesData();" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAttributesData : unit -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;&#xA;override this.GetCustomAttributesData : unit -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="parameterInfo.GetCustomAttributesData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3d63-153">Retorna uma lista de objetos <see cref="T:System.Reflection.CustomAttributeData" /> para o parâmetro atual, que pode ser usado no contexto somente para reflexão.</span><span class="sxs-lookup"><span data-stu-id="a3d63-153">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects for the current parameter, which can be used in the reflection-only context.</span></span></summary>
        <returns><span data-ttu-id="a3d63-154">Uma lista genérica de objetos <see cref="T:System.Reflection.CustomAttributeData" /> que representam dados sobre os atributos que foram aplicados ao parâmetro atual.</span><span class="sxs-lookup"><span data-stu-id="a3d63-154">A generic list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the current parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3d63-155">Use esse método para examinar os atributos personalizados de código no contexto somente reflexão, em casos em que os atributos personalizados em si são definidos no código que é carregado no contexto somente reflexão.</span><span class="sxs-lookup"><span data-stu-id="a3d63-155">Use this method to examine the custom attributes of code in the reflection-only context, in cases where the custom attributes themselves are defined in code that is loaded into the reflection-only context.</span></span> <span data-ttu-id="a3d63-156">Métodos como <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType> e <xref:System.Reflection.ParameterInfo.GetCustomAttributes%2A?displayProperty=nameWithType> não pode ser usado em tais casos, pois elas criam instâncias dos atributos.</span><span class="sxs-lookup"><span data-stu-id="a3d63-156">Methods such as <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType> and <xref:System.Reflection.ParameterInfo.GetCustomAttributes%2A?displayProperty=nameWithType> cannot be used in such cases, because they create instances of the attributes.</span></span> <span data-ttu-id="a3d63-157">O código no contexto somente reflexão não pode ser executado.</span><span class="sxs-lookup"><span data-stu-id="a3d63-157">Code in the reflection-only context cannot be executed.</span></span> <span data-ttu-id="a3d63-158">Para obter mais informações e exemplo de código, consulte o <xref:System.Reflection.CustomAttributeData> classe.</span><span class="sxs-lookup"><span data-stu-id="a3d63-158">For more information and example code, see the <xref:System.Reflection.CustomAttributeData> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOptionalCustomModifiers">
      <MemberSignature Language="C#" Value="public virtual Type[] GetOptionalCustomModifiers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetOptionalCustomModifiers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ParameterInfo.GetOptionalCustomModifiers" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOptionalCustomModifiers () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Type ^&gt; ^ GetOptionalCustomModifiers();" />
      <MemberSignature Language="F#" Value="abstract member GetOptionalCustomModifiers : unit -&gt; Type[]&#xA;override this.GetOptionalCustomModifiers : unit -&gt; Type[]" Usage="parameterInfo.GetOptionalCustomModifiers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3d63-159">Obtém os modificadores personalizados opcionais do parâmetro.</span><span class="sxs-lookup"><span data-stu-id="a3d63-159">Gets the optional custom modifiers of the parameter.</span></span></summary>
        <returns><span data-ttu-id="a3d63-160">Uma matriz de objetos <see cref="T:System.Type" /> que identificam os modificadores personalizados opcionais do parâmetro atual, como <see cref="T:System.Runtime.CompilerServices.IsConst" /> ou <see cref="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" />.</span><span class="sxs-lookup"><span data-stu-id="a3d63-160">An array of <see cref="T:System.Type" /> objects that identify the optional custom modifiers of the current parameter, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3d63-161">O <xref:System.Reflection.ParameterInfo.GetOptionalCustomModifiers%2A> e <xref:System.Reflection.ParameterInfo.GetRequiredCustomModifiers%2A> métodos são fornecidos para designers de compiladores gerenciados.</span><span class="sxs-lookup"><span data-stu-id="a3d63-161">The <xref:System.Reflection.ParameterInfo.GetOptionalCustomModifiers%2A> and <xref:System.Reflection.ParameterInfo.GetRequiredCustomModifiers%2A> methods are provided for designers of managed compilers.</span></span> <span data-ttu-id="a3d63-162">Para obter mais informações sobre os modificadores personalizados, consulte <xref:System.Runtime.CompilerServices.IsBoxed> e classes relacionadas no <xref:System.Runtime.CompilerServices> namespace e a especificação de metadados na documentação do ECMA partição II.</span><span class="sxs-lookup"><span data-stu-id="a3d63-162">For more information on custom modifiers, see <xref:System.Runtime.CompilerServices.IsBoxed> and related classes in the <xref:System.Runtime.CompilerServices> namespace, and the metadata specification in the ECMA Partition II documentation.</span></span> <span data-ttu-id="a3d63-163">A documentação está disponível online; confira [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212), no MSDN, e [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552), no site internacional da Ecma.</span><span class="sxs-lookup"><span data-stu-id="a3d63-163">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRealObject">
      <MemberSignature Language="C#" Value="public object GetRealObject (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetRealObject(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ParameterInfo.GetRealObject(System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRealObject (context As StreamingContext) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetRealObject(System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetRealObject : System.Runtime.Serialization.StreamingContext -&gt; obj&#xA;override this.GetRealObject : System.Runtime.Serialization.StreamingContext -&gt; obj" Usage="parameterInfo.GetRealObject context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IObjectReference.GetRealObject(System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="a3d63-164">O fluxo serializado do qual o objeto atual é desserializado.</span><span class="sxs-lookup"><span data-stu-id="a3d63-164">The serialized stream from which the current object is deserialized.</span></span></param>
        <summary><span data-ttu-id="a3d63-165">Retorna o objeto real que deve ser desserializado, em vez do objeto especificado pelo fluxo serializado.</span><span class="sxs-lookup"><span data-stu-id="a3d63-165">Returns the real object that should be deserialized instead of the object that the serialized stream specifies.</span></span></summary>
        <returns><span data-ttu-id="a3d63-166">O objeto real que é colocado no grafo.</span><span class="sxs-lookup"><span data-stu-id="a3d63-166">The actual object that is put into the graph.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3d63-167">Este método implementa o método <xref:System.Runtime.Serialization.IObjectReference.GetRealObject%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a3d63-167">This method implements the <xref:System.Runtime.Serialization.IObjectReference.GetRealObject%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="a3d63-168">A posição do parâmetro na lista de parâmetros de seu membro associado não é válida para o tipo desse membro.</span><span class="sxs-lookup"><span data-stu-id="a3d63-168">The parameter's position in the parameter list of its associated member is not valid for that member's type.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="a3d63-169">Requer confiança total para o chamador imediato.</span><span class="sxs-lookup"><span data-stu-id="a3d63-169">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="a3d63-170">Este membro não pode ser usado pelo código transparente ou parcialmente confiável.</span><span class="sxs-lookup"><span data-stu-id="a3d63-170">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetRequiredCustomModifiers">
      <MemberSignature Language="C#" Value="public virtual Type[] GetRequiredCustomModifiers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetRequiredCustomModifiers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ParameterInfo.GetRequiredCustomModifiers" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRequiredCustomModifiers () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Type ^&gt; ^ GetRequiredCustomModifiers();" />
      <MemberSignature Language="F#" Value="abstract member GetRequiredCustomModifiers : unit -&gt; Type[]&#xA;override this.GetRequiredCustomModifiers : unit -&gt; Type[]" Usage="parameterInfo.GetRequiredCustomModifiers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3d63-171">Obtém os modificadores personalizados necessários do parâmetro.</span><span class="sxs-lookup"><span data-stu-id="a3d63-171">Gets the required custom modifiers of the parameter.</span></span></summary>
        <returns><span data-ttu-id="a3d63-172">Uma matriz de objetos <see cref="T:System.Type" /> que identificam os modificadores personalizados obrigatórios do parâmetro atual, como <see cref="T:System.Runtime.CompilerServices.IsConst" /> ou <see cref="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" />.</span><span class="sxs-lookup"><span data-stu-id="a3d63-172">An array of <see cref="T:System.Type" /> objects that identify the required custom modifiers of the current parameter, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3d63-173">O <xref:System.Reflection.ParameterInfo.GetOptionalCustomModifiers%2A> e <xref:System.Reflection.ParameterInfo.GetRequiredCustomModifiers%2A> métodos são fornecidos para designers de compiladores gerenciados.</span><span class="sxs-lookup"><span data-stu-id="a3d63-173">The <xref:System.Reflection.ParameterInfo.GetOptionalCustomModifiers%2A> and <xref:System.Reflection.ParameterInfo.GetRequiredCustomModifiers%2A> methods are provided for designers of managed compilers.</span></span> <span data-ttu-id="a3d63-174">Para obter mais informações sobre os modificadores personalizados, consulte <xref:System.Runtime.CompilerServices.IsBoxed> e classes relacionadas no <xref:System.Runtime.CompilerServices> namespace e a especificação de metadados na documentação do ECMA partição II.</span><span class="sxs-lookup"><span data-stu-id="a3d63-174">For more information on custom modifiers, see <xref:System.Runtime.CompilerServices.IsBoxed> and related classes in the <xref:System.Runtime.CompilerServices> namespace, and the metadata specification in the ECMA Partition II documentation.</span></span> <span data-ttu-id="a3d63-175">A documentação está disponível online; confira [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212), no MSDN, e [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552), no site internacional da Ecma.</span><span class="sxs-lookup"><span data-stu-id="a3d63-175">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDefaultValue">
      <MemberSignature Language="C#" Value="public virtual bool HasDefaultValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasDefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ParameterInfo.HasDefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasDefaultValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasDefaultValue { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasDefaultValue : bool" Usage="System.Reflection.ParameterInfo.HasDefaultValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3d63-176">Obtém um valor que indica se esse parâmetro tem um valor padrão.</span><span class="sxs-lookup"><span data-stu-id="a3d63-176">Gets a value that indicates whether this parameter has a default value.</span></span></summary>
        <value><span data-ttu-id="a3d63-177"><see langword="true" /> Se esse parâmetro tem um valor padrão: Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a3d63-177"><see langword="true" /> if this parameter has a default value; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public virtual bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ParameterInfo.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="abstract member IsDefined : Type * bool -&gt; bool&#xA;override this.IsDefined : Type * bool -&gt; bool" Usage="parameterInfo.IsDefined (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.IsDefined(System.Type,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="inherit" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="a3d63-178">O objeto <see langword="Type" /> a ser pesquisado.</span><span class="sxs-lookup"><span data-stu-id="a3d63-178">The <see langword="Type" /> object to search for.</span></span></param>
        <param name="inherit"><span data-ttu-id="a3d63-179">Este argumento é ignorado para objetos deste tipo.</span><span class="sxs-lookup"><span data-stu-id="a3d63-179">This argument is ignored for objects of this type.</span></span></param>
        <summary><span data-ttu-id="a3d63-180">Determina se o atributo personalizado do tipo especificado ou seus tipos derivados é aplicado a esse parâmetro.</span><span class="sxs-lookup"><span data-stu-id="a3d63-180">Determines whether the custom attribute of the specified type or its derived types is applied to this parameter.</span></span></summary>
        <returns><span data-ttu-id="a3d63-181"><see langword="true" /> se uma ou mais instâncias de <paramref name="attributeType" /> ou seus tipos derivados forem aplicadas a esse parâmetro; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a3d63-181"><see langword="true" /> if one or more instances of <paramref name="attributeType" /> or its derived types are applied to this parameter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3d63-182">Este método ignora o `inherit` parâmetro.</span><span class="sxs-lookup"><span data-stu-id="a3d63-182">This method ignores the `inherit` parameter.</span></span> <span data-ttu-id="a3d63-183">Para pesquisar a cadeia de herança de atributos em parâmetros, use as sobrecargas apropriadas a <xref:System.Attribute.IsDefined%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="a3d63-183">To search the inheritance chain for attributes on parameters, use the appropriate overloads of the <xref:System.Attribute.IsDefined%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3d63-184">O exemplo a seguir define dois atributos personalizados, `MyAttribute` e `MyDerivedAttribute`.</span><span class="sxs-lookup"><span data-stu-id="a3d63-184">The following example defines two custom attributes, `MyAttribute` and `MyDerivedAttribute`.</span></span> <span data-ttu-id="a3d63-185">`MyDerivedAttribute` é derivado de `MyAttribute`.</span><span class="sxs-lookup"><span data-stu-id="a3d63-185">`MyDerivedAttribute` is derived from `MyAttribute`.</span></span> <span data-ttu-id="a3d63-186">O exemplo aplica então esses atributos para os parâmetros de um método de uma classe de exemplo.</span><span class="sxs-lookup"><span data-stu-id="a3d63-186">The example then applies these attributes to the parameters of a method of an example class.</span></span>  
  
 <span data-ttu-id="a3d63-187">Quando o exemplo for executado, ele usa o <xref:System.Reflection.ParameterInfo.IsDefined%2A> método para testar todos os parâmetros de todos os métodos na classe de exemplo.</span><span class="sxs-lookup"><span data-stu-id="a3d63-187">When the example is run, it uses the <xref:System.Reflection.ParameterInfo.IsDefined%2A> method to test all parameters of all methods in the example class.</span></span> <span data-ttu-id="a3d63-188">Ele então exibe os parâmetros que têm `MyAttribute` ou `MyDerivedAttribute`.</span><span class="sxs-lookup"><span data-stu-id="a3d63-188">It then displays the parameters that have `MyAttribute` or `MyDerivedAttribute`.</span></span>  
  
 [!code-cpp[ParameterInfo_GetCustomAttribute_IsDefined#1](~/samples/snippets/cpp/VS_Snippets_CLR/ParameterInfo_GetCustomAttribute_IsDefined/CPP/ParameterInfo_GetCustomAttribute_IsDefined.cpp#1)]
 [!code-csharp[ParameterInfo_GetCustomAttribute_IsDefined#1](~/samples/snippets/csharp/VS_Snippets_CLR/ParameterInfo_GetCustomAttribute_IsDefined/CS/parameterinfo_getcustomattribute_isdefined.cs#1)]
 [!code-vb[ParameterInfo_GetCustomAttribute_IsDefined#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParameterInfo_GetCustomAttribute_IsDefined/VB/parameterinfo_getcustomattribute_isdefined.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a3d63-189"><paramref name="attributeType" /> é <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a3d63-189"><paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a3d63-190"><paramref name="attributeType" /> não é um objeto <see cref="T:System.Type" /> fornecido pelo Common Language Runtime.</span><span class="sxs-lookup"><span data-stu-id="a3d63-190"><paramref name="attributeType" /> is not a <see cref="T:System.Type" /> object supplied by the common language runtime.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsIn">
      <MemberSignature Language="C#" Value="public bool IsIn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsIn" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ParameterInfo.IsIn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsIn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsIn { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsIn : bool" Usage="System.Reflection.ParameterInfo.IsIn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3d63-191">Obtém um valor que indica se esse é um parâmetro de entrada.</span><span class="sxs-lookup"><span data-stu-id="a3d63-191">Gets a value indicating whether this is an input parameter.</span></span></summary>
        <value><span data-ttu-id="a3d63-192"><see langword="true" /> se o parâmetro for um parâmetro de entrada; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a3d63-192"><see langword="true" /> if the parameter is an input parameter; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3d63-193">Esse método depende de um sinalizador de metadados opcionais.</span><span class="sxs-lookup"><span data-stu-id="a3d63-193">This method depends on an optional metadata flag.</span></span> <span data-ttu-id="a3d63-194">Este sinalizador pode ser inserido, compiladores, mas os compiladores não estão obrigados a fazê-lo.</span><span class="sxs-lookup"><span data-stu-id="a3d63-194">This flag can be inserted by compilers, but the compilers are not obligated to do so.</span></span>  
  
 <span data-ttu-id="a3d63-195">Esse método utiliza o `In` do sinalizador do `ParameterAttributes` enumerador.</span><span class="sxs-lookup"><span data-stu-id="a3d63-195">This method utilizes the `In` flag of the `ParameterAttributes` enumerator.</span></span>  
  
 <span data-ttu-id="a3d63-196">Para obter o <xref:System.Reflection.ParameterInfo> matriz, primeiro obtenha o método ou o construtor e, em seguida, chamar <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a3d63-196">To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3d63-197">O exemplo a seguir mostra como testar os parâmetros de método para o <xref:System.Reflection.ParameterAttributes.In?displayProperty=nameWithType>, <xref:System.Reflection.ParameterAttributes.Out?displayProperty=nameWithType>, e <xref:System.Reflection.ParameterAttributes.Optional?displayProperty=nameWithType> atributos.</span><span class="sxs-lookup"><span data-stu-id="a3d63-197">The following example shows how to test method parameters for the <xref:System.Reflection.ParameterAttributes.In?displayProperty=nameWithType>, <xref:System.Reflection.ParameterAttributes.Out?displayProperty=nameWithType>, and <xref:System.Reflection.ParameterAttributes.Optional?displayProperty=nameWithType> attributes.</span></span>  
  
 <span data-ttu-id="a3d63-198">O exemplo contém um `DefineMethod` método que faz o seguinte:</span><span class="sxs-lookup"><span data-stu-id="a3d63-198">The example contains a `DefineMethod` method that does the following:</span></span>  
  
-   <span data-ttu-id="a3d63-199">Cria um assembly dinâmico que contém um `MyType` tipo.</span><span class="sxs-lookup"><span data-stu-id="a3d63-199">Creates a dynamic assembly containing a `MyType` type.</span></span>  
  
-   <span data-ttu-id="a3d63-200">Adiciona uma `MyMethod` método para `MyType`.</span><span class="sxs-lookup"><span data-stu-id="a3d63-200">Adds a `MyMethod` method to `MyType`.</span></span> <span data-ttu-id="a3d63-201">`MyMethod` tem três parâmetros.</span><span class="sxs-lookup"><span data-stu-id="a3d63-201">`MyMethod` has three parameters.</span></span> <span data-ttu-id="a3d63-202">O primeiro parâmetro é definido com <xref:System.Reflection.ParameterAttributes.In?displayProperty=nameWithType>, o segundo com <xref:System.Reflection.ParameterAttributes.Out?displayProperty=nameWithType>e o terceiro com <xref:System.Reflection.ParameterAttributes.Optional?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a3d63-202">The first parameter is defined with <xref:System.Reflection.ParameterAttributes.In?displayProperty=nameWithType>, the second with <xref:System.Reflection.ParameterAttributes.Out?displayProperty=nameWithType>, and the third with <xref:System.Reflection.ParameterAttributes.Optional?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="a3d63-203">Chamadas <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A?displayProperty=nameWithType> para concluir o tipo.</span><span class="sxs-lookup"><span data-stu-id="a3d63-203">Calls <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A?displayProperty=nameWithType> to complete the type.</span></span>  
  
 <span data-ttu-id="a3d63-204">Após a execução `DefineMethod`, o exemplo pesquisa os assemblies que estão atualmente carregados até encontrar o assembly dinâmico.</span><span class="sxs-lookup"><span data-stu-id="a3d63-204">After executing `DefineMethod`, the example searches the assemblies that are currently loaded until it finds the dynamic assembly.</span></span> <span data-ttu-id="a3d63-205">Ele carrega `MyType` do assembly, obtém um <xref:System.Reflection.MethodInfo> do objeto para o `MyMethod` método e examina os parâmetros.</span><span class="sxs-lookup"><span data-stu-id="a3d63-205">It loads `MyType` from the assembly, gets a <xref:System.Reflection.MethodInfo> object for the `MyMethod` method, and examines the parameters.</span></span> <span data-ttu-id="a3d63-206">O exemplo usa o <xref:System.Reflection.ParameterInfo.IsIn%2A>, <xref:System.Reflection.ParameterInfo.IsOut%2A>, e <xref:System.Reflection.ParameterInfo.IsOptional%2A> propriedades para exibir informações sobre os parâmetros.</span><span class="sxs-lookup"><span data-stu-id="a3d63-206">The example uses the <xref:System.Reflection.ParameterInfo.IsIn%2A>, <xref:System.Reflection.ParameterInfo.IsOut%2A>, and <xref:System.Reflection.ParameterInfo.IsOptional%2A> properties to display information about the parameters.</span></span>  
  
 [!code-cpp[ParameterInfo_IsIn_IsOut_IsOptional#1](~/samples/snippets/cpp/VS_Snippets_CLR/ParameterInfo_IsIn_IsOut_IsOptional/CPP/ParameterInfo_IsIn_IsOut_IsOptional.cpp#1)]
 [!code-csharp[ParameterInfo_IsIn_IsOut_IsOptional#1](~/samples/snippets/csharp/VS_Snippets_CLR/ParameterInfo_IsIn_IsOut_IsOptional/CS/parameterinfo_isin_isout_isoptional.cs#1)]
 [!code-vb[ParameterInfo_IsIn_IsOut_IsOptional#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParameterInfo_IsIn_IsOut_IsOptional/VB/parameterinfo_isin_isout_isoptional.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLcid">
      <MemberSignature Language="C#" Value="public bool IsLcid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLcid" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ParameterInfo.IsLcid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLcid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLcid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLcid : bool" Usage="System.Reflection.ParameterInfo.IsLcid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3d63-207">Obtém um valor que indica se esse parâmetro é um LCID (identificador de localidade).</span><span class="sxs-lookup"><span data-stu-id="a3d63-207">Gets a value indicating whether this parameter is a locale identifier (lcid).</span></span></summary>
        <value><span data-ttu-id="a3d63-208"><see langword="true" /> Se o parâmetro é um identificador de localidade; Caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a3d63-208"><see langword="true" /> if the parameter is a locale identifier; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3d63-209">Esse método depende de um sinalizador de metadados opcionais.</span><span class="sxs-lookup"><span data-stu-id="a3d63-209">This method depends on an optional metadata flag.</span></span> <span data-ttu-id="a3d63-210">Este sinalizador pode ser inserido, compiladores, mas os compiladores não estão obrigados a fazê-lo.</span><span class="sxs-lookup"><span data-stu-id="a3d63-210">This flag can be inserted by compilers, but the compilers are not obligated to do so.</span></span>  
  
 <span data-ttu-id="a3d63-211">Esse método utiliza o `Lcid` do sinalizador do `ParameterAttributes` enumerador.</span><span class="sxs-lookup"><span data-stu-id="a3d63-211">This method utilizes the `Lcid` flag of the `ParameterAttributes` enumerator.</span></span>  
  
 <span data-ttu-id="a3d63-212">Para obter o <xref:System.Reflection.ParameterInfo> matriz, primeiro obtenha o método ou o construtor e, em seguida, chamar <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a3d63-212">To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOptional">
      <MemberSignature Language="C#" Value="public bool IsOptional { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOptional" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ParameterInfo.IsOptional" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOptional As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOptional { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOptional : bool" Usage="System.Reflection.ParameterInfo.IsOptional" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3d63-213">Obtém um valor que indica se esse parâmetro é opcional.</span><span class="sxs-lookup"><span data-stu-id="a3d63-213">Gets a value indicating whether this parameter is optional.</span></span></summary>
        <value><span data-ttu-id="a3d63-214"><see langword="true" /> se o parâmetro for opcional; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a3d63-214"><see langword="true" /> if the parameter is optional; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3d63-215">Esse método depende de um sinalizador de metadados opcionais.</span><span class="sxs-lookup"><span data-stu-id="a3d63-215">This method depends on an optional metadata flag.</span></span> <span data-ttu-id="a3d63-216">Este sinalizador pode ser inserido, compiladores, mas os compiladores não estão obrigados a fazê-lo.</span><span class="sxs-lookup"><span data-stu-id="a3d63-216">This flag can be inserted by compilers, but the compilers are not obligated to do so.</span></span>  
  
 <span data-ttu-id="a3d63-217">Esse método utiliza o `Optional` do sinalizador do `ParameterAttributes` enumerador.</span><span class="sxs-lookup"><span data-stu-id="a3d63-217">This method utilizes the `Optional` flag of the `ParameterAttributes` enumerator.</span></span>  
  
 <span data-ttu-id="a3d63-218">Para obter o <xref:System.Reflection.ParameterInfo> matriz, primeiro obtenha o método e, em seguida, chamar <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a3d63-218">To get the <xref:System.Reflection.ParameterInfo> array, first get the method and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3d63-219">O exemplo a seguir mostra como testar os parâmetros de método para o <xref:System.Reflection.ParameterAttributes.In?displayProperty=nameWithType>, <xref:System.Reflection.ParameterAttributes.Out?displayProperty=nameWithType>, e <xref:System.Reflection.ParameterAttributes.Optional?displayProperty=nameWithType> atributos.</span><span class="sxs-lookup"><span data-stu-id="a3d63-219">The following example shows how to test method parameters for the <xref:System.Reflection.ParameterAttributes.In?displayProperty=nameWithType>, <xref:System.Reflection.ParameterAttributes.Out?displayProperty=nameWithType>, and <xref:System.Reflection.ParameterAttributes.Optional?displayProperty=nameWithType> attributes.</span></span>  
  
 <span data-ttu-id="a3d63-220">O exemplo contém um `DefineMethod` método que faz o seguinte:</span><span class="sxs-lookup"><span data-stu-id="a3d63-220">The example contains a `DefineMethod` method that does the following:</span></span>  
  
-   <span data-ttu-id="a3d63-221">Cria um assembly dinâmico que contém um `MyType` tipo.</span><span class="sxs-lookup"><span data-stu-id="a3d63-221">Creates a dynamic assembly containing a `MyType` type.</span></span>  
  
-   <span data-ttu-id="a3d63-222">Adiciona uma `MyMethod` método para `MyType`.</span><span class="sxs-lookup"><span data-stu-id="a3d63-222">Adds a `MyMethod` method to `MyType`.</span></span> <span data-ttu-id="a3d63-223">`MyMethod` tem três parâmetros.</span><span class="sxs-lookup"><span data-stu-id="a3d63-223">`MyMethod` has three parameters.</span></span> <span data-ttu-id="a3d63-224">O primeiro parâmetro é definido com <xref:System.Reflection.ParameterAttributes.In?displayProperty=nameWithType>, o segundo com <xref:System.Reflection.ParameterAttributes.Out?displayProperty=nameWithType>e o terceiro com <xref:System.Reflection.ParameterAttributes.Optional?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a3d63-224">The first parameter is defined with <xref:System.Reflection.ParameterAttributes.In?displayProperty=nameWithType>, the second with <xref:System.Reflection.ParameterAttributes.Out?displayProperty=nameWithType>, and the third with <xref:System.Reflection.ParameterAttributes.Optional?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="a3d63-225">Chamadas <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A?displayProperty=nameWithType> para concluir o tipo.</span><span class="sxs-lookup"><span data-stu-id="a3d63-225">Calls <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A?displayProperty=nameWithType> to complete the type.</span></span>  
  
 <span data-ttu-id="a3d63-226">Após a execução `DefineMethod`, o exemplo pesquisa os assemblies que estão atualmente carregados até encontrar o assembly dinâmico.</span><span class="sxs-lookup"><span data-stu-id="a3d63-226">After executing `DefineMethod`, the example searches the assemblies that are currently loaded until it finds the dynamic assembly.</span></span> <span data-ttu-id="a3d63-227">Ele carrega `MyType` do assembly, obtém um <xref:System.Reflection.MethodInfo> do objeto para o `MyMethod` método e examina os parâmetros.</span><span class="sxs-lookup"><span data-stu-id="a3d63-227">It loads `MyType` from the assembly, gets a <xref:System.Reflection.MethodInfo> object for the `MyMethod` method, and examines the parameters.</span></span> <span data-ttu-id="a3d63-228">O exemplo usa o <xref:System.Reflection.ParameterInfo.IsIn%2A>, <xref:System.Reflection.ParameterInfo.IsOut%2A>, e <xref:System.Reflection.ParameterInfo.IsOptional%2A> propriedades para exibir informações sobre os parâmetros.</span><span class="sxs-lookup"><span data-stu-id="a3d63-228">The example uses the <xref:System.Reflection.ParameterInfo.IsIn%2A>, <xref:System.Reflection.ParameterInfo.IsOut%2A>, and <xref:System.Reflection.ParameterInfo.IsOptional%2A> properties to display information about the parameters.</span></span>  
  
 [!code-cpp[ParameterInfo_IsIn_IsOut_IsOptional#1](~/samples/snippets/cpp/VS_Snippets_CLR/ParameterInfo_IsIn_IsOut_IsOptional/CPP/ParameterInfo_IsIn_IsOut_IsOptional.cpp#1)]
 [!code-csharp[ParameterInfo_IsIn_IsOut_IsOptional#1](~/samples/snippets/csharp/VS_Snippets_CLR/ParameterInfo_IsIn_IsOut_IsOptional/CS/parameterinfo_isin_isout_isoptional.cs#1)]
 [!code-vb[ParameterInfo_IsIn_IsOut_IsOptional#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParameterInfo_IsIn_IsOut_IsOptional/VB/parameterinfo_isin_isout_isoptional.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOut">
      <MemberSignature Language="C#" Value="public bool IsOut { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOut" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ParameterInfo.IsOut" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOut As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOut { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOut : bool" Usage="System.Reflection.ParameterInfo.IsOut" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3d63-229">Obtém um valor que indica se esse é um parâmetro de saída.</span><span class="sxs-lookup"><span data-stu-id="a3d63-229">Gets a value indicating whether this is an output parameter.</span></span></summary>
        <value><span data-ttu-id="a3d63-230"><see langword="true" /> se o parâmetro for um parâmetro de saída, caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a3d63-230"><see langword="true" /> if the parameter is an output parameter; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3d63-231">Esse método depende de um sinalizador de metadados opcionais.</span><span class="sxs-lookup"><span data-stu-id="a3d63-231">This method depends on an optional metadata flag.</span></span> <span data-ttu-id="a3d63-232">Este sinalizador pode ser inserido, compiladores, mas os compiladores não estão obrigados a fazê-lo.</span><span class="sxs-lookup"><span data-stu-id="a3d63-232">This flag can be inserted by compilers, but the compilers are not obligated to do so.</span></span>  
  
 <span data-ttu-id="a3d63-233">Esse método utiliza o `Out` do sinalizador do `ParameterAttributes` enumerador.</span><span class="sxs-lookup"><span data-stu-id="a3d63-233">This method utilizes the `Out` flag of the `ParameterAttributes` enumerator.</span></span>  
  
 <span data-ttu-id="a3d63-234">Para obter o <xref:System.Reflection.ParameterInfo> matriz, primeiro obtenha o método ou o construtor e, em seguida, chamar <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a3d63-234">To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3d63-235">O exemplo a seguir mostra como testar os parâmetros de método para o <xref:System.Reflection.ParameterAttributes.In?displayProperty=nameWithType>, <xref:System.Reflection.ParameterAttributes.Out?displayProperty=nameWithType>, e <xref:System.Reflection.ParameterAttributes.Optional?displayProperty=nameWithType> atributos.</span><span class="sxs-lookup"><span data-stu-id="a3d63-235">The following example shows how to test method parameters for the <xref:System.Reflection.ParameterAttributes.In?displayProperty=nameWithType>, <xref:System.Reflection.ParameterAttributes.Out?displayProperty=nameWithType>, and <xref:System.Reflection.ParameterAttributes.Optional?displayProperty=nameWithType> attributes.</span></span>  
  
 <span data-ttu-id="a3d63-236">O exemplo contém um `DefineMethod` método que faz o seguinte:</span><span class="sxs-lookup"><span data-stu-id="a3d63-236">The example contains a `DefineMethod` method that does the following:</span></span>  
  
-   <span data-ttu-id="a3d63-237">Cria um assembly dinâmico que contém um `MyType` tipo.</span><span class="sxs-lookup"><span data-stu-id="a3d63-237">Creates a dynamic assembly containing a `MyType` type.</span></span>  
  
-   <span data-ttu-id="a3d63-238">Adiciona uma `MyMethod` método para `MyType`.</span><span class="sxs-lookup"><span data-stu-id="a3d63-238">Adds a `MyMethod` method to `MyType`.</span></span> <span data-ttu-id="a3d63-239">`MyMethod` tem três parâmetros.</span><span class="sxs-lookup"><span data-stu-id="a3d63-239">`MyMethod` has three parameters.</span></span> <span data-ttu-id="a3d63-240">O primeiro parâmetro é definido com <xref:System.Reflection.ParameterAttributes.In?displayProperty=nameWithType>, o segundo com <xref:System.Reflection.ParameterAttributes.Out?displayProperty=nameWithType>e o terceiro com <xref:System.Reflection.ParameterAttributes.Optional?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a3d63-240">The first parameter is defined with <xref:System.Reflection.ParameterAttributes.In?displayProperty=nameWithType>, the second with <xref:System.Reflection.ParameterAttributes.Out?displayProperty=nameWithType>, and the third with <xref:System.Reflection.ParameterAttributes.Optional?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="a3d63-241">Chamadas <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A?displayProperty=nameWithType> para concluir o tipo.</span><span class="sxs-lookup"><span data-stu-id="a3d63-241">Calls <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A?displayProperty=nameWithType> to complete the type.</span></span>  
  
 <span data-ttu-id="a3d63-242">Após a execução `DefineMethod`, o exemplo pesquisa os assemblies que estão atualmente carregados até encontrar o assembly dinâmico.</span><span class="sxs-lookup"><span data-stu-id="a3d63-242">After executing `DefineMethod`, the example searches the assemblies that are currently loaded until it finds the dynamic assembly.</span></span> <span data-ttu-id="a3d63-243">Ele carrega `MyType` do assembly, obtém um <xref:System.Reflection.MethodInfo> do objeto para o `MyMethod` método e examina os parâmetros.</span><span class="sxs-lookup"><span data-stu-id="a3d63-243">It loads `MyType` from the assembly, gets a <xref:System.Reflection.MethodInfo> object for the `MyMethod` method, and examines the parameters.</span></span> <span data-ttu-id="a3d63-244">O exemplo usa o <xref:System.Reflection.ParameterInfo.IsIn%2A>, <xref:System.Reflection.ParameterInfo.IsOut%2A>, e <xref:System.Reflection.ParameterInfo.IsOptional%2A> propriedades para exibir informações sobre os parâmetros.</span><span class="sxs-lookup"><span data-stu-id="a3d63-244">The example uses the <xref:System.Reflection.ParameterInfo.IsIn%2A>, <xref:System.Reflection.ParameterInfo.IsOut%2A>, and <xref:System.Reflection.ParameterInfo.IsOptional%2A> properties to display information about the parameters.</span></span>  
  
 [!code-cpp[Classic ParameterInfo.IsOut Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ParameterInfo.IsOut Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ParameterInfo.IsOut Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ParameterInfo.IsOut Example/CS/source.cs#1)]
 [!code-vb[Classic ParameterInfo.IsOut Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ParameterInfo.IsOut Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRetval">
      <MemberSignature Language="C#" Value="public bool IsRetval { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRetval" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ParameterInfo.IsRetval" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRetval As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRetval { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRetval : bool" Usage="System.Reflection.ParameterInfo.IsRetval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3d63-245">Obtém um valor que indica se este é um parâmetro <see langword="Retval" />.</span><span class="sxs-lookup"><span data-stu-id="a3d63-245">Gets a value indicating whether this is a <see langword="Retval" /> parameter.</span></span></summary>
        <value><span data-ttu-id="a3d63-246"><see langword="true" /> Se o parâmetro for um <see langword="Retval" />; caso contrário, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a3d63-246"><see langword="true" /> if the parameter is a <see langword="Retval" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3d63-247">Esse método depende de um sinalizador de metadados opcionais.</span><span class="sxs-lookup"><span data-stu-id="a3d63-247">This method depends on an optional metadata flag.</span></span> <span data-ttu-id="a3d63-248">Este sinalizador pode ser inserido, compiladores, mas os compiladores não estão obrigados a fazê-lo.</span><span class="sxs-lookup"><span data-stu-id="a3d63-248">This flag can be inserted by compilers, but the compilers are not obligated to do so.</span></span>  
  
 <span data-ttu-id="a3d63-249">Esse método utiliza o `Retval` do sinalizador do `ParameterAttributes` enumerador.</span><span class="sxs-lookup"><span data-stu-id="a3d63-249">This method utilizes the `Retval` flag of the `ParameterAttributes` enumerator.</span></span>  
  
 <span data-ttu-id="a3d63-250">Para obter o <xref:System.Reflection.ParameterInfo> matriz, primeiro obtenha o método ou o construtor e, em seguida, chamar <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a3d63-250">To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Member">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.MemberInfo Member { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MemberInfo Member" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ParameterInfo.Member" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Member As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::MemberInfo ^ Member { System::Reflection::MemberInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Member : System.Reflection.MemberInfo" Usage="System.Reflection.ParameterInfo.Member" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3d63-251">Obtém um valor que indica o membro no qual o parâmetro é implementado.</span><span class="sxs-lookup"><span data-stu-id="a3d63-251">Gets a value indicating the member in which the parameter is implemented.</span></span></summary>
        <value><span data-ttu-id="a3d63-252">O membro que é implantado o parâmetro representado por este <see cref="T:System.Reflection.ParameterInfo" />.</span><span class="sxs-lookup"><span data-stu-id="a3d63-252">The member which implanted the parameter represented by this <see cref="T:System.Reflection.ParameterInfo" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberImpl">
      <MemberSignature Language="C#" Value="protected System.Reflection.MemberInfo MemberImpl;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Reflection.MemberInfo MemberImpl" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.ParameterInfo.MemberImpl" />
      <MemberSignature Language="VB.NET" Value="Protected MemberImpl As MemberInfo " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Reflection::MemberInfo ^ MemberImpl;" />
      <MemberSignature Language="F#" Value="val mutable MemberImpl : System.Reflection.MemberInfo" Usage="System.Reflection.ParameterInfo.MemberImpl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3d63-253">O membro no qual o campo é implementado.</span><span class="sxs-lookup"><span data-stu-id="a3d63-253">The member in which the field is implemented.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3d63-254">Este campo é destinado somente para os usuários que são derivar classes do `ParameterInfo`.</span><span class="sxs-lookup"><span data-stu-id="a3d63-254">This field is intended only for users who are deriving classes from `ParameterInfo`.</span></span>  
  
 <span data-ttu-id="a3d63-255">Acesso típico para o nome do parâmetro é através de <xref:System.Reflection.ParameterInfo.Member%2A>.</span><span class="sxs-lookup"><span data-stu-id="a3d63-255">Typical access to the parameter name is through the <xref:System.Reflection.ParameterInfo.Member%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MetadataToken">
      <MemberSignature Language="C#" Value="public virtual int MetadataToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MetadataToken" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ParameterInfo.MetadataToken" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MetadataToken As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MetadataToken { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MetadataToken : int" Usage="System.Reflection.ParameterInfo.MetadataToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3d63-256">Obtém um valor que identifica esse parâmetro nos metadados.</span><span class="sxs-lookup"><span data-stu-id="a3d63-256">Gets a value that identifies this parameter in metadata.</span></span></summary>
        <value><span data-ttu-id="a3d63-257">Um valor que, em combinação com o módulo identifica exclusivamente esse parâmetro nos metadados.</span><span class="sxs-lookup"><span data-stu-id="a3d63-257">A value which, in combination with the module, uniquely identifies this parameter in metadata.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3d63-258">Para obter o módulo, use o <xref:System.Reflection.MemberInfo.Module%2A> propriedade do membro que define esse parâmetro.</span><span class="sxs-lookup"><span data-stu-id="a3d63-258">To get the module, use the <xref:System.Reflection.MemberInfo.Module%2A> property of the member that defines this parameter.</span></span>  
  
 <span data-ttu-id="a3d63-259">Os tokens obtidos usando essa propriedade podem ser passados para a API de reflexão não gerenciada.</span><span class="sxs-lookup"><span data-stu-id="a3d63-259">The tokens obtained using this property can be passed to the unmanaged Reflection API.</span></span> <span data-ttu-id="a3d63-260">Para obter mais informações, consulte [API de reflexão não gerenciada](https://msdn.microsoft.com/library/0c5bb9de-0cf6-438d-ba47-134e6c775fb8).</span><span class="sxs-lookup"><span data-stu-id="a3d63-260">For more information, please see [Unmanaged Reflection API](https://msdn.microsoft.com/library/0c5bb9de-0cf6-438d-ba47-134e6c775fb8).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ParameterInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Reflection.ParameterInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3d63-261">Obtém o nome do parâmetro.</span><span class="sxs-lookup"><span data-stu-id="a3d63-261">Gets the name of the parameter.</span></span></summary>
        <value><span data-ttu-id="a3d63-262">O nome simples desse parâmetro.</span><span class="sxs-lookup"><span data-stu-id="a3d63-262">The simple name of this parameter.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3d63-263">Essa propriedade utiliza protegido <xref:System.Reflection.ParameterInfo.NameImpl> do campo e depende de um sinalizador de metadados opcionais que pode não estar disponível em todos os compiladores.</span><span class="sxs-lookup"><span data-stu-id="a3d63-263">This property utilizes the protected <xref:System.Reflection.ParameterInfo.NameImpl> field, and depends on an optional metadata flag that might not be available in all compilers.</span></span>  
  
 <span data-ttu-id="a3d63-264">Para obter o <xref:System.Reflection.ParameterInfo> matriz, primeiro obtenha o método ou o construtor e, em seguida, chamar o <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="a3d63-264">To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call the <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType> method.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="a3d63-265">Se este <xref:System.Reflection.ParameterInfo> representa um valor de retorno (ou seja, se foram obtida usando o <xref:System.Reflection.MethodInfo.ReturnParameter%2A?displayProperty=nameWithType> propriedade), essa propriedade será `null`.</span><span class="sxs-lookup"><span data-stu-id="a3d63-265">If this <xref:System.Reflection.ParameterInfo> represents a return value (that is, if it was obtained by using the <xref:System.Reflection.MethodInfo.ReturnParameter%2A?displayProperty=nameWithType> property), this property will be `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3d63-266">O exemplo a seguir mostra como obter <xref:System.Reflection.ParameterInfo> objetos para os parâmetros de método e, em seguida, use o <xref:System.Reflection.ParameterInfo.Name%2A> propriedade para obter os nomes de parâmetro.</span><span class="sxs-lookup"><span data-stu-id="a3d63-266">The following example shows how to get <xref:System.Reflection.ParameterInfo> objects for the parameters of a method, and then use the <xref:System.Reflection.ParameterInfo.Name%2A> property to obtain the parameter names.</span></span>  
  
 [!code-cpp[Classic ParameterInfo.Name Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ParameterInfo.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ParameterInfo.Name Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ParameterInfo.Name Example/CS/source.cs#1)]
 [!code-vb[Classic ParameterInfo.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ParameterInfo.Name Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NameImpl">
      <MemberSignature Language="C#" Value="protected string NameImpl;" />
      <MemberSignature Language="ILAsm" Value=".field family string NameImpl" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.ParameterInfo.NameImpl" />
      <MemberSignature Language="VB.NET" Value="Protected NameImpl As String " />
      <MemberSignature Language="C++ CLI" Value="protected: System::String ^ NameImpl;" />
      <MemberSignature Language="F#" Value="val mutable NameImpl : string" Usage="System.Reflection.ParameterInfo.NameImpl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3d63-267">O nome do parâmetro.</span><span class="sxs-lookup"><span data-stu-id="a3d63-267">The name of the parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3d63-268">Este campo é destinado somente para os usuários que são derivar classes do `ParameterInfo`.</span><span class="sxs-lookup"><span data-stu-id="a3d63-268">This field is intended only for users who are deriving classes from `ParameterInfo`.</span></span>  
  
 <span data-ttu-id="a3d63-269">Acesso típico para o nome do parâmetro é através de <xref:System.Reflection.ParameterInfo.Name%2A>.</span><span class="sxs-lookup"><span data-stu-id="a3d63-269">Typical access to the parameter name is through the <xref:System.Reflection.ParameterInfo.Name%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterType">
      <MemberSignature Language="C#" Value="public virtual Type ParameterType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ParameterType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ParameterInfo.ParameterType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ParameterType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ParameterType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParameterType : Type" Usage="System.Reflection.ParameterInfo.ParameterType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3d63-270">Obtém o <see langword="Type" /> desse parâmetro.</span><span class="sxs-lookup"><span data-stu-id="a3d63-270">Gets the <see langword="Type" /> of this parameter.</span></span></summary>
        <value><span data-ttu-id="a3d63-271">O objeto <see langword="Type" /> que representa o <see langword="Type" /> desse parâmetro.</span><span class="sxs-lookup"><span data-stu-id="a3d63-271">The <see langword="Type" /> object that represents the <see langword="Type" /> of this parameter.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3d63-272">Esse método depende de um metadados opcionais e pode não estar disponível em todos os compiladores.</span><span class="sxs-lookup"><span data-stu-id="a3d63-272">This method depends on an optional metadata and might not be available in all compilers.</span></span>  
  
 <span data-ttu-id="a3d63-273">Para obter o <xref:System.Reflection.ParameterInfo> matriz, primeiro obtenha o método ou o construtor e, em seguida, chamar <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a3d63-273">To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3d63-274">O exemplo a seguir mostra como obter <xref:System.Reflection.ParameterInfo> objetos para os parâmetros de método e, em seguida, use o <xref:System.Reflection.ParameterInfo.ParameterType%2A> propriedade para exibir o tipo de cada parâmetro.</span><span class="sxs-lookup"><span data-stu-id="a3d63-274">The following example shows how to get <xref:System.Reflection.ParameterInfo> objects for the parameters of a method, and then use the <xref:System.Reflection.ParameterInfo.ParameterType%2A> property to display the type of each parameter.</span></span>  
  
 [!code-cpp[Classic ParameterInfo.ParameterType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ParameterInfo.ParameterType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ParameterInfo.ParameterType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ParameterInfo.ParameterType Example/CS/source.cs#1)]
 [!code-vb[Classic ParameterInfo.ParameterType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ParameterInfo.ParameterType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public virtual int Position { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Position" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ParameterInfo.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Position As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Position { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Position : int" Usage="System.Reflection.ParameterInfo.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3d63-275">Obtém a posição de base zero do parâmetro na lista de parâmetros formais.</span><span class="sxs-lookup"><span data-stu-id="a3d63-275">Gets the zero-based position of the parameter in the formal parameter list.</span></span></summary>
        <value><span data-ttu-id="a3d63-276">Um inteiro que representa a posição desse parâmetro ocupa na lista de parâmetros.</span><span class="sxs-lookup"><span data-stu-id="a3d63-276">An integer representing the position this parameter occupies in the parameter list.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3d63-277">Somente os parâmetros na assinatura do método (ou seja, na lista de parâmetros formais) são considerados ao calcular a posição.</span><span class="sxs-lookup"><span data-stu-id="a3d63-277">Only parameters in the method signature (that is, in the formal parameter list) are considered when calculating the position.</span></span> <span data-ttu-id="a3d63-278">Por exemplo, métodos, o parâmetro oculto que representa `this` (`Me` no Visual Basic) não são contados.</span><span class="sxs-lookup"><span data-stu-id="a3d63-278">For instance methods, the hidden parameter that represents `this` (`Me` in Visual Basic) is not counted.</span></span>  
  
 <span data-ttu-id="a3d63-279">Esse método utiliza o <xref:System.Reflection.ParameterInfo.PositionImpl> método.</span><span class="sxs-lookup"><span data-stu-id="a3d63-279">This method utilizes the <xref:System.Reflection.ParameterInfo.PositionImpl> method.</span></span>  
  
 <span data-ttu-id="a3d63-280">Para obter o <xref:System.Reflection.ParameterInfo> matriz, primeiro obtenha o método ou o construtor e, em seguida, chamar <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a3d63-280">To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.ParameterInfo.Name" />
      </Docs>
    </Member>
    <Member MemberName="PositionImpl">
      <MemberSignature Language="C#" Value="protected int PositionImpl;" />
      <MemberSignature Language="ILAsm" Value=".field family int32 PositionImpl" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.ParameterInfo.PositionImpl" />
      <MemberSignature Language="VB.NET" Value="Protected PositionImpl As Integer " />
      <MemberSignature Language="C++ CLI" Value="protected: int PositionImpl;" />
      <MemberSignature Language="F#" Value="val mutable PositionImpl : int" Usage="System.Reflection.ParameterInfo.PositionImpl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3d63-281">A posição de base zero do parâmetro na lista de parâmetros.</span><span class="sxs-lookup"><span data-stu-id="a3d63-281">The zero-based position of the parameter in the parameter list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3d63-282">Este campo é destinado somente para os usuários que são derivar classes do `ParameterInfo`.</span><span class="sxs-lookup"><span data-stu-id="a3d63-282">This field is intended only for users who are deriving classes from `ParameterInfo`.</span></span>  
  
 <span data-ttu-id="a3d63-283">Acesso típico para o nome do parâmetro é por meio de <xref:System.Reflection.ParameterInfo.Position%2A>.</span><span class="sxs-lookup"><span data-stu-id="a3d63-283">Typical access to the name of the parameter is through <xref:System.Reflection.ParameterInfo.Position%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RawDefaultValue">
      <MemberSignature Language="C#" Value="public virtual object RawDefaultValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object RawDefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ParameterInfo.RawDefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RawDefaultValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ RawDefaultValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RawDefaultValue : obj" Usage="System.Reflection.ParameterInfo.RawDefaultValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3d63-284">Obtém um valor que indica o valor padrão se o parâmetro tiver um valor padrão.</span><span class="sxs-lookup"><span data-stu-id="a3d63-284">Gets a value indicating the default value if the parameter has a default value.</span></span></summary>
        <value><span data-ttu-id="a3d63-285">O valor padrão do parâmetro ou <see cref="F:System.DBNull.Value" />, se o parâmetro não tiver um valor padrão.</span><span class="sxs-lookup"><span data-stu-id="a3d63-285">The default value of the parameter, or <see cref="F:System.DBNull.Value" /> if the parameter has no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3d63-286">Essa propriedade pode ser usada no contexto de execução e o contexto de somente reflexão.</span><span class="sxs-lookup"><span data-stu-id="a3d63-286">This property can be used in both the execution context and the reflection-only context.</span></span>  
  
 <span data-ttu-id="a3d63-287">O valor padrão é usado quando um valor real não for especificado na chamada do método.</span><span class="sxs-lookup"><span data-stu-id="a3d63-287">The default value is used when an actual value is not specified in the method call.</span></span> <span data-ttu-id="a3d63-288">Um parâmetro pode ter um valor padrão que é `null`.</span><span class="sxs-lookup"><span data-stu-id="a3d63-288">A parameter can have a default value that is `null`.</span></span> <span data-ttu-id="a3d63-289">Isso é diferente do caso em que um valor padrão não está definido.</span><span class="sxs-lookup"><span data-stu-id="a3d63-289">This is distinct from the case where a default value is not defined.</span></span>  
  
 <span data-ttu-id="a3d63-290">Para obter o <xref:System.Reflection.ParameterInfo> matriz, primeiro obtenha o método ou o construtor e, em seguida, chamar o <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="a3d63-290">To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call the <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.ICustomAttributeProvider.GetCustomAttributes">
      <MemberSignature Language="C#" Value="object[] ICustomAttributeProvider.GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object[] System.Reflection.ICustomAttributeProvider.GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ParameterInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function GetCustomAttributes (inherit As Boolean) As Object() Implements ICustomAttributeProvider.GetCustomAttributes" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Object ^&gt; ^ System.Reflection.ICustomAttributeProvider.GetCustomAttributes(bool inherit) = System::Reflection::ICustomAttributeProvider::GetCustomAttributes;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netstandard-1.5;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="inherit">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.ICustomAttributeProvider.GetCustomAttributes">
      <MemberSignature Language="C#" Value="object[] ICustomAttributeProvider.GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object[] System.Reflection.ICustomAttributeProvider.GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ParameterInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object() Implements ICustomAttributeProvider.GetCustomAttributes" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Object ^&gt; ^ System.Reflection.ICustomAttributeProvider.GetCustomAttributes(Type ^ attributeType, bool inherit) = System::Reflection::ICustomAttributeProvider::GetCustomAttributes;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Type,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netstandard-1.5;netstandard-1.6" />
        <Parameter Name="inherit" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netstandard-1.5;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="attributeType">To be added.</param>
        <param name="inherit">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.ICustomAttributeProvider.IsDefined">
      <MemberSignature Language="C#" Value="bool ICustomAttributeProvider.IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Reflection.ICustomAttributeProvider.IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ParameterInfo.System#Reflection#ICustomAttributeProvider#IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean Implements ICustomAttributeProvider.IsDefined" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Reflection.ICustomAttributeProvider.IsDefined(Type ^ attributeType, bool inherit) = System::Reflection::ICustomAttributeProvider::IsDefined;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.IsDefined(System.Type,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netstandard-1.5;netstandard-1.6" />
        <Parameter Name="inherit" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netstandard-1.5;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="attributeType">To be added.</param>
        <param name="inherit">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ParameterInfo.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _ParameterInfo.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ParameterInfo.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _ParameterInfo.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ParameterInfo.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_ParameterInfo::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ParameterInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid" RefType="ref" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="rgszNames" Type="System.IntPtr" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="cNames" Type="System.UInt32" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="lcid" Type="System.UInt32" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="rgDispId" Type="System.IntPtr" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="riid"><span data-ttu-id="a3d63-291">Reservado para uso futuro.</span><span class="sxs-lookup"><span data-stu-id="a3d63-291">Reserved for future use.</span></span> <span data-ttu-id="a3d63-292">Deve ser IID_NULL.</span><span class="sxs-lookup"><span data-stu-id="a3d63-292">Must be IID_NULL.</span></span></param>
        <param name="rgszNames"><span data-ttu-id="a3d63-293">Matriz passada de nomes a serem mapeados.</span><span class="sxs-lookup"><span data-stu-id="a3d63-293">Passed-in array of names to be mapped.</span></span></param>
        <param name="cNames"><span data-ttu-id="a3d63-294">Contagem dos nomes a serem mapeados.</span><span class="sxs-lookup"><span data-stu-id="a3d63-294">Count of the names to be mapped.</span></span></param>
        <param name="lcid"><span data-ttu-id="a3d63-295">O contexto de localidade no qual interpretar os nomes.</span><span class="sxs-lookup"><span data-stu-id="a3d63-295">The locale context in which to interpret the names.</span></span></param>
        <param name="rgDispId"><span data-ttu-id="a3d63-296">Matriz alocada pelo chamador que recebe os IDs correspondentes aos nomes.</span><span class="sxs-lookup"><span data-stu-id="a3d63-296">Caller-allocated array which receives the IDs corresponding to the names.</span></span></param>
        <summary><span data-ttu-id="a3d63-297">Mapeia um conjunto de nomes para um conjunto correspondente de identificadores de expedição.</span><span class="sxs-lookup"><span data-stu-id="a3d63-297">Maps a set of names to a corresponding set of dispatch identifiers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3d63-298">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="a3d63-298">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="a3d63-299">Para obter mais informações sobre `IDispatch::GetIDsOfNames`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="a3d63-299">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="a3d63-300">Não há suporte para acesso com associação tardia usando a interface <c>IDispatch</c> COM.</span><span class="sxs-lookup"><span data-stu-id="a3d63-300">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ParameterInfo.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _ParameterInfo.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ParameterInfo.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _ParameterInfo.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ParameterInfo.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_ParameterInfo::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ParameterInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="lcid" Type="System.UInt32" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="iTInfo"><span data-ttu-id="a3d63-301">As informações de tipo a serem retornadas.</span><span class="sxs-lookup"><span data-stu-id="a3d63-301">The type information to return.</span></span></param>
        <param name="lcid"><span data-ttu-id="a3d63-302">O identificador de localidade das informações do tipo.</span><span class="sxs-lookup"><span data-stu-id="a3d63-302">The locale identifier for the type information.</span></span></param>
        <param name="ppTInfo"><span data-ttu-id="a3d63-303">Recebe um ponteiro para o objeto de informações de tipo solicitado.</span><span class="sxs-lookup"><span data-stu-id="a3d63-303">Receives a pointer to the requested type information object.</span></span></param>
        <summary><span data-ttu-id="a3d63-304">Recupera as informações do tipo de um objeto, que podem ser usadas para obter informações de tipo para uma interface.</span><span class="sxs-lookup"><span data-stu-id="a3d63-304">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3d63-305">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="a3d63-305">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="a3d63-306">Para obter mais informações sobre `IDispatch::GetTypeInfo`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="a3d63-306">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="a3d63-307">Não há suporte para acesso com associação tardia usando a interface <c>IDispatch</c> COM.</span><span class="sxs-lookup"><span data-stu-id="a3d63-307">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ParameterInfo.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _ParameterInfo.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ParameterInfo.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _ParameterInfo.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ParameterInfo.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_ParameterInfo::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ParameterInfo.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32" RefType="out" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="pcTInfo"><span data-ttu-id="a3d63-308">Aponta para um local que recebe o número de interfaces de informações de tipo fornecido pelo objeto.</span><span class="sxs-lookup"><span data-stu-id="a3d63-308">Points to a location that receives the number of type information interfaces provided by the object.</span></span></param>
        <summary><span data-ttu-id="a3d63-309">Retorna o número de interfaces de informações do tipo que um objeto fornece (0 ou 1).</span><span class="sxs-lookup"><span data-stu-id="a3d63-309">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3d63-310">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="a3d63-310">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="a3d63-311">Para obter mais informações sobre `IDispatch::GetTypeInfoCount`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="a3d63-311">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="a3d63-312">Não há suporte para acesso com associação tardia usando a interface <c>IDispatch</c> COM.</span><span class="sxs-lookup"><span data-stu-id="a3d63-312">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ParameterInfo.Invoke">
      <MemberSignature Language="C#" Value="void _ParameterInfo.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ParameterInfo.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _ParameterInfo.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ParameterInfo.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_ParameterInfo::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ParameterInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="riid" Type="System.Guid" RefType="ref" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="lcid" Type="System.UInt32" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="wFlags" Type="System.Int16" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="pDispParams" Type="System.IntPtr" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="pVarResult" Type="System.IntPtr" Index="5" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" Index="6" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="puArgErr" Type="System.IntPtr" Index="7" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dispIdMember"><span data-ttu-id="a3d63-313">Identifica o membro.</span><span class="sxs-lookup"><span data-stu-id="a3d63-313">Identifies the member.</span></span></param>
        <param name="riid"><span data-ttu-id="a3d63-314">Reservado para uso futuro.</span><span class="sxs-lookup"><span data-stu-id="a3d63-314">Reserved for future use.</span></span> <span data-ttu-id="a3d63-315">Deve ser IID_NULL.</span><span class="sxs-lookup"><span data-stu-id="a3d63-315">Must be IID_NULL.</span></span></param>
        <param name="lcid"><span data-ttu-id="a3d63-316">O contexto de localidade no qual interpretar argumentos.</span><span class="sxs-lookup"><span data-stu-id="a3d63-316">The locale context in which to interpret arguments.</span></span></param>
        <param name="wFlags"><span data-ttu-id="a3d63-317">Sinalizadores que descrevem o contexto da chamada.</span><span class="sxs-lookup"><span data-stu-id="a3d63-317">Flags describing the context of the call.</span></span></param>
        <param name="pDispParams"><span data-ttu-id="a3d63-318">Ponteiro para uma estrutura contendo uma matriz de argumentos, uma matriz de DISPIDs de argumento para argumentos nomeados e contagens para o número de elementos nas matrizes.</span><span class="sxs-lookup"><span data-stu-id="a3d63-318">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span></span></param>
        <param name="pVarResult"><span data-ttu-id="a3d63-319">Ponteiro para o local onde o resultado deve ser armazenado.</span><span class="sxs-lookup"><span data-stu-id="a3d63-319">Pointer to the location where the result is to be stored.</span></span></param>
        <param name="pExcepInfo"><span data-ttu-id="a3d63-320">Ponteiro para uma estrutura que contém informações de exceção.</span><span class="sxs-lookup"><span data-stu-id="a3d63-320">Pointer to a structure that contains exception information.</span></span></param>
        <param name="puArgErr"><span data-ttu-id="a3d63-321">O índice do primeiro argumento que tem um erro.</span><span class="sxs-lookup"><span data-stu-id="a3d63-321">The index of the first argument that has an error.</span></span></param>
        <summary><span data-ttu-id="a3d63-322">Fornece acesso a propriedades e métodos expostos por um objeto.</span><span class="sxs-lookup"><span data-stu-id="a3d63-322">Provides access to properties and methods exposed by an object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3d63-323">Este método é para acesso a classes gerenciadas de código não gerenciado e não deve ser chamado em código gerenciado.</span><span class="sxs-lookup"><span data-stu-id="a3d63-323">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="a3d63-324">Para obter mais informações sobre `IDispatch::Invoke`, consulte a Biblioteca MSDN.</span><span class="sxs-lookup"><span data-stu-id="a3d63-324">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="a3d63-325">Não há suporte para acesso com associação tardia usando a interface <c>IDispatch</c> COM.</span><span class="sxs-lookup"><span data-stu-id="a3d63-325">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ParameterInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="parameterInfo.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3d63-326">Obtém o tipo de parâmetro e o nome representado como uma cadeia de caracteres.</span><span class="sxs-lookup"><span data-stu-id="a3d63-326">Gets the parameter type and name represented as a string.</span></span></summary>
        <returns><span data-ttu-id="a3d63-327">Uma cadeia de caracteres que contém o tipo e o nome do parâmetro.</span><span class="sxs-lookup"><span data-stu-id="a3d63-327">A string containing the type and the name of the parameter.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>