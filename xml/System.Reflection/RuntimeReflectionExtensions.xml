<Type Name="RuntimeReflectionExtensions" FullName="System.Reflection.RuntimeReflectionExtensions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d0e08343fe4ed558886a1580ccf5544032d281e3" />
    <Meta Name="ms.sourcegitcommit" Value="d0bb31ec8354fa58c62c2a646057eec11d3e2150" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="08/17/2018" />
    <Meta Name="ms.locfileid" Value="36638426" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class RuntimeReflectionExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit RuntimeReflectionExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.RuntimeReflectionExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module RuntimeReflectionExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class RuntimeReflectionExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type RuntimeReflectionExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="dc78a-101">Fornece métodos que recuperam informações sobre tipos em tempo de execução.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dc78a-101">Provides methods that retrieve information about types at run time.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetMethodInfo">
      <MemberSignature Language="C#" Value="public static System.Reflection.MethodInfo GetMethodInfo (this Delegate del);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.MethodInfo GetMethodInfo(class System.Delegate del) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMethodInfo (del As Delegate) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Reflection::MethodInfo ^ GetMethodInfo(Delegate ^ del);" />
      <MemberSignature Language="F#" Value="static member GetMethodInfo : Delegate -&gt; System.Reflection.MethodInfo" Usage="System.Reflection.RuntimeReflectionExtensions.GetMethodInfo del" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="del" Type="System.Delegate" RefType="this" />
      </Parameters>
      <Docs>
        <param name="del">
          <span data-ttu-id="dc78a-102">O delegado a examinar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc78a-102">The delegate to examine.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc78a-103">Obtém um objeto que representa o método representado pelo delegado especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc78a-103">Gets an object that represents the method represented by the specified delegate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc78a-104">Um objeto que representa o método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc78a-104">An object that represents the method.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeBaseDefinition">
      <MemberSignature Language="C#" Value="public static System.Reflection.MethodInfo GetRuntimeBaseDefinition (this System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.MethodInfo GetRuntimeBaseDefinition(class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition(System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRuntimeBaseDefinition (method As MethodInfo) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Reflection::MethodInfo ^ GetRuntimeBaseDefinition(System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member GetRuntimeBaseDefinition : System.Reflection.MethodInfo -&gt; System.Reflection.MethodInfo" Usage="System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition method" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodInfo" RefType="this" />
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="dc78a-105">O método sobre o qual recuperar informações.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc78a-105">The method to retrieve information about.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc78a-106">Recupera um objeto que representa o método especificado na classe base direta ou indireta em que o método foi declarado pela primeira vez.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc78a-106">Retrieves an object that represents the specified method on the direct or indirect base class where the method was first declared.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc78a-107">Um objeto que representa a declaração inicial do método especificado em uma classe base.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc78a-107">An object that represents the specified method's initial declaration on a base class.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeEvent">
      <MemberSignature Language="C#" Value="public static System.Reflection.EventInfo GetRuntimeEvent (this Type type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.EventInfo GetRuntimeEvent(class System.Type type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvent(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Reflection::EventInfo ^ GetRuntimeEvent(Type ^ type, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetRuntimeEvent : Type * string -&gt; System.Reflection.EventInfo" Usage="System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvent (type, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.EventInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="dc78a-108">O tipo que contém o evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc78a-108">The type that contains the event.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="dc78a-109">O nome do evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc78a-109">The name of the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc78a-110">Recupera um objeto que representa o evento especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc78a-110">Retrieves an object that represents the specified event.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc78a-111">Um objeto que representa o evento especificado ou <see langword="null" />, se o evento não for encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc78a-111">An object that represents the specified event, or <see langword="null" /> if the event is not found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeEvents">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Reflection.EventInfo&gt; GetRuntimeEvents (this Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.EventInfo&gt; GetRuntimeEvents(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvents(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;System::Reflection::EventInfo ^&gt; ^ GetRuntimeEvents(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetRuntimeEvents : Type -&gt; seq&lt;System.Reflection.EventInfo&gt;" Usage="System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvents type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.EventInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" RefType="this" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="dc78a-112">O tipo que contém os eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc78a-112">The type that contains the events.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc78a-113">Recupera uma coleção que representa todos os eventos definidos em um tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc78a-113">Retrieves a collection that represents all the events defined on a specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc78a-114">Uma coleção de eventos para o tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc78a-114">A collection of events for the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc78a-115">Esse método retorna todos os eventos definidos no tipo especificado, incluindo instância herdada e não públicos e eventos estáticos.</span><span class="sxs-lookup"><span data-stu-id="dc78a-115">This method returns all events defined on the specified type, including inherited, non-public, instance, and static events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeField">
      <MemberSignature Language="C#" Value="public static System.Reflection.FieldInfo GetRuntimeField (this Type type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.FieldInfo GetRuntimeField(class System.Type type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeField(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Reflection::FieldInfo ^ GetRuntimeField(Type ^ type, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetRuntimeField : Type * string -&gt; System.Reflection.FieldInfo" Usage="System.Reflection.RuntimeReflectionExtensions.GetRuntimeField (type, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="dc78a-116">O tipo que contém o campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc78a-116">The type that contains the field.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="dc78a-117">O nome do campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc78a-117">The name of the field.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc78a-118">Recupera um objeto que representa um campo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc78a-118">Retrieves an object that represents a specified field.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc78a-119">Um objeto que representa o campo especificado ou <see langword="null" />, se o campo não for encontrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc78a-119">An object that represents the specified field, or <see langword="null" /> if the field is not found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeFields">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Reflection.FieldInfo&gt; GetRuntimeFields (this Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.FieldInfo&gt; GetRuntimeFields(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeFields(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;System::Reflection::FieldInfo ^&gt; ^ GetRuntimeFields(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetRuntimeFields : Type -&gt; seq&lt;System.Reflection.FieldInfo&gt;" Usage="System.Reflection.RuntimeReflectionExtensions.GetRuntimeFields type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.FieldInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" RefType="this" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="dc78a-120">O tipo que contém os campos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc78a-120">The type that contains the fields.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc78a-121">Recupera uma coleção que representa todos os campos definidos em um tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc78a-121">Retrieves a collection that represents all the fields defined on a specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc78a-122">Uma coleção de campos para o tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc78a-122">A collection of fields for the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc78a-123">Esse método retorna todos os campos que são definidos no tipo especificado, incluindo campos estáticos e instância herdada e não público.</span><span class="sxs-lookup"><span data-stu-id="dc78a-123">This method returns all fields that are defined on the specified type, including inherited, non-public, instance, and static fields.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeInterfaceMap">
      <MemberSignature Language="C#" Value="public static System.Reflection.InterfaceMapping GetRuntimeInterfaceMap (this System.Reflection.TypeInfo typeInfo, Type interfaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Reflection.InterfaceMapping GetRuntimeInterfaceMap(class System.Reflection.TypeInfo typeInfo, class System.Type interfaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeInterfaceMap(System.Reflection.TypeInfo,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Reflection::InterfaceMapping GetRuntimeInterfaceMap(System::Reflection::TypeInfo ^ typeInfo, Type ^ interfaceType);" />
      <MemberSignature Language="F#" Value="static member GetRuntimeInterfaceMap : System.Reflection.TypeInfo * Type -&gt; System.Reflection.InterfaceMapping" Usage="System.Reflection.RuntimeReflectionExtensions.GetRuntimeInterfaceMap (typeInfo, interfaceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.InterfaceMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeInfo" Type="System.Reflection.TypeInfo" RefType="this" />
        <Parameter Name="interfaceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="typeInfo">
          <span data-ttu-id="dc78a-124">O tipo para o qual recuperar um mapeamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc78a-124">The type to retrieve a mapping for.</span>
          </span>
        </param>
        <param name="interfaceType">
          <span data-ttu-id="dc78a-125">A interface para a qual recuperar um mapeamento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc78a-125">The interface to retrieve a mapping for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc78a-126">Retorna um mapeamento de interface para o tipo e para a interface especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc78a-126">Returns an interface mapping for the specified type and the specified interface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc78a-127">Um objeto que representa o mapeamento de interface para o tipo e a interface especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc78a-127">An object that represents the interface mapping for the specified interface and type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeMethod">
      <MemberSignature Language="C#" Value="public static System.Reflection.MethodInfo GetRuntimeMethod (this Type type, string name, Type[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.MethodInfo GetRuntimeMethod(class System.Type type, string name, class System.Type[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethod(System.Type,System.String,System.Type[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Reflection::MethodInfo ^ GetRuntimeMethod(Type ^ type, System::String ^ name, cli::array &lt;Type ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="static member GetRuntimeMethod : Type * string * Type[] -&gt; System.Reflection.MethodInfo" Usage="System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethod (type, name, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="parameters" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="dc78a-128">O tipo que contém o método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc78a-128">The type that contains the method.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="dc78a-129">O nome do método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc78a-129">The name of the method.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="dc78a-130">Uma matriz que contém os parâmetros do método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc78a-130">An array that contains the method's parameters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc78a-131">Recupera um objeto que representa um método especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc78a-131">Retrieves an object that represents a specified method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc78a-132">Um objeto que representa o método especificado ou <see langword="null" /> se a classe não for encontrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc78a-132">An object that represents the specified method, or <see langword="null" /> if the method is not found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeMethods">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Reflection.MethodInfo&gt; GetRuntimeMethods (this Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.MethodInfo&gt; GetRuntimeMethods(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethods(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;System::Reflection::MethodInfo ^&gt; ^ GetRuntimeMethods(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetRuntimeMethods : Type -&gt; seq&lt;System.Reflection.MethodInfo&gt;" Usage="System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethods type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.MethodInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" RefType="this" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="dc78a-133">O tipo que contém os métodos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc78a-133">The type that contains the methods.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc78a-134">Recupera uma coleção que representa todos os métodos definidos em um tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc78a-134">Retrieves a collection that represents all methods defined on a specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc78a-135">Uma coleção de métodos para o tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc78a-135">A collection of methods for the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc78a-136">Esse método retorna todos os métodos definidos no tipo especificado, incluindo a instância herdada e não públicos e métodos estáticos.</span><span class="sxs-lookup"><span data-stu-id="dc78a-136">This method returns all methods defined on the specified type, including inherited, non-public, instance, and static methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeProperties">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Reflection.PropertyInfo&gt; GetRuntimeProperties (this Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.PropertyInfo&gt; GetRuntimeProperties(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperties(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;System::Reflection::PropertyInfo ^&gt; ^ GetRuntimeProperties(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetRuntimeProperties : Type -&gt; seq&lt;System.Reflection.PropertyInfo&gt;" Usage="System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperties type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.PropertyInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" RefType="this" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="dc78a-137">O tipo que contém as propriedades.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc78a-137">The type that contains the properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc78a-138">Recupera uma coleção que representa todas as propriedades definidas em um tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc78a-138">Retrieves a collection that represents all the properties defined on a specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc78a-139">Uma coleção de propriedades para o tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc78a-139">A collection of properties for the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc78a-140">Esse método retorna todas as propriedades definidas no tipo especificado, incluindo instância herdada e não públicos e propriedades estáticas.</span><span class="sxs-lookup"><span data-stu-id="dc78a-140">This method returns all properties defined on the specified type, including inherited, non-public, instance, and static properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeProperty">
      <MemberSignature Language="C#" Value="public static System.Reflection.PropertyInfo GetRuntimeProperty (this Type type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.PropertyInfo GetRuntimeProperty(class System.Type type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperty(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Reflection::PropertyInfo ^ GetRuntimeProperty(Type ^ type, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetRuntimeProperty : Type * string -&gt; System.Reflection.PropertyInfo" Usage="System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperty (type, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="dc78a-141">O tipo que contém a propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc78a-141">The type that contains the property.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="dc78a-142">O nome da propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc78a-142">The name of the property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc78a-143">Recupera um objeto que representa uma propriedade especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc78a-143">Retrieves an object that represents a specified property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc78a-144">Um objeto que representa a propriedade especificada ou <see langword="null" /> se a propriedade não for encontrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc78a-144">An object that represents the specified property, or <see langword="null" /> if the property is not found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>