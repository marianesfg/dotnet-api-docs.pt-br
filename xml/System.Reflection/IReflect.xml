<Type Name="IReflect" FullName="System.Reflection.IReflect">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0ee28236ed05b5e16c8562811a785e42e58bbe86" />
    <Meta Name="ms.sourcegitcommit" Value="fbb23bed4669409528ea7027eeaf88a8663d0851" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="pt-BR" />
    <Meta Name="ms.lasthandoff" Value="10/11/2018" />
    <Meta Name="ms.locfileid" Value="49088637" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IReflect" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IReflect" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.IReflect" />
  <TypeSignature Language="VB.NET" Value="Public Interface IReflect" />
  <TypeSignature Language="C++ CLI" Value="public interface class IReflect" />
  <TypeSignature Language="F#" Value="type IReflect = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("AFBF15E5-C37C-11d2-B88E-00A0C9B471B8")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="cc37b-101">Interopera com a <see href="http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5">interface IDispatch</see>.</span>
      <span class="sxs-lookup">
        <span data-stu-id="cc37b-101">Interoperates with the <see href="http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5">IDispatch interface</see>.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc37b-102">O <xref:System.Reflection.IReflect> interface é usada para interoperar com o [interface IDispatch](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5).</span><span class="sxs-lookup"><span data-stu-id="cc37b-102">The <xref:System.Reflection.IReflect> interface is used to interoperate with the [IDispatch interface](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5).</span></span> <span data-ttu-id="cc37b-103"><xref:System.Reflection.IReflect> define um subconjunto de <xref:System.Type> métodos de reflexão.</span><span class="sxs-lookup"><span data-stu-id="cc37b-103"><xref:System.Reflection.IReflect> defines a subset of the <xref:System.Type> reflection methods.</span></span> <span data-ttu-id="cc37b-104">Implementar essa interface permite que um tipo personalizar seu comportamento quando o objeto está sendo acessado do COM como um `IDispatch` objeto.</span><span class="sxs-lookup"><span data-stu-id="cc37b-104">Implementing this interface enables a type to customize its behavior when the object is being accessed from COM as an `IDispatch` object.</span></span> <span data-ttu-id="cc37b-105">O <xref:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler> classe pode ser usada para realizar marshaling de um objeto que implementa <xref:System.Reflection.IReflect> ou <xref:System.Runtime.InteropServices.Expando.IExpando> um COM como `IDispatch` objeto e vice-versa.</span><span class="sxs-lookup"><span data-stu-id="cc37b-105">The <xref:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler> class can be used to marshal an object that implements <xref:System.Reflection.IReflect> or <xref:System.Runtime.InteropServices.Expando.IExpando> as a COM `IDispatch` object, and vice versa.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler" />
  </Docs>
  <Members>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo GetField (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo GetField(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetField (name As String, bindingAttr As BindingFlags) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::FieldInfo ^ GetField(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetField : string * System.Reflection.BindingFlags -&gt; System.Reflection.FieldInfo" Usage="iReflect.GetField (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="cc37b-106">O nome do campo a ser localizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-106">The name of the field to find.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="cc37b-107">Os atributos de associação usados para controlar a pesquisa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-107">The binding attributes used to control the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc37b-108">Retorna o objeto <see cref="T:System.Reflection.FieldInfo" /> corresponde ao campo e sinalizador de associação especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-108">Returns the <see cref="T:System.Reflection.FieldInfo" /> object that corresponds to the specified field and binding flag.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc37b-109">Um objeto <see cref="T:System.Reflection.FieldInfo" /> que contém as informações de campo para o objeto nomeado que atende às restrições de pesquisa especificadas em <paramref name="bindingAttr" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-109">A <see cref="T:System.Reflection.FieldInfo" /> object containing the field information for the named object that meets the search constraints specified in <paramref name="bindingAttr" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="cc37b-110">O objeto implementa vários campos com o mesmo nome.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-110">The object implements multiple fields with the same name.</span>
          </span>
        </exception>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetFields">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo[] GetFields (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo[] GetFields(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFields (bindingAttr As BindingFlags) As FieldInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::FieldInfo ^&gt; ^ GetFields(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetFields : System.Reflection.BindingFlags -&gt; System.Reflection.FieldInfo[]" Usage="iReflect.GetFields bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="cc37b-111">Os atributos de associação usados para controlar a pesquisa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-111">The binding attributes used to control the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc37b-112">Retorna uma matriz de objetos <see cref="T:System.Reflection.FieldInfo" /> que correspondem a todos os campos da classe atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-112">Returns an array of <see cref="T:System.Reflection.FieldInfo" /> objects that correspond to all fields of the current class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc37b-113">Uma matriz de objetos <see cref="T:System.Reflection.FieldInfo" /> que contêm todas as informações de campo para o objeto de reflexão que atende às restrições de pesquisa especificadas em <paramref name="bindingAttr" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-113">An array of <see cref="T:System.Reflection.FieldInfo" /> objects containing all the field information for this reflection object that meets the search constraints specified in <paramref name="bindingAttr" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc37b-114">A correspondência é baseada em um nome.</span><span class="sxs-lookup"><span data-stu-id="cc37b-114">The match is based upon a name.</span></span> <span data-ttu-id="cc37b-115">Cada campo deve ter um nome exclusivo.</span><span class="sxs-lookup"><span data-stu-id="cc37b-115">Each field must have a unique name.</span></span> <span data-ttu-id="cc37b-116">O <xref:System.Reflection.BindingFlags.NonPublic?displayProperty=nameWithType> sinalizador Especifica que os métodos não públicos são incluídos na pesquisa.</span><span class="sxs-lookup"><span data-stu-id="cc37b-116">The <xref:System.Reflection.BindingFlags.NonPublic?displayProperty=nameWithType> flag specifies that non-public methods are included in the search.</span></span> <span data-ttu-id="cc37b-117">O <xref:System.Reflection.BindingFlags.Public?displayProperty=nameWithType> sinalizador Especifica que os métodos públicos são incluídos na pesquisa.</span><span class="sxs-lookup"><span data-stu-id="cc37b-117">The <xref:System.Reflection.BindingFlags.Public?displayProperty=nameWithType> flag specifies that public methods are included in the search.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MemberInfo[] GetMember(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMember (name As String, bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMember(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetMember : string * System.Reflection.BindingFlags -&gt; System.Reflection.MemberInfo[]" Usage="iReflect.GetMember (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="cc37b-118">O nome do membro a ser localizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-118">The name of the member to find.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="cc37b-119">Os atributos de associação usados para controlar a pesquisa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-119">The binding attributes used to control the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc37b-120">Recupera uma matriz de objetos <see cref="T:System.Reflection.MemberInfo" /> correspondentes a todos os membros públicos ou a todos os membros que correspondem a um nome especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-120">Retrieves an array of <see cref="T:System.Reflection.MemberInfo" /> objects corresponding to all public members or to all members that match a specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc37b-121">Uma matriz de objetos <see cref="T:System.Reflection.MemberInfo" /> correspondentes ao parâmetro <paramref name="name" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-121">An array of <see cref="T:System.Reflection.MemberInfo" /> objects matching the <paramref name="name" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc37b-122">O <xref:System.Reflection.IReflect.GetMember%2A> método recupera uma matriz de <xref:System.Reflection.MemberInfo> objetos usando o nome e o atributo de associação que correspondem a todos os membros públicos ou todos os membros que correspondem a um nome especificado.</span><span class="sxs-lookup"><span data-stu-id="cc37b-122">The <xref:System.Reflection.IReflect.GetMember%2A> method retrieves an array of <xref:System.Reflection.MemberInfo> objects by using the name and binding attribute that correspond to all public members or to all members that match a specified name.</span></span> <span data-ttu-id="cc37b-123">No caso do nome especificado é observado ou ignorado, conforme especificado por <xref:System.Reflection.BindingFlags.IgnoreCase?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="cc37b-123">The case of the specified name is observed or ignored, as specified by <xref:System.Reflection.BindingFlags.IgnoreCase?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo[] GetMembers (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MemberInfo[] GetMembers(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMembers (bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMembers(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetMembers : System.Reflection.BindingFlags -&gt; System.Reflection.MemberInfo[]" Usage="iReflect.GetMembers bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="cc37b-124">Os atributos de associação usados para controlar a pesquisa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-124">The binding attributes used to control the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc37b-125">Recupera uma matriz de objetos <see cref="T:System.Reflection.MemberInfo" /> correspondentes a todos os membros públicos ou a todos os membros da classe atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-125">Retrieves an array of <see cref="T:System.Reflection.MemberInfo" /> objects that correspond either to all public members or to all members of the current class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc37b-126">Uma matriz de objetos <see cref="T:System.Reflection.MemberInfo" /> que contêm todas as informações de membro desse objeto de reflexão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-126">An array of <see cref="T:System.Reflection.MemberInfo" /> objects containing all the member information for this reflection object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc37b-127">Esse método recupera uma matriz de <xref:System.Reflection.MemberInfo> objetos usando o atributo de associação que corresponde a todos os membros públicos ou a todos os membros da classe atual.</span><span class="sxs-lookup"><span data-stu-id="cc37b-127">This method retrieves an array of <xref:System.Reflection.MemberInfo> objects by using the binding attribute that corresponds either to all public members or to all members of the current class.</span></span> <span data-ttu-id="cc37b-128">Retorna uma matriz de todos os membros definidos para esse objeto.</span><span class="sxs-lookup"><span data-stu-id="cc37b-128">It returns an array of all of the members defined for this object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMethod">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cc37b-129">Recupera um objeto <see cref="T:System.Reflection.MethodInfo" /> correspondente a um método especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-129">Retrieves a <see cref="T:System.Reflection.MethodInfo" /> object that corresponds to a specified method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethod (name As String, bindingAttr As BindingFlags) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetMethod : string * System.Reflection.BindingFlags -&gt; System.Reflection.MethodInfo" Usage="iReflect.GetMethod (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="cc37b-130">O nome do membro a ser localizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-130">The name of the member to find.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="cc37b-131">Os atributos de associação usados para controlar a pesquisa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-131">The binding attributes used to control the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc37b-132">Recupera um objeto <see cref="T:System.Reflection.MethodInfo" /> que corresponde a um método especificado nas restrições de pesquisa especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-132">Retrieves a <see cref="T:System.Reflection.MethodInfo" /> object that corresponds to a specified method under specified search constraints.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc37b-133">Um objeto <see cref="T:System.Reflection.MethodInfo" /> que contém as informações do método, com a correspondência baseada no nome do método e nas restrições de pesquisa especificadas em <paramref name="bindingAttr" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-133">A <see cref="T:System.Reflection.MethodInfo" /> object containing the method information, with the match being based on the method name and search constraints specified in <paramref name="bindingAttr" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="cc37b-134">O objeto implementa vários métodos com o mesmo nome.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-134">The object implements multiple methods with the same name.</span>
          </span>
        </exception>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberSignature Language="F#" Value="abstract member GetMethod : string * System.Reflection.BindingFlags * System.Reflection.Binder * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.MethodInfo" Usage="iReflect.GetMethod (name, bindingAttr, binder, types, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="cc37b-135">O nome do membro a ser localizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-135">The name of the member to find.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="cc37b-136">Os atributos de associação usados para controlar a pesquisa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-136">The binding attributes used to control the search.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="cc37b-137">Um objeto que implementa <see cref="T:System.Reflection.Binder" />, contendo as propriedades relacionadas a este método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-137">An object that implements <see cref="T:System.Reflection.Binder" />, containing properties related to this method.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="cc37b-138">Uma matriz usada para escolher entre métodos sobrecarregados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-138">An array used to choose among overloaded methods.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="cc37b-139">Uma matriz de modificadores de parâmetro usados para fazer a associação funcionar com assinaturas de parâmetro nos quais os tipos foram modificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-139">An array of parameter modifiers used to make binding work with parameter signatures in which the types have been modified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc37b-140">Recupera um objeto <see cref="T:System.Reflection.MethodInfo" /> correspondente a um método especificado, usando uma matriz <see cref="T:System.Type" /> para escolher entre métodos sobrecarregados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-140">Retrieves a <see cref="T:System.Reflection.MethodInfo" /> object corresponding to a specified method, using a <see cref="T:System.Type" /> array to choose from among overloaded methods.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc37b-141">O método solicitado que corresponde a todos os parâmetros especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-141">The requested method that matches all the specified parameters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc37b-142">O valor retornado é uma correspondência com base no nome do método, <xref:System.Reflection.BindingFlags> membro de enumeração, o tipo de conversão de tipo especificado pelo `binder` parâmetro, a sobrecarga e o <xref:System.Reflection.ParameterInfo> que descreve a assinatura do método.</span><span class="sxs-lookup"><span data-stu-id="cc37b-142">The return value is a match based on the method name, <xref:System.Reflection.BindingFlags> enum member, the kind of type conversion specified by the `binder` parameter, the overload, and the <xref:System.Reflection.ParameterInfo> that describes the signature of the method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="cc37b-143">O objeto implementa vários métodos com o mesmo nome.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-143">The object implements multiple methods with the same name.</span>
          </span>
        </exception>
        <altmember cref="T:System.Reflection.BindingFlags" />
        <altmember cref="T:System.Reflection.Binder" />
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Reflection.ParameterModifier" />
      </Docs>
    </Member>
    <Member MemberName="GetMethods">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo[] GetMethods (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo[] GetMethods(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethods (bindingAttr As BindingFlags) As MethodInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ GetMethods(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetMethods : System.Reflection.BindingFlags -&gt; System.Reflection.MethodInfo[]" Usage="iReflect.GetMethods bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="cc37b-144">Os atributos de associação usados para controlar a pesquisa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-144">The binding attributes used to control the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc37b-145">Recupera uma matriz de objetos <see cref="T:System.Reflection.MethodInfo" /> com todos os métodos públicos ou todos os métodos da classe atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-145">Retrieves an array of <see cref="T:System.Reflection.MethodInfo" /> objects with all public methods or all methods of the current class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc37b-146">Uma matriz de objetos <see cref="T:System.Reflection.MethodInfo" /> que contêm todos os métodos definidos para esse objeto de reflexão que atende às restrições de pesquisa especificadas em <paramref name="bindingAttr" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-146">An array of <see cref="T:System.Reflection.MethodInfo" /> objects containing all the methods defined for this reflection object that meet the search constraints specified in <paramref name="bindingAttr" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc37b-147">O atributo não-públicos do `bindingAttr` é indicada somente se os métodos públicos serão retornados.</span><span class="sxs-lookup"><span data-stu-id="cc37b-147">The non-public attribute of `bindingAttr` is indicated only if public methods are returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo[] GetProperties (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo[] GetProperties(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties (bindingAttr As BindingFlags) As PropertyInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::PropertyInfo ^&gt; ^ GetProperties(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetProperties : System.Reflection.BindingFlags -&gt; System.Reflection.PropertyInfo[]" Usage="iReflect.GetProperties bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="cc37b-148">O atributo de associação usado para controlar a pesquisa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-148">The binding attribute used to control the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc37b-149">Recupera uma matriz de objetos <see cref="T:System.Reflection.PropertyInfo" /> que correspondem a todas as propriedades públicas ou a todas as propriedades da classe atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-149">Retrieves an array of <see cref="T:System.Reflection.PropertyInfo" /> objects corresponding to all public properties or to all properties of the current class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc37b-150">Uma matriz de objetos <see cref="T:System.Reflection.PropertyInfo" /> para todas as propriedades definidas no objeto de reflexão.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-150">An array of <see cref="T:System.Reflection.PropertyInfo" /> objects for all the properties defined on the reflection object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProperty">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cc37b-151">Recupera um objeto <see cref="T:System.Reflection.PropertyInfo" /> correspondente a uma propriedade especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-151">Retrieves a <see cref="T:System.Reflection.PropertyInfo" /> object corresponding to a specified property.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo GetProperty (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String, bindingAttr As BindingFlags) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::PropertyInfo ^ GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : string * System.Reflection.BindingFlags -&gt; System.Reflection.PropertyInfo" Usage="iReflect.GetProperty (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="cc37b-152">O nome da propriedade a ser localizada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-152">The name of the property to find.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="cc37b-153">Os atributos de associação usados para controlar a pesquisa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-153">The binding attributes used to control the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc37b-154">Recupera um objeto <see cref="T:System.Reflection.PropertyInfo" /> que corresponde a uma propriedade especificada nas restrições de pesquisa especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-154">Retrieves a <see cref="T:System.Reflection.PropertyInfo" /> object corresponding to a specified property under specified search constraints.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc37b-155">Um objeto <see cref="T:System.Reflection.PropertyInfo" /> para a propriedade localizada que atende às restrições de pesquisa especificadas em <paramref name="bindingAttr" /> ou então <see langword="null" />, se a propriedade não foi localizada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-155">A <see cref="T:System.Reflection.PropertyInfo" /> object for the located property that meets the search constraints specified in <paramref name="bindingAttr" />, or <see langword="null" /> if the property was not located.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="cc37b-156">O objeto implementa vários campos com o mesmo nome.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-156">The object implements multiple fields with the same name.</span>
          </span>
        </exception>
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo GetProperty (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type returnType, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::PropertyInfo ^ GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, Type ^ returnType, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : string * System.Reflection.BindingFlags * System.Reflection.Binder * Type * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.PropertyInfo" Usage="iReflect.GetProperty (name, bindingAttr, binder, returnType, types, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="cc37b-157">O nome do membro a ser localizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-157">The name of the member to find.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="cc37b-158">O atributo de associação usado para controlar a pesquisa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-158">The binding attribute used to control the search.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="cc37b-159">Um objeto que implementa <see cref="T:System.Reflection.Binder" />, contendo as propriedades relacionadas a este método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-159">An object that implements <see cref="T:System.Reflection.Binder" />, containing properties related to this method.</span>
          </span>
        </param>
        <param name="returnType">
          <span data-ttu-id="cc37b-160">O tipo da propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-160">The type of the property.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="cc37b-161">Uma matriz usada para escolher entre métodos sobrecarregados com o mesmo nome.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-161">An array used to choose among overloaded methods with the same name.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="cc37b-162">Uma matriz usada para escolher os modificadores de parâmetro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-162">An array used to choose the parameter modifiers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc37b-163">Recupera um objeto <see cref="T:System.Reflection.PropertyInfo" /> que corresponde a uma propriedade especificada com as restrições de pesquisa especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-163">Retrieves a <see cref="T:System.Reflection.PropertyInfo" /> object that corresponds to a specified property with specified search constraints.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc37b-164">Um objeto <see cref="T:System.Reflection.PropertyInfo" /> para a propriedade localizada, se uma propriedade com o nome especificado foi localizada no objeto reflexão ou <see langword="null" />, se a propriedade não foi localizada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-164">A <see cref="T:System.Reflection.PropertyInfo" /> object for the located property, if a property with the specified name was located in this reflection object, or <see langword="null" /> if the property was not located.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc37b-165">Esse método recupera um <xref:System.Reflection.PropertyInfo> especificado de objeto correspondente a uma propriedade especificada nas restrições de pesquisa.</span><span class="sxs-lookup"><span data-stu-id="cc37b-165">This method retrieves a <xref:System.Reflection.PropertyInfo> object corresponding to a specified property under specified search constraints.</span></span> <span data-ttu-id="cc37b-166">Uma matriz do tipo é usada para escolher um dos métodos sobrecarregados.</span><span class="sxs-lookup"><span data-stu-id="cc37b-166">A type array is used to choose from among overloaded methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.ParameterModifier" />
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Reflection.Binder" />
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="InvokeMember">
      <MemberSignature Language="C#" Value="public object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] namedParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object InvokeMember(string name, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object target, object[] args, valuetype System.Reflection.ParameterModifier[] modifiers, class System.Globalization.CultureInfo culture, string[] namedParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ InvokeMember(System::String ^ name, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, System::Object ^ target, cli::array &lt;System::Object ^&gt; ^ args, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::String ^&gt; ^ namedParameters);" />
      <MemberSignature Language="F#" Value="abstract member InvokeMember : string * System.Reflection.BindingFlags * System.Reflection.Binder * obj * obj[] * System.Reflection.ParameterModifier[] * System.Globalization.CultureInfo * string[] -&gt; obj" Usage="iReflect.InvokeMember (name, invokeAttr, binder, target, args, modifiers, culture, namedParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="namedParameters" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="cc37b-167">O nome do membro a ser localizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-167">The name of the member to find.</span>
          </span>
        </param>
        <param name="invokeAttr">
          <span data-ttu-id="cc37b-168">Um dos atributos de invocação de <see cref="T:System.Reflection.BindingFlags" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-168">One of the <see cref="T:System.Reflection.BindingFlags" /> invocation attributes.</span>
          </span>
          <span data-ttu-id="cc37b-169">O parâmetro <c>invokeAttr</c> pode ser um construtor, método, propriedade ou campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-169">The <c>invokeAttr</c> parameter may be a constructor, method, property, or field.</span>
          </span>
          <span data-ttu-id="cc37b-170">É necessário especificar um atributo de invocação adequado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-170">A suitable invocation attribute must be specified.</span>
          </span>
          <span data-ttu-id="cc37b-171">Invoque o membro padrão de uma classe, passando a cadeia de caracteres vazia ("") como o nome do membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-171">Invoke the default member of a class by passing the empty string ("") as the name of the member.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="cc37b-172">Um dos sinalizadores de bit <see cref="T:System.Reflection.BindingFlags" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-172">One of the <see cref="T:System.Reflection.BindingFlags" /> bit flags.</span>
          </span>
          <span data-ttu-id="cc37b-173">Implementa <see cref="T:System.Reflection.Binder" />, contendo as propriedades relacionadas a este método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-173">Implements <see cref="T:System.Reflection.Binder" />, containing properties related to this method.</span>
          </span>
        </param>
        <param name="target">
          <span data-ttu-id="cc37b-174">O objeto no qual invocar o membro especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-174">The object on which to invoke the specified member.</span>
          </span>
          <span data-ttu-id="cc37b-175">Esse parâmetro é ignorado para membros estáticos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-175">This parameter is ignored for static members.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="cc37b-176">Esta é uma matriz de objetos que contém o número, a ordem e o tipo dos parâmetros do membro a ser invocado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-176">An array of objects that contains the number, order, and type of the parameters of the member to be invoked.</span>
          </span>
          <span data-ttu-id="cc37b-177">Isso é uma matriz vazia se não há nenhum parâmetro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-177">This is an empty array if there are no parameters.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="cc37b-178">Uma matriz de objetos de <see cref="T:System.Reflection.ParameterModifier" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-178">An array of <see cref="T:System.Reflection.ParameterModifier" /> objects.</span>
          </span>
          <span data-ttu-id="cc37b-179">Essa matriz tem o mesmo tamanho que o parâmetro <c>args</c>, que representa os atributos de argumento do membro invocado nos metadados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-179">This array has the same length as the <c>args</c> parameter, representing the invoked member's argument attributes in the metadata.</span>
          </span>
          <span data-ttu-id="cc37b-180">Um parâmetro pode ter os seguintes atributos: <see langword="pdIn" />, <see langword="pdOut" />, <see langword="pdRetval" />, <see langword="pdOptional" /> e <see langword="pdHasDefault" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-180">A parameter can have the following attributes: <see langword="pdIn" />, <see langword="pdOut" />, <see langword="pdRetval" />, <see langword="pdOptional" />, and <see langword="pdHasDefault" />.</span>
          </span>
          <span data-ttu-id="cc37b-181">Eles representam [In], [Out], [retval], [optional] e um parâmetro padrão, respectivamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-181">These represent [In], [Out], [retval], [optional], and a default parameter, respectively.</span>
          </span>
          <span data-ttu-id="cc37b-182">Esses atributos são usados por diversos serviços de interoperabilidade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-182">These attributes are used by various interoperability services.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="cc37b-183">Uma instância de <see cref="T:System.Globalization.CultureInfo" /> usada para determinar a coerção de tipos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-183">An instance of <see cref="T:System.Globalization.CultureInfo" /> used to govern the coercion of types.</span>
          </span>
          <span data-ttu-id="cc37b-184">Por exemplo, <c>culture</c> converte um <see langword="String" /> que representa 1000 para um valor <see langword="Double" />, uma vez que 1000 é representado de forma diferente por diferentes culturas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-184">For example, <c>culture</c> converts a <see langword="String" /> that represents 1000 to a <see langword="Double" /> value, since 1000 is represented differently by different cultures.</span>
          </span>
          <span data-ttu-id="cc37b-185">Se esse parâmetro for <see langword="null" />, será usado o <see cref="T:System.Globalization.CultureInfo" /> para o thread atual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-185">If this parameter is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
        </param>
        <param name="namedParameters">
          <span data-ttu-id="cc37b-186">Uma matriz <see langword="String" /> de parâmetros.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-186">A <see langword="String" /> array of parameters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc37b-187">Invoca um membro especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-187">Invokes a specified member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc37b-188">O membro especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-188">The specified member.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc37b-189">O método a ser invocado deve ser acessível e fornecer a correspondência mais específica com a lista de argumentos especificada, sob as restrições dos atributos associadores e de invocação especificados.</span><span class="sxs-lookup"><span data-stu-id="cc37b-189">The method that is to be invoked must be accessible and provide the most specific match with the specified argument list, under the constraints of the specified binder and invocation attributes.</span></span>  
  
 <span data-ttu-id="cc37b-190">Um método é invocado se o número de parâmetros na declaração de método é igual ao número de argumentos na lista de argumentos especificada e o tipo de cada argumento pode ser convertido pelo associador para o tipo do parâmetro.</span><span class="sxs-lookup"><span data-stu-id="cc37b-190">A method is invoked if the number of parameters in the method declaration equals the number of arguments in the specified argument list, and the type of each argument can be converted by the binder to the type of the parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc37b-191">A matriz de modificadores de parâmetro passados para o <xref:System.Reflection.IReflect.InvokeMember%2A> o método deve conter um modificador de parâmetro único.</span><span class="sxs-lookup"><span data-stu-id="cc37b-191">The array of parameter modifiers passed to the <xref:System.Reflection.IReflect.InvokeMember%2A> method must contain a single parameter modifier.</span></span> <span data-ttu-id="cc37b-192">Somente o primeiro modificador de parâmetro é considerado ao determinar qual argumento precisa ser passado por referência quando exposto COM.</span><span class="sxs-lookup"><span data-stu-id="cc37b-192">Only the first parameter modifier is considered when determining which argument needs to be passed by reference when exposed to COM.</span></span>  
  
 <span data-ttu-id="cc37b-193">O associador localiza todos os métodos de correspondentes, de acordo com o tipo de associação solicitada (<xref:System.Reflection.BindingFlags.InvokeMethod?displayProperty=nameWithType>, <xref:System.Reflection.IReflect.GetProperties%2A>e assim por diante).</span><span class="sxs-lookup"><span data-stu-id="cc37b-193">The binder finds all matching methods, in accordance with the type of binding requested (<xref:System.Reflection.BindingFlags.InvokeMethod?displayProperty=nameWithType>, <xref:System.Reflection.IReflect.GetProperties%2A>, and so on).</span></span> <span data-ttu-id="cc37b-194">O conjunto de métodos é filtrado pelo nome, número de argumentos e um conjunto de modificadores de pesquisa definidos no associador.</span><span class="sxs-lookup"><span data-stu-id="cc37b-194">The set of methods is filtered by the name, number of arguments, and a set of search modifiers defined in the binder.</span></span> <span data-ttu-id="cc37b-195">Depois que o método é selecionado, ele é invocado e acessibilidade é verificada nesse momento.</span><span class="sxs-lookup"><span data-stu-id="cc37b-195">After the method is selected, it is invoked, and accessibility is checked at that point.</span></span> <span data-ttu-id="cc37b-196">A pesquisa pode controlar qual conjunto de métodos é pesquisado com base no atributo acessibilidade associado com o método.</span><span class="sxs-lookup"><span data-stu-id="cc37b-196">The search may control which set of methods is searched based upon the accessibility attribute associated with the method.</span></span> <span data-ttu-id="cc37b-197"><xref:System.Reflection.Binder.BindToMethod%2A> Seleciona o método a ser invocado.</span><span class="sxs-lookup"><span data-stu-id="cc37b-197"><xref:System.Reflection.Binder.BindToMethod%2A> selects the method to be invoked.</span></span> <span data-ttu-id="cc37b-198">O associador padrão seleciona a correspondência mais específica.</span><span class="sxs-lookup"><span data-stu-id="cc37b-198">The default binder selects the most specific match.</span></span>  
  
 <span data-ttu-id="cc37b-199">Restrições de acesso são ignoradas para código totalmente confiável.</span><span class="sxs-lookup"><span data-stu-id="cc37b-199">Access restrictions are ignored for fully trusted code.</span></span> <span data-ttu-id="cc37b-200">Ou seja, propriedades, métodos, campos e construtores privados podem ser acessadas e invocadas por meio de reflexão, sempre que o código é totalmente confiável.</span><span class="sxs-lookup"><span data-stu-id="cc37b-200">That is, private constructors, methods, fields, and properties can be accessed and invoked through reflection whenever the code is fully trusted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc37b-201">O exemplo a seguir obtém o valor da <xref:System.DateTime.Now%2A> propriedade.</span><span class="sxs-lookup"><span data-stu-id="cc37b-201">The following example obtains the value of the <xref:System.DateTime.Now%2A> property.</span></span>  
  
 [!code-cpp[Classic IReflect.InvokeMember Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic IReflect.InvokeMember Example/CPP/source.cpp#1)]
 [!code-csharp[Classic IReflect.InvokeMember Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic IReflect.InvokeMember Example/CS/source.cs#1)]
 [!code-vb[Classic IReflect.InvokeMember Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic IReflect.InvokeMember Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cc37b-202">Mais de um argumento é especificado para um campo <see langword="set" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-202">More than one argument is specified for a field <see langword="set" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingFieldException">
          <span data-ttu-id="cc37b-203">Não é possível encontrar o campo nem a propriedade.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-203">The field or property cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="cc37b-204">Não é possível localizar o método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-204">The method cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="cc37b-205">Um membro privado é chamado sem a <see cref="T:System.Security.Permissions.ReflectionPermission" /> necessária.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-205">A private member is invoked without the necessary <see cref="T:System.Security.Permissions.ReflectionPermission" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Reflection.Binder" />
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="UnderlyingSystemType">
      <MemberSignature Language="C#" Value="public Type UnderlyingSystemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type UnderlyingSystemType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.IReflect.UnderlyingSystemType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingSystemType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ UnderlyingSystemType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingSystemType : Type" Usage="System.Reflection.IReflect.UnderlyingSystemType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cc37b-206">Obtém o tipo subjacente que representa o objeto <see cref="T:System.Reflection.IReflect" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-206">Gets the underlying type that represents the <see cref="T:System.Reflection.IReflect" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cc37b-207">O tipo subjacente que representa o <see cref="T:System.Reflection.IReflect" /> objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc37b-207">The underlying type that represents the <see cref="T:System.Reflection.IReflect" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
  </Members>
</Type>