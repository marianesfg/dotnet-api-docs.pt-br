<Type Name="ExceptionHandlingClause" FullName="System.Reflection.ExceptionHandlingClause">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1e555e688225cd5365653b93ed1a4e5e5283b907" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pt-BR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51905277" /></Metadata><TypeSignature Language="C#" Value="public class ExceptionHandlingClause" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi beforefieldinit ExceptionHandlingClause extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.ExceptionHandlingClause" />
  <TypeSignature Language="VB.NET" Value="Public Class ExceptionHandlingClause" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExceptionHandlingClause" />
  <TypeSignature Language="F#" Value="type ExceptionHandlingClause = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b99f8-101">Representa uma cláusula em um bloco de tratamento de exceções estruturado.</span><span class="sxs-lookup"><span data-stu-id="b99f8-101">Represents a clause in a structured exception-handling block.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b99f8-102">O <xref:System.Reflection.ExceptionHandlingClause> classe fornece informações sobre as cláusulas em uma `try`... `catch`...`finally`</span><span class="sxs-lookup"><span data-stu-id="b99f8-102">The <xref:System.Reflection.ExceptionHandlingClause> class provides information about the clauses in a `try`…`catch`…`finally`</span></span> <span data-ttu-id="b99f8-103">bloco (`Try`... `Catch`...`Finally`</span><span class="sxs-lookup"><span data-stu-id="b99f8-103">block (`Try`…`Catch`…`Finally`</span></span> <span data-ttu-id="b99f8-104">no Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="b99f8-104">in Visual Basic).</span></span> <span data-ttu-id="b99f8-105">Para obter uma lista de cláusulas de tratamento de exceção em um método, obter um <xref:System.Reflection.MethodInfo> que representa o método.</span><span class="sxs-lookup"><span data-stu-id="b99f8-105">To get a list of exception-handling clauses in a method, obtain a <xref:System.Reflection.MethodInfo> that represents the method.</span></span> <span data-ttu-id="b99f8-106">Use o <xref:System.Reflection.MethodBase.GetMethodBody%2A> método para obter uma <xref:System.Reflection.MethodBody> do objeto e, em seguida, use o <xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A> propriedade para obter a lista de cláusulas.</span><span class="sxs-lookup"><span data-stu-id="b99f8-106">Use the <xref:System.Reflection.MethodBase.GetMethodBody%2A> method to obtain a <xref:System.Reflection.MethodBody> object, and then use the <xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A> property to get the list of clauses.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b99f8-107">Trabalhar com as cláusulas de tratamento de exceção requer uma compreensão detalhada dos metadados e formatos de instrução do Microsoft intermediate language (MSIL).</span><span class="sxs-lookup"><span data-stu-id="b99f8-107">Working with exception-handling clauses requires a thorough understanding of metadata and Microsoft intermediate language (MSIL) instruction formats.</span></span> <span data-ttu-id="b99f8-108">Informações podem ser encontradas na documentação do Common Language Infrastructure (CLI), especialmente "Partição II: Metadata Definition and Semantics" e "Partição III: CIL Instruction Set".</span><span class="sxs-lookup"><span data-stu-id="b99f8-108">Information can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set".</span></span> <span data-ttu-id="b99f8-109">A documentação está disponível online; confira [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212), no MSDN, e [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552), no site internacional da Ecma.</span><span class="sxs-lookup"><span data-stu-id="b99f8-109">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b99f8-110">O exemplo de código a seguir define um método de teste chamado `MethodBodyExample`e exibe suas informações de variável locais e cláusulas de tratamento de exceção.</span><span class="sxs-lookup"><span data-stu-id="b99f8-110">The following code example defines a test method named `MethodBodyExample`, and displays its local variable information and exception-handling clauses.</span></span> <span data-ttu-id="b99f8-111">O <xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType> método é usado para obter um <xref:System.Reflection.MethodBody> objeto para o método de teste.</span><span class="sxs-lookup"><span data-stu-id="b99f8-111">The <xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType> method is used to obtain a <xref:System.Reflection.MethodBody> object for the test method.</span></span> <span data-ttu-id="b99f8-112">O <xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A> propriedade é usada para obter uma lista de <xref:System.Reflection.ExceptionHandlingClause> objetos e exibir suas propriedades.</span><span class="sxs-lookup"><span data-stu-id="b99f8-112">The <xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A> property is used to obtain a list of <xref:System.Reflection.ExceptionHandlingClause> objects and display their properties.</span></span>  
  
 <span data-ttu-id="b99f8-113">Você pode usar Ildasm.exe para examinar o MSIL para o exemplo de código compilado, para ver como os comprimentos e deslocamentos são calculados.</span><span class="sxs-lookup"><span data-stu-id="b99f8-113">You can use Ildasm.exe to examine the MSIL for the compiled code example, to see how the offsets and lengths are calculated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b99f8-114">Nem todas as linguagens de computador podem gerar <xref:System.Reflection.ExceptionHandlingClauseOptions.Filter?displayProperty=nameWithType> cláusulas.</span><span class="sxs-lookup"><span data-stu-id="b99f8-114">Not all computer languages can generate <xref:System.Reflection.ExceptionHandlingClauseOptions.Filter?displayProperty=nameWithType> clauses.</span></span> <span data-ttu-id="b99f8-115">O exemplo do Visual Basic mostra uma cláusula de filtro, usando um Visual Basic `When` expressão, que é omitido dos exemplos para outros idiomas.</span><span class="sxs-lookup"><span data-stu-id="b99f8-115">The Visual Basic example shows a filter clause, using a Visual Basic `When` expression, which is omitted from the examples for other languages.</span></span>  
  
 <span data-ttu-id="b99f8-116">Esse código é parte de um exemplo maior, localizado no <xref:System.Reflection.MethodBody> tópico da classe.</span><span class="sxs-lookup"><span data-stu-id="b99f8-116">This code is part of a larger example located in the <xref:System.Reflection.MethodBody> class topic.</span></span>  
  
 [!code-cpp[MethodBody#2](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#2)]
 [!code-csharp[MethodBody#2](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#2)]
 [!code-vb[MethodBody#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#2)]  
[!code-cpp[MethodBody#4](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#4)]
[!code-csharp[MethodBody#4](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#4)]
[!code-vb[MethodBody#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#4)]  
[!code-cpp[MethodBody#5](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#5)]
[!code-csharp[MethodBody#5](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#5)]
[!code-vb[MethodBody#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#5)]  
[!code-cpp[MethodBody#7](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#7)]
[!code-csharp[MethodBody#7](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#7)]
[!code-vb[MethodBody#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#7)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Reflection.MethodBody" />
    <altmember cref="P:System.Reflection.MethodBody.ExceptionHandlingClauses" />
    <altmember cref="T:System.Reflection.ExceptionHandlingClauseOptions" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExceptionHandlingClause ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ExceptionHandlingClause.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ExceptionHandlingClause();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b99f8-117">Inicializa uma nova instância da classe <see cref="T:System.Reflection.ExceptionHandlingClause" />.</span><span class="sxs-lookup"><span data-stu-id="b99f8-117">Initializes a new instance of the <see cref="T:System.Reflection.ExceptionHandlingClause" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b99f8-118">Este construtor é chamado por classes derivadas durante a construção do <xref:System.Reflection.ExceptionHandlingClause> objetos.</span><span class="sxs-lookup"><span data-stu-id="b99f8-118">This constructor is invoked by derived classes during the construction of <xref:System.Reflection.ExceptionHandlingClause> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CatchType">
      <MemberSignature Language="C#" Value="public virtual Type CatchType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type CatchType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ExceptionHandlingClause.CatchType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CatchType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ CatchType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CatchType : Type" Usage="System.Reflection.ExceptionHandlingClause.CatchType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b99f8-119">Obtém o tipo da exceção tratada por essa cláusula.</span><span class="sxs-lookup"><span data-stu-id="b99f8-119">Gets the type of exception handled by this clause.</span></span></summary>
        <value><span data-ttu-id="b99f8-120">Um <see cref="T:System.Type" /> objeto que representa o tipo de exceção tratada por essa cláusula, ou <see langword="null" /> se o <see cref="P:System.Reflection.ExceptionHandlingClause.Flags" /> é de propriedade <see cref="F:System.Reflection.ExceptionHandlingClauseOptions.Filter" /> ou <see cref="F:System.Reflection.ExceptionHandlingClauseOptions.Finally" />.</span><span class="sxs-lookup"><span data-stu-id="b99f8-120">A <see cref="T:System.Type" /> object that represents that type of exception handled by this clause, or <see langword="null" /> if the <see cref="P:System.Reflection.ExceptionHandlingClause.Flags" /> property is <see cref="F:System.Reflection.ExceptionHandlingClauseOptions.Filter" /> or <see cref="F:System.Reflection.ExceptionHandlingClauseOptions.Finally" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b99f8-121">Trabalhar com as cláusulas de tratamento de exceção requer uma compreensão detalhada dos metadados e formatos de instrução do Microsoft intermediate language (MSIL).</span><span class="sxs-lookup"><span data-stu-id="b99f8-121">Working with exception-handling clauses requires a thorough understanding of metadata and Microsoft intermediate language (MSIL) instruction formats.</span></span> <span data-ttu-id="b99f8-122">Informações podem ser encontradas na documentação do Common Language Infrastructure (CLI), especialmente "Partição II: Metadata Definition and Semantics" e "Partição III: CIL Instruction Set".</span><span class="sxs-lookup"><span data-stu-id="b99f8-122">Information can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set".</span></span> <span data-ttu-id="b99f8-123">A documentação está disponível online; confira [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212), no MSDN, e [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552), no site internacional da Ecma.</span><span class="sxs-lookup"><span data-stu-id="b99f8-123">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b99f8-124">O exemplo de código a seguir define um método de teste chamado `MethodBodyExample`e exibe suas informações de variável locais e cláusulas de tratamento de exceção.</span><span class="sxs-lookup"><span data-stu-id="b99f8-124">The following code example defines a test method named `MethodBodyExample`, and displays its local variable information and exception-handling clauses.</span></span> <span data-ttu-id="b99f8-125">O <xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType> método é usado para obter um <xref:System.Reflection.MethodBody> objeto para o método de teste.</span><span class="sxs-lookup"><span data-stu-id="b99f8-125">The <xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType> method is used to obtain a <xref:System.Reflection.MethodBody> object for the test method.</span></span> <span data-ttu-id="b99f8-126">O <xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A> propriedade é usada para obter uma lista de <xref:System.Reflection.ExceptionHandlingClause> objetos e exibir suas propriedades.</span><span class="sxs-lookup"><span data-stu-id="b99f8-126">The <xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A> property is used to obtain a list of <xref:System.Reflection.ExceptionHandlingClause> objects and display their properties.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b99f8-127">Nem todas as linguagens de computador podem gerar <xref:System.Reflection.ExceptionHandlingClauseOptions.Filter?displayProperty=nameWithType> cláusulas.</span><span class="sxs-lookup"><span data-stu-id="b99f8-127">Not all computer languages can generate <xref:System.Reflection.ExceptionHandlingClauseOptions.Filter?displayProperty=nameWithType> clauses.</span></span> <span data-ttu-id="b99f8-128">O exemplo do Visual Basic mostra uma cláusula de filtro, usando um Visual Basic `When` expressão, que é omitido dos exemplos para outros idiomas.</span><span class="sxs-lookup"><span data-stu-id="b99f8-128">The Visual Basic example shows a filter clause, using a Visual Basic `When` expression, which is omitted from the examples for other languages.</span></span>  
  
 <span data-ttu-id="b99f8-129">Esse código é parte de um exemplo maior, localizado no <xref:System.Reflection.MethodBody> tópico da classe.</span><span class="sxs-lookup"><span data-stu-id="b99f8-129">This code is part of a larger example located in the <xref:System.Reflection.MethodBody> class topic.</span></span>  
  
 [!code-cpp[MethodBody#2](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#2)]
 [!code-csharp[MethodBody#2](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#2)]
 [!code-vb[MethodBody#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#2)]  
[!code-cpp[MethodBody#4](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#4)]
[!code-csharp[MethodBody#4](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#4)]
[!code-vb[MethodBody#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#4)]  
[!code-cpp[MethodBody#5](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#5)]
[!code-csharp[MethodBody#5](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#5)]
[!code-vb[MethodBody#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#5)]  
[!code-cpp[MethodBody#7](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#7)]
[!code-csharp[MethodBody#7](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#7)]
[!code-vb[MethodBody#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b99f8-130">Uso inválido da propriedade para o estado atual do objeto.</span><span class="sxs-lookup"><span data-stu-id="b99f8-130">Invalid use of property for the object's current state.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FilterOffset">
      <MemberSignature Language="C#" Value="public virtual int FilterOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FilterOffset" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ExceptionHandlingClause.FilterOffset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FilterOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int FilterOffset { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FilterOffset : int" Usage="System.Reflection.ExceptionHandlingClause.FilterOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b99f8-131">Obtém o deslocamento dentro do corpo do método, em bytes, do código do filtro fornecido pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="b99f8-131">Gets the offset within the method body, in bytes, of the user-supplied filter code.</span></span></summary>
        <value><span data-ttu-id="b99f8-132">O deslocamento dentro do corpo do método, em bytes, do código do filtro fornecido pelo usuário.</span><span class="sxs-lookup"><span data-stu-id="b99f8-132">The offset within the method body, in bytes, of the user-supplied filter code.</span></span> <span data-ttu-id="b99f8-133">O valor dessa propriedade não tem nenhum significado se o <see cref="P:System.Reflection.ExceptionHandlingClause.Flags" /> propriedade tiver qualquer valor diferente de <see cref="F:System.Reflection.ExceptionHandlingClauseOptions.Filter" />.</span><span class="sxs-lookup"><span data-stu-id="b99f8-133">The value of this property has no meaning if the <see cref="P:System.Reflection.ExceptionHandlingClause.Flags" /> property has any value other than <see cref="F:System.Reflection.ExceptionHandlingClauseOptions.Filter" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b99f8-134">Uma cláusula de filtro contém usuário suppliedMicrosoft intermediate language (MSIL) que determina se uma exceção é manipulada por esta cláusula.</span><span class="sxs-lookup"><span data-stu-id="b99f8-134">A filter clause contains user-suppliedMicrosoft intermediate language (MSIL) that determines whether an exception is handled by this clause.</span></span> <span data-ttu-id="b99f8-135">Por exemplo, qualquer cláusula que contém o Visual Basic `When` palavra-chave é um <xref:System.Reflection.ExceptionHandlingClauseOptions.Filter?displayProperty=nameWithType> cláusula.</span><span class="sxs-lookup"><span data-stu-id="b99f8-135">For example, any clause containing the Visual Basic `When` keyword is a <xref:System.Reflection.ExceptionHandlingClauseOptions.Filter?displayProperty=nameWithType> clause.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b99f8-136">Trabalhar com as cláusulas de tratamento de exceção requer uma compreensão completa de formatos de instrução MSIL e metadados.</span><span class="sxs-lookup"><span data-stu-id="b99f8-136">Working with exception-handling clauses requires a thorough understanding of metadata and MSIL instruction formats.</span></span> <span data-ttu-id="b99f8-137">Informações podem ser encontradas na documentação do Common Language Infrastructure (CLI), especialmente "Partição II: Metadata Definition and Semantics" e "Partição III: CIL Instruction Set".</span><span class="sxs-lookup"><span data-stu-id="b99f8-137">Information can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set".</span></span> <span data-ttu-id="b99f8-138">A documentação está disponível online; confira [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212), no MSDN, e [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552), no site internacional da Ecma.</span><span class="sxs-lookup"><span data-stu-id="b99f8-138">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b99f8-139">Não é possível obter o deslocamento porque a cláusula de tratamento de exceção não é um filtro.</span><span class="sxs-lookup"><span data-stu-id="b99f8-139">Cannot get the offset because the exception handling clause is not a filter.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.ExceptionHandlingClauseOptions Flags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.ExceptionHandlingClauseOptions Flags" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ExceptionHandlingClause.Flags" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Flags As ExceptionHandlingClauseOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::ExceptionHandlingClauseOptions Flags { System::Reflection::ExceptionHandlingClauseOptions get(); };" />
      <MemberSignature Language="F#" Value="member this.Flags : System.Reflection.ExceptionHandlingClauseOptions" Usage="System.Reflection.ExceptionHandlingClause.Flags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ExceptionHandlingClauseOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b99f8-140">Obtém um valor que indica se esta cláusula de manipulação de exceção é uma cláusula finally, uma cláusula filtrada por tipo ou uma cláusula filtrada por usuário.</span><span class="sxs-lookup"><span data-stu-id="b99f8-140">Gets a value indicating whether this exception-handling clause is a finally clause, a type-filtered clause, or a user-filtered clause.</span></span></summary>
        <value><span data-ttu-id="b99f8-141">Um <see cref="T:System.Reflection.ExceptionHandlingClauseOptions" /> valor que indica que tipo de ação realiza a essa cláusula.</span><span class="sxs-lookup"><span data-stu-id="b99f8-141">An <see cref="T:System.Reflection.ExceptionHandlingClauseOptions" /> value that indicates what kind of action this clause performs.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b99f8-142">Trabalhar com as cláusulas de tratamento de exceção requer uma compreensão detalhada dos metadados e formatos de instrução do Microsoft intermediate language (MSIL).</span><span class="sxs-lookup"><span data-stu-id="b99f8-142">Working with exception-handling clauses requires a thorough understanding of metadata and Microsoft intermediate language (MSIL) instruction formats.</span></span> <span data-ttu-id="b99f8-143">Informações podem ser encontradas na documentação do Common Language Infrastructure (CLI), especialmente "Partição II: Metadata Definition and Semantics" e "Partição III: CIL Instruction Set".</span><span class="sxs-lookup"><span data-stu-id="b99f8-143">Information can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set".</span></span> <span data-ttu-id="b99f8-144">A documentação está disponível online; confira [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212), no MSDN, e [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552), no site internacional da Ecma.</span><span class="sxs-lookup"><span data-stu-id="b99f8-144">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b99f8-145">O exemplo de código a seguir define um método de teste chamado `MethodBodyExample`e exibe suas informações de variável locais e cláusulas de tratamento de exceção.</span><span class="sxs-lookup"><span data-stu-id="b99f8-145">The following code example defines a test method named `MethodBodyExample`, and displays its local variable information and exception-handling clauses.</span></span> <span data-ttu-id="b99f8-146">O <xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType> método é usado para obter um <xref:System.Reflection.MethodBody> objeto para o método de teste.</span><span class="sxs-lookup"><span data-stu-id="b99f8-146">The <xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType> method is used to obtain a <xref:System.Reflection.MethodBody> object for the test method.</span></span> <span data-ttu-id="b99f8-147">O <xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A> propriedade é usada para obter uma lista de <xref:System.Reflection.ExceptionHandlingClause> objetos e exibir suas propriedades.</span><span class="sxs-lookup"><span data-stu-id="b99f8-147">The <xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A> property is used to obtain a list of <xref:System.Reflection.ExceptionHandlingClause> objects and display their properties.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b99f8-148">Nem todas as linguagens de computador podem gerar <xref:System.Reflection.ExceptionHandlingClauseOptions.Filter?displayProperty=nameWithType> cláusulas.</span><span class="sxs-lookup"><span data-stu-id="b99f8-148">Not all computer languages can generate <xref:System.Reflection.ExceptionHandlingClauseOptions.Filter?displayProperty=nameWithType> clauses.</span></span> <span data-ttu-id="b99f8-149">O exemplo do Visual Basic mostra uma cláusula de filtro, usando um Visual Basic `When` expressão, que é omitido dos exemplos para outros idiomas.</span><span class="sxs-lookup"><span data-stu-id="b99f8-149">The Visual Basic example shows a filter clause, using a Visual Basic `When` expression, which is omitted from the examples for other languages.</span></span>  
  
 <span data-ttu-id="b99f8-150">Esse código é parte de um exemplo maior, localizado no <xref:System.Reflection.MethodBody> tópico da classe.</span><span class="sxs-lookup"><span data-stu-id="b99f8-150">This code is part of a larger example located in the <xref:System.Reflection.MethodBody> class topic.</span></span>  
  
 [!code-cpp[MethodBody#2](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#2)]
 [!code-csharp[MethodBody#2](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#2)]
 [!code-vb[MethodBody#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#2)]  
[!code-cpp[MethodBody#4](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#4)]
[!code-csharp[MethodBody#4](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#4)]
[!code-vb[MethodBody#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#4)]  
[!code-cpp[MethodBody#5](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#5)]
[!code-csharp[MethodBody#5](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#5)]
[!code-vb[MethodBody#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#5)]  
[!code-cpp[MethodBody#7](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#7)]
[!code-csharp[MethodBody#7](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#7)]
[!code-vb[MethodBody#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.ExceptionHandlingClauseOptions" />
      </Docs>
    </Member>
    <Member MemberName="HandlerLength">
      <MemberSignature Language="C#" Value="public virtual int HandlerLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HandlerLength" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ExceptionHandlingClause.HandlerLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HandlerLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int HandlerLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.HandlerLength : int" Usage="System.Reflection.ExceptionHandlingClause.HandlerLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b99f8-151">Obtém o comprimento, em bytes, do corpo dessa cláusula de tratamento de exceção.</span><span class="sxs-lookup"><span data-stu-id="b99f8-151">Gets the length, in bytes, of the body of this exception-handling clause.</span></span></summary>
        <value><span data-ttu-id="b99f8-152">Um inteiro que representa o comprimento, em bytes, do MSIL que constitui o corpo dessa cláusula de tratamento de exceção.</span><span class="sxs-lookup"><span data-stu-id="b99f8-152">An integer that represents the length, in bytes, of the MSIL that forms the body of this exception-handling clause.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b99f8-153">Trabalhar com as cláusulas de tratamento de exceção requer uma compreensão detalhada dos metadados e formatos de instrução do Microsoft intermediate language (MSIL).</span><span class="sxs-lookup"><span data-stu-id="b99f8-153">Working with exception-handling clauses requires a thorough understanding of metadata and Microsoft intermediate language (MSIL) instruction formats.</span></span> <span data-ttu-id="b99f8-154">Informações podem ser encontradas na documentação do Common Language Infrastructure (CLI), especialmente "Partição II: Metadata Definition and Semantics" e "Partição III: CIL Instruction Set".</span><span class="sxs-lookup"><span data-stu-id="b99f8-154">Information can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set".</span></span> <span data-ttu-id="b99f8-155">A documentação está disponível online; confira [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212), no MSDN, e [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552), no site internacional da Ecma.</span><span class="sxs-lookup"><span data-stu-id="b99f8-155">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b99f8-156">O exemplo de código a seguir define um método de teste chamado `MethodBodyExample`e exibe suas informações de variável locais e cláusulas de tratamento de exceção.</span><span class="sxs-lookup"><span data-stu-id="b99f8-156">The following code example defines a test method named `MethodBodyExample`, and displays its local variable information and exception-handling clauses.</span></span> <span data-ttu-id="b99f8-157">O <xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType> método é usado para obter um <xref:System.Reflection.MethodBody> objeto para o método de teste.</span><span class="sxs-lookup"><span data-stu-id="b99f8-157">The <xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType> method is used to obtain a <xref:System.Reflection.MethodBody> object for the test method.</span></span> <span data-ttu-id="b99f8-158">O <xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A> propriedade é usada para obter uma lista de <xref:System.Reflection.ExceptionHandlingClause> objetos e exibir suas propriedades.</span><span class="sxs-lookup"><span data-stu-id="b99f8-158">The <xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A> property is used to obtain a list of <xref:System.Reflection.ExceptionHandlingClause> objects and display their properties.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b99f8-159">Nem todas as linguagens de computador podem gerar <xref:System.Reflection.ExceptionHandlingClauseOptions.Filter?displayProperty=nameWithType> cláusulas.</span><span class="sxs-lookup"><span data-stu-id="b99f8-159">Not all computer languages can generate <xref:System.Reflection.ExceptionHandlingClauseOptions.Filter?displayProperty=nameWithType> clauses.</span></span> <span data-ttu-id="b99f8-160">O exemplo do Visual Basic mostra uma cláusula de filtro, usando um Visual Basic `When` expressão, que é omitido dos exemplos para outros idiomas.</span><span class="sxs-lookup"><span data-stu-id="b99f8-160">The Visual Basic example shows a filter clause, using a Visual Basic `When` expression, which is omitted from the examples for other languages.</span></span>  
  
 <span data-ttu-id="b99f8-161">Esse código é parte de um exemplo maior, localizado no <xref:System.Reflection.MethodBody> tópico da classe.</span><span class="sxs-lookup"><span data-stu-id="b99f8-161">This code is part of a larger example located in the <xref:System.Reflection.MethodBody> class topic.</span></span>  
  
 [!code-cpp[MethodBody#2](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#2)]
 [!code-csharp[MethodBody#2](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#2)]
 [!code-vb[MethodBody#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#2)]  
[!code-cpp[MethodBody#4](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#4)]
[!code-csharp[MethodBody#4](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#4)]
[!code-vb[MethodBody#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#4)]  
[!code-cpp[MethodBody#5](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#5)]
[!code-csharp[MethodBody#5](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#5)]
[!code-vb[MethodBody#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#5)]  
[!code-cpp[MethodBody#7](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#7)]
[!code-csharp[MethodBody#7](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#7)]
[!code-vb[MethodBody#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HandlerOffset">
      <MemberSignature Language="C#" Value="public virtual int HandlerOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HandlerOffset" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ExceptionHandlingClause.HandlerOffset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HandlerOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int HandlerOffset { int get(); };" />
      <MemberSignature Language="F#" Value="member this.HandlerOffset : int" Usage="System.Reflection.ExceptionHandlingClause.HandlerOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b99f8-162">Obtém o deslocamento dentro do corpo do método, em bytes, dessa cláusula de tratamento de exceção.</span><span class="sxs-lookup"><span data-stu-id="b99f8-162">Gets the offset within the method body, in bytes, of this exception-handling clause.</span></span></summary>
        <value><span data-ttu-id="b99f8-163">Um inteiro que representa o deslocamento dentro do corpo do método, em bytes, dessa cláusula de tratamento de exceção.</span><span class="sxs-lookup"><span data-stu-id="b99f8-163">An integer that represents the offset within the method body, in bytes, of this exception-handling clause.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b99f8-164">Trabalhar com as cláusulas de tratamento de exceção requer uma compreensão detalhada dos metadados e formatos de instrução do Microsoft intermediate language (MSIL).</span><span class="sxs-lookup"><span data-stu-id="b99f8-164">Working with exception-handling clauses requires a thorough understanding of metadata and Microsoft intermediate language (MSIL) instruction formats.</span></span> <span data-ttu-id="b99f8-165">Informações podem ser encontradas na documentação do Common Language Infrastructure (CLI), especialmente "Partição II: Metadata Definition and Semantics" e "Partição III: CIL Instruction Set".</span><span class="sxs-lookup"><span data-stu-id="b99f8-165">Information can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set".</span></span> <span data-ttu-id="b99f8-166">A documentação está disponível online; confira [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212), no MSDN, e [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552), no site internacional da Ecma.</span><span class="sxs-lookup"><span data-stu-id="b99f8-166">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b99f8-167">O exemplo de código a seguir define um método de teste chamado `MethodBodyExample`e exibe suas informações de variável locais e cláusulas de tratamento de exceção.</span><span class="sxs-lookup"><span data-stu-id="b99f8-167">The following code example defines a test method named `MethodBodyExample`, and displays its local variable information and exception-handling clauses.</span></span> <span data-ttu-id="b99f8-168">O <xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType> método é usado para obter um <xref:System.Reflection.MethodBody> objeto para o método de teste.</span><span class="sxs-lookup"><span data-stu-id="b99f8-168">The <xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType> method is used to obtain a <xref:System.Reflection.MethodBody> object for the test method.</span></span> <span data-ttu-id="b99f8-169">O <xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A> propriedade é usada para obter uma lista de <xref:System.Reflection.ExceptionHandlingClause> objetos e exibir suas propriedades.</span><span class="sxs-lookup"><span data-stu-id="b99f8-169">The <xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A> property is used to obtain a list of <xref:System.Reflection.ExceptionHandlingClause> objects and display their properties.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b99f8-170">Nem todas as linguagens de computador podem gerar <xref:System.Reflection.ExceptionHandlingClauseOptions.Filter?displayProperty=nameWithType> cláusulas.</span><span class="sxs-lookup"><span data-stu-id="b99f8-170">Not all computer languages can generate <xref:System.Reflection.ExceptionHandlingClauseOptions.Filter?displayProperty=nameWithType> clauses.</span></span> <span data-ttu-id="b99f8-171">O exemplo do Visual Basic mostra uma cláusula de filtro, usando um Visual Basic `When` expressão, que é omitido dos exemplos para outros idiomas.</span><span class="sxs-lookup"><span data-stu-id="b99f8-171">The Visual Basic example shows a filter clause, using a Visual Basic `When` expression, which is omitted from the examples for other languages.</span></span>  
  
 <span data-ttu-id="b99f8-172">Esse código é parte de um exemplo maior, localizado no <xref:System.Reflection.MethodBody> tópico da classe.</span><span class="sxs-lookup"><span data-stu-id="b99f8-172">This code is part of a larger example located in the <xref:System.Reflection.MethodBody> class topic.</span></span>  
  
 [!code-cpp[MethodBody#2](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#2)]
 [!code-csharp[MethodBody#2](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#2)]
 [!code-vb[MethodBody#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#2)]  
[!code-cpp[MethodBody#4](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#4)]
[!code-csharp[MethodBody#4](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#4)]
[!code-vb[MethodBody#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#4)]  
[!code-cpp[MethodBody#5](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#5)]
[!code-csharp[MethodBody#5](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#5)]
[!code-vb[MethodBody#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#5)]  
[!code-cpp[MethodBody#7](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#7)]
[!code-csharp[MethodBody#7](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#7)]
[!code-vb[MethodBody#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ExceptionHandlingClause.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="exceptionHandlingClause.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b99f8-173">Uma representação de cadeia de caracteres da cláusula de tratamento de exceção.</span><span class="sxs-lookup"><span data-stu-id="b99f8-173">A string representation of the exception-handling clause.</span></span></summary>
        <returns><span data-ttu-id="b99f8-174">Uma cadeia de caracteres que lista os valores de propriedade adequados para o tipo de cláusula de filtro.</span><span class="sxs-lookup"><span data-stu-id="b99f8-174">A string that lists appropriate property values for the filter clause type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryLength">
      <MemberSignature Language="C#" Value="public virtual int TryLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TryLength" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ExceptionHandlingClause.TryLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TryLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TryLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TryLength : int" Usage="System.Reflection.ExceptionHandlingClause.TryLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b99f8-175">O comprimento total, em bytes, do bloco try que inclui a cláusula de tratamento de exceção.</span><span class="sxs-lookup"><span data-stu-id="b99f8-175">The total length, in bytes, of the try block that includes this exception-handling clause.</span></span></summary>
        <value><span data-ttu-id="b99f8-176">O comprimento total, em bytes, do bloco try que inclui a cláusula de tratamento de exceção.</span><span class="sxs-lookup"><span data-stu-id="b99f8-176">The total length, in bytes, of the try block that includes this exception-handling clause.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b99f8-177">Um inteiro que representa o tamanho total, em bytes, do bloco try que inclui a cláusula de tratamento de exceção.</span><span class="sxs-lookup"><span data-stu-id="b99f8-177">An integer that represents the total length, in bytes, of the try block that includes this exception-handling clause.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b99f8-178">Trabalhar com as cláusulas de tratamento de exceção requer uma compreensão detalhada dos metadados e formatos de instrução do Microsoft intermediate language (MSIL).</span><span class="sxs-lookup"><span data-stu-id="b99f8-178">Working with exception-handling clauses requires a thorough understanding of metadata and Microsoft intermediate language (MSIL) instruction formats.</span></span> <span data-ttu-id="b99f8-179">Informações podem ser encontradas na documentação do Common Language Infrastructure (CLI), especialmente "Partição II: Metadata Definition and Semantics" e "Partição III: CIL Instruction Set".</span><span class="sxs-lookup"><span data-stu-id="b99f8-179">Information can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set".</span></span> <span data-ttu-id="b99f8-180">A documentação está disponível online; confira [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212), no MSDN, e [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552), no site internacional da Ecma.</span><span class="sxs-lookup"><span data-stu-id="b99f8-180">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b99f8-181">O exemplo de código a seguir define um método de teste chamado `MethodBodyExample`e exibe suas informações de variável locais e cláusulas de tratamento de exceção.</span><span class="sxs-lookup"><span data-stu-id="b99f8-181">The following code example defines a test method named `MethodBodyExample`, and displays its local variable information and exception-handling clauses.</span></span> <span data-ttu-id="b99f8-182">O <xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType> método é usado para obter um <xref:System.Reflection.MethodBody> objeto para o método de teste.</span><span class="sxs-lookup"><span data-stu-id="b99f8-182">The <xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType> method is used to obtain a <xref:System.Reflection.MethodBody> object for the test method.</span></span> <span data-ttu-id="b99f8-183">O <xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A> propriedade é usada para obter uma lista de <xref:System.Reflection.ExceptionHandlingClause> objetos e exibir suas propriedades.</span><span class="sxs-lookup"><span data-stu-id="b99f8-183">The <xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A> property is used to obtain a list of <xref:System.Reflection.ExceptionHandlingClause> objects and display their properties.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b99f8-184">Nem todas as linguagens de computador podem gerar <xref:System.Reflection.ExceptionHandlingClauseOptions.Filter?displayProperty=nameWithType> cláusulas.</span><span class="sxs-lookup"><span data-stu-id="b99f8-184">Not all computer languages can generate <xref:System.Reflection.ExceptionHandlingClauseOptions.Filter?displayProperty=nameWithType> clauses.</span></span> <span data-ttu-id="b99f8-185">O exemplo do Visual Basic mostra uma cláusula de filtro, usando um Visual Basic `When` expressão, que é omitido dos exemplos para outros idiomas.</span><span class="sxs-lookup"><span data-stu-id="b99f8-185">The Visual Basic example shows a filter clause, using a Visual Basic `When` expression, which is omitted from the examples for other languages.</span></span>  
  
 <span data-ttu-id="b99f8-186">Esse código é parte de um exemplo maior, localizado no <xref:System.Reflection.MethodBody> tópico da classe.</span><span class="sxs-lookup"><span data-stu-id="b99f8-186">This code is part of a larger example located in the <xref:System.Reflection.MethodBody> class topic.</span></span>  
  
 [!code-cpp[MethodBody#2](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#2)]
 [!code-csharp[MethodBody#2](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#2)]
 [!code-vb[MethodBody#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#2)]  
[!code-cpp[MethodBody#4](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#4)]
[!code-csharp[MethodBody#4](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#4)]
[!code-vb[MethodBody#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#4)]  
[!code-cpp[MethodBody#5](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#5)]
[!code-csharp[MethodBody#5](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#5)]
[!code-vb[MethodBody#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#5)]  
[!code-cpp[MethodBody#7](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#7)]
[!code-csharp[MethodBody#7](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#7)]
[!code-vb[MethodBody#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryOffset">
      <MemberSignature Language="C#" Value="public virtual int TryOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TryOffset" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ExceptionHandlingClause.TryOffset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TryOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TryOffset { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TryOffset : int" Usage="System.Reflection.ExceptionHandlingClause.TryOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b99f8-187">O deslocamento no método, em bytes, do bloco try que inclui a cláusula de tratamento de exceção.</span><span class="sxs-lookup"><span data-stu-id="b99f8-187">The offset within the method, in bytes, of the try block that includes this exception-handling clause.</span></span></summary>
        <value><span data-ttu-id="b99f8-188">Um inteiro que representa o deslocamento dentro do método, em bytes, do bloco try que inclui a cláusula de tratamento de exceção.</span><span class="sxs-lookup"><span data-stu-id="b99f8-188">An integer that represents the offset within the method, in bytes, of the try block that includes this exception-handling clause.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b99f8-189">Trabalhar com as cláusulas de tratamento de exceção requer uma compreensão detalhada dos metadados e formatos de instrução do Microsoft intermediate language (MSIL).</span><span class="sxs-lookup"><span data-stu-id="b99f8-189">Working with exception-handling clauses requires a thorough understanding of metadata and Microsoft intermediate language (MSIL) instruction formats.</span></span> <span data-ttu-id="b99f8-190">Informações podem ser encontradas na documentação do Common Language Infrastructure (CLI), especialmente "Partição II: Metadata Definition and Semantics" e "Partição III: CIL Instruction Set".</span><span class="sxs-lookup"><span data-stu-id="b99f8-190">Information can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set".</span></span> <span data-ttu-id="b99f8-191">A documentação está disponível online; confira [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212), no MSDN, e [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552), no site internacional da Ecma.</span><span class="sxs-lookup"><span data-stu-id="b99f8-191">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b99f8-192">O exemplo de código a seguir define um método de teste chamado `MethodBodyExample`e exibe suas informações de variável locais e cláusulas de tratamento de exceção.</span><span class="sxs-lookup"><span data-stu-id="b99f8-192">The following code example defines a test method named `MethodBodyExample`, and displays its local variable information and exception-handling clauses.</span></span> <span data-ttu-id="b99f8-193">O <xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType> método é usado para obter um <xref:System.Reflection.MethodBody> objeto para o método de teste.</span><span class="sxs-lookup"><span data-stu-id="b99f8-193">The <xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType> method is used to obtain a <xref:System.Reflection.MethodBody> object for the test method.</span></span> <span data-ttu-id="b99f8-194">O <xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A> propriedade é usada para obter uma lista de <xref:System.Reflection.ExceptionHandlingClause> objetos e exibir suas propriedades.</span><span class="sxs-lookup"><span data-stu-id="b99f8-194">The <xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A> property is used to obtain a list of <xref:System.Reflection.ExceptionHandlingClause> objects and display their properties.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b99f8-195">Nem todas as linguagens de computador podem gerar <xref:System.Reflection.ExceptionHandlingClauseOptions.Filter?displayProperty=nameWithType> cláusulas.</span><span class="sxs-lookup"><span data-stu-id="b99f8-195">Not all computer languages can generate <xref:System.Reflection.ExceptionHandlingClauseOptions.Filter?displayProperty=nameWithType> clauses.</span></span> <span data-ttu-id="b99f8-196">O exemplo do Visual Basic mostra uma cláusula de filtro, usando um Visual Basic `When` expressão, que é omitido dos exemplos para outros idiomas.</span><span class="sxs-lookup"><span data-stu-id="b99f8-196">The Visual Basic example shows a filter clause, using a Visual Basic `When` expression, which is omitted from the examples for other languages.</span></span>  
  
 <span data-ttu-id="b99f8-197">Esse código é parte de um exemplo maior, localizado no <xref:System.Reflection.MethodBody> tópico da classe.</span><span class="sxs-lookup"><span data-stu-id="b99f8-197">This code is part of a larger example located in the <xref:System.Reflection.MethodBody> class topic.</span></span>  
  
 [!code-cpp[MethodBody#2](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#2)]
 [!code-csharp[MethodBody#2](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#2)]
 [!code-vb[MethodBody#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#2)]  
[!code-cpp[MethodBody#4](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#4)]
[!code-csharp[MethodBody#4](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#4)]
[!code-vb[MethodBody#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#4)]  
[!code-cpp[MethodBody#5](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#5)]
[!code-csharp[MethodBody#5](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#5)]
[!code-vb[MethodBody#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#5)]  
[!code-cpp[MethodBody#7](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#7)]
[!code-csharp[MethodBody#7](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#7)]
[!code-vb[MethodBody#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>